BFS traversed 65654 blocks
Shortest Path - Dijkstra
BEGIN BLOCK
define i32 @main(i32, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = alloca %struct.stat, align 8
  %5 = alloca %struct.sctx_T, align 8
  %6 = alloca %struct.sctx_T, align 8
  %7 = alloca [4097 x i8], align 16
  %8 = alloca [4097 x i8], align 16
  tail call void @mch_early_init() #13
END BLOCK

BEGIN BLOCK
define void @mch_early_init() local_unnamed_addr #0 {
  %1 = tail call i8* @alloc(i64 8192) #13
END BLOCK

BEGIN BLOCK
define noalias i8* @alloc(i64) local_unnamed_addr #0 {
  %2 = tail call i8* @lalloc(i64 %0, i32 1)
END BLOCK

BEGIN BLOCK
define noalias i8* @lalloc(i64, i32) local_unnamed_addr #0 {
  %3 = icmp eq i64 %0, 0
  br i1 %3, label %4, label %6
END BLOCK

BEGIN BLOCK
; <label>:6:                                      ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 %0) #13
END BLOCK

BEGIN BLOCK
declare noalias i8* @malloc(i64) local_unnamed_addr #3
END BLOCK

BEGIN BLOCK
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %29
END BLOCK

BEGIN BLOCK
; <label>:9:                                      ; preds = %6
  %10 = load i1, i1* @lalloc.releasing, align 4
  br i1 %10, label %18, label %11
END BLOCK

BEGIN BLOCK
; <label>:11:                                     ; preds = %9
  br label %15
END BLOCK

BEGIN BLOCK
; <label>:15:                                     ; preds = %12, %11
  store i1 true, i1* @lalloc.releasing, align 4
  tail call void @clear_sb_text(i32 1) #13
END BLOCK

BEGIN BLOCK
define void @clear_sb_text(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 0
  br i1 %2, label %3, label %8
END BLOCK

BEGIN BLOCK
; <label>:8:                                      ; preds = %6, %1
  %9 = phi %struct.msgchunk_S** [ %7, %6 ], [ @last_msgchunk, %1 ]
  %10 = load %struct.msgchunk_S*, %struct.msgchunk_S** %9, align 8, !tbaa !12
  %11 = icmp eq %struct.msgchunk_S* %10, null
  br i1 %11, label %22, label %12
END BLOCK

BEGIN BLOCK
; <label>:12:                                     ; preds = %8
  %13 = bitcast %struct.msgchunk_S** %9 to i64*
  br label %14
END BLOCK

BEGIN BLOCK
; <label>:14:                                     ; preds = %14, %12
  %15 = phi %struct.msgchunk_S* [ %10, %12 ], [ %20, %14 ]
  %16 = getelementptr inbounds %struct.msgchunk_S, %struct.msgchunk_S* %15, i64 0, i32 1
  %17 = bitcast %struct.msgchunk_S** %16 to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !3588
  %19 = bitcast %struct.msgchunk_S* %15 to i8*
  tail call void @vim_free(i8* %19) #13
END BLOCK

BEGIN BLOCK
  store i64 %18, i64* %13, align 8, !tbaa !12
  %20 = inttoptr i64 %18 to %struct.msgchunk_S*
  %21 = icmp eq i64 %18, 0
  br i1 %21, label %22, label %14
END BLOCK

BEGIN BLOCK
  store i32 0, i32* @need_wait_return, align 4, !tbaa !4
  store i32 0, i32* @msg_didany, align 4, !tbaa !4
  %92 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 32), align 4, !tbaa !1766
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %95
END BLOCK

BEGIN BLOCK
; <label>:95:                                     ; preds = %94, %91
  %96 = load i8*, i8** @font_argument, align 8, !tbaa !12
  %97 = icmp eq i8* %96, null
  br i1 %97, label %100, label %98
END BLOCK

BEGIN BLOCK
; <label>:98:                                     ; preds = %95
  %99 = call i8* @set_option_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.3452, i64 0, i64 0), i64 0, i8* nonnull %96, i32 0) #13
END BLOCK

BEGIN BLOCK
define i8* @set_option_value(i8*, i64, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca [2 x i8], align 1
  %6 = tail call i32 @findoption(i8* %0)
END BLOCK

BEGIN BLOCK
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %42
END BLOCK

BEGIN BLOCK
; <label>:8:                                      ; preds = %4
  %9 = tail call i64 @strlen(i8* %0) #16
END BLOCK

BEGIN BLOCK
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %39
END BLOCK

BEGIN BLOCK
; <label>:11:                                     ; preds = %8
  %12 = load i8, i8* %0, align 1, !tbaa !32
  %13 = icmp eq i8 %12, 116
  br i1 %13, label %14, label %39
END BLOCK

BEGIN BLOCK
; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %15, align 1, !tbaa !32
  %17 = icmp eq i8 %16, 95
  br i1 %17, label %18, label %39
END BLOCK

BEGIN BLOCK
; <label>:18:                                     ; preds = %14
  %19 = getelementptr inbounds i8, i8* %0, i64 2
  %20 = load i8, i8* %19, align 1, !tbaa !32
  %21 = zext i8 %20 to i32
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %39, label %23
END BLOCK

BEGIN BLOCK
; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds i8, i8* %0, i64 3
  %25 = load i8, i8* %24, align 1, !tbaa !32
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27
END BLOCK

BEGIN BLOCK
; <label>:27:                                     ; preds = %23
  %28 = zext i8 %25 to i32
  %29 = shl nuw nsw i32 %28, 8
  %30 = or i32 %29, %21
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32
END BLOCK

BEGIN BLOCK
; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #13
END BLOCK

BEGIN BLOCK
  store i8 %20, i8* %33, align 1, !tbaa !32
  %34 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  store i8 %25, i8* %34, align 1, !tbaa !32
  call void @add_termcode(i8* nonnull %33, i8* %2, i32 0) #13
END BLOCK

BEGIN BLOCK
  %35 = load volatile i32, i32* @full_screen, align 4, !tbaa !4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37
END BLOCK

BEGIN BLOCK
; <label>:38:                                     ; preds = %37, %32
  call void @redraw_all_later(i32 50) #13
END BLOCK

BEGIN BLOCK
define void @redraw_all_later(i32) local_unnamed_addr #0 {
  %2 = load %struct.window_S*, %struct.window_S** @firstwin, align 8, !tbaa !12
  %3 = icmp eq %struct.window_S* %2, null
  br i1 %3, label %25, label %4
END BLOCK

BEGIN BLOCK
; <label>:4:                                      ; preds = %1
  %5 = load i32, i32* @exiting, align 4, !tbaa !4
  %6 = icmp eq i32 %5, 0
  %7 = icmp sgt i32 %0, 39
  br label %8
END BLOCK

BEGIN BLOCK
; <label>:8:                                      ; preds = %21, %4
  %9 = phi %struct.window_S* [ %2, %4 ], [ %23, %21 ]
  br i1 %6, label %10, label %21
END BLOCK

BEGIN BLOCK
; <label>:21:                                     ; preds = %20, %17, %10, %8
  %22 = getelementptr inbounds %struct.window_S, %struct.window_S* %9, i64 0, i32 3
  %23 = load %struct.window_S*, %struct.window_S** %22, align 8, !tbaa !12
  %24 = icmp eq %struct.window_S* %23, null
  br i1 %24, label %25, label %8
END BLOCK

BEGIN BLOCK
  br label %128
END BLOCK

BEGIN BLOCK
; <label>:128:                                    ; preds = %127, %122
  tail call void @set_no_hlsearch(i32 0) #13
END BLOCK

BEGIN BLOCK
define void @set_no_hlsearch(i32) local_unnamed_addr #0 {
  store i32 %0, i32* @no_hlsearch, align 4, !tbaa !4
  %2 = icmp eq i32 %0, 0
  %3 = load i32, i32* @p_hls, align 4
  %4 = icmp ne i32 %3, 0
  %5 = and i1 %2, %4
  %6 = zext i1 %5 to i64
  tail call void @set_vim_var_nr(i32 56, i64 %6) #13
END BLOCK

BEGIN BLOCK
define void @set_vim_var_nr(i32, i64) local_unnamed_addr #0 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [99 x %struct.vimvar], [99 x %struct.vimvar]* @vimvars, i64 0, i64 %3, i32 1, i32 0, i32 2, i32 0
  store i64 %1, i64* %4, align 8, !tbaa !32
  ret void
END BLOCK

BEGIN BLOCK
  %87 = load i32, i32* @do_profiling, align 4, !tbaa !4
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %90
END BLOCK

BEGIN BLOCK
; <label>:89:                                     ; preds = %84
  call void @prof_child_exit(%struct.timeval* nonnull %3) #13
END BLOCK

BEGIN BLOCK
define void @prof_child_exit(%struct.timeval* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %struct.timeval*
  %4 = tail call %struct.funccall_S* @get_current_funccal() #13
END BLOCK

BEGIN BLOCK
define %struct.funccall_S* @get_current_funccal() local_unnamed_addr #5 {
  %1 = load %struct.funccall_S*, %struct.funccall_S** @current_funccal, align 8, !tbaa !12
  ret %struct.funccall_S* %1
END BLOCK

BEGIN BLOCK
  %3 = icmp eq %struct.funccall_S* %2, null
  br i1 %3, label %13, label %4
END BLOCK

BEGIN BLOCK
; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.funccall_S, %struct.funccall_S* %2, i64 0, i32 0
  %6 = load %struct.ufunc_T*, %struct.ufunc_T** %5, align 8, !tbaa !598
  %7 = getelementptr inbounds %struct.ufunc_T, %struct.ufunc_T* %6, i64 0, i32 18
  %8 = load i32, i32* %7, align 8, !tbaa !607
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10
END BLOCK

BEGIN BLOCK
; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.funccall_S, %struct.funccall_S* %2, i64 0, i32 14
  %12 = tail call i32 @gettimeofday(%struct.timeval* nonnull %11, i8* null) #13
END BLOCK

BEGIN BLOCK
  br label %13
END BLOCK

BEGIN BLOCK
  br label %17
END BLOCK

BEGIN BLOCK
; <label>:17:                                     ; preds = %16, %13
  %18 = load i8*, i8** @p_sh, align 8, !tbaa !12
  %19 = load i8, i8* %18, align 1, !tbaa !32
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24
END BLOCK

BEGIN BLOCK
; <label>:24:                                     ; preds = %17
  %25 = load volatile i32, i32* @hold_gui_events, align 4, !tbaa !4
  %26 = add nsw i32 %25, 1
  store volatile i32 %26, i32* @hold_gui_events, align 4, !tbaa !4
  call void @tag_freematch() #13
END BLOCK

BEGIN BLOCK
define void @tag_freematch() local_unnamed_addr #0 {
  %1 = load i8*, i8** @tagmatchname, align 8, !tbaa !12
  %2 = icmp eq i8* %1, null
  br i1 %2, label %4, label %3
END BLOCK

BEGIN BLOCK
; <label>:3:                                      ; preds = %0
  tail call void @vim_free(i8* nonnull %1) #13
END BLOCK

BEGIN BLOCK
  store i8* null, i8** @tagmatchname, align 8, !tbaa !12
  br label %4
END BLOCK

BEGIN BLOCK
  %27 = icmp eq i8* %0, null
  br i1 %27, label %32, label %28
END BLOCK

BEGIN BLOCK
; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** @p_sxq, align 8, !tbaa !12
  %30 = load i8, i8* %29, align 1, !tbaa !32
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34
END BLOCK

BEGIN BLOCK
; <label>:34:                                     ; preds = %28
  %35 = load i8*, i8** @p_sxe, align 8, !tbaa !12
  %36 = load i8, i8* %35, align 1, !tbaa !32
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq i8 %30, 40
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %45
END BLOCK

BEGIN BLOCK
; <label>:45:                                     ; preds = %40, %34
  %46 = phi i8* [ %29, %34 ], [ %44, %40 ]
  %47 = phi i8* [ %0, %34 ], [ %43, %40 ]
  %48 = call i64 @strlen(i8* %47) #16
END BLOCK

BEGIN BLOCK
  %49 = call i64 @strlen(i8* %46) #16
END BLOCK

BEGIN BLOCK
  %50 = shl i64 %49, 1
  %51 = add i64 %48, 1
  %52 = add i64 %51, %50
  %53 = call i8* @lalloc(i64 %52, i32 1) #13
END BLOCK

BEGIN BLOCK
  %54 = icmp eq i8* %53, null
  br i1 %54, label %73, label %55
END BLOCK

BEGIN BLOCK
; <label>:55:                                     ; preds = %45
  %56 = load i8*, i8** @p_sxq, align 8, !tbaa !12
  %57 = call i8* @strcpy(i8* nonnull %53, i8* %56) #13
END BLOCK

BEGIN BLOCK
  %58 = call i8* @strcat(i8* nonnull %53, i8* %47) #13
END BLOCK

BEGIN BLOCK
  %59 = load i8*, i8** @p_sxq, align 8, !tbaa !12
  %60 = load i8, i8* %59, align 1, !tbaa !32
  switch i8 %60, label %65 [
    i8 40, label %66
    i8 34, label %61
  ]

; <label>:61:                                     ; preds = %55
  %62 = getelementptr inbounds i8, i8* %59, i64 1
  %63 = load i8, i8* %62, align 1, !tbaa !32
  %64 = icmp eq i8 %63, 40
  br i1 %64, label %66, label %65
END BLOCK

BEGIN BLOCK
; <label>:65:                                     ; preds = %61, %55
  br label %66
END BLOCK

BEGIN BLOCK
  br i1 %290, label %311, label %314
END BLOCK

BEGIN BLOCK
; <label>:314:                                    ; preds = %311, %309
  store i8* null, i8** @extra_shell_arg, align 8, !tbaa !12
  store i1 false, i1* @show_shell_mess, align 4
  call void @vim_free(i8* nonnull %166) #13
END BLOCK

BEGIN BLOCK
  %315 = icmp eq i32 %310, 0
  br i1 %315, label %328, label %316
END BLOCK

BEGIN BLOCK
; <label>:328:                                    ; preds = %314
  %329 = call %struct._IO_FILE* @fopen(i8* nonnull %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96.15471, i64 0, i64 0))
END BLOCK

BEGIN BLOCK
  %330 = icmp eq %struct._IO_FILE* %329, null
  br i1 %330, label %331, label %336
END BLOCK

BEGIN BLOCK
; <label>:336:                                    ; preds = %328
  %337 = call i32 @fseek(%struct._IO_FILE* nonnull %329, i64 0, i32 2)
END BLOCK

BEGIN BLOCK
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #3
END BLOCK

BEGIN BLOCK
  %338 = call i64 @ftell(%struct._IO_FILE* nonnull %329)
END BLOCK

BEGIN BLOCK
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #3
END BLOCK

BEGIN BLOCK
  %339 = call i32 @fseek(%struct._IO_FILE* nonnull %329, i64 0, i32 0)
END BLOCK

BEGIN BLOCK
  %340 = icmp slt i64 %338, 0
  br i1 %340, label %346, label %341
END BLOCK

BEGIN BLOCK
; <label>:341:                                    ; preds = %336
  %342 = add nsw i64 %338, 1
  %343 = call i8* @alloc(i64 %342) #13
END BLOCK

BEGIN BLOCK
  %344 = ptrtoint i8* %343 to i64
  %345 = icmp eq i8* %343, null
  br i1 %345, label %346, label %349
END BLOCK

BEGIN BLOCK
; <label>:349:                                    ; preds = %341
  %350 = call i64 @fread(i8* nonnull %343, i64 1, i64 %338, %struct._IO_FILE* nonnull %329)
END BLOCK

BEGIN BLOCK
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #3
END BLOCK

BEGIN BLOCK
  %72 = icmp eq i64 %71, 1
  br i1 %72, label %73, label %76
END BLOCK

BEGIN BLOCK
; <label>:73:                                     ; preds = %67
  %74 = call i32 @memcmp(i8* nonnull %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.49, i64 0, i64 0), i64 9) #16
END BLOCK

BEGIN BLOCK
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4
END BLOCK

BEGIN BLOCK
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76
END BLOCK

BEGIN BLOCK
; <label>:79:                                     ; preds = %73
  %80 = call i32 @get2c(%struct._IO_FILE* nonnull %57) #13
END BLOCK

BEGIN BLOCK
  switch i32 %80, label %111 [
    i32 32770, label %81
    i32 2, label %114
  ]

; <label>:81:                                     ; preds = %79
  %82 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !tbaa !12
  %83 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %82, i64 0, i32 110
  %84 = load i8*, i8** %83, align 8, !tbaa !259
  %85 = load i8, i8* %84, align 1, !tbaa !32
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %90
END BLOCK

BEGIN BLOCK
; <label>:90:                                     ; preds = %81
  %91 = call %struct.cryptstate_T* @crypt_create_from_file(%struct._IO_FILE* nonnull %57, i8* %84) #13
END BLOCK

BEGIN BLOCK
define %struct.cryptstate_T* @crypt_create_from_file(%struct._IO_FILE* nocapture, i8*) local_unnamed_addr #0 {
  %3 = alloca [12 x i8], align 1
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #13
END BLOCK

BEGIN BLOCK
  %5 = call i64 @fread(i8* nonnull %4, i64 12, i64 1, %struct._IO_FILE* %0)
END BLOCK

BEGIN BLOCK
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %49
END BLOCK

BEGIN BLOCK
; <label>:7:                                      ; preds = %2
  %8 = call i32 @crypt_method_nr_from_magic(i8* nonnull %4, i32 12)
END BLOCK

BEGIN BLOCK
define i32 @crypt_method_nr_from_magic(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 12
  br i1 %3, label %18, label %4
END BLOCK

BEGIN BLOCK
; <label>:4:                                      ; preds = %2
  %5 = tail call i32 @memcmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.5431, i64 0, i64 0), i64 12) #16
END BLOCK

BEGIN BLOCK
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7
END BLOCK

BEGIN BLOCK
; <label>:7:                                      ; preds = %4
  %8 = tail call i32 @memcmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.5432, i64 0, i64 0), i64 12) #16
END BLOCK

BEGIN BLOCK
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %20
END BLOCK

BEGIN BLOCK
; <label>:20:                                     ; preds = %7
  %21 = tail call i32 @memcmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.5434, i64 0, i64 0), i64 12) #16
END BLOCK

BEGIN BLOCK
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %18, label %23
END BLOCK

BEGIN BLOCK
; <label>:23:                                     ; preds = %20
  %24 = tail call i64 @strlen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @crypt_magic_head, i64 0, i64 0)) #16
END BLOCK

BEGIN BLOCK
  %25 = trunc i64 %24 to i32
  %26 = icmp sgt i32 %25, %1
  br i1 %26, label %18, label %10
END BLOCK

BEGIN BLOCK
; <label>:10:                                     ; preds = %23
  %11 = shl i64 %24, 32
  %12 = ashr exact i64 %11, 32
  %13 = tail call i32 @memcmp(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @crypt_magic_head, i64 0, i64 0), i64 %12) #16
END BLOCK

BEGIN BLOCK
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18
END BLOCK

BEGIN BLOCK
; <label>:15:                                     ; preds = %10
  %16 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5433, i64 0, i64 0), i32 5) #13
END BLOCK

BEGIN BLOCK
  %17 = tail call i32 @emsg(i8* %16) #13
END BLOCK

BEGIN BLOCK
  br label %18
END BLOCK

BEGIN BLOCK
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %49, label %10
END BLOCK

BEGIN BLOCK
; <label>:10:                                     ; preds = %7
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [3 x %struct.cryptmethod_T], [3 x %struct.cryptmethod_T]* @cryptmethods, i64 0, i64 %11, i32 2
  %13 = load i32, i32* %12, align 16, !tbaa !2402
  %14 = getelementptr inbounds [3 x %struct.cryptmethod_T], [3 x %struct.cryptmethod_T]* @cryptmethods, i64 0, i64 %11, i32 3
  %15 = load i32, i32* %14, align 4, !tbaa !2403
  %16 = add i32 %15, %13
  %17 = add i32 %16, 12
  %18 = sext i32 %17 to i64
  %19 = tail call i8* @alloc(i64 %18) #13
END BLOCK

BEGIN BLOCK
  %20 = icmp eq i8* %19, null
  br i1 %20, label %49, label %21
END BLOCK

BEGIN BLOCK
; <label>:21:                                     ; preds = %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %19, i8* nonnull %4, i64 12, i32 1, i1 false)
END BLOCK

BEGIN BLOCK
  %22 = icmp sgt i32 %17, 12
  %23 = getelementptr inbounds i8, i8* %19, i64 12
  br i1 %22, label %24, label %29
END BLOCK

BEGIN BLOCK
; <label>:24:                                     ; preds = %21
  %25 = sext i32 %16 to i64
  %26 = tail call i64 @fread(i8* nonnull %23, i64 %25, i64 1, %struct._IO_FILE* %0)
END BLOCK

BEGIN BLOCK
  %27 = icmp eq i64 %26, 1
  br i1 %27, label %29, label %28
END BLOCK

BEGIN BLOCK
; <label>:28:                                     ; preds = %24
  tail call void @vim_free(i8* nonnull %19) #13
END BLOCK

BEGIN BLOCK
  br label %49
END BLOCK

BEGIN BLOCK
  %92 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %15, i64 0, i32 2
  store %struct.cryptstate_T* %91, %struct.cryptstate_T** %92, align 8, !tbaa !260
  %93 = icmp eq %struct.cryptstate_T* %91, null
  br i1 %93, label %94, label %97
END BLOCK

BEGIN BLOCK
; <label>:97:                                     ; preds = %90
  %98 = getelementptr inbounds %struct.cryptstate_T, %struct.cryptstate_T* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 8, !tbaa !270
  %100 = call i32 @crypt_whole_undofile(i32 %99) #13
END BLOCK

BEGIN BLOCK
define i32 @crypt_whole_undofile(i32) local_unnamed_addr #10 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [3 x %struct.cryptmethod_T], [3 x %struct.cryptmethod_T]* @cryptmethods, i64 0, i64 %2, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !2400
  ret i32 %4
END BLOCK

BEGIN BLOCK
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %114, label %102
END BLOCK

BEGIN BLOCK
; <label>:114:                                    ; preds = %108, %97, %79
  %115 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %15, i64 0, i32 3
  %116 = load i8*, i8** %115, align 8, !tbaa !261
  %117 = icmp eq i8* %116, null
  br i1 %117, label %154, label %118
END BLOCK

BEGIN BLOCK
; <label>:154:                                    ; preds = %114
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %156 = call i64 @fread(i8* nonnull %16, i64 32, i64 1, %struct._IO_FILE* %155) #13
END BLOCK

BEGIN BLOCK
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %161, label %158
END BLOCK

BEGIN BLOCK
; <label>:161:                                    ; preds = %154, %139
  %162 = load i8*, i8** %115, align 8, !tbaa !261
  %163 = icmp eq i8* %162, null
  br i1 %163, label %225, label %164
END BLOCK

BEGIN BLOCK
; <label>:225:                                    ; preds = %161
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %227 = call i32 @get4c(%struct._IO_FILE* %226) #13
END BLOCK

BEGIN BLOCK
  br label %228
END BLOCK

BEGIN BLOCK
; <label>:228:                                    ; preds = %225, %210
  %229 = phi i32 [ %224, %210 ], [ %227, %225 ]
  %230 = call i32 @memcmp(i8* %1, i8* nonnull %16, i64 32) #16
END BLOCK

BEGIN BLOCK
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %238
END BLOCK

BEGIN BLOCK
; <label>:232:                                    ; preds = %228
  %233 = sext i32 %229 to i64
  %234 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !tbaa !12
  %235 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %234, i64 0, i32 0, i32 0
  %236 = load i64, i64* %235, align 8, !tbaa !91
  %237 = icmp eq i64 %236, %233
  br i1 %237, label %246, label %238
END BLOCK

BEGIN BLOCK
; <label>:246:                                    ; preds = %232
  %247 = load i8*, i8** %115, align 8, !tbaa !261
  %248 = icmp eq i8* %247, null
  br i1 %248, label %310, label %249
END BLOCK

BEGIN BLOCK
; <label>:310:                                    ; preds = %246
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %312 = call i32 @get4c(%struct._IO_FILE* %311) #13
END BLOCK

BEGIN BLOCK
  br label %313
END BLOCK

BEGIN BLOCK
; <label>:313:                                    ; preds = %310, %295
  %314 = phi i32 [ %309, %295 ], [ %312, %310 ]
  %315 = sext i32 %314 to i64
  %316 = icmp slt i32 %314, 0
  br i1 %316, label %3030, label %317
END BLOCK

BEGIN BLOCK
; <label>:317:                                    ; preds = %313
  %318 = icmp eq i32 %314, 0
  br i1 %318, label %382, label %319
END BLOCK

BEGIN BLOCK
; <label>:382:                                    ; preds = %379, %317
  %383 = phi i8* [ %380, %379 ], [ null, %317 ]
  %384 = phi i64 [ %381, %379 ], [ 0, %317 ]
  %385 = load i8*, i8** %115, align 8, !tbaa !261
  %386 = icmp eq i8* %385, null
  br i1 %386, label %448, label %387
END BLOCK

BEGIN BLOCK
; <label>:448:                                    ; preds = %382
  %449 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %450 = call i32 @get4c(%struct._IO_FILE* %449) #13
END BLOCK

BEGIN BLOCK
  br label %451
END BLOCK

BEGIN BLOCK
; <label>:451:                                    ; preds = %448, %433
  %452 = phi i32 [ %447, %433 ], [ %450, %448 ]
  %453 = sext i32 %452 to i64
  %454 = load i8*, i8** %115, align 8, !tbaa !261
  %455 = icmp eq i8* %454, null
  br i1 %455, label %517, label %456
END BLOCK

BEGIN BLOCK
; <label>:517:                                    ; preds = %451
  %518 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %519 = call i32 @get4c(%struct._IO_FILE* %518) #13
END BLOCK

BEGIN BLOCK
  br label %520
END BLOCK

BEGIN BLOCK
; <label>:520:                                    ; preds = %517, %502
  %521 = phi i32 [ %516, %502 ], [ %519, %517 ]
  %522 = or i32 %521, %452
  %523 = icmp slt i32 %522, 0
  br i1 %523, label %524, label %527
END BLOCK

BEGIN BLOCK
; <label>:527:                                    ; preds = %520
  %528 = load i8*, i8** %115, align 8, !tbaa !261
  %529 = icmp eq i8* %528, null
  br i1 %529, label %591, label %530
END BLOCK

BEGIN BLOCK
; <label>:591:                                    ; preds = %527
  %592 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %593 = call i32 @get4c(%struct._IO_FILE* %592) #13
END BLOCK

BEGIN BLOCK
  br label %594
END BLOCK

BEGIN BLOCK
; <label>:594:                                    ; preds = %591, %576
  %595 = phi i32 [ %590, %576 ], [ %593, %591 ]
  %596 = sext i32 %595 to i64
  %597 = load i8*, i8** %115, align 8, !tbaa !261
  %598 = icmp eq i8* %597, null
  br i1 %598, label %660, label %599
END BLOCK

BEGIN BLOCK
; <label>:660:                                    ; preds = %594
  %661 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %662 = call i32 @get4c(%struct._IO_FILE* %661) #13
END BLOCK

BEGIN BLOCK
  br label %663
END BLOCK

BEGIN BLOCK
; <label>:663:                                    ; preds = %660, %645
  %664 = phi i32 [ %659, %645 ], [ %662, %660 ]
  %665 = sext i32 %664 to i64
  %666 = load i8*, i8** %115, align 8, !tbaa !261
  %667 = icmp eq i8* %666, null
  br i1 %667, label %729, label %668
END BLOCK

BEGIN BLOCK
; <label>:729:                                    ; preds = %663
  %730 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %731 = call i32 @get4c(%struct._IO_FILE* %730) #13
END BLOCK

BEGIN BLOCK
  br label %732
END BLOCK

BEGIN BLOCK
; <label>:732:                                    ; preds = %729, %714
  %733 = phi i32 [ %728, %714 ], [ %731, %729 ]
  %734 = sext i32 %733 to i64
  %735 = load i8*, i8** %115, align 8, !tbaa !261
  %736 = icmp eq i8* %735, null
  br i1 %736, label %798, label %737
END BLOCK

BEGIN BLOCK
; <label>:798:                                    ; preds = %732
  %799 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %800 = call i32 @get4c(%struct._IO_FILE* %799) #13
END BLOCK

BEGIN BLOCK
  br label %801
END BLOCK

BEGIN BLOCK
; <label>:801:                                    ; preds = %798, %783
  %802 = phi i32 [ %797, %783 ], [ %800, %798 ]
  %803 = sext i32 %802 to i64
  %804 = load i8*, i8** %115, align 8, !tbaa !261
  %805 = icmp eq i8* %804, null
  br i1 %805, label %867, label %806
END BLOCK

BEGIN BLOCK
; <label>:867:                                    ; preds = %801
  %868 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %869 = call i32 @get4c(%struct._IO_FILE* %868) #13
END BLOCK

BEGIN BLOCK
  br label %870
END BLOCK

BEGIN BLOCK
; <label>:870:                                    ; preds = %867, %852
  %871 = phi i32 [ %866, %852 ], [ %869, %867 ]
  %872 = sext i32 %871 to i64
  %873 = load i8*, i8** %115, align 8, !tbaa !261
  %874 = icmp eq i8* %873, null
  br i1 %874, label %936, label %875
END BLOCK

BEGIN BLOCK
; <label>:936:                                    ; preds = %870
  %937 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %938 = call i32 @get4c(%struct._IO_FILE* %937) #13
END BLOCK

BEGIN BLOCK
  br label %939
END BLOCK

BEGIN BLOCK
; <label>:939:                                    ; preds = %936, %921
  %940 = phi i32 [ %935, %921 ], [ %938, %936 ]
  %941 = sext i32 %940 to i64
  %942 = load i8*, i8** %115, align 8, !tbaa !261
  %943 = icmp eq i8* %942, null
  br i1 %943, label %1029, label %944
END BLOCK

BEGIN BLOCK
; <label>:944:                                    ; preds = %939
  %945 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %945) #13
END BLOCK

BEGIN BLOCK
  %946 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %15, i64 0, i32 4
  %947 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %15, i64 0, i32 5
  %948 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %15, i64 0, i32 2
  %949 = load i64, i64* %946, align 8, !tbaa !262
  br label %950
END BLOCK

BEGIN BLOCK
; <label>:950:                                    ; preds = %966, %944
  %951 = phi i64 [ %949, %944 ], [ %976, %966 ]
  %952 = phi i8* [ %945, %944 ], [ %979, %966 ]
  %953 = phi i32 [ 8, %944 ], [ %978, %966 ]
  %954 = load i64, i64* %947, align 8, !tbaa !272
  %955 = icmp ult i64 %951, %954
  br i1 %955, label %966, label %956
END BLOCK

BEGIN BLOCK
; <label>:956:                                    ; preds = %950
  %957 = load i8*, i8** %115, align 8, !tbaa !261
  %958 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %959 = call i64 @fread(i8* %957, i64 1, i64 8192, %struct._IO_FILE* %958) #13
END BLOCK

BEGIN BLOCK
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %981, label %961
END BLOCK

BEGIN BLOCK
; <label>:981:                                    ; preds = %956
  store i64 0, i64* %7, align 8
  br label %998
END BLOCK

BEGIN BLOCK
; <label>:998:                                    ; preds = %982, %981
  %999 = phi i8 [ %997, %982 ], [ 0, %981 ]
  %1000 = phi i8 [ %995, %982 ], [ 0, %981 ]
  %1001 = phi i8 [ %993, %982 ], [ 0, %981 ]
  %1002 = phi i8 [ %991, %982 ], [ 0, %981 ]
  %1003 = phi i8 [ %989, %982 ], [ 0, %981 ]
  %1004 = phi i8 [ %987, %982 ], [ 0, %981 ]
  %1005 = phi i8 [ %985, %982 ], [ 0, %981 ]
  %1006 = phi i8 [ %983, %982 ], [ 0, %981 ]
  %1007 = zext i8 %1006 to i64
  %1008 = shl nuw nsw i64 %1007, 8
  %1009 = zext i8 %1005 to i64
  %1010 = or i64 %1008, %1009
  %1011 = shl nuw nsw i64 %1010, 8
  %1012 = zext i8 %1004 to i64
  %1013 = or i64 %1011, %1012
  %1014 = shl nuw nsw i64 %1013, 8
  %1015 = zext i8 %1003 to i64
  %1016 = or i64 %1014, %1015
  %1017 = shl i64 %1016, 8
  %1018 = zext i8 %1002 to i64
  %1019 = or i64 %1017, %1018
  %1020 = shl i64 %1019, 8
  %1021 = zext i8 %1001 to i64
  %1022 = or i64 %1020, %1021
  %1023 = shl i64 %1022, 8
  %1024 = zext i8 %1000 to i64
  %1025 = or i64 %1023, %1024
  %1026 = shl i64 %1025, 8
  %1027 = zext i8 %999 to i64
  %1028 = or i64 %1026, %1027
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %945) #13
END BLOCK

BEGIN BLOCK
  br label %1035
END BLOCK

BEGIN BLOCK
; <label>:1035:                                   ; preds = %1029, %998
  %1036 = phi %struct.cryptstate_T** [ %948, %998 ], [ %1034, %1029 ]
  %1037 = phi i64* [ %947, %998 ], [ %1033, %1029 ]
  %1038 = phi i64* [ %946, %998 ], [ %1032, %1029 ]
  %1039 = phi i64 [ %1028, %998 ], [ %1031, %1029 ]
  %1040 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  %1041 = bitcast i32* %9 to i8*
  %1042 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %1043 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  %1044 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 3
  br label %1045
END BLOCK

BEGIN BLOCK
; <label>:1045:                                   ; preds = %1204, %1035
  %1046 = phi i64 [ %1206, %1204 ], [ 0, %1035 ]
  br label %1047
END BLOCK

BEGIN BLOCK
; <label>:1047:                                   ; preds = %1209, %1045
  %1048 = load i8*, i8** %115, align 8, !tbaa !261
  %1049 = icmp eq i8* %1048, null
  br i1 %1049, label %1089, label %1050
END BLOCK

BEGIN BLOCK
; <label>:1089:                                   ; preds = %1047
  %1090 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1091 = call i32 @getc(%struct._IO_FILE* %1090) #13
END BLOCK

BEGIN BLOCK
  br label %1092
END BLOCK

BEGIN BLOCK
; <label>:1092:                                   ; preds = %1089, %1086
  %1093 = phi i32 [ %1088, %1086 ], [ %1091, %1089 ]
  %1094 = add i32 %1093, 1
  %1095 = icmp ult i32 %1094, 2
  br i1 %1095, label %1256, label %1096
END BLOCK

BEGIN BLOCK
; <label>:1256:                                   ; preds = %1092
  %1257 = icmp sgt i32 %802, 0
  br i1 %1257, label %1258, label %1263
END BLOCK

BEGIN BLOCK
; <label>:1263:                                   ; preds = %1258, %1256
  %1264 = phi i8* [ %1260, %1258 ], [ null, %1256 ]
  %1265 = phi %struct.u_header** [ %1261, %1258 ], [ null, %1256 ]
  %1266 = bitcast i16* %4 to i8*
  %1267 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  %1268 = bitcast i64* %7 to i8*
  %1269 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 1
  %1270 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 2
  %1271 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 3
  %1272 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 4
  %1273 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 5
  %1274 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 6
  %1275 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 7
  br label %1276
END BLOCK

BEGIN BLOCK
; <label>:1276:                                   ; preds = %2820, %1263
  %1277 = phi i64 [ 0, %1263 ], [ %2821, %2820 ]
  %1278 = load i8*, i8** %115, align 8, !tbaa !261
  %1279 = icmp eq i8* %1278, null
  br i1 %1279, label %1324, label %1280
END BLOCK

BEGIN BLOCK
; <label>:1324:                                   ; preds = %1276
  %1325 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1326 = call i32 @get2c(%struct._IO_FILE* %1325) #13
END BLOCK

BEGIN BLOCK
  br label %1327
END BLOCK

BEGIN BLOCK
; <label>:1327:                                   ; preds = %1324, %1317
  %1328 = phi i32 [ %1323, %1317 ], [ %1326, %1324 ]
  %1329 = icmp eq i32 %1328, 24528
  br i1 %1329, label %1330, label %2824
END BLOCK

BEGIN BLOCK
; <label>:1330:                                   ; preds = %1327
  %1331 = icmp slt i64 %1277, %803
  br i1 %1331, label %1335, label %1332
END BLOCK

BEGIN BLOCK
; <label>:1335:                                   ; preds = %1330
  %1336 = call i8* @lalloc(i64 568, i32 0) #13
END BLOCK

BEGIN BLOCK
  %1337 = icmp eq i8* %1336, null
  br i1 %1337, label %3033, label %1338
END BLOCK

BEGIN BLOCK
; <label>:1338:                                   ; preds = %1335
  call void @llvm.memset.p0i8.i64(i8* nonnull %1336, i8 0, i64 568, i32 8, i1 false) #13
END BLOCK

BEGIN BLOCK
  %1339 = load i8*, i8** %115, align 8, !tbaa !261
  %1340 = icmp eq i8* %1339, null
  br i1 %1340, label %1395, label %1341
END BLOCK

BEGIN BLOCK
; <label>:1395:                                   ; preds = %1338
  %1396 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1397 = call i32 @get4c(%struct._IO_FILE* %1396) #13
END BLOCK

BEGIN BLOCK
  br label %1398
END BLOCK

BEGIN BLOCK
; <label>:1398:                                   ; preds = %1395, %1380
  %1399 = phi i32 [ %1394, %1380 ], [ %1397, %1395 ]
  %1400 = sext i32 %1399 to i64
  %1401 = bitcast i8* %1336 to i64*
  store i64 %1400, i64* %1401, align 8, !tbaa !32
  %1402 = load i8*, i8** %115, align 8, !tbaa !261
  %1403 = icmp eq i8* %1402, null
  br i1 %1403, label %1458, label %1404
END BLOCK

BEGIN BLOCK
; <label>:1458:                                   ; preds = %1398
  %1459 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1460 = call i32 @get4c(%struct._IO_FILE* %1459) #13
END BLOCK

BEGIN BLOCK
  br label %1461
END BLOCK

BEGIN BLOCK
; <label>:1461:                                   ; preds = %1458, %1443
  %1462 = phi i32 [ %1457, %1443 ], [ %1460, %1458 ]
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds i8, i8* %1336, i64 8
  %1465 = bitcast i8* %1464 to i64*
  store i64 %1463, i64* %1465, align 8, !tbaa !32
  %1466 = load i8*, i8** %115, align 8, !tbaa !261
  %1467 = icmp eq i8* %1466, null
  br i1 %1467, label %1522, label %1468
END BLOCK

BEGIN BLOCK
; <label>:1522:                                   ; preds = %1461
  %1523 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1524 = call i32 @get4c(%struct._IO_FILE* %1523) #13
END BLOCK

BEGIN BLOCK
  br label %1525
END BLOCK

BEGIN BLOCK
; <label>:1525:                                   ; preds = %1522, %1507
  %1526 = phi i32 [ %1521, %1507 ], [ %1524, %1522 ]
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds i8, i8* %1336, i64 16
  %1529 = bitcast i8* %1528 to i64*
  store i64 %1527, i64* %1529, align 8, !tbaa !32
  %1530 = load i8*, i8** %115, align 8, !tbaa !261
  %1531 = icmp eq i8* %1530, null
  br i1 %1531, label %1586, label %1532
END BLOCK

BEGIN BLOCK
; <label>:1586:                                   ; preds = %1525
  %1587 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1588 = call i32 @get4c(%struct._IO_FILE* %1587) #13
END BLOCK

BEGIN BLOCK
  br label %1589
END BLOCK

BEGIN BLOCK
; <label>:1589:                                   ; preds = %1586, %1571
  %1590 = phi i32 [ %1585, %1571 ], [ %1588, %1586 ]
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds i8, i8* %1336, i64 24
  %1593 = bitcast i8* %1592 to i64*
  store i64 %1591, i64* %1593, align 8, !tbaa !32
  %1594 = load i8*, i8** %115, align 8, !tbaa !261
  %1595 = icmp eq i8* %1594, null
  br i1 %1595, label %1650, label %1596
END BLOCK

BEGIN BLOCK
; <label>:1650:                                   ; preds = %1589
  %1651 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1652 = call i32 @get4c(%struct._IO_FILE* %1651) #13
END BLOCK

BEGIN BLOCK
  br label %1653
END BLOCK

BEGIN BLOCK
; <label>:1653:                                   ; preds = %1650, %1635
  %1654 = phi i32 [ %1649, %1635 ], [ %1652, %1650 ]
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds i8, i8* %1336, i64 32
  %1657 = bitcast i8* %1656 to i64*
  store i64 %1655, i64* %1657, align 8, !tbaa !231
  %1658 = icmp slt i32 %1654, 1
  br i1 %1658, label %1659, label %1662
END BLOCK

BEGIN BLOCK
; <label>:1662:                                   ; preds = %1653
  %1663 = getelementptr inbounds i8, i8* %1336, i64 64
  %1664 = bitcast i8* %1663 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1664) #13
END BLOCK

BEGIN BLOCK
define internal fastcc void @unserialize_pos(%struct.bufinfo_T* nocapture, %struct.pos_T* nocapture) unnamed_addr #0 {
  %3 = alloca [4 x i8], align 1
  %4 = getelementptr inbounds %struct.bufinfo_T, %struct.bufinfo_T* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8, !tbaa !261
  %6 = icmp eq i8* %5, null
  br i1 %6, label %27, label %7
END BLOCK

BEGIN BLOCK
; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
END BLOCK

BEGIN BLOCK
  %9 = call fastcc i32 @undo_read(%struct.bufinfo_T* nonnull %0, i8* nonnull %8, i64 4) #13
END BLOCK

BEGIN BLOCK
  %10 = load i8, i8* %8, align 1, !tbaa !32
  %11 = zext i8 %10 to i32
  %12 = shl nuw i32 %11, 24
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %14 = load i8, i8* %13, align 1, !tbaa !32
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = or i32 %16, %12
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %19 = load i8, i8* %18, align 1, !tbaa !32
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %17, %21
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  %24 = load i8, i8* %23, align 1, !tbaa !32
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
END BLOCK

BEGIN BLOCK
  br label %31
END BLOCK

BEGIN BLOCK
  %1665 = load i8*, i8** %115, align 8, !tbaa !261
  %1666 = icmp eq i8* %1665, null
  br i1 %1666, label %1721, label %1667
END BLOCK

BEGIN BLOCK
; <label>:1721:                                   ; preds = %1662
  %1722 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1723 = call i32 @get4c(%struct._IO_FILE* %1722) #13
END BLOCK

BEGIN BLOCK
  br label %1724
END BLOCK

BEGIN BLOCK
; <label>:1724:                                   ; preds = %1721, %1706
  %1725 = phi i32 [ %1720, %1706 ], [ %1723, %1721 ]
  %1726 = sext i32 %1725 to i64
  %1727 = getelementptr inbounds i8, i8* %1336, i64 80
  %1728 = bitcast i8* %1727 to i64*
  store i64 %1726, i64* %1728, align 8, !tbaa !238
  %1729 = load i8*, i8** %115, align 8, !tbaa !261
  %1730 = icmp eq i8* %1729, null
  br i1 %1730, label %1775, label %1731
END BLOCK

BEGIN BLOCK
; <label>:1775:                                   ; preds = %1724
  %1776 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1777 = call i32 @get2c(%struct._IO_FILE* %1776) #13
END BLOCK

BEGIN BLOCK
  br label %1778
END BLOCK

BEGIN BLOCK
; <label>:1778:                                   ; preds = %1775, %1768
  %1779 = phi i32 [ %1774, %1768 ], [ %1777, %1775 ]
  %1780 = getelementptr inbounds i8, i8* %1336, i64 88
  %1781 = bitcast i8* %1780 to i32*
  store i32 %1779, i32* %1781, align 8, !tbaa !241
  %1782 = getelementptr inbounds i8, i8* %1336, i64 96
  %1783 = bitcast i8* %1782 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1783) #13
END BLOCK

BEGIN BLOCK
  %1784 = getelementptr inbounds i8, i8* %1336, i64 112
  %1785 = bitcast i8* %1784 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1785) #13
END BLOCK

BEGIN BLOCK
  %1786 = getelementptr inbounds i8, i8* %1336, i64 128
  %1787 = bitcast i8* %1786 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1787) #13
END BLOCK

BEGIN BLOCK
  %1788 = getelementptr inbounds i8, i8* %1336, i64 144
  %1789 = bitcast i8* %1788 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1789) #13
END BLOCK

BEGIN BLOCK
  %1790 = getelementptr inbounds i8, i8* %1336, i64 160
  %1791 = bitcast i8* %1790 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1791) #13
END BLOCK

BEGIN BLOCK
  %1792 = getelementptr inbounds i8, i8* %1336, i64 176
  %1793 = bitcast i8* %1792 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1793) #13
END BLOCK

BEGIN BLOCK
  %1794 = getelementptr inbounds i8, i8* %1336, i64 192
  %1795 = bitcast i8* %1794 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1795) #13
END BLOCK

BEGIN BLOCK
  %1796 = getelementptr inbounds i8, i8* %1336, i64 208
  %1797 = bitcast i8* %1796 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1797) #13
END BLOCK

BEGIN BLOCK
  %1798 = getelementptr inbounds i8, i8* %1336, i64 224
  %1799 = bitcast i8* %1798 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1799) #13
END BLOCK

BEGIN BLOCK
  %1800 = getelementptr inbounds i8, i8* %1336, i64 240
  %1801 = bitcast i8* %1800 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1801) #13
END BLOCK

BEGIN BLOCK
  %1802 = getelementptr inbounds i8, i8* %1336, i64 256
  %1803 = bitcast i8* %1802 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1803) #13
END BLOCK

BEGIN BLOCK
  %1804 = getelementptr inbounds i8, i8* %1336, i64 272
  %1805 = bitcast i8* %1804 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1805) #13
END BLOCK

BEGIN BLOCK
  %1806 = getelementptr inbounds i8, i8* %1336, i64 288
  %1807 = bitcast i8* %1806 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1807) #13
END BLOCK

BEGIN BLOCK
  %1808 = getelementptr inbounds i8, i8* %1336, i64 304
  %1809 = bitcast i8* %1808 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1809) #13
END BLOCK

BEGIN BLOCK
  %1810 = getelementptr inbounds i8, i8* %1336, i64 320
  %1811 = bitcast i8* %1810 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1811) #13
END BLOCK

BEGIN BLOCK
  %1812 = getelementptr inbounds i8, i8* %1336, i64 336
  %1813 = bitcast i8* %1812 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1813) #13
END BLOCK

BEGIN BLOCK
  %1814 = getelementptr inbounds i8, i8* %1336, i64 352
  %1815 = bitcast i8* %1814 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1815) #13
END BLOCK

BEGIN BLOCK
  %1816 = getelementptr inbounds i8, i8* %1336, i64 368
  %1817 = bitcast i8* %1816 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1817) #13
END BLOCK

BEGIN BLOCK
  %1818 = getelementptr inbounds i8, i8* %1336, i64 384
  %1819 = bitcast i8* %1818 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1819) #13
END BLOCK

BEGIN BLOCK
  %1820 = getelementptr inbounds i8, i8* %1336, i64 400
  %1821 = bitcast i8* %1820 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1821) #13
END BLOCK

BEGIN BLOCK
  %1822 = getelementptr inbounds i8, i8* %1336, i64 416
  %1823 = bitcast i8* %1822 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1823) #13
END BLOCK

BEGIN BLOCK
  %1824 = getelementptr inbounds i8, i8* %1336, i64 432
  %1825 = bitcast i8* %1824 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1825) #13
END BLOCK

BEGIN BLOCK
  %1826 = getelementptr inbounds i8, i8* %1336, i64 448
  %1827 = bitcast i8* %1826 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1827) #13
END BLOCK

BEGIN BLOCK
  %1828 = getelementptr inbounds i8, i8* %1336, i64 464
  %1829 = bitcast i8* %1828 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1829) #13
END BLOCK

BEGIN BLOCK
  %1830 = getelementptr inbounds i8, i8* %1336, i64 480
  %1831 = bitcast i8* %1830 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1831) #13
END BLOCK

BEGIN BLOCK
  %1832 = getelementptr inbounds i8, i8* %1336, i64 496
  %1833 = bitcast i8* %1832 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1833) #13
END BLOCK

BEGIN BLOCK
  %1834 = getelementptr inbounds i8, i8* %1336, i64 512
  %1835 = bitcast i8* %1834 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1835) #13
END BLOCK

BEGIN BLOCK
  %1836 = getelementptr inbounds i8, i8* %1336, i64 528
  %1837 = bitcast i8* %1836 to %struct.pos_T*
  call fastcc void @unserialize_pos(%struct.bufinfo_T* nonnull %15, %struct.pos_T* nonnull %1837) #13
END BLOCK

BEGIN BLOCK
  %1838 = load i8*, i8** %115, align 8, !tbaa !261
  %1839 = icmp eq i8* %1838, null
  br i1 %1839, label %1894, label %1840
END BLOCK

BEGIN BLOCK
; <label>:1894:                                   ; preds = %1778
  %1895 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1896 = call i32 @get4c(%struct._IO_FILE* %1895) #13
END BLOCK

BEGIN BLOCK
  br label %1897
END BLOCK

BEGIN BLOCK
; <label>:1897:                                   ; preds = %1894, %1879
  %1898 = phi i32 [ %1893, %1879 ], [ %1896, %1894 ]
  %1899 = getelementptr inbounds i8, i8* %1336, i64 544
  %1900 = bitcast i8* %1899 to i32*
  store i32 %1898, i32* %1900, align 8, !tbaa !265
  %1901 = load i8*, i8** %115, align 8, !tbaa !261
  %1902 = icmp eq i8* %1901, null
  br i1 %1902, label %1957, label %1903
END BLOCK

BEGIN BLOCK
; <label>:1957:                                   ; preds = %1897
  %1958 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %1959 = call i32 @get4c(%struct._IO_FILE* %1958) #13
END BLOCK

BEGIN BLOCK
  br label %1960
END BLOCK

BEGIN BLOCK
; <label>:1960:                                   ; preds = %1957, %1942
  %1961 = phi i32 [ %1956, %1942 ], [ %1959, %1957 ]
  %1962 = getelementptr inbounds i8, i8* %1336, i64 548
  %1963 = bitcast i8* %1962 to i32*
  store i32 %1961, i32* %1963, align 4, !tbaa !266
  %1964 = load i8*, i8** %115, align 8, !tbaa !261
  %1965 = icmp eq i8* %1964, null
  br i1 %1965, label %2040, label %1966
END BLOCK

BEGIN BLOCK
; <label>:2040:                                   ; preds = %1960
  %2041 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %2042 = call i64 @get8ctime(%struct._IO_FILE* %2041) #13
END BLOCK

BEGIN BLOCK
  br label %2043
END BLOCK

BEGIN BLOCK
; <label>:2043:                                   ; preds = %2040, %2009
  %2044 = phi i64 [ %2039, %2009 ], [ %2042, %2040 ]
  %2045 = getelementptr inbounds i8, i8* %1336, i64 552
  %2046 = bitcast i8* %2045 to i64*
  store i64 %2044, i64* %2046, align 8, !tbaa !234
  %2047 = getelementptr inbounds i8, i8* %1336, i64 560
  %2048 = bitcast i8* %2047 to i64*
  br label %2049
END BLOCK

BEGIN BLOCK
; <label>:2049:                                   ; preds = %2241, %2043
  %2050 = load i8*, i8** %115, align 8, !tbaa !261
  %2051 = icmp eq i8* %2050, null
  br i1 %2051, label %2091, label %2052
END BLOCK

BEGIN BLOCK
; <label>:2091:                                   ; preds = %2049
  %2092 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8, !tbaa !258
  %2093 = call i32 @getc(%struct._IO_FILE* %2092) #13
END BLOCK

BEGIN BLOCK
  br label %2094
END BLOCK

BEGIN BLOCK
; <label>:2094:                                   ; preds = %2091, %2088
  %2095 = phi i32 [ %2090, %2088 ], [ %2093, %2091 ]
  switch i32 %2095, label %2128 [
    i32 -1, label %2096
    i32 0, label %2288
  ]

; <label>:2096:                                   ; preds = %2094
  %2097 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i64 0, i64 0), i32 5) #13
END BLOCK

BEGIN BLOCK
  %2098 = call i32 (i8*, ...) @semsg(i8* %2097, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i8* %50) #13
END BLOCK

BEGIN BLOCK
  %2099 = getelementptr inbounds i8, i8* %1336, i64 48
  %2100 = bitcast i8* %2099 to %struct.u_entry**
  %2101 = load %struct.u_entry*, %struct.u_entry** %2100, align 8, !tbaa !243
  %2102 = icmp eq %struct.u_entry* %2101, null
  br i1 %2102, label %2127, label %2103
END BLOCK

BEGIN BLOCK
; <label>:2103:                                   ; preds = %2096
  br label %2104
END BLOCK

BEGIN BLOCK
; <label>:2104:                                   ; preds = %2123, %2103
  %2105 = phi %struct.u_entry* [ %2108, %2123 ], [ %2101, %2103 ]
  %2106 = bitcast %struct.u_entry* %2105 to i8*
  %2107 = getelementptr inbounds %struct.u_entry, %struct.u_entry* %2105, i64 0, i32 0
  %2108 = load %struct.u_entry*, %struct.u_entry** %2107, align 8, !tbaa !250
  %2109 = getelementptr inbounds %struct.u_entry, %struct.u_entry* %2105, i64 0, i32 5
  %2110 = load i64, i64* %2109, align 8, !tbaa !247
  %2111 = icmp sgt i64 %2110, 0
  %2112 = getelementptr inbounds %struct.u_entry, %struct.u_entry* %2105, i64 0, i32 4
  %2113 = load %struct.undoline_T*, %struct.undoline_T** %2112, align 8, !tbaa !251
  br i1 %2111, label %2114, label %2123
END BLOCK

BEGIN BLOCK
; <label>:2114:                                   ; preds = %2104
  br label %2115
END BLOCK

BEGIN BLOCK
; <label>:2115:                                   ; preds = %2115, %2114
  %2116 = phi %struct.undoline_T* [ %2122, %2115 ], [ %2113, %2114 ]
  %2117 = phi i64 [ %2118, %2115 ], [ %2110, %2114 ]
  %2118 = add nsw i64 %2117, -1
  %2119 = getelementptr inbounds %struct.undoline_T, %struct.undoline_T* %2116, i64 %2118, i32 0
  %2120 = load i8*, i8** %2119, align 8, !tbaa !252
  call void @vim_free(i8* %2120) #13
END BLOCK

BEGIN BLOCK
  %2121 = icmp sgt i64 %2117, 1
  %2122 = load %struct.undoline_T*, %struct.undoline_T** %2112, align 8, !tbaa !251
  br i1 %2121, label %2115, label %2123
END BLOCK

Dijkstra's traversed 258 blocks to find shortest path with 913 lines of LLVM.
