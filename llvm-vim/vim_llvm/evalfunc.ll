; ModuleID = 'evalfunc.c'
source_filename = "evalfunc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.type_S = type { i32, i8, i8, i8, %struct.type_S*, %struct.type_S** }
%struct.argcontext_T = type { i32, %struct.type_S**, i32, %struct.cctx_S* }
%struct.cctx_S = type opaque
%struct.funcentry_T = type { i8*, i8, i8, i8, i32 (%struct.type_S*, %struct.argcontext_T*)**, %struct.type_S* (i32, %struct.type_S**)*, void (%struct.typval_T*, %struct.typval_T*)* }
%struct.typval_T = type { i32, i8, %union.anon }
%union.anon = type { i64 }
%struct.window_S = type { i32, %struct.file_buffer*, %struct.window_S*, %struct.window_S*, %struct.synblock_T*, i32, %struct.frame_S*, %struct.pos_T, i32, i32, i64, i8, i64, i32, i32, i64, i32, i32, %struct.lcs_chars_T, i64, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.pos_save_T, i32, i32, i8*, i32, i32, i32, %struct.window_S*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, [4 x i32], [4 x i32], [4 x i8*], [8 x i32], i32, i32, i64, i64, i32, i64, %struct.callback_T, %struct.callback_T, i32, i32, %struct.window_S*, i64, i32, i32, i32, i32, i32, i32, %struct.listvar_S*, i8*, i32, i32, %struct.timer_S*, i32, i32, %struct.pos_T, i32, i32, i32, i32, i32, i32, i32, i32, %struct.w_line*, %struct.growarray, i8, i8, i32, i32, i32, i64, i64, i32, %struct.pos_T, i32, i64, i64, i32, i8, i32, %struct.arglist*, i32, i32, i8*, i8*, %struct.VimMenu*, %struct.winbar_item_T*, i32, %struct.winopt_T, %struct.winopt_T, i64, i64, i64, i32*, i8, i64, i64, i32, i32, i32, i64, %struct.dictitem_S, %struct.dictvar_S*, %struct.pos_T, %struct.pos_T, [100 x %struct.xfilemark], i32, i32, i32, %struct.matchitem*, i32, [20 x %struct.taggy], i32, i32, i32, i32, [2 x %struct.GuiScrollbar], i64, i64, i32, %struct.qf_info_S*, %struct.qf_info_S* }
%struct.file_buffer = type { %struct.memline, %struct.file_buffer*, %struct.file_buffer*, i32, i32, i32, i32, i8*, i8*, i8*, i32, i64, i64, i32, [9 x i8], i32, %struct.dictitem16_S, i64, i64, i32, i32, i64, i64, i64, %struct.wininfo_S*, i64, i64, i64, i32, i64, [26 x %struct.pos_T], %struct.visualinfo_T, i32, %struct.pos_T, %struct.pos_T, %struct.pos_T, [100 x %struct.pos_T], i32, i32, [32 x i8], [256 x %struct.mapblock*], %struct.mapblock*, %struct.growarray, %struct.pos_T, %struct.pos_T, %struct.pos_T, i32, %struct.u_header*, %struct.u_header*, %struct.u_header*, i32, i32, i64, i64, i64, i64, i64, %struct.undoline_T, i64, i32, i32, i64, i64, i16, %struct.growarray, i32, [84 x %struct.sctx_T], i32, i32, i8*, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, i8*, i8*, i64, i8*, i8*, i32, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i32, i64, i32, i32, i64, i64, i8*, i32, i64, i8*, i64, i32, i64, i64, i64, i64, i64, i64, i8*, i32*, i8*, i8*, i32*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i8*, i8*, i64, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i8*, i32, i32, %struct.dictitem_S, %struct.dictvar_S*, %struct.listener_S*, %struct.listvar_S*, i32, %struct.hashtable_S*, i8*, i64, i8*, i32, i32, i32, i32, i32, i8*, %struct.callback_T, %struct.callback_T, i32, %struct.synblock_T, %struct.sign_entry*, i32, i32, i32, i32, %struct.cryptstate_T*, i32, %struct.terminal_S*, i32 }
%struct.memline = type { i64, %struct.memfile*, %struct.info_pointer*, i32, i32, i32, i32, i64, i8*, %struct.block_hdr*, i64, i64, i32, %struct.ml_chunksize*, i32, i32 }
%struct.memfile = type { i8*, i8*, i32, i32, i32, %struct.block_hdr*, %struct.block_hdr*, %struct.block_hdr*, i32, i32, %struct.mf_hashtab_S, %struct.mf_hashtab_S, i64, i64, i64, i64, i32, i32, %struct.file_buffer*, [8 x i8], i8*, i32, [8 x i8] }
%struct.mf_hashtab_S = type { i64, i64, %struct.mf_hashitem_S**, [64 x %struct.mf_hashitem_S*], i8 }
%struct.mf_hashitem_S = type { %struct.mf_hashitem_S*, %struct.mf_hashitem_S*, i64 }
%struct.info_pointer = type { i64, i64, i64, i32 }
%struct.block_hdr = type { %struct.mf_hashitem_S, %struct.block_hdr*, %struct.block_hdr*, i8*, i32, i8 }
%struct.ml_chunksize = type { i32, i64 }
%struct.dictitem16_S = type { %struct.typval_T, i8, [17 x i8] }
%struct.wininfo_S = type { %struct.wininfo_S*, %struct.wininfo_S*, %struct.window_S*, %struct.pos_T, i32, %struct.winopt_T, i32, %struct.growarray }
%struct.visualinfo_T = type { %struct.pos_T, %struct.pos_T, i32, i32 }
%struct.mapblock = type { %struct.mapblock*, i8*, i8*, i8*, i32, i32, i32, i32, i8, i8, %struct.sctx_T, i8 }
%struct.sctx_T = type { i32, i32, i64, i32 }
%struct.u_header = type { %union.anon.3, %union.anon.4, %union.anon.5, %union.anon.6, i64, i32, %struct.u_entry*, %struct.u_entry*, %struct.pos_T, i64, i32, [26 x %struct.pos_T], %struct.visualinfo_T, i64, i64 }
%union.anon.3 = type { %struct.u_header* }
%union.anon.4 = type { %struct.u_header* }
%union.anon.5 = type { %struct.u_header* }
%union.anon.6 = type { %struct.u_header* }
%struct.u_entry = type { %struct.u_entry*, i64, i64, i64, %struct.undoline_T*, i64 }
%struct.undoline_T = type { i8*, i64 }
%struct.listener_S = type { %struct.listener_S*, i32, %struct.callback_T }
%struct.hashtable_S = type { i64, i64, i64, i32, i32, i32, %struct.hashitem_S*, [16 x %struct.hashitem_S] }
%struct.hashitem_S = type { i64, i8* }
%struct.synblock_T = type { %struct.hashtable_S, %struct.hashtable_S, i32, i32, i32, i32, i32, %struct.growarray, %struct.growarray, i32, i32, i32, i32, i16, i64, i64, i64, i8*, %struct.regprog*, %struct.syn_time_T, i32, i32, i32, i32, %struct.syn_state*, i32, %struct.syn_state*, %struct.syn_state*, i32, i64, i16, %struct.growarray, [256 x i8], i8*, i8*, %struct.regprog*, i8*, i8*, i8*, i32, [32 x i8], i8* }
%struct.syn_time_T = type { %struct.timeval, %struct.timeval, i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.syn_state = type { %struct.syn_state*, i64, %union.anon.2, i32, i32, i16*, i16, i64 }
%union.anon.2 = type { [7 x %struct.buf_state] }
%struct.buf_state = type { i32, i32, i32, i32, %struct.reg_extmatch_T* }
%struct.reg_extmatch_T = type { i16, [10 x i8*] }
%struct.regprog = type { %struct.regengine*, i32, i32, i32, i32 }
%struct.regengine = type { %struct.regprog* (i8*, i32)*, void (%struct.regprog*)*, i32 (%struct.regmatch_T*, i8*, i32, i32)*, i64 (%struct.regmmatch_T*, %struct.window_S*, %struct.file_buffer*, i64, i32, %struct.timeval*, i32*)*, i8* }
%struct.regmatch_T = type { %struct.regprog*, [10 x i8*], [10 x i8*], i32 }
%struct.regmmatch_T = type { %struct.regprog*, [10 x %struct.lpos_T], [10 x %struct.lpos_T], i32, i32 }
%struct.lpos_T = type { i64, i32 }
%struct.sign_entry = type { i32, i32, i32, i64, %struct.signgroup_S*, %struct.sign_entry*, %struct.sign_entry* }
%struct.signgroup_S = type { i32, i16, [1 x i8] }
%struct.cryptstate_T = type { i32, i8* }
%struct.terminal_S = type opaque
%struct.frame_S = type { i8, i32, i32, i32, i32, %struct.frame_S*, %struct.frame_S*, %struct.frame_S*, %struct.frame_S*, %struct.window_S* }
%struct.lcs_chars_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pos_save_T = type { i32, i32, %struct.pos_T, %struct.pos_T }
%struct.callback_T = type { i8*, %struct.partial_S*, i32 }
%struct.partial_S = type { i32, i8*, %struct.ufunc_T*, i32, %struct.outer_S, %struct.funcstack_S*, i32, %struct.typval_T*, %struct.dictvar_S*, i32 }
%struct.ufunc_T = type { i32, i32, i32, i32, i32, i32, %struct.growarray, %struct.growarray, %struct.type_S**, %struct.type_S*, %struct.growarray, %struct.partial_S*, i8*, %struct.type_S*, %struct.type_S*, i32, i32*, %struct.growarray, i32, i32, i32, %struct.timeval, %struct.timeval, %struct.timeval, i32*, %struct.timeval*, %struct.timeval*, %struct.timeval, %struct.timeval, %struct.timeval, i32, i32, %struct.sctx_T, i32, i32, %struct.funccall_S*, i8*, [4 x i8] }
%struct.funccall_S = type { %struct.ufunc_T*, i32, i32, [12 x %struct.anon.7], %struct.dictvar_S, %struct.dictitem_S, %struct.dictvar_S, %struct.dictitem_S, %struct.listvar_S, [20 x %struct.listitem_S], %struct.typval_T*, i64, i32, i32, %struct.timeval, %struct.funccall_S*, i32, i32, %struct.growarray }
%struct.anon.7 = type { %struct.dictitem_S, [20 x i8] }
%struct.dictvar_S = type { i8, i8, i32, i32, %struct.hashtable_S, %struct.type_S*, %struct.dictvar_S*, %struct.dictvar_S*, %struct.dictvar_S* }
%struct.listvar_S = type { %struct.listitem_S*, %struct.listwatch_S*, %union.anon.0, %struct.type_S*, %struct.listvar_S*, %struct.listvar_S*, %struct.listvar_S*, i32, i32, i32, i32, i8 }
%struct.listitem_S = type { %struct.listitem_S*, %struct.listitem_S*, %struct.typval_T }
%struct.listwatch_S = type { %struct.listitem_S*, %struct.listwatch_S* }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i64, i64, i32 }
%struct.outer_S = type { %struct.growarray*, i32, %struct.outer_S*, i32 }
%struct.funcstack_S = type { %struct.growarray, i32, i32, i32, i32 }
%struct.timer_S = type { i64, %struct.timer_S*, %struct.timer_S*, %struct.timeval, i8, i8, i32, i64, %struct.callback_T, i32 }
%struct.w_line = type { i64, i16, i8, i8, i64 }
%struct.growarray = type { i32, i32, i32, i32, i8* }
%struct.arglist = type { %struct.growarray, i32, i32 }
%struct.VimMenu = type { i32, i32, i8*, i8*, i8*, i8*, i32, i8*, i32, void (%struct.VimMenu*)*, i8*, i32, i32, [8 x i8*], [8 x i32], [8 x i8], %struct.VimMenu*, %struct.VimMenu*, %struct.VimMenu*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget* }
%struct._GtkWidget = type { %struct._GtkObject, i16, i8, i8, i8*, %struct._GtkStyle*, %struct._GtkRequisition, %struct._GdkRectangle, %struct._GdkDrawable*, %struct._GtkWidget* }
%struct._GtkObject = type { %struct._GObject, i32 }
%struct._GObject = type { %struct._GTypeInstance, i32, %struct._GData* }
%struct._GTypeInstance = type { %struct._GTypeClass* }
%struct._GTypeClass = type { i64 }
%struct._GData = type opaque
%struct._GtkStyle = type { %struct._GObject, [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], %struct._GdkColor, %struct._GdkColor, %struct._PangoFontDescription*, i32, i32, [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], %struct._GdkGC*, %struct._GdkGC*, [5 x %struct._GdkDrawable*], i32, i32, %struct._GdkColormap*, %struct._GdkFont*, %struct._PangoFontDescription*, %struct._GtkRcStyle*, %struct._GSList*, %struct._GArray*, %struct._GSList* }
%struct._GdkColor = type { i32, i16, i16, i16 }
%struct._GdkGC = type { %struct._GObject, i32, i32, i32, i32, %struct._GdkColormap* }
%struct._GdkColormap = type { %struct._GObject, i32, %struct._GdkColor*, %struct._GdkVisual*, i8* }
%struct._GdkVisual = type { %struct._GObject, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._GdkFont = type { i32, i32, i32 }
%struct._PangoFontDescription = type opaque
%struct._GtkRcStyle = type { %struct._GObject, i8*, [5 x i8*], %struct._PangoFontDescription*, [5 x i32], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], i32, i32, %struct._GArray*, %struct._GSList*, %struct._GSList*, i8 }
%struct._GArray = type { i8*, i32 }
%struct._GSList = type { i8*, %struct._GSList* }
%struct._GtkRequisition = type { i32, i32 }
%struct._GdkRectangle = type { i32, i32, i32, i32 }
%struct._GdkDrawable = type { %struct._GObject }
%struct.winbar_item_T = type { i32, i32, %struct.VimMenu* }
%struct.winopt_T = type { i32, i32, i8*, i8*, i32, i64, i32, i32, i32, i8*, i64, i32, i8*, i8*, i64, i64, i8*, i8*, i8*, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i8*, i64, i32, i32, i8*, i8*, i8*, [44 x %struct.sctx_T] }
%struct.dictitem_S = type { %struct.typval_T, i8, [1 x i8] }
%struct.pos_T = type { i64, i32, i32 }
%struct.xfilemark = type { %struct.filemark, i8*, i64 }
%struct.filemark = type { %struct.pos_T, i32 }
%struct.matchitem = type { %struct.matchitem*, i32, i32, i8*, %struct.regmmatch_T, %struct.posmatch, %struct.match_T, i32, i32 }
%struct.posmatch = type { [8 x %struct.llpos_T], i32, i64, i64 }
%struct.llpos_T = type { i64, i32, i32 }
%struct.match_T = type { %struct.regmmatch_T, %struct.file_buffer*, i64, i32, i32, i64, i32, i32, i32, %struct.timeval }
%struct.taggy = type { i8*, %struct.filemark, i32, i32, i8* }
%struct.GuiScrollbar = type { i64, %struct.window_S*, i32, i64, i64, i64, i32, i32, i32, i32, %struct._GtkWidget*, i64 }
%struct.qf_info_S = type opaque
%struct.has_item_T = type { i8*, i16 }
%struct.Gui = type { i32, i32, i32, i32, i32, i32, i32, %struct.window_S*, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.GuiScrollbar, [3 x i32], i32, i32, i32, i32, i32, i32, %struct._PangoFontDescription*, i32, %struct._PangoFontDescription*, i64, i64, i64, i64, i32, %struct._GdkCursor*, i8*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GdkColor*, %struct._GdkColor*, %struct._GdkColor*, %struct._GdkGC*, %struct._PangoContext*, %struct._PangoFont*, %struct._PangoGlyphString*, %struct._GtkWidget*, %struct._GtkAccelGroup*, %struct._GtkWidget*, i8*, i32, i8*, i8* }
%struct._GdkCursor = type { i32, i32 }
%struct._PangoContext = type opaque
%struct._PangoFont = type { %struct._GObject }
%struct._PangoGlyphString = type { i32, %struct._PangoGlyphInfo*, i32*, i32 }
%struct._PangoGlyphInfo = type { i32, %struct._PangoGlyphGeometry, %struct._PangoGlyphVisAttr }
%struct._PangoGlyphGeometry = type { i32, i32, i32 }
%struct._PangoGlyphVisAttr = type { i8, [3 x i8] }
%struct._GtkAccelGroup = type { %struct._GObject, i32, i32, %struct._GSList*, i32, %struct._GtkAccelGroupEntry* }
%struct._GtkAccelGroupEntry = type { %struct._GtkAccelKey, %struct._GClosure*, i32 }
%struct._GtkAccelKey = type { i32, i32, i16 }
%struct._GClosure = type { i32, void (%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*)*, i8*, %struct._GClosureNotifyData* }
%struct._GValue = type { i64, [2 x %union.anon.8] }
%union.anon.8 = type { i64 }
%struct._GClosureNotifyData = type { i8*, void (i8*, %struct._GClosure*)* }
%struct.Clipboard_T = type { i32, i32, %struct.pos_T, %struct.pos_T, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.pos_T, i16, i16, i64, %struct._GdkAtom* }
%struct._GdkAtom = type opaque
%struct.BalloonEvalStruct = type { %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, i32, i32, i32, i32, i32, void (%struct.BalloonEvalStruct*, i32)*, i8*, i32, i32*, i8* }
%struct.evalarg_T = type { i32, i32, i8* (i32, i8*, i32, i32)*, i8*, %struct.cctx_S*, %struct.growarray, i8*, i8*, i8* }
%struct.typebuf_T = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tabpage_S = type { %struct.tabpage_S*, %struct.frame_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, i64, i64, i64, [3 x i32], i8*, i8*, %struct.diffblock_S*, [8 x %struct.file_buffer*], i32, i32, [2 x %struct.frame_S*], %struct.dictitem_S, %struct.dictvar_S* }
%struct.diffblock_S = type { %struct.diffblock_S*, [8 x i64], [8 x i64] }
%struct.expand = type { i8*, i32, i32, i8*, %struct.sctx_T, i32, i32, i32, i32, i8**, i8* }
%struct.searchit_arg_T = type { i64, %struct.timeval*, i32, i32 }
%struct.pumitem_T = type { i8*, i8*, i8*, i8* }
%struct.blobvar_S = type { %struct.growarray, i32, i8 }
%struct.jobvar_S = type { %struct.jobvar_S*, %struct.jobvar_S*, i32, i8*, i8*, i32, i8*, i8*, i32, %struct.callback_T, %struct.file_buffer*, i32, i32, %struct.channel_S*, i8** }
%struct.channel_S = type { %struct.channel_S*, %struct.channel_S*, i32, i32, [4 x %struct.chanpart_T], i32, i8*, i32, i32, i32, i32, void ()*, %struct.callback_T, %struct.callback_T, i32, i32, i32, %struct.jobvar_S*, i32, i32, i32, i32, i32 }
%struct.chanpart_T = type { i32, i32, i32, i32, i32, %struct.readq_S, %struct.jsonq_S, %struct.growarray, i64, %struct.timeval, i32, i32, %struct.writeq_S, %struct.cbq_S, %struct.callback_T, %struct.bufref_T, i32, i32, i32, i64, i64 }
%struct.readq_S = type { i8*, i64, %struct.readq_S*, %struct.readq_S* }
%struct.jsonq_S = type { %struct.typval_T*, %struct.jsonq_S*, %struct.jsonq_S*, i32 }
%struct.writeq_S = type { %struct.growarray, %struct.writeq_S*, %struct.writeq_S* }
%struct.cbq_S = type { %struct.callback_T, i32, %struct.cbq_S*, %struct.cbq_S* }
%struct.bufref_T = type { %struct.file_buffer*, i32, i32 }
%struct.exarg = type { i8*, i8*, i8*, i8**, i8*, i32, i64, i32, i32, i32, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8* (i32, i8*, i32, i32)*, i8*, %struct.cstack_T* }
%struct.cstack_T = type { [50 x i16], [50 x i8], %union.anon.9, [50 x i8*], [50 x i32], [50 x i32], [50 x i32], i32, i32, i32, %struct.eslist_elem*, i8 }
%union.anon.9 = type { [50 x i8*] }
%struct.eslist_elem = type { i32, %struct.eslist_elem* }
%struct.vimconv_T = type { i32, i32, i8*, i32 }
%struct.tasave_T = type { %struct.typebuf_T, i32, i32, i32, %struct.buffheader, %struct.buffheader, i8* }
%struct.buffheader = type { %struct.buffblock, %struct.buffblock*, i32, i32 }
%struct.buffblock = type { %struct.buffblock*, [1 x i8] }
%struct.lval_S = type { i8*, i8*, %struct.type_S*, i8*, %struct.typval_T*, %struct.listitem_S*, %struct.listvar_S*, i32, i32, i64, i64, %struct.dictvar_S*, %struct.dictitem_S*, i8*, %struct.type_S*, %struct.blobvar_S* }
%struct.anon.10 = type { %union.anon.11 }
%union.anon.11 = type { i32 }
%struct.tagname_T = type { i8*, i8*, i32, i32, i8* }
%struct.funcdict_T = type { %struct.dictvar_S*, i8*, %struct.dictitem_S* }

@arg1_string = global [1 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_string], align 8, !dbg !0
@arg3_string_nr_bool = global [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_string, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_number, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_bool], align 16, !dbg !2472
@arg1_float_or_nr = global [1 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_float_or_nr], align 8, !dbg !2492
@arg2_listblob_item = local_unnamed_addr global [2 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_list_or_blob, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_item_of_prev], align 16, !dbg !2495
@arg23_extend = global [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_list_or_dict, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_same_as_prev, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_extend3], align 16, !dbg !2498
@arg23_extendnew = global [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_list_or_dict, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_same_struct_as_prev, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_extend3], align 16, !dbg !2500
@arg3_insert = global [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*] [i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_list_or_blob, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_item_of_prev, i32 (%struct.type_S*, %struct.argcontext_T*)* @arg_number], align 16, !dbg !2502
@get_function_name.intidx = internal unnamed_addr global i32 -1, align 4, !dbg !2504
@.str = private unnamed_addr constant [3 x i8] c"g:\00", align 1
@IObuff = external local_unnamed_addr global i8*, align 8
@global_functions = internal unnamed_addr constant [522 x %struct.funcentry_T] [%struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.205, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([1 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [1 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg1_float_or_nr, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_abs }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_acos }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.207, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_add }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.208, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_and }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_append }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_appendbufline }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_argc }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_argidx }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.213, i32 0, i32 0), i8 0, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_arglistid }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i32 0, i32 0), i8 0, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_argv, void (%struct.typval_T*, %struct.typval_T*)* @f_argv }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.215, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_asin }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_beeps }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.217, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_equal }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.218, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_equalfile }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.219, i32 0, i32 0), i8 1, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_exception }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.220, i32 0, i32 0), i8 1, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_fails }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.221, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_false }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.222, i32 0, i32 0), i8 3, i8 4, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_inrange }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.223, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_match }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_nobeep }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.225, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_notequal }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.226, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_notmatch }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_report }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.228, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_assert_true }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_atan }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_atan2 }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.231, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_balloon_gettext }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.232, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_balloon_show }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.233, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_balloon_split }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i8 4, i8 4, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_browse }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.234, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_browsedir }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_bufadd }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_bufexists }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_bufexists }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.238, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_bufname }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_bufnr }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_buflisted }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_bufload }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_bufloaded }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.243, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_bufname }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_bufnr }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_bufwinid }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.246, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_bufwinnr }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.247, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_byte2line }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_byteidx }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.249, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_byteidxcomp }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.250, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_call }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.251, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_ceil }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.252, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_canread }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_close }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.254, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_close_in }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_evalexpr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.256, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_evalraw }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.257, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_getbufnr }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.258, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_job, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_getjob }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.259, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_info }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_log }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.261, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_logfile }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_channel, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_open }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_read }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.264, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_blob, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_readblob }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.265, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_readraw }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.266, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_sendexpr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.267, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_sendraw }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_setoptions }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_ch_status }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.270, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_changenr }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.271, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_char2nr }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.272, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_charclass }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.273, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_charcol }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.274, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_charidx }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.275, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_chdir }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_cindent }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.276, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_clearmatches }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.277, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_col }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.278, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_complete }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.279, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_complete_add }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.280, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_complete_check }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.281, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_complete_info }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.282, i32 0, i32 0), i8 1, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_confirm }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.283, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_copy }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.284, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_cos }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_cosh }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_count }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.287, i32 0, i32 0), i8 0, i8 3, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_cscope_connection }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.288, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_cursor }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.289, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.290, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_deepcopy }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.291, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_delete }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.292, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_deletebufline }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_did_filetype }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.294, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_diff_filler }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.295, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_diff_hlID }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.296, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_echoraw }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_empty }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_string, void (%struct.typval_T*, %struct.typval_T*)* @f_environ }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.299, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_escape }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_eval }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.300, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_eventhandler }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.301, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_executable }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_execute }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.303, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_exepath }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.304, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_exists }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_exp }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.306, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_expand }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.307, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_expandcmd }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([3 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg23_extend, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_extend }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.309, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([3 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg23_extendnew, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_first_cont, void (%struct.typval_T*, %struct.typval_T*)* @f_extendnew }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.310, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_feedkeys }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.311, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_filereadable }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.312, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_filereadable }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.313, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_filewritable }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_filter }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_finddir }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.316, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_findfile }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.317, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_flatten }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_flattennew }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.319, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_float2nr }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.320, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_floor }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.321, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_fmod }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.322, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_fnameescape }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.323, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_fnamemodify }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.324, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_foldclosed }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.325, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_foldclosedend }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.326, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_foldlevel }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.327, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_foldtext }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.328, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_foldtextresult }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.329, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_foreground }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.330, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([1 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [1 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg1_string, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_fullcommand }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_func_any, void (%struct.typval_T*, %struct.typval_T*)* @f_funcref }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_f_function, void (%struct.typval_T*, %struct.typval_T*)* @f_function }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.333, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_garbagecollect }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.334, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_get }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.335, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getbufinfo }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.336, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getbufline }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.337, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getbufvar }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.338, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getchangelist }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getchar }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.340, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getcharmod }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.341, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getcharpos }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.342, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getcharsearch }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.343, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getcmdline }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.344, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getcmdpos }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.345, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getcmdtype }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.346, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getcmdwintype }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getcompletion }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.348, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getcurpos }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.349, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getcursorcharpos }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.350, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getcwd }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.351, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getenv }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.352, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getfontname }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.353, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getfperm }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.354, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getfsize }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.355, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getftime }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.356, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getftype }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.357, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_getimstatus }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.358, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getjumplist }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.359, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_f_getline, void (%struct.typval_T*, %struct.typval_T*)* @f_getline }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.360, i32 0, i32 0), i8 1, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_or_dict_1, void (%struct.typval_T*, %struct.typval_T*)* @f_getloclist }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.361, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getmarklist }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.362, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getmatches }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.363, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getmousepos }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.364, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getpid }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.365, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getpos }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.366, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_or_dict_0, void (%struct.typval_T*, %struct.typval_T*)* @f_getqflist }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.367, i32 0, i32 0), i8 0, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_getreg, void (%struct.typval_T*, %struct.typval_T*)* @f_getreg }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.368, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getreginfo }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_getregtype }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.370, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_gettabinfo }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.371, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_gettabvar }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_gettabwinvar }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.373, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_gettagstack }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_gettext }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.374, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getwininfo }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.375, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getwinpos }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.376, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getwinposx }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.377, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_getwinposy }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.378, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_getwinvar }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.379, i32 0, i32 0), i8 1, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_glob }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.380, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_glob2regpat }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.381, i32 0, i32 0), i8 2, i8 5, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_globpath }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.382, i32 0, i32 0), i8 1, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_has }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.383, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_has_key }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.384, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_haslocaldir }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.385, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_hasmapto }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_hlID }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.387, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_hlexists }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.388, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_histadd }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.389, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_histdel }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.390, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_histget }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_histnr }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.392, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_hlID }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.393, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_hlexists }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.394, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_hostname }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_iconv }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_indent }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.396, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_index }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.397, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_input }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_inputdialog }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.399, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_inputlist }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.400, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_inputrestore }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.401, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_inputsave }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.402, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_inputsecret }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.403, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([3 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg3_insert, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_insert }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.404, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_interrupt }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.405, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_invert }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.406, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_isdirectory }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.407, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_isinf }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.408, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_islocked }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.409, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_isnan }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.410, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_items }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.411, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_channel, void (%struct.typval_T*, %struct.typval_T*)* @f_job_getchannel }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.412, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_job_info, void (%struct.typval_T*, %struct.typval_T*)* @f_job_info }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.413, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_job_setoptions }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_job, void (%struct.typval_T*, %struct.typval_T*)* @f_job_start }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.415, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_job_status }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.416, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_job_stop }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.417, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_join }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.418, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_js_decode }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.419, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_js_encode }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.420, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_json_decode }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.421, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_json_encode }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.422, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_keys }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.423, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_last_buffer_nr }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.424, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_len }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_libcall }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.425, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_libcallnr }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.426, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_line }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.427, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_line2byte }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_lispindent }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.428, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_list2str }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.429, i32 0, i32 0), i8 1, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_listener_add }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.430, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_listener_flush }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.431, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_listener_remove }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.432, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_localtime }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.433, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_log }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.434, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_log10 }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.436, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_cont, void (%struct.typval_T*, %struct.typval_T*)* @f_map }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0), i8 1, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_maparg, void (%struct.typval_T*, %struct.typval_T*)* @f_maparg }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.438, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_mapcheck }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.439, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_cont, void (%struct.typval_T*, %struct.typval_T*)* @f_mapnew }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.440, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_mapset }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.441, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_match }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.442, i32 0, i32 0), i8 2, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_matchadd }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.443, i32 0, i32 0), i8 2, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_matchaddpos }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.444, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_matcharg }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.445, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_matchdelete }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.446, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_matchend }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.447, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_matchfuzzy }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.448, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_matchfuzzypos }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.449, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_matchlist }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.450, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_matchstr }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.451, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_matchstrpos }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.452, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_max }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.453, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_menu_info }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.454, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_min }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.455, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_mkdir }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.456, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_mode }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.457, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.458, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_nextnonblank }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_nr2char }, %struct.funcentry_T { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.460, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_or }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.461, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_pathshorten }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.462, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.463, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_atcursor }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.464, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_beval }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.465, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_clear }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.466, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_close }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.467, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_create }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.468, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_dialog }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.469, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_filter_menu }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.470, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_filter_yesno }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.471, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_findinfo }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.472, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_findpreview }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.473, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_getoptions }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.474, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_getpos }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.475, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_hide }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.476, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_list }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.477, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_locate }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.478, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_menu }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.479, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_move }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.480, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_notification }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.481, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_setoptions }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.482, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_settext }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.483, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_popup_show }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.484, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_pow }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.485, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_prevnonblank }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.486, i32 0, i32 0), i8 1, i8 19, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_printf }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.487, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_prompt_getprompt }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.488, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prompt_setcallback }, %struct.funcentry_T { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.489, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prompt_setinterrupt }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.490, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prompt_setprompt }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.491, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_add }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_clear }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.493, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_find }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.494, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_list }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.495, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_remove }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.496, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_type_add }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.497, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_type_change }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.498, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_type_delete }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.499, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_type_get }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.500, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_prop_type_list }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.501, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_number, void (%struct.typval_T*, %struct.typval_T*)* @f_pum_getpos }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.502, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_pumvisible }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.503, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.504, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.505, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.506, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_rand }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.507, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_range }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.508, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_blob, void (%struct.typval_T*, %struct.typval_T*)* @f_readblob }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.509, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_readdir }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_readdirex }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.511, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_readfile }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.512, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_reduce }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.513, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_reg_executing }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.514, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_reg_recording }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_reltime }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.515, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_reltimefloat }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.516, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_reltimestr }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.517, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_expr }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_foreground }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.519, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_peek }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.520, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_read }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.521, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_send }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.522, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_remote_startserver }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.523, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_remove, void (%struct.typval_T*, %struct.typval_T*)* @f_remove }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.524, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_rename }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.525, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_repeat }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.526, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_resolve }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.527, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_reverse }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_round }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.529, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.530, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screenattr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.531, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screenchar }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.532, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screenchars }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screencol }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screenpos }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.535, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_screenrow }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.536, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_screenstring }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.537, i32 0, i32 0), i8 1, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_search }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_searchcount }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.539, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_searchdecl }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.540, i32 0, i32 0), i8 3, i8 7, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_searchpair }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.541, i32 0, i32 0), i8 3, i8 7, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_searchpairpos }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8 1, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_searchpos }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.543, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_server2client }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.544, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_serverlist }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.545, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setbufline }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.546, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_setbufvar }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.547, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_setcellwidths }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.548, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setcharpos }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.549, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_setcharsearch }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.550, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setcmdpos }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.551, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setcursorcharpos }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.552, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_setenv }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.553, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setfperm }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setline }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.555, i32 0, i32 0), i8 2, i8 4, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setloclist }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.556, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setmatches }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.557, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setpos }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.558, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setqflist }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_setreg }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.560, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_settabvar }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.561, i32 0, i32 0), i8 4, i8 4, i8 4, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_settabwinvar }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.562, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_settagstack }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.563, i32 0, i32 0), i8 3, i8 3, i8 3, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_setwinvar }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.564, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_sha256 }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.565, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_shellescape }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.566, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_shiftwidth }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.567, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_define }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.568, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_getdefined }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.569, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_getplaced }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.570, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_jump }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.571, i32 0, i32 0), i8 4, i8 5, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_place }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.572, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_placelist }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.573, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_undefine }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_unplace }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.575, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_sign_unplacelist }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.576, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_simplify }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.577, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_sin }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.578, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_sinh }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.579, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_slice }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_first_arg, void (%struct.typval_T*, %struct.typval_T*)* @f_sort }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.581, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.582, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.583, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.584, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* null }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.585, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_soundfold }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.586, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_spellbadword }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.587, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_spellsuggest }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.588, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_split }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.589, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_sqrt }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.590, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_srand }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.591, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_state }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.592, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([1 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [1 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg1_string, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_str2float }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.593, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_str2list }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.594, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** getelementptr inbounds ([3 x i32 (%struct.type_S*, %struct.argcontext_T*)*], [3 x i32 (%struct.type_S*, %struct.argcontext_T*)*]* @arg3_string_nr_bool, i32 0, i32 0), %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_str2nr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.595, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strcharlen }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.596, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_strcharpart }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.597, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strchars }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.598, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strdisplaywidth }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.599, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_strftime }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.600, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strgetchar }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.601, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_stridx }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.602, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_string }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.603, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strlen }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.604, i32 0, i32 0), i8 2, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_strpart }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.605, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strptime }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strridx }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.607, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_strtrans }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.608, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_strwidth }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.609, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_submatch }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.610, i32 0, i32 0), i8 4, i8 4, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_substitute }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.611, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_swapinfo }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_swapname }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.613, i32 0, i32 0), i8 3, i8 3, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_synID }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.614, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_synIDattr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.615, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_synIDtrans }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.616, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_synconcealed }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.617, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_synstack }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.147, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_system }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.618, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_systemlist }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.619, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_tabpagebuflist }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.620, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_tabpagenr }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_tabpagewinnr }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.622, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_tagfiles }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_taglist }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.624, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_tan }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.625, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_tanh }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.626, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_tempname }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.627, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_dumpdiff }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.628, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_dumpload }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.629, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_dumpwrite }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.630, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getaltscreen }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.631, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_string, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getansicolors }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.632, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getattr }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.633, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getcursor }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.634, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_job, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getjob }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.635, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getline }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.636, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getscrolled }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.637, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getsize }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.638, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_term_getstatus }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.639, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_term_gettitle }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.640, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_term_gettty }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.641, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_list }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.642, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_term_scrape }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.643, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_sendkeys }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.644, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_setansicolors }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.645, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_setapi }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.646, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_setkill }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.647, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_setrestore }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.648, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_setsize }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.649, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_term_start }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.650, i32 0, i32 0), i8 1, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_term_wait }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.651, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_string, void (%struct.typval_T*, %struct.typval_T*)* @f_terminalprops }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.652, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_alloc_fail }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.653, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_autochdir }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.654, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_feedinput }, %struct.funcentry_T { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.655, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_garbagecollect_now }, %struct.funcentry_T { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.656, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_garbagecollect_soon }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.657, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_test_getvalue }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.658, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_ignore_error }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.659, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_blob, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_blob }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.660, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_channel, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_channel }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.661, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_dict }, %struct.funcentry_T { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.662, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_func_any, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_function }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.663, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_job, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_job }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.664, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_list }, %struct.funcentry_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.665, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_func_any, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_partial }, %struct.funcentry_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.666, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_test_null_string }, %struct.funcentry_T { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.667, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_option_not_set }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.668, i32 0, i32 0), i8 2, i8 2, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_override }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.669, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_test_refcount }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.670, i32 0, i32 0), i8 3, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_scrollbar }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.671, i32 0, i32 0), i8 2, i8 2, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_setmouse }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.672, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_settime }, %struct.funcentry_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.673, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_srand_seed }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.674, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_any, void (%struct.typval_T*, %struct.typval_T*)* @f_test_unknown }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.675, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_test_void }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.676, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_timer_info }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.677, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_timer_pause }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.678, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_timer_start }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_timer_stop }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.680, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_timer_stopall }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.681, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_tolower }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_toupper }, %struct.funcentry_T { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.683, i32 0, i32 0), i8 3, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_tr }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.684, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_trim }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.685, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_float, void (%struct.typval_T*, %struct.typval_T*)* @f_trunc }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.686, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_type }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.687, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_typename }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.688, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_undofile }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.689, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_any, void (%struct.typval_T*, %struct.typval_T*)* @f_undotree }, %struct.funcentry_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.690, i32 0, i32 0), i8 1, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_uniq }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.691, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_values }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.692, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_virtcol }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.693, i32 0, i32 0), i8 0, i8 1, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_visualmode }, %struct.funcentry_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.694, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_wildmenumode }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.695, i32 0, i32 0), i8 2, i8 3, i8 2, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_win_execute }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.696, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_win_findbuf }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.697, i32 0, i32 0), i8 0, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_win_getid }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.698, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_win_gettype }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.699, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_win_gotoid }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.700, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_win_id2tabwin }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.701, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_win_id2win }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.702, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_number, void (%struct.typval_T*, %struct.typval_T*)* @f_win_screenpos }, %struct.funcentry_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.703, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_win_splitmove }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.704, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winbufnr }, %struct.funcentry_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.705, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_wincol }, %struct.funcentry_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.706, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_windowsversion }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.707, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winheight }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.708, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_list_any, void (%struct.typval_T*, %struct.typval_T*)* @f_winlayout }, %struct.funcentry_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.709, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winline }, %struct.funcentry_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.710, i32 0, i32 0), i8 0, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winnr }, %struct.funcentry_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.711, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_string, void (%struct.typval_T*, %struct.typval_T*)* @f_winrestcmd }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.712, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_void, void (%struct.typval_T*, %struct.typval_T*)* @f_winrestview }, %struct.funcentry_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.713, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winsaveview }, %struct.funcentry_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.714, i32 0, i32 0), i8 1, i8 1, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_winwidth }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.715, i32 0, i32 0), i8 0, i8 0, i8 0, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_dict_number, void (%struct.typval_T*, %struct.typval_T*)* @f_wordcount }, %struct.funcentry_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.716, i32 0, i32 0), i8 2, i8 3, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number_bool, void (%struct.typval_T*, %struct.typval_T*)* @f_writefile }, %struct.funcentry_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.717, i32 0, i32 0), i8 2, i8 2, i8 1, i32 (%struct.type_S*, %struct.argcontext_T*)** null, %struct.type_S* (i32, %struct.type_S**)* @ret_number, void (%struct.typval_T*, %struct.typval_T*)* @f_xor }], align 16, !dbg !2565
@get_expr_name.intidx = internal unnamed_addr global i32 -1, align 4, !dbg !2528
@e_toomanyarg = external global [0 x i8], align 1
@e_toofewarg = external global [0 x i8], align 1
@emsg_off = external local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [30 x i8] c"E158: Invalid buffer name: %s\00", align 1
@curwin = external local_unnamed_addr global %struct.window_S*, align 8
@e_invalwindow = external global [0 x i8], align 1
@redir_execute_ga = internal global %struct.growarray zeroinitializer, align 8, !dbg !2563
@msg_silent = external local_unnamed_addr global i32, align 4
@emsg_silent = external local_unnamed_addr global i32, align 4
@emsg_noredir = external local_unnamed_addr global i32, align 4
@redir_execute = external local_unnamed_addr global i32, align 4
@redir_off = external local_unnamed_addr global i32, align 4
@msg_col = external local_unnamed_addr global i32, align 4
@e_inval_string = external global [0 x i8], align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"silent!\00", align 1
@range_list_item = external global %struct.listitem_S, align 8
@f_has.has_list = internal unnamed_addr constant [184 x %struct.has_item_T] [%struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.108, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.111, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.112, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.113, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.121, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.122, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.127, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.129, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.130, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.134, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.136, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.138, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.140, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.141, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.147, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.148, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.158, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.163, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.170, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.172, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.173, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.175, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.176, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.177, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.178, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.180, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.181, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.185, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.186, i32 0, i32 0), i16 1 }, %struct.has_item_T { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i32 0, i32 0), i16 0 }, %struct.has_item_T { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.188, i32 0, i32 0), i16 1 }, %struct.has_item_T zeroinitializer], align 16, !dbg !2535
@.str.6 = private unnamed_addr constant [6 x i8] c"amiga\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"arp\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"haiku\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"bsd\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"hpux\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"linux\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"mac\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"osx\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"macunix\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"osxdarwin\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"qnx\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"sun\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"vms\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"win32\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"win32unix\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"win64\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"ebcdic\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"fname_case\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"acl\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"arabic\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"autocmd\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"autochdir\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"autoservername\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"balloon_eval\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"balloon_multiline\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"balloon_eval_term\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"builtin_terms\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"all_builtin_terms\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"browsefilter\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"byte_offset\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"channel\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"cindent\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"clientserver\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"clipboard\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"cmdline_compl\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"cmdline_hist\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"cmdwin\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"comments\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"conceal\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"cryptv\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"crypt-blowfish\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"crypt-blowfish2\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"cscope\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"cursorbind\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"cursorshape\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"dialog_con\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"dialog_gui\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"diff\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"digraphs\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"directx\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"dnd\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"emacs_tags\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"ex_extra\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"extra_search\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"file_in_path\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"filterpipe\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"find_in_path\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"folding\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"footer\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"gettext\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"gui\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"gui_neXtaw\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"gui_athena\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"gui_gtk\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"gui_gtk2\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"gui_gtk3\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"gui_gnome\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"gui_haiku\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"gui_mac\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"gui_motif\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c"gui_photon\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"gui_win32\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"iconv\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"insert_expand\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"ipv6\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"job\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"jumplist\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"keymap\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"lambda\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"langmap\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"libcall\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"linebreak\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"lispindent\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"listcmds\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"localmap\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"lua\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"mksession\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"modify_fname\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"mouseshape\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"mouse_dec\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"mouse_gpm\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"mouse_jsbterm\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"mouse_netterm\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"mouse_pterm\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"mouse_sgr\00", align 1
@.str.108 = private unnamed_addr constant [15 x i8] c"mouse_sysmouse\00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c"mouse_urxvt\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"mouse_xterm\00", align 1
@.str.111 = private unnamed_addr constant [11 x i8] c"multi_byte\00", align 1
@.str.112 = private unnamed_addr constant [15 x i8] c"multi_byte_ime\00", align 1
@.str.113 = private unnamed_addr constant [11 x i8] c"multi_lang\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"mzscheme\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"num64\00", align 1
@.str.116 = private unnamed_addr constant [4 x i8] c"ole\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"packages\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"path_extra\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"perl\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"persistent_undo\00", align 1
@.str.121 = private unnamed_addr constant [16 x i8] c"python_compiled\00", align 1
@.str.122 = private unnamed_addr constant [15 x i8] c"python_dynamic\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"python\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"pythonx\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"python3_compiled\00", align 1
@.str.126 = private unnamed_addr constant [16 x i8] c"python3_dynamic\00", align 1
@.str.127 = private unnamed_addr constant [8 x i8] c"python3\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"popupwin\00", align 1
@.str.129 = private unnamed_addr constant [11 x i8] c"postscript\00", align 1
@.str.130 = private unnamed_addr constant [8 x i8] c"printer\00", align 1
@.str.131 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"reltime\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"quickfix\00", align 1
@.str.134 = private unnamed_addr constant [10 x i8] c"rightleft\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"ruby\00", align 1
@.str.136 = private unnamed_addr constant [11 x i8] c"scrollbind\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"showcmd\00", align 1
@.str.138 = private unnamed_addr constant [13 x i8] c"cmdline_info\00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"signs\00", align 1
@.str.140 = private unnamed_addr constant [12 x i8] c"smartindent\00", align 1
@.str.141 = private unnamed_addr constant [12 x i8] c"startuptime\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"statusline\00", align 1
@.str.143 = private unnamed_addr constant [14 x i8] c"netbeans_intg\00", align 1
@.str.144 = private unnamed_addr constant [6 x i8] c"sound\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"spell\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"syntax\00", align 1
@.str.147 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c"tag_binary\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c"tcl\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"termguicolors\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"terminal\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"terminfo\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"termresponse\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"textobjects\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"textprop\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"tgetent\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"timers\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"toolbar\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c"unnamedplus\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"user-commands\00", align 1
@.str.162 = private unnamed_addr constant [14 x i8] c"user_commands\00", align 1
@.str.163 = private unnamed_addr constant [8 x i8] c"vartabs\00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c"vertsplit\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"viminfo\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"vimscript-1\00", align 1
@.str.167 = private unnamed_addr constant [12 x i8] c"vimscript-2\00", align 1
@.str.168 = private unnamed_addr constant [12 x i8] c"vimscript-3\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"vimscript-4\00", align 1
@.str.170 = private unnamed_addr constant [12 x i8] c"virtualedit\00", align 1
@.str.171 = private unnamed_addr constant [7 x i8] c"visual\00", align 1
@.str.172 = private unnamed_addr constant [12 x i8] c"visualextra\00", align 1
@.str.173 = private unnamed_addr constant [9 x i8] c"vreplace\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"vtp\00", align 1
@.str.175 = private unnamed_addr constant [11 x i8] c"wildignore\00", align 1
@.str.176 = private unnamed_addr constant [9 x i8] c"wildmenu\00", align 1
@.str.177 = private unnamed_addr constant [8 x i8] c"windows\00", align 1
@.str.178 = private unnamed_addr constant [11 x i8] c"winaltkeys\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"writebackup\00", align 1
@.str.180 = private unnamed_addr constant [4 x i8] c"xim\00", align 1
@.str.181 = private unnamed_addr constant [9 x i8] c"xfontset\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"xpm\00", align 1
@.str.183 = private unnamed_addr constant [8 x i8] c"xpm_w32\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"xsmp\00", align 1
@.str.185 = private unnamed_addr constant [14 x i8] c"xsmp_interact\00", align 1
@.str.186 = private unnamed_addr constant [16 x i8] c"xterm_clipboard\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"xterm_save\00", align 1
@.str.188 = private unnamed_addr constant [4 x i8] c"X11\00", align 1
@.str.189 = private unnamed_addr constant [6 x i8] c"patch\00", align 1
@.str.190 = private unnamed_addr constant [13 x i8] c"vim_starting\00", align 1
@starting = external local_unnamed_addr global i32, align 4
@.str.191 = private unnamed_addr constant [6 x i8] c"ttyin\00", align 1
@.str.192 = private unnamed_addr constant [7 x i8] c"ttyout\00", align 1
@stdout_isatty = external local_unnamed_addr global i32, align 4
@.str.193 = private unnamed_addr constant [20 x i8] c"multi_byte_encoding\00", align 1
@has_mbyte = external local_unnamed_addr global i32, align 4
@.str.194 = private unnamed_addr constant [12 x i8] c"gui_running\00", align 1
@gui = external local_unnamed_addr global %struct.Gui, align 8
@.str.195 = private unnamed_addr constant [7 x i8] c"browse\00", align 1
@.str.196 = private unnamed_addr constant [13 x i8] c"syntax_items\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"vcon\00", align 1
@.str.198 = private unnamed_addr constant [17 x i8] c"netbeans_enabled\00", align 1
@.str.199 = private unnamed_addr constant [18 x i8] c"mouse_gpm_enabled\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"conpty\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"clipboard_working\00", align 1
@clip_star = external local_unnamed_addr global %struct.Clipboard_T, align 8
@p_cpo = external local_unnamed_addr global i8*, align 8
@empty_option = external local_unnamed_addr global i8*, align 8
@.str.202 = private unnamed_addr constant [21 x i8] c"\5Cm\5C(%s\5Cm\5C)\5C|\5C(%s\5Cm\5C)\00", align 1
@.str.203 = private unnamed_addr constant [31 x i8] c"\5Cm\5C(%s\5Cm\5C)\5C|\5C(%s\5Cm\5C)\5C|\5C(%s\5Cm\5C)\00", align 1
@curbuf = external local_unnamed_addr global %struct.file_buffer*, align 8
@.str.204 = private unnamed_addr constant [4 x i8] c"cpo\00", align 1
@t_string = external global %struct.type_S, align 8
@t_number = external global %struct.type_S, align 8
@t_bool = external global %struct.type_S, align 8
@t_list_any = external global %struct.type_S, align 8
@.str.205 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.207 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.208 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"appendbufline\00", align 1
@.str.211 = private unnamed_addr constant [5 x i8] c"argc\00", align 1
@.str.212 = private unnamed_addr constant [7 x i8] c"argidx\00", align 1
@.str.213 = private unnamed_addr constant [10 x i8] c"arglistid\00", align 1
@.str.214 = private unnamed_addr constant [5 x i8] c"argv\00", align 1
@.str.215 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"assert_beeps\00", align 1
@.str.217 = private unnamed_addr constant [13 x i8] c"assert_equal\00", align 1
@.str.218 = private unnamed_addr constant [17 x i8] c"assert_equalfile\00", align 1
@.str.219 = private unnamed_addr constant [17 x i8] c"assert_exception\00", align 1
@.str.220 = private unnamed_addr constant [13 x i8] c"assert_fails\00", align 1
@.str.221 = private unnamed_addr constant [13 x i8] c"assert_false\00", align 1
@.str.222 = private unnamed_addr constant [15 x i8] c"assert_inrange\00", align 1
@.str.223 = private unnamed_addr constant [13 x i8] c"assert_match\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"assert_nobeep\00", align 1
@.str.225 = private unnamed_addr constant [16 x i8] c"assert_notequal\00", align 1
@.str.226 = private unnamed_addr constant [16 x i8] c"assert_notmatch\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"assert_report\00", align 1
@.str.228 = private unnamed_addr constant [12 x i8] c"assert_true\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.231 = private unnamed_addr constant [16 x i8] c"balloon_gettext\00", align 1
@.str.232 = private unnamed_addr constant [13 x i8] c"balloon_show\00", align 1
@.str.233 = private unnamed_addr constant [14 x i8] c"balloon_split\00", align 1
@.str.234 = private unnamed_addr constant [10 x i8] c"browsedir\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"bufadd\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"bufexists\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"buffer_exists\00", align 1
@.str.238 = private unnamed_addr constant [12 x i8] c"buffer_name\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"buffer_number\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"buflisted\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c"bufload\00", align 1
@.str.242 = private unnamed_addr constant [10 x i8] c"bufloaded\00", align 1
@.str.243 = private unnamed_addr constant [8 x i8] c"bufname\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"bufnr\00", align 1
@.str.245 = private unnamed_addr constant [9 x i8] c"bufwinid\00", align 1
@.str.246 = private unnamed_addr constant [9 x i8] c"bufwinnr\00", align 1
@.str.247 = private unnamed_addr constant [10 x i8] c"byte2line\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"byteidx\00", align 1
@.str.249 = private unnamed_addr constant [12 x i8] c"byteidxcomp\00", align 1
@.str.250 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.251 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"ch_canread\00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"ch_close\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"ch_close_in\00", align 1
@.str.255 = private unnamed_addr constant [12 x i8] c"ch_evalexpr\00", align 1
@.str.256 = private unnamed_addr constant [11 x i8] c"ch_evalraw\00", align 1
@.str.257 = private unnamed_addr constant [12 x i8] c"ch_getbufnr\00", align 1
@.str.258 = private unnamed_addr constant [10 x i8] c"ch_getjob\00", align 1
@.str.259 = private unnamed_addr constant [8 x i8] c"ch_info\00", align 1
@.str.260 = private unnamed_addr constant [7 x i8] c"ch_log\00", align 1
@.str.261 = private unnamed_addr constant [11 x i8] c"ch_logfile\00", align 1
@.str.262 = private unnamed_addr constant [8 x i8] c"ch_open\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"ch_read\00", align 1
@.str.264 = private unnamed_addr constant [12 x i8] c"ch_readblob\00", align 1
@.str.265 = private unnamed_addr constant [11 x i8] c"ch_readraw\00", align 1
@.str.266 = private unnamed_addr constant [12 x i8] c"ch_sendexpr\00", align 1
@.str.267 = private unnamed_addr constant [11 x i8] c"ch_sendraw\00", align 1
@.str.268 = private unnamed_addr constant [14 x i8] c"ch_setoptions\00", align 1
@.str.269 = private unnamed_addr constant [10 x i8] c"ch_status\00", align 1
@.str.270 = private unnamed_addr constant [9 x i8] c"changenr\00", align 1
@.str.271 = private unnamed_addr constant [8 x i8] c"char2nr\00", align 1
@.str.272 = private unnamed_addr constant [10 x i8] c"charclass\00", align 1
@.str.273 = private unnamed_addr constant [8 x i8] c"charcol\00", align 1
@.str.274 = private unnamed_addr constant [8 x i8] c"charidx\00", align 1
@.str.275 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.276 = private unnamed_addr constant [13 x i8] c"clearmatches\00", align 1
@.str.277 = private unnamed_addr constant [4 x i8] c"col\00", align 1
@.str.278 = private unnamed_addr constant [9 x i8] c"complete\00", align 1
@.str.279 = private unnamed_addr constant [13 x i8] c"complete_add\00", align 1
@.str.280 = private unnamed_addr constant [15 x i8] c"complete_check\00", align 1
@.str.281 = private unnamed_addr constant [14 x i8] c"complete_info\00", align 1
@.str.282 = private unnamed_addr constant [8 x i8] c"confirm\00", align 1
@.str.283 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.284 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.285 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.287 = private unnamed_addr constant [18 x i8] c"cscope_connection\00", align 1
@.str.288 = private unnamed_addr constant [7 x i8] c"cursor\00", align 1
@.str.289 = private unnamed_addr constant [11 x i8] c"debugbreak\00", align 1
@.str.290 = private unnamed_addr constant [9 x i8] c"deepcopy\00", align 1
@.str.291 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.292 = private unnamed_addr constant [14 x i8] c"deletebufline\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"did_filetype\00", align 1
@.str.294 = private unnamed_addr constant [12 x i8] c"diff_filler\00", align 1
@.str.295 = private unnamed_addr constant [10 x i8] c"diff_hlID\00", align 1
@.str.296 = private unnamed_addr constant [8 x i8] c"echoraw\00", align 1
@.str.297 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"environ\00", align 1
@.str.299 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.300 = private unnamed_addr constant [13 x i8] c"eventhandler\00", align 1
@.str.301 = private unnamed_addr constant [11 x i8] c"executable\00", align 1
@.str.302 = private unnamed_addr constant [8 x i8] c"execute\00", align 1
@.str.303 = private unnamed_addr constant [8 x i8] c"exepath\00", align 1
@.str.304 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.306 = private unnamed_addr constant [7 x i8] c"expand\00", align 1
@.str.307 = private unnamed_addr constant [10 x i8] c"expandcmd\00", align 1
@.str.308 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.309 = private unnamed_addr constant [10 x i8] c"extendnew\00", align 1
@.str.310 = private unnamed_addr constant [9 x i8] c"feedkeys\00", align 1
@.str.311 = private unnamed_addr constant [14 x i8] c"file_readable\00", align 1
@.str.312 = private unnamed_addr constant [13 x i8] c"filereadable\00", align 1
@.str.313 = private unnamed_addr constant [13 x i8] c"filewritable\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"finddir\00", align 1
@.str.316 = private unnamed_addr constant [9 x i8] c"findfile\00", align 1
@.str.317 = private unnamed_addr constant [8 x i8] c"flatten\00", align 1
@.str.318 = private unnamed_addr constant [11 x i8] c"flattennew\00", align 1
@.str.319 = private unnamed_addr constant [9 x i8] c"float2nr\00", align 1
@.str.320 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.321 = private unnamed_addr constant [5 x i8] c"fmod\00", align 1
@.str.322 = private unnamed_addr constant [12 x i8] c"fnameescape\00", align 1
@.str.323 = private unnamed_addr constant [12 x i8] c"fnamemodify\00", align 1
@.str.324 = private unnamed_addr constant [11 x i8] c"foldclosed\00", align 1
@.str.325 = private unnamed_addr constant [14 x i8] c"foldclosedend\00", align 1
@.str.326 = private unnamed_addr constant [10 x i8] c"foldlevel\00", align 1
@.str.327 = private unnamed_addr constant [9 x i8] c"foldtext\00", align 1
@.str.328 = private unnamed_addr constant [15 x i8] c"foldtextresult\00", align 1
@.str.329 = private unnamed_addr constant [11 x i8] c"foreground\00", align 1
@.str.330 = private unnamed_addr constant [12 x i8] c"fullcommand\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"funcref\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.333 = private unnamed_addr constant [15 x i8] c"garbagecollect\00", align 1
@.str.334 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.335 = private unnamed_addr constant [11 x i8] c"getbufinfo\00", align 1
@.str.336 = private unnamed_addr constant [11 x i8] c"getbufline\00", align 1
@.str.337 = private unnamed_addr constant [10 x i8] c"getbufvar\00", align 1
@.str.338 = private unnamed_addr constant [14 x i8] c"getchangelist\00", align 1
@.str.339 = private unnamed_addr constant [8 x i8] c"getchar\00", align 1
@.str.340 = private unnamed_addr constant [11 x i8] c"getcharmod\00", align 1
@.str.341 = private unnamed_addr constant [11 x i8] c"getcharpos\00", align 1
@.str.342 = private unnamed_addr constant [14 x i8] c"getcharsearch\00", align 1
@.str.343 = private unnamed_addr constant [11 x i8] c"getcmdline\00", align 1
@.str.344 = private unnamed_addr constant [10 x i8] c"getcmdpos\00", align 1
@.str.345 = private unnamed_addr constant [11 x i8] c"getcmdtype\00", align 1
@.str.346 = private unnamed_addr constant [14 x i8] c"getcmdwintype\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"getcompletion\00", align 1
@.str.348 = private unnamed_addr constant [10 x i8] c"getcurpos\00", align 1
@.str.349 = private unnamed_addr constant [17 x i8] c"getcursorcharpos\00", align 1
@.str.350 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.351 = private unnamed_addr constant [7 x i8] c"getenv\00", align 1
@.str.352 = private unnamed_addr constant [12 x i8] c"getfontname\00", align 1
@.str.353 = private unnamed_addr constant [9 x i8] c"getfperm\00", align 1
@.str.354 = private unnamed_addr constant [9 x i8] c"getfsize\00", align 1
@.str.355 = private unnamed_addr constant [9 x i8] c"getftime\00", align 1
@.str.356 = private unnamed_addr constant [9 x i8] c"getftype\00", align 1
@.str.357 = private unnamed_addr constant [12 x i8] c"getimstatus\00", align 1
@.str.358 = private unnamed_addr constant [12 x i8] c"getjumplist\00", align 1
@.str.359 = private unnamed_addr constant [8 x i8] c"getline\00", align 1
@.str.360 = private unnamed_addr constant [11 x i8] c"getloclist\00", align 1
@.str.361 = private unnamed_addr constant [12 x i8] c"getmarklist\00", align 1
@.str.362 = private unnamed_addr constant [11 x i8] c"getmatches\00", align 1
@.str.363 = private unnamed_addr constant [12 x i8] c"getmousepos\00", align 1
@.str.364 = private unnamed_addr constant [7 x i8] c"getpid\00", align 1
@.str.365 = private unnamed_addr constant [7 x i8] c"getpos\00", align 1
@.str.366 = private unnamed_addr constant [10 x i8] c"getqflist\00", align 1
@.str.367 = private unnamed_addr constant [7 x i8] c"getreg\00", align 1
@.str.368 = private unnamed_addr constant [11 x i8] c"getreginfo\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"getregtype\00", align 1
@.str.370 = private unnamed_addr constant [11 x i8] c"gettabinfo\00", align 1
@.str.371 = private unnamed_addr constant [10 x i8] c"gettabvar\00", align 1
@.str.372 = private unnamed_addr constant [13 x i8] c"gettabwinvar\00", align 1
@.str.373 = private unnamed_addr constant [12 x i8] c"gettagstack\00", align 1
@.str.374 = private unnamed_addr constant [11 x i8] c"getwininfo\00", align 1
@.str.375 = private unnamed_addr constant [10 x i8] c"getwinpos\00", align 1
@.str.376 = private unnamed_addr constant [11 x i8] c"getwinposx\00", align 1
@.str.377 = private unnamed_addr constant [11 x i8] c"getwinposy\00", align 1
@.str.378 = private unnamed_addr constant [10 x i8] c"getwinvar\00", align 1
@.str.379 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.380 = private unnamed_addr constant [12 x i8] c"glob2regpat\00", align 1
@.str.381 = private unnamed_addr constant [9 x i8] c"globpath\00", align 1
@.str.382 = private unnamed_addr constant [4 x i8] c"has\00", align 1
@.str.383 = private unnamed_addr constant [8 x i8] c"has_key\00", align 1
@.str.384 = private unnamed_addr constant [12 x i8] c"haslocaldir\00", align 1
@.str.385 = private unnamed_addr constant [9 x i8] c"hasmapto\00", align 1
@.str.386 = private unnamed_addr constant [12 x i8] c"highlightID\00", align 1
@.str.387 = private unnamed_addr constant [17 x i8] c"highlight_exists\00", align 1
@.str.388 = private unnamed_addr constant [8 x i8] c"histadd\00", align 1
@.str.389 = private unnamed_addr constant [8 x i8] c"histdel\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"histget\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"histnr\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"hlID\00", align 1
@.str.393 = private unnamed_addr constant [9 x i8] c"hlexists\00", align 1
@.str.394 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"indent\00", align 1
@.str.396 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.397 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"inputdialog\00", align 1
@.str.399 = private unnamed_addr constant [10 x i8] c"inputlist\00", align 1
@.str.400 = private unnamed_addr constant [13 x i8] c"inputrestore\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"inputsave\00", align 1
@.str.402 = private unnamed_addr constant [12 x i8] c"inputsecret\00", align 1
@.str.403 = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@.str.404 = private unnamed_addr constant [10 x i8] c"interrupt\00", align 1
@.str.405 = private unnamed_addr constant [7 x i8] c"invert\00", align 1
@.str.406 = private unnamed_addr constant [12 x i8] c"isdirectory\00", align 1
@.str.407 = private unnamed_addr constant [6 x i8] c"isinf\00", align 1
@.str.408 = private unnamed_addr constant [9 x i8] c"islocked\00", align 1
@.str.409 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.410 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.411 = private unnamed_addr constant [15 x i8] c"job_getchannel\00", align 1
@.str.412 = private unnamed_addr constant [9 x i8] c"job_info\00", align 1
@.str.413 = private unnamed_addr constant [15 x i8] c"job_setoptions\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"job_start\00", align 1
@.str.415 = private unnamed_addr constant [11 x i8] c"job_status\00", align 1
@.str.416 = private unnamed_addr constant [9 x i8] c"job_stop\00", align 1
@.str.417 = private unnamed_addr constant [5 x i8] c"join\00", align 1
@.str.418 = private unnamed_addr constant [10 x i8] c"js_decode\00", align 1
@.str.419 = private unnamed_addr constant [10 x i8] c"js_encode\00", align 1
@.str.420 = private unnamed_addr constant [12 x i8] c"json_decode\00", align 1
@.str.421 = private unnamed_addr constant [12 x i8] c"json_encode\00", align 1
@.str.422 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.423 = private unnamed_addr constant [15 x i8] c"last_buffer_nr\00", align 1
@.str.424 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.425 = private unnamed_addr constant [10 x i8] c"libcallnr\00", align 1
@.str.426 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.427 = private unnamed_addr constant [10 x i8] c"line2byte\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"list2str\00", align 1
@.str.429 = private unnamed_addr constant [13 x i8] c"listener_add\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"listener_flush\00", align 1
@.str.431 = private unnamed_addr constant [16 x i8] c"listener_remove\00", align 1
@.str.432 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.433 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.434 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.435 = private unnamed_addr constant [8 x i8] c"luaeval\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.437 = private unnamed_addr constant [7 x i8] c"maparg\00", align 1
@.str.438 = private unnamed_addr constant [9 x i8] c"mapcheck\00", align 1
@.str.439 = private unnamed_addr constant [7 x i8] c"mapnew\00", align 1
@.str.440 = private unnamed_addr constant [7 x i8] c"mapset\00", align 1
@.str.441 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.442 = private unnamed_addr constant [9 x i8] c"matchadd\00", align 1
@.str.443 = private unnamed_addr constant [12 x i8] c"matchaddpos\00", align 1
@.str.444 = private unnamed_addr constant [9 x i8] c"matcharg\00", align 1
@.str.445 = private unnamed_addr constant [12 x i8] c"matchdelete\00", align 1
@.str.446 = private unnamed_addr constant [9 x i8] c"matchend\00", align 1
@.str.447 = private unnamed_addr constant [11 x i8] c"matchfuzzy\00", align 1
@.str.448 = private unnamed_addr constant [14 x i8] c"matchfuzzypos\00", align 1
@.str.449 = private unnamed_addr constant [10 x i8] c"matchlist\00", align 1
@.str.450 = private unnamed_addr constant [9 x i8] c"matchstr\00", align 1
@.str.451 = private unnamed_addr constant [12 x i8] c"matchstrpos\00", align 1
@.str.452 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.453 = private unnamed_addr constant [10 x i8] c"menu_info\00", align 1
@.str.454 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.455 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.456 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.457 = private unnamed_addr constant [7 x i8] c"mzeval\00", align 1
@.str.458 = private unnamed_addr constant [13 x i8] c"nextnonblank\00", align 1
@.str.459 = private unnamed_addr constant [8 x i8] c"nr2char\00", align 1
@.str.460 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.461 = private unnamed_addr constant [12 x i8] c"pathshorten\00", align 1
@.str.462 = private unnamed_addr constant [9 x i8] c"perleval\00", align 1
@.str.463 = private unnamed_addr constant [15 x i8] c"popup_atcursor\00", align 1
@.str.464 = private unnamed_addr constant [12 x i8] c"popup_beval\00", align 1
@.str.465 = private unnamed_addr constant [12 x i8] c"popup_clear\00", align 1
@.str.466 = private unnamed_addr constant [12 x i8] c"popup_close\00", align 1
@.str.467 = private unnamed_addr constant [13 x i8] c"popup_create\00", align 1
@.str.468 = private unnamed_addr constant [13 x i8] c"popup_dialog\00", align 1
@.str.469 = private unnamed_addr constant [18 x i8] c"popup_filter_menu\00", align 1
@.str.470 = private unnamed_addr constant [19 x i8] c"popup_filter_yesno\00", align 1
@.str.471 = private unnamed_addr constant [15 x i8] c"popup_findinfo\00", align 1
@.str.472 = private unnamed_addr constant [18 x i8] c"popup_findpreview\00", align 1
@.str.473 = private unnamed_addr constant [17 x i8] c"popup_getoptions\00", align 1
@.str.474 = private unnamed_addr constant [13 x i8] c"popup_getpos\00", align 1
@.str.475 = private unnamed_addr constant [11 x i8] c"popup_hide\00", align 1
@.str.476 = private unnamed_addr constant [11 x i8] c"popup_list\00", align 1
@.str.477 = private unnamed_addr constant [13 x i8] c"popup_locate\00", align 1
@.str.478 = private unnamed_addr constant [11 x i8] c"popup_menu\00", align 1
@.str.479 = private unnamed_addr constant [11 x i8] c"popup_move\00", align 1
@.str.480 = private unnamed_addr constant [19 x i8] c"popup_notification\00", align 1
@.str.481 = private unnamed_addr constant [17 x i8] c"popup_setoptions\00", align 1
@.str.482 = private unnamed_addr constant [14 x i8] c"popup_settext\00", align 1
@.str.483 = private unnamed_addr constant [11 x i8] c"popup_show\00", align 1
@.str.484 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.485 = private unnamed_addr constant [13 x i8] c"prevnonblank\00", align 1
@.str.486 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"prompt_getprompt\00", align 1
@.str.488 = private unnamed_addr constant [19 x i8] c"prompt_setcallback\00", align 1
@.str.489 = private unnamed_addr constant [20 x i8] c"prompt_setinterrupt\00", align 1
@.str.490 = private unnamed_addr constant [17 x i8] c"prompt_setprompt\00", align 1
@.str.491 = private unnamed_addr constant [9 x i8] c"prop_add\00", align 1
@.str.492 = private unnamed_addr constant [11 x i8] c"prop_clear\00", align 1
@.str.493 = private unnamed_addr constant [10 x i8] c"prop_find\00", align 1
@.str.494 = private unnamed_addr constant [10 x i8] c"prop_list\00", align 1
@.str.495 = private unnamed_addr constant [12 x i8] c"prop_remove\00", align 1
@.str.496 = private unnamed_addr constant [14 x i8] c"prop_type_add\00", align 1
@.str.497 = private unnamed_addr constant [17 x i8] c"prop_type_change\00", align 1
@.str.498 = private unnamed_addr constant [17 x i8] c"prop_type_delete\00", align 1
@.str.499 = private unnamed_addr constant [14 x i8] c"prop_type_get\00", align 1
@.str.500 = private unnamed_addr constant [15 x i8] c"prop_type_list\00", align 1
@.str.501 = private unnamed_addr constant [11 x i8] c"pum_getpos\00", align 1
@.str.502 = private unnamed_addr constant [11 x i8] c"pumvisible\00", align 1
@.str.503 = private unnamed_addr constant [8 x i8] c"py3eval\00", align 1
@.str.504 = private unnamed_addr constant [7 x i8] c"pyeval\00", align 1
@.str.505 = private unnamed_addr constant [8 x i8] c"pyxeval\00", align 1
@.str.506 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.507 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.508 = private unnamed_addr constant [9 x i8] c"readblob\00", align 1
@.str.509 = private unnamed_addr constant [8 x i8] c"readdir\00", align 1
@.str.510 = private unnamed_addr constant [10 x i8] c"readdirex\00", align 1
@.str.511 = private unnamed_addr constant [9 x i8] c"readfile\00", align 1
@.str.512 = private unnamed_addr constant [7 x i8] c"reduce\00", align 1
@.str.513 = private unnamed_addr constant [14 x i8] c"reg_executing\00", align 1
@.str.514 = private unnamed_addr constant [14 x i8] c"reg_recording\00", align 1
@.str.515 = private unnamed_addr constant [13 x i8] c"reltimefloat\00", align 1
@.str.516 = private unnamed_addr constant [11 x i8] c"reltimestr\00", align 1
@.str.517 = private unnamed_addr constant [12 x i8] c"remote_expr\00", align 1
@.str.518 = private unnamed_addr constant [18 x i8] c"remote_foreground\00", align 1
@.str.519 = private unnamed_addr constant [12 x i8] c"remote_peek\00", align 1
@.str.520 = private unnamed_addr constant [12 x i8] c"remote_read\00", align 1
@.str.521 = private unnamed_addr constant [12 x i8] c"remote_send\00", align 1
@.str.522 = private unnamed_addr constant [19 x i8] c"remote_startserver\00", align 1
@.str.523 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.524 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@.str.525 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.526 = private unnamed_addr constant [8 x i8] c"resolve\00", align 1
@.str.527 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.529 = private unnamed_addr constant [9 x i8] c"rubyeval\00", align 1
@.str.530 = private unnamed_addr constant [11 x i8] c"screenattr\00", align 1
@.str.531 = private unnamed_addr constant [11 x i8] c"screenchar\00", align 1
@.str.532 = private unnamed_addr constant [12 x i8] c"screenchars\00", align 1
@.str.533 = private unnamed_addr constant [10 x i8] c"screencol\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"screenpos\00", align 1
@.str.535 = private unnamed_addr constant [10 x i8] c"screenrow\00", align 1
@.str.536 = private unnamed_addr constant [13 x i8] c"screenstring\00", align 1
@.str.537 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.538 = private unnamed_addr constant [12 x i8] c"searchcount\00", align 1
@.str.539 = private unnamed_addr constant [11 x i8] c"searchdecl\00", align 1
@.str.540 = private unnamed_addr constant [11 x i8] c"searchpair\00", align 1
@.str.541 = private unnamed_addr constant [14 x i8] c"searchpairpos\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"searchpos\00", align 1
@.str.543 = private unnamed_addr constant [14 x i8] c"server2client\00", align 1
@.str.544 = private unnamed_addr constant [11 x i8] c"serverlist\00", align 1
@.str.545 = private unnamed_addr constant [11 x i8] c"setbufline\00", align 1
@.str.546 = private unnamed_addr constant [10 x i8] c"setbufvar\00", align 1
@.str.547 = private unnamed_addr constant [14 x i8] c"setcellwidths\00", align 1
@.str.548 = private unnamed_addr constant [11 x i8] c"setcharpos\00", align 1
@.str.549 = private unnamed_addr constant [14 x i8] c"setcharsearch\00", align 1
@.str.550 = private unnamed_addr constant [10 x i8] c"setcmdpos\00", align 1
@.str.551 = private unnamed_addr constant [17 x i8] c"setcursorcharpos\00", align 1
@.str.552 = private unnamed_addr constant [7 x i8] c"setenv\00", align 1
@.str.553 = private unnamed_addr constant [9 x i8] c"setfperm\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"setline\00", align 1
@.str.555 = private unnamed_addr constant [11 x i8] c"setloclist\00", align 1
@.str.556 = private unnamed_addr constant [11 x i8] c"setmatches\00", align 1
@.str.557 = private unnamed_addr constant [7 x i8] c"setpos\00", align 1
@.str.558 = private unnamed_addr constant [10 x i8] c"setqflist\00", align 1
@.str.559 = private unnamed_addr constant [7 x i8] c"setreg\00", align 1
@.str.560 = private unnamed_addr constant [10 x i8] c"settabvar\00", align 1
@.str.561 = private unnamed_addr constant [13 x i8] c"settabwinvar\00", align 1
@.str.562 = private unnamed_addr constant [12 x i8] c"settagstack\00", align 1
@.str.563 = private unnamed_addr constant [10 x i8] c"setwinvar\00", align 1
@.str.564 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.565 = private unnamed_addr constant [12 x i8] c"shellescape\00", align 1
@.str.566 = private unnamed_addr constant [11 x i8] c"shiftwidth\00", align 1
@.str.567 = private unnamed_addr constant [12 x i8] c"sign_define\00", align 1
@.str.568 = private unnamed_addr constant [16 x i8] c"sign_getdefined\00", align 1
@.str.569 = private unnamed_addr constant [15 x i8] c"sign_getplaced\00", align 1
@.str.570 = private unnamed_addr constant [10 x i8] c"sign_jump\00", align 1
@.str.571 = private unnamed_addr constant [11 x i8] c"sign_place\00", align 1
@.str.572 = private unnamed_addr constant [15 x i8] c"sign_placelist\00", align 1
@.str.573 = private unnamed_addr constant [14 x i8] c"sign_undefine\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"sign_unplace\00", align 1
@.str.575 = private unnamed_addr constant [17 x i8] c"sign_unplacelist\00", align 1
@.str.576 = private unnamed_addr constant [9 x i8] c"simplify\00", align 1
@.str.577 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.578 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.579 = private unnamed_addr constant [6 x i8] c"slice\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.581 = private unnamed_addr constant [12 x i8] c"sound_clear\00", align 1
@.str.582 = private unnamed_addr constant [16 x i8] c"sound_playevent\00", align 1
@.str.583 = private unnamed_addr constant [15 x i8] c"sound_playfile\00", align 1
@.str.584 = private unnamed_addr constant [11 x i8] c"sound_stop\00", align 1
@.str.585 = private unnamed_addr constant [10 x i8] c"soundfold\00", align 1
@.str.586 = private unnamed_addr constant [13 x i8] c"spellbadword\00", align 1
@.str.587 = private unnamed_addr constant [13 x i8] c"spellsuggest\00", align 1
@.str.588 = private unnamed_addr constant [6 x i8] c"split\00", align 1
@.str.589 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.590 = private unnamed_addr constant [6 x i8] c"srand\00", align 1
@.str.591 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.592 = private unnamed_addr constant [10 x i8] c"str2float\00", align 1
@.str.593 = private unnamed_addr constant [9 x i8] c"str2list\00", align 1
@.str.594 = private unnamed_addr constant [7 x i8] c"str2nr\00", align 1
@.str.595 = private unnamed_addr constant [11 x i8] c"strcharlen\00", align 1
@.str.596 = private unnamed_addr constant [12 x i8] c"strcharpart\00", align 1
@.str.597 = private unnamed_addr constant [9 x i8] c"strchars\00", align 1
@.str.598 = private unnamed_addr constant [16 x i8] c"strdisplaywidth\00", align 1
@.str.599 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.600 = private unnamed_addr constant [11 x i8] c"strgetchar\00", align 1
@.str.601 = private unnamed_addr constant [7 x i8] c"stridx\00", align 1
@.str.602 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.603 = private unnamed_addr constant [7 x i8] c"strlen\00", align 1
@.str.604 = private unnamed_addr constant [8 x i8] c"strpart\00", align 1
@.str.605 = private unnamed_addr constant [9 x i8] c"strptime\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"strridx\00", align 1
@.str.607 = private unnamed_addr constant [9 x i8] c"strtrans\00", align 1
@.str.608 = private unnamed_addr constant [9 x i8] c"strwidth\00", align 1
@.str.609 = private unnamed_addr constant [9 x i8] c"submatch\00", align 1
@.str.610 = private unnamed_addr constant [11 x i8] c"substitute\00", align 1
@.str.611 = private unnamed_addr constant [9 x i8] c"swapinfo\00", align 1
@.str.612 = private unnamed_addr constant [9 x i8] c"swapname\00", align 1
@.str.613 = private unnamed_addr constant [6 x i8] c"synID\00", align 1
@.str.614 = private unnamed_addr constant [10 x i8] c"synIDattr\00", align 1
@.str.615 = private unnamed_addr constant [11 x i8] c"synIDtrans\00", align 1
@.str.616 = private unnamed_addr constant [13 x i8] c"synconcealed\00", align 1
@.str.617 = private unnamed_addr constant [9 x i8] c"synstack\00", align 1
@.str.618 = private unnamed_addr constant [11 x i8] c"systemlist\00", align 1
@.str.619 = private unnamed_addr constant [15 x i8] c"tabpagebuflist\00", align 1
@.str.620 = private unnamed_addr constant [10 x i8] c"tabpagenr\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"tabpagewinnr\00", align 1
@.str.622 = private unnamed_addr constant [9 x i8] c"tagfiles\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"taglist\00", align 1
@.str.624 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.625 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.626 = private unnamed_addr constant [9 x i8] c"tempname\00", align 1
@.str.627 = private unnamed_addr constant [14 x i8] c"term_dumpdiff\00", align 1
@.str.628 = private unnamed_addr constant [14 x i8] c"term_dumpload\00", align 1
@.str.629 = private unnamed_addr constant [15 x i8] c"term_dumpwrite\00", align 1
@.str.630 = private unnamed_addr constant [18 x i8] c"term_getaltscreen\00", align 1
@.str.631 = private unnamed_addr constant [19 x i8] c"term_getansicolors\00", align 1
@.str.632 = private unnamed_addr constant [13 x i8] c"term_getattr\00", align 1
@.str.633 = private unnamed_addr constant [15 x i8] c"term_getcursor\00", align 1
@.str.634 = private unnamed_addr constant [12 x i8] c"term_getjob\00", align 1
@.str.635 = private unnamed_addr constant [13 x i8] c"term_getline\00", align 1
@.str.636 = private unnamed_addr constant [17 x i8] c"term_getscrolled\00", align 1
@.str.637 = private unnamed_addr constant [13 x i8] c"term_getsize\00", align 1
@.str.638 = private unnamed_addr constant [15 x i8] c"term_getstatus\00", align 1
@.str.639 = private unnamed_addr constant [14 x i8] c"term_gettitle\00", align 1
@.str.640 = private unnamed_addr constant [12 x i8] c"term_gettty\00", align 1
@.str.641 = private unnamed_addr constant [10 x i8] c"term_list\00", align 1
@.str.642 = private unnamed_addr constant [12 x i8] c"term_scrape\00", align 1
@.str.643 = private unnamed_addr constant [14 x i8] c"term_sendkeys\00", align 1
@.str.644 = private unnamed_addr constant [19 x i8] c"term_setansicolors\00", align 1
@.str.645 = private unnamed_addr constant [12 x i8] c"term_setapi\00", align 1
@.str.646 = private unnamed_addr constant [13 x i8] c"term_setkill\00", align 1
@.str.647 = private unnamed_addr constant [16 x i8] c"term_setrestore\00", align 1
@.str.648 = private unnamed_addr constant [13 x i8] c"term_setsize\00", align 1
@.str.649 = private unnamed_addr constant [11 x i8] c"term_start\00", align 1
@.str.650 = private unnamed_addr constant [10 x i8] c"term_wait\00", align 1
@.str.651 = private unnamed_addr constant [14 x i8] c"terminalprops\00", align 1
@.str.652 = private unnamed_addr constant [16 x i8] c"test_alloc_fail\00", align 1
@.str.653 = private unnamed_addr constant [15 x i8] c"test_autochdir\00", align 1
@.str.654 = private unnamed_addr constant [15 x i8] c"test_feedinput\00", align 1
@.str.655 = private unnamed_addr constant [24 x i8] c"test_garbagecollect_now\00", align 1
@.str.656 = private unnamed_addr constant [25 x i8] c"test_garbagecollect_soon\00", align 1
@.str.657 = private unnamed_addr constant [14 x i8] c"test_getvalue\00", align 1
@.str.658 = private unnamed_addr constant [18 x i8] c"test_ignore_error\00", align 1
@.str.659 = private unnamed_addr constant [15 x i8] c"test_null_blob\00", align 1
@.str.660 = private unnamed_addr constant [18 x i8] c"test_null_channel\00", align 1
@.str.661 = private unnamed_addr constant [15 x i8] c"test_null_dict\00", align 1
@.str.662 = private unnamed_addr constant [19 x i8] c"test_null_function\00", align 1
@.str.663 = private unnamed_addr constant [14 x i8] c"test_null_job\00", align 1
@.str.664 = private unnamed_addr constant [15 x i8] c"test_null_list\00", align 1
@.str.665 = private unnamed_addr constant [18 x i8] c"test_null_partial\00", align 1
@.str.666 = private unnamed_addr constant [17 x i8] c"test_null_string\00", align 1
@.str.667 = private unnamed_addr constant [20 x i8] c"test_option_not_set\00", align 1
@.str.668 = private unnamed_addr constant [14 x i8] c"test_override\00", align 1
@.str.669 = private unnamed_addr constant [14 x i8] c"test_refcount\00", align 1
@.str.670 = private unnamed_addr constant [15 x i8] c"test_scrollbar\00", align 1
@.str.671 = private unnamed_addr constant [14 x i8] c"test_setmouse\00", align 1
@.str.672 = private unnamed_addr constant [13 x i8] c"test_settime\00", align 1
@.str.673 = private unnamed_addr constant [16 x i8] c"test_srand_seed\00", align 1
@.str.674 = private unnamed_addr constant [13 x i8] c"test_unknown\00", align 1
@.str.675 = private unnamed_addr constant [10 x i8] c"test_void\00", align 1
@.str.676 = private unnamed_addr constant [11 x i8] c"timer_info\00", align 1
@.str.677 = private unnamed_addr constant [12 x i8] c"timer_pause\00", align 1
@.str.678 = private unnamed_addr constant [12 x i8] c"timer_start\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"timer_stop\00", align 1
@.str.680 = private unnamed_addr constant [14 x i8] c"timer_stopall\00", align 1
@.str.681 = private unnamed_addr constant [8 x i8] c"tolower\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"toupper\00", align 1
@.str.683 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.684 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.685 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.686 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.687 = private unnamed_addr constant [9 x i8] c"typename\00", align 1
@.str.688 = private unnamed_addr constant [9 x i8] c"undofile\00", align 1
@.str.689 = private unnamed_addr constant [9 x i8] c"undotree\00", align 1
@.str.690 = private unnamed_addr constant [5 x i8] c"uniq\00", align 1
@.str.691 = private unnamed_addr constant [7 x i8] c"values\00", align 1
@.str.692 = private unnamed_addr constant [8 x i8] c"virtcol\00", align 1
@.str.693 = private unnamed_addr constant [11 x i8] c"visualmode\00", align 1
@.str.694 = private unnamed_addr constant [13 x i8] c"wildmenumode\00", align 1
@.str.695 = private unnamed_addr constant [12 x i8] c"win_execute\00", align 1
@.str.696 = private unnamed_addr constant [12 x i8] c"win_findbuf\00", align 1
@.str.697 = private unnamed_addr constant [10 x i8] c"win_getid\00", align 1
@.str.698 = private unnamed_addr constant [12 x i8] c"win_gettype\00", align 1
@.str.699 = private unnamed_addr constant [11 x i8] c"win_gotoid\00", align 1
@.str.700 = private unnamed_addr constant [14 x i8] c"win_id2tabwin\00", align 1
@.str.701 = private unnamed_addr constant [11 x i8] c"win_id2win\00", align 1
@.str.702 = private unnamed_addr constant [14 x i8] c"win_screenpos\00", align 1
@.str.703 = private unnamed_addr constant [14 x i8] c"win_splitmove\00", align 1
@.str.704 = private unnamed_addr constant [9 x i8] c"winbufnr\00", align 1
@.str.705 = private unnamed_addr constant [7 x i8] c"wincol\00", align 1
@.str.706 = private unnamed_addr constant [15 x i8] c"windowsversion\00", align 1
@.str.707 = private unnamed_addr constant [10 x i8] c"winheight\00", align 1
@.str.708 = private unnamed_addr constant [10 x i8] c"winlayout\00", align 1
@.str.709 = private unnamed_addr constant [8 x i8] c"winline\00", align 1
@.str.710 = private unnamed_addr constant [6 x i8] c"winnr\00", align 1
@.str.711 = private unnamed_addr constant [11 x i8] c"winrestcmd\00", align 1
@.str.712 = private unnamed_addr constant [12 x i8] c"winrestview\00", align 1
@.str.713 = private unnamed_addr constant [12 x i8] c"winsaveview\00", align 1
@.str.714 = private unnamed_addr constant [9 x i8] c"winwidth\00", align 1
@.str.715 = private unnamed_addr constant [10 x i8] c"wordcount\00", align 1
@.str.716 = private unnamed_addr constant [10 x i8] c"writefile\00", align 1
@.str.717 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@t_any = external global %struct.type_S, align 8
@t_float = external global %struct.type_S, align 8
@.str.718 = private unnamed_addr constant [31 x i8] c"E808: Number or Float required\00", align 1
@t_void = external global %struct.type_S, align 8
@t_number_bool = external global %struct.type_S, align 8
@t_list_string = external global %struct.type_S, align 8
@balloonEval = external local_unnamed_addr global %struct.BalloonEvalStruct*, align 8
@enc_utf8 = external local_unnamed_addr global i32, align 4
@mb_ptr2len = external local_unnamed_addr global i32 (i8*)*, align 8
@e_listreq = external global [0 x i8], align 1
@e_dictreq = external global [0 x i8], align 1
@t_job = external global %struct.type_S, align 8
@t_dict_any = external global %struct.type_S, align 8
@t_channel = external global %struct.type_S, align 8
@t_blob = external global %struct.type_S, align 8
@mb_ptr2char = external local_unnamed_addr global i32 (i8*)*, align 8
@e_invarg = external global [0 x i8], align 1
@e_using_number_as_bool_nr = external global [0 x i8], align 1
@.str.719 = private unnamed_addr constant [4 x i8] c"&Ok\00", align 1
@e_invarg2 = external global [0 x i8], align 1
@did_filetype = external local_unnamed_addr global i32, align 4
@.str.720 = private unnamed_addr constant [17 x i8] c"f_empty(UNKNOWN)\00", align 1
@t_dict_string = external global %struct.type_S, align 8
@environ = external local_unnamed_addr global i8**, align 8
@EVALARG_EVALUATE = external global %struct.evalarg_T, align 8
@e_invexpr2 = external global [0 x i8], align 1
@need_clr_eos = external local_unnamed_addr global i32, align 4
@e_trailing_arg = external global [0 x i8], align 1
@vgetc_busy = external local_unnamed_addr global i32, align 4
@input_busy = external local_unnamed_addr global i32, align 4
@p_wic = external local_unnamed_addr global i64, align 8
@ctrl_c_interrupts = external local_unnamed_addr global i32, align 4
@got_int = external global i32, align 4
@typebuf = external local_unnamed_addr global %struct.typebuf_T, align 8
@timer_busy = external local_unnamed_addr global i32, align 4
@typebuf_was_filled = external local_unnamed_addr global i32, align 4
@msg_scroll = external local_unnamed_addr global i32, align 4
@ex_normal_busy = external local_unnamed_addr global i32, align 4
@in_feedkeys = external local_unnamed_addr global i32, align 4
@t_func_any = external global %struct.type_S, align 8
@.str.721 = private unnamed_addr constant [27 x i8] c"E700: Unknown function: %s\00", align 1
@.str.722 = private unnamed_addr constant [3 x i8] c"s:\00", align 1
@.str.723 = private unnamed_addr constant [6 x i8] c"<SID>\00", align 1
@.str.724 = private unnamed_addr constant [10 x i8] c"<SNR>%ld_\00", align 1
@current_sctx = external local_unnamed_addr global %struct.sctx_T, align 8
@.str.725 = private unnamed_addr constant [22 x i8] c"E922: expected a dict\00", align 1
@.str.726 = private unnamed_addr constant [61 x i8] c"E923: Second argument of function() must be a list or a dict\00", align 1
@t_func_unknown = external global %struct.type_S, align 8
@want_garbage_collect = external local_unnamed_addr global i32, align 4
@garbage_collect_at_exit = external local_unnamed_addr global i32, align 4
@.str.727 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.728 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.729 = private unnamed_addr constant [5 x i8] c"dict\00", align 1
@.str.730 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@e_listdictblobarg = external global [0 x i8], align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"get()\00", align 1
@t_list_dict_any = external global %struct.type_S, align 8
@.str.732 = private unnamed_addr constant [5 x i8] c"lnum\00", align 1
@.str.733 = private unnamed_addr constant [7 x i8] c"coladd\00", align 1
@t_list_number = external global %struct.type_S, align 8
@.str.734 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.735 = private unnamed_addr constant [8 x i8] c"forward\00", align 1
@.str.736 = private unnamed_addr constant [6 x i8] c"until\00", align 1
@.str.737 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.738 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@t_dict_number = external global %struct.type_S, align 8
@e_register_name_must_be_one_char_str = external global [0 x i8], align 1
@.str.739 = private unnamed_addr constant [12 x i8] c"regcontents\00", align 1
@.str.740 = private unnamed_addr constant [6 x i8] c"%c%ld\00", align 1
@.str.741 = private unnamed_addr constant [8 x i8] c"regtype\00", align 1
@.str.742 = private unnamed_addr constant [10 x i8] c"points_to\00", align 1
@.str.743 = private unnamed_addr constant [10 x i8] c"isunnamed\00", align 1
@.str.744 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.745 = private unnamed_addr constant [4 x i8] c"nvo\00", align 1
@e_listblobreq = external global [0 x i8], align 1
@inputsecret_flag = internal unnamed_addr global i32 0, align 4, !dbg !2585
@p_go = external local_unnamed_addr global i8*, align 8
@.str.746 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.747 = private unnamed_addr constant [12 x i8] c"&OK\0A&Cancel\00", align 1
@e_listarg = external global [0 x i8], align 1
@.str.748 = private unnamed_addr constant [12 x i8] c"inputlist()\00", align 1
@Rows = external local_unnamed_addr global i64, align 8
@msg_row = external local_unnamed_addr global i32, align 4
@lines_left = external local_unnamed_addr global i32, align 4
@ga_userinput = internal global %struct.growarray { i32 0, i32 0, i32 136, i32 4, i8* null }, align 8, !dbg !2587
@p_verbose = external local_unnamed_addr global i64, align 8
@.str.749 = private unnamed_addr constant [50 x i8] c"called inputrestore() more often than inputsave()\00", align 1
@cmdline_star = external local_unnamed_addr global i32, align 4
@.str.750 = private unnamed_addr constant [24 x i8] c"E786: Range not allowed\00", align 1
@e_dictkey = external global [0 x i8], align 1
@t_list_job = external global %struct.type_S, align 8
@firstbuf = external local_unnamed_addr global %struct.file_buffer*, align 8
@.str.751 = private unnamed_addr constant [29 x i8] c"E701: Invalid type for len()\00", align 1
@p_ic = external local_unnamed_addr global i32, align 4
@hash_removed = external global i8, align 1
@e_listdictarg = external global [0 x i8], align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"max()\00", align 1
@.str.753 = private unnamed_addr constant [6 x i8] c"min()\00", align 1
@mb_char2bytes = external local_unnamed_addr global i32 (i32, i8*)*, align 8
@did_emsg = external local_unnamed_addr global i32, align 4
@ap = internal global [1 x %struct.__va_list_tag] zeroinitializer, align 16, !dbg !2589
@f_rand.gx = internal unnamed_addr global i32 0, align 4, !dbg !2602
@f_rand.gy = internal unnamed_addr global i32 0, align 4, !dbg !2619
@f_rand.gz = internal unnamed_addr global i32 0, align 4, !dbg !2621
@f_rand.gw = internal unnamed_addr global i32 0, align 4, !dbg !2623
@f_rand.initialized = internal unnamed_addr global i1 false, align 4, !dbg !2664
@init_srand.dev_urandom_state = internal unnamed_addr global i32 2, align 4, !dbg !2627
@srand_seed_for_testing_is_used = internal unnamed_addr global i1 false, align 4, !dbg !2665
@srand_seed_for_testing = internal unnamed_addr global i32 0, align 4, !dbg !2649
@.str.754 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"E726: Stride is zero\00", align 1
@.str.756 = private unnamed_addr constant [21 x i8] c"E727: Start past end\00", align 1
@reg_executing = external local_unnamed_addr global i32, align 4
@reg_recording = external local_unnamed_addr global i32, align 4
@screen_Rows = external local_unnamed_addr global i32, align 4
@screen_Columns = external local_unnamed_addr global i32, align 4
@ScreenAttrs = external local_unnamed_addr global i16*, align 8
@LineOffset = external local_unnamed_addr global i32*, align 8
@ScreenLinesUC = external local_unnamed_addr global i32*, align 8
@ScreenLines = external local_unnamed_addr global i8*, align 8
@Screen_mco = external local_unnamed_addr global i32, align 4
@ScreenLinesC = external local_unnamed_addr global [6 x i32*], align 16
@p_ws = external local_unnamed_addr global i32, align 4
@e_invargval = external global [0 x i8], align 1
@.str.757 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.758 = private unnamed_addr constant [27 x i8] c"E962: Invalid action: '%s'\00", align 1
@e_stringreq = external global [0 x i8], align 1
@e_no_spell = external global [0 x i8], align 1
@.str.759 = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@.str.760 = private unnamed_addr constant [5 x i8] c"rare\00", align 1
@.str.761 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.762 = private unnamed_addr constant [5 x i8] c"caps\00", align 1
@.str.763 = private unnamed_addr constant [11 x i8] c"[\5Cx01- ]\5C+\00", align 1
@.str.764 = private unnamed_addr constant [34 x i8] c"E935: invalid submatch number: %d\00", align 1
@p_tgc = external local_unnamed_addr global i32, align 4
@t_colors = external local_unnamed_addr global i32, align 4
@firstwin = external local_unnamed_addr global %struct.window_S*, align 8
@curtab = external local_unnamed_addr global %struct.tabpage_S*, align 8
@mb_head_off = external local_unnamed_addr global i32 (i8*, i8*)*, align 8
@.str.765 = private unnamed_addr constant [16 x i8] c"f_type(UNKNOWN)\00", align 1
@wild_menu_showing = external local_unnamed_addr global i32, align 4
@windowsVersion = external global [20 x i8], align 16

; Function Attrs: nounwind uwtable
define internal i32 @arg_string(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2670 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2672, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2673, metadata !DIExpression()), !dbg !2675
  call void @llvm.dbg.value(metadata %struct.type_S* @t_string, metadata !2676, metadata !DIExpression()) #9, !dbg !2683
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2685
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2686
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2687
  %4 = load i32, i32* %3, align 8, !dbg !2687, !tbaa !2688
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2694
  %6 = load i32, i32* %5, align 8, !dbg !2694, !tbaa !2695
  %7 = sub nsw i32 %4, %6, !dbg !2696
  %8 = add nsw i32 %4, 1, !dbg !2697
  %9 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2698
  %10 = load %struct.cctx_S*, %struct.cctx_S** %9, align 8, !dbg !2698, !tbaa !2699
  %11 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* nonnull @t_string, i32 %7, i32 %8, %struct.cctx_S* %10, i32 0, i32 0) #9, !dbg !2700
  ret i32 %11, !dbg !2701
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_number(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2702 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2704, metadata !DIExpression()), !dbg !2706
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2705, metadata !DIExpression()), !dbg !2707
  call void @llvm.dbg.value(metadata %struct.type_S* @t_number, metadata !2676, metadata !DIExpression()) #9, !dbg !2708
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2710
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2711
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2712
  %4 = load i32, i32* %3, align 8, !dbg !2712, !tbaa !2688
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2713
  %6 = load i32, i32* %5, align 8, !dbg !2713, !tbaa !2695
  %7 = sub nsw i32 %4, %6, !dbg !2714
  %8 = add nsw i32 %4, 1, !dbg !2715
  %9 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2716
  %10 = load %struct.cctx_S*, %struct.cctx_S** %9, align 8, !dbg !2716, !tbaa !2699
  %11 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* nonnull @t_number, i32 %7, i32 %8, %struct.cctx_S* %10, i32 0, i32 0) #9, !dbg !2717
  ret i32 %11, !dbg !2718
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_bool(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2719 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2721, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2722, metadata !DIExpression()), !dbg !2724
  %3 = getelementptr inbounds %struct.type_S, %struct.type_S* %0, i64 0, i32 0, !dbg !2725
  %4 = load i32, i32* %3, align 8, !dbg !2725, !tbaa !2727
  switch i32 %4, label %5 [
    i32 1, label %15
    i32 5, label %15
    i32 3, label %15
  ], !dbg !2729

; <label>:5:                                      ; preds = %2
  call void @llvm.dbg.value(metadata %struct.type_S* @t_bool, metadata !2676, metadata !DIExpression()) #9, !dbg !2730
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2732
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2733
  %6 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2734
  %7 = load i32, i32* %6, align 8, !dbg !2734, !tbaa !2688
  %8 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2735
  %9 = load i32, i32* %8, align 8, !dbg !2735, !tbaa !2695
  %10 = sub nsw i32 %7, %9, !dbg !2736
  %11 = add nsw i32 %7, 1, !dbg !2737
  %12 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2738
  %13 = load %struct.cctx_S*, %struct.cctx_S** %12, align 8, !dbg !2738, !tbaa !2699
  %14 = tail call i32 @need_type(%struct.type_S* nonnull %0, %struct.type_S* nonnull @t_bool, i32 %10, i32 %11, %struct.cctx_S* %13, i32 0, i32 0) #9, !dbg !2739
  br label %15, !dbg !2740

; <label>:15:                                     ; preds = %2, %2, %2, %5
  %16 = phi i32 [ %14, %5 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %16, !dbg !2741
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_float_or_nr(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2742 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2744, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2745, metadata !DIExpression()), !dbg !2747
  %3 = getelementptr inbounds %struct.type_S, %struct.type_S* %0, i64 0, i32 0, !dbg !2748
  %4 = load i32, i32* %3, align 8, !dbg !2748, !tbaa !2727
  switch i32 %4, label %5 [
    i32 1, label %9
    i32 6, label %9
    i32 5, label %9
  ], !dbg !2750

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2751
  %7 = load i32, i32* %6, align 8, !dbg !2751, !tbaa !2688
  %8 = add nsw i32 %7, 1, !dbg !2752
  tail call void @arg_type_mismatch(%struct.type_S* nonnull @t_number, %struct.type_S* nonnull %0, i32 %8) #9, !dbg !2753
  br label %9, !dbg !2754

; <label>:9:                                      ; preds = %2, %2, %2, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %10, !dbg !2755
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_list_or_blob(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2756 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2758, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2759, metadata !DIExpression()), !dbg !2761
  %3 = getelementptr inbounds %struct.type_S, %struct.type_S* %0, i64 0, i32 0, !dbg !2762
  %4 = load i32, i32* %3, align 8, !dbg !2762, !tbaa !2727
  switch i32 %4, label %5 [
    i32 1, label %9
    i32 11, label %9
    i32 8, label %9
  ], !dbg !2764

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2765
  %7 = load i32, i32* %6, align 8, !dbg !2765, !tbaa !2688
  %8 = add nsw i32 %7, 1, !dbg !2766
  tail call void @arg_type_mismatch(%struct.type_S* nonnull @t_list_any, %struct.type_S* nonnull %0, i32 %8) #9, !dbg !2767
  br label %9, !dbg !2768

; <label>:9:                                      ; preds = %2, %2, %2, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %10, !dbg !2769
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_item_of_prev(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2770 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2772, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2773, metadata !DIExpression()), !dbg !2777
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 1, !dbg !2778
  %4 = load %struct.type_S**, %struct.type_S*** %3, align 8, !dbg !2778, !tbaa !2779
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2780
  %6 = load i32, i32* %5, align 8, !dbg !2780, !tbaa !2688
  %7 = add nsw i32 %6, -1, !dbg !2781
  %8 = sext i32 %7 to i64, !dbg !2782
  %9 = getelementptr inbounds %struct.type_S*, %struct.type_S** %4, i64 %8, !dbg !2782
  %10 = load %struct.type_S*, %struct.type_S** %9, align 8, !dbg !2782, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2774, metadata !DIExpression()), !dbg !2784
  %11 = getelementptr inbounds %struct.type_S, %struct.type_S* %10, i64 0, i32 0, !dbg !2785
  %12 = load i32, i32* %11, align 8, !dbg !2785, !tbaa !2727
  switch i32 %12, label %25 [
    i32 11, label %13
    i32 8, label %16
  ], !dbg !2787

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.type_S, %struct.type_S* %10, i64 0, i32 4, !dbg !2788
  %15 = load %struct.type_S*, %struct.type_S** %14, align 8, !dbg !2788, !tbaa !2789
  call void @llvm.dbg.value(metadata %struct.type_S* %15, metadata !2775, metadata !DIExpression()), !dbg !2790
  br label %16, !dbg !2791

; <label>:16:                                     ; preds = %2, %13
  %17 = phi %struct.type_S* [ %15, %13 ], [ @t_number, %2 ]
  call void @llvm.dbg.value(metadata %struct.type_S* %17, metadata !2775, metadata !DIExpression()), !dbg !2790
  call void @llvm.dbg.value(metadata %struct.type_S* %17, metadata !2676, metadata !DIExpression()) #9, !dbg !2792
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2794
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2795
  %18 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2796
  %19 = load i32, i32* %18, align 8, !dbg !2796, !tbaa !2695
  %20 = sub nsw i32 %6, %19, !dbg !2797
  %21 = add nsw i32 %6, 1, !dbg !2798
  %22 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2799
  %23 = load %struct.cctx_S*, %struct.cctx_S** %22, align 8, !dbg !2799, !tbaa !2699
  %24 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* %17, i32 %20, i32 %21, %struct.cctx_S* %23, i32 0, i32 0) #9, !dbg !2800
  br label %25, !dbg !2801

; <label>:25:                                     ; preds = %2, %16
  %26 = phi i32 [ %24, %16 ], [ 1, %2 ]
  ret i32 %26, !dbg !2802
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_list_or_dict(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2803 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2805, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2806, metadata !DIExpression()), !dbg !2808
  %3 = getelementptr inbounds %struct.type_S, %struct.type_S* %0, i64 0, i32 0, !dbg !2809
  %4 = load i32, i32* %3, align 8, !dbg !2809, !tbaa !2727
  switch i32 %4, label %5 [
    i32 1, label %9
    i32 11, label %9
    i32 12, label %9
  ], !dbg !2811

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2812
  %7 = load i32, i32* %6, align 8, !dbg !2812, !tbaa !2688
  %8 = add nsw i32 %7, 1, !dbg !2813
  tail call void @arg_type_mismatch(%struct.type_S* nonnull @t_list_any, %struct.type_S* nonnull %0, i32 %8) #9, !dbg !2814
  br label %9, !dbg !2815

; <label>:9:                                      ; preds = %2, %2, %2, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %10, !dbg !2816
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_same_as_prev(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2817 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2819, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2820, metadata !DIExpression()), !dbg !2823
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 1, !dbg !2824
  %4 = load %struct.type_S**, %struct.type_S*** %3, align 8, !dbg !2824, !tbaa !2779
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2825
  %6 = load i32, i32* %5, align 8, !dbg !2825, !tbaa !2688
  %7 = add nsw i32 %6, -1, !dbg !2826
  %8 = sext i32 %7 to i64, !dbg !2827
  %9 = getelementptr inbounds %struct.type_S*, %struct.type_S** %4, i64 %8, !dbg !2827
  %10 = load %struct.type_S*, %struct.type_S** %9, align 8, !dbg !2827, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2821, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2676, metadata !DIExpression()) #9, !dbg !2829
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2831
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2832
  %11 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2833
  %12 = load i32, i32* %11, align 8, !dbg !2833, !tbaa !2695
  %13 = sub nsw i32 %6, %12, !dbg !2834
  %14 = add nsw i32 %6, 1, !dbg !2835
  %15 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2836
  %16 = load %struct.cctx_S*, %struct.cctx_S** %15, align 8, !dbg !2836, !tbaa !2699
  %17 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* %10, i32 %13, i32 %14, %struct.cctx_S* %16, i32 0, i32 0) #9, !dbg !2837
  ret i32 %17, !dbg !2838
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_extend3(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2839 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2841, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2842, metadata !DIExpression()), !dbg !2845
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 1, !dbg !2846
  %4 = load %struct.type_S**, %struct.type_S*** %3, align 8, !dbg !2846, !tbaa !2779
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2847
  %6 = load i32, i32* %5, align 8, !dbg !2847, !tbaa !2688
  %7 = add nsw i32 %6, -2, !dbg !2848
  %8 = sext i32 %7 to i64, !dbg !2849
  %9 = getelementptr inbounds %struct.type_S*, %struct.type_S** %4, i64 %8, !dbg !2849
  %10 = load %struct.type_S*, %struct.type_S** %9, align 8, !dbg !2849, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2843, metadata !DIExpression()), !dbg !2850
  %11 = getelementptr inbounds %struct.type_S, %struct.type_S* %10, i64 0, i32 0, !dbg !2851
  %12 = load i32, i32* %11, align 8, !dbg !2851, !tbaa !2727
  switch i32 %12, label %23 [
    i32 11, label %14
    i32 12, label %13
  ], !dbg !2853

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2672, metadata !DIExpression()) #9, !dbg !2854
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2673, metadata !DIExpression()) #9, !dbg !2857
  call void @llvm.dbg.value(metadata %struct.type_S* @t_string, metadata !2676, metadata !DIExpression()) #9, !dbg !2858
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2860
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2861
  br label %14, !dbg !2862

; <label>:14:                                     ; preds = %2, %13
  %15 = phi %struct.type_S* [ @t_string, %13 ], [ @t_number, %2 ]
  %16 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2863
  %17 = load i32, i32* %16, align 8, !dbg !2863, !tbaa !2695
  %18 = sub nsw i32 %6, %17, !dbg !2864
  %19 = add nsw i32 %6, 1, !dbg !2865
  %20 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2866
  %21 = load %struct.cctx_S*, %struct.cctx_S** %20, align 8, !dbg !2866, !tbaa !2699
  %22 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* nonnull %15, i32 %18, i32 %19, %struct.cctx_S* %21, i32 0, i32 0) #9, !dbg !2867
  br label %23, !dbg !2868

; <label>:23:                                     ; preds = %14, %2
  %24 = phi i32 [ 1, %2 ], [ %22, %14 ]
  ret i32 %24, !dbg !2868
}

; Function Attrs: nounwind uwtable
define internal i32 @arg_same_struct_as_prev(%struct.type_S*, %struct.argcontext_T* nocapture readonly) #0 !dbg !2869 {
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2871, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2872, metadata !DIExpression()), !dbg !2875
  %3 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 1, !dbg !2876
  %4 = load %struct.type_S**, %struct.type_S*** %3, align 8, !dbg !2876, !tbaa !2779
  %5 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 2, !dbg !2877
  %6 = load i32, i32* %5, align 8, !dbg !2877, !tbaa !2688
  %7 = add nsw i32 %6, -1, !dbg !2878
  %8 = sext i32 %7 to i64, !dbg !2879
  %9 = getelementptr inbounds %struct.type_S*, %struct.type_S** %4, i64 %8, !dbg !2879
  %10 = load %struct.type_S*, %struct.type_S** %9, align 8, !dbg !2879, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2873, metadata !DIExpression()), !dbg !2880
  %11 = getelementptr inbounds %struct.type_S, %struct.type_S* %10, i64 0, i32 0, !dbg !2881
  %12 = load i32, i32* %11, align 8, !dbg !2881, !tbaa !2727
  %13 = sext i32 %6 to i64, !dbg !2883
  %14 = getelementptr inbounds %struct.type_S*, %struct.type_S** %4, i64 %13, !dbg !2883
  %15 = load %struct.type_S*, %struct.type_S** %14, align 8, !dbg !2883, !tbaa !2783
  %16 = getelementptr inbounds %struct.type_S, %struct.type_S* %15, i64 0, i32 0, !dbg !2884
  %17 = load i32, i32* %16, align 8, !dbg !2884, !tbaa !2727
  %18 = icmp eq i32 %12, %17, !dbg !2885
  br i1 %18, label %27, label %19, !dbg !2886

; <label>:19:                                     ; preds = %2
  call void @llvm.dbg.value(metadata %struct.type_S* %10, metadata !2676, metadata !DIExpression()) #9, !dbg !2887
  call void @llvm.dbg.value(metadata %struct.type_S* %0, metadata !2681, metadata !DIExpression()) #9, !dbg !2889
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %1, metadata !2682, metadata !DIExpression()) #9, !dbg !2890
  %20 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 0, !dbg !2891
  %21 = load i32, i32* %20, align 8, !dbg !2891, !tbaa !2695
  %22 = sub nsw i32 %6, %21, !dbg !2892
  %23 = add nsw i32 %6, 1, !dbg !2893
  %24 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %1, i64 0, i32 3, !dbg !2894
  %25 = load %struct.cctx_S*, %struct.cctx_S** %24, align 8, !dbg !2894, !tbaa !2699
  %26 = tail call i32 @need_type(%struct.type_S* %0, %struct.type_S* %10, i32 %22, i32 %23, %struct.cctx_S* %25, i32 0, i32 0) #9, !dbg !2895
  br label %27, !dbg !2896

; <label>:27:                                     ; preds = %2, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %2 ]
  ret i32 %28, !dbg !2897
}

; Function Attrs: nounwind uwtable
define i8* @get_function_name(%struct.expand*, i32) local_unnamed_addr #0 !dbg !2506 {
  call void @llvm.dbg.value(metadata %struct.expand* %0, metadata !2525, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.value(metadata i32 %1, metadata !2526, metadata !DIExpression()), !dbg !2899
  %3 = icmp eq i32 %1, 0, !dbg !2900
  br i1 %3, label %4, label %5, !dbg !2902

; <label>:4:                                      ; preds = %2
  store i32 -1, i32* @get_function_name.intidx, align 4, !dbg !2903, !tbaa !2904
  br label %8, !dbg !2905

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* @get_function_name.intidx, align 4, !dbg !2906, !tbaa !2904
  %7 = icmp slt i32 %6, 0, !dbg !2908
  br i1 %7, label %8, label %23, !dbg !2905

; <label>:8:                                      ; preds = %4, %5
  %9 = tail call i8* @get_user_func_name(%struct.expand* %0, i32 %1) #9, !dbg !2909
  call void @llvm.dbg.value(metadata i8* %9, metadata !2527, metadata !DIExpression()), !dbg !2911
  %10 = icmp eq i8* %9, null, !dbg !2912
  br i1 %10, label %21, label %11, !dbg !2914

; <label>:11:                                     ; preds = %8
  %12 = load i8, i8* %9, align 1, !dbg !2915, !tbaa !2918
  %13 = icmp eq i8 %12, 60, !dbg !2919
  br i1 %13, label %49, label %14, !dbg !2920

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 0, !dbg !2921
  %16 = load i8*, i8** %15, align 8, !dbg !2921, !tbaa !2922
  %17 = tail call i32 @strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %16, i64 2) #10, !dbg !2921
  %18 = icmp eq i32 %17, 0, !dbg !2926
  br i1 %18, label %19, label %49, !dbg !2927

; <label>:19:                                     ; preds = %14
  %20 = tail call i8* @cat_prefix_varname(i32 103, i8* nonnull %9) #9, !dbg !2928
  br label %49, !dbg !2929

; <label>:21:                                     ; preds = %8
  %22 = load i32, i32* @get_function_name.intidx, align 4, !dbg !2930, !tbaa !2904
  br label %23, !dbg !2930

; <label>:23:                                     ; preds = %21, %5
  %24 = phi i32 [ %22, %21 ], [ %6, %5 ], !dbg !2930
  %25 = add nsw i32 %24, 1, !dbg !2930
  store i32 %25, i32* @get_function_name.intidx, align 4, !dbg !2930, !tbaa !2904
  %26 = icmp slt i32 %24, 521, !dbg !2932
  br i1 %26, label %27, label %49, !dbg !2933

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** @IObuff, align 8, !dbg !2934, !tbaa !2783
  %29 = sext i32 %25 to i64, !dbg !2934
  %30 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %29, i32 0, !dbg !2934
  %31 = load i8*, i8** %30, align 8, !dbg !2934, !tbaa !2936
  %32 = tail call i8* @strcpy(i8* %28, i8* %31) #9, !dbg !2934
  %33 = load i8*, i8** @IObuff, align 8, !dbg !2938, !tbaa !2783
  %34 = tail call i64 @strlen(i8* %33), !dbg !2938
  %35 = getelementptr i8, i8* %33, i64 %34, !dbg !2938
  %36 = bitcast i8* %35 to i16*, !dbg !2938
  store i16 40, i16* %36, align 1, !dbg !2938
  %37 = load i32, i32* @get_function_name.intidx, align 4, !dbg !2939, !tbaa !2904
  %38 = sext i32 %37 to i64, !dbg !2941
  %39 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %38, i32 2, !dbg !2942
  %40 = load i8, i8* %39, align 1, !dbg !2942, !tbaa !2943
  %41 = icmp eq i8 %40, 0, !dbg !2944
  br i1 %41, label %42, label %47, !dbg !2945

; <label>:42:                                     ; preds = %27
  %43 = load i8*, i8** @IObuff, align 8, !dbg !2946, !tbaa !2783
  %44 = tail call i64 @strlen(i8* %43), !dbg !2946
  %45 = getelementptr i8, i8* %43, i64 %44, !dbg !2946
  %46 = bitcast i8* %45 to i16*, !dbg !2946
  store i16 41, i16* %46, align 1, !dbg !2946
  br label %47, !dbg !2946

; <label>:47:                                     ; preds = %42, %27
  %48 = load i8*, i8** @IObuff, align 8, !dbg !2947, !tbaa !2783
  br label %49, !dbg !2948

; <label>:49:                                     ; preds = %23, %14, %11, %47, %19
  %50 = phi i8* [ %20, %19 ], [ %48, %47 ], [ %9, %11 ], [ %9, %14 ], [ null, %23 ]
  ret i8* %50, !dbg !2949
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

declare i8* @get_user_func_name(%struct.expand*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare i8* @cat_prefix_varname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i8* @get_expr_name(%struct.expand*, i32) local_unnamed_addr #0 !dbg !2530 {
  call void @llvm.dbg.value(metadata %struct.expand* %0, metadata !2532, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.value(metadata i32 %1, metadata !2533, metadata !DIExpression()), !dbg !2951
  %3 = icmp eq i32 %1, 0, !dbg !2952
  br i1 %3, label %4, label %5, !dbg !2954

; <label>:4:                                      ; preds = %2
  store i32 -1, i32* @get_expr_name.intidx, align 4, !dbg !2955, !tbaa !2904
  br label %8, !dbg !2956

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* @get_expr_name.intidx, align 4, !dbg !2957, !tbaa !2904
  %7 = icmp slt i32 %6, 0, !dbg !2959
  br i1 %7, label %8, label %13, !dbg !2956

; <label>:8:                                      ; preds = %4, %5
  %9 = tail call i8* @get_function_name(%struct.expand* %0, i32 %1), !dbg !2960
  call void @llvm.dbg.value(metadata i8* %9, metadata !2534, metadata !DIExpression()), !dbg !2962
  %10 = icmp eq i8* %9, null, !dbg !2963
  br i1 %10, label %11, label %17, !dbg !2965

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* @get_expr_name.intidx, align 4, !dbg !2966, !tbaa !2904
  br label %13, !dbg !2965

; <label>:13:                                     ; preds = %11, %5
  %14 = phi i32 [ %12, %11 ], [ %6, %5 ], !dbg !2966
  %15 = add nsw i32 %14, 1, !dbg !2966
  store i32 %15, i32* @get_expr_name.intidx, align 4, !dbg !2966, !tbaa !2904
  %16 = tail call i8* @get_user_var_name(%struct.expand* %0, i32 %15) #9, !dbg !2967
  br label %17, !dbg !2968

; <label>:17:                                     ; preds = %8, %13
  %18 = phi i8* [ %16, %13 ], [ %9, %8 ]
  ret i8* %18, !dbg !2969
}

declare i8* @get_user_var_name(%struct.expand*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly uwtable
define i32 @find_internal_func(i8* nocapture readonly) local_unnamed_addr #6 !dbg !2970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2974, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.value(metadata i8* %0, metadata !2976, metadata !DIExpression()) #9, !dbg !2986
  call void @llvm.dbg.value(metadata i32 1, metadata !2981, metadata !DIExpression()) #9, !dbg !2988
  call void @llvm.dbg.value(metadata i32 0, metadata !2982, metadata !DIExpression()) #9, !dbg !2989
  call void @llvm.dbg.value(metadata i32 521, metadata !2983, metadata !DIExpression()) #9, !dbg !2990
  br label %2, !dbg !2991

; <label>:2:                                      ; preds = %23, %1
  %3 = phi i32 [ 0, %1 ], [ %25, %23 ]
  %4 = phi i32 [ 521, %1 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !2983, metadata !DIExpression()) #9, !dbg !2990
  call void @llvm.dbg.value(metadata i32 %3, metadata !2982, metadata !DIExpression()) #9, !dbg !2989
  %5 = sub nsw i32 %4, %3, !dbg !2992
  %6 = lshr i32 %5, 1, !dbg !2994
  %7 = add i32 %6, %3, !dbg !2995
  call void @llvm.dbg.value(metadata i32 %7, metadata !2985, metadata !DIExpression()) #9, !dbg !2996
  %8 = sext i32 %7 to i64, !dbg !2997
  %9 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %8, i32 0, !dbg !2997
  %10 = load i8*, i8** %9, align 8, !dbg !2997, !tbaa !2936
  %11 = tail call i32 @strcmp(i8* %0, i8* %10) #10, !dbg !2997
  call void @llvm.dbg.value(metadata i32 %11, metadata !2984, metadata !DIExpression()) #9, !dbg !2998
  %12 = icmp slt i32 %11, 0, !dbg !2999
  br i1 %12, label %13, label %15, !dbg !3001

; <label>:13:                                     ; preds = %2
  %14 = add nsw i32 %7, -1, !dbg !3002
  call void @llvm.dbg.value(metadata i32 %14, metadata !2983, metadata !DIExpression()) #9, !dbg !2990
  br label %23, !dbg !3003

; <label>:15:                                     ; preds = %2
  %16 = icmp eq i32 %11, 0, !dbg !3004
  br i1 %16, label %19, label %17, !dbg !3006

; <label>:17:                                     ; preds = %15
  %18 = add nsw i32 %7, 1, !dbg !3007
  call void @llvm.dbg.value(metadata i32 %18, metadata !2982, metadata !DIExpression()) #9, !dbg !2989
  br label %23

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %8, i32 6, !dbg !3008
  %21 = load void (%struct.typval_T*, %struct.typval_T*)*, void (%struct.typval_T*, %struct.typval_T*)** %20, align 8, !dbg !3008, !tbaa !3010
  %22 = icmp eq void (%struct.typval_T*, %struct.typval_T*)* %21, null, !dbg !3011
  br i1 %22, label %27, label %28, !dbg !3012

; <label>:23:                                     ; preds = %17, %13
  %24 = phi i32 [ %14, %13 ], [ %4, %17 ]
  %25 = phi i32 [ %3, %13 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2982, metadata !DIExpression()) #9, !dbg !2989
  call void @llvm.dbg.value(metadata i32 %24, metadata !2983, metadata !DIExpression()) #9, !dbg !2990
  %26 = icmp slt i32 %24, %25, !dbg !3013
  br i1 %26, label %27, label %2, !dbg !2991, !llvm.loop !3014

; <label>:27:                                     ; preds = %23, %19
  br label %28, !dbg !3017

; <label>:28:                                     ; preds = %19, %27
  %29 = phi i32 [ -1, %27 ], [ %7, %19 ]
  ret i32 %29, !dbg !3018
}

; Function Attrs: nounwind readonly uwtable
define i32 @has_internal_func(i8* nocapture readonly) local_unnamed_addr #6 !dbg !3019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3021, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.value(metadata i8* %0, metadata !2976, metadata !DIExpression()) #9, !dbg !3023
  call void @llvm.dbg.value(metadata i32 1, metadata !2981, metadata !DIExpression()) #9, !dbg !3025
  call void @llvm.dbg.value(metadata i32 0, metadata !2982, metadata !DIExpression()) #9, !dbg !3026
  call void @llvm.dbg.value(metadata i32 521, metadata !2983, metadata !DIExpression()) #9, !dbg !3027
  br label %2, !dbg !3028

; <label>:2:                                      ; preds = %23, %1
  %3 = phi i32 [ 0, %1 ], [ %25, %23 ]
  %4 = phi i32 [ 521, %1 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !2983, metadata !DIExpression()) #9, !dbg !3027
  call void @llvm.dbg.value(metadata i32 %3, metadata !2982, metadata !DIExpression()) #9, !dbg !3026
  %5 = sub nsw i32 %4, %3, !dbg !3029
  %6 = lshr i32 %5, 1, !dbg !3030
  %7 = add i32 %6, %3, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %7, metadata !2985, metadata !DIExpression()) #9, !dbg !3032
  %8 = sext i32 %7 to i64, !dbg !3033
  %9 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %8, i32 0, !dbg !3033
  %10 = load i8*, i8** %9, align 8, !dbg !3033, !tbaa !2936
  %11 = tail call i32 @strcmp(i8* %0, i8* %10) #10, !dbg !3033
  call void @llvm.dbg.value(metadata i32 %11, metadata !2984, metadata !DIExpression()) #9, !dbg !3034
  %12 = icmp slt i32 %11, 0, !dbg !3035
  br i1 %12, label %13, label %15, !dbg !3036

; <label>:13:                                     ; preds = %2
  %14 = add nsw i32 %7, -1, !dbg !3037
  call void @llvm.dbg.value(metadata i32 %14, metadata !2983, metadata !DIExpression()) #9, !dbg !3027
  br label %23, !dbg !3038

; <label>:15:                                     ; preds = %2
  %16 = icmp eq i32 %11, 0, !dbg !3039
  br i1 %16, label %19, label %17, !dbg !3040

; <label>:17:                                     ; preds = %15
  %18 = add nsw i32 %7, 1, !dbg !3041
  call void @llvm.dbg.value(metadata i32 %18, metadata !2982, metadata !DIExpression()) #9, !dbg !3026
  br label %23

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %8, i32 6, !dbg !3042
  %21 = load void (%struct.typval_T*, %struct.typval_T*)*, void (%struct.typval_T*, %struct.typval_T*)** %20, align 8, !dbg !3042, !tbaa !3010
  %22 = icmp eq void (%struct.typval_T*, %struct.typval_T*)* %21, null, !dbg !3043
  br i1 %22, label %27, label %28, !dbg !3044

; <label>:23:                                     ; preds = %17, %13
  %24 = phi i32 [ %14, %13 ], [ %4, %17 ]
  %25 = phi i32 [ %3, %13 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2982, metadata !DIExpression()) #9, !dbg !3026
  call void @llvm.dbg.value(metadata i32 %24, metadata !2983, metadata !DIExpression()) #9, !dbg !3027
  %26 = icmp slt i32 %24, %25, !dbg !3045
  br i1 %26, label %27, label %2, !dbg !3028, !llvm.loop !3014

; <label>:27:                                     ; preds = %23, %19
  br label %28, !dbg !3046

; <label>:28:                                     ; preds = %19, %27
  %29 = phi i32 [ -1, %27 ], [ %7, %19 ]
  %30 = lshr i32 %29, 31, !dbg !3047
  %31 = xor i32 %30, 1, !dbg !3047
  ret i32 %31, !dbg !3048
}

; Function Attrs: nounwind readnone uwtable
define i8* @internal_func_name(i32) local_unnamed_addr #7 !dbg !3049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3053, metadata !DIExpression()), !dbg !3054
  %2 = sext i32 %0 to i64, !dbg !3055
  %3 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %2, i32 0, !dbg !3056
  %4 = load i8*, i8** %3, align 8, !dbg !3056, !tbaa !2936
  ret i8* %4, !dbg !3057
}

; Function Attrs: nounwind uwtable
define i32 @internal_func_check_arg_types(%struct.type_S**, i32, i32, %struct.cctx_S*) local_unnamed_addr #0 !dbg !3058 {
  %5 = alloca %struct.argcontext_T, align 8
  call void @llvm.dbg.value(metadata %struct.type_S** %0, metadata !3062, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %1, metadata !3063, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata i32 %2, metadata !3064, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.value(metadata %struct.cctx_S* %3, metadata !3065, metadata !DIExpression()), !dbg !3074
  %6 = sext i32 %1 to i64, !dbg !3075
  %7 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %6, i32 4, !dbg !3076
  %8 = load i32 (%struct.type_S*, %struct.argcontext_T*)**, i32 (%struct.type_S*, %struct.argcontext_T*)*** %7, align 8, !dbg !3076, !tbaa !3077
  call void @llvm.dbg.value(metadata i32 (%struct.type_S*, %struct.argcontext_T*)** %8, metadata !3066, metadata !DIExpression()), !dbg !3078
  %9 = icmp eq i32 (%struct.type_S*, %struct.argcontext_T*)** %8, null, !dbg !3079
  br i1 %9, label %35, label %10, !dbg !3080

; <label>:10:                                     ; preds = %4
  %11 = bitcast %struct.argcontext_T* %5 to i8*, !dbg !3081
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9, !dbg !3081
  %12 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %5, i64 0, i32 0, !dbg !3082
  store i32 %2, i32* %12, align 8, !dbg !3083, !tbaa !2695
  %13 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %5, i64 0, i32 1, !dbg !3084
  store %struct.type_S** %0, %struct.type_S*** %13, align 8, !dbg !3085, !tbaa !2779
  %14 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %5, i64 0, i32 3, !dbg !3086
  store %struct.cctx_S* %3, %struct.cctx_S** %14, align 8, !dbg !3087, !tbaa !2699
  call void @llvm.dbg.value(metadata i32 0, metadata !3067, metadata !DIExpression()), !dbg !3088
  %15 = icmp sgt i32 %2, 0, !dbg !3089
  br i1 %15, label %16, label %33, !dbg !3092

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.argcontext_T, %struct.argcontext_T* %5, i64 0, i32 2
  %18 = sext i32 %2 to i64, !dbg !3092
  br label %19, !dbg !3092

; <label>:19:                                     ; preds = %16, %30
  %20 = phi i64 [ 0, %16 ], [ %31, %30 ]
  call void @llvm.dbg.value(metadata i64 %20, metadata !3067, metadata !DIExpression()), !dbg !3088
  %21 = getelementptr inbounds i32 (%struct.type_S*, %struct.argcontext_T*)*, i32 (%struct.type_S*, %struct.argcontext_T*)** %8, i64 %20, !dbg !3093
  %22 = load i32 (%struct.type_S*, %struct.argcontext_T*)*, i32 (%struct.type_S*, %struct.argcontext_T*)** %21, align 8, !dbg !3093, !tbaa !2783
  %23 = icmp eq i32 (%struct.type_S*, %struct.argcontext_T*)* %22, null, !dbg !3095
  br i1 %23, label %30, label %24, !dbg !3096

; <label>:24:                                     ; preds = %19
  %25 = trunc i64 %20 to i32, !dbg !3097
  store i32 %25, i32* %17, align 8, !dbg !3097, !tbaa !2688
  %26 = getelementptr inbounds %struct.type_S*, %struct.type_S** %0, i64 %20, !dbg !3099
  %27 = load %struct.type_S*, %struct.type_S** %26, align 8, !dbg !3099, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.argcontext_T* %5, metadata !3068, metadata !DIExpression()), !dbg !3101
  %28 = call i32 %22(%struct.type_S* %27, %struct.argcontext_T* nonnull %5) #9, !dbg !3102
  %29 = icmp eq i32 %28, 0, !dbg !3103
  br i1 %29, label %34, label %30, !dbg !3104

; <label>:30:                                     ; preds = %19, %24
  %31 = add nuw nsw i64 %20, 1, !dbg !3105
  %32 = icmp slt i64 %31, %18, !dbg !3089
  br i1 %32, label %19, label %33, !dbg !3092, !llvm.loop !3106

; <label>:33:                                     ; preds = %30, %10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9, !dbg !3108
  br label %35

; <label>:34:                                     ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9, !dbg !3108
  br label %35

; <label>:35:                                     ; preds = %4, %33, %34
  %36 = phi i32 [ 0, %34 ], [ 1, %33 ], [ 1, %4 ]
  ret i32 %36, !dbg !3109
}

; Function Attrs: nounwind uwtable
define %struct.type_S* @internal_func_ret_type(i32, i32, %struct.type_S**) local_unnamed_addr #0 !dbg !3110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3114, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.value(metadata i32 %1, metadata !3115, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata %struct.type_S** %2, metadata !3116, metadata !DIExpression()), !dbg !3119
  %4 = sext i32 %0 to i64, !dbg !3120
  %5 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %4, i32 5, !dbg !3121
  %6 = load %struct.type_S* (i32, %struct.type_S**)*, %struct.type_S* (i32, %struct.type_S**)** %5, align 8, !dbg !3121, !tbaa !3122
  %7 = tail call %struct.type_S* %6(i32 %1, %struct.type_S** %2) #9, !dbg !3120
  ret %struct.type_S* %7, !dbg !3123
}

; Function Attrs: nounwind readnone uwtable
define i32 @internal_func_is_map(i32) local_unnamed_addr #7 !dbg !3124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3128, metadata !DIExpression()), !dbg !3129
  %2 = icmp eq i32 %0, 238, !dbg !3130
  %3 = zext i1 %2 to i32, !dbg !3130
  ret i32 %3, !dbg !3131
}

declare void @f_map(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define i32 @check_internal_func(i32, i32) local_unnamed_addr #0 !dbg !3132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3136, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i32 %1, metadata !3137, metadata !DIExpression()), !dbg !3141
  %3 = sext i32 %0 to i64, !dbg !3142
  %4 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %3, i32 1, !dbg !3144
  %5 = load i8, i8* %4, align 8, !dbg !3144, !tbaa !3145
  %6 = sext i8 %5 to i32, !dbg !3142
  %7 = icmp sgt i32 %6, %1, !dbg !3146
  br i1 %7, label %22, label %8, !dbg !3147

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %3, i32 2, !dbg !3148
  %10 = load i8, i8* %9, align 1, !dbg !3148, !tbaa !2943
  %11 = sext i8 %10 to i32, !dbg !3150
  %12 = icmp slt i32 %11, %1, !dbg !3151
  br i1 %12, label %17, label %13, !dbg !3152

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %3, i32 3, !dbg !3153
  %15 = load i8, i8* %14, align 2, !dbg !3153, !tbaa !3154
  %16 = sext i8 %15 to i32, !dbg !3155
  br label %27, !dbg !3156

; <label>:17:                                     ; preds = %8
  call void @llvm.dbg.value(metadata i32 %0, metadata !3053, metadata !DIExpression()), !dbg !3157
  %18 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %3, i32 0, !dbg !3159
  %19 = load i8*, i8** %18, align 8, !dbg !3159, !tbaa !2936
  call void @llvm.dbg.value(metadata i8* %24, metadata !3139, metadata !DIExpression()), !dbg !3160
  %20 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_toomanyarg, i64 0, i64 0), i32 5) #9, !dbg !3161
  %21 = tail call i32 (i8*, ...) @semsg(i8* %20, i8* %19) #9, !dbg !3163
  br label %27, !dbg !3163

; <label>:22:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 %0, metadata !3053, metadata !DIExpression()), !dbg !3157
  %23 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %3, i32 0, !dbg !3159
  %24 = load i8*, i8** %23, align 8, !dbg !3159, !tbaa !2936
  call void @llvm.dbg.value(metadata i8* %24, metadata !3139, metadata !DIExpression()), !dbg !3160
  %25 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_toofewarg, i64 0, i64 0), i32 5) #9, !dbg !3164
  %26 = tail call i32 (i8*, ...) @semsg(i8* %25, i8* %24) #9, !dbg !3165
  br label %27

; <label>:27:                                     ; preds = %17, %22, %13
  %28 = phi i32 [ %16, %13 ], [ -1, %22 ], [ -1, %17 ]
  ret i32 %28, !dbg !3166
}

declare i32 @semsg(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @dcgettext(i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define i32 @call_internal_func(i8* nocapture readonly, i32, %struct.typval_T*, %struct.typval_T*) local_unnamed_addr #0 !dbg !3167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3171, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i32 %1, metadata !3172, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.value(metadata %struct.typval_T* %2, metadata !3173, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.value(metadata %struct.typval_T* %3, metadata !3174, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.value(metadata i8* %0, metadata !2974, metadata !DIExpression()) #9, !dbg !3180
  call void @llvm.dbg.value(metadata i8* %0, metadata !2976, metadata !DIExpression()) #9, !dbg !3182
  call void @llvm.dbg.value(metadata i32 1, metadata !2981, metadata !DIExpression()) #9, !dbg !3184
  call void @llvm.dbg.value(metadata i32 0, metadata !2982, metadata !DIExpression()) #9, !dbg !3185
  call void @llvm.dbg.value(metadata i32 521, metadata !2983, metadata !DIExpression()) #9, !dbg !3186
  br label %5, !dbg !3187

; <label>:5:                                      ; preds = %28, %4
  %6 = phi i32 [ 0, %4 ], [ %30, %28 ]
  %7 = phi i32 [ 521, %4 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !2983, metadata !DIExpression()) #9, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %6, metadata !2982, metadata !DIExpression()) #9, !dbg !3185
  %8 = sub nsw i32 %7, %6, !dbg !3188
  %9 = lshr i32 %8, 1, !dbg !3189
  %10 = add i32 %9, %6, !dbg !3190
  call void @llvm.dbg.value(metadata i32 %10, metadata !2985, metadata !DIExpression()) #9, !dbg !3191
  %11 = sext i32 %10 to i64, !dbg !3192
  %12 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %11, i32 0, !dbg !3192
  %13 = load i8*, i8** %12, align 8, !dbg !3192, !tbaa !2936
  %14 = tail call i32 @strcmp(i8* %0, i8* %13) #10, !dbg !3192
  call void @llvm.dbg.value(metadata i32 %14, metadata !2984, metadata !DIExpression()) #9, !dbg !3193
  %15 = icmp slt i32 %14, 0, !dbg !3194
  br i1 %15, label %16, label %18, !dbg !3195

; <label>:16:                                     ; preds = %5
  %17 = add nsw i32 %10, -1, !dbg !3196
  call void @llvm.dbg.value(metadata i32 %17, metadata !2983, metadata !DIExpression()) #9, !dbg !3186
  br label %28, !dbg !3197

; <label>:18:                                     ; preds = %5
  %19 = icmp eq i32 %14, 0, !dbg !3198
  br i1 %19, label %22, label %20, !dbg !3199

; <label>:20:                                     ; preds = %18
  %21 = add nsw i32 %10, 1, !dbg !3200
  call void @llvm.dbg.value(metadata i32 %21, metadata !2982, metadata !DIExpression()) #9, !dbg !3185
  br label %28

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %11, i32 6, !dbg !3201
  %24 = load void (%struct.typval_T*, %struct.typval_T*)*, void (%struct.typval_T*, %struct.typval_T*)** %23, align 8, !dbg !3201, !tbaa !3010
  %25 = icmp eq void (%struct.typval_T*, %struct.typval_T*)* %24, null, !dbg !3202
  %26 = icmp slt i32 %10, 0, !dbg !3203
  %27 = or i1 %26, %25, !dbg !3205
  call void @llvm.dbg.value(metadata i32 %10, metadata !3175, metadata !DIExpression()), !dbg !3206
  br i1 %27, label %45, label %32, !dbg !3205

; <label>:28:                                     ; preds = %20, %16
  %29 = phi i32 [ %17, %16 ], [ %7, %20 ]
  %30 = phi i32 [ %6, %16 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !2982, metadata !DIExpression()) #9, !dbg !3185
  call void @llvm.dbg.value(metadata i32 %29, metadata !2983, metadata !DIExpression()) #9, !dbg !3186
  %31 = icmp slt i32 %29, %30, !dbg !3207
  br i1 %31, label %45, label %5, !dbg !3187, !llvm.loop !3014

; <label>:32:                                     ; preds = %22
  %33 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %11, i32 1, !dbg !3208
  %34 = load i8, i8* %33, align 8, !dbg !3208, !tbaa !3145
  %35 = sext i8 %34 to i32, !dbg !3210
  %36 = icmp sgt i32 %35, %1, !dbg !3211
  br i1 %36, label %45, label %37, !dbg !3212

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %11, i32 2, !dbg !3213
  %39 = load i8, i8* %38, align 1, !dbg !3213, !tbaa !2943
  %40 = sext i8 %39 to i32, !dbg !3215
  %41 = icmp slt i32 %40, %1, !dbg !3216
  br i1 %41, label %45, label %42, !dbg !3217

; <label>:42:                                     ; preds = %37
  %43 = sext i32 %1 to i64, !dbg !3218
  %44 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %43, i32 0, !dbg !3219
  store i32 0, i32* %44, align 8, !dbg !3220, !tbaa !3221
  tail call void %24(%struct.typval_T* %2, %struct.typval_T* %3) #9, !dbg !3223
  br label %45, !dbg !3224

; <label>:45:                                     ; preds = %28, %22, %37, %32, %42
  %46 = phi i32 [ 5, %42 ], [ 2, %32 ], [ 1, %37 ], [ 0, %22 ], [ 0, %28 ]
  ret i32 %46, !dbg !3225
}

; Function Attrs: nounwind uwtable
define void @call_internal_func_by_idx(i32, %struct.typval_T*, %struct.typval_T*) local_unnamed_addr #0 !dbg !3226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3230, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !3231, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.value(metadata %struct.typval_T* %2, metadata !3232, metadata !DIExpression()), !dbg !3235
  %4 = sext i32 %0 to i64, !dbg !3236
  %5 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %4, i32 6, !dbg !3237
  %6 = load void (%struct.typval_T*, %struct.typval_T*)*, void (%struct.typval_T*, %struct.typval_T*)** %5, align 8, !dbg !3237, !tbaa !3010
  tail call void %6(%struct.typval_T* %1, %struct.typval_T* %2) #9, !dbg !3236
  ret void, !dbg !3238
}

; Function Attrs: nounwind uwtable
define i32 @call_internal_method(i8* nocapture readonly, i32, %struct.typval_T* nocapture readonly, %struct.typval_T*, %struct.typval_T* nocapture readonly) local_unnamed_addr #0 !dbg !3239 {
  %6 = alloca [21 x %struct.typval_T], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !3243, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.value(metadata i32 %1, metadata !3244, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata %struct.typval_T* %2, metadata !3245, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata %struct.typval_T* %3, metadata !3246, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.value(metadata %struct.typval_T* %4, metadata !3247, metadata !DIExpression()), !dbg !3258
  %7 = bitcast [21 x %struct.typval_T]* %6 to i8*, !dbg !3259
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %7) #9, !dbg !3259
  call void @llvm.dbg.declare(metadata [21 x %struct.typval_T]* %6, metadata !3250, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.value(metadata i8* %0, metadata !2974, metadata !DIExpression()) #9, !dbg !3261
  call void @llvm.dbg.value(metadata i8* %0, metadata !2976, metadata !DIExpression()) #9, !dbg !3263
  call void @llvm.dbg.value(metadata i32 1, metadata !2981, metadata !DIExpression()) #9, !dbg !3265
  call void @llvm.dbg.value(metadata i32 0, metadata !2982, metadata !DIExpression()) #9, !dbg !3266
  call void @llvm.dbg.value(metadata i32 521, metadata !2983, metadata !DIExpression()) #9, !dbg !3267
  br label %8, !dbg !3268

; <label>:8:                                      ; preds = %31, %5
  %9 = phi i32 [ 0, %5 ], [ %33, %31 ]
  %10 = phi i32 [ 521, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !2983, metadata !DIExpression()) #9, !dbg !3267
  call void @llvm.dbg.value(metadata i32 %9, metadata !2982, metadata !DIExpression()) #9, !dbg !3266
  %11 = sub nsw i32 %10, %9, !dbg !3269
  %12 = lshr i32 %11, 1, !dbg !3270
  %13 = add i32 %12, %9, !dbg !3271
  call void @llvm.dbg.value(metadata i32 %13, metadata !2985, metadata !DIExpression()) #9, !dbg !3272
  %14 = sext i32 %13 to i64, !dbg !3273
  %15 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %14, i32 0, !dbg !3273
  %16 = load i8*, i8** %15, align 8, !dbg !3273, !tbaa !2936
  %17 = tail call i32 @strcmp(i8* %0, i8* %16) #10, !dbg !3273
  call void @llvm.dbg.value(metadata i32 %17, metadata !2984, metadata !DIExpression()) #9, !dbg !3274
  %18 = icmp slt i32 %17, 0, !dbg !3275
  br i1 %18, label %19, label %21, !dbg !3276

; <label>:19:                                     ; preds = %8
  %20 = add nsw i32 %13, -1, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %20, metadata !2983, metadata !DIExpression()) #9, !dbg !3267
  br label %31, !dbg !3278

; <label>:21:                                     ; preds = %8
  %22 = icmp eq i32 %17, 0, !dbg !3279
  br i1 %22, label %25, label %23, !dbg !3280

; <label>:23:                                     ; preds = %21
  %24 = add nsw i32 %13, 1, !dbg !3281
  call void @llvm.dbg.value(metadata i32 %24, metadata !2982, metadata !DIExpression()) #9, !dbg !3266
  br label %31

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %14, i32 6, !dbg !3282
  %27 = load void (%struct.typval_T*, %struct.typval_T*)*, void (%struct.typval_T*, %struct.typval_T*)** %26, align 8, !dbg !3282, !tbaa !3010
  %28 = icmp eq void (%struct.typval_T*, %struct.typval_T*)* %27, null, !dbg !3283
  %29 = icmp slt i32 %13, 0, !dbg !3284
  %30 = or i1 %29, %28, !dbg !3286
  call void @llvm.dbg.value(metadata i32 %13, metadata !3249, metadata !DIExpression()), !dbg !3287
  br i1 %30, label %283, label %35, !dbg !3286

; <label>:31:                                     ; preds = %23, %19
  %32 = phi i32 [ %20, %19 ], [ %10, %23 ]
  %33 = phi i32 [ %9, %19 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i32 %33, metadata !2982, metadata !DIExpression()) #9, !dbg !3266
  call void @llvm.dbg.value(metadata i32 %32, metadata !2983, metadata !DIExpression()) #9, !dbg !3267
  %34 = icmp slt i32 %32, %33, !dbg !3288
  br i1 %34, label %283, label %8, !dbg !3268, !llvm.loop !3014

; <label>:35:                                     ; preds = %25
  %36 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %14, i32 3, !dbg !3289
  %37 = load i8, i8* %36, align 2, !dbg !3289, !tbaa !3154
  %38 = icmp eq i8 %37, 0, !dbg !3291
  br i1 %38, label %283, label %39, !dbg !3292

; <label>:39:                                     ; preds = %35
  %40 = add nsw i32 %1, 1, !dbg !3293
  %41 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %14, i32 1, !dbg !3295
  %42 = load i8, i8* %41, align 8, !dbg !3295, !tbaa !3145
  %43 = sext i8 %42 to i32, !dbg !3296
  %44 = icmp slt i32 %40, %43, !dbg !3297
  br i1 %44, label %283, label %45, !dbg !3298

; <label>:45:                                     ; preds = %39
  %46 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %14, i32 2, !dbg !3299
  %47 = load i8, i8* %46, align 1, !dbg !3299, !tbaa !2943
  %48 = sext i8 %47 to i32, !dbg !3301
  %49 = icmp sgt i32 %48, %1, !dbg !3302
  br i1 %49, label %50, label %283, !dbg !3303

; <label>:50:                                     ; preds = %45
  switch i8 %37, label %137 [
    i8 2, label %51
    i8 3, label %92
  ], !dbg !3304

; <label>:51:                                     ; preds = %50
  %52 = bitcast %struct.typval_T* %2 to i8*, !dbg !3306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* %52, i64 16, i32 8, i1 false), !dbg !3306, !tbaa.struct !3309
  %53 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 1, !dbg !3314
  %54 = bitcast %struct.typval_T* %53 to i8*, !dbg !3315
  %55 = bitcast %struct.typval_T* %4 to i8*, !dbg !3315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %54, i8* %55, i64 16, i32 8, i1 false), !dbg !3315, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i32 1, metadata !3248, metadata !DIExpression()), !dbg !3316
  %56 = icmp sgt i32 %1, 1, !dbg !3317
  br i1 %56, label %57, label %279, !dbg !3320

; <label>:57:                                     ; preds = %51
  %58 = zext i32 %1 to i64
  %59 = add nsw i64 %58, -2, !dbg !3320
  %60 = add i32 %1, 3, !dbg !3320
  %61 = and i32 %60, 3, !dbg !3320
  %62 = zext i32 %61 to i64, !dbg !3320
  %63 = icmp ult i64 %59, 3, !dbg !3320
  br i1 %63, label %251, label %64, !dbg !3320

; <label>:64:                                     ; preds = %57
  %65 = add nsw i64 %58, -1, !dbg !3320
  %66 = sub nsw i64 %65, %62, !dbg !3320
  br label %67, !dbg !3320

; <label>:67:                                     ; preds = %67, %64
  %68 = phi i64 [ 1, %64 ], [ %85, %67 ]
  %69 = phi i64 [ %66, %64 ], [ %90, %67 ]
  call void @llvm.dbg.value(metadata i64 %68, metadata !3248, metadata !DIExpression()), !dbg !3316
  %70 = add nuw nsw i64 %68, 1, !dbg !3321
  %71 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %70, !dbg !3322
  %72 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %68, !dbg !3323
  %73 = bitcast %struct.typval_T* %71 to i8*, !dbg !3323
  %74 = bitcast %struct.typval_T* %72 to i8*, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %73, i8* nonnull %74, i64 16, i32 8, i1 false), !dbg !3323, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %70, metadata !3248, metadata !DIExpression()), !dbg !3316
  %75 = add nuw nsw i64 %68, 2, !dbg !3321
  %76 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %75, !dbg !3322
  %77 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %70, !dbg !3323
  %78 = bitcast %struct.typval_T* %76 to i8*, !dbg !3323
  %79 = bitcast %struct.typval_T* %77 to i8*, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %78, i8* nonnull %79, i64 16, i32 8, i1 false), !dbg !3323, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %75, metadata !3248, metadata !DIExpression()), !dbg !3316
  %80 = add nuw nsw i64 %68, 3, !dbg !3321
  %81 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %80, !dbg !3322
  %82 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %75, !dbg !3323
  %83 = bitcast %struct.typval_T* %81 to i8*, !dbg !3323
  %84 = bitcast %struct.typval_T* %82 to i8*, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %83, i8* nonnull %84, i64 16, i32 8, i1 false), !dbg !3323, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %80, metadata !3248, metadata !DIExpression()), !dbg !3316
  %85 = add nuw nsw i64 %68, 4, !dbg !3321
  %86 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %85, !dbg !3322
  %87 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %80, !dbg !3323
  %88 = bitcast %struct.typval_T* %86 to i8*, !dbg !3323
  %89 = bitcast %struct.typval_T* %87 to i8*, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %88, i8* nonnull %89, i64 16, i32 8, i1 false), !dbg !3323, !tbaa.struct !3309
  %90 = add i64 %69, -4, !dbg !3320
  %91 = icmp eq i64 %90, 0, !dbg !3320
  br i1 %91, label %251, label %67, !dbg !3320, !llvm.loop !3324

; <label>:92:                                     ; preds = %50
  %93 = bitcast %struct.typval_T* %2 to i8*, !dbg !3326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* %93, i64 16, i32 8, i1 false), !dbg !3326, !tbaa.struct !3309
  %94 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 1, !dbg !3329
  %95 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 1, !dbg !3330
  %96 = bitcast %struct.typval_T* %94 to i8*, !dbg !3330
  %97 = bitcast %struct.typval_T* %95 to i8*, !dbg !3330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %96, i8* nonnull %97, i64 16, i32 8, i1 false), !dbg !3330, !tbaa.struct !3309
  %98 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 2, !dbg !3331
  %99 = bitcast %struct.typval_T* %98 to i8*, !dbg !3332
  %100 = bitcast %struct.typval_T* %4 to i8*, !dbg !3332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %99, i8* %100, i64 16, i32 8, i1 false), !dbg !3332, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i32 2, metadata !3248, metadata !DIExpression()), !dbg !3316
  %101 = icmp sgt i32 %1, 2, !dbg !3333
  br i1 %101, label %102, label %279, !dbg !3336

; <label>:102:                                    ; preds = %92
  %103 = zext i32 %1 to i64
  %104 = add nsw i64 %103, -3, !dbg !3336
  %105 = add i32 %1, 2, !dbg !3336
  %106 = and i32 %105, 3, !dbg !3336
  %107 = zext i32 %106 to i64, !dbg !3336
  %108 = icmp ult i64 %104, 3, !dbg !3336
  br i1 %108, label %265, label %109, !dbg !3336

; <label>:109:                                    ; preds = %102
  %110 = add nsw i64 %103, -2, !dbg !3336
  %111 = sub nsw i64 %110, %107, !dbg !3336
  br label %112, !dbg !3336

; <label>:112:                                    ; preds = %112, %109
  %113 = phi i64 [ 2, %109 ], [ %130, %112 ]
  %114 = phi i64 [ %111, %109 ], [ %135, %112 ]
  call void @llvm.dbg.value(metadata i64 %113, metadata !3248, metadata !DIExpression()), !dbg !3316
  %115 = or i64 %113, 1, !dbg !3337
  %116 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %115, !dbg !3338
  %117 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %113, !dbg !3339
  %118 = bitcast %struct.typval_T* %116 to i8*, !dbg !3339
  %119 = bitcast %struct.typval_T* %117 to i8*, !dbg !3339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %118, i8* nonnull %119, i64 16, i32 8, i1 false), !dbg !3339, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %115, metadata !3248, metadata !DIExpression()), !dbg !3316
  %120 = add nuw nsw i64 %113, 2, !dbg !3337
  %121 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %120, !dbg !3338
  %122 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %115, !dbg !3339
  %123 = bitcast %struct.typval_T* %121 to i8*, !dbg !3339
  %124 = bitcast %struct.typval_T* %122 to i8*, !dbg !3339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %123, i8* nonnull %124, i64 16, i32 8, i1 false), !dbg !3339, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %120, metadata !3248, metadata !DIExpression()), !dbg !3316
  %125 = add nuw nsw i64 %113, 3, !dbg !3337
  %126 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %125, !dbg !3338
  %127 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %120, !dbg !3339
  %128 = bitcast %struct.typval_T* %126 to i8*, !dbg !3339
  %129 = bitcast %struct.typval_T* %127 to i8*, !dbg !3339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %128, i8* nonnull %129, i64 16, i32 8, i1 false), !dbg !3339, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %125, metadata !3248, metadata !DIExpression()), !dbg !3316
  %130 = add nuw nsw i64 %113, 4, !dbg !3337
  %131 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %130, !dbg !3338
  %132 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %125, !dbg !3339
  %133 = bitcast %struct.typval_T* %131 to i8*, !dbg !3339
  %134 = bitcast %struct.typval_T* %132 to i8*, !dbg !3339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %133, i8* nonnull %134, i64 16, i32 8, i1 false), !dbg !3339, !tbaa.struct !3309
  %135 = add i64 %114, -4, !dbg !3336
  %136 = icmp eq i64 %135, 0, !dbg !3336
  br i1 %136, label %265, label %112, !dbg !3336, !llvm.loop !3340

; <label>:137:                                    ; preds = %50
  %138 = icmp eq i32 %13, 364, !dbg !3342
  br i1 %138, label %139, label %188, !dbg !3344

; <label>:139:                                    ; preds = %137
  %140 = bitcast %struct.typval_T* %2 to i8*, !dbg !3345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* %140, i64 16, i32 8, i1 false), !dbg !3345, !tbaa.struct !3309
  %141 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 1, !dbg !3347
  %142 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 1, !dbg !3348
  %143 = bitcast %struct.typval_T* %141 to i8*, !dbg !3348
  %144 = bitcast %struct.typval_T* %142 to i8*, !dbg !3348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %143, i8* nonnull %144, i64 16, i32 8, i1 false), !dbg !3348, !tbaa.struct !3309
  %145 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 2, !dbg !3349
  %146 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 2, !dbg !3350
  %147 = bitcast %struct.typval_T* %145 to i8*, !dbg !3350
  %148 = bitcast %struct.typval_T* %146 to i8*, !dbg !3350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %147, i8* nonnull %148, i64 16, i32 8, i1 false), !dbg !3350, !tbaa.struct !3309
  %149 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 3, !dbg !3351
  %150 = bitcast %struct.typval_T* %149 to i8*, !dbg !3352
  %151 = bitcast %struct.typval_T* %4 to i8*, !dbg !3352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %150, i8* %151, i64 16, i32 8, i1 false), !dbg !3352, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i32 3, metadata !3248, metadata !DIExpression()), !dbg !3316
  %152 = icmp sgt i32 %1, 3, !dbg !3353
  br i1 %152, label %153, label %279, !dbg !3356

; <label>:153:                                    ; preds = %139
  %154 = zext i32 %1 to i64
  %155 = add nsw i64 %154, -4, !dbg !3356
  %156 = add i32 %1, 1, !dbg !3356
  %157 = and i32 %156, 3, !dbg !3356
  %158 = zext i32 %157 to i64, !dbg !3356
  %159 = icmp ult i64 %155, 3, !dbg !3356
  br i1 %159, label %223, label %160, !dbg !3356

; <label>:160:                                    ; preds = %153
  %161 = add nsw i64 %154, -3, !dbg !3356
  %162 = sub nsw i64 %161, %158, !dbg !3356
  br label %163, !dbg !3356

; <label>:163:                                    ; preds = %163, %160
  %164 = phi i64 [ 3, %160 ], [ %181, %163 ]
  %165 = phi i64 [ %162, %160 ], [ %186, %163 ]
  call void @llvm.dbg.value(metadata i64 %164, metadata !3248, metadata !DIExpression()), !dbg !3316
  %166 = add nuw nsw i64 %164, 1, !dbg !3357
  %167 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %166, !dbg !3358
  %168 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %164, !dbg !3359
  %169 = bitcast %struct.typval_T* %167 to i8*, !dbg !3359
  %170 = bitcast %struct.typval_T* %168 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %169, i8* nonnull %170, i64 16, i32 8, i1 false), !dbg !3359, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %166, metadata !3248, metadata !DIExpression()), !dbg !3316
  %171 = add nuw nsw i64 %164, 2, !dbg !3357
  %172 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %171, !dbg !3358
  %173 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %166, !dbg !3359
  %174 = bitcast %struct.typval_T* %172 to i8*, !dbg !3359
  %175 = bitcast %struct.typval_T* %173 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %174, i8* nonnull %175, i64 16, i32 8, i1 false), !dbg !3359, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %171, metadata !3248, metadata !DIExpression()), !dbg !3316
  %176 = add nuw nsw i64 %164, 3, !dbg !3357
  %177 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %176, !dbg !3358
  %178 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %171, !dbg !3359
  %179 = bitcast %struct.typval_T* %177 to i8*, !dbg !3359
  %180 = bitcast %struct.typval_T* %178 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %179, i8* nonnull %180, i64 16, i32 8, i1 false), !dbg !3359, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %176, metadata !3248, metadata !DIExpression()), !dbg !3316
  %181 = add nuw nsw i64 %164, 4, !dbg !3357
  %182 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %181, !dbg !3358
  %183 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %176, !dbg !3359
  %184 = bitcast %struct.typval_T* %182 to i8*, !dbg !3359
  %185 = bitcast %struct.typval_T* %183 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %184, i8* nonnull %185, i64 16, i32 8, i1 false), !dbg !3359, !tbaa.struct !3309
  %186 = add i64 %165, -4, !dbg !3356
  %187 = icmp eq i64 %186, 0, !dbg !3356
  br i1 %187, label %223, label %163, !dbg !3356, !llvm.loop !3360

; <label>:188:                                    ; preds = %137
  %189 = bitcast %struct.typval_T* %4 to i8*, !dbg !3362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* %189, i64 16, i32 8, i1 false), !dbg !3362, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3248, metadata !DIExpression()), !dbg !3316
  %190 = icmp sgt i32 %1, 0, !dbg !3364
  br i1 %190, label %191, label %279, !dbg !3367

; <label>:191:                                    ; preds = %188
  %192 = zext i32 %1 to i64
  %193 = add nsw i64 %192, -1, !dbg !3367
  %194 = and i64 %192, 3, !dbg !3367
  %195 = icmp ult i64 %193, 3, !dbg !3367
  br i1 %195, label %237, label %196, !dbg !3367

; <label>:196:                                    ; preds = %191
  %197 = sub nsw i64 %192, %194, !dbg !3367
  br label %198, !dbg !3367

; <label>:198:                                    ; preds = %198, %196
  %199 = phi i64 [ 0, %196 ], [ %216, %198 ]
  %200 = phi i64 [ %197, %196 ], [ %221, %198 ]
  call void @llvm.dbg.value(metadata i64 %199, metadata !3248, metadata !DIExpression()), !dbg !3316
  %201 = or i64 %199, 1, !dbg !3368
  %202 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %201, !dbg !3369
  %203 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %199, !dbg !3370
  %204 = bitcast %struct.typval_T* %202 to i8*, !dbg !3370
  %205 = bitcast %struct.typval_T* %203 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %204, i8* %205, i64 16, i32 8, i1 false), !dbg !3370, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %201, metadata !3248, metadata !DIExpression()), !dbg !3316
  %206 = or i64 %199, 2, !dbg !3368
  %207 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %206, !dbg !3369
  %208 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %201, !dbg !3370
  %209 = bitcast %struct.typval_T* %207 to i8*, !dbg !3370
  %210 = bitcast %struct.typval_T* %208 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %209, i8* %210, i64 16, i32 8, i1 false), !dbg !3370, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %206, metadata !3248, metadata !DIExpression()), !dbg !3316
  %211 = or i64 %199, 3, !dbg !3368
  %212 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %211, !dbg !3369
  %213 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %206, !dbg !3370
  %214 = bitcast %struct.typval_T* %212 to i8*, !dbg !3370
  %215 = bitcast %struct.typval_T* %213 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %214, i8* %215, i64 16, i32 8, i1 false), !dbg !3370, !tbaa.struct !3309
  call void @llvm.dbg.value(metadata i64 %211, metadata !3248, metadata !DIExpression()), !dbg !3316
  %216 = add nuw nsw i64 %199, 4, !dbg !3368
  %217 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %216, !dbg !3369
  %218 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %211, !dbg !3370
  %219 = bitcast %struct.typval_T* %217 to i8*, !dbg !3370
  %220 = bitcast %struct.typval_T* %218 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %219, i8* %220, i64 16, i32 8, i1 false), !dbg !3370, !tbaa.struct !3309
  %221 = add i64 %200, -4, !dbg !3367
  %222 = icmp eq i64 %221, 0, !dbg !3367
  br i1 %222, label %237, label %198, !dbg !3367, !llvm.loop !3371

; <label>:223:                                    ; preds = %163, %153
  %224 = phi i64 [ 3, %153 ], [ %181, %163 ]
  %225 = icmp eq i32 %157, 0, !dbg !3356
  br i1 %225, label %279, label %226, !dbg !3356

; <label>:226:                                    ; preds = %223
  br label %227, !dbg !3356

; <label>:227:                                    ; preds = %227, %226
  %228 = phi i64 [ %224, %226 ], [ %230, %227 ]
  %229 = phi i64 [ %158, %226 ], [ %235, %227 ]
  call void @llvm.dbg.value(metadata i64 %228, metadata !3248, metadata !DIExpression()), !dbg !3316
  %230 = add nuw nsw i64 %228, 1, !dbg !3357
  %231 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %230, !dbg !3358
  %232 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %228, !dbg !3359
  %233 = bitcast %struct.typval_T* %231 to i8*, !dbg !3359
  %234 = bitcast %struct.typval_T* %232 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %233, i8* nonnull %234, i64 16, i32 8, i1 false), !dbg !3359, !tbaa.struct !3309
  %235 = add i64 %229, -1, !dbg !3356
  %236 = icmp eq i64 %235, 0, !dbg !3356
  br i1 %236, label %279, label %227, !dbg !3356, !llvm.loop !3373

; <label>:237:                                    ; preds = %198, %191
  %238 = phi i64 [ 0, %191 ], [ %216, %198 ]
  %239 = icmp eq i64 %194, 0, !dbg !3367
  br i1 %239, label %279, label %240, !dbg !3367

; <label>:240:                                    ; preds = %237
  br label %241, !dbg !3367

; <label>:241:                                    ; preds = %241, %240
  %242 = phi i64 [ %238, %240 ], [ %244, %241 ]
  %243 = phi i64 [ %194, %240 ], [ %249, %241 ]
  call void @llvm.dbg.value(metadata i64 %242, metadata !3248, metadata !DIExpression()), !dbg !3316
  %244 = add nuw nsw i64 %242, 1, !dbg !3368
  %245 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %244, !dbg !3369
  %246 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %242, !dbg !3370
  %247 = bitcast %struct.typval_T* %245 to i8*, !dbg !3370
  %248 = bitcast %struct.typval_T* %246 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %247, i8* %248, i64 16, i32 8, i1 false), !dbg !3370, !tbaa.struct !3309
  %249 = add i64 %243, -1, !dbg !3367
  %250 = icmp eq i64 %249, 0, !dbg !3367
  br i1 %250, label %279, label %241, !dbg !3367, !llvm.loop !3375

; <label>:251:                                    ; preds = %67, %57
  %252 = phi i64 [ 1, %57 ], [ %85, %67 ]
  %253 = icmp eq i32 %61, 0, !dbg !3320
  br i1 %253, label %279, label %254, !dbg !3320

; <label>:254:                                    ; preds = %251
  br label %255, !dbg !3320

; <label>:255:                                    ; preds = %255, %254
  %256 = phi i64 [ %252, %254 ], [ %258, %255 ]
  %257 = phi i64 [ %62, %254 ], [ %263, %255 ]
  call void @llvm.dbg.value(metadata i64 %256, metadata !3248, metadata !DIExpression()), !dbg !3316
  %258 = add nuw nsw i64 %256, 1, !dbg !3321
  %259 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %258, !dbg !3322
  %260 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %256, !dbg !3323
  %261 = bitcast %struct.typval_T* %259 to i8*, !dbg !3323
  %262 = bitcast %struct.typval_T* %260 to i8*, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %261, i8* nonnull %262, i64 16, i32 8, i1 false), !dbg !3323, !tbaa.struct !3309
  %263 = add i64 %257, -1, !dbg !3320
  %264 = icmp eq i64 %263, 0, !dbg !3320
  br i1 %264, label %279, label %255, !dbg !3320, !llvm.loop !3376

; <label>:265:                                    ; preds = %112, %102
  %266 = phi i64 [ 2, %102 ], [ %130, %112 ]
  %267 = icmp eq i32 %106, 0, !dbg !3336
  br i1 %267, label %279, label %268, !dbg !3336

; <label>:268:                                    ; preds = %265
  br label %269, !dbg !3336

; <label>:269:                                    ; preds = %269, %268
  %270 = phi i64 [ %266, %268 ], [ %272, %269 ]
  %271 = phi i64 [ %107, %268 ], [ %277, %269 ]
  call void @llvm.dbg.value(metadata i64 %270, metadata !3248, metadata !DIExpression()), !dbg !3316
  %272 = add nuw nsw i64 %270, 1, !dbg !3337
  %273 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %272, !dbg !3338
  %274 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %2, i64 %270, !dbg !3339
  %275 = bitcast %struct.typval_T* %273 to i8*, !dbg !3339
  %276 = bitcast %struct.typval_T* %274 to i8*, !dbg !3339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %275, i8* nonnull %276, i64 16, i32 8, i1 false), !dbg !3339, !tbaa.struct !3309
  %277 = add i64 %271, -1, !dbg !3336
  %278 = icmp eq i64 %277, 0, !dbg !3336
  br i1 %278, label %279, label %269, !dbg !3336, !llvm.loop !3377

; <label>:279:                                    ; preds = %265, %269, %251, %255, %237, %241, %223, %227, %92, %51, %188, %139
  %280 = sext i32 %40 to i64, !dbg !3378
  %281 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 %280, i32 0, !dbg !3379
  store i32 0, i32* %281, align 16, !dbg !3380, !tbaa !3221
  %282 = getelementptr inbounds [21 x %struct.typval_T], [21 x %struct.typval_T]* %6, i64 0, i64 0, !dbg !3381
  call void %27(%struct.typval_T* nonnull %282, %struct.typval_T* %3) #9, !dbg !3382
  br label %283, !dbg !3383

; <label>:283:                                    ; preds = %31, %25, %45, %39, %35, %279
  %284 = phi i32 [ 5, %279 ], [ 8, %35 ], [ 2, %39 ], [ 1, %45 ], [ 0, %25 ], [ 0, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %7) #9, !dbg !3384
  ret i32 %284, !dbg !3384
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind readonly uwtable
define i32 @non_zero_arg(%struct.typval_T* nocapture readonly) local_unnamed_addr #6 !dbg !3385 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3389, metadata !DIExpression()), !dbg !3390
  %2 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !3391
  %3 = load i32, i32* %2, align 8, !dbg !3391, !tbaa !3221
  switch i32 %3, label %22 [
    i32 5, label %4
    i32 3, label %8
    i32 7, label %13
  ], !dbg !3392

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !3393
  %6 = load i64, i64* %5, align 8, !dbg !3393, !tbaa !2918
  %7 = icmp eq i64 %6, 0, !dbg !3394
  br i1 %7, label %12, label %22, !dbg !3395

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !3396
  %10 = load i64, i64* %9, align 8, !dbg !3396, !tbaa !2918
  %11 = icmp eq i64 %10, 1, !dbg !3397
  br i1 %11, label %22, label %12, !dbg !3398

; <label>:12:                                     ; preds = %8, %4
  br label %22, !dbg !3399

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !3400
  %15 = bitcast %union.anon* %14 to i8**, !dbg !3401
  %16 = load i8*, i8** %15, align 8, !dbg !3401, !tbaa !2918
  %17 = icmp eq i8* %16, null, !dbg !3402
  br i1 %17, label %22, label %18, !dbg !3403

; <label>:18:                                     ; preds = %13
  %19 = load i8, i8* %16, align 1, !dbg !3404, !tbaa !2918
  %20 = icmp ne i8 %19, 0, !dbg !3405
  %21 = zext i1 %20 to i32
  br label %22

; <label>:22:                                     ; preds = %1, %12, %4, %13, %18, %8
  %23 = phi i32 [ 1, %8 ], [ 1, %4 ], [ 0, %13 ], [ %21, %18 ], [ 0, %12 ], [ 0, %1 ]
  ret i32 %23, !dbg !3406
}

; Function Attrs: nounwind uwtable
define %struct.file_buffer* @get_buf_arg(%struct.typval_T*) local_unnamed_addr #0 !dbg !3407 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3411, metadata !DIExpression()), !dbg !3413
  %2 = load i32, i32* @emsg_off, align 4, !dbg !3414, !tbaa !2904
  %3 = add nsw i32 %2, 1, !dbg !3414
  store i32 %3, i32* @emsg_off, align 4, !dbg !3414, !tbaa !2904
  %4 = tail call %struct.file_buffer* @tv_get_buf(%struct.typval_T* %0, i32 0) #9, !dbg !3415
  call void @llvm.dbg.value(metadata %struct.file_buffer* %4, metadata !3412, metadata !DIExpression()), !dbg !3416
  %5 = load i32, i32* @emsg_off, align 4, !dbg !3417, !tbaa !2904
  %6 = add nsw i32 %5, -1, !dbg !3417
  store i32 %6, i32* @emsg_off, align 4, !dbg !3417, !tbaa !2904
  %7 = icmp eq %struct.file_buffer* %4, null, !dbg !3418
  br i1 %7, label %8, label %12, !dbg !3420

; <label>:8:                                      ; preds = %1
  %9 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i32 5) #9, !dbg !3421
  %10 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !3422
  %11 = tail call i32 (i8*, ...) @semsg(i8* %9, i8* %10) #9, !dbg !3423
  br label %12, !dbg !3423

; <label>:12:                                     ; preds = %8, %1
  ret %struct.file_buffer* %4, !dbg !3424
}

declare %struct.file_buffer* @tv_get_buf(%struct.typval_T*, i32) local_unnamed_addr #3

declare i8* @tv_get_string(%struct.typval_T*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define %struct.window_S* @get_optional_window(%struct.typval_T*, i32) local_unnamed_addr #0 !dbg !3425 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3429, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.value(metadata i32 %1, metadata !3430, metadata !DIExpression()), !dbg !3433
  %3 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !3434, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* %3, metadata !3431, metadata !DIExpression()), !dbg !3435
  %4 = sext i32 %1 to i64, !dbg !3436
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 %4, !dbg !3436
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %5, i64 0, i32 0, !dbg !3438
  %7 = load i32, i32* %6, align 8, !dbg !3438, !tbaa !3221
  %8 = icmp eq i32 %7, 0, !dbg !3439
  br i1 %8, label %15, label %9, !dbg !3440

; <label>:9:                                      ; preds = %2
  %10 = tail call %struct.window_S* @find_win_by_nr_or_id(%struct.typval_T* %5) #9, !dbg !3441
  call void @llvm.dbg.value(metadata %struct.window_S* %10, metadata !3431, metadata !DIExpression()), !dbg !3435
  %11 = icmp eq %struct.window_S* %10, null, !dbg !3443
  br i1 %11, label %12, label %15, !dbg !3445

; <label>:12:                                     ; preds = %9
  %13 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invalwindow, i64 0, i64 0), i32 5) #9, !dbg !3446
  %14 = tail call i32 @emsg(i8* %13) #9, !dbg !3448
  br label %15, !dbg !3449

; <label>:15:                                     ; preds = %9, %2, %12
  %16 = phi %struct.window_S* [ null, %12 ], [ %10, %9 ], [ %3, %2 ]
  ret %struct.window_S* %16, !dbg !3450
}

declare %struct.window_S* @find_win_by_nr_or_id(%struct.typval_T*) local_unnamed_addr #3

declare i32 @emsg(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @execute_redir_str(i8* nocapture readonly, i32) local_unnamed_addr #0 !dbg !3451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3455, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i32 %1, metadata !3456, metadata !DIExpression()), !dbg !3459
  %3 = icmp eq i32 %1, -1, !dbg !3460
  br i1 %3, label %4, label %7, !dbg !3462

; <label>:4:                                      ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #10, !dbg !3463
  %6 = trunc i64 %5 to i32, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %6, metadata !3457, metadata !DIExpression()), !dbg !3465
  br label %7, !dbg !3466

; <label>:7:                                      ; preds = %2, %4
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !3457, metadata !DIExpression()), !dbg !3465
  %9 = tail call i32 @ga_grow(%struct.growarray* nonnull @redir_execute_ga, i32 %8) #9, !dbg !3467
  %10 = icmp eq i32 %9, 1, !dbg !3469
  br i1 %10, label %11, label %19, !dbg !3470

; <label>:11:                                     ; preds = %7
  %12 = load i8*, i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 4), align 8, !dbg !3471, !tbaa !3473
  %13 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 0), align 8, !dbg !3471, !tbaa !3475
  %14 = sext i32 %13 to i64, !dbg !3471
  %15 = getelementptr inbounds i8, i8* %12, i64 %14, !dbg !3471
  %16 = sext i32 %8 to i64, !dbg !3471
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %15, i8* %0, i64 %16, i32 1, i1 false), !dbg !3471
  %17 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 0), align 8, !dbg !3476, !tbaa !3475
  %18 = add nsw i32 %17, %8, !dbg !3476
  store i32 %18, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 0), align 8, !dbg !3476, !tbaa !3475
  br label %19, !dbg !3477

; <label>:19:                                     ; preds = %11, %7
  ret void, !dbg !3478
}

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i32 @ga_grow(%struct.growarray*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define void @execute_common(%struct.typval_T*, %struct.typval_T* nocapture, i32) local_unnamed_addr #0 !dbg !3479 {
  %4 = alloca %struct.growarray, align 8
  %5 = alloca [65 x i8], align 16
  %6 = alloca %struct.listitem_S*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3483, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !3484, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %2, metadata !3485, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* null, metadata !3486, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.listvar_S* null, metadata !3487, metadata !DIExpression()), !dbg !3510
  %7 = load i32, i32* @msg_silent, align 4, !dbg !3511, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %7, metadata !3488, metadata !DIExpression()), !dbg !3512
  %8 = load i32, i32* @emsg_silent, align 4, !dbg !3513, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %8, metadata !3489, metadata !DIExpression()), !dbg !3514
  %9 = load i32, i32* @emsg_noredir, align 4, !dbg !3515, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %9, metadata !3490, metadata !DIExpression()), !dbg !3516
  %10 = load i32, i32* @redir_execute, align 4, !dbg !3517, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %10, metadata !3491, metadata !DIExpression()), !dbg !3518
  %11 = load i32, i32* @redir_off, align 4, !dbg !3519, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %11, metadata !3492, metadata !DIExpression()), !dbg !3520
  %12 = bitcast %struct.growarray* %4 to i8*, !dbg !3521
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12), !dbg !3521
  %13 = load i32, i32* @msg_col, align 4, !dbg !3522, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %13, metadata !3494, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 0, metadata !3495, metadata !DIExpression()), !dbg !3524
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !3525
  %15 = bitcast %union.anon* %14 to i8**, !dbg !3526
  store i8* null, i8** %15, align 8, !dbg !3527, !tbaa !2918
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !3528
  store i32 7, i32* %16, align 8, !dbg !3529, !tbaa !3221
  %17 = sext i32 %2 to i64, !dbg !3530
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 %17, !dbg !3530
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %18, i64 0, i32 0, !dbg !3532
  %20 = load i32, i32* %19, align 8, !dbg !3532, !tbaa !3221
  switch i32 %20, label %37 [
    i32 11, label %21
    i32 13, label %34
    i32 14, label %34
  ], !dbg !3533

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 %17, i32 2, !dbg !3534
  %23 = bitcast %union.anon* %22 to %struct.listvar_S**, !dbg !3536
  %24 = load %struct.listvar_S*, %struct.listvar_S** %23, align 8, !dbg !3536, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %24, metadata !3487, metadata !DIExpression()), !dbg !3510
  %25 = icmp eq %struct.listvar_S* %24, null, !dbg !3537
  br i1 %25, label %140, label %26, !dbg !3539

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %24, i64 0, i32 8, !dbg !3540
  %28 = load i32, i32* %27, align 4, !dbg !3540, !tbaa !3541
  %29 = icmp eq i32 %28, 0, !dbg !3543
  br i1 %29, label %140, label %30, !dbg !3544

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %24, i64 0, i32 7, !dbg !3545
  %32 = load i32, i32* %31, align 8, !dbg !3546, !tbaa !3547
  %33 = add nsw i32 %32, 1, !dbg !3546
  store i32 %33, i32* %31, align 8, !dbg !3546, !tbaa !3547
  br label %40, !dbg !3548

; <label>:34:                                     ; preds = %3, %3
  %35 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_inval_string, i64 0, i64 0), i32 5) #9, !dbg !3549
  %36 = tail call i32 @emsg(i8* %35) #9, !dbg !3552
  br label %140, !dbg !3553

; <label>:37:                                     ; preds = %3
  %38 = tail call i8* @tv_get_string_chk(%struct.typval_T* %18) #9, !dbg !3554
  call void @llvm.dbg.value(metadata i8* %38, metadata !3486, metadata !DIExpression()), !dbg !3509
  %39 = icmp eq i8* %38, null, !dbg !3556
  br i1 %39, label %140, label %40, !dbg !3558

; <label>:40:                                     ; preds = %37, %30
  %41 = phi %struct.listvar_S* [ %24, %30 ], [ null, %37 ]
  %42 = phi i8* [ null, %30 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i8* %42, metadata !3486, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.listvar_S* %41, metadata !3487, metadata !DIExpression()), !dbg !3510
  %43 = add nsw i32 %2, 1, !dbg !3559
  %44 = sext i32 %43 to i64, !dbg !3560
  %45 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 %44, !dbg !3560
  %46 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %45, i64 0, i32 0, !dbg !3561
  %47 = load i32, i32* %46, align 8, !dbg !3561, !tbaa !3221
  %48 = icmp eq i32 %47, 0, !dbg !3562
  br i1 %48, label %68, label %49, !dbg !3563

; <label>:49:                                     ; preds = %40
  %50 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0, !dbg !3564
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %50) #9, !dbg !3564
  call void @llvm.dbg.declare(metadata [65 x i8]* %5, metadata !3496, metadata !DIExpression()), !dbg !3565
  %51 = call i8* @tv_get_string_buf_chk(%struct.typval_T* %45, i8* nonnull %50) #9, !dbg !3566
  call void @llvm.dbg.value(metadata i8* %51, metadata !3502, metadata !DIExpression()), !dbg !3567
  %52 = icmp eq i8* %51, null, !dbg !3568
  br i1 %52, label %67, label %53, !dbg !3570

; <label>:53:                                     ; preds = %49
  %54 = load i8, i8* %51, align 1, !dbg !3571, !tbaa !2918
  %55 = icmp eq i8 %54, 0, !dbg !3573
  %56 = zext i1 %55 to i32, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %56, metadata !3495, metadata !DIExpression()), !dbg !3524
  %57 = call i32 @strncmp(i8* nonnull %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #10, !dbg !3575
  %58 = icmp eq i32 %57, 0, !dbg !3577
  br i1 %58, label %59, label %62, !dbg !3578

; <label>:59:                                     ; preds = %53
  %60 = load i32, i32* @msg_silent, align 4, !dbg !3579, !tbaa !2904
  %61 = add nsw i32 %60, 1, !dbg !3579
  store i32 %61, i32* @msg_silent, align 4, !dbg !3579, !tbaa !2904
  br label %62, !dbg !3579

; <label>:62:                                     ; preds = %59, %53
  %63 = call i32 @strcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !3580
  %64 = icmp eq i32 %63, 0, !dbg !3582
  br i1 %64, label %65, label %66, !dbg !3583

; <label>:65:                                     ; preds = %62
  store i32 1, i32* @emsg_silent, align 4, !dbg !3584, !tbaa !2904
  store i32 1, i32* @emsg_noredir, align 4, !dbg !3586, !tbaa !2904
  br label %66, !dbg !3587

; <label>:66:                                     ; preds = %65, %62
  call void @llvm.dbg.value(metadata i32 0, metadata !3495, metadata !DIExpression()), !dbg !3524
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %50) #9, !dbg !3588
  br label %71

; <label>:67:                                     ; preds = %49
  call void @llvm.dbg.value(metadata i32 0, metadata !3495, metadata !DIExpression()), !dbg !3524
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %50) #9, !dbg !3588
  br label %140

; <label>:68:                                     ; preds = %40
  %69 = load i32, i32* @msg_silent, align 4, !dbg !3589, !tbaa !2904
  %70 = add nsw i32 %69, 1, !dbg !3589
  store i32 %70, i32* @msg_silent, align 4, !dbg !3589, !tbaa !2904
  br label %71

; <label>:71:                                     ; preds = %66, %68
  %72 = phi i32 [ 0, %68 ], [ %56, %66 ]
  call void @llvm.dbg.value(metadata i32 %72, metadata !3495, metadata !DIExpression()), !dbg !3524
  %73 = load i32, i32* @redir_execute, align 4, !dbg !3590, !tbaa !2904
  %74 = icmp eq i32 %73, 0, !dbg !3590
  br i1 %74, label %76, label %75, !dbg !3592

; <label>:75:                                     ; preds = %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %12, i8* bitcast (%struct.growarray* @redir_execute_ga to i8*), i64 24, i32 8, i1 false), !dbg !3593, !tbaa.struct !3594
  br label %76, !dbg !3595

; <label>:76:                                     ; preds = %71, %75
  call void @ga_init2(%struct.growarray* nonnull @redir_execute_ga, i32 1, i32 500) #9, !dbg !3596
  store i32 1, i32* @redir_execute, align 4, !dbg !3597, !tbaa !2904
  store i32 0, i32* @redir_off, align 4, !dbg !3598, !tbaa !2904
  %77 = icmp ne i32 %72, 0, !dbg !3599
  br i1 %77, label %79, label %78, !dbg !3601

; <label>:78:                                     ; preds = %76
  store i32 0, i32* @msg_col, align 4, !dbg !3602, !tbaa !2904
  br label %79, !dbg !3603

; <label>:79:                                     ; preds = %78, %76
  %80 = icmp eq i8* %42, null, !dbg !3604
  br i1 %80, label %83, label %81, !dbg !3605

; <label>:81:                                     ; preds = %79
  %82 = call i32 @do_cmdline_cmd(i8* nonnull %42) #9, !dbg !3606
  br label %124, !dbg !3606

; <label>:83:                                     ; preds = %79
  %84 = bitcast %struct.listitem_S** %6 to i8*, !dbg !3607
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #9, !dbg !3607
  %85 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 0, !dbg !3608
  %86 = load %struct.listitem_S*, %struct.listitem_S** %85, align 8, !dbg !3608, !tbaa !3610
  %87 = icmp eq %struct.listitem_S* %86, @range_list_item, !dbg !3608
  %88 = ptrtoint %struct.listitem_S* %86 to i64, !dbg !3611
  br i1 %87, label %89, label %117, !dbg !3611

; <label>:89:                                     ; preds = %83
  call void @llvm.dbg.value(metadata %struct.listvar_S* %41, metadata !3612, metadata !DIExpression()) #9, !dbg !3621
  %90 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 2, !dbg !3623
  %91 = getelementptr inbounds %union.anon.0, %union.anon.0* %90, i64 0, i32 0, i32 0, !dbg !3624
  %92 = load i64, i64* %91, align 8, !dbg !3624, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %92, metadata !3617, metadata !DIExpression()) #9, !dbg !3625
  %93 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 2, i32 0, i32 1, !dbg !3626
  %94 = load i64, i64* %93, align 8, !dbg !3626, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %94, metadata !3618, metadata !DIExpression()) #9, !dbg !3627
  %95 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 2, i32 0, i32 2, !dbg !3628
  %96 = load i32, i32* %95, align 8, !dbg !3628, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %96, metadata !3619, metadata !DIExpression()) #9, !dbg !3629
  store %struct.listitem_S* null, %struct.listitem_S** %85, align 8, !dbg !3630, !tbaa !3610
  %97 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 8, !dbg !3631
  store i32 0, i32* %97, align 4, !dbg !3632, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %92, metadata !3620, metadata !DIExpression()) #9, !dbg !3633
  %98 = icmp sgt i32 %96, 0, !dbg !3634
  %99 = icmp sle i64 %92, %94, !dbg !3637
  %100 = icmp sge i64 %92, %94, !dbg !3638
  %101 = select i1 %98, i1 %99, i1 %100, !dbg !3639
  %102 = bitcast %union.anon.0* %90 to i8*, !dbg !3640
  call void @llvm.memset.p0i8.i64(i8* nonnull %102, i8 0, i64 16, i32 8, i1 false) #9, !dbg !3641
  br i1 %101, label %103, label %117, !dbg !3640

; <label>:103:                                    ; preds = %89
  %104 = sext i32 %96 to i64
  br label %109, !dbg !3640

; <label>:105:                                    ; preds = %109
  call void @llvm.dbg.value(metadata i64 %113, metadata !3620, metadata !DIExpression()) #9, !dbg !3633
  %106 = icmp sle i64 %113, %94, !dbg !3637
  %107 = icmp sge i64 %113, %94, !dbg !3638
  %108 = select i1 %98, i1 %106, i1 %107, !dbg !3639
  br i1 %108, label %109, label %114, !dbg !3640, !llvm.loop !3642

; <label>:109:                                    ; preds = %105, %103
  %110 = phi i64 [ %92, %103 ], [ %113, %105 ]
  call void @llvm.dbg.value(metadata i64 %110, metadata !3620, metadata !DIExpression()) #9, !dbg !3633
  %111 = call i32 @list_append_number(%struct.listvar_S* %41, i64 %110) #9, !dbg !3645
  %112 = icmp eq i32 %111, 0, !dbg !3647
  %113 = add nsw i64 %110, %104, !dbg !3648
  call void @llvm.dbg.value(metadata i64 %113, metadata !3620, metadata !DIExpression()) #9, !dbg !3633
  br i1 %112, label %114, label %105, !dbg !3649

; <label>:114:                                    ; preds = %105, %109
  %115 = bitcast %struct.listvar_S* %41 to i64*
  %116 = load i64, i64* %115, align 8, !dbg !3650, !tbaa !3610
  br label %117, !dbg !3650

; <label>:117:                                    ; preds = %114, %89, %83
  %118 = phi i64 [ %116, %114 ], [ 0, %89 ], [ %88, %83 ], !dbg !3650
  call void @llvm.dbg.value(metadata %struct.listitem_S** %85, metadata !3503, metadata !DIExpression(DW_OP_deref)), !dbg !3651
  %119 = bitcast %struct.listitem_S** %6 to i64*, !dbg !3652
  store i64 %118, i64* %119, align 8, !dbg !3652, !tbaa !2783
  %120 = call i32 @do_cmdline(i8* null, i8* (i32, i8*, i32, i32)* nonnull @get_list_line, i8* nonnull %84, i32 15) #9, !dbg !3653
  %121 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %41, i64 0, i32 7, !dbg !3654
  %122 = load i32, i32* %121, align 8, !dbg !3655, !tbaa !3547
  %123 = add nsw i32 %122, -1, !dbg !3655
  store i32 %123, i32* %121, align 8, !dbg !3655, !tbaa !3547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #9, !dbg !3656
  br label %124

; <label>:124:                                    ; preds = %117, %81
  %125 = call i32 @ga_grow(%struct.growarray* nonnull @redir_execute_ga, i32 1) #9, !dbg !3657
  %126 = icmp eq i32 %125, 1, !dbg !3659
  br i1 %126, label %127, label %133, !dbg !3660

; <label>:127:                                    ; preds = %124
  %128 = load i8*, i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 4), align 8, !dbg !3661, !tbaa !3473
  %129 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 0), align 8, !dbg !3663, !tbaa !3475
  %130 = sext i32 %129 to i64, !dbg !3664
  %131 = getelementptr inbounds i8, i8* %128, i64 %130, !dbg !3664
  store i8 0, i8* %131, align 1, !dbg !3665, !tbaa !2918
  %132 = load i8*, i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @redir_execute_ga, i64 0, i32 4), align 8, !dbg !3666, !tbaa !3473
  br label %134, !dbg !3667

; <label>:133:                                    ; preds = %124
  call void @ga_clear(%struct.growarray* nonnull @redir_execute_ga) #9, !dbg !3668
  br label %134

; <label>:134:                                    ; preds = %133, %127
  %135 = phi i8* [ null, %133 ], [ %132, %127 ]
  store i8* %135, i8** %15, align 8, !tbaa !2918
  store i32 %7, i32* @msg_silent, align 4, !dbg !3670, !tbaa !2904
  store i32 %8, i32* @emsg_silent, align 4, !dbg !3671, !tbaa !2904
  store i32 %9, i32* @emsg_noredir, align 4, !dbg !3672, !tbaa !2904
  store i32 %10, i32* @redir_execute, align 4, !dbg !3673, !tbaa !2904
  %136 = icmp eq i32 %10, 0, !dbg !3674
  br i1 %136, label %138, label %137, !dbg !3676

; <label>:137:                                    ; preds = %134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.growarray* @redir_execute_ga to i8*), i8* nonnull %12, i64 24, i32 8, i1 false), !dbg !3677, !tbaa.struct !3594
  br label %138, !dbg !3678

; <label>:138:                                    ; preds = %134, %137
  store i32 %11, i32* @redir_off, align 4, !dbg !3679, !tbaa !2904
  %139 = select i1 %77, i32 0, i32 %13, !dbg !3680
  store i32 %139, i32* @msg_col, align 4, !tbaa !2904
  br label %140, !dbg !3682

; <label>:140:                                    ; preds = %67, %37, %21, %26, %138, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12), !dbg !3682
  ret void, !dbg !3682
}

declare i8* @tv_get_string_chk(%struct.typval_T*) local_unnamed_addr #3

declare i8* @tv_get_string_buf_chk(%struct.typval_T*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare void @ga_init2(%struct.growarray*, i32, i32) local_unnamed_addr #3

declare i32 @do_cmdline_cmd(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @range_list_materialize(%struct.listvar_S*) local_unnamed_addr #0 !dbg !3613 {
  call void @llvm.dbg.value(metadata %struct.listvar_S* %0, metadata !3612, metadata !DIExpression()), !dbg !3683
  %2 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %0, i64 0, i32 2, !dbg !3684
  %3 = getelementptr inbounds %union.anon.0, %union.anon.0* %2, i64 0, i32 0, i32 0, !dbg !3685
  %4 = load i64, i64* %3, align 8, !dbg !3685, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %4, metadata !3617, metadata !DIExpression()), !dbg !3686
  %5 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %0, i64 0, i32 2, i32 0, i32 1, !dbg !3687
  %6 = load i64, i64* %5, align 8, !dbg !3687, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %6, metadata !3618, metadata !DIExpression()), !dbg !3688
  %7 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %0, i64 0, i32 2, i32 0, i32 2, !dbg !3689
  %8 = load i32, i32* %7, align 8, !dbg !3689, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %8, metadata !3619, metadata !DIExpression()), !dbg !3690
  %9 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %0, i64 0, i32 0, !dbg !3691
  store %struct.listitem_S* null, %struct.listitem_S** %9, align 8, !dbg !3692, !tbaa !3610
  %10 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %0, i64 0, i32 8, !dbg !3693
  store i32 0, i32* %10, align 4, !dbg !3694, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %4, metadata !3620, metadata !DIExpression()), !dbg !3695
  %11 = icmp sgt i32 %8, 0, !dbg !3696
  %12 = icmp sle i64 %4, %6, !dbg !3697
  %13 = icmp sge i64 %4, %6, !dbg !3698
  %14 = select i1 %11, i1 %12, i1 %13, !dbg !3699
  %15 = bitcast %union.anon.0* %2 to i8*, !dbg !3643
  call void @llvm.memset.p0i8.i64(i8* nonnull %15, i8 0, i64 16, i32 8, i1 false), !dbg !3700
  br i1 %14, label %16, label %27, !dbg !3643

; <label>:16:                                     ; preds = %1
  %17 = sext i32 %8 to i64
  br label %22, !dbg !3643

; <label>:18:                                     ; preds = %22
  call void @llvm.dbg.value(metadata i64 %26, metadata !3620, metadata !DIExpression()), !dbg !3695
  %19 = icmp sle i64 %26, %6, !dbg !3697
  %20 = icmp sge i64 %26, %6, !dbg !3698
  %21 = select i1 %11, i1 %19, i1 %20, !dbg !3699
  br i1 %21, label %22, label %27, !dbg !3643, !llvm.loop !3642

; <label>:22:                                     ; preds = %16, %18
  %23 = phi i64 [ %4, %16 ], [ %26, %18 ]
  call void @llvm.dbg.value(metadata i64 %23, metadata !3620, metadata !DIExpression()), !dbg !3695
  %24 = tail call i32 @list_append_number(%struct.listvar_S* %0, i64 %23) #9, !dbg !3701
  %25 = icmp eq i32 %24, 0, !dbg !3702
  %26 = add nsw i64 %23, %17, !dbg !3703
  call void @llvm.dbg.value(metadata i64 %26, metadata !3620, metadata !DIExpression()), !dbg !3695
  br i1 %25, label %27, label %18, !dbg !3704

; <label>:27:                                     ; preds = %18, %22, %1
  ret void, !dbg !3705
}

declare i32 @do_cmdline(i8*, i8* (i32, i8*, i32, i32)*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal i8* @get_list_line(i32, i8* nocapture, i32, i32) #0 !dbg !3706 {
  %5 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %0, metadata !3711, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %1, metadata !3712, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i32 %2, metadata !3713, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.value(metadata i32 %3, metadata !3714, metadata !DIExpression()), !dbg !3722
  %6 = bitcast i8* %1 to %struct.listitem_S**, !dbg !3723
  call void @llvm.dbg.value(metadata %struct.listitem_S** %6, metadata !3715, metadata !DIExpression()), !dbg !3724
  %7 = load %struct.listitem_S*, %struct.listitem_S** %6, align 8, !dbg !3725, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.listitem_S* %7, metadata !3716, metadata !DIExpression()), !dbg !3726
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0, !dbg !3727
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %8) #9, !dbg !3727
  call void @llvm.dbg.declare(metadata [65 x i8]* %5, metadata !3717, metadata !DIExpression()), !dbg !3728
  %9 = icmp eq %struct.listitem_S* %7, null, !dbg !3729
  br i1 %9, label %19, label %10, !dbg !3731

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %7, i64 0, i32 2, !dbg !3732
  %12 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %11, i8* nonnull %8) #9, !dbg !3733
  call void @llvm.dbg.value(metadata i8* %12, metadata !3718, metadata !DIExpression()), !dbg !3734
  %13 = bitcast %struct.listitem_S* %7 to i64*, !dbg !3735
  %14 = load i64, i64* %13, align 8, !dbg !3735, !tbaa !3736
  %15 = bitcast i8* %1 to i64*, !dbg !3738
  store i64 %14, i64* %15, align 8, !dbg !3738, !tbaa !2783
  %16 = icmp eq i8* %12, null, !dbg !3739
  br i1 %16, label %19, label %17, !dbg !3740

; <label>:17:                                     ; preds = %10
  %18 = call i8* @vim_strsave(i8* nonnull %12) #9, !dbg !3741
  br label %19, !dbg !3740

; <label>:19:                                     ; preds = %17, %10, %4
  %20 = phi i8* [ null, %4 ], [ %18, %17 ], [ null, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %8) #9, !dbg !3742
  ret i8* %20, !dbg !3742
}

declare void @ga_clear(%struct.growarray*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @f_has(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !2537 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !2541, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !2542, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 0, metadata !2545, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.value(metadata i32 0, metadata !2546, metadata !DIExpression()), !dbg !3746
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !3747
  call void @llvm.dbg.value(metadata i8* %3, metadata !2544, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i32 0, metadata !2543, metadata !DIExpression()), !dbg !3749
  br label %6, !dbg !3750

; <label>:4:                                      ; preds = %6
  %5 = icmp eq i64 %12, 183, !dbg !3752
  br i1 %5, label %17, label %6, !dbg !3750, !llvm.loop !3754

; <label>:6:                                      ; preds = %2, %4
  %7 = phi i64 [ 0, %2 ], [ %12, %4 ]
  call void @llvm.dbg.value(metadata i64 %7, metadata !2543, metadata !DIExpression()), !dbg !3749
  %8 = getelementptr inbounds [184 x %struct.has_item_T], [184 x %struct.has_item_T]* @f_has.has_list, i64 0, i64 %7, i32 0, !dbg !3756
  %9 = load i8*, i8** %8, align 16, !dbg !3756, !tbaa !3757
  %10 = tail call i32 @strcasecmp(i8* %3, i8* nonnull %9) #10, !dbg !3760
  %11 = icmp eq i32 %10, 0, !dbg !3762
  %12 = add nuw nsw i64 %7, 1, !dbg !3763
  br i1 %11, label %13, label %4, !dbg !3764

; <label>:13:                                     ; preds = %6
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %14 = getelementptr inbounds [184 x %struct.has_item_T], [184 x %struct.has_item_T]* @f_has.has_list, i64 0, i64 %7, i32 1, !dbg !3765
  %15 = load i16, i16* %14, align 8, !dbg !3765, !tbaa !3767
  %16 = sext i16 %15 to i32, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %16, metadata !2546, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.value(metadata i32 %16, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3769

; <label>:17:                                     ; preds = %4
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.value(metadata i32 %16, metadata !2546, metadata !DIExpression()), !dbg !3746
  %18 = tail call i32 @strncasecmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.189, i64 0, i64 0), i64 5) #10, !dbg !3770
  %19 = icmp eq i32 %18, 0, !dbg !3771
  br i1 %19, label %20, label %67, !dbg !3772

; <label>:20:                                     ; preds = %17
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %21 = getelementptr inbounds i8, i8* %3, i64 5, !dbg !3773
  %22 = load i8, i8* %21, align 1, !dbg !3773, !tbaa !2918
  %23 = icmp eq i8 %22, 45, !dbg !3774
  br i1 %23, label %24, label %63, !dbg !3775

; <label>:24:                                     ; preds = %20
  %25 = tail call i64 @strlen(i8* nonnull %3) #10, !dbg !3776
  %26 = icmp ugt i64 %25, 10, !dbg !3777
  br i1 %26, label %27, label %63, !dbg !3778

; <label>:27:                                     ; preds = %24
  %28 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !3779
  %29 = load i8, i8* %28, align 1, !dbg !3779, !tbaa !2918
  %30 = zext i8 %29 to i32, !dbg !3779
  %31 = tail call i32 @vim_isdigit(i32 %30) #9, !dbg !3780
  %32 = icmp eq i32 %31, 0, !dbg !3780
  br i1 %32, label %63, label %33, !dbg !3781

; <label>:33:                                     ; preds = %27
  %34 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !3782
  %35 = load i8, i8* %34, align 1, !dbg !3782, !tbaa !2918
  %36 = zext i8 %35 to i32, !dbg !3782
  %37 = tail call i32 @vim_isdigit(i32 %36) #9, !dbg !3783
  %38 = icmp eq i32 %37, 0, !dbg !3783
  br i1 %38, label %63, label %39, !dbg !3784

; <label>:39:                                     ; preds = %33
  %40 = getelementptr inbounds i8, i8* %3, i64 10, !dbg !3785
  %41 = load i8, i8* %40, align 1, !dbg !3785, !tbaa !2918
  %42 = zext i8 %41 to i32, !dbg !3785
  %43 = tail call i32 @vim_isdigit(i32 %42) #9, !dbg !3786
  %44 = icmp eq i32 %43, 0, !dbg !3786
  br i1 %44, label %63, label %45, !dbg !3787

; <label>:45:                                     ; preds = %39
  call void @llvm.dbg.value(metadata i8* %28, metadata !3788, metadata !DIExpression()) #9, !dbg !3796
  %46 = tail call i64 @strtol(i8* nocapture nonnull %28, i8** null, i32 10) #9, !dbg !3798
  %47 = trunc i64 %46 to i32, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %47, metadata !2547, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.value(metadata i8* %34, metadata !3788, metadata !DIExpression()) #9, !dbg !3801
  %48 = tail call i64 @strtol(i8* nocapture nonnull %34, i8** null, i32 10) #9, !dbg !3803
  %49 = trunc i64 %48 to i32, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %49, metadata !2554, metadata !DIExpression()), !dbg !3805
  %50 = icmp slt i32 %47, 8, !dbg !3806
  br i1 %50, label %129, label %51, !dbg !3807

; <label>:51:                                     ; preds = %45
  %52 = icmp eq i32 %47, 8, !dbg !3808
  br i1 %52, label %53, label %129, !dbg !3809

; <label>:53:                                     ; preds = %51
  %54 = icmp slt i32 %49, 2, !dbg !3810
  br i1 %54, label %129, label %55, !dbg !3811

; <label>:55:                                     ; preds = %53
  %56 = icmp eq i32 %49, 2, !dbg !3812
  br i1 %56, label %57, label %129, !dbg !3813

; <label>:57:                                     ; preds = %55
  call void @llvm.dbg.value(metadata i8* %40, metadata !3788, metadata !DIExpression()) #9, !dbg !3814
  %58 = tail call i64 @strtol(i8* nocapture nonnull %40, i8** null, i32 10) #9, !dbg !3816
  %59 = trunc i64 %58 to i32, !dbg !3817
  %60 = tail call i32 @has_patch(i32 %59) #9, !dbg !3818
  %61 = icmp ne i32 %60, 0, !dbg !3813
  %62 = zext i1 %61 to i32
  br label %129

; <label>:63:                                     ; preds = %39, %33, %27, %24, %20
  call void @llvm.dbg.value(metadata i8* %21, metadata !3788, metadata !DIExpression()) #9, !dbg !3819
  %64 = tail call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #9, !dbg !3821
  %65 = trunc i64 %64 to i32, !dbg !3822
  %66 = tail call i32 @has_patch(i32 %65) #9, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %66, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129

; <label>:67:                                     ; preds = %17
  %68 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i64 0, i64 0)) #10, !dbg !3824
  %69 = icmp eq i32 %68, 0, !dbg !3826
  br i1 %69, label %70, label %74, !dbg !3827

; <label>:70:                                     ; preds = %67
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %71 = load i32, i32* @starting, align 4, !dbg !3828, !tbaa !2904
  %72 = icmp ne i32 %71, 0, !dbg !3830
  %73 = zext i1 %72 to i32, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %73, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3831

; <label>:74:                                     ; preds = %67
  %75 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191, i64 0, i64 0)) #10, !dbg !3832
  %76 = icmp eq i32 %75, 0, !dbg !3834
  br i1 %76, label %77, label %79, !dbg !3835

; <label>:77:                                     ; preds = %74
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %78 = tail call i32 @mch_input_isatty() #9, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %78, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3838

; <label>:79:                                     ; preds = %74
  %80 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.192, i64 0, i64 0)) #10, !dbg !3839
  %81 = icmp eq i32 %80, 0, !dbg !3841
  br i1 %81, label %82, label %84, !dbg !3842

; <label>:82:                                     ; preds = %79
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %83 = load i32, i32* @stdout_isatty, align 4, !dbg !3843, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %83, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3845

; <label>:84:                                     ; preds = %79
  %85 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.193, i64 0, i64 0)) #10, !dbg !3846
  %86 = icmp eq i32 %85, 0, !dbg !3848
  br i1 %86, label %87, label %89, !dbg !3849

; <label>:87:                                     ; preds = %84
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %88 = load i32, i32* @has_mbyte, align 4, !dbg !3850, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %88, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3852

; <label>:89:                                     ; preds = %84
  %90 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i64 0, i64 0)) #10, !dbg !3853
  %91 = icmp eq i32 %90, 0, !dbg !3855
  br i1 %91, label %92, label %98, !dbg !3856

; <label>:92:                                     ; preds = %89
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %93 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !3857, !tbaa !3859
  %94 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !3862
  %95 = or i32 %94, %93, !dbg !3863
  %96 = icmp ne i32 %95, 0, !dbg !3863
  %97 = zext i1 %96 to i32, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %97, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3864

; <label>:98:                                     ; preds = %89
  %99 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i64 0, i64 0)) #10, !dbg !3865
  %100 = icmp eq i32 %99, 0, !dbg !3867
  br i1 %100, label %101, label %103, !dbg !3868

; <label>:101:                                    ; preds = %98
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %102 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !3869, !tbaa !3859
  call void @llvm.dbg.value(metadata i32 %102, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3871

; <label>:103:                                    ; preds = %98
  %104 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.196, i64 0, i64 0)) #10, !dbg !3872
  %105 = icmp eq i32 %104, 0, !dbg !3874
  br i1 %105, label %106, label %109, !dbg !3875

; <label>:106:                                    ; preds = %103
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %107 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !3876, !tbaa !2783
  %108 = tail call i32 @syntax_present(%struct.window_S* %107) #9, !dbg !3878
  call void @llvm.dbg.value(metadata i32 %108, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3879

; <label>:109:                                    ; preds = %103
  %110 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i64 0, i64 0)) #10, !dbg !3880
  %111 = icmp eq i32 %110, 0, !dbg !3882
  br i1 %111, label %129, label %112, !dbg !3883

; <label>:112:                                    ; preds = %109
  %113 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.198, i64 0, i64 0)) #10, !dbg !3884
  %114 = icmp eq i32 %113, 0, !dbg !3886
  br i1 %114, label %115, label %117, !dbg !3887

; <label>:115:                                    ; preds = %112
  call void @llvm.dbg.value(metadata i32 1, metadata !2545, metadata !DIExpression()), !dbg !3745
  %116 = tail call i32 @netbeans_active() #9, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %116, metadata !2546, metadata !DIExpression()), !dbg !3746
  br label %129, !dbg !3890

; <label>:117:                                    ; preds = %112
  %118 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.199, i64 0, i64 0)) #10, !dbg !3891
  %119 = icmp eq i32 %118, 0, !dbg !3893
  br i1 %119, label %129, label %120, !dbg !3894

; <label>:120:                                    ; preds = %117
  %121 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i64 0, i64 0)) #10, !dbg !3895
  %122 = icmp eq i32 %121, 0, !dbg !3897
  br i1 %122, label %129, label %123, !dbg !3898

; <label>:123:                                    ; preds = %120
  %124 = tail call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.201, i64 0, i64 0)) #10, !dbg !3899
  %125 = icmp eq i32 %124, 0, !dbg !3901
  %126 = load i32, i32* getelementptr inbounds (%struct.Clipboard_T, %struct.Clipboard_T* @clip_star, i64 0, i32 0), align 8, !dbg !3902
  %127 = select i1 %125, i32 %126, i32 0, !dbg !3904
  %128 = zext i1 %125 to i64, !dbg !3904
  br label %129, !dbg !3904

; <label>:129:                                    ; preds = %13, %123, %120, %117, %109, %45, %53, %57, %55, %51, %63, %77, %87, %101, %115, %106, %92, %82, %70
  %130 = phi i32 [ %66, %63 ], [ %73, %70 ], [ %78, %77 ], [ %83, %82 ], [ %88, %87 ], [ %97, %92 ], [ %102, %101 ], [ %108, %106 ], [ %116, %115 ], [ %16, %13 ], [ 1, %45 ], [ 0, %51 ], [ 1, %53 ], [ 0, %55 ], [ %62, %57 ], [ 0, %109 ], [ 0, %117 ], [ 0, %120 ], [ %127, %123 ]
  %131 = phi i64 [ 1, %63 ], [ 1, %70 ], [ 1, %77 ], [ 1, %82 ], [ 1, %87 ], [ 1, %92 ], [ 1, %101 ], [ 1, %106 ], [ 1, %115 ], [ 1, %13 ], [ 1, %45 ], [ 1, %51 ], [ 1, %53 ], [ 1, %55 ], [ 1, %57 ], [ 1, %109 ], [ 1, %117 ], [ 1, %120 ], [ %128, %123 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !2546, metadata !DIExpression()), !dbg !3746
  %132 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !3905
  %133 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %132, i64 0, i32 0, !dbg !3907
  %134 = load i32, i32* %133, align 8, !dbg !3907, !tbaa !3221
  %135 = icmp eq i32 %134, 0, !dbg !3908
  br i1 %135, label %139, label %136, !dbg !3909

; <label>:136:                                    ; preds = %129
  %137 = tail call i64 @tv_get_bool(%struct.typval_T* nonnull %132) #9, !dbg !3910
  %138 = icmp eq i64 %137, 0, !dbg !3910
  br i1 %138, label %139, label %141, !dbg !3911

; <label>:139:                                    ; preds = %136, %129
  %140 = sext i32 %130 to i64, !dbg !3912
  br label %141

; <label>:141:                                    ; preds = %136, %139
  %142 = phi i64 [ %140, %139 ], [ %131, %136 ]
  %143 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %142, i64* %143, align 8, !tbaa !2918
  ret void, !dbg !3913
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare i32 @vim_isdigit(i32) local_unnamed_addr #3

declare i32 @has_patch(i32) local_unnamed_addr #3

declare i32 @mch_input_isatty() local_unnamed_addr #3

declare i32 @syntax_present(%struct.window_S*) local_unnamed_addr #3

declare i32 @netbeans_active() local_unnamed_addr #3

declare i64 @tv_get_bool(%struct.typval_T*) local_unnamed_addr #3

; Function Attrs: nounwind readonly uwtable
define i32 @dynamic_feature(i8* readonly) local_unnamed_addr #6 !dbg !3914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3916, metadata !DIExpression()), !dbg !3917
  %2 = icmp eq i8* %0, null, !dbg !3918
  br i1 %2, label %28, label %3, !dbg !3919

; <label>:3:                                      ; preds = %1
  %4 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i64 0, i64 0)) #10, !dbg !3920
  %5 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !3921
  %6 = or i32 %5, %4, !dbg !3922
  %7 = icmp eq i32 %6, 0, !dbg !3922
  br i1 %7, label %28, label %8, !dbg !3922

; <label>:8:                                      ; preds = %3
  %9 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i64 0, i64 0)) #10, !dbg !3923
  %10 = or i32 %9, %5, !dbg !3924
  %11 = icmp eq i32 %10, 0, !dbg !3924
  br i1 %11, label %28, label %12, !dbg !3924

; <label>:12:                                     ; preds = %8
  %13 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.198, i64 0, i64 0)) #10, !dbg !3925
  %14 = icmp eq i32 %13, 0, !dbg !3926
  br i1 %14, label %28, label %15, !dbg !3927

; <label>:15:                                     ; preds = %12
  %16 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.196, i64 0, i64 0)) #10, !dbg !3928
  %17 = icmp eq i32 %16, 0, !dbg !3929
  br i1 %17, label %28, label %18, !dbg !3930

; <label>:18:                                     ; preds = %15
  %19 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i64 0, i64 0)) #10, !dbg !3931
  %20 = icmp eq i32 %19, 0, !dbg !3932
  %21 = load i32, i32* @starting, align 4, !dbg !3933
  %22 = icmp ne i32 %21, 0, !dbg !3934
  %23 = and i1 %20, %22, !dbg !3935
  br i1 %23, label %28, label %24, !dbg !3935

; <label>:24:                                     ; preds = %18
  %25 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.193, i64 0, i64 0)) #10, !dbg !3936
  %26 = icmp eq i32 %25, 0, !dbg !3937
  %27 = zext i1 %26 to i32, !dbg !3938
  br label %28, !dbg !3938

; <label>:28:                                     ; preds = %8, %3, %18, %24, %15, %12, %1
  %29 = phi i32 [ 1, %15 ], [ 1, %12 ], [ 1, %1 ], [ %27, %24 ], [ 1, %3 ], [ 1, %8 ], [ 1, %18 ]
  ret i32 %29, !dbg !3939
}

declare i32 @list_append_number(%struct.listvar_S*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone uwtable
define double @vim_round(double) local_unnamed_addr #7 !dbg !3940 {
  call void @llvm.dbg.value(metadata double %0, metadata !3944, metadata !DIExpression()), !dbg !3945
  %2 = fcmp ogt double %0, 0.000000e+00, !dbg !3946
  %3 = fadd double %0, 5.000000e-01, !dbg !3947
  %4 = tail call double @llvm.floor.f64(double %3), !dbg !3948
  %5 = fadd double %0, -5.000000e-01, !dbg !3949
  %6 = tail call double @llvm.ceil.f64(double %5), !dbg !3950
  %7 = select i1 %2, double %4, double %6, !dbg !3951
  ret double %7, !dbg !3952
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind uwtable
define i64 @do_searchpair(i8*, i8*, i8*, i32, %struct.typval_T*, i32, %struct.pos_T*, i64, i64) local_unnamed_addr #0 !dbg !3953 {
  %10 = alloca %struct.pos_T, align 8
  %11 = alloca %struct.pos_T, align 8
  %12 = alloca %struct.pos_T, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.timeval, align 8
  %15 = alloca %struct.searchit_arg_T, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !3958, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i8* %1, metadata !3959, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i8* %2, metadata !3960, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 %3, metadata !3961, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.value(metadata %struct.typval_T* %4, metadata !3962, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %5, metadata !3963, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata %struct.pos_T* %6, metadata !3964, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i64 %7, metadata !3965, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i64 %8, metadata !3966, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i8* null, metadata !3969, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i8* null, metadata !3970, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i64 0, metadata !3971, metadata !DIExpression()), !dbg !4006
  %16 = bitcast %struct.pos_T* %10 to i8*, !dbg !4007
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9, !dbg !4007
  %17 = bitcast %struct.pos_T* %11 to i8*, !dbg !4008
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17), !dbg !4008
  %18 = bitcast %struct.pos_T* %12 to i8*, !dbg !4009
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18), !dbg !4009
  call void @llvm.dbg.value(metadata i32 1, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 0, metadata !3980, metadata !DIExpression()), !dbg !4011
  %19 = bitcast i32* %13 to i8*, !dbg !4012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9, !dbg !4012
  call void @llvm.dbg.value(metadata i32 1024, metadata !3982, metadata !DIExpression()), !dbg !4013
  %20 = bitcast %struct.timeval* %14 to i8*, !dbg !4014
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9, !dbg !4014
  %21 = load i8*, i8** @p_cpo, align 8, !dbg !4015, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %21, metadata !3967, metadata !DIExpression()), !dbg !4016
  %22 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !4017, !tbaa !2783
  store i64 %22, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !4018, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.timeval* %14, metadata !3983, metadata !DIExpression()), !dbg !4019
  call void @profile_setlimit(i64 %8, %struct.timeval* nonnull %14) #9, !dbg !4020
  %23 = call i64 @strlen(i8* %0) #10, !dbg !4021
  %24 = call i64 @strlen(i8* %2) #10, !dbg !4022
  %25 = add i64 %23, 17, !dbg !4023
  %26 = add i64 %25, %24, !dbg !4024
  %27 = call i8* @alloc(i64 %26) #9, !dbg !4025
  call void @llvm.dbg.value(metadata i8* %27, metadata !3969, metadata !DIExpression()), !dbg !4004
  %28 = call i64 @strlen(i8* %0) #10, !dbg !4026
  %29 = call i64 @strlen(i8* %1) #10, !dbg !4027
  %30 = call i64 @strlen(i8* %2) #10, !dbg !4028
  %31 = add i64 %28, 25, !dbg !4029
  %32 = add i64 %31, %29, !dbg !4030
  %33 = add i64 %32, %30, !dbg !4031
  %34 = call i8* @alloc(i64 %33) #9, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %34, metadata !3970, metadata !DIExpression()), !dbg !4005
  %35 = icmp eq i8* %27, null, !dbg !4033
  %36 = icmp eq i8* %34, null, !dbg !4035
  %37 = or i1 %35, %36, !dbg !4036
  br i1 %37, label %201, label %38, !dbg !4036

; <label>:38:                                     ; preds = %9
  %39 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %27, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.202, i64 0, i64 0), i8* %0, i8* %2) #9, !dbg !4037
  %40 = load i8, i8* %1, align 1, !dbg !4038, !tbaa !2918
  %41 = icmp eq i8 %40, 0, !dbg !4040
  br i1 %41, label %42, label %44, !dbg !4041

; <label>:42:                                     ; preds = %38
  %43 = call i8* @strcpy(i8* nonnull %34, i8* nonnull %27) #9, !dbg !4042
  br label %46, !dbg !4042

; <label>:44:                                     ; preds = %38
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %34, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.203, i64 0, i64 0), i8* %0, i8* %2, i8* nonnull %1) #9, !dbg !4043
  br label %46

; <label>:46:                                     ; preds = %44, %42
  %47 = shl i32 %5, 4, !dbg !4044
  %48 = and i32 %47, 256, !dbg !4044
  %49 = or i32 %48, 1024, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %49, metadata !3982, metadata !DIExpression()), !dbg !4013
  %50 = icmp eq %struct.typval_T* %4, null, !dbg !4045
  br i1 %50, label %54, label %51, !dbg !4047

; <label>:51:                                     ; preds = %46
  %52 = call i32 @eval_expr_valid_arg(%struct.typval_T* nonnull %4) #9, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %52, metadata !3980, metadata !DIExpression()), !dbg !4011
  %53 = icmp eq i32 %52, 0, !dbg !4049
  br label %54, !dbg !4049

; <label>:54:                                     ; preds = %46, %51
  %55 = phi i1 [ %53, %51 ], [ true, %46 ]
  %56 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4050, !tbaa !2783
  %57 = getelementptr inbounds %struct.window_S, %struct.window_S* %56, i64 0, i32 7, !dbg !4051
  %58 = bitcast %struct.pos_T* %57 to i8*, !dbg !4051
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %17, i8* nonnull %58, i64 16, i32 8, i1 false), !dbg !4051, !tbaa.struct !4052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %16, i8* nonnull %58, i64 16, i32 8, i1 false), !dbg !4054, !tbaa.struct !4052
  call void @llvm.dbg.value(metadata i64 0, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 0, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 0, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i64 0, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 0, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 0, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i8* %34, metadata !3968, metadata !DIExpression()), !dbg !4057
  %59 = bitcast %struct.searchit_arg_T* %15 to i8*
  %60 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %15, i64 0, i32 0
  %61 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %15, i64 0, i32 1
  %62 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %10, i64 0, i32 0
  %63 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %10, i64 0, i32 1
  %64 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %10, i64 0, i32 2
  %65 = icmp eq i32 %3, -1
  %66 = icmp eq i32 %3, 1
  %67 = and i32 %5, 4
  %68 = icmp eq i32 %67, 0
  %69 = and i32 %5, 8
  %70 = icmp eq i32 %69, 0
  %71 = and i32 %5, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %15, i64 0, i32 2
  %74 = bitcast i32* %73 to i64*
  br label %75, !dbg !4058

; <label>:75:                                     ; preds = %176, %54
  %76 = phi %struct.window_S* [ %177, %176 ], [ %56, %54 ], !dbg !4059
  %77 = phi i64 [ %178, %176 ], [ 0, %54 ]
  %78 = phi i32 [ %116, %176 ], [ 0, %54 ]
  %79 = phi i32 [ %117, %176 ], [ 0, %54 ]
  %80 = phi i64 [ %118, %176 ], [ 0, %54 ]
  %81 = phi i32 [ %132, %176 ], [ 0, %54 ]
  %82 = phi i32 [ %131, %176 ], [ 0, %54 ]
  %83 = phi i64 [ %130, %176 ], [ 0, %54 ]
  %84 = phi i8* [ %161, %176 ], [ %34, %54 ]
  %85 = phi i32 [ %179, %176 ], [ 1, %54 ]
  %86 = phi i32 [ %133, %176 ], [ %49, %54 ]
  br label %87, !dbg !4060

; <label>:87:                                     ; preds = %75, %175
  %88 = phi %struct.window_S* [ %139, %175 ], [ %76, %75 ], !dbg !4059
  %89 = phi i32 [ %116, %175 ], [ %78, %75 ]
  %90 = phi i32 [ %117, %175 ], [ %79, %75 ]
  %91 = phi i64 [ %118, %175 ], [ %80, %75 ]
  %92 = phi i32 [ %132, %175 ], [ %81, %75 ]
  %93 = phi i32 [ %131, %175 ], [ %82, %75 ]
  %94 = phi i64 [ %130, %175 ], [ %83, %75 ]
  %95 = phi i32 [ %133, %175 ], [ %86, %75 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3982, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %85, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %84, metadata !3968, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.value(metadata i64 %94, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %93, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %92, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i64 %91, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %90, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %89, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i64 %77, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9, !dbg !4060
  store i64 0, i64* %74, align 8, !dbg !4061
  store i64 %7, i64* %60, align 8, !dbg !4062, !tbaa !4063
  store %struct.timeval* %14, %struct.timeval** %61, align 8, !dbg !4065, !tbaa !4066
  %96 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4067, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.pos_T* %10, metadata !3972, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata %struct.searchit_arg_T* %15, metadata !3984, metadata !DIExpression()), !dbg !4069
  %97 = call i32 @searchit(%struct.window_S* %88, %struct.file_buffer* %96, %struct.pos_T* nonnull %10, %struct.pos_T* null, i32 %3, i8* %84, i64 1, i32 %95, i32 0, %struct.searchit_arg_T* nonnull %15) #9, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %97, metadata !3977, metadata !DIExpression()), !dbg !4071
  %98 = icmp eq i32 %97, 0, !dbg !4072
  br i1 %98, label %180, label %99, !dbg !4074

; <label>:99:                                     ; preds = %87
  %100 = icmp eq i64 %91, 0, !dbg !4075
  %101 = load i64, i64* %62, align 8
  br i1 %100, label %110, label %102, !dbg !4075

; <label>:102:                                    ; preds = %99
  %103 = icmp eq i64 %101, %91, !dbg !4076
  %104 = load i32, i32* %63, align 8, !dbg !4076
  %105 = icmp eq i32 %104, %90, !dbg !4076
  %106 = and i1 %103, %105, !dbg !4076
  %107 = load i32, i32* %64, align 4, !dbg !4076
  %108 = icmp eq i32 %107, %89, !dbg !4076
  %109 = and i1 %106, %108, !dbg !4076
  br i1 %109, label %180, label %113, !dbg !4076

; <label>:110:                                    ; preds = %99
  call void @llvm.dbg.value(metadata i64 %101, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  %111 = load i32, i32* %63, align 8, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %111, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  %112 = load i32, i32* %64, align 4, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %112, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  br label %113, !dbg !4079

; <label>:113:                                    ; preds = %102, %110
  %114 = phi i32 [ %112, %110 ], [ %107, %102 ], !dbg !4080
  %115 = phi i32 [ %111, %110 ], [ %104, %102 ], !dbg !4080
  %116 = phi i32 [ %112, %110 ], [ %89, %102 ]
  %117 = phi i32 [ %111, %110 ], [ %90, %102 ]
  %118 = phi i64 [ %101, %110 ], [ %91, %102 ]
  call void @llvm.dbg.value(metadata i64 %118, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %117, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %116, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  %119 = icmp eq i64 %101, %94, !dbg !4080
  %120 = icmp eq i32 %115, %93, !dbg !4080
  %121 = and i1 %119, %120, !dbg !4080
  %122 = icmp eq i32 %114, %92, !dbg !4080
  %123 = and i1 %121, %122, !dbg !4080
  br i1 %123, label %124, label %129, !dbg !4080

; <label>:124:                                    ; preds = %113
  call void @llvm.dbg.value(metadata %struct.pos_T* %10, metadata !3972, metadata !DIExpression()), !dbg !4068
  br i1 %65, label %125, label %127, !dbg !4082

; <label>:125:                                    ; preds = %124
  %126 = call i32 @decl(%struct.pos_T* nonnull %10) #9, !dbg !4084
  br label %129, !dbg !4084

; <label>:127:                                    ; preds = %124
  %128 = call i32 @incl(%struct.pos_T* nonnull %10) #9, !dbg !4086
  br label %129

; <label>:129:                                    ; preds = %125, %127, %113
  %130 = load i64, i64* %62, align 8, !dbg !4087
  call void @llvm.dbg.value(metadata i64 %130, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  %131 = load i32, i32* %63, align 8, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %131, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  %132 = load i32, i32* %64, align 4, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %132, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  %133 = and i32 %95, -257, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %133, metadata !3982, metadata !DIExpression()), !dbg !4013
  br i1 %55, label %148, label %134, !dbg !4089

; <label>:134:                                    ; preds = %129
  %135 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4090, !tbaa !2783
  %136 = getelementptr inbounds %struct.window_S, %struct.window_S* %135, i64 0, i32 7, !dbg !4093
  %137 = bitcast %struct.pos_T* %136 to i8*, !dbg !4093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %18, i8* nonnull %137, i64 16, i32 8, i1 false), !dbg !4093, !tbaa.struct !4052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %137, i8* nonnull %16, i64 16, i32 8, i1 false), !dbg !4094, !tbaa.struct !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !3981, metadata !DIExpression()), !dbg !4095
  store i32 0, i32* %13, align 4, !dbg !4096, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %13, metadata !3981, metadata !DIExpression()), !dbg !4095
  %138 = call i32 @eval_expr_to_bool(%struct.typval_T* %4, i32* nonnull %13) #9, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %138, metadata !3978, metadata !DIExpression()), !dbg !4098
  %139 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4099, !tbaa !2783
  %140 = getelementptr inbounds %struct.window_S, %struct.window_S* %139, i64 0, i32 7, !dbg !4100
  %141 = bitcast %struct.pos_T* %140 to i8*, !dbg !4101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %141, i8* nonnull %18, i64 16, i32 8, i1 false), !dbg !4101, !tbaa.struct !4052
  %142 = load i32, i32* %13, align 4, !dbg !4102, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %142, metadata !3981, metadata !DIExpression()), !dbg !4095
  %143 = icmp eq i32 %142, 0, !dbg !4102
  br i1 %143, label %146, label %144, !dbg !4104

; <label>:144:                                    ; preds = %134
  %145 = bitcast %struct.pos_T* %140 to i8*, !dbg !4101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %145, i8* nonnull %17, i64 16, i32 8, i1 false), !dbg !4105, !tbaa.struct !4052
  call void @llvm.dbg.value(metadata i64 -1, metadata !3971, metadata !DIExpression()), !dbg !4006
  br label %180, !dbg !4107

; <label>:146:                                    ; preds = %134
  %147 = icmp eq i32 %138, 0, !dbg !4108
  br i1 %147, label %148, label %175, !dbg !4110, !llvm.loop !4111

; <label>:148:                                    ; preds = %146, %129
  %149 = icmp eq i32 %97, 3, !dbg !4114
  %150 = and i1 %65, %149, !dbg !4116
  %151 = icmp eq i32 %97, 2, !dbg !4117
  %152 = and i1 %66, %151, !dbg !4118
  %153 = or i1 %150, %152, !dbg !4116
  br i1 %153, label %154, label %156, !dbg !4116

; <label>:154:                                    ; preds = %148
  %155 = add nsw i32 %85, 1, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %155, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %27, metadata !3968, metadata !DIExpression()), !dbg !4057
  br label %160, !dbg !4121

; <label>:156:                                    ; preds = %148
  %157 = add nsw i32 %85, -1, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %157, metadata !3979, metadata !DIExpression()), !dbg !4010
  %158 = icmp eq i32 %157, 1, !dbg !4125
  %159 = select i1 %158, i8* %34, i8* %84, !dbg !4126
  br label %160, !dbg !4126

; <label>:160:                                    ; preds = %156, %154
  %161 = phi i8* [ %27, %154 ], [ %159, %156 ]
  %162 = phi i32 [ %155, %154 ], [ %157, %156 ]
  call void @llvm.dbg.value(metadata i32 %162, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %161, metadata !3968, metadata !DIExpression()), !dbg !4057
  %163 = icmp eq i32 %162, 0, !dbg !4127
  br i1 %163, label %166, label %164, !dbg !4129

; <label>:164:                                    ; preds = %160
  %165 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4059, !tbaa !2783
  br label %176, !dbg !4129

; <label>:166:                                    ; preds = %160
  %167 = add nsw i64 %77, 1, !dbg !4130
  call void @llvm.dbg.value(metadata i64 %167, metadata !3971, metadata !DIExpression()), !dbg !4006
  %168 = load i64, i64* %62, align 8, !dbg !4133
  call void @llvm.dbg.value(metadata i64 %168, metadata !3971, metadata !DIExpression()), !dbg !4006
  %169 = select i1 %68, i64 %168, i64 %167, !dbg !4134
  call void @llvm.dbg.value(metadata i64 %169, metadata !3971, metadata !DIExpression()), !dbg !4006
  br i1 %70, label %171, label %170, !dbg !4135

; <label>:170:                                    ; preds = %166
  call void @setpcmark() #9, !dbg !4136
  br label %171, !dbg !4136

; <label>:171:                                    ; preds = %166, %170
  %172 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4138, !tbaa !2783
  %173 = getelementptr inbounds %struct.window_S, %struct.window_S* %172, i64 0, i32 7, !dbg !4139
  %174 = bitcast %struct.pos_T* %173 to i8*, !dbg !4140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %174, i8* nonnull %16, i64 16, i32 8, i1 false), !dbg !4140, !tbaa.struct !4052
  br i1 %72, label %180, label %176, !dbg !4141

; <label>:175:                                    ; preds = %146
  call void @llvm.dbg.value(metadata i32 %133, metadata !3982, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %85, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %84, metadata !3968, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.value(metadata i64 %130, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %131, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %132, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i64 %118, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %117, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %116, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i64 %77, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9, !dbg !4142
  br label %87

; <label>:176:                                    ; preds = %164, %171
  %177 = phi %struct.window_S* [ %165, %164 ], [ %172, %171 ], !dbg !4059
  %178 = phi i64 [ %77, %164 ], [ %169, %171 ]
  %179 = phi i32 [ %162, %164 ], [ 1, %171 ]
  call void @llvm.dbg.value(metadata i32 %179, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i64 %178, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %133, metadata !3982, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %85, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %84, metadata !3968, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.value(metadata i64 %130, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %131, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %132, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i64 %118, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %117, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %116, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i64 %77, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9, !dbg !4142
  br label %75, !dbg !4143, !llvm.loop !4111

; <label>:180:                                    ; preds = %171, %87, %102, %144
  %181 = phi i64 [ -1, %144 ], [ %77, %102 ], [ %77, %87 ], [ %169, %171 ]
  call void @llvm.dbg.value(metadata i32 %133, metadata !3982, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %85, metadata !3979, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %84, metadata !3968, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.value(metadata i64 %130, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %131, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %132, metadata !3974, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4056
  call void @llvm.dbg.value(metadata i64 %118, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %117, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %116, metadata !3973, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !4055
  call void @llvm.dbg.value(metadata i64 %77, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9, !dbg !4142
  %182 = icmp eq %struct.pos_T* %6, null, !dbg !4144
  br i1 %182, label %192, label %183, !dbg !4146

; <label>:183:                                    ; preds = %180
  %184 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4147, !tbaa !2783
  %185 = getelementptr inbounds %struct.window_S, %struct.window_S* %184, i64 0, i32 7, i32 0, !dbg !4149
  %186 = load i64, i64* %185, align 8, !dbg !4149, !tbaa !4150
  %187 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %6, i64 0, i32 0, !dbg !4158
  store i64 %186, i64* %187, align 8, !dbg !4159, !tbaa !4160
  %188 = getelementptr inbounds %struct.window_S, %struct.window_S* %184, i64 0, i32 7, i32 1, !dbg !4161
  %189 = load i32, i32* %188, align 8, !dbg !4161, !tbaa !4162
  %190 = add nsw i32 %189, 1, !dbg !4163
  %191 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %6, i64 0, i32 1, !dbg !4164
  store i32 %190, i32* %191, align 8, !dbg !4165, !tbaa !4166
  br label %192, !dbg !4167

; <label>:192:                                    ; preds = %180, %183
  %193 = and i32 %5, 1, !dbg !4168
  %194 = icmp ne i32 %193, 0, !dbg !4168
  %195 = icmp eq i64 %181, 0, !dbg !4170
  %196 = or i1 %194, %195, !dbg !4171
  br i1 %196, label %197, label %201, !dbg !4171

; <label>:197:                                    ; preds = %192
  %198 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4172, !tbaa !2783
  %199 = getelementptr inbounds %struct.window_S, %struct.window_S* %198, i64 0, i32 7, !dbg !4173
  %200 = bitcast %struct.pos_T* %199 to i8*, !dbg !4174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %200, i8* nonnull %17, i64 16, i32 8, i1 false), !dbg !4174, !tbaa.struct !4052
  br label %201, !dbg !4172

; <label>:201:                                    ; preds = %197, %192, %9
  %202 = phi i64 [ 0, %9 ], [ %181, %197 ], [ %181, %192 ]
  call void @llvm.dbg.value(metadata i64 %202, metadata !3971, metadata !DIExpression()), !dbg !4006
  call void @vim_free(i8* %27) #9, !dbg !4175
  call void @vim_free(i8* %34) #9, !dbg !4176
  %203 = load i8*, i8** @p_cpo, align 8, !dbg !4177, !tbaa !2783
  %204 = load i8*, i8** @empty_option, align 8, !dbg !4179, !tbaa !2783
  %205 = icmp eq i8* %203, %204, !dbg !4180
  br i1 %205, label %206, label %207, !dbg !4181

; <label>:206:                                    ; preds = %201
  store i8* %21, i8** @p_cpo, align 8, !dbg !4182, !tbaa !2783
  br label %213, !dbg !4183

; <label>:207:                                    ; preds = %201
  %208 = load i8, i8* %203, align 1, !dbg !4184, !tbaa !2918
  %209 = icmp eq i8 %208, 0, !dbg !4187
  br i1 %209, label %210, label %212, !dbg !4188

; <label>:210:                                    ; preds = %207
  %211 = call i8* @set_option_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.204, i64 0, i64 0), i64 0, i8* %21, i32 0) #9, !dbg !4189
  br label %212, !dbg !4189

; <label>:212:                                    ; preds = %210, %207
  call void @free_string_option(i8* %21) #9, !dbg !4190
  br label %213

; <label>:213:                                    ; preds = %212, %206
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9, !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9, !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18), !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17), !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9, !dbg !4191
  ret i64 %202, !dbg !4192
}

declare void @profile_setlimit(i64, %struct.timeval*) local_unnamed_addr #3

declare i8* @alloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5

declare i32 @eval_expr_valid_arg(%struct.typval_T*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare i32 @searchit(%struct.window_S*, %struct.file_buffer*, %struct.pos_T*, %struct.pos_T*, i32, i8*, i64, i32, i32, %struct.searchit_arg_T*) local_unnamed_addr #3

declare i32 @decl(%struct.pos_T*) local_unnamed_addr #3

declare i32 @incl(%struct.pos_T*) local_unnamed_addr #3

declare i32 @eval_expr_to_bool(%struct.typval_T*, i32*) local_unnamed_addr #3

declare void @setpcmark() local_unnamed_addr #3

declare void @vim_free(i8*) local_unnamed_addr #3

declare i8* @set_option_value(i8*, i64, i8*, i32) local_unnamed_addr #3

declare void @free_string_option(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @f_string(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4193 {
  %3 = alloca i8*, align 8
  %4 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4195, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4196, metadata !DIExpression()), !dbg !4200
  %5 = bitcast i8** %3 to i8*, !dbg !4201
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9, !dbg !4201
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !4202
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !4202
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !4198, metadata !DIExpression()), !dbg !4203
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4204
  store i32 7, i32* %7, align 8, !dbg !4205, !tbaa !3221
  %8 = tail call i32 @get_copyID() #9, !dbg !4206
  call void @llvm.dbg.value(metadata i8** %3, metadata !4197, metadata !DIExpression()), !dbg !4207
  %9 = call i8* @tv2string(%struct.typval_T* %0, i8** nonnull %3, i8* nonnull %6, i32 %8) #9, !dbg !4208
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !4209
  %11 = bitcast %union.anon* %10 to i8**, !dbg !4210
  store i8* %9, i8** %11, align 8, !dbg !4211, !tbaa !2918
  %12 = icmp ne i8* %9, null, !dbg !4212
  %13 = load i8*, i8** %3, align 8, !dbg !4214
  call void @llvm.dbg.value(metadata i8* %13, metadata !4197, metadata !DIExpression()), !dbg !4207
  %14 = icmp eq i8* %13, null, !dbg !4215
  %15 = and i1 %12, %14, !dbg !4216
  br i1 %15, label %16, label %18, !dbg !4216

; <label>:16:                                     ; preds = %2
  %17 = call i8* @vim_strsave(i8* nonnull %9) #9, !dbg !4217
  store i8* %17, i8** %11, align 8, !dbg !4218, !tbaa !2918
  br label %18, !dbg !4219

; <label>:18:                                     ; preds = %16, %2
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !4220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9, !dbg !4220
  ret void, !dbg !4220
}

declare i8* @tv2string(%struct.typval_T*, i8**, i8*, i32) local_unnamed_addr #3

declare i32 @get_copyID() local_unnamed_addr #3

declare i8* @vim_strsave(i8*) local_unnamed_addr #3

declare i32 @need_type(%struct.type_S*, %struct.type_S*, i32, i32, %struct.cctx_S*, i32, i32) local_unnamed_addr #3

declare void @arg_type_mismatch(%struct.type_S*, %struct.type_S*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_any(i32, %struct.type_S** nocapture readnone) #7 !dbg !4221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4223, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4224, metadata !DIExpression()), !dbg !4226
  ret %struct.type_S* @t_any, !dbg !4227
}

; Function Attrs: nounwind uwtable
define internal void @f_abs(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4228 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4230, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4231, metadata !DIExpression()), !dbg !4237
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4238
  %5 = load i32, i32* %4, align 8, !dbg !4238, !tbaa !3221
  %6 = icmp eq i32 %5, 6, !dbg !4239
  br i1 %6, label %7, label %15, !dbg !4240

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4241
  store i32 6, i32* %8, align 8, !dbg !4243, !tbaa !3221
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !4244
  %10 = bitcast %union.anon* %9 to double*, !dbg !4245
  %11 = load double, double* %10, align 8, !dbg !4245, !tbaa !2918
  %12 = tail call double @llvm.fabs.f64(double %11), !dbg !4246
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !4247
  %14 = bitcast %union.anon* %13 to double*, !dbg !4248
  store double %12, double* %14, align 8, !dbg !4249, !tbaa !2918
  br label %27, !dbg !4250

; <label>:15:                                     ; preds = %2
  %16 = bitcast i32* %3 to i8*, !dbg !4251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9, !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4235, metadata !DIExpression()), !dbg !4252
  store i32 0, i32* %3, align 4, !dbg !4252, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %3, metadata !4235, metadata !DIExpression()), !dbg !4252
  %17 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %0, i32* nonnull %3) #9, !dbg !4253
  call void @llvm.dbg.value(metadata i64 %17, metadata !4232, metadata !DIExpression()), !dbg !4254
  %18 = load i32, i32* %3, align 4, !dbg !4255, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %18, metadata !4235, metadata !DIExpression()), !dbg !4252
  %19 = icmp eq i32 %18, 0, !dbg !4255
  br i1 %19, label %20, label %24, !dbg !4257

; <label>:20:                                     ; preds = %15
  %21 = icmp sgt i64 %17, 0, !dbg !4258
  %22 = sub nsw i64 0, %17, !dbg !4260
  %23 = select i1 %21, i64 %17, i64 %22, !dbg !4261
  br label %24, !dbg !4261

; <label>:24:                                     ; preds = %20, %15
  %25 = phi i64 [ -1, %15 ], [ %23, %20 ]
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %25, i64* %26, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9, !dbg !4262
  br label %27

; <label>:27:                                     ; preds = %24, %7
  ret void, !dbg !4263
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_float(i32, %struct.type_S** nocapture readnone) #7 !dbg !4264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4267, metadata !DIExpression()), !dbg !4269
  ret %struct.type_S* @t_float, !dbg !4270
}

; Function Attrs: nounwind uwtable
define internal void @f_acos(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !4271 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4273, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4274, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4275, metadata !DIExpression()), !dbg !4278
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4279
  store i32 6, i32* %3, align 8, !dbg !4280, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !4275, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !4288
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4291
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4292
  %5 = load i32, i32* %4, align 8, !dbg !4292, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !4294

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4295
  %8 = bitcast i64* %7 to double*, !dbg !4295
  %9 = load double, double* %8, align 8, !dbg !4295, !tbaa !2918
  br label %14, !dbg !4297

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4298
  %12 = load i64, i64* %11, align 8, !dbg !4298, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !4301
  br label %14, !dbg !4302

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !4275, metadata !DIExpression()), !dbg !4278
  %16 = tail call double @acos(double %15) #9, !dbg !4303
  br label %20, !dbg !4304

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4305
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !4306
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !4307
}

; Function Attrs: nounwind readonly uwtable
define internal %struct.type_S* @ret_first_arg(i32, %struct.type_S** nocapture readonly) #6 !dbg !4308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4310, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4311, metadata !DIExpression()), !dbg !4313
  %3 = icmp sgt i32 %0, 0, !dbg !4314
  br i1 %3, label %4, label %6, !dbg !4316

; <label>:4:                                      ; preds = %2
  %5 = load %struct.type_S*, %struct.type_S** %1, align 8, !dbg !4317, !tbaa !2783
  br label %6, !dbg !4318

; <label>:6:                                      ; preds = %2, %4
  %7 = phi %struct.type_S* [ %5, %4 ], [ @t_void, %2 ]
  ret %struct.type_S* %7, !dbg !4319
}

declare void @f_add(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_number(i32, %struct.type_S** nocapture readnone) #7 !dbg !4320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4323, metadata !DIExpression()), !dbg !4325
  ret %struct.type_S* @t_number, !dbg !4326
}

; Function Attrs: nounwind uwtable
define internal void @f_and(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4327 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4329, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4330, metadata !DIExpression()), !dbg !4332
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !4333
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4334
  %5 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %4, i32* null) #9, !dbg !4335
  %6 = and i64 %5, %3, !dbg !4336
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4337
  store i64 %6, i64* %7, align 8, !dbg !4338, !tbaa !2918
  ret void, !dbg !4339
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_number_bool(i32, %struct.type_S** nocapture readnone) #7 !dbg !4340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4342, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4343, metadata !DIExpression()), !dbg !4345
  ret %struct.type_S* @t_number_bool, !dbg !4346
}

declare void @f_append(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_appendbufline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_argc(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_argidx(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_arglistid(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_argv(i32, %struct.type_S** nocapture readnone) #7 !dbg !4347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4349, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4350, metadata !DIExpression()), !dbg !4352
  %3 = icmp eq i32 %0, 0, !dbg !4353
  %4 = select i1 %3, %struct.type_S* @t_list_string, %struct.type_S* @t_any, !dbg !4355
  ret %struct.type_S* %4, !dbg !4356
}

declare void @f_argv(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_asin(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !4357 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4359, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4360, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4361, metadata !DIExpression()), !dbg !4364
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4365
  store i32 6, i32* %3, align 8, !dbg !4366, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !4361, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !4367
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4370
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4371
  %5 = load i32, i32* %4, align 8, !dbg !4371, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !4372

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4373
  %8 = bitcast i64* %7 to double*, !dbg !4373
  %9 = load double, double* %8, align 8, !dbg !4373, !tbaa !2918
  br label %14, !dbg !4374

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4375
  %12 = load i64, i64* %11, align 8, !dbg !4375, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !4376
  br label %14, !dbg !4377

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !4361, metadata !DIExpression()), !dbg !4364
  %16 = tail call double @asin(double %15) #9, !dbg !4378
  br label %20, !dbg !4379

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4380
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !4381
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !4382
}

declare void @f_assert_beeps(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_equal(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_equalfile(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_exception(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_fails(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_false(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_inrange(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_match(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_nobeep(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_notequal(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_notmatch(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_report(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_assert_true(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_atan(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !4383 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4385, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4386, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4387, metadata !DIExpression()), !dbg !4390
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4391
  store i32 6, i32* %3, align 8, !dbg !4392, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !4393
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4396
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4397
  %5 = load i32, i32* %4, align 8, !dbg !4397, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !4398

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4399
  %8 = bitcast i64* %7 to double*, !dbg !4399
  %9 = load double, double* %8, align 8, !dbg !4399, !tbaa !2918
  br label %14, !dbg !4400

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4401
  %12 = load i64, i64* %11, align 8, !dbg !4401, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !4402
  br label %14, !dbg !4403

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !4387, metadata !DIExpression()), !dbg !4390
  %16 = tail call double @atan(double %15) #9, !dbg !4404
  br label %20, !dbg !4405

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4406
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !4407
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !4408
}

; Function Attrs: nounwind uwtable
define internal void @f_atan2(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !4409 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4411, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4412, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4413, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4414, metadata !DIExpression()), !dbg !4418
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4419
  store i32 6, i32* %3, align 8, !dbg !4420, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !4413, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !4421
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4424
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4425
  %5 = load i32, i32* %4, align 8, !dbg !4425, !tbaa !3221
  switch i32 %5, label %14 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !4426

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4427
  %8 = bitcast i64* %7 to double*, !dbg !4427
  %9 = load double, double* %8, align 8, !dbg !4427, !tbaa !2918
  br label %17, !dbg !4428

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4429
  %12 = load i64, i64* %11, align 8, !dbg !4429, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !4430
  br label %17, !dbg !4431

; <label>:14:                                     ; preds = %2
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4432
  %16 = tail call i32 @emsg(i8* %15) #9, !dbg !4433
  br label %35, !dbg !4434

; <label>:17:                                     ; preds = %6, %10
  %18 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double* undef, metadata !4414, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)) #9, !dbg !4435
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4437
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !4438
  %20 = load i32, i32* %19, align 8, !dbg !4438, !tbaa !3221
  switch i32 %20, label %29 [
    i32 6, label %21
    i32 5, label %25
  ], !dbg !4439

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !4440
  %23 = bitcast i64* %22 to double*, !dbg !4440
  %24 = load double, double* %23, align 8, !dbg !4440, !tbaa !2918
  br label %32, !dbg !4441

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !4442
  %27 = load i64, i64* %26, align 8, !dbg !4442, !tbaa !2918
  %28 = sitofp i64 %27 to double, !dbg !4443
  br label %32, !dbg !4444

; <label>:29:                                     ; preds = %17
  %30 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4445
  %31 = tail call i32 @emsg(i8* %30) #9, !dbg !4446
  br label %35, !dbg !4447

; <label>:32:                                     ; preds = %21, %25
  %33 = phi double [ %24, %21 ], [ %28, %25 ]
  call void @llvm.dbg.value(metadata double %18, metadata !4413, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata double %33, metadata !4414, metadata !DIExpression()), !dbg !4418
  %34 = tail call double @atan2(double %18, double %33) #9, !dbg !4448
  br label %35, !dbg !4449

; <label>:35:                                     ; preds = %14, %29, %32
  %36 = phi double [ %34, %32 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %14 ]
  %37 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %38 = bitcast %union.anon* %37 to double*
  store double %36, double* %38, align 8, !tbaa !2918
  ret void, !dbg !4450
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_string(i32, %struct.type_S** nocapture readnone) #7 !dbg !4451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4453, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4454, metadata !DIExpression()), !dbg !4456
  ret %struct.type_S* @t_string, !dbg !4457
}

; Function Attrs: nounwind uwtable
define internal void @f_balloon_gettext(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !4458 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4460, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4461, metadata !DIExpression()), !dbg !4463
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4464
  store i32 7, i32* %3, align 8, !dbg !4465, !tbaa !3221
  %4 = load %struct.BalloonEvalStruct*, %struct.BalloonEvalStruct** @balloonEval, align 8, !dbg !4466, !tbaa !2783
  %5 = icmp eq %struct.BalloonEvalStruct* %4, null, !dbg !4468
  br i1 %5, label %16, label %6, !dbg !4469

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.BalloonEvalStruct, %struct.BalloonEvalStruct* %4, i64 0, i32 12, !dbg !4470
  %8 = load i8*, i8** %7, align 8, !dbg !4470, !tbaa !4473
  %9 = icmp eq i8* %8, null, !dbg !4475
  br i1 %9, label %12, label %10, !dbg !4476

; <label>:10:                                     ; preds = %6
  %11 = tail call i8* @vim_strsave(i8* nonnull %8) #9, !dbg !4477
  br label %12

; <label>:12:                                     ; preds = %6, %10
  %13 = phi i8* [ %11, %10 ], [ null, %6 ]
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %15 = bitcast %union.anon* %14 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !2918
  br label %16, !dbg !4478

; <label>:16:                                     ; preds = %12, %2
  ret void, !dbg !4478
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_void(i32, %struct.type_S** nocapture readnone) #7 !dbg !4479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4481, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4482, metadata !DIExpression()), !dbg !4484
  ret %struct.type_S* @t_void, !dbg !4485
}

; Function Attrs: nounwind uwtable
define internal void @f_balloon_show(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !4486 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4488, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4489, metadata !DIExpression()), !dbg !4498
  %3 = load %struct.BalloonEvalStruct*, %struct.BalloonEvalStruct** @balloonEval, align 8, !dbg !4499, !tbaa !2783
  %4 = icmp eq %struct.BalloonEvalStruct* %3, null, !dbg !4500
  br i1 %4, label %38, label %5, !dbg !4501

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4502
  %7 = load i32, i32* %6, align 8, !dbg !4502, !tbaa !3221
  %8 = icmp ne i32 %7, 11, !dbg !4503
  %9 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !4504
  %10 = icmp ne i32 %9, 0, !dbg !4505
  %11 = or i1 %8, %10, !dbg !4506
  br i1 %11, label %24, label %12, !dbg !4506

; <label>:12:                                     ; preds = %5
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !4507
  %14 = bitcast %union.anon* %13 to %struct.listvar_S**, !dbg !4508
  %15 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !4508, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %15, metadata !4490, metadata !DIExpression()), !dbg !4509
  %16 = icmp eq %struct.listvar_S* %15, null, !dbg !4510
  br i1 %16, label %22, label %17, !dbg !4511

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %15, i64 0, i32 8, !dbg !4512
  %19 = load i32, i32* %18, align 4, !dbg !4512, !tbaa !3541
  %20 = icmp eq i32 %19, 0, !dbg !4513
  %21 = select i1 %20, %struct.listvar_S* null, %struct.listvar_S* %15, !dbg !4514
  br label %22, !dbg !4514

; <label>:22:                                     ; preds = %17, %12
  %23 = phi %struct.listvar_S* [ null, %12 ], [ %21, %17 ], !dbg !4514
  tail call void @post_balloon(%struct.BalloonEvalStruct* nonnull %3, i8* null, %struct.listvar_S* %23) #9, !dbg !4515
  br label %38, !dbg !4516

; <label>:24:                                     ; preds = %5
  %25 = tail call i32 @in_vim9script() #9, !dbg !4517
  %26 = icmp eq i32 %25, 0, !dbg !4517
  br i1 %26, label %30, label %27, !dbg !4519

; <label>:27:                                     ; preds = %24
  %28 = tail call i32 @check_for_string_arg(%struct.typval_T* nonnull %0, i32 0) #9, !dbg !4520
  %29 = icmp eq i32 %28, 0, !dbg !4521
  br i1 %29, label %38, label %30, !dbg !4522

; <label>:30:                                     ; preds = %24, %27
  %31 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %31, metadata !4495, metadata !DIExpression()), !dbg !4524
  %32 = icmp eq i8* %31, null, !dbg !4525
  br i1 %32, label %38, label %33, !dbg !4527

; <label>:33:                                     ; preds = %30
  %34 = load %struct.BalloonEvalStruct*, %struct.BalloonEvalStruct** @balloonEval, align 8, !dbg !4528, !tbaa !2783
  %35 = load i8, i8* %31, align 1, !dbg !4529, !tbaa !2918
  %36 = icmp eq i8 %35, 0, !dbg !4530
  %37 = select i1 %36, i8* null, i8* %31, !dbg !4529
  tail call void @post_balloon(%struct.BalloonEvalStruct* %34, i8* %37, %struct.listvar_S* null) #9, !dbg !4531
  br label %38, !dbg !4531

; <label>:38:                                     ; preds = %33, %30, %27, %22, %2
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_string(i32, %struct.type_S** nocapture readnone) #7 !dbg !4532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4534, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4535, metadata !DIExpression()), !dbg !4537
  ret %struct.type_S* @t_list_string, !dbg !4538
}

; Function Attrs: nounwind uwtable
define internal void @f_balloon_split(%struct.typval_T*, %struct.typval_T*) #0 !dbg !4539 {
  %3 = alloca %struct.pumitem_T*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4541, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4542, metadata !DIExpression()), !dbg !4560
  %4 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !4561
  %5 = icmp eq i32 %4, 1, !dbg !4562
  br i1 %5, label %6, label %49, !dbg !4563

; <label>:6:                                      ; preds = %2
  %7 = tail call i32 @in_vim9script() #9, !dbg !4564
  %8 = icmp eq i32 %7, 0, !dbg !4564
  br i1 %8, label %12, label %9, !dbg !4566

; <label>:9:                                      ; preds = %6
  %10 = tail call i32 @check_for_string_arg(%struct.typval_T* %0, i32 0) #9, !dbg !4567
  %11 = icmp eq i32 %10, 0, !dbg !4568
  br i1 %11, label %49, label %12, !dbg !4569

; <label>:12:                                     ; preds = %6, %9
  %13 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !4570
  call void @llvm.dbg.value(metadata i8* %13, metadata !4543, metadata !DIExpression()), !dbg !4571
  %14 = icmp eq i8* %13, null, !dbg !4572
  br i1 %14, label %49, label %15, !dbg !4573

; <label>:15:                                     ; preds = %12
  %16 = bitcast %struct.pumitem_T** %3 to i8*, !dbg !4574
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9, !dbg !4574
  call void @llvm.dbg.value(metadata %struct.pumitem_T** %3, metadata !4546, metadata !DIExpression()), !dbg !4575
  %17 = call i32 @split_message(i8* nonnull %13, %struct.pumitem_T** nonnull %3) #9, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %17, metadata !4557, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 1, metadata !4558, metadata !DIExpression()), !dbg !4578
  %18 = icmp sgt i32 %17, 2, !dbg !4579
  br i1 %18, label %19, label %33, !dbg !4582

; <label>:19:                                     ; preds = %15
  %20 = add nsw i32 %17, -1, !dbg !4583
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %22 = bitcast %union.anon* %21 to %struct.listvar_S**
  %23 = zext i32 %20 to i64
  br label %24, !dbg !4582

; <label>:24:                                     ; preds = %24, %19
  %25 = phi i64 [ 1, %19 ], [ %31, %24 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !4558, metadata !DIExpression()), !dbg !4578
  %26 = load %struct.listvar_S*, %struct.listvar_S** %22, align 8, !dbg !4584, !tbaa !2918
  %27 = load %struct.pumitem_T*, %struct.pumitem_T** %3, align 8, !dbg !4585, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.pumitem_T* %27, metadata !4546, metadata !DIExpression()), !dbg !4575
  %28 = getelementptr inbounds %struct.pumitem_T, %struct.pumitem_T* %27, i64 %25, i32 0, !dbg !4586
  %29 = load i8*, i8** %28, align 8, !dbg !4586, !tbaa !4587
  %30 = call i32 @list_append_string(%struct.listvar_S* %26, i8* %29, i32 -1) #9, !dbg !4589
  %31 = add nuw nsw i64 %25, 1, !dbg !4590
  %32 = icmp eq i64 %31, %23, !dbg !4579
  br i1 %32, label %33, label %24, !dbg !4582, !llvm.loop !4591

; <label>:33:                                     ; preds = %24, %15
  call void @llvm.dbg.value(metadata i32 %17, metadata !4557, metadata !DIExpression()), !dbg !4577
  %34 = icmp sgt i32 %17, 0, !dbg !4593
  %35 = load %struct.pumitem_T*, %struct.pumitem_T** %3, align 8, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.pumitem_T* %35, metadata !4546, metadata !DIExpression()), !dbg !4575
  br i1 %34, label %36, label %46, !dbg !4594

; <label>:36:                                     ; preds = %33
  %37 = sext i32 %17 to i64, !dbg !4594
  br label %38, !dbg !4594

; <label>:38:                                     ; preds = %36, %38
  %39 = phi i64 [ %37, %36 ], [ %41, %38 ]
  %40 = phi %struct.pumitem_T* [ %35, %36 ], [ %45, %38 ]
  call void @llvm.dbg.value(metadata i64 %39, metadata !4557, metadata !DIExpression()), !dbg !4577
  %41 = add nsw i64 %39, -1, !dbg !4595
  %42 = getelementptr inbounds %struct.pumitem_T, %struct.pumitem_T* %40, i64 %41, i32 0, !dbg !4596
  %43 = load i8*, i8** %42, align 8, !dbg !4596, !tbaa !4587
  call void @vim_free(i8* %43) #9, !dbg !4597
  %44 = icmp sgt i64 %39, 1, !dbg !4593
  %45 = load %struct.pumitem_T*, %struct.pumitem_T** %3, align 8, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.pumitem_T* %45, metadata !4546, metadata !DIExpression()), !dbg !4575
  br i1 %44, label %38, label %46, !dbg !4594, !llvm.loop !4598

; <label>:46:                                     ; preds = %38, %33
  %47 = phi %struct.pumitem_T* [ %35, %33 ], [ %45, %38 ]
  %48 = bitcast %struct.pumitem_T* %47 to i8*, !dbg !4600
  call void @vim_free(i8* %48) #9, !dbg !4601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9, !dbg !4602
  br label %49, !dbg !4603

; <label>:49:                                     ; preds = %46, %12, %9, %2
  ret void
}

declare void @f_browse(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_browsedir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufadd(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufexists(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufname(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufnr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_buflisted(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufload(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufloaded(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufwinid(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_bufwinnr(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_byte2line(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4604 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4606, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4607, metadata !DIExpression()), !dbg !4610
  %4 = bitcast i64* %3 to i8*, !dbg !4611
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !4611
  call void @llvm.dbg.value(metadata i64 0, metadata !4608, metadata !DIExpression()), !dbg !4612
  %5 = tail call i64 @tv_get_number(%struct.typval_T* %0) #9, !dbg !4613
  %6 = add nsw i64 %5, -1, !dbg !4614
  call void @llvm.dbg.value(metadata i64 %6, metadata !4608, metadata !DIExpression()), !dbg !4612
  store i64 %6, i64* %3, align 8, !dbg !4615, !tbaa !4053
  %7 = icmp slt i64 %5, 1, !dbg !4616
  br i1 %7, label %11, label %8, !dbg !4618

; <label>:8:                                      ; preds = %2
  %9 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4619, !tbaa !2783
  call void @llvm.dbg.value(metadata i64* %3, metadata !4608, metadata !DIExpression()), !dbg !4612
  %10 = call i64 @ml_find_line_or_offset(%struct.file_buffer* %9, i64 0, i64* nonnull %3) #9, !dbg !4620
  br label %11

; <label>:11:                                     ; preds = %2, %8
  %12 = phi i64 [ %10, %8 ], [ -1, %2 ]
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4621
  store i64 %12, i64* %13, align 8, !dbg !4622
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !4623
  ret void, !dbg !4623
}

; Function Attrs: nounwind uwtable
define internal void @f_byteidx(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4624 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4626, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4627, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4630, metadata !DIExpression()) #9, !dbg !4638
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4633, metadata !DIExpression()) #9, !dbg !4640
  call void @llvm.dbg.value(metadata i32 0, metadata !4634, metadata !DIExpression()) #9, !dbg !4641
  %3 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !4642
  call void @llvm.dbg.value(metadata i8* %3, metadata !4636, metadata !DIExpression()) #9, !dbg !4643
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4644
  %5 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %4, i32* null) #9, !dbg !4645
  call void @llvm.dbg.value(metadata i64 %5, metadata !4637, metadata !DIExpression()) #9, !dbg !4646
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4647
  store i64 -1, i64* %6, align 8, !dbg !4648, !tbaa !2918
  %7 = icmp eq i8* %3, null, !dbg !4649
  %8 = icmp slt i64 %5, 0, !dbg !4651
  %9 = or i1 %7, %8, !dbg !4652
  br i1 %9, label %30, label %10, !dbg !4652

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !4635, metadata !DIExpression()) #9, !dbg !4653
  call void @llvm.dbg.value(metadata i64 %5, metadata !4637, metadata !DIExpression()) #9, !dbg !4646
  %11 = icmp sgt i64 %5, 0, !dbg !4654
  br i1 %11, label %12, label %25, !dbg !4657

; <label>:12:                                     ; preds = %10
  br label %13, !dbg !4658

; <label>:13:                                     ; preds = %12, %18
  %14 = phi i64 [ %23, %18 ], [ %5, %12 ]
  %15 = phi i8* [ %22, %18 ], [ %3, %12 ]
  call void @llvm.dbg.value(metadata i8* %15, metadata !4635, metadata !DIExpression()) #9, !dbg !4653
  call void @llvm.dbg.value(metadata i64 %14, metadata !4637, metadata !DIExpression()) #9, !dbg !4646
  %16 = load i8, i8* %15, align 1, !dbg !4658, !tbaa !2918
  %17 = icmp eq i8 %16, 0, !dbg !4661
  br i1 %17, label %30, label %18, !dbg !4662

; <label>:18:                                     ; preds = %13
  %19 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !4663, !tbaa !2783
  %20 = tail call i32 %19(i8* nonnull %15) #9, !dbg !4665
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %15, i64 %21
  %23 = add nsw i64 %14, -1, !dbg !4666
  call void @llvm.dbg.value(metadata i64 %23, metadata !4637, metadata !DIExpression()) #9, !dbg !4646
  call void @llvm.dbg.value(metadata i8* %22, metadata !4635, metadata !DIExpression()) #9, !dbg !4653
  %24 = icmp sgt i64 %14, 1, !dbg !4654
  br i1 %24, label %13, label %25, !dbg !4657, !llvm.loop !4667

; <label>:25:                                     ; preds = %18, %10
  %26 = phi i8* [ %3, %10 ], [ %22, %18 ]
  %27 = ptrtoint i8* %26 to i64, !dbg !4670
  %28 = ptrtoint i8* %3 to i64, !dbg !4670
  %29 = sub i64 %27, %28, !dbg !4670
  store i64 %29, i64* %6, align 8, !dbg !4671, !tbaa !2918
  br label %30, !dbg !4672

; <label>:30:                                     ; preds = %13, %2, %25
  ret void, !dbg !4673
}

; Function Attrs: nounwind uwtable
define internal void @f_byteidxcomp(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4674 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4676, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4677, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4630, metadata !DIExpression()) #9, !dbg !4680
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4633, metadata !DIExpression()) #9, !dbg !4682
  call void @llvm.dbg.value(metadata i32 1, metadata !4634, metadata !DIExpression()) #9, !dbg !4683
  %3 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %3, metadata !4636, metadata !DIExpression()) #9, !dbg !4685
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4686
  %5 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %4, i32* null) #9, !dbg !4687
  call void @llvm.dbg.value(metadata i64 %5, metadata !4637, metadata !DIExpression()) #9, !dbg !4688
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4689
  store i64 -1, i64* %6, align 8, !dbg !4690, !tbaa !2918
  %7 = icmp eq i8* %3, null, !dbg !4691
  %8 = icmp slt i64 %5, 0, !dbg !4692
  %9 = or i1 %7, %8, !dbg !4693
  br i1 %9, label %37, label %10, !dbg !4693

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !4635, metadata !DIExpression()) #9, !dbg !4694
  call void @llvm.dbg.value(metadata i64 %5, metadata !4637, metadata !DIExpression()) #9, !dbg !4688
  %11 = icmp sgt i64 %5, 0, !dbg !4695
  br i1 %11, label %12, label %32, !dbg !4696

; <label>:12:                                     ; preds = %10
  br label %13, !dbg !4697

; <label>:13:                                     ; preds = %12, %26
  %14 = phi i64 [ %30, %26 ], [ %5, %12 ]
  %15 = phi i8* [ %29, %26 ], [ %3, %12 ]
  call void @llvm.dbg.value(metadata i8* %15, metadata !4635, metadata !DIExpression()) #9, !dbg !4694
  call void @llvm.dbg.value(metadata i64 %14, metadata !4637, metadata !DIExpression()) #9, !dbg !4688
  %16 = load i8, i8* %15, align 1, !dbg !4697, !tbaa !2918
  %17 = icmp eq i8 %16, 0, !dbg !4698
  br i1 %17, label %37, label %18, !dbg !4699

; <label>:18:                                     ; preds = %13
  %19 = load i32, i32* @enc_utf8, align 4, !dbg !4700, !tbaa !2904
  %20 = icmp eq i32 %19, 0, !dbg !4700
  br i1 %20, label %23, label %21, !dbg !4701

; <label>:21:                                     ; preds = %18
  %22 = tail call i32 @utf_ptr2len(i8* nonnull %15) #9, !dbg !4702
  br label %26, !dbg !4703

; <label>:23:                                     ; preds = %18
  %24 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !4704, !tbaa !2783
  %25 = tail call i32 %24(i8* nonnull %15) #9, !dbg !4705
  br label %26

; <label>:26:                                     ; preds = %23, %21
  %27 = phi i32 [ %22, %21 ], [ %25, %23 ]
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %15, i64 %28
  %30 = add nsw i64 %14, -1, !dbg !4706
  call void @llvm.dbg.value(metadata i64 %30, metadata !4637, metadata !DIExpression()) #9, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %29, metadata !4635, metadata !DIExpression()) #9, !dbg !4694
  %31 = icmp sgt i64 %14, 1, !dbg !4695
  br i1 %31, label %13, label %32, !dbg !4696, !llvm.loop !4667

; <label>:32:                                     ; preds = %26, %10
  %33 = phi i8* [ %3, %10 ], [ %29, %26 ]
  %34 = ptrtoint i8* %33 to i64, !dbg !4707
  %35 = ptrtoint i8* %3 to i64, !dbg !4707
  %36 = sub i64 %34, %35, !dbg !4707
  store i64 %36, i64* %6, align 8, !dbg !4708, !tbaa !2918
  br label %37, !dbg !4709

; <label>:37:                                     ; preds = %13, %2, %32
  ret void, !dbg !4710
}

; Function Attrs: nounwind uwtable
define internal void @f_call(%struct.typval_T*, %struct.typval_T*) #0 !dbg !4711 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4713, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4714, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata %struct.partial_S* null, metadata !4716, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata %struct.dictvar_S* null, metadata !4717, metadata !DIExpression()), !dbg !4721
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4722
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %3, i64 0, i32 0, !dbg !4724
  %5 = load i32, i32* %4, align 8, !dbg !4724, !tbaa !3221
  %6 = icmp eq i32 %5, 11, !dbg !4725
  br i1 %6, label %10, label %7, !dbg !4726

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_listreq, i64 0, i64 0), i32 5) #9, !dbg !4727
  %9 = tail call i32 @emsg(i8* %8) #9, !dbg !4729
  br label %47, !dbg !4730

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !4731
  %12 = bitcast %union.anon* %11 to %struct.listvar_S**, !dbg !4733
  %13 = load %struct.listvar_S*, %struct.listvar_S** %12, align 8, !dbg !4733, !tbaa !2918
  %14 = icmp eq %struct.listvar_S* %13, null, !dbg !4734
  br i1 %14, label %47, label %15, !dbg !4735

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4736
  %17 = load i32, i32* %16, align 8, !dbg !4736, !tbaa !3221
  switch i32 %17, label %27 [
    i32 9, label %18
    i32 10, label %22
  ], !dbg !4738

; <label>:18:                                     ; preds = %15
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !4739
  %20 = bitcast %union.anon* %19 to i8**, !dbg !4740
  %21 = load i8*, i8** %20, align 8, !dbg !4740, !tbaa !2918
  call void @llvm.dbg.value(metadata i8* %21, metadata !4715, metadata !DIExpression()), !dbg !4741
  br label %29, !dbg !4742

; <label>:22:                                     ; preds = %15
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !4743
  %24 = bitcast %union.anon* %23 to %struct.partial_S**, !dbg !4746
  %25 = load %struct.partial_S*, %struct.partial_S** %24, align 8, !dbg !4746, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.partial_S* %25, metadata !4716, metadata !DIExpression()), !dbg !4720
  %26 = tail call i8* @partial_name(%struct.partial_S* %25) #9, !dbg !4747
  call void @llvm.dbg.value(metadata i8* %26, metadata !4715, metadata !DIExpression()), !dbg !4741
  br label %29, !dbg !4748

; <label>:27:                                     ; preds = %15
  %28 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %28, metadata !4715, metadata !DIExpression()), !dbg !4741
  br label %29

; <label>:29:                                     ; preds = %22, %27, %18
  %30 = phi i8* [ %21, %18 ], [ %26, %22 ], [ %28, %27 ]
  %31 = phi %struct.partial_S* [ null, %18 ], [ %25, %22 ], [ null, %27 ]
  call void @llvm.dbg.value(metadata %struct.partial_S* %31, metadata !4716, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata i8* %30, metadata !4715, metadata !DIExpression()), !dbg !4741
  %32 = load i8, i8* %30, align 1, !dbg !4750, !tbaa !2918
  %33 = icmp eq i8 %32, 0, !dbg !4752
  br i1 %33, label %47, label %34, !dbg !4753

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 0, !dbg !4754
  %36 = load i32, i32* %35, align 8, !dbg !4754, !tbaa !3221
  switch i32 %36, label %37 [
    i32 0, label %44
    i32 12, label %40
  ], !dbg !4756

; <label>:37:                                     ; preds = %34
  %38 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_dictreq, i64 0, i64 0), i32 5) #9, !dbg !4757
  %39 = tail call i32 @emsg(i8* %38) #9, !dbg !4761
  br label %47, !dbg !4762

; <label>:40:                                     ; preds = %34
  %41 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, !dbg !4763
  %42 = bitcast %union.anon* %41 to %struct.dictvar_S**, !dbg !4764
  %43 = load %struct.dictvar_S*, %struct.dictvar_S** %42, align 8, !dbg !4764, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %43, metadata !4717, metadata !DIExpression()), !dbg !4721
  br label %44, !dbg !4765

; <label>:44:                                     ; preds = %34, %40
  %45 = phi %struct.dictvar_S* [ %43, %40 ], [ null, %34 ]
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %45, metadata !4717, metadata !DIExpression()), !dbg !4721
  %46 = tail call i32 @func_call(i8* %30, %struct.typval_T* nonnull %3, %struct.partial_S* %31, %struct.dictvar_S* %45, %struct.typval_T* %1) #9, !dbg !4766
  br label %47, !dbg !4767

; <label>:47:                                     ; preds = %29, %10, %44, %37, %7
  ret void, !dbg !4767
}

; Function Attrs: nounwind uwtable
define internal void @f_ceil(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !4768 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4770, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4771, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !4772, metadata !DIExpression()), !dbg !4775
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !4776
  store i32 6, i32* %3, align 8, !dbg !4777, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !4772, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !4778
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !4781
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4782
  %5 = load i32, i32* %4, align 8, !dbg !4782, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !4783

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4784
  %8 = bitcast i64* %7 to double*, !dbg !4784
  %9 = load double, double* %8, align 8, !dbg !4784, !tbaa !2918
  br label %14, !dbg !4785

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !4786
  %12 = load i64, i64* %11, align 8, !dbg !4786, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !4787
  br label %14, !dbg !4788

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !4772, metadata !DIExpression()), !dbg !4775
  %16 = tail call double @llvm.ceil.f64(double %15), !dbg !4789
  br label %20, !dbg !4790

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !4791
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !4792
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !4793
}

declare void @f_ch_canread(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_close(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_close_in(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_evalexpr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_evalraw(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_getbufnr(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_job(i32, %struct.type_S** nocapture readnone) #7 !dbg !4794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4796, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4797, metadata !DIExpression()), !dbg !4799
  ret %struct.type_S* @t_job, !dbg !4800
}

declare void @f_ch_getjob(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_dict_any(i32, %struct.type_S** nocapture readnone) #7 !dbg !4801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4803, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4804, metadata !DIExpression()), !dbg !4806
  ret %struct.type_S* @t_dict_any, !dbg !4807
}

declare void @f_ch_info(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_log(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_logfile(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_channel(i32, %struct.type_S** nocapture readnone) #7 !dbg !4808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4810, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4811, metadata !DIExpression()), !dbg !4813
  ret %struct.type_S* @t_channel, !dbg !4814
}

declare void @f_ch_open(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_read(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_blob(i32, %struct.type_S** nocapture readnone) #7 !dbg !4815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4817, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !4818, metadata !DIExpression()), !dbg !4820
  ret %struct.type_S* @t_blob, !dbg !4821
}

declare void @f_ch_readblob(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_readraw(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_sendexpr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_sendraw(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_setoptions(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_ch_status(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_changenr(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !4822 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4824, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4825, metadata !DIExpression()), !dbg !4827
  %3 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4828, !tbaa !2783
  %4 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %3, i64 0, i32 54, !dbg !4829
  %5 = load i64, i64* %4, align 8, !dbg !4829, !tbaa !4830
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4840
  store i64 %5, i64* %6, align 8, !dbg !4841, !tbaa !2918
  ret void, !dbg !4842
}

; Function Attrs: nounwind uwtable
define internal void @f_char2nr(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4843 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4845, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4846, metadata !DIExpression()), !dbg !4851
  %3 = tail call i32 @in_vim9script() #9, !dbg !4852
  %4 = icmp eq i32 %3, 0, !dbg !4852
  br i1 %4, label %8, label %5, !dbg !4854

; <label>:5:                                      ; preds = %2
  %6 = tail call i32 @check_for_string_arg(%struct.typval_T* %0, i32 0) #9, !dbg !4855
  %7 = icmp eq i32 %6, 0, !dbg !4856
  br i1 %7, label %36, label %8, !dbg !4857

; <label>:8:                                      ; preds = %2, %5
  %9 = load i32, i32* @has_mbyte, align 4, !dbg !4858, !tbaa !2904
  %10 = icmp eq i32 %9, 0, !dbg !4858
  br i1 %10, label %29, label %11, !dbg !4859

; <label>:11:                                     ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !4847, metadata !DIExpression()), !dbg !4860
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4861
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %12, i64 0, i32 0, !dbg !4863
  %14 = load i32, i32* %13, align 8, !dbg !4863, !tbaa !3221
  %15 = icmp eq i32 %14, 0, !dbg !4864
  br i1 %15, label %24, label %16, !dbg !4865

; <label>:16:                                     ; preds = %11
  %17 = tail call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %12, i32* null) #9, !dbg !4866
  %18 = trunc i64 %17 to i32, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %18, metadata !4847, metadata !DIExpression()), !dbg !4860
  %19 = icmp eq i32 %18, 0, !dbg !4868
  br i1 %19, label %24, label %20, !dbg !4869

; <label>:20:                                     ; preds = %16
  %21 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !4870
  %22 = tail call i32 @utf_ptr2char(i8* %21) #9, !dbg !4872
  %23 = sext i32 %22 to i64, !dbg !4872
  br label %33, !dbg !4873

; <label>:24:                                     ; preds = %16, %11
  %25 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !4874, !tbaa !2783
  %26 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !4875
  %27 = tail call i32 %25(i8* %26) #9, !dbg !4876
  %28 = sext i32 %27 to i64, !dbg !4876
  br label %33

; <label>:29:                                     ; preds = %8
  %30 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !4877
  %31 = load i8, i8* %30, align 1, !dbg !4877, !tbaa !2918
  %32 = zext i8 %31 to i64, !dbg !4877
  br label %33

; <label>:33:                                     ; preds = %29, %24, %20
  %34 = phi i64 [ %23, %20 ], [ %28, %24 ], [ %32, %29 ]
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %34, i64* %35, align 8, !tbaa !2918
  br label %36, !dbg !4878

; <label>:36:                                     ; preds = %33, %5
  ret void, !dbg !4878
}

declare void @f_charclass(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_charcol(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4879 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4881, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4882, metadata !DIExpression()), !dbg !4884
  tail call fastcc void @get_col(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !4885
  ret void, !dbg !4886
}

; Function Attrs: nounwind uwtable
define internal void @f_charidx(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4887 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4889, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4890, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i64 0, metadata !4893, metadata !DIExpression()), !dbg !4900
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !4901
  store i64 -1, i64* %3, align 8, !dbg !4902, !tbaa !2918
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !4903
  %5 = load i32, i32* %4, align 8, !dbg !4903, !tbaa !3221
  %6 = icmp eq i32 %5, 7, !dbg !4905
  br i1 %6, label %7, label %16, !dbg !4906

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !4907
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %8, i64 0, i32 0, !dbg !4908
  %10 = load i32, i32* %9, align 8, !dbg !4908, !tbaa !3221
  %11 = icmp eq i32 %10, 5, !dbg !4909
  br i1 %11, label %12, label %16, !dbg !4910

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !4911
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %13, i64 0, i32 0, !dbg !4912
  %15 = load i32, i32* %14, align 8, !dbg !4912, !tbaa !3221
  switch i32 %15, label %16 [
    i32 0, label %19
    i32 5, label %19
  ], !dbg !4913

; <label>:16:                                     ; preds = %12, %7, %2
  %17 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i32 5) #9, !dbg !4914
  %18 = tail call i32 @emsg(i8* %17) #9, !dbg !4916
  br label %56, !dbg !4917

; <label>:19:                                     ; preds = %12, %12
  %20 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %20, metadata !4891, metadata !DIExpression()), !dbg !4919
  %21 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %8, i32* null) #9, !dbg !4920
  call void @llvm.dbg.value(metadata i64 %21, metadata !4892, metadata !DIExpression()), !dbg !4921
  %22 = icmp eq i8* %20, null, !dbg !4922
  %23 = icmp slt i64 %21, 0, !dbg !4924
  %24 = or i1 %22, %23, !dbg !4925
  br i1 %24, label %56, label %25, !dbg !4925

; <label>:25:                                     ; preds = %19
  %26 = load i32, i32* %14, align 8, !dbg !4926, !tbaa !3221
  %27 = icmp eq i32 %26, 0, !dbg !4928
  br i1 %27, label %34, label %28, !dbg !4929

; <label>:28:                                     ; preds = %25
  %29 = tail call i64 @tv_get_bool(%struct.typval_T* nonnull %13) #9, !dbg !4930
  call void @llvm.dbg.value(metadata i64 %29, metadata !4893, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i64 %29, metadata !4893, metadata !DIExpression()), !dbg !4900
  %30 = icmp ugt i64 %29, 1, !dbg !4931
  br i1 %30, label %31, label %34, !dbg !4931

; <label>:31:                                     ; preds = %28
  %32 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_using_number_as_bool_nr, i64 0, i64 0), i32 5) #9, !dbg !4933
  %33 = tail call i32 (i8*, ...) @semsg(i8* %32, i64 %29) #9, !dbg !4935
  br label %56, !dbg !4936

; <label>:34:                                     ; preds = %28, %25
  %35 = phi i64 [ %29, %28 ], [ 0, %25 ]
  %36 = load i32, i32* @enc_utf8, align 4, !dbg !4937, !tbaa !2904
  %37 = icmp ne i32 %36, 0, !dbg !4937
  %38 = icmp ne i64 %35, 0, !dbg !4939
  %39 = and i1 %38, %37, !dbg !4940
  %40 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !4941
  call void @llvm.dbg.value(metadata i32 (i8*)* %40, metadata !4896, metadata !DIExpression()), !dbg !4942
  %41 = select i1 %39, i32 (i8*)* @utf_ptr2len, i32 (i8*)* %40, !dbg !4940
  call void @llvm.dbg.value(metadata i32 (i8*)* %41, metadata !4896, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %20, metadata !4894, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i32 0, metadata !4895, metadata !DIExpression()), !dbg !4944
  %42 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !4945
  br label %43, !dbg !4948

; <label>:43:                                     ; preds = %34, %48
  %44 = phi i32 [ 0, %34 ], [ %52, %48 ]
  %45 = phi i8* [ %20, %34 ], [ %51, %48 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !4894, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i32 %44, metadata !4895, metadata !DIExpression()), !dbg !4944
  %46 = load i8, i8* %45, align 1, !dbg !4949, !tbaa !2918
  %47 = icmp eq i8 %46, 0, !dbg !4952
  br i1 %47, label %56, label %48, !dbg !4953

; <label>:48:                                     ; preds = %43
  %49 = tail call i32 %41(i8* nonnull %45) #9, !dbg !4954
  %50 = sext i32 %49 to i64, !dbg !4955
  %51 = getelementptr inbounds i8, i8* %45, i64 %50, !dbg !4955
  %52 = add nuw nsw i32 %44, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %52, metadata !4895, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8* %51, metadata !4894, metadata !DIExpression()), !dbg !4943
  %53 = icmp ugt i8* %51, %42, !dbg !4957
  br i1 %53, label %54, label %43, !dbg !4948, !llvm.loop !4958

; <label>:54:                                     ; preds = %48
  %55 = zext i32 %44 to i64, !dbg !4960
  store i64 %55, i64* %3, align 8, !dbg !4961, !tbaa !2918
  br label %56, !dbg !4962

; <label>:56:                                     ; preds = %43, %19, %54, %31, %16
  ret void, !dbg !4962
}

declare void @f_chdir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_cindent(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_clearmatches(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_col(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4963 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4965, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4966, metadata !DIExpression()), !dbg !4968
  tail call fastcc void @get_col(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !4969
  ret void, !dbg !4970
}

declare void @f_complete(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_complete_add(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_complete_check(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_complete_info(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_confirm(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !4971 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4973, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !4974, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i8* null, metadata !4976, metadata !DIExpression()), !dbg !4985
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !4986
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !4986
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !4977, metadata !DIExpression()), !dbg !4987
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !4988
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !4988
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !4978, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 1, metadata !4979, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4980, metadata !DIExpression()), !dbg !4991
  %8 = bitcast i32* %5 to i8*, !dbg !4992
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9, !dbg !4992
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4993
  store i32 0, i32* %5, align 4, !dbg !4993, !tbaa !2904
  %9 = tail call i32 @in_vim9script() #9, !dbg !4994
  %10 = icmp eq i32 %9, 0, !dbg !4994
  br i1 %10, label %14, label %11, !dbg !4996

; <label>:11:                                     ; preds = %2
  %12 = tail call i32 @check_for_string_arg(%struct.typval_T* %0, i32 0) #9, !dbg !4997
  %13 = icmp eq i32 %12, 0, !dbg !4998
  br i1 %13, label %90, label %14, !dbg !4999

; <label>:14:                                     ; preds = %2, %11
  %15 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !5000
  call void @llvm.dbg.value(metadata i8* %15, metadata !4975, metadata !DIExpression()), !dbg !5001
  %16 = icmp eq i8* %15, null, !dbg !5002
  br i1 %16, label %17, label %18, !dbg !5004

; <label>:17:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !4982, metadata !DIExpression()), !dbg !4993
  store i32 1, i32* %5, align 4, !dbg !5005, !tbaa !2904
  br label %18, !dbg !5006

; <label>:18:                                     ; preds = %17, %14
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !5007
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %19, i64 0, i32 0, !dbg !5009
  %21 = load i32, i32* %20, align 8, !dbg !5009, !tbaa !3221
  %22 = icmp eq i32 %21, 0, !dbg !5010
  br i1 %22, label %76, label %23, !dbg !5011

; <label>:23:                                     ; preds = %18
  %24 = tail call i32 @in_vim9script() #9, !dbg !5012
  %25 = icmp eq i32 %24, 0, !dbg !5012
  br i1 %25, label %29, label %26, !dbg !5015

; <label>:26:                                     ; preds = %23
  %27 = tail call i32 @check_for_string_arg(%struct.typval_T* nonnull %0, i32 1) #9, !dbg !5016
  %28 = icmp eq i32 %27, 0, !dbg !5017
  br i1 %28, label %90, label %29, !dbg !5018

; <label>:29:                                     ; preds = %23, %26
  %30 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %19, i8* nonnull %6) #9, !dbg !5019
  call void @llvm.dbg.value(metadata i8* %30, metadata !4976, metadata !DIExpression()), !dbg !4985
  %31 = icmp eq i8* %30, null, !dbg !5020
  br i1 %31, label %32, label %33, !dbg !5022

; <label>:32:                                     ; preds = %29
  call void @llvm.dbg.value(metadata i32 1, metadata !4982, metadata !DIExpression()), !dbg !4993
  store i32 1, i32* %5, align 4, !dbg !5023, !tbaa !2904
  br label %33, !dbg !5024

; <label>:33:                                     ; preds = %32, %29
  %34 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !5025
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %34, i64 0, i32 0, !dbg !5027
  %36 = load i32, i32* %35, align 8, !dbg !5027, !tbaa !3221
  %37 = icmp eq i32 %36, 0, !dbg !5028
  br i1 %37, label %70, label %38, !dbg !5029

; <label>:38:                                     ; preds = %33
  call void @llvm.dbg.value(metadata i32* %5, metadata !4982, metadata !DIExpression()), !dbg !4993
  %39 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %34, i32* nonnull %5) #9, !dbg !5030
  %40 = trunc i64 %39 to i32, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %40, metadata !4979, metadata !DIExpression()), !dbg !4990
  %41 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !5033
  %42 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %41, i64 0, i32 0, !dbg !5035
  %43 = load i32, i32* %42, align 8, !dbg !5035, !tbaa !3221
  %44 = icmp eq i32 %43, 0, !dbg !5036
  br i1 %44, label %70, label %45, !dbg !5037

; <label>:45:                                     ; preds = %38
  %46 = call i32 @in_vim9script() #9, !dbg !5038
  %47 = icmp eq i32 %46, 0, !dbg !5038
  br i1 %47, label %51, label %48, !dbg !5041

; <label>:48:                                     ; preds = %45
  %49 = call i32 @check_for_string_arg(%struct.typval_T* nonnull %0, i32 3) #9, !dbg !5042
  %50 = icmp eq i32 %49, 0, !dbg !5043
  br i1 %50, label %90, label %51, !dbg !5044

; <label>:51:                                     ; preds = %45, %48
  %52 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %41, i8* nonnull %7) #9, !dbg !5045
  call void @llvm.dbg.value(metadata i8* %52, metadata !4981, metadata !DIExpression()), !dbg !5046
  %53 = icmp eq i8* %52, null, !dbg !5047
  br i1 %53, label %54, label %55, !dbg !5049

; <label>:54:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i32 1, metadata !4982, metadata !DIExpression()), !dbg !4993
  store i32 1, i32* %5, align 4, !dbg !5050, !tbaa !2904
  br label %70, !dbg !5051

; <label>:55:                                     ; preds = %51
  %56 = load i8, i8* %52, align 1, !dbg !5052, !tbaa !2918
  %57 = zext i8 %56 to i32, !dbg !5052
  %58 = add i8 %56, -97, !dbg !5052
  %59 = icmp ugt i8 %58, 25, !dbg !5052
  %60 = add nsw i32 %57, -32, !dbg !5052
  %61 = select i1 %59, i32 %57, i32 %60, !dbg !5052
  %62 = add nsw i32 %61, -69, !dbg !5054
  %63 = lshr i32 %62, 1, !dbg !5054
  %64 = shl i32 %62, 31, !dbg !5054
  %65 = or i32 %63, %64, !dbg !5054
  switch i32 %65, label %70 [
    i32 0, label %66
    i32 6, label %67
    i32 2, label %68
    i32 9, label %69
  ], !dbg !5054

; <label>:66:                                     ; preds = %55
  call void @llvm.dbg.value(metadata i32 1, metadata !4980, metadata !DIExpression()), !dbg !4991
  br label %70, !dbg !5055

; <label>:67:                                     ; preds = %55
  call void @llvm.dbg.value(metadata i32 4, metadata !4980, metadata !DIExpression()), !dbg !4991
  br label %70, !dbg !5057

; <label>:68:                                     ; preds = %55
  call void @llvm.dbg.value(metadata i32 3, metadata !4980, metadata !DIExpression()), !dbg !4991
  br label %70, !dbg !5058

; <label>:69:                                     ; preds = %55
  call void @llvm.dbg.value(metadata i32 2, metadata !4980, metadata !DIExpression()), !dbg !4991
  br label %70, !dbg !5059

; <label>:70:                                     ; preds = %38, %33, %54, %55, %69, %68, %67, %66
  %71 = phi i32 [ %40, %54 ], [ %40, %69 ], [ %40, %68 ], [ %40, %67 ], [ %40, %66 ], [ %40, %38 ], [ 1, %33 ], [ %40, %55 ]
  %72 = phi i32 [ 0, %54 ], [ 2, %69 ], [ 3, %68 ], [ 4, %67 ], [ 1, %66 ], [ 0, %38 ], [ 0, %33 ], [ 0, %55 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !4976, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.value(metadata i32 %72, metadata !4980, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 %71, metadata !4979, metadata !DIExpression()), !dbg !4990
  br i1 %31, label %76, label %73, !dbg !5060

; <label>:73:                                     ; preds = %70
  %74 = load i8, i8* %30, align 1, !dbg !5062, !tbaa !2918
  %75 = icmp eq i8 %74, 0, !dbg !5063
  br i1 %75, label %76, label %80, !dbg !5064

; <label>:76:                                     ; preds = %18, %73, %70
  %77 = phi i32 [ %72, %73 ], [ %72, %70 ], [ 0, %18 ]
  %78 = phi i32 [ %71, %73 ], [ %71, %70 ], [ 1, %18 ]
  %79 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.719, i64 0, i64 0), i32 5) #9, !dbg !5065
  call void @llvm.dbg.value(metadata i8* %79, metadata !4976, metadata !DIExpression()), !dbg !4985
  br label %80, !dbg !5066

; <label>:80:                                     ; preds = %76, %73
  %81 = phi i32 [ %77, %76 ], [ %72, %73 ]
  %82 = phi i32 [ %78, %76 ], [ %71, %73 ]
  %83 = phi i8* [ %79, %76 ], [ %30, %73 ]
  call void @llvm.dbg.value(metadata i8* %83, metadata !4976, metadata !DIExpression()), !dbg !4985
  %84 = load i32, i32* %5, align 4, !dbg !5067, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %84, metadata !4982, metadata !DIExpression()), !dbg !4993
  %85 = icmp eq i32 %84, 0, !dbg !5067
  br i1 %85, label %86, label %90, !dbg !5069

; <label>:86:                                     ; preds = %80
  %87 = call i32 @do_dialog(i32 %81, i8* null, i8* %15, i8* %83, i32 %82, i8* null, i32 0) #9, !dbg !5070
  %88 = sext i32 %87 to i64, !dbg !5070
  %89 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5071
  store i64 %88, i64* %89, align 8, !dbg !5072, !tbaa !2918
  br label %90, !dbg !5073

; <label>:90:                                     ; preds = %86, %80, %48, %26, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9, !dbg !5074
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !5074
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !5074
  ret void, !dbg !5074
}

; Function Attrs: nounwind uwtable
define internal void @f_copy(%struct.typval_T*, %struct.typval_T*) #0 !dbg !5075 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5078, metadata !DIExpression()), !dbg !5080
  %3 = tail call i32 @item_copy(%struct.typval_T* %0, %struct.typval_T* %1, i32 0, i32 0) #9, !dbg !5081
  ret void, !dbg !5082
}

; Function Attrs: nounwind uwtable
define internal void @f_cos(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5083 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5085, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5086, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5087, metadata !DIExpression()), !dbg !5090
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5091
  store i32 6, i32* %3, align 8, !dbg !5092, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !5087, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !5093
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !5096
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5097
  %5 = load i32, i32* %4, align 8, !dbg !5097, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !5098

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5099
  %8 = bitcast i64* %7 to double*, !dbg !5099
  %9 = load double, double* %8, align 8, !dbg !5099, !tbaa !2918
  br label %14, !dbg !5100

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5101
  %12 = load i64, i64* %11, align 8, !dbg !5101, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !5102
  br label %14, !dbg !5103

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !5087, metadata !DIExpression()), !dbg !5090
  %16 = tail call double @cos(double %15) #9, !dbg !5104
  br label %20, !dbg !5105

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !5106
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !5107
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !5108
}

; Function Attrs: nounwind uwtable
define internal void @f_cosh(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5109 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5111, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5112, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5113, metadata !DIExpression()), !dbg !5116
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5117
  store i32 6, i32* %3, align 8, !dbg !5118, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !5113, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !5119
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !5122
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5123
  %5 = load i32, i32* %4, align 8, !dbg !5123, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !5124

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5125
  %8 = bitcast i64* %7 to double*, !dbg !5125
  %9 = load double, double* %8, align 8, !dbg !5125, !tbaa !2918
  br label %14, !dbg !5126

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5127
  %12 = load i64, i64* %11, align 8, !dbg !5127, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !5128
  br label %14, !dbg !5129

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !5113, metadata !DIExpression()), !dbg !5116
  %16 = tail call double @cosh(double %15) #9, !dbg !5130
  br label %20, !dbg !5131

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !5132
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !5133
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !5134
}

declare void @f_count(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_cscope_connection(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_cursor(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !5135 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5137, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5138, metadata !DIExpression()), !dbg !5140
  tail call fastcc void @set_cursorpos(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !5141
  ret void, !dbg !5142
}

; Function Attrs: nounwind uwtable
define internal void @f_deepcopy(%struct.typval_T*, %struct.typval_T*) #0 !dbg !5143 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5146, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i64 0, metadata !5147, metadata !DIExpression()), !dbg !5151
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !5152
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %3, i64 0, i32 0, !dbg !5154
  %5 = load i32, i32* %4, align 8, !dbg !5154, !tbaa !3221
  %6 = icmp eq i32 %5, 0, !dbg !5155
  br i1 %6, label %7, label %9, !dbg !5156

; <label>:7:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i64 %10, metadata !5147, metadata !DIExpression()), !dbg !5151
  %8 = tail call i32 @get_copyID() #9, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %16, metadata !5148, metadata !DIExpression()), !dbg !5160
  br label %18, !dbg !5161

; <label>:9:                                      ; preds = %2
  %10 = tail call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %3, i32* null) #9, !dbg !5162
  call void @llvm.dbg.value(metadata i64 %10, metadata !5147, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i64 %10, metadata !5147, metadata !DIExpression()), !dbg !5151
  %11 = icmp ugt i64 %10, 1, !dbg !5163
  br i1 %11, label %12, label %15, !dbg !5163

; <label>:12:                                     ; preds = %9
  %13 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_using_number_as_bool_nr, i64 0, i64 0), i32 5) #9, !dbg !5164
  %14 = tail call i32 (i8*, ...) @semsg(i8* %13, i64 %10) #9, !dbg !5165
  br label %23, !dbg !5165

; <label>:15:                                     ; preds = %9
  %16 = tail call i32 @get_copyID() #9, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %16, metadata !5148, metadata !DIExpression()), !dbg !5160
  %17 = icmp eq i64 %10, 0, !dbg !5166
  br i1 %17, label %18, label %20, !dbg !5161

; <label>:18:                                     ; preds = %7, %15
  %19 = phi i32 [ %8, %7 ], [ %16, %15 ]
  br label %20, !dbg !5161

; <label>:20:                                     ; preds = %15, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %15 ]
  %22 = tail call i32 @item_copy(%struct.typval_T* nonnull %0, %struct.typval_T* %1, i32 1, i32 %21) #9, !dbg !5167
  br label %23

; <label>:23:                                     ; preds = %20, %12
  ret void, !dbg !5168
}

declare void @f_delete(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_deletebufline(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_did_filetype(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !5169 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5171, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5172, metadata !DIExpression()), !dbg !5174
  %3 = load i32, i32* @did_filetype, align 4, !dbg !5175, !tbaa !2904
  %4 = sext i32 %3 to i64, !dbg !5175
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5176
  store i64 %4, i64* %5, align 8, !dbg !5177, !tbaa !2918
  ret void, !dbg !5178
}

declare void @f_diff_filler(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_diff_hlID(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_echoraw(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !5179 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5181, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5182, metadata !DIExpression()), !dbg !5185
  %3 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %3, metadata !5183, metadata !DIExpression()), !dbg !5187
  %4 = icmp eq i8* %3, null, !dbg !5188
  br i1 %4, label %9, label %5, !dbg !5190

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* %3, align 1, !dbg !5191, !tbaa !2918
  %7 = icmp eq i8 %6, 0, !dbg !5192
  br i1 %7, label %9, label %8, !dbg !5193

; <label>:8:                                      ; preds = %5
  tail call void @out_str(i8* nonnull %3) #9, !dbg !5194
  tail call void @out_flush() #9, !dbg !5196
  br label %9, !dbg !5197

; <label>:9:                                      ; preds = %5, %2, %8
  ret void, !dbg !5198
}

; Function Attrs: nounwind uwtable
define internal void @f_empty(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5199 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5201, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5202, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i32 0, metadata !5203, metadata !DIExpression()), !dbg !5206
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5207
  %4 = load i32, i32* %3, align 8, !dbg !5207, !tbaa !3221
  switch i32 %4, label %71 [
    i32 7, label %5
    i32 9, label %5
    i32 2, label %70
    i32 5, label %13
    i32 6, label %17
    i32 11, label %22
    i32 12, label %31
    i32 3, label %40
    i32 4, label %40
    i32 8, label %44
    i32 13, label %53
    i32 14, label %62
    i32 0, label %70
    i32 1, label %70
  ], !dbg !5208

; <label>:5:                                      ; preds = %2, %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5209
  %7 = bitcast %union.anon* %6 to i8**, !dbg !5211
  %8 = load i8*, i8** %7, align 8, !dbg !5211, !tbaa !2918
  %9 = icmp eq i8* %8, null, !dbg !5212
  br i1 %9, label %71, label %10, !dbg !5213

; <label>:10:                                     ; preds = %5
  %11 = load i8, i8* %8, align 1, !dbg !5214, !tbaa !2918
  %12 = icmp eq i8 %11, 0, !dbg !5215
  br label %71, !dbg !5213

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5216
  %15 = load i64, i64* %14, align 8, !dbg !5216, !tbaa !2918
  %16 = icmp eq i64 %15, 0, !dbg !5217
  br label %71, !dbg !5218

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5219
  %19 = bitcast %union.anon* %18 to double*, !dbg !5220
  %20 = load double, double* %19, align 8, !dbg !5220, !tbaa !2918
  %21 = fcmp oeq double %20, 0.000000e+00, !dbg !5221
  br label %71, !dbg !5222

; <label>:22:                                     ; preds = %2
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5223
  %24 = bitcast %union.anon* %23 to %struct.listvar_S**, !dbg !5224
  %25 = load %struct.listvar_S*, %struct.listvar_S** %24, align 8, !dbg !5224, !tbaa !2918
  %26 = icmp eq %struct.listvar_S* %25, null, !dbg !5225
  br i1 %26, label %71, label %27, !dbg !5226

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %25, i64 0, i32 8, !dbg !5227
  %29 = load i32, i32* %28, align 4, !dbg !5227, !tbaa !3541
  %30 = icmp eq i32 %29, 0, !dbg !5228
  br label %71, !dbg !5226

; <label>:31:                                     ; preds = %2
  %32 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5229
  %33 = bitcast %union.anon* %32 to %struct.dictvar_S**, !dbg !5230
  %34 = load %struct.dictvar_S*, %struct.dictvar_S** %33, align 8, !dbg !5230, !tbaa !2918
  %35 = icmp eq %struct.dictvar_S* %34, null, !dbg !5231
  br i1 %35, label %71, label %36, !dbg !5232

; <label>:36:                                     ; preds = %31
  %37 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %34, i64 0, i32 4, i32 1, !dbg !5233
  %38 = load i64, i64* %37, align 8, !dbg !5233, !tbaa !5234
  %39 = icmp eq i64 %38, 0, !dbg !5236
  br label %71, !dbg !5232

; <label>:40:                                     ; preds = %2, %2
  %41 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5237
  %42 = load i64, i64* %41, align 8, !dbg !5237, !tbaa !2918
  %43 = icmp ne i64 %42, 1, !dbg !5238
  br label %71, !dbg !5239

; <label>:44:                                     ; preds = %2
  %45 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5240
  %46 = bitcast %union.anon* %45 to %struct.blobvar_S**, !dbg !5241
  %47 = load %struct.blobvar_S*, %struct.blobvar_S** %46, align 8, !dbg !5241, !tbaa !2918
  %48 = icmp eq %struct.blobvar_S* %47, null, !dbg !5242
  br i1 %48, label %71, label %49, !dbg !5243

; <label>:49:                                     ; preds = %44
  %50 = getelementptr inbounds %struct.blobvar_S, %struct.blobvar_S* %47, i64 0, i32 0, i32 0, !dbg !5244
  %51 = load i32, i32* %50, align 8, !dbg !5244, !tbaa !5245
  %52 = icmp eq i32 %51, 0, !dbg !5247
  br label %71, !dbg !5243

; <label>:53:                                     ; preds = %2
  %54 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5248
  %55 = bitcast %union.anon* %54 to %struct.jobvar_S**, !dbg !5249
  %56 = load %struct.jobvar_S*, %struct.jobvar_S** %55, align 8, !dbg !5249, !tbaa !2918
  %57 = icmp eq %struct.jobvar_S* %56, null, !dbg !5250
  br i1 %57, label %71, label %58, !dbg !5251

; <label>:58:                                     ; preds = %53
  %59 = getelementptr inbounds %struct.jobvar_S, %struct.jobvar_S* %56, i64 0, i32 5, !dbg !5252
  %60 = load i32, i32* %59, align 8, !dbg !5252, !tbaa !5253
  %61 = icmp ne i32 %60, 1, !dbg !5255
  br label %71, !dbg !5251

; <label>:62:                                     ; preds = %2
  %63 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !5256
  %64 = bitcast %union.anon* %63 to %struct.channel_S**, !dbg !5257
  %65 = load %struct.channel_S*, %struct.channel_S** %64, align 8, !dbg !5257, !tbaa !2918
  %66 = icmp eq %struct.channel_S* %65, null, !dbg !5258
  br i1 %66, label %71, label %67, !dbg !5259

; <label>:67:                                     ; preds = %62
  %68 = tail call i32 @channel_is_open(%struct.channel_S* nonnull %65) #9, !dbg !5260
  %69 = icmp eq i32 %68, 0, !dbg !5261
  br label %71, !dbg !5259

; <label>:70:                                     ; preds = %2, %2, %2
  tail call void @internal_error_no_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.720, i64 0, i64 0)) #9, !dbg !5262
  call void @llvm.dbg.value(metadata i32 1, metadata !5203, metadata !DIExpression()), !dbg !5206
  br label %71, !dbg !5263

; <label>:71:                                     ; preds = %62, %67, %53, %58, %44, %49, %31, %36, %22, %27, %5, %10, %2, %70, %40, %17, %13
  %72 = phi i1 [ true, %70 ], [ %43, %40 ], [ %21, %17 ], [ %16, %13 ], [ true, %5 ], [ %12, %10 ], [ false, %2 ], [ true, %22 ], [ %30, %27 ], [ true, %31 ], [ %39, %36 ], [ true, %44 ], [ %52, %49 ], [ true, %53 ], [ %61, %58 ], [ true, %62 ], [ %69, %67 ]
  %73 = zext i1 %72 to i64, !dbg !5264
  %74 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5265
  store i64 %73, i64* %74, align 8, !dbg !5266, !tbaa !2918
  ret void, !dbg !5267
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_dict_string(i32, %struct.type_S** nocapture readnone) #7 !dbg !5268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5270, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !5271, metadata !DIExpression()), !dbg !5273
  ret %struct.type_S* @t_dict_string, !dbg !5274
}

; Function Attrs: nounwind uwtable
define internal void @f_environ(%struct.typval_T* nocapture readnone, %struct.typval_T*) #0 !dbg !5275 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5277, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5278, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 0, metadata !5279, metadata !DIExpression()), !dbg !5284
  %3 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !5285
  %4 = icmp eq i32 %3, 1, !dbg !5287
  br i1 %4, label %5, label %31, !dbg !5288

; <label>:5:                                      ; preds = %2
  %6 = load i8**, i8*** @environ, align 8, !dbg !5289, !tbaa !2783
  %7 = load i8*, i8** %6, align 8, !dbg !5291, !tbaa !2783
  %8 = icmp eq i8* %7, null, !dbg !5292
  br i1 %8, label %31, label %9, !dbg !5293

; <label>:9:                                      ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !5279, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %7, metadata !5280, metadata !DIExpression()), !dbg !5294
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %11 = bitcast %union.anon* %10 to %struct.dictvar_S**
  br label %12, !dbg !5295

; <label>:12:                                     ; preds = %9, %25
  %13 = phi i64 [ 0, %9 ], [ %26, %25 ]
  %14 = phi i8* [ %7, %9 ], [ %29, %25 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !5279, metadata !DIExpression()), !dbg !5284
  %15 = tail call i8* @vim_strsave(i8* nonnull %14) #9, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %15, metadata !5280, metadata !DIExpression()), !dbg !5294
  %16 = icmp eq i8* %15, null, !dbg !5300
  br i1 %16, label %31, label %17, !dbg !5302

; <label>:17:                                     ; preds = %12
  %18 = tail call i8* @vim_strchr(i8* nonnull %15, i32 61) #9, !dbg !5303
  call void @llvm.dbg.value(metadata i8* %18, metadata !5281, metadata !DIExpression()), !dbg !5305
  %19 = icmp eq i8* %18, null, !dbg !5306
  br i1 %19, label %20, label %21, !dbg !5307

; <label>:20:                                     ; preds = %17
  tail call void @vim_free(i8* nonnull %15) #9, !dbg !5308
  br label %25, !dbg !5310

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5311
  call void @llvm.dbg.value(metadata i8* %22, metadata !5281, metadata !DIExpression()), !dbg !5305
  store i8 0, i8* %18, align 1, !dbg !5312, !tbaa !2918
  %23 = load %struct.dictvar_S*, %struct.dictvar_S** %11, align 8, !dbg !5313, !tbaa !2918
  %24 = tail call i32 @dict_add_string(%struct.dictvar_S* %23, i8* nonnull %15, i8* nonnull %22) #9, !dbg !5314
  tail call void @vim_free(i8* nonnull %15) #9, !dbg !5315
  br label %25, !dbg !5316

; <label>:25:                                     ; preds = %21, %20
  %26 = add nuw i64 %13, 1, !dbg !5317
  %27 = load i8**, i8*** @environ, align 8, !dbg !5318, !tbaa !2783
  %28 = getelementptr inbounds i8*, i8** %27, i64 %26, !dbg !5318
  %29 = load i8*, i8** %28, align 8, !dbg !5318, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %29, metadata !5280, metadata !DIExpression()), !dbg !5294
  %30 = icmp eq i8* %29, null, !dbg !5320
  br i1 %30, label %31, label %12, !dbg !5295, !llvm.loop !5321

; <label>:31:                                     ; preds = %25, %12, %5, %2
  ret void, !dbg !5324
}

; Function Attrs: nounwind uwtable
define internal void @f_escape(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !5325 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5327, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5328, metadata !DIExpression()), !dbg !5331
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !5332
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !5332
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !5329, metadata !DIExpression()), !dbg !5333
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !5334
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !5335
  %7 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %6, i8* nonnull %4) #9, !dbg !5336
  %8 = call i8* @vim_strsave_escaped(i8* %5, i8* %7) #9, !dbg !5337
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !5338
  %10 = bitcast %union.anon* %9 to i8**, !dbg !5339
  store i8* %8, i8** %10, align 8, !dbg !5340, !tbaa !2918
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5341
  store i32 7, i32* %11, align 8, !dbg !5342, !tbaa !3221
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !5343
  ret void, !dbg !5343
}

; Function Attrs: nounwind uwtable
define internal void @f_eval(%struct.typval_T*, %struct.typval_T*) #0 !dbg !5344 {
  %3 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5346, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5347, metadata !DIExpression()), !dbg !5351
  %4 = bitcast i8** %3 to i8*, !dbg !5352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !5352
  %5 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !5353
  call void @llvm.dbg.value(metadata i8* %5, metadata !5348, metadata !DIExpression()), !dbg !5354
  store i8* %5, i8** %3, align 8, !dbg !5355, !tbaa !2783
  %6 = icmp eq i8* %5, null, !dbg !5356
  br i1 %6, label %19, label %7, !dbg !5358

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @skipwhite(i8* nonnull %5) #9, !dbg !5359
  call void @llvm.dbg.value(metadata i8* %8, metadata !5348, metadata !DIExpression()), !dbg !5354
  store i8* %8, i8** %3, align 8, !dbg !5360, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %8, metadata !5348, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8* %8, metadata !5349, metadata !DIExpression()), !dbg !5361
  %9 = icmp eq i8* %8, null, !dbg !5362
  br i1 %9, label %19, label %10, !dbg !5362

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.value(metadata i8** %3, metadata !5348, metadata !DIExpression()), !dbg !5354
  %11 = call i32 @eval1(i8** nonnull %3, %struct.typval_T* %1, %struct.evalarg_T* nonnull @EVALARG_EVALUATE) #9, !dbg !5364
  %12 = icmp eq i32 %11, 0, !dbg !5365
  br i1 %12, label %13, label %22, !dbg !5366

; <label>:13:                                     ; preds = %10
  %14 = call i32 @aborting() #9, !dbg !5367
  %15 = icmp eq i32 %14, 0, !dbg !5367
  br i1 %15, label %16, label %19, !dbg !5370

; <label>:16:                                     ; preds = %13
  %17 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invexpr2, i64 0, i64 0), i32 5) #9, !dbg !5371
  %18 = call i32 (i8*, ...) @semsg(i8* %17, i8* nonnull %8) #9, !dbg !5372
  br label %19, !dbg !5372

; <label>:19:                                     ; preds = %2, %7, %13, %16
  store i32 0, i32* @need_clr_eos, align 4, !dbg !5373, !tbaa !2904
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5374
  store i32 5, i32* %20, align 8, !dbg !5375, !tbaa !3221
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5376
  store i64 0, i64* %21, align 8, !dbg !5377, !tbaa !2918
  br label %30, !dbg !5378

; <label>:22:                                     ; preds = %10
  %23 = load i8*, i8** %3, align 8, !dbg !5379, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %23, metadata !5348, metadata !DIExpression()), !dbg !5354
  %24 = load i8, i8* %23, align 1, !dbg !5381, !tbaa !2918
  %25 = icmp eq i8 %24, 0, !dbg !5382
  br i1 %25, label %30, label %26, !dbg !5383

; <label>:26:                                     ; preds = %22
  %27 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_trailing_arg, i64 0, i64 0), i32 5) #9, !dbg !5384
  %28 = load i8*, i8** %3, align 8, !dbg !5385, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %28, metadata !5348, metadata !DIExpression()), !dbg !5354
  %29 = call i32 (i8*, ...) @semsg(i8* %27, i8* %28) #9, !dbg !5386
  br label %30, !dbg !5386

; <label>:30:                                     ; preds = %22, %26, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !5387
  ret void, !dbg !5387
}

; Function Attrs: nounwind uwtable
define internal void @f_eventhandler(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !5388 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5390, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5391, metadata !DIExpression()), !dbg !5393
  %3 = load i32, i32* @vgetc_busy, align 4, !dbg !5394, !tbaa !2904
  %4 = load i32, i32* @input_busy, align 4, !dbg !5395
  %5 = or i32 %4, %3, !dbg !5396
  %6 = icmp ne i32 %5, 0, !dbg !5396
  %7 = zext i1 %6 to i64, !dbg !5394
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5397
  store i64 %7, i64* %8, align 8, !dbg !5398, !tbaa !2918
  ret void, !dbg !5399
}

declare void @f_executable(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_execute(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !5400 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5402, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5403, metadata !DIExpression()), !dbg !5405
  tail call void @execute_common(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !5406
  ret void, !dbg !5407
}

declare void @f_exepath(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_exists(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !5408 {
  %3 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5410, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5411, metadata !DIExpression()), !dbg !5415
  %4 = bitcast i8** %3 to i8*, !dbg !5416
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !5416
  call void @llvm.dbg.value(metadata i32 0, metadata !5413, metadata !DIExpression()), !dbg !5417
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !5418
  call void @llvm.dbg.value(metadata i8* %5, metadata !5412, metadata !DIExpression()), !dbg !5419
  store i8* %5, i8** %3, align 8, !dbg !5420, !tbaa !2783
  %6 = load i8, i8* %5, align 1, !dbg !5421, !tbaa !2918
  switch i8 %6, label %71 [
    i8 36, label %7
    i8 38, label %20
    i8 43, label %20
    i8 42, label %29
    i8 63, label %32
    i8 58, label %59
    i8 35, label %62
  ], !dbg !5423

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5424
  %9 = tail call i8* @getenv(i8* nonnull %8) #9, !dbg !5424
  %10 = icmp eq i8* %9, null, !dbg !5427
  br i1 %10, label %11, label %73, !dbg !5428

; <label>:11:                                     ; preds = %7
  call void @llvm.dbg.value(metadata i8* %5, metadata !5412, metadata !DIExpression()), !dbg !5419
  %12 = tail call i8* @expand_env_save(i8* %5) #9, !dbg !5429
  call void @llvm.dbg.value(metadata i8* %12, metadata !5412, metadata !DIExpression()), !dbg !5419
  store i8* %12, i8** %3, align 8, !dbg !5431, !tbaa !2783
  %13 = icmp eq i8* %12, null, !dbg !5432
  br i1 %13, label %18, label %14, !dbg !5434

; <label>:14:                                     ; preds = %11
  %15 = load i8, i8* %12, align 1, !dbg !5435, !tbaa !2918
  %16 = icmp ne i8 %15, 36, !dbg !5436
  %17 = zext i1 %16 to i32, !dbg !5437
  br label %18, !dbg !5437

; <label>:18:                                     ; preds = %14, %11
  %19 = phi i32 [ 0, %11 ], [ %17, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !5413, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %12, metadata !5412, metadata !DIExpression()), !dbg !5419
  tail call void @vim_free(i8* %12) #9, !dbg !5438
  br label %73

; <label>:20:                                     ; preds = %2, %2
  call void @llvm.dbg.value(metadata i8** %3, metadata !5412, metadata !DIExpression()), !dbg !5419
  %21 = call i32 @eval_option(i8** nonnull %3, %struct.typval_T* null, i32 1) #9, !dbg !5439
  %22 = icmp eq i32 %21, 1, !dbg !5442
  %23 = load i8*, i8** %3, align 8, !dbg !5443, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %23, metadata !5412, metadata !DIExpression()), !dbg !5419
  %24 = call i8* @skipwhite(i8* %23) #9, !dbg !5445
  %25 = load i8, i8* %24, align 1, !dbg !5446, !tbaa !2918
  %26 = icmp eq i8 %25, 0, !dbg !5447
  %27 = and i1 %22, %26, !dbg !5448
  %28 = zext i1 %27 to i32, !dbg !5448
  br label %73, !dbg !5448

; <label>:29:                                     ; preds = %2
  %30 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5449
  %31 = tail call i32 @function_exists(i8* nonnull %30, i32 0) #9, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %31, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73, !dbg !5453

; <label>:32:                                     ; preds = %2
  %33 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5454
  call void @llvm.dbg.value(metadata i8* %33, metadata !5457, metadata !DIExpression()) #9, !dbg !5460
  call void @llvm.dbg.value(metadata i8* %33, metadata !2976, metadata !DIExpression()) #9, !dbg !5462
  call void @llvm.dbg.value(metadata i32 0, metadata !2981, metadata !DIExpression()) #9, !dbg !5464
  call void @llvm.dbg.value(metadata i32 0, metadata !2982, metadata !DIExpression()) #9, !dbg !5465
  call void @llvm.dbg.value(metadata i32 521, metadata !2983, metadata !DIExpression()) #9, !dbg !5466
  br label %34, !dbg !5467

; <label>:34:                                     ; preds = %51, %32
  %35 = phi i32 [ 0, %32 ], [ %53, %51 ]
  %36 = phi i32 [ 521, %32 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !2983, metadata !DIExpression()) #9, !dbg !5466
  call void @llvm.dbg.value(metadata i32 %35, metadata !2982, metadata !DIExpression()) #9, !dbg !5465
  %37 = sub nsw i32 %36, %35, !dbg !5468
  %38 = lshr i32 %37, 1, !dbg !5469
  %39 = add i32 %38, %35, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %39, metadata !2985, metadata !DIExpression()) #9, !dbg !5471
  %40 = sext i32 %39 to i64, !dbg !5472
  %41 = getelementptr inbounds [522 x %struct.funcentry_T], [522 x %struct.funcentry_T]* @global_functions, i64 0, i64 %40, i32 0, !dbg !5472
  %42 = load i8*, i8** %41, align 8, !dbg !5472, !tbaa !2936
  %43 = tail call i32 @strcmp(i8* nonnull %33, i8* %42) #10, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %43, metadata !2984, metadata !DIExpression()) #9, !dbg !5473
  %44 = icmp slt i32 %43, 0, !dbg !5474
  br i1 %44, label %45, label %47, !dbg !5475

; <label>:45:                                     ; preds = %34
  %46 = add nsw i32 %39, -1, !dbg !5476
  call void @llvm.dbg.value(metadata i32 %46, metadata !2983, metadata !DIExpression()) #9, !dbg !5466
  br label %51, !dbg !5477

; <label>:47:                                     ; preds = %34
  %48 = icmp eq i32 %43, 0, !dbg !5478
  br i1 %48, label %55, label %49, !dbg !5479

; <label>:49:                                     ; preds = %47
  %50 = add nsw i32 %39, 1, !dbg !5480
  call void @llvm.dbg.value(metadata i32 %50, metadata !2982, metadata !DIExpression()) #9, !dbg !5465
  br label %51

; <label>:51:                                     ; preds = %49, %45
  %52 = phi i32 [ %46, %45 ], [ %36, %49 ]
  %53 = phi i32 [ %35, %45 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 %53, metadata !2982, metadata !DIExpression()) #9, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %52, metadata !2983, metadata !DIExpression()) #9, !dbg !5466
  %54 = icmp slt i32 %52, %53, !dbg !5481
  br i1 %54, label %55, label %34, !dbg !5467, !llvm.loop !3014

; <label>:55:                                     ; preds = %47, %51
  %56 = phi i32 [ %39, %47 ], [ -1, %51 ]
  %57 = lshr i32 %56, 31, !dbg !5482
  %58 = xor i32 %57, 1, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %58, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73, !dbg !5483

; <label>:59:                                     ; preds = %2
  %60 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5484
  %61 = tail call i32 @cmd_exists(i8* nonnull %60) #9, !dbg !5487
  call void @llvm.dbg.value(metadata i32 %61, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73, !dbg !5488

; <label>:62:                                     ; preds = %2
  %63 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5489
  %64 = load i8, i8* %63, align 1, !dbg !5489, !tbaa !2918
  %65 = icmp eq i8 %64, 35, !dbg !5493
  br i1 %65, label %66, label %69, !dbg !5494

; <label>:66:                                     ; preds = %62
  %67 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !5495
  %68 = tail call i32 @autocmd_supported(i8* nonnull %67) #9, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %68, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73, !dbg !5497

; <label>:69:                                     ; preds = %62
  %70 = tail call i32 @au_exists(i8* nonnull %63) #9, !dbg !5498
  call void @llvm.dbg.value(metadata i32 %70, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73

; <label>:71:                                     ; preds = %2
  %72 = tail call i32 @var_exists(i8* %5) #9, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %72, metadata !5413, metadata !DIExpression()), !dbg !5417
  br label %73

; <label>:73:                                     ; preds = %20, %7, %55, %71, %69, %66, %59, %29, %18
  %74 = phi i32 [ %19, %18 ], [ %31, %29 ], [ %58, %55 ], [ %61, %59 ], [ %68, %66 ], [ %70, %69 ], [ %72, %71 ], [ 1, %7 ], [ %28, %20 ]
  call void @llvm.dbg.value(metadata i32 %74, metadata !5413, metadata !DIExpression()), !dbg !5417
  %75 = sext i32 %74 to i64, !dbg !5501
  %76 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5502
  store i64 %75, i64* %76, align 8, !dbg !5503, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !5504
  ret void, !dbg !5504
}

; Function Attrs: nounwind uwtable
define internal void @f_exp(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5505 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5507, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5508, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5509, metadata !DIExpression()), !dbg !5512
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5513
  store i32 6, i32* %3, align 8, !dbg !5514, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !5509, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !5515
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !5518
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5519
  %5 = load i32, i32* %4, align 8, !dbg !5519, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !5520

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5521
  %8 = bitcast i64* %7 to double*, !dbg !5521
  %9 = load double, double* %8, align 8, !dbg !5521, !tbaa !2918
  br label %14, !dbg !5522

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5523
  %12 = load i64, i64* %11, align 8, !dbg !5523, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !5524
  br label %14, !dbg !5525

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !5509, metadata !DIExpression()), !dbg !5512
  %16 = tail call double @exp(double %15) #9, !dbg !5526
  br label %20, !dbg !5527

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !5528
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !5529
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !5530
}

; Function Attrs: nounwind uwtable
define internal void @f_expand(%struct.typval_T*, %struct.typval_T*) #0 !dbg !5531 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.expand, align 8
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5533, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5534, metadata !DIExpression()), !dbg !5551
  %7 = bitcast i32* %3 to i8*, !dbg !5552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9, !dbg !5552
  %8 = bitcast i8** %4 to i8*, !dbg !5553
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !dbg !5553
  call void @llvm.dbg.value(metadata i32 69, metadata !5538, metadata !DIExpression()), !dbg !5554
  %9 = bitcast %struct.expand* %5 to i8*, !dbg !5555
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #9, !dbg !5555
  %10 = bitcast i32* %6 to i8*, !dbg !5556
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9, !dbg !5556
  call void @llvm.dbg.value(metadata i32 0, metadata !5540, metadata !DIExpression()), !dbg !5557
  store i32 0, i32* %6, align 4, !dbg !5557, !tbaa !2904
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5558
  store i32 7, i32* %11, align 8, !dbg !5559, !tbaa !3221
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !5560
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %12, i64 0, i32 0, !dbg !5562
  %14 = load i32, i32* %13, align 8, !dbg !5562, !tbaa !3221
  %15 = icmp eq i32 %14, 0, !dbg !5563
  br i1 %15, label %28, label %16, !dbg !5564

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !5565
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %17, i64 0, i32 0, !dbg !5566
  %19 = load i32, i32* %18, align 8, !dbg !5566, !tbaa !3221
  %20 = icmp eq i32 %19, 0, !dbg !5567
  br i1 %20, label %28, label %21, !dbg !5568

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.value(metadata i32* %6, metadata !5540, metadata !DIExpression()), !dbg !5557
  %22 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %17, i32* nonnull %6) #9, !dbg !5569
  %23 = icmp eq i64 %22, 0, !dbg !5569
  %24 = load i32, i32* %6, align 4, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %24, metadata !5540, metadata !DIExpression()), !dbg !5557
  %25 = icmp ne i32 %24, 0, !dbg !5570
  %26 = or i1 %23, %25, !dbg !5571
  br i1 %26, label %28, label %27, !dbg !5571

; <label>:27:                                     ; preds = %21
  call void @rettv_list_set(%struct.typval_T* nonnull %1, %struct.listvar_S* null) #9, !dbg !5572
  br label %28, !dbg !5572

; <label>:28:                                     ; preds = %16, %2, %21, %27
  %29 = call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !5573
  call void @llvm.dbg.value(metadata i8* %29, metadata !5535, metadata !DIExpression()), !dbg !5574
  %30 = load i8, i8* %29, align 1, !dbg !5575, !tbaa !2918
  switch i8 %30, label %53 [
    i8 37, label %31
    i8 35, label %31
    i8 60, label %31
  ], !dbg !5576

; <label>:31:                                     ; preds = %28, %28, %28
  %32 = load i32, i32* @emsg_off, align 4, !dbg !5577, !tbaa !2904
  %33 = add nsw i32 %32, 1, !dbg !5577
  store i32 %33, i32* @emsg_off, align 4, !dbg !5577, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %3, metadata !5536, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata i8** %4, metadata !5537, metadata !DIExpression()), !dbg !5580
  %34 = call i8* @eval_vars(i8* %29, i8* %29, i32* nonnull %3, i64* null, i8** nonnull %4, i32* null) #9, !dbg !5581
  call void @llvm.dbg.value(metadata i8* %34, metadata !5541, metadata !DIExpression()), !dbg !5582
  %35 = load i32, i32* @emsg_off, align 4, !dbg !5583, !tbaa !2904
  %36 = add nsw i32 %35, -1, !dbg !5583
  store i32 %36, i32* @emsg_off, align 4, !dbg !5583, !tbaa !2904
  %37 = load i32, i32* %11, align 8, !dbg !5584, !tbaa !3221
  %38 = icmp eq i32 %37, 11, !dbg !5586
  br i1 %38, label %39, label %50, !dbg !5587

; <label>:39:                                     ; preds = %31
  %40 = call i32 @rettv_list_alloc(%struct.typval_T* nonnull %1) #9, !dbg !5588
  %41 = icmp ne i32 %40, 0, !dbg !5591
  %42 = icmp ne i8* %34, null, !dbg !5592
  %43 = and i1 %42, %41, !dbg !5593
  br i1 %43, label %44, label %49, !dbg !5593

; <label>:44:                                     ; preds = %39
  %45 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !5594
  %46 = bitcast %union.anon* %45 to %struct.listvar_S**, !dbg !5595
  %47 = load %struct.listvar_S*, %struct.listvar_S** %46, align 8, !dbg !5595, !tbaa !2918
  %48 = call i32 @list_append_string(%struct.listvar_S* %47, i8* nonnull %34, i32 -1) #9, !dbg !5596
  br label %49, !dbg !5596

; <label>:49:                                     ; preds = %44, %39
  call void @vim_free(i8* %34) #9, !dbg !5597
  br label %103, !dbg !5598

; <label>:50:                                     ; preds = %31
  %51 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !5599
  %52 = bitcast %union.anon* %51 to i8**, !dbg !5600
  store i8* %34, i8** %52, align 8, !dbg !5601, !tbaa !2918
  br label %103

; <label>:53:                                     ; preds = %28
  %54 = load i32, i32* %13, align 8, !dbg !5602, !tbaa !3221
  %55 = icmp eq i32 %54, 0, !dbg !5604
  br i1 %55, label %60, label %56, !dbg !5605

; <label>:56:                                     ; preds = %53
  call void @llvm.dbg.value(metadata i32* %6, metadata !5540, metadata !DIExpression()), !dbg !5557
  %57 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %12, i32* nonnull %6) #9, !dbg !5606
  %58 = icmp eq i64 %57, 0, !dbg !5606
  %59 = select i1 %58, i32 69, i32 101, !dbg !5607
  br label %60, !dbg !5607

; <label>:60:                                     ; preds = %56, %53
  %61 = phi i32 [ 69, %53 ], [ %59, %56 ]
  call void @llvm.dbg.value(metadata i32 %61, metadata !5538, metadata !DIExpression()), !dbg !5554
  %62 = load i32, i32* %6, align 4, !dbg !5608, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %62, metadata !5540, metadata !DIExpression()), !dbg !5557
  %63 = icmp eq i32 %62, 0, !dbg !5608
  br i1 %63, label %64, label %100, !dbg !5609

; <label>:64:                                     ; preds = %60
  call void @llvm.dbg.value(metadata %struct.expand* %5, metadata !5539, metadata !DIExpression()), !dbg !5610
  call void @ExpandInit(%struct.expand* nonnull %5) #9, !dbg !5611
  %65 = getelementptr inbounds %struct.expand, %struct.expand* %5, i64 0, i32 1, !dbg !5612
  store i32 2, i32* %65, align 8, !dbg !5613, !tbaa !5614
  %66 = load i64, i64* @p_wic, align 8, !dbg !5615, !tbaa !4053
  %67 = icmp eq i64 %66, 0, !dbg !5615
  %68 = or i32 %61, 256, !dbg !5617
  %69 = select i1 %67, i32 %61, i32 %68, !dbg !5618
  call void @llvm.dbg.value(metadata i32 %69, metadata !5538, metadata !DIExpression()), !dbg !5554
  %70 = load i32, i32* %11, align 8, !dbg !5619, !tbaa !3221
  %71 = icmp eq i32 %70, 7, !dbg !5620
  br i1 %71, label %72, label %76, !dbg !5621

; <label>:72:                                     ; preds = %64
  call void @llvm.dbg.value(metadata %struct.expand* %5, metadata !5539, metadata !DIExpression()), !dbg !5610
  %73 = call i8* @ExpandOne(%struct.expand* nonnull %5, i8* %29, i8* null, i32 %69, i32 6) #9, !dbg !5622
  %74 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !5623
  %75 = bitcast %union.anon* %74 to i8**, !dbg !5624
  store i8* %73, i8** %75, align 8, !dbg !5625, !tbaa !2918
  br label %103, !dbg !5626

; <label>:76:                                     ; preds = %64
  %77 = call i32 @rettv_list_alloc(%struct.typval_T* nonnull %1) #9, !dbg !5627
  %78 = icmp eq i32 %77, 0, !dbg !5628
  br i1 %78, label %103, label %79, !dbg !5629

; <label>:79:                                     ; preds = %76
  call void @llvm.dbg.value(metadata %struct.expand* %5, metadata !5539, metadata !DIExpression()), !dbg !5610
  %80 = call i8* @ExpandOne(%struct.expand* nonnull %5, i8* %29, i8* null, i32 %69, i32 8) #9, !dbg !5630
  call void @llvm.dbg.value(metadata i32 0, metadata !5542, metadata !DIExpression()), !dbg !5631
  %81 = getelementptr inbounds %struct.expand, %struct.expand* %5, i64 0, i32 7, !dbg !5632
  %82 = load i32, i32* %81, align 8, !dbg !5632, !tbaa !5635
  %83 = icmp sgt i32 %82, 0, !dbg !5636
  br i1 %83, label %84, label %99, !dbg !5637

; <label>:84:                                     ; preds = %79
  %85 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %86 = bitcast %union.anon* %85 to %struct.listvar_S**
  %87 = getelementptr inbounds %struct.expand, %struct.expand* %5, i64 0, i32 9
  br label %88, !dbg !5637

; <label>:88:                                     ; preds = %84, %88
  %89 = phi i64 [ 0, %84 ], [ %95, %88 ]
  call void @llvm.dbg.value(metadata i64 %89, metadata !5542, metadata !DIExpression()), !dbg !5631
  %90 = load %struct.listvar_S*, %struct.listvar_S** %86, align 8, !dbg !5638, !tbaa !2918
  %91 = load i8**, i8*** %87, align 8, !dbg !5639, !tbaa !5640
  %92 = getelementptr inbounds i8*, i8** %91, i64 %89, !dbg !5641
  %93 = load i8*, i8** %92, align 8, !dbg !5641, !tbaa !2783
  %94 = call i32 @list_append_string(%struct.listvar_S* %90, i8* %93, i32 -1) #9, !dbg !5642
  %95 = add nuw nsw i64 %89, 1, !dbg !5643
  %96 = load i32, i32* %81, align 8, !dbg !5632, !tbaa !5635
  %97 = sext i32 %96 to i64, !dbg !5636
  %98 = icmp slt i64 %95, %97, !dbg !5636
  br i1 %98, label %88, label %99, !dbg !5637, !llvm.loop !5644

; <label>:99:                                     ; preds = %88, %79
  call void @llvm.dbg.value(metadata %struct.expand* %5, metadata !5539, metadata !DIExpression()), !dbg !5610
  call void @ExpandCleanup(%struct.expand* nonnull %5) #9, !dbg !5646
  br label %103, !dbg !5647

; <label>:100:                                    ; preds = %60
  %101 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !5648
  %102 = bitcast %union.anon* %101 to i8**, !dbg !5649
  store i8* null, i8** %102, align 8, !dbg !5650, !tbaa !2918
  br label %103

; <label>:103:                                    ; preds = %76, %100, %99, %72, %49, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9, !dbg !5651
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #9, !dbg !5651
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !dbg !5651
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9, !dbg !5651
  ret void, !dbg !5651
}

; Function Attrs: nounwind uwtable
define internal void @f_expandcmd(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !5652 {
  %3 = alloca %struct.exarg, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5654, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5655, metadata !DIExpression()), !dbg !5728
  %6 = bitcast %struct.exarg* %3 to i8*, !dbg !5729
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %6) #9, !dbg !5729
  %7 = bitcast i8** %4 to i8*, !dbg !5730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9, !dbg !5730
  %8 = bitcast i8** %5 to i8*, !dbg !5731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !dbg !5731
  call void @llvm.dbg.value(metadata i8* null, metadata !5726, metadata !DIExpression()), !dbg !5732
  store i8* null, i8** %5, align 8, !dbg !5732, !tbaa !2783
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5733
  store i32 7, i32* %9, align 8, !dbg !5734, !tbaa !3221
  %10 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !5735
  %11 = tail call i8* @vim_strsave(i8* %10) #9, !dbg !5736
  call void @llvm.dbg.value(metadata i8* %11, metadata !5725, metadata !DIExpression()), !dbg !5737
  store i8* %11, i8** %4, align 8, !dbg !5738, !tbaa !2783
  %12 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 3
  %13 = bitcast i8*** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %13, i8 0, i64 160, i32 8, i1 false), !dbg !5739
  %14 = ptrtoint i8* %11 to i64, !dbg !5740
  call void @llvm.dbg.value(metadata i8** %4, metadata !5725, metadata !DIExpression(DW_OP_deref)), !dbg !5737
  %15 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 2, !dbg !5741
  %16 = bitcast i8** %15 to i64*, !dbg !5742
  store i64 %14, i64* %16, align 8, !dbg !5742, !tbaa !5743
  %17 = bitcast i8** %4 to i64*, !dbg !5745
  call void @llvm.dbg.value(metadata i8** %4, metadata !5725, metadata !DIExpression(DW_OP_deref)), !dbg !5737
  %18 = bitcast %struct.exarg* %3 to i64*, !dbg !5746
  store i64 %14, i64* %18, align 8, !dbg !5746, !tbaa !5747
  %19 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 6, !dbg !5748
  store i64 16, i64* %19, align 8, !dbg !5749, !tbaa !5750
  %20 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 17, !dbg !5751
  store i32 0, i32* %20, align 4, !dbg !5752, !tbaa !5753
  %21 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 1, !dbg !5754
  store i8* null, i8** %21, align 8, !dbg !5755, !tbaa !5756
  %22 = getelementptr inbounds %struct.exarg, %struct.exarg* %3, i64 0, i32 5, !dbg !5757
  store i32 -1, i32* %22, align 8, !dbg !5758, !tbaa !5759
  call void @llvm.dbg.value(metadata %struct.exarg* %3, metadata !5656, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata i8** %4, metadata !5725, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.value(metadata i8** %5, metadata !5726, metadata !DIExpression()), !dbg !5732
  %23 = call i32 @expand_filename(%struct.exarg* nonnull %3, i8** nonnull %4, i8** nonnull %5) #9, !dbg !5761
  %24 = load i8*, i8** %5, align 8, !dbg !5762, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %24, metadata !5726, metadata !DIExpression()), !dbg !5732
  %25 = icmp eq i8* %24, null, !dbg !5764
  br i1 %25, label %31, label %26, !dbg !5765

; <label>:26:                                     ; preds = %2
  %27 = load i8, i8* %24, align 1, !dbg !5766, !tbaa !2918
  %28 = icmp eq i8 %27, 0, !dbg !5767
  br i1 %28, label %31, label %29, !dbg !5768

; <label>:29:                                     ; preds = %26
  %30 = call i32 @emsg(i8* nonnull %24) #9, !dbg !5769
  br label %31, !dbg !5769

; <label>:31:                                     ; preds = %26, %2, %29
  %32 = load i64, i64* %17, align 8, !dbg !5770, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %4, metadata !5725, metadata !DIExpression(DW_OP_deref)), !dbg !5737
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5771
  store i64 %32, i64* %33, align 8, !dbg !5771, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !dbg !5772
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9, !dbg !5772
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %6) #9, !dbg !5772
  ret void, !dbg !5772
}

declare void @f_extend(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readonly uwtable
define internal %struct.type_S* @ret_first_cont(i32, %struct.type_S** nocapture readonly) #6 !dbg !5773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5775, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !5776, metadata !DIExpression()), !dbg !5778
  %3 = load %struct.type_S*, %struct.type_S** %1, align 8, !dbg !5779, !tbaa !2783
  %4 = getelementptr inbounds %struct.type_S, %struct.type_S* %3, i64 0, i32 0, !dbg !5781
  %5 = load i32, i32* %4, align 8, !dbg !5781, !tbaa !2727
  switch i32 %5, label %8 [
    i32 11, label %9
    i32 12, label %6
    i32 8, label %7
  ], !dbg !5782

; <label>:6:                                      ; preds = %2
  br label %9, !dbg !5783

; <label>:7:                                      ; preds = %2
  br label %9, !dbg !5785

; <label>:8:                                      ; preds = %2
  br label %9, !dbg !5787

; <label>:9:                                      ; preds = %2, %8, %7, %6
  %10 = phi %struct.type_S* [ @t_dict_any, %6 ], [ %3, %7 ], [ @t_any, %8 ], [ @t_list_any, %2 ]
  ret %struct.type_S* %10, !dbg !5788
}

declare void @f_extendnew(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_feedkeys(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !5789 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5791, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5792, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.value(metadata i32 1, metadata !5793, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 0, metadata !5794, metadata !DIExpression()), !dbg !5817
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !5818
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !5818
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !5797, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 0, metadata !5798, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 0, metadata !5799, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata i32 0, metadata !5800, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 0, metadata !5801, metadata !DIExpression()), !dbg !5823
  %5 = tail call i32 @check_secure() #9, !dbg !5824
  %6 = icmp eq i32 %5, 0, !dbg !5824
  br i1 %6, label %7, label %108, !dbg !5826

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !5827
  call void @llvm.dbg.value(metadata i8* %8, metadata !5795, metadata !DIExpression()), !dbg !5828
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !5829
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %9, i64 0, i32 0, !dbg !5831
  %11 = load i32, i32* %10, align 8, !dbg !5831, !tbaa !3221
  %12 = icmp eq i32 %11, 0, !dbg !5832
  br i1 %12, label %39, label %13, !dbg !5833

; <label>:13:                                     ; preds = %7
  %14 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %9, i8* nonnull %4) #9, !dbg !5834
  call void @llvm.dbg.value(metadata i8* %14, metadata !5796, metadata !DIExpression()), !dbg !5836
  br label %15, !dbg !5837

; <label>:15:                                     ; preds = %31, %13
  %16 = phi i32 [ 0, %13 ], [ %32, %31 ]
  %17 = phi i32 [ 0, %13 ], [ %33, %31 ]
  %18 = phi i32 [ 0, %13 ], [ %34, %31 ]
  %19 = phi i32 [ 0, %13 ], [ %35, %31 ]
  %20 = phi i8* [ %14, %13 ], [ %38, %31 ]
  %21 = phi i32 [ 0, %13 ], [ %36, %31 ]
  %22 = phi i32 [ 1, %13 ], [ %37, %31 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !5793, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %21, metadata !5794, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i8* %20, metadata !5796, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata i32 %19, metadata !5801, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %18, metadata !5800, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %17, metadata !5799, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata i32 %16, metadata !5798, metadata !DIExpression()), !dbg !5820
  %23 = load i8, i8* %20, align 1, !dbg !5838, !tbaa !2918
  switch i8 %23, label %31 [
    i8 0, label %39
    i8 110, label %24
    i8 109, label %25
    i8 116, label %26
    i8 105, label %27
    i8 120, label %28
    i8 33, label %29
    i8 76, label %30
  ], !dbg !5841

; <label>:24:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 0, metadata !5793, metadata !DIExpression()), !dbg !5816
  br label %31, !dbg !5842

; <label>:25:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5793, metadata !DIExpression()), !dbg !5816
  br label %31, !dbg !5845

; <label>:26:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5798, metadata !DIExpression()), !dbg !5820
  br label %31, !dbg !5846

; <label>:27:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5794, metadata !DIExpression()), !dbg !5817
  br label %31, !dbg !5847

; <label>:28:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5799, metadata !DIExpression()), !dbg !5821
  br label %31, !dbg !5848

; <label>:29:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5800, metadata !DIExpression()), !dbg !5822
  br label %31, !dbg !5849

; <label>:30:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, metadata !5801, metadata !DIExpression()), !dbg !5823
  br label %31, !dbg !5850

; <label>:31:                                     ; preds = %15, %24, %25, %26, %27, %28, %29, %30
  %32 = phi i32 [ %16, %30 ], [ %16, %29 ], [ %16, %28 ], [ %16, %27 ], [ 1, %26 ], [ %16, %25 ], [ %16, %24 ], [ %16, %15 ]
  %33 = phi i32 [ %17, %30 ], [ %17, %29 ], [ 1, %28 ], [ %17, %27 ], [ %17, %26 ], [ %17, %25 ], [ %17, %24 ], [ %17, %15 ]
  %34 = phi i32 [ %18, %30 ], [ 1, %29 ], [ %18, %28 ], [ %18, %27 ], [ %18, %26 ], [ %18, %25 ], [ %18, %24 ], [ %18, %15 ]
  %35 = phi i32 [ 1, %30 ], [ %19, %29 ], [ %19, %28 ], [ %19, %27 ], [ %19, %26 ], [ %19, %25 ], [ %19, %24 ], [ %19, %15 ]
  %36 = phi i32 [ %21, %30 ], [ %21, %29 ], [ %21, %28 ], [ 1, %27 ], [ %21, %26 ], [ %21, %25 ], [ %21, %24 ], [ %21, %15 ]
  %37 = phi i32 [ %22, %30 ], [ %22, %29 ], [ %22, %28 ], [ %22, %27 ], [ %22, %26 ], [ 1, %25 ], [ 0, %24 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %37, metadata !5793, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %36, metadata !5794, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %35, metadata !5801, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %34, metadata !5800, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %33, metadata !5799, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata i32 %32, metadata !5798, metadata !DIExpression()), !dbg !5820
  %38 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !5851
  call void @llvm.dbg.value(metadata i8* %38, metadata !5796, metadata !DIExpression()), !dbg !5836
  br label %15, !dbg !5852, !llvm.loop !5853

; <label>:39:                                     ; preds = %15, %7
  %40 = phi i32 [ 0, %7 ], [ %16, %15 ]
  %41 = phi i32 [ 0, %7 ], [ %17, %15 ]
  %42 = phi i32 [ 0, %7 ], [ %18, %15 ]
  %43 = phi i32 [ 0, %7 ], [ %19, %15 ]
  %44 = phi i32 [ 0, %7 ], [ %21, %15 ]
  %45 = phi i32 [ 1, %7 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %45, metadata !5793, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %44, metadata !5794, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %43, metadata !5801, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %42, metadata !5800, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 %41, metadata !5799, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata i32 %40, metadata !5798, metadata !DIExpression()), !dbg !5820
  %46 = load i8, i8* %8, align 1, !dbg !5855, !tbaa !2918
  %47 = icmp ne i8 %46, 0, !dbg !5856
  %48 = icmp ne i32 %41, 0, !dbg !5857
  %49 = or i1 %48, %47, !dbg !5858
  br i1 %49, label %50, label %108, !dbg !5858

; <label>:50:                                     ; preds = %39
  %51 = call i8* @vim_strsave_escape_csi(i8* nonnull %8) #9, !dbg !5859
  call void @llvm.dbg.value(metadata i8* %51, metadata !5802, metadata !DIExpression()), !dbg !5860
  %52 = icmp eq i8* %51, null, !dbg !5861
  br i1 %52, label %108, label %53, !dbg !5862

; <label>:53:                                     ; preds = %50
  %54 = icmp eq i32 %43, 0, !dbg !5863
  br i1 %54, label %75, label %55, !dbg !5864

; <label>:55:                                     ; preds = %53
  %56 = call i64 @strlen(i8* nonnull %8) #10, !dbg !5865
  %57 = trunc i64 %56 to i32, !dbg !5866
  call void @llvm.dbg.value(metadata i32 %57, metadata !5810, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5868
  %58 = icmp sgt i32 %57, 0, !dbg !5869
  br i1 %58, label %59, label %91, !dbg !5872

; <label>:59:                                     ; preds = %55
  %60 = icmp ne i32 %40, 0
  %61 = and i64 %56, 4294967295
  br label %62, !dbg !5872

; <label>:62:                                     ; preds = %72, %59
  %63 = phi i64 [ 0, %59 ], [ %73, %72 ]
  call void @llvm.dbg.value(metadata i64 %63, metadata !5803, metadata !DIExpression()), !dbg !5868
  %64 = getelementptr inbounds i8, i8* %8, i64 %63, !dbg !5873
  %65 = load i8, i8* %64, align 1, !dbg !5873, !tbaa !2918
  %66 = icmp eq i8 %65, 3, !dbg !5876
  %67 = load i32, i32* @ctrl_c_interrupts, align 4, !dbg !5877
  %68 = icmp ne i32 %67, 0, !dbg !5877
  %69 = and i1 %66, %68, !dbg !5878
  %70 = and i1 %60, %69, !dbg !5878
  br i1 %70, label %71, label %72, !dbg !5878

; <label>:71:                                     ; preds = %62
  store volatile i32 1, i32* @got_int, align 4, !dbg !5879, !tbaa !2904
  br label %72, !dbg !5880

; <label>:72:                                     ; preds = %71, %62
  call void @add_to_input_buf(i8* %64, i32 1) #9, !dbg !5881
  %73 = add nuw nsw i64 %63, 1, !dbg !5882
  %74 = icmp eq i64 %73, %61, !dbg !5869
  br i1 %74, label %91, label %62, !dbg !5872, !llvm.loop !5883

; <label>:75:                                     ; preds = %53
  %76 = icmp eq i32 %45, 0, !dbg !5885
  %77 = sext i1 %76 to i32, !dbg !5885
  %78 = icmp eq i32 %44, 0, !dbg !5887
  %79 = load i32, i32* getelementptr inbounds (%struct.typebuf_T, %struct.typebuf_T* @typebuf, i64 0, i32 4), align 8, !dbg !5888
  %80 = select i1 %78, i32 %79, i32 0, !dbg !5887
  %81 = icmp eq i32 %40, 0, !dbg !5889
  %82 = zext i1 %81 to i32, !dbg !5889
  %83 = call i32 @ins_typebuf(i8* nonnull %51, i32 %77, i32 %80, i32 %82, i32 0) #9, !dbg !5890
  %84 = load i32, i32* @vgetc_busy, align 4, !dbg !5891, !tbaa !2904
  %85 = load i32, i32* @timer_busy, align 4, !dbg !5893
  %86 = or i32 %85, %84, !dbg !5894
  %87 = load i32, i32* @input_busy, align 4, !dbg !5895
  %88 = or i32 %86, %87, !dbg !5894
  %89 = icmp eq i32 %88, 0, !dbg !5894
  br i1 %89, label %91, label %90, !dbg !5894

; <label>:90:                                     ; preds = %75
  store i32 1, i32* @typebuf_was_filled, align 4, !dbg !5896, !tbaa !2904
  br label %91, !dbg !5897

; <label>:91:                                     ; preds = %72, %55, %75, %90
  call void @vim_free(i8* nonnull %51) #9, !dbg !5898
  br i1 %48, label %92, label %108, !dbg !5899

; <label>:92:                                     ; preds = %91
  %93 = load i32, i32* @msg_scroll, align 4, !dbg !5900, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %93, metadata !5811, metadata !DIExpression()), !dbg !5901
  store i32 0, i32* @msg_scroll, align 4, !dbg !5902, !tbaa !2904
  %94 = icmp eq i32 %42, 0, !dbg !5903
  br i1 %94, label %95, label %104, !dbg !5905

; <label>:95:                                     ; preds = %92
  %96 = load i32, i32* @ex_normal_busy, align 4, !dbg !5906, !tbaa !2904
  %97 = add nsw i32 %96, 1, !dbg !5906
  store i32 %97, i32* @ex_normal_busy, align 4, !dbg !5906, !tbaa !2904
  %98 = load i32, i32* @in_feedkeys, align 4, !dbg !5908, !tbaa !2904
  %99 = add nsw i32 %98, 1, !dbg !5908
  store i32 %99, i32* @in_feedkeys, align 4, !dbg !5908, !tbaa !2904
  call void @exec_normal(i32 1, i32 %43, i32 1) #9, !dbg !5909
  %100 = load i32, i32* @ex_normal_busy, align 4, !dbg !5910, !tbaa !2904
  %101 = add nsw i32 %100, -1, !dbg !5910
  store i32 %101, i32* @ex_normal_busy, align 4, !dbg !5910, !tbaa !2904
  %102 = load i32, i32* @in_feedkeys, align 4, !dbg !5913, !tbaa !2904
  %103 = add nsw i32 %102, -1, !dbg !5913
  store i32 %103, i32* @in_feedkeys, align 4, !dbg !5913, !tbaa !2904
  br label %105, !dbg !5914

; <label>:104:                                    ; preds = %92
  call void @exec_normal(i32 1, i32 %43, i32 1) #9, !dbg !5909
  br label %105

; <label>:105:                                    ; preds = %104, %95
  %106 = load i32, i32* @msg_scroll, align 4, !dbg !5915, !tbaa !2904
  %107 = or i32 %106, %93, !dbg !5915
  store i32 %107, i32* @msg_scroll, align 4, !dbg !5915, !tbaa !2904
  br label %108, !dbg !5916

; <label>:108:                                    ; preds = %39, %91, %105, %50, %2
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !5917
  ret void, !dbg !5917
}

declare void @f_filereadable(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_filewritable(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_filter(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_finddir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_findfile(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_any(i32, %struct.type_S** nocapture readnone) #7 !dbg !5918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !5921, metadata !DIExpression()), !dbg !5923
  ret %struct.type_S* @t_list_any, !dbg !5924
}

declare void @f_flatten(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_flattennew(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_float2nr(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5927, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5928, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5929, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata double* undef, metadata !5929, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !5933
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !5936
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5937
  %4 = load i32, i32* %3, align 8, !dbg !5937, !tbaa !3221
  switch i32 %4, label %13 [
    i32 6, label %5
    i32 5, label %9
  ], !dbg !5938

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5939
  %7 = bitcast i64* %6 to double*, !dbg !5939
  %8 = load double, double* %7, align 8, !dbg !5939, !tbaa !2918
  br label %16, !dbg !5940

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5941
  %11 = load i64, i64* %10, align 8, !dbg !5941, !tbaa !2918
  %12 = sitofp i64 %11 to double, !dbg !5942
  br label %16, !dbg !5943

; <label>:13:                                     ; preds = %2
  %14 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !5944
  %15 = tail call i32 @emsg(i8* %14) #9, !dbg !5945
  br label %28, !dbg !5946

; <label>:16:                                     ; preds = %5, %9
  %17 = phi double [ %8, %5 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata double %17, metadata !5929, metadata !DIExpression()), !dbg !5932
  %18 = fcmp ugt double %17, 0xC3E0000000000000, !dbg !5947
  br i1 %18, label %21, label %19, !dbg !5950

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5951
  store i64 -9223372036854775807, i64* %20, align 8, !dbg !5952, !tbaa !2918
  br label %28, !dbg !5953

; <label>:21:                                     ; preds = %16
  %22 = fcmp ult double %17, 0x43E0000000000000, !dbg !5954
  br i1 %22, label %25, label %23, !dbg !5956

; <label>:23:                                     ; preds = %21
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5957
  store i64 9223372036854775807, i64* %24, align 8, !dbg !5958, !tbaa !2918
  br label %28, !dbg !5959

; <label>:25:                                     ; preds = %21
  %26 = fptosi double %17 to i64, !dbg !5960
  %27 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !5961
  store i64 %26, i64* %27, align 8, !dbg !5962, !tbaa !2918
  br label %28

; <label>:28:                                     ; preds = %13, %19, %25, %23
  ret void, !dbg !5963
}

; Function Attrs: nounwind uwtable
define internal void @f_floor(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5964 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5966, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5967, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5968, metadata !DIExpression()), !dbg !5971
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !5972
  store i32 6, i32* %3, align 8, !dbg !5973, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !5968, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !5974
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !5977
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !5978
  %5 = load i32, i32* %4, align 8, !dbg !5978, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !5979

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5980
  %8 = bitcast i64* %7 to double*, !dbg !5980
  %9 = load double, double* %8, align 8, !dbg !5980, !tbaa !2918
  br label %14, !dbg !5981

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !5982
  %12 = load i64, i64* %11, align 8, !dbg !5982, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !5983
  br label %14, !dbg !5984

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !5968, metadata !DIExpression()), !dbg !5971
  %16 = tail call double @llvm.floor.f64(double %15), !dbg !5985
  br label %20, !dbg !5986

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !5987
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !5988
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !5989
}

; Function Attrs: nounwind uwtable
define internal void @f_fmod(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !5990 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !5992, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !5993, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5994, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !5995, metadata !DIExpression()), !dbg !5999
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6000
  store i32 6, i32* %3, align 8, !dbg !6001, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !5994, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !6002
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !6005
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6006
  %5 = load i32, i32* %4, align 8, !dbg !6006, !tbaa !3221
  switch i32 %5, label %14 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !6007

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !6008
  %8 = bitcast i64* %7 to double*, !dbg !6008
  %9 = load double, double* %8, align 8, !dbg !6008, !tbaa !2918
  br label %17, !dbg !6009

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !6010
  %12 = load i64, i64* %11, align 8, !dbg !6010, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !6011
  br label %17, !dbg !6012

; <label>:14:                                     ; preds = %2
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !6013
  %16 = tail call i32 @emsg(i8* %15) #9, !dbg !6014
  br label %35, !dbg !6015

; <label>:17:                                     ; preds = %6, %10
  %18 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double* undef, metadata !5995, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)) #9, !dbg !6016
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !6018
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !6019
  %20 = load i32, i32* %19, align 8, !dbg !6019, !tbaa !3221
  switch i32 %20, label %29 [
    i32 6, label %21
    i32 5, label %25
  ], !dbg !6020

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !6021
  %23 = bitcast i64* %22 to double*, !dbg !6021
  %24 = load double, double* %23, align 8, !dbg !6021, !tbaa !2918
  br label %32, !dbg !6022

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !6023
  %27 = load i64, i64* %26, align 8, !dbg !6023, !tbaa !2918
  %28 = sitofp i64 %27 to double, !dbg !6024
  br label %32, !dbg !6025

; <label>:29:                                     ; preds = %17
  %30 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !6026
  %31 = tail call i32 @emsg(i8* %30) #9, !dbg !6027
  br label %35, !dbg !6028

; <label>:32:                                     ; preds = %21, %25
  %33 = phi double [ %24, %21 ], [ %28, %25 ]
  call void @llvm.dbg.value(metadata double %18, metadata !5994, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata double %33, metadata !5995, metadata !DIExpression()), !dbg !5999
  %34 = tail call double @fmod(double %18, double %33) #9, !dbg !6029
  br label %35, !dbg !6030

; <label>:35:                                     ; preds = %14, %29, %32
  %36 = phi double [ %34, %32 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %14 ]
  %37 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %38 = bitcast %union.anon* %37 to double*
  store double %36, double* %38, align 8, !tbaa !2918
  ret void, !dbg !6031
}

; Function Attrs: nounwind uwtable
define internal void @f_fnameescape(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6032 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6034, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6035, metadata !DIExpression()), !dbg !6037
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !6038
  %4 = tail call i8* @vim_strsave_fnameescape(i8* %3, i32 0) #9, !dbg !6039
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6040
  %6 = bitcast %union.anon* %5 to i8**, !dbg !6041
  store i8* %4, i8** %6, align 8, !dbg !6042, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6043
  store i32 7, i32* %7, align 8, !dbg !6044, !tbaa !3221
  ret void, !dbg !6045
}

declare void @f_fnamemodify(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_foldclosed(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_foldclosedend(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_foldlevel(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_foldtext(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_foldtextresult(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_foreground(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture readnone) #0 !dbg !6046 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6048, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6049, metadata !DIExpression()), !dbg !6051
  %3 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !6052, !tbaa !3859
  %4 = icmp eq i32 %3, 0, !dbg !6054
  br i1 %4, label %6, label %5, !dbg !6055

; <label>:5:                                      ; preds = %2
  tail call void @gui_mch_set_foreground() #9, !dbg !6056
  br label %6, !dbg !6058

; <label>:6:                                      ; preds = %2, %5
  ret void, !dbg !6059
}

declare void @f_fullcommand(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_func_any(i32, %struct.type_S** nocapture readnone) #7 !dbg !6060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6062, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6063, metadata !DIExpression()), !dbg !6065
  ret %struct.type_S* @t_func_any, !dbg !6066
}

; Function Attrs: nounwind uwtable
define internal void @f_funcref(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6067 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6070, metadata !DIExpression()), !dbg !6072
  tail call fastcc void @common_function(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !6073
  ret void, !dbg !6074
}

; Function Attrs: nounwind readonly uwtable
define internal nonnull %struct.type_S* @ret_f_function(i32, %struct.type_S** nocapture readonly) #6 !dbg !6075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6077, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6078, metadata !DIExpression()), !dbg !6080
  %3 = icmp eq i32 %0, 1, !dbg !6081
  br i1 %3, label %4, label %9, !dbg !6083

; <label>:4:                                      ; preds = %2
  %5 = load %struct.type_S*, %struct.type_S** %1, align 8, !dbg !6084, !tbaa !2783
  %6 = getelementptr inbounds %struct.type_S, %struct.type_S* %5, i64 0, i32 0, !dbg !6085
  %7 = load i32, i32* %6, align 8, !dbg !6085, !tbaa !2727
  %8 = icmp eq i32 %7, 7, !dbg !6086
  br i1 %8, label %10, label %9, !dbg !6087

; <label>:9:                                      ; preds = %4, %2
  br label %10, !dbg !6088

; <label>:10:                                     ; preds = %4, %9
  %11 = phi %struct.type_S* [ @t_func_unknown, %9 ], [ @t_func_any, %4 ]
  ret %struct.type_S* %11, !dbg !6089
}

; Function Attrs: nounwind uwtable
define internal void @f_function(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6090 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6092, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6093, metadata !DIExpression()), !dbg !6095
  tail call fastcc void @common_function(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !6096
  ret void, !dbg !6097
}

; Function Attrs: nounwind uwtable
define internal void @f_garbagecollect(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !6098 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6100, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6101, metadata !DIExpression()), !dbg !6103
  store i32 1, i32* @want_garbage_collect, align 4, !dbg !6104, !tbaa !2904
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6105
  %4 = load i32, i32* %3, align 8, !dbg !6105, !tbaa !3221
  %5 = icmp eq i32 %4, 0, !dbg !6107
  br i1 %5, label %10, label %6, !dbg !6108

; <label>:6:                                      ; preds = %2
  %7 = tail call i64 @tv_get_bool(%struct.typval_T* nonnull %0) #9, !dbg !6109
  %8 = icmp eq i64 %7, 1, !dbg !6110
  br i1 %8, label %9, label %10, !dbg !6111

; <label>:9:                                      ; preds = %6
  store i32 1, i32* @garbage_collect_at_exit, align 4, !dbg !6112, !tbaa !2904
  br label %10, !dbg !6113

; <label>:10:                                     ; preds = %2, %9, %6
  ret void, !dbg !6114
}

; Function Attrs: nounwind uwtable
define internal void @f_get(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6115 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.partial_S, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6117, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6118, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata %struct.typval_T* null, metadata !6123, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i32 0, metadata !6124, metadata !DIExpression()), !dbg !6153
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6154
  %7 = load i32, i32* %6, align 8, !dbg !6154, !tbaa !3221
  switch i32 %7, label %144 [
    i32 8, label %8
    i32 11, label %42
    i32 12, label %57
    i32 10, label %67
    i32 9, label %67
  ], !dbg !6155

; <label>:8:                                      ; preds = %2
  %9 = bitcast i32* %3 to i8*, !dbg !6156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9, !dbg !6156
  call void @llvm.dbg.value(metadata i32 0, metadata !6125, metadata !DIExpression()), !dbg !6157
  store i32 0, i32* %3, align 4, !dbg !6157, !tbaa !2904
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6158
  call void @llvm.dbg.value(metadata i32* %3, metadata !6125, metadata !DIExpression()), !dbg !6157
  %11 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %10, i32* nonnull %3) #9, !dbg !6159
  %12 = trunc i64 %11 to i32, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %12, metadata !6128, metadata !DIExpression()), !dbg !6160
  %13 = load i32, i32* %3, align 4, !dbg !6161, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %13, metadata !6125, metadata !DIExpression()), !dbg !6157
  %14 = icmp eq i32 %13, 0, !dbg !6161
  br i1 %14, label %15, label %40, !dbg !6163

; <label>:15:                                     ; preds = %8
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6164
  store i32 5, i32* %16, align 8, !dbg !6166, !tbaa !3221
  %17 = icmp slt i32 %12, 0, !dbg !6167
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2
  %19 = bitcast %union.anon* %18 to %struct.blobvar_S**
  br i1 %17, label %20, label %26, !dbg !6169

; <label>:20:                                     ; preds = %15
  %21 = load %struct.blobvar_S*, %struct.blobvar_S** %19, align 8, !dbg !6170, !tbaa !2918
  %22 = call i64 @blob_len(%struct.blobvar_S* %21) #9, !dbg !6171
  %23 = add i64 %22, %11, !dbg !6172
  %24 = trunc i64 %23 to i32, !dbg !6171
  call void @llvm.dbg.value(metadata i32 %24, metadata !6128, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %24, metadata !6128, metadata !DIExpression()), !dbg !6160
  %25 = icmp slt i32 %24, 0, !dbg !6173
  br i1 %25, label %36, label %26, !dbg !6175

; <label>:26:                                     ; preds = %15, %20
  %27 = phi i32 [ %24, %20 ], [ %12, %15 ]
  %28 = sext i32 %27 to i64, !dbg !6176
  %29 = load %struct.blobvar_S*, %struct.blobvar_S** %19, align 8, !dbg !6177, !tbaa !2918
  %30 = call i64 @blob_len(%struct.blobvar_S* %29) #9, !dbg !6178
  %31 = icmp sgt i64 %30, %28, !dbg !6179
  br i1 %31, label %32, label %36, !dbg !6180

; <label>:32:                                     ; preds = %26
  %33 = load %struct.blobvar_S*, %struct.blobvar_S** %19, align 8, !dbg !6181, !tbaa !2918
  %34 = call i32 @blob_get(%struct.blobvar_S* %33, i32 %27) #9, !dbg !6183
  %35 = sext i32 %34 to i64, !dbg !6183
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6123, metadata !DIExpression()), !dbg !6152
  br label %36

; <label>:36:                                     ; preds = %20, %26, %32
  %37 = phi i64 [ %35, %32 ], [ -1, %26 ], [ -1, %20 ]
  %38 = phi %struct.typval_T* [ %1, %32 ], [ null, %26 ], [ null, %20 ]
  %39 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %37, i64* %39, align 8, !tbaa !2918
  br label %40, !dbg !6184

; <label>:40:                                     ; preds = %36, %8
  %41 = phi %struct.typval_T* [ null, %8 ], [ %38, %36 ]
  call void @llvm.dbg.value(metadata %struct.typval_T* %41, metadata !6123, metadata !DIExpression()), !dbg !6152
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9, !dbg !6184
  br label %147, !dbg !6185

; <label>:42:                                     ; preds = %2
  %43 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !6186
  %44 = bitcast %union.anon* %43 to %struct.listvar_S**, !dbg !6187
  %45 = load %struct.listvar_S*, %struct.listvar_S** %44, align 8, !dbg !6187, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %45, metadata !6120, metadata !DIExpression()), !dbg !6188
  %46 = icmp eq %struct.listvar_S* %45, null, !dbg !6189
  br i1 %46, label %150, label %47, !dbg !6190

; <label>:47:                                     ; preds = %42
  %48 = bitcast i32* %4 to i8*, !dbg !6191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #9, !dbg !6191
  call void @llvm.dbg.value(metadata i32 0, metadata !6129, metadata !DIExpression()), !dbg !6192
  store i32 0, i32* %4, align 4, !dbg !6192, !tbaa !2904
  %49 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6193
  call void @llvm.dbg.value(metadata i32* %4, metadata !6129, metadata !DIExpression()), !dbg !6192
  %50 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %49, i32* nonnull %4) #9, !dbg !6194
  %51 = call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %45, i64 %50) #9, !dbg !6195
  call void @llvm.dbg.value(metadata %struct.listitem_S* %51, metadata !6119, metadata !DIExpression()), !dbg !6196
  %52 = load i32, i32* %4, align 4, !dbg !6197, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %52, metadata !6129, metadata !DIExpression()), !dbg !6192
  %53 = icmp eq i32 %52, 0, !dbg !6197
  %54 = icmp ne %struct.listitem_S* %51, null, !dbg !6199
  %55 = and i1 %54, %53, !dbg !6200
  %56 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %51, i64 0, i32 2, !dbg !6201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #9, !dbg !6202
  br i1 %55, label %156, label %150

; <label>:57:                                     ; preds = %2
  %58 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !6203
  %59 = bitcast %union.anon* %58 to %struct.dictvar_S**, !dbg !6206
  %60 = load %struct.dictvar_S*, %struct.dictvar_S** %59, align 8, !dbg !6206, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %60, metadata !6122, metadata !DIExpression()), !dbg !6207
  %61 = icmp eq %struct.dictvar_S* %60, null, !dbg !6208
  br i1 %61, label %150, label %62, !dbg !6209

; <label>:62:                                     ; preds = %57
  %63 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6210
  %64 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %63) #9, !dbg !6212
  %65 = tail call %struct.dictitem_S* @dict_find(%struct.dictvar_S* nonnull %60, i8* %64, i32 -1) #9, !dbg !6213
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %65, metadata !6121, metadata !DIExpression()), !dbg !6214
  %66 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %65, i64 0, i32 0, !dbg !6215
  br label %147, !dbg !6217

; <label>:67:                                     ; preds = %2, %2
  %68 = bitcast %struct.partial_S* %5 to i8*, !dbg !6218
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %68) #9, !dbg !6218
  %69 = icmp eq i32 %7, 10, !dbg !6219
  br i1 %69, label %75, label %70, !dbg !6221

; <label>:70:                                     ; preds = %67
  call void @llvm.memset.p0i8.i64(i8* nonnull %68, i8 0, i64 104, i32 8, i1 false), !dbg !6222
  %71 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !6224
  %72 = load i64, i64* %71, align 8, !dbg !6224, !tbaa !2918
  %73 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %5, i64 0, i32 1, !dbg !6225
  %74 = bitcast i8** %73 to i64*, !dbg !6226
  store i64 %72, i64* %74, align 8, !dbg !6226, !tbaa !6227
  call void @llvm.dbg.value(metadata %struct.partial_S* %5, metadata !6134, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata %struct.partial_S* %78, metadata !6134, metadata !DIExpression()), !dbg !6230
  br label %80, !dbg !6231

; <label>:75:                                     ; preds = %67
  %76 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !6232
  %77 = bitcast %union.anon* %76 to %struct.partial_S**, !dbg !6233
  %78 = load %struct.partial_S*, %struct.partial_S** %77, align 8, !dbg !6233, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.partial_S* %78, metadata !6134, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata %struct.partial_S* %78, metadata !6134, metadata !DIExpression()), !dbg !6230
  %79 = icmp eq %struct.partial_S* %78, null, !dbg !6234
  br i1 %79, label %143, label %80, !dbg !6231

; <label>:80:                                     ; preds = %70, %75
  %81 = phi %struct.partial_S* [ %5, %70 ], [ %78, %75 ]
  %82 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6235
  %83 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %82) #9, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %83, metadata !6139, metadata !DIExpression()), !dbg !6237
  %84 = tail call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.727, i64 0, i64 0)) #10, !dbg !6238
  %85 = icmp eq i32 %84, 0, !dbg !6239
  br i1 %85, label %89, label %86, !dbg !6240

; <label>:86:                                     ; preds = %80
  %87 = tail call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.728, i64 0, i64 0)) #10, !dbg !6241
  %88 = icmp eq i32 %87, 0, !dbg !6242
  br i1 %88, label %89, label %106, !dbg !6243

; <label>:89:                                     ; preds = %86, %80
  %90 = load i8, i8* %83, align 1, !dbg !6244, !tbaa !2918
  %91 = icmp eq i8 %90, 102, !dbg !6246
  %92 = select i1 %91, i32 9, i32 7, !dbg !6244
  %93 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6247
  store i32 %92, i32* %93, align 8, !dbg !6248, !tbaa !3221
  %94 = call i8* @partial_name(%struct.partial_S* nonnull %81) #9, !dbg !6249
  call void @llvm.dbg.value(metadata i8* %94, metadata !6142, metadata !DIExpression()), !dbg !6250
  %95 = icmp eq i8* %94, null, !dbg !6251
  br i1 %95, label %96, label %99, !dbg !6253

; <label>:96:                                     ; preds = %89
  %97 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6254
  %98 = bitcast %union.anon* %97 to i8**, !dbg !6255
  store i8* null, i8** %98, align 8, !dbg !6256, !tbaa !2918
  br label %142, !dbg !6257

; <label>:99:                                     ; preds = %89
  %100 = call i8* @vim_strsave(i8* nonnull %94) #9, !dbg !6258
  %101 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6260
  %102 = bitcast %union.anon* %101 to i8**, !dbg !6261
  store i8* %100, i8** %102, align 8, !dbg !6262, !tbaa !2918
  %103 = load i32, i32* %93, align 8, !dbg !6263, !tbaa !3221
  %104 = icmp eq i32 %103, 9, !dbg !6265
  br i1 %104, label %105, label %142, !dbg !6266

; <label>:105:                                    ; preds = %99
  call void @func_ref(i8* %100) #9, !dbg !6267
  br label %142, !dbg !6267

; <label>:106:                                    ; preds = %86
  %107 = tail call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i64 0, i64 0)) #10, !dbg !6268
  %108 = icmp eq i32 %107, 0, !dbg !6269
  br i1 %108, label %109, label %114, !dbg !6270

; <label>:109:                                    ; preds = %106
  call void @llvm.dbg.value(metadata i32 1, metadata !6124, metadata !DIExpression()), !dbg !6153
  %110 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %81, i64 0, i32 8, !dbg !6271
  %111 = load %struct.dictvar_S*, %struct.dictvar_S** %110, align 8, !dbg !6271, !tbaa !6274
  %112 = icmp eq %struct.dictvar_S* %111, null, !dbg !6275
  br i1 %112, label %143, label %113, !dbg !6276

; <label>:113:                                    ; preds = %109
  tail call void @rettv_dict_set(%struct.typval_T* %1, %struct.dictvar_S* nonnull %111) #9, !dbg !6277
  br label %143, !dbg !6277

; <label>:114:                                    ; preds = %106
  %115 = tail call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i64 0, i64 0)) #10, !dbg !6278
  %116 = icmp eq i32 %115, 0, !dbg !6279
  br i1 %116, label %117, label %139, !dbg !6280

; <label>:117:                                    ; preds = %114
  %118 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6281
  store i32 11, i32* %118, align 8, !dbg !6282, !tbaa !3221
  %119 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !6283
  %120 = icmp eq i32 %119, 1, !dbg !6284
  br i1 %120, label %121, label %142, !dbg !6285

; <label>:121:                                    ; preds = %117
  call void @llvm.dbg.value(metadata i32 0, metadata !6143, metadata !DIExpression()), !dbg !6286
  %122 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %81, i64 0, i32 6, !dbg !6287
  %123 = load i32, i32* %122, align 8, !dbg !6287, !tbaa !6290
  %124 = icmp sgt i32 %123, 0, !dbg !6291
  br i1 %124, label %125, label %142, !dbg !6292

; <label>:125:                                    ; preds = %121
  %126 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %127 = bitcast %union.anon* %126 to %struct.listvar_S**
  %128 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %81, i64 0, i32 7
  br label %129, !dbg !6292

; <label>:129:                                    ; preds = %125, %129
  %130 = phi i64 [ 0, %125 ], [ %135, %129 ]
  call void @llvm.dbg.value(metadata i64 %130, metadata !6143, metadata !DIExpression()), !dbg !6286
  %131 = load %struct.listvar_S*, %struct.listvar_S** %127, align 8, !dbg !6293, !tbaa !2918
  %132 = load %struct.typval_T*, %struct.typval_T** %128, align 8, !dbg !6294, !tbaa !6295
  %133 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %132, i64 %130, !dbg !6296
  %134 = tail call i32 @list_append_tv(%struct.listvar_S* %131, %struct.typval_T* %133) #9, !dbg !6297
  %135 = add nuw nsw i64 %130, 1, !dbg !6298
  %136 = load i32, i32* %122, align 8, !dbg !6287, !tbaa !6290
  %137 = sext i32 %136 to i64, !dbg !6291
  %138 = icmp slt i64 %135, %137, !dbg !6291
  br i1 %138, label %129, label %142, !dbg !6292, !llvm.loop !6299

; <label>:139:                                    ; preds = %114
  %140 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !6301
  %141 = tail call i32 (i8*, ...) @semsg(i8* %140, i8* %83) #9, !dbg !6302
  br label %142

; <label>:142:                                    ; preds = %129, %121, %96, %105, %99, %117, %139
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %68) #9, !dbg !6303
  br label %158

; <label>:143:                                    ; preds = %109, %113, %75
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %68) #9, !dbg !6303
  br label %150

; <label>:144:                                    ; preds = %2
  %145 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_listdictblobarg, i64 0, i64 0), i32 5) #9, !dbg !6304
  %146 = tail call i32 (i8*, ...) @semsg(i8* %145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.731, i64 0, i64 0)) #9, !dbg !6305
  br label %150

; <label>:147:                                    ; preds = %62, %40
  %148 = phi %struct.typval_T* [ %41, %40 ], [ %66, %62 ]
  call void @llvm.dbg.value(metadata %struct.typval_T* %148, metadata !6123, metadata !DIExpression()), !dbg !6152
  %149 = icmp eq %struct.typval_T* %148, null, !dbg !6306
  br i1 %149, label %150, label %156, !dbg !6308

; <label>:150:                                    ; preds = %144, %143, %57, %42, %47, %147
  %151 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !6309
  %152 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %151, i64 0, i32 0, !dbg !6312
  %153 = load i32, i32* %152, align 8, !dbg !6312, !tbaa !3221
  %154 = icmp eq i32 %153, 0, !dbg !6313
  br i1 %154, label %158, label %155, !dbg !6314

; <label>:155:                                    ; preds = %150
  call void @copy_tv(%struct.typval_T* nonnull %151, %struct.typval_T* %1) #9, !dbg !6315
  br label %158, !dbg !6315

; <label>:156:                                    ; preds = %47, %147
  %157 = phi %struct.typval_T* [ %148, %147 ], [ %56, %47 ]
  call void @copy_tv(%struct.typval_T* nonnull %157, %struct.typval_T* %1) #9, !dbg !6316
  br label %158

; <label>:158:                                    ; preds = %142, %156, %155, %150
  ret void, !dbg !6317
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_dict_any(i32, %struct.type_S** nocapture readnone) #7 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  ret %struct.type_S* @t_list_dict_any, !dbg !6324
}

declare void @f_getbufinfo(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getbufline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getbufvar(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_getchangelist(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6325 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6327, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6328, metadata !DIExpression()), !dbg !6334
  %3 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !6335
  %4 = icmp eq i32 %3, 1, !dbg !6337
  br i1 %4, label %5, label %69, !dbg !6338

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6339
  %7 = load i32, i32* %6, align 8, !dbg !6339, !tbaa !3221
  %8 = icmp eq i32 %7, 0, !dbg !6341
  br i1 %8, label %9, label %11, !dbg !6342

; <label>:9:                                      ; preds = %5
  %10 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6343, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.file_buffer* %10, metadata !6329, metadata !DIExpression()), !dbg !6344
  br label %13, !dbg !6345

; <label>:11:                                     ; preds = %5
  %12 = tail call %struct.file_buffer* @tv_get_buf_from_arg(%struct.typval_T* nonnull %0) #9, !dbg !6346
  call void @llvm.dbg.value(metadata %struct.file_buffer* %12, metadata !6329, metadata !DIExpression()), !dbg !6344
  br label %13

; <label>:13:                                     ; preds = %11, %9
  %14 = phi %struct.file_buffer* [ %10, %9 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.file_buffer* %14, metadata !6329, metadata !DIExpression()), !dbg !6344
  %15 = icmp eq %struct.file_buffer* %14, null, !dbg !6347
  br i1 %15, label %69, label %16, !dbg !6349

; <label>:16:                                     ; preds = %13
  %17 = tail call %struct.listvar_S* @list_alloc() #9, !dbg !6350
  call void @llvm.dbg.value(metadata %struct.listvar_S* %17, metadata !6331, metadata !DIExpression()), !dbg !6351
  %18 = icmp eq %struct.listvar_S* %17, null, !dbg !6352
  br i1 %18, label %69, label %19, !dbg !6354

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6355
  %21 = bitcast %union.anon* %20 to %struct.listvar_S**, !dbg !6357
  %22 = load %struct.listvar_S*, %struct.listvar_S** %21, align 8, !dbg !6357, !tbaa !2918
  %23 = tail call i32 @list_append_list(%struct.listvar_S* %22, %struct.listvar_S* nonnull %17) #9, !dbg !6358
  %24 = icmp eq i32 %23, 0, !dbg !6359
  br i1 %24, label %69, label %25, !dbg !6360

; <label>:25:                                     ; preds = %19
  %26 = load %struct.listvar_S*, %struct.listvar_S** %21, align 8, !dbg !6361, !tbaa !2918
  %27 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6362, !tbaa !2783
  %28 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 1, !dbg !6363
  %29 = load %struct.file_buffer*, %struct.file_buffer** %28, align 8, !dbg !6363, !tbaa !6364
  %30 = icmp eq %struct.file_buffer* %14, %29, !dbg !6365
  %31 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 141, !dbg !6366
  %32 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %14, i64 0, i32 37, !dbg !6367
  %33 = select i1 %30, i32* %31, i32* %32, !dbg !6368
  %34 = load i32, i32* %33, align 8, !dbg !6368, !tbaa !2904
  %35 = sext i32 %34 to i64, !dbg !6369
  %36 = tail call i32 @list_append_number(%struct.listvar_S* %26, i64 %35) #9, !dbg !6370
  call void @llvm.dbg.value(metadata i32 0, metadata !6330, metadata !DIExpression()), !dbg !6371
  %37 = load i32, i32* %32, align 8, !dbg !6372, !tbaa !6375
  %38 = icmp sgt i32 %37, 0, !dbg !6376
  br i1 %38, label %39, label %69, !dbg !6377

; <label>:39:                                     ; preds = %25
  br label %40, !dbg !6378

; <label>:40:                                     ; preds = %39, %64
  %41 = phi i32 [ %65, %64 ], [ %37, %39 ]
  %42 = phi i64 [ %66, %64 ], [ 0, %39 ]
  call void @llvm.dbg.value(metadata i64 %42, metadata !6330, metadata !DIExpression()), !dbg !6371
  %43 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %14, i64 0, i32 36, i64 %42, i32 0, !dbg !6378
  %44 = load i64, i64* %43, align 8, !dbg !6378, !tbaa !4160
  %45 = icmp eq i64 %44, 0, !dbg !6381
  br i1 %45, label %64, label %46, !dbg !6382

; <label>:46:                                     ; preds = %40
  %47 = tail call %struct.dictvar_S* @dict_alloc() #9, !dbg !6383
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %47, metadata !6332, metadata !DIExpression()), !dbg !6385
  %48 = icmp eq %struct.dictvar_S* %47, null, !dbg !6386
  br i1 %48, label %69, label %49, !dbg !6387

; <label>:49:                                     ; preds = %46
  %50 = tail call i32 @list_append_dict(%struct.listvar_S* nonnull %17, %struct.dictvar_S* nonnull %47) #9, !dbg !6388
  %51 = icmp eq i32 %50, 0, !dbg !6390
  br i1 %51, label %69, label %52, !dbg !6391

; <label>:52:                                     ; preds = %49
  %53 = load i64, i64* %43, align 8, !dbg !6392, !tbaa !4160
  %54 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.732, i64 0, i64 0), i64 %53) #9, !dbg !6393
  %55 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %14, i64 0, i32 36, i64 %42, i32 1, !dbg !6394
  %56 = load i32, i32* %55, align 8, !dbg !6394, !tbaa !4166
  %57 = sext i32 %56 to i64, !dbg !6395
  %58 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.277, i64 0, i64 0), i64 %57) #9, !dbg !6396
  %59 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %14, i64 0, i32 36, i64 %42, i32 2, !dbg !6397
  %60 = load i32, i32* %59, align 4, !dbg !6397, !tbaa !6398
  %61 = sext i32 %60 to i64, !dbg !6399
  %62 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.733, i64 0, i64 0), i64 %61) #9, !dbg !6400
  %63 = load i32, i32* %32, align 8, !dbg !6372, !tbaa !6375
  br label %64, !dbg !6401

; <label>:64:                                     ; preds = %40, %52
  %65 = phi i32 [ %41, %40 ], [ %63, %52 ], !dbg !6372
  %66 = add nuw nsw i64 %42, 1, !dbg !6402
  %67 = sext i32 %65 to i64, !dbg !6376
  %68 = icmp slt i64 %66, %67, !dbg !6376
  br i1 %68, label %40, label %69, !dbg !6377, !llvm.loop !6403

; <label>:69:                                     ; preds = %46, %49, %64, %25, %19, %16, %13, %2
  ret void, !dbg !6405
}

declare void @f_getchar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getcharmod(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_number(i32, %struct.type_S** nocapture readnone) #7 !dbg !6406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6409, metadata !DIExpression()), !dbg !6411
  ret %struct.type_S* @t_list_number, !dbg !6412
}

; Function Attrs: nounwind uwtable
define internal void @f_getcharpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6413 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6415, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6416, metadata !DIExpression()), !dbg !6418
  tail call fastcc void @getpos_both(%struct.typval_T* %0, %struct.typval_T* %1, i32 0, i32 1), !dbg !6419
  ret void, !dbg !6420
}

; Function Attrs: nounwind uwtable
define internal void @f_getcharsearch(%struct.typval_T* nocapture readnone, %struct.typval_T*) #0 !dbg !6421 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6423, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6424, metadata !DIExpression()), !dbg !6429
  %3 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !6430
  %4 = icmp eq i32 %3, 0, !dbg !6431
  br i1 %4, label %17, label %5, !dbg !6432

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6433
  %7 = bitcast %union.anon* %6 to %struct.dictvar_S**, !dbg !6434
  %8 = load %struct.dictvar_S*, %struct.dictvar_S** %7, align 8, !dbg !6434, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %8, metadata !6425, metadata !DIExpression()), !dbg !6435
  %9 = tail call i8* @last_csearch() #9, !dbg !6436
  %10 = tail call i32 @dict_add_string(%struct.dictvar_S* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.734, i64 0, i64 0), i8* %9) #9, !dbg !6437
  %11 = tail call i32 @last_csearch_forward() #9, !dbg !6438
  %12 = sext i32 %11 to i64, !dbg !6438
  %13 = tail call i32 @dict_add_number(%struct.dictvar_S* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.735, i64 0, i64 0), i64 %12) #9, !dbg !6439
  %14 = tail call i32 @last_csearch_until() #9, !dbg !6440
  %15 = sext i32 %14 to i64, !dbg !6440
  %16 = tail call i32 @dict_add_number(%struct.dictvar_S* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.736, i64 0, i64 0), i64 %15) #9, !dbg !6441
  br label %17, !dbg !6442

; <label>:17:                                     ; preds = %2, %5
  ret void, !dbg !6443
}

declare void @f_getcmdline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getcmdpos(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getcmdtype(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getcmdwintype(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getcompletion(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_getcurpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6444 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6447, metadata !DIExpression()), !dbg !6449
  tail call fastcc void @getpos_both(%struct.typval_T* %0, %struct.typval_T* %1, i32 1, i32 0), !dbg !6450
  ret void, !dbg !6451
}

; Function Attrs: nounwind uwtable
define internal void @f_getcursorcharpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6452 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6454, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6455, metadata !DIExpression()), !dbg !6457
  tail call fastcc void @getpos_both(%struct.typval_T* %0, %struct.typval_T* %1, i32 1, i32 1), !dbg !6458
  ret void, !dbg !6459
}

declare void @f_getcwd(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_getenv(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6460 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6462, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6463, metadata !DIExpression()), !dbg !6467
  %4 = bitcast i32* %3 to i8*, !dbg !6468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !6468
  call void @llvm.dbg.value(metadata i32 0, metadata !6464, metadata !DIExpression()), !dbg !6469
  store i32 0, i32* %3, align 4, !dbg !6469, !tbaa !2904
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !6470
  call void @llvm.dbg.value(metadata i32* %3, metadata !6464, metadata !DIExpression()), !dbg !6469
  %6 = call i8* @vim_getenv(i8* %5, i32* nonnull %3) #9, !dbg !6471
  call void @llvm.dbg.value(metadata i8* %6, metadata !6465, metadata !DIExpression()), !dbg !6472
  %7 = icmp eq i8* %6, null, !dbg !6473
  br i1 %7, label %8, label %11, !dbg !6475

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6476
  store i32 4, i32* %9, align 8, !dbg !6478, !tbaa !3221
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !6479
  store i64 3, i64* %10, align 8, !dbg !6480, !tbaa !2918
  br label %21, !dbg !6481

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %3, align 4, !dbg !6482, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %12, metadata !6464, metadata !DIExpression()), !dbg !6469
  %13 = icmp eq i32 %12, 0, !dbg !6482
  br i1 %13, label %14, label %16, !dbg !6484

; <label>:14:                                     ; preds = %11
  %15 = call i8* @vim_strsave(i8* nonnull %6) #9, !dbg !6485
  call void @llvm.dbg.value(metadata i8* %15, metadata !6465, metadata !DIExpression()), !dbg !6472
  br label %16, !dbg !6486

; <label>:16:                                     ; preds = %11, %14
  %17 = phi i8* [ %6, %11 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6465, metadata !DIExpression()), !dbg !6472
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6487
  %19 = bitcast %union.anon* %18 to i8**, !dbg !6488
  store i8* %17, i8** %19, align 8, !dbg !6489, !tbaa !2918
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6490
  store i32 7, i32* %20, align 8, !dbg !6491, !tbaa !3221
  br label %21, !dbg !6492

; <label>:21:                                     ; preds = %16, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !6492
  ret void, !dbg !6492
}

; Function Attrs: nounwind uwtable
define internal void @f_getfontname(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6493 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6495, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6496, metadata !DIExpression()), !dbg !6502
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6503
  store i32 7, i32* %3, align 8, !dbg !6504, !tbaa !3221
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6505
  %5 = bitcast %union.anon* %4 to i8**, !dbg !6506
  store i8* null, i8** %5, align 8, !dbg !6507, !tbaa !2918
  %6 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !6508, !tbaa !3859
  %7 = icmp eq i32 %6, 0, !dbg !6509
  br i1 %7, label %29, label %8, !dbg !6510

; <label>:8:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i8* null, metadata !6500, metadata !DIExpression()), !dbg !6511
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6512
  %10 = load i32, i32* %9, align 8, !dbg !6512, !tbaa !3221
  %11 = icmp eq i32 %10, 0, !dbg !6514
  br i1 %11, label %12, label %15, !dbg !6515

; <label>:12:                                     ; preds = %8
  %13 = load %struct._PangoFontDescription*, %struct._PangoFontDescription** getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 34), align 8, !dbg !6516, !tbaa !6518
  call void @llvm.dbg.value(metadata %struct._PangoFontDescription* %13, metadata !6497, metadata !DIExpression()), !dbg !6519
  %14 = tail call i8* @hl_get_font_name() #9, !dbg !6520
  call void @llvm.dbg.value(metadata i8* %14, metadata !6500, metadata !DIExpression()), !dbg !6511
  br label %22, !dbg !6521

; <label>:15:                                     ; preds = %8
  %16 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !6522
  call void @llvm.dbg.value(metadata i8* %16, metadata !6500, metadata !DIExpression()), !dbg !6511
  %17 = tail call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.737, i64 0, i64 0)) #10, !dbg !6524
  %18 = icmp eq i32 %17, 0, !dbg !6526
  br i1 %18, label %29, label %19, !dbg !6527

; <label>:19:                                     ; preds = %15
  %20 = tail call %struct._PangoFontDescription* @gui_mch_get_font(i8* %16, i32 0) #9, !dbg !6528
  call void @llvm.dbg.value(metadata %struct._PangoFontDescription* %20, metadata !6497, metadata !DIExpression()), !dbg !6519
  %21 = icmp eq %struct._PangoFontDescription* %20, null, !dbg !6529
  br i1 %21, label %29, label %22, !dbg !6531

; <label>:22:                                     ; preds = %19, %12
  %23 = phi %struct._PangoFontDescription* [ %13, %12 ], [ %20, %19 ]
  %24 = phi i8* [ %14, %12 ], [ %16, %19 ]
  call void @llvm.dbg.value(metadata i8* %24, metadata !6500, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata %struct._PangoFontDescription* %23, metadata !6497, metadata !DIExpression()), !dbg !6519
  %25 = tail call i8* @gui_mch_get_fontname(%struct._PangoFontDescription* %23, i8* %24) #9, !dbg !6532
  store i8* %25, i8** %5, align 8, !dbg !6533, !tbaa !2918
  %26 = load i32, i32* %9, align 8, !dbg !6534, !tbaa !3221
  %27 = icmp eq i32 %26, 0, !dbg !6536
  br i1 %27, label %29, label %28, !dbg !6537

; <label>:28:                                     ; preds = %22
  tail call void @gui_mch_free_font(%struct._PangoFontDescription* %23) #9, !dbg !6538
  br label %29, !dbg !6538

; <label>:29:                                     ; preds = %28, %22, %19, %15, %2
  ret void
}

declare void @f_getfperm(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getfsize(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getftime(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getftype(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getimstatus(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_getjumplist(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6539 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6541, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6542, metadata !DIExpression()), !dbg !6548
  %3 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !6549
  %4 = icmp eq i32 %3, 1, !dbg !6551
  br i1 %4, label %5, label %64, !dbg !6552

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6553
  %7 = tail call %struct.window_S* @find_tabwin(%struct.typval_T* %0, %struct.typval_T* nonnull %6, %struct.tabpage_S** null) #9, !dbg !6554
  call void @llvm.dbg.value(metadata %struct.window_S* %7, metadata !6543, metadata !DIExpression()), !dbg !6555
  %8 = icmp eq %struct.window_S* %7, null, !dbg !6556
  br i1 %8, label %64, label %9, !dbg !6558

; <label>:9:                                      ; preds = %5
  tail call void @cleanup_jumplist(%struct.window_S* nonnull %7, i32 1) #9, !dbg !6559
  %10 = tail call %struct.listvar_S* @list_alloc() #9, !dbg !6560
  call void @llvm.dbg.value(metadata %struct.listvar_S* %10, metadata !6545, metadata !DIExpression()), !dbg !6561
  %11 = icmp eq %struct.listvar_S* %10, null, !dbg !6562
  br i1 %11, label %64, label %12, !dbg !6564

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6565
  %14 = bitcast %union.anon* %13 to %struct.listvar_S**, !dbg !6567
  %15 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !6567, !tbaa !2918
  %16 = tail call i32 @list_append_list(%struct.listvar_S* %15, %struct.listvar_S* nonnull %10) #9, !dbg !6568
  %17 = icmp eq i32 %16, 0, !dbg !6569
  br i1 %17, label %64, label %18, !dbg !6570

; <label>:18:                                     ; preds = %12
  %19 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !6571, !tbaa !2918
  %20 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 140, !dbg !6572
  %21 = load i32, i32* %20, align 4, !dbg !6572, !tbaa !6573
  %22 = sext i32 %21 to i64, !dbg !6574
  %23 = tail call i32 @list_append_number(%struct.listvar_S* %19, i64 %22) #9, !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6544, metadata !DIExpression()), !dbg !6576
  %24 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 139, !dbg !6577
  %25 = load i32, i32* %24, align 8, !dbg !6577, !tbaa !6580
  %26 = icmp sgt i32 %25, 0, !dbg !6581
  br i1 %26, label %27, label %64, !dbg !6582

; <label>:27:                                     ; preds = %18
  br label %28, !dbg !6583

; <label>:28:                                     ; preds = %27, %59
  %29 = phi i64 [ %60, %59 ], [ 0, %27 ]
  call void @llvm.dbg.value(metadata i64 %29, metadata !6544, metadata !DIExpression()), !dbg !6576
  %30 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 138, i64 %29, i32 0, i32 0, i32 0, !dbg !6583
  %31 = load i64, i64* %30, align 8, !dbg !6583, !tbaa !6586
  %32 = icmp eq i64 %31, 0, !dbg !6589
  br i1 %32, label %59, label %33, !dbg !6590

; <label>:33:                                     ; preds = %28
  %34 = tail call %struct.dictvar_S* @dict_alloc() #9, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %34, metadata !6546, metadata !DIExpression()), !dbg !6593
  %35 = icmp eq %struct.dictvar_S* %34, null, !dbg !6594
  br i1 %35, label %64, label %36, !dbg !6595

; <label>:36:                                     ; preds = %33
  %37 = tail call i32 @list_append_dict(%struct.listvar_S* nonnull %10, %struct.dictvar_S* nonnull %34) #9, !dbg !6596
  %38 = icmp eq i32 %37, 0, !dbg !6598
  br i1 %38, label %64, label %39, !dbg !6599

; <label>:39:                                     ; preds = %36
  %40 = load i64, i64* %30, align 8, !dbg !6600, !tbaa !6586
  %41 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.732, i64 0, i64 0), i64 %40) #9, !dbg !6601
  %42 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 138, i64 %29, i32 0, i32 0, i32 1, !dbg !6602
  %43 = load i32, i32* %42, align 8, !dbg !6602, !tbaa !6603
  %44 = sext i32 %43 to i64, !dbg !6604
  %45 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %34, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.277, i64 0, i64 0), i64 %44) #9, !dbg !6605
  %46 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 138, i64 %29, i32 0, i32 0, i32 2, !dbg !6606
  %47 = load i32, i32* %46, align 4, !dbg !6606, !tbaa !6607
  %48 = sext i32 %47 to i64, !dbg !6608
  %49 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.733, i64 0, i64 0), i64 %48) #9, !dbg !6609
  %50 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 138, i64 %29, i32 0, i32 1, !dbg !6610
  %51 = load i32, i32* %50, align 8, !dbg !6610, !tbaa !6611
  %52 = sext i32 %51 to i64, !dbg !6612
  %53 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i64 0, i64 0), i64 %52) #9, !dbg !6613
  %54 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 138, i64 %29, i32 1, !dbg !6614
  %55 = load i8*, i8** %54, align 8, !dbg !6614, !tbaa !6616
  %56 = icmp eq i8* %55, null, !dbg !6617
  br i1 %56, label %59, label %57, !dbg !6618

; <label>:57:                                     ; preds = %39
  %58 = tail call i32 @dict_add_string(%struct.dictvar_S* nonnull %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.738, i64 0, i64 0), i8* nonnull %55) #9, !dbg !6619
  br label %59, !dbg !6619

; <label>:59:                                     ; preds = %39, %57, %28
  %60 = add nuw nsw i64 %29, 1, !dbg !6620
  %61 = load i32, i32* %24, align 8, !dbg !6577, !tbaa !6580
  %62 = sext i32 %61 to i64, !dbg !6581
  %63 = icmp slt i64 %60, %62, !dbg !6581
  br i1 %63, label %28, label %64, !dbg !6582, !llvm.loop !6621

; <label>:64:                                     ; preds = %33, %36, %59, %18, %12, %9, %5, %2
  ret void, !dbg !6623
}

declare %struct.type_S* @ret_f_getline(i32, %struct.type_S**) #3

declare void @f_getline(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_or_dict_1(i32, %struct.type_S** nocapture readnone) #7 !dbg !6624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6626, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6627, metadata !DIExpression()), !dbg !6629
  %3 = icmp sgt i32 %0, 1, !dbg !6630
  %4 = select i1 %3, %struct.type_S* @t_dict_any, %struct.type_S* @t_list_dict_any, !dbg !6632
  ret %struct.type_S* %4, !dbg !6633
}

declare void @f_getloclist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getmarklist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getmatches(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_dict_number(i32, %struct.type_S** nocapture readnone) #7 !dbg !6634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6636, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6637, metadata !DIExpression()), !dbg !6639
  ret %struct.type_S* @t_dict_number, !dbg !6640
}

declare void @f_getmousepos(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_getpid(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !6641 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6644, metadata !DIExpression()), !dbg !6646
  %3 = tail call i64 @mch_get_pid() #9, !dbg !6647
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !6648
  store i64 %3, i64* %4, align 8, !dbg !6649, !tbaa !2918
  ret void, !dbg !6650
}

; Function Attrs: nounwind uwtable
define internal void @f_getpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6651 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6653, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6654, metadata !DIExpression()), !dbg !6656
  tail call fastcc void @getpos_both(%struct.typval_T* %0, %struct.typval_T* %1, i32 0, i32 0), !dbg !6657
  ret void, !dbg !6658
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_list_or_dict_0(i32, %struct.type_S** nocapture readnone) #7 !dbg !6659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6661, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6662, metadata !DIExpression()), !dbg !6664
  %3 = icmp sgt i32 %0, 0, !dbg !6665
  %4 = select i1 %3, %struct.type_S* @t_dict_any, %struct.type_S* @t_list_dict_any, !dbg !6667
  ret %struct.type_S* %4, !dbg !6668
}

declare void @f_getqflist(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_getreg(i32, %struct.type_S** nocapture readnone) #7 !dbg !6669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6671, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !6672, metadata !DIExpression()), !dbg !6674
  %3 = icmp eq i32 %0, 3, !dbg !6675
  %4 = select i1 %3, %struct.type_S* @t_list_string, %struct.type_S* @t_string, !dbg !6677
  ret %struct.type_S* %4, !dbg !6678
}

; Function Attrs: nounwind uwtable
define internal void @f_getreg(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6679 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6681, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6682, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.value(metadata i32 0, metadata !6685, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i32 0, metadata !6686, metadata !DIExpression()), !dbg !6691
  %4 = bitcast i32* %3 to i8*, !dbg !6692
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !6692
  call void @llvm.dbg.value(metadata i32 0, metadata !6687, metadata !DIExpression()), !dbg !6693
  store i32 0, i32* %3, align 4, !dbg !6693, !tbaa !2904
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6694
  %6 = load i32, i32* %5, align 8, !dbg !6694, !tbaa !3221
  %7 = icmp eq i32 %6, 0, !dbg !6696
  br i1 %7, label %41, label %8, !dbg !6697

; <label>:8:                                      ; preds = %2
  %9 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !6698
  call void @llvm.dbg.value(metadata i8* %9, metadata !6683, metadata !DIExpression()), !dbg !6700
  %10 = icmp eq i8* %9, null, !dbg !6701
  br i1 %10, label %11, label %12, !dbg !6703

; <label>:11:                                     ; preds = %8
  call void @llvm.dbg.value(metadata i32 1, metadata !6687, metadata !DIExpression()), !dbg !6693
  store i32 1, i32* %3, align 4, !dbg !6704, !tbaa !2904
  br label %21, !dbg !6705

; <label>:12:                                     ; preds = %8
  %13 = tail call i32 @in_vim9script() #9, !dbg !6706
  %14 = icmp eq i32 %13, 0, !dbg !6706
  br i1 %14, label %21, label %15, !dbg !6708

; <label>:15:                                     ; preds = %12
  %16 = tail call i64 @strlen(i8* nonnull %9) #10, !dbg !6709
  %17 = icmp ugt i64 %16, 1, !dbg !6710
  br i1 %17, label %18, label %21, !dbg !6711

; <label>:18:                                     ; preds = %15
  %19 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_register_name_must_be_one_char_str, i64 0, i64 0), i32 5) #9, !dbg !6712
  %20 = tail call i32 (i8*, ...) @semsg(i8* %19, i8* nonnull %9) #9, !dbg !6714
  call void @llvm.dbg.value(metadata i32 1, metadata !6687, metadata !DIExpression()), !dbg !6693
  store i32 1, i32* %3, align 4, !dbg !6715, !tbaa !2904
  br label %21, !dbg !6716

; <label>:21:                                     ; preds = %12, %15, %18, %11
  %22 = phi i32 [ 0, %12 ], [ 0, %15 ], [ 1, %18 ], [ 1, %11 ]
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !6717
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %23, i64 0, i32 0, !dbg !6719
  %25 = load i32, i32* %24, align 8, !dbg !6719, !tbaa !3221
  %26 = icmp eq i32 %25, 0, !dbg !6720
  br i1 %26, label %43, label %27, !dbg !6721

; <label>:27:                                     ; preds = %21
  call void @llvm.dbg.value(metadata i32* %3, metadata !6687, metadata !DIExpression()), !dbg !6693
  %28 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %23, i32* nonnull %3) #9, !dbg !6722
  %29 = trunc i64 %28 to i32, !dbg !6724
  call void @llvm.dbg.value(metadata i32 %29, metadata !6685, metadata !DIExpression()), !dbg !6690
  %30 = load i32, i32* %3, align 4, !dbg !6725, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %30, metadata !6687, metadata !DIExpression()), !dbg !6693
  %31 = icmp eq i32 %30, 0, !dbg !6725
  br i1 %31, label %32, label %82, !dbg !6727

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !6728
  %34 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %33, i64 0, i32 0, !dbg !6729
  %35 = load i32, i32* %34, align 8, !dbg !6729, !tbaa !3221
  %36 = icmp eq i32 %35, 0, !dbg !6730
  br i1 %36, label %48, label %37, !dbg !6731

; <label>:37:                                     ; preds = %32
  call void @llvm.dbg.value(metadata i32* %3, metadata !6687, metadata !DIExpression()), !dbg !6693
  %38 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %33, i32* nonnull %3) #9, !dbg !6732
  %39 = trunc i64 %38 to i32, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %39, metadata !6686, metadata !DIExpression()), !dbg !6691
  %40 = load i32, i32* %3, align 4, !dbg !6734, !tbaa !2904
  br label %43, !dbg !6736

; <label>:41:                                     ; preds = %2
  %42 = tail call i8* @get_vim_var_str(i32 31) #9, !dbg !6737
  call void @llvm.dbg.value(metadata i8* %42, metadata !6683, metadata !DIExpression()), !dbg !6700
  br label %48

; <label>:43:                                     ; preds = %21, %37
  %44 = phi i32 [ %22, %21 ], [ %40, %37 ], !dbg !6734
  %45 = phi i32 [ 0, %21 ], [ %29, %37 ]
  %46 = phi i32 [ 0, %21 ], [ %39, %37 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !6686, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 %45, metadata !6685, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i8* %9, metadata !6683, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %44, metadata !6687, metadata !DIExpression()), !dbg !6693
  %47 = icmp eq i32 %44, 0, !dbg !6734
  br i1 %47, label %48, label %82, !dbg !6738

; <label>:48:                                     ; preds = %32, %41, %43
  %49 = phi i32 [ %46, %43 ], [ 0, %41 ], [ 0, %32 ]
  %50 = phi i32 [ %45, %43 ], [ 0, %41 ], [ %29, %32 ]
  %51 = phi i8* [ %9, %43 ], [ %42, %41 ], [ %9, %32 ]
  %52 = icmp eq i8* %51, null, !dbg !6739
  br i1 %52, label %58, label %53, !dbg !6740

; <label>:53:                                     ; preds = %48
  %54 = load i8, i8* %51, align 1, !dbg !6741, !tbaa !2918
  %55 = zext i8 %54 to i32, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %55, metadata !6684, metadata !DIExpression()), !dbg !6742
  %56 = icmp eq i8 %54, 0, !dbg !6743
  %57 = select i1 %56, i32 34, i32 %55, !dbg !6745
  br label %58, !dbg !6745

; <label>:58:                                     ; preds = %53, %48
  %59 = phi i32 [ 34, %48 ], [ %57, %53 ]
  call void @llvm.dbg.value(metadata i32 %59, metadata !6684, metadata !DIExpression()), !dbg !6742
  %60 = icmp eq i32 %49, 0, !dbg !6746
  %61 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0
  br i1 %60, label %76, label %62, !dbg !6748

; <label>:62:                                     ; preds = %58
  store i32 11, i32* %61, align 8, !dbg !6749, !tbaa !3221
  %63 = icmp eq i32 %50, 0, !dbg !6751
  %64 = select i1 %63, i32 4, i32 6, !dbg !6752
  %65 = call i8* @get_reg_contents(i32 %59, i32 %64) #9, !dbg !6753
  %66 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6754
  %67 = bitcast %union.anon* %66 to i8**, !dbg !6755
  store i8* %65, i8** %67, align 8, !dbg !6755, !tbaa !2918
  %68 = icmp eq i8* %65, null, !dbg !6756
  br i1 %68, label %69, label %71, !dbg !6758

; <label>:69:                                     ; preds = %62
  %70 = call i32 @rettv_list_alloc(%struct.typval_T* nonnull %1) #9, !dbg !6759
  br label %82, !dbg !6760

; <label>:71:                                     ; preds = %62
  %72 = getelementptr inbounds i8, i8* %65, i64 72, !dbg !6761
  %73 = bitcast i8* %72 to i32*, !dbg !6761
  %74 = load i32, i32* %73, align 8, !dbg !6762, !tbaa !3547
  %75 = add nsw i32 %74, 1, !dbg !6762
  store i32 %75, i32* %73, align 8, !dbg !6762, !tbaa !3547
  br label %82

; <label>:76:                                     ; preds = %58
  store i32 7, i32* %61, align 8, !dbg !6763, !tbaa !3221
  %77 = icmp eq i32 %50, 0, !dbg !6765
  %78 = select i1 %77, i32 0, i32 2, !dbg !6765
  %79 = call i8* @get_reg_contents(i32 %59, i32 %78) #9, !dbg !6766
  %80 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6767
  %81 = bitcast %union.anon* %80 to i8**, !dbg !6768
  store i8* %79, i8** %81, align 8, !dbg !6769, !tbaa !2918
  br label %82

; <label>:82:                                     ; preds = %27, %76, %71, %69, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !6770
  ret void, !dbg !6770
}

; Function Attrs: nounwind uwtable
define internal void @f_getreginfo(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6771 {
  %3 = alloca [67 x i8], align 16
  %4 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6773, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6774, metadata !DIExpression()), !dbg !6788
  %5 = getelementptr inbounds [67 x i8], [67 x i8]* %3, i64 0, i64 0, !dbg !6789
  call void @llvm.lifetime.start.p0i8(i64 67, i8* nonnull %5) #9, !dbg !6789
  call void @llvm.dbg.declare(metadata [67 x i8]* %3, metadata !6777, metadata !DIExpression()), !dbg !6790
  %6 = bitcast i64* %4 to i8*, !dbg !6791
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9, !dbg !6791
  call void @llvm.dbg.value(metadata i64 0, metadata !6781, metadata !DIExpression()), !dbg !6792
  store i64 0, i64* %4, align 8, !dbg !6792, !tbaa !4053
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6793
  %8 = load i32, i32* %7, align 8, !dbg !6793, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !6795
  br i1 %9, label %22, label %10, !dbg !6796

; <label>:10:                                     ; preds = %2
  %11 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !6797
  call void @llvm.dbg.value(metadata i8* %11, metadata !6775, metadata !DIExpression()), !dbg !6799
  %12 = icmp eq i8* %11, null, !dbg !6800
  br i1 %12, label %72, label %13, !dbg !6802

; <label>:13:                                     ; preds = %10
  %14 = tail call i32 @in_vim9script() #9, !dbg !6803
  %15 = icmp eq i32 %14, 0, !dbg !6803
  br i1 %15, label %25, label %16, !dbg !6805

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 @strlen(i8* nonnull %11) #10, !dbg !6806
  %18 = icmp ugt i64 %17, 1, !dbg !6807
  br i1 %18, label %19, label %25, !dbg !6808

; <label>:19:                                     ; preds = %16
  %20 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_register_name_must_be_one_char_str, i64 0, i64 0), i32 5) #9, !dbg !6809
  %21 = tail call i32 (i8*, ...) @semsg(i8* %20, i8* nonnull %11) #9, !dbg !6811
  br label %72, !dbg !6812

; <label>:22:                                     ; preds = %2
  %23 = tail call i8* @get_vim_var_str(i32 31) #9, !dbg !6813
  call void @llvm.dbg.value(metadata i8* %23, metadata !6775, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i8* %23, metadata !6775, metadata !DIExpression()), !dbg !6799
  %24 = icmp eq i8* %23, null, !dbg !6814
  br i1 %24, label %29, label %25, !dbg !6815

; <label>:25:                                     ; preds = %13, %16, %22
  %26 = phi i8* [ %23, %22 ], [ %11, %16 ], [ %11, %13 ]
  %27 = load i8, i8* %26, align 1, !dbg !6816, !tbaa !2918
  %28 = zext i8 %27 to i32, !dbg !6816
  br label %29, !dbg !6815

; <label>:29:                                     ; preds = %22, %25
  %30 = phi i32 [ %28, %25 ], [ 34, %22 ], !dbg !6815
  call void @llvm.dbg.value(metadata i32 %30, metadata !6776, metadata !DIExpression()), !dbg !6817
  %31 = or i32 %30, 64, !dbg !6818
  %32 = icmp eq i32 %31, 64, !dbg !6818
  %33 = select i1 %32, i32 34, i32 %30, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %33, metadata !6776, metadata !DIExpression()), !dbg !6817
  %34 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !6820
  %35 = icmp eq i32 %34, 0, !dbg !6822
  br i1 %35, label %72, label %36, !dbg !6823

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6824
  %38 = bitcast %union.anon* %37 to %struct.dictvar_S**, !dbg !6825
  %39 = load %struct.dictvar_S*, %struct.dictvar_S** %38, align 8, !dbg !6825, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %39, metadata !6782, metadata !DIExpression()), !dbg !6826
  %40 = tail call i8* @get_reg_contents(i32 %33, i32 6) #9, !dbg !6827
  call void @llvm.dbg.value(metadata %struct.listvar_S* %43, metadata !6783, metadata !DIExpression()), !dbg !6828
  %41 = icmp eq i8* %40, null, !dbg !6829
  br i1 %41, label %72, label %42, !dbg !6831

; <label>:42:                                     ; preds = %36
  %43 = bitcast i8* %40 to %struct.listvar_S*, !dbg !6832
  %44 = tail call i32 @dict_add_list(%struct.dictvar_S* %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.739, i64 0, i64 0), %struct.listvar_S* %43) #9, !dbg !6833
  store i8 0, i8* %5, align 16, !dbg !6834, !tbaa !2918
  %45 = getelementptr inbounds [67 x i8], [67 x i8]* %3, i64 0, i64 1, !dbg !6835
  store i8 0, i8* %45, align 1, !dbg !6836, !tbaa !2918
  call void @llvm.dbg.value(metadata i64* %4, metadata !6781, metadata !DIExpression()), !dbg !6792
  %46 = call zeroext i8 @get_reg_type(i32 %33, i64* nonnull %4) #9, !dbg !6837
  switch i8 %46, label %53 [
    i8 1, label %47
    i8 0, label %48
    i8 2, label %49
  ], !dbg !6838

; <label>:47:                                     ; preds = %42
  store i8 86, i8* %5, align 16, !dbg !6839, !tbaa !2918
  br label %53, !dbg !6841

; <label>:48:                                     ; preds = %42
  store i8 118, i8* %5, align 16, !dbg !6842, !tbaa !2918
  br label %53, !dbg !6843

; <label>:49:                                     ; preds = %42
  %50 = load i64, i64* %4, align 8, !dbg !6844, !tbaa !4053
  call void @llvm.dbg.value(metadata i64 %50, metadata !6781, metadata !DIExpression()), !dbg !6792
  %51 = add nsw i64 %50, 1, !dbg !6845
  %52 = call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %5, i64 67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.740, i64 0, i64 0), i32 22, i64 %51) #9, !dbg !6846
  br label %53, !dbg !6847

; <label>:53:                                     ; preds = %42, %49, %48, %47
  %54 = call i32 @dict_add_string(%struct.dictvar_S* %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.741, i64 0, i64 0), i8* nonnull %5) #9, !dbg !6848
  %55 = call i32 @get_unname_register() #9, !dbg !6849
  %56 = call i32 @get_register_name(i32 %55) #9, !dbg !6850
  %57 = trunc i32 %56 to i8, !dbg !6850
  store i8 %57, i8* %5, align 16, !dbg !6851, !tbaa !2918
  store i8 0, i8* %45, align 1, !dbg !6852, !tbaa !2918
  %58 = icmp eq i32 %33, 34, !dbg !6853
  br i1 %58, label %59, label %61, !dbg !6854

; <label>:59:                                     ; preds = %53
  %60 = call i32 @dict_add_string(%struct.dictvar_S* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.742, i64 0, i64 0), i8* nonnull %5) #9, !dbg !6855
  br label %72, !dbg !6856

; <label>:61:                                     ; preds = %53
  %62 = call %struct.dictitem_S* @dictitem_alloc(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.743, i64 0, i64 0)) #9, !dbg !6857
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %62, metadata !6784, metadata !DIExpression()), !dbg !6858
  %63 = icmp eq %struct.dictitem_S* %62, null, !dbg !6859
  br i1 %63, label %72, label %64, !dbg !6861

; <label>:64:                                     ; preds = %61
  %65 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %62, i64 0, i32 0, i32 0, !dbg !6862
  store i32 4, i32* %65, align 8, !dbg !6864, !tbaa !6865
  %66 = load i8, i8* %5, align 16, !dbg !6866, !tbaa !2918
  %67 = zext i8 %66 to i32, !dbg !6866
  %68 = icmp eq i32 %33, %67, !dbg !6867
  %69 = zext i1 %68 to i64, !dbg !6868
  %70 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %62, i64 0, i32 0, i32 2, i32 0, !dbg !6869
  store i64 %69, i64* %70, align 8, !dbg !6870, !tbaa !2918
  %71 = call i32 @dict_add(%struct.dictvar_S* %39, %struct.dictitem_S* nonnull %62) #9, !dbg !6871
  br label %72, !dbg !6872

; <label>:72:                                     ; preds = %59, %61, %64, %36, %29, %10, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9, !dbg !6873
  call void @llvm.lifetime.end.p0i8(i64 67, i8* nonnull %5) #9, !dbg !6873
  ret void, !dbg !6873
}

; Function Attrs: nounwind uwtable
define internal void @f_getregtype(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6874 {
  %3 = alloca [67 x i8], align 16
  %4 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6876, metadata !DIExpression()), !dbg !6882
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6877, metadata !DIExpression()), !dbg !6883
  %5 = getelementptr inbounds [67 x i8], [67 x i8]* %3, i64 0, i64 0, !dbg !6884
  call void @llvm.lifetime.start.p0i8(i64 67, i8* nonnull %5) #9, !dbg !6884
  call void @llvm.dbg.declare(metadata [67 x i8]* %3, metadata !6880, metadata !DIExpression()), !dbg !6885
  %6 = bitcast i64* %4 to i8*, !dbg !6886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9, !dbg !6886
  call void @llvm.dbg.value(metadata i64 0, metadata !6881, metadata !DIExpression()), !dbg !6887
  store i64 0, i64* %4, align 8, !dbg !6887, !tbaa !4053
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6888
  %8 = load i32, i32* %7, align 8, !dbg !6888, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !6890
  br i1 %9, label %24, label %10, !dbg !6891

; <label>:10:                                     ; preds = %2
  %11 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !6892
  call void @llvm.dbg.value(metadata i8* %11, metadata !6878, metadata !DIExpression()), !dbg !6894
  %12 = icmp eq i8* %11, null, !dbg !6895
  br i1 %12, label %22, label %13, !dbg !6897

; <label>:13:                                     ; preds = %10
  %14 = tail call i32 @in_vim9script() #9, !dbg !6898
  %15 = icmp eq i32 %14, 0, !dbg !6898
  br i1 %15, label %27, label %16, !dbg !6899

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 @strlen(i8* nonnull %11) #10, !dbg !6900
  %18 = icmp ugt i64 %17, 1, !dbg !6901
  br i1 %18, label %19, label %27, !dbg !6902

; <label>:19:                                     ; preds = %16
  %20 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_register_name_must_be_one_char_str, i64 0, i64 0), i32 5) #9, !dbg !6903
  %21 = tail call i32 (i8*, ...) @semsg(i8* %20, i8* nonnull %11) #9, !dbg !6905
  call void @llvm.dbg.value(metadata i8* null, metadata !6878, metadata !DIExpression()), !dbg !6894
  br label %22, !dbg !6906

; <label>:22:                                     ; preds = %19, %10
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6907
  store i32 7, i32* %23, align 8, !dbg !6910, !tbaa !3221
  br label %46, !dbg !6911

; <label>:24:                                     ; preds = %2
  %25 = tail call i8* @get_vim_var_str(i32 31) #9, !dbg !6912
  call void @llvm.dbg.value(metadata i8* %25, metadata !6878, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i8* %25, metadata !6878, metadata !DIExpression()), !dbg !6894
  %26 = icmp eq i8* %25, null, !dbg !6913
  br i1 %26, label %33, label %27, !dbg !6914

; <label>:27:                                     ; preds = %13, %16, %24
  %28 = phi i8* [ %25, %24 ], [ %11, %16 ], [ %11, %13 ]
  %29 = load i8, i8* %28, align 1, !dbg !6915, !tbaa !2918
  %30 = zext i8 %29 to i32, !dbg !6915
  call void @llvm.dbg.value(metadata i32 %30, metadata !6879, metadata !DIExpression()), !dbg !6916
  %31 = icmp eq i8 %29, 0, !dbg !6917
  %32 = select i1 %31, i32 34, i32 %30, !dbg !6919
  br label %33, !dbg !6919

; <label>:33:                                     ; preds = %27, %24
  %34 = phi i32 [ 34, %24 ], [ %32, %27 ]
  call void @llvm.dbg.value(metadata i32 %34, metadata !6879, metadata !DIExpression()), !dbg !6916
  store i8 0, i8* %5, align 16, !dbg !6920, !tbaa !2918
  %35 = getelementptr inbounds [67 x i8], [67 x i8]* %3, i64 0, i64 1, !dbg !6921
  store i8 0, i8* %35, align 1, !dbg !6922, !tbaa !2918
  call void @llvm.dbg.value(metadata i64* %4, metadata !6881, metadata !DIExpression()), !dbg !6887
  %36 = call zeroext i8 @get_reg_type(i32 %34, i64* nonnull %4) #9, !dbg !6923
  switch i8 %36, label %43 [
    i8 1, label %37
    i8 0, label %38
    i8 2, label %39
  ], !dbg !6924

; <label>:37:                                     ; preds = %33
  store i8 86, i8* %5, align 16, !dbg !6925, !tbaa !2918
  br label %43, !dbg !6927

; <label>:38:                                     ; preds = %33
  store i8 118, i8* %5, align 16, !dbg !6928, !tbaa !2918
  br label %43, !dbg !6929

; <label>:39:                                     ; preds = %33
  store i8 22, i8* %5, align 16, !dbg !6930, !tbaa !2918
  %40 = load i64, i64* %4, align 8, !dbg !6931, !tbaa !4053
  call void @llvm.dbg.value(metadata i64 %40, metadata !6881, metadata !DIExpression()), !dbg !6887
  %41 = add nsw i64 %40, 1, !dbg !6932
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.744, i64 0, i64 0), i64 %41) #9, !dbg !6933
  br label %43, !dbg !6934

; <label>:43:                                     ; preds = %33, %39, %38, %37
  %44 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6935
  store i32 7, i32* %44, align 8, !dbg !6936, !tbaa !3221
  %45 = call i8* @vim_strsave(i8* nonnull %5) #9, !dbg !6937
  br label %46, !dbg !6938

; <label>:46:                                     ; preds = %43, %22
  %47 = phi i8* [ %45, %43 ], [ null, %22 ]
  %48 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %49 = bitcast %union.anon* %48 to i8**
  store i8* %47, i8** %49, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9, !dbg !6938
  call void @llvm.lifetime.end.p0i8(i64 67, i8* nonnull %5) #9, !dbg !6938
  ret void, !dbg !6938
}

declare void @f_gettabinfo(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_gettabvar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_gettabwinvar(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_gettagstack(%struct.typval_T*, %struct.typval_T*) #0 !dbg !6939 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6941, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6942, metadata !DIExpression()), !dbg !6945
  %3 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6946, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* %3, metadata !6943, metadata !DIExpression()), !dbg !6947
  %4 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !6948
  %5 = icmp eq i32 %4, 1, !dbg !6950
  br i1 %5, label %6, label %18, !dbg !6951

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6952
  %8 = load i32, i32* %7, align 8, !dbg !6952, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !6954
  br i1 %9, label %13, label %10, !dbg !6955

; <label>:10:                                     ; preds = %6
  %11 = tail call %struct.window_S* @find_win_by_nr_or_id(%struct.typval_T* nonnull %0) #9, !dbg !6956
  call void @llvm.dbg.value(metadata %struct.window_S* %11, metadata !6943, metadata !DIExpression()), !dbg !6947
  %12 = icmp eq %struct.window_S* %11, null, !dbg !6958
  br i1 %12, label %18, label %13, !dbg !6960

; <label>:13:                                     ; preds = %6, %10
  %14 = phi %struct.window_S* [ %11, %10 ], [ %3, %6 ]
  call void @llvm.dbg.value(metadata %struct.window_S* %14, metadata !6943, metadata !DIExpression()), !dbg !6947
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6961
  %16 = bitcast %union.anon* %15 to %struct.dictvar_S**, !dbg !6962
  %17 = load %struct.dictvar_S*, %struct.dictvar_S** %16, align 8, !dbg !6962, !tbaa !2918
  tail call void @get_tagstack(%struct.window_S* %14, %struct.dictvar_S* %17) #9, !dbg !6963
  br label %18, !dbg !6964

; <label>:18:                                     ; preds = %10, %2, %13
  ret void, !dbg !6964
}

; Function Attrs: nounwind uwtable
define internal void @f_gettext(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6965 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6967, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6968, metadata !DIExpression()), !dbg !6970
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !6971
  %4 = load i32, i32* %3, align 8, !dbg !6971, !tbaa !3221
  %5 = icmp eq i32 %4, 7, !dbg !6973
  br i1 %5, label %6, label %14, !dbg !6974

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !6975
  %8 = bitcast %union.anon* %7 to i8**, !dbg !6976
  %9 = load i8*, i8** %8, align 8, !dbg !6976, !tbaa !2918
  %10 = icmp eq i8* %9, null, !dbg !6977
  br i1 %10, label %14, label %11, !dbg !6978

; <label>:11:                                     ; preds = %6
  %12 = load i8, i8* %9, align 1, !dbg !6979, !tbaa !2918
  %13 = icmp eq i8 %12, 0, !dbg !6980
  br i1 %13, label %14, label %18, !dbg !6981

; <label>:14:                                     ; preds = %2, %11, %6
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !6982
  %16 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !6984
  %17 = tail call i32 (i8*, ...) @semsg(i8* %15, i8* %16) #9, !dbg !6985
  br label %25, !dbg !6986

; <label>:18:                                     ; preds = %11
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !6987
  store i32 7, i32* %19, align 8, !dbg !6989, !tbaa !3221
  %20 = load i8*, i8** %8, align 8, !dbg !6990, !tbaa !2918
  %21 = tail call i8* @dcgettext(i8* null, i8* %20, i32 5) #9, !dbg !6990
  %22 = tail call i8* @vim_strsave(i8* %21) #9, !dbg !6991
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !6992
  %24 = bitcast %union.anon* %23 to i8**, !dbg !6993
  store i8* %22, i8** %24, align 8, !dbg !6994, !tbaa !2918
  br label %25

; <label>:25:                                     ; preds = %18, %14
  ret void, !dbg !6995
}

declare void @f_getwininfo(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getwinpos(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getwinposx(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getwinposy(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_getwinvar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_glob(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_glob2regpat(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_globpath(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_has_key(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_haslocaldir(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !6996 {
  %3 = alloca %struct.tabpage_S*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !6998, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !6999, metadata !DIExpression()), !dbg !7038
  %4 = bitcast %struct.tabpage_S** %3 to i8*, !dbg !7039
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !7039
  call void @llvm.dbg.value(metadata %struct.tabpage_S* null, metadata !7000, metadata !DIExpression()), !dbg !7040
  store %struct.tabpage_S* null, %struct.tabpage_S** %3, align 8, !dbg !7040, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* null, metadata !7036, metadata !DIExpression()), !dbg !7041
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !7042
  call void @llvm.dbg.value(metadata %struct.tabpage_S** %3, metadata !7000, metadata !DIExpression()), !dbg !7040
  %6 = call %struct.window_S* @find_tabwin(%struct.typval_T* %0, %struct.typval_T* nonnull %5, %struct.tabpage_S** nonnull %3) #9, !dbg !7043
  call void @llvm.dbg.value(metadata %struct.window_S* %6, metadata !7036, metadata !DIExpression()), !dbg !7041
  %7 = icmp eq %struct.window_S* %6, null, !dbg !7044
  br i1 %7, label %12, label %8, !dbg !7046

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.window_S, %struct.window_S* %6, i64 0, i32 116, !dbg !7047
  %10 = load i8*, i8** %9, align 8, !dbg !7047, !tbaa !7048
  %11 = icmp eq i8* %10, null, !dbg !7049
  br i1 %11, label %12, label %20, !dbg !7050

; <label>:12:                                     ; preds = %8, %2
  %13 = load %struct.tabpage_S*, %struct.tabpage_S** %3, align 8, !dbg !7051, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %13, metadata !7000, metadata !DIExpression()), !dbg !7040
  %14 = icmp eq %struct.tabpage_S* %13, null, !dbg !7053
  br i1 %14, label %19, label %15, !dbg !7054

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %13, i64 0, i32 11, !dbg !7055
  %17 = load i8*, i8** %16, align 8, !dbg !7055, !tbaa !7056
  %18 = icmp eq i8* %17, null, !dbg !7058
  br i1 %18, label %19, label %20, !dbg !7059

; <label>:19:                                     ; preds = %15, %12
  br label %20

; <label>:20:                                     ; preds = %15, %8, %19
  %21 = phi i64 [ 0, %19 ], [ 1, %8 ], [ 2, %15 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %21, i64* %22, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !7060
  ret void, !dbg !7060
}

; Function Attrs: nounwind uwtable
define internal void @f_hasmapto(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7061 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7063, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7064, metadata !DIExpression()), !dbg !7070
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !7071
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !7071
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !7067, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i32 0, metadata !7068, metadata !DIExpression()), !dbg !7073
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !7074
  call void @llvm.dbg.value(metadata i8* %5, metadata !7065, metadata !DIExpression()), !dbg !7075
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !7076
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %6, i64 0, i32 0, !dbg !7078
  %8 = load i32, i32* %7, align 8, !dbg !7078, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !7079
  br i1 %9, label %19, label %10, !dbg !7080

; <label>:10:                                     ; preds = %2
  %11 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %6, i8* nonnull %4) #9, !dbg !7081
  call void @llvm.dbg.value(metadata i8* %11, metadata !7066, metadata !DIExpression()), !dbg !7083
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !7084
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %12, i64 0, i32 0, !dbg !7086
  %14 = load i32, i32* %13, align 8, !dbg !7086, !tbaa !3221
  %15 = icmp eq i32 %14, 0, !dbg !7087
  br i1 %15, label %19, label %16, !dbg !7088

; <label>:16:                                     ; preds = %10
  %17 = call i64 @tv_get_bool(%struct.typval_T* nonnull %12) #9, !dbg !7089
  %18 = trunc i64 %17 to i32, !dbg !7090
  call void @llvm.dbg.value(metadata i32 %18, metadata !7068, metadata !DIExpression()), !dbg !7073
  br label %19, !dbg !7091

; <label>:19:                                     ; preds = %2, %10, %16
  %20 = phi i8* [ %11, %16 ], [ %11, %10 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.745, i64 0, i64 0), %2 ]
  %21 = phi i32 [ %18, %16 ], [ 0, %10 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !7068, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i8* %20, metadata !7066, metadata !DIExpression()), !dbg !7083
  %22 = call i32 @map_to_exists(i8* %5, i8* %20, i32 %21) #9, !dbg !7092
  %23 = icmp ne i32 %22, 0, !dbg !7092
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  %25 = zext i1 %23 to i64
  store i64 %25, i64* %24, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !7094
  ret void, !dbg !7094
}

; Function Attrs: nounwind uwtable
define internal void @f_hlID(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7095 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7097, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7098, metadata !DIExpression()), !dbg !7100
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !7101
  %4 = tail call i32 @syn_name2id(i8* %3) #9, !dbg !7102
  %5 = sext i32 %4 to i64, !dbg !7102
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7103
  store i64 %5, i64* %6, align 8, !dbg !7104, !tbaa !2918
  ret void, !dbg !7105
}

; Function Attrs: nounwind uwtable
define internal void @f_hlexists(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7108, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7109, metadata !DIExpression()), !dbg !7111
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !7112
  %4 = tail call i32 @highlight_exists(i8* %3) #9, !dbg !7113
  %5 = sext i32 %4 to i64, !dbg !7113
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7114
  store i64 %5, i64* %6, align 8, !dbg !7115, !tbaa !2918
  ret void, !dbg !7116
}

declare void @f_histadd(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_histdel(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_histget(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_histnr(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_hostname(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !7117 {
  %3 = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7119, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7120, metadata !DIExpression()), !dbg !7123
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !7124
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #9, !dbg !7124
  call void @llvm.dbg.declare(metadata [256 x i8]* %3, metadata !7121, metadata !DIExpression()), !dbg !7125
  call void @mch_get_host_name(i8* nonnull %4, i32 256) #9, !dbg !7126
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7127
  store i32 7, i32* %5, align 8, !dbg !7128, !tbaa !3221
  %6 = call i8* @vim_strsave(i8* nonnull %4) #9, !dbg !7129
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !7130
  %8 = bitcast %union.anon* %7 to i8**, !dbg !7131
  store i8* %6, i8** %8, align 8, !dbg !7132, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #9, !dbg !7133
  ret void, !dbg !7133
}

; Function Attrs: nounwind uwtable
define internal void @f_iconv(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7134 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  %5 = alloca %struct.vimconv_T, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7136, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7137, metadata !DIExpression()), !dbg !7154
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !7155
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !7138, metadata !DIExpression()), !dbg !7156
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !7157
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !7157
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !7139, metadata !DIExpression()), !dbg !7158
  %8 = bitcast %struct.vimconv_T* %5 to i8*, !dbg !7159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9, !dbg !7159
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7160
  store i32 7, i32* %9, align 8, !dbg !7161, !tbaa !3221
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !7162
  %11 = bitcast %union.anon* %10 to i8**, !dbg !7163
  store i8* null, i8** %11, align 8, !dbg !7164, !tbaa !2918
  %12 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !7165
  call void @llvm.dbg.value(metadata i8* %12, metadata !7142, metadata !DIExpression()), !dbg !7166
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !7167
  %14 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %13, i8* nonnull %6) #9, !dbg !7168
  %15 = call i8* @enc_skip(i8* %14) #9, !dbg !7169
  %16 = call i8* @enc_canonize(i8* %15) #9, !dbg !7170
  call void @llvm.dbg.value(metadata i8* %16, metadata !7140, metadata !DIExpression()), !dbg !7171
  %17 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !7172
  %18 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %17, i8* nonnull %7) #9, !dbg !7173
  %19 = call i8* @enc_skip(i8* %18) #9, !dbg !7174
  %20 = call i8* @enc_canonize(i8* %19) #9, !dbg !7175
  call void @llvm.dbg.value(metadata i8* %20, metadata !7141, metadata !DIExpression()), !dbg !7176
  %21 = getelementptr inbounds %struct.vimconv_T, %struct.vimconv_T* %5, i64 0, i32 0, !dbg !7177
  store i32 0, i32* %21, align 8, !dbg !7178, !tbaa !7179
  call void @llvm.dbg.value(metadata %struct.vimconv_T* %5, metadata !7143, metadata !DIExpression()), !dbg !7181
  %22 = call i32 @convert_setup(%struct.vimconv_T* nonnull %5, i8* %16, i8* %20) #9, !dbg !7182
  %23 = load i32, i32* %21, align 8, !dbg !7183, !tbaa !7179
  %24 = icmp eq i32 %23, 0, !dbg !7185
  br i1 %24, label %25, label %27, !dbg !7186

; <label>:25:                                     ; preds = %2
  %26 = call i8* @vim_strsave(i8* %12) #9, !dbg !7187
  br label %29, !dbg !7188

; <label>:27:                                     ; preds = %2
  call void @llvm.dbg.value(metadata %struct.vimconv_T* %5, metadata !7143, metadata !DIExpression()), !dbg !7181
  %28 = call i8* @string_convert(%struct.vimconv_T* nonnull %5, i8* %12, i32* null) #9, !dbg !7189
  br label %29

; <label>:29:                                     ; preds = %27, %25
  %30 = phi i8* [ %28, %27 ], [ %26, %25 ]
  store i8* %30, i8** %11, align 8, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.vimconv_T* %5, metadata !7143, metadata !DIExpression()), !dbg !7181
  %31 = call i32 @convert_setup(%struct.vimconv_T* nonnull %5, i8* null, i8* null) #9, !dbg !7190
  call void @vim_free(i8* %16) #9, !dbg !7191
  call void @vim_free(i8* %20) #9, !dbg !7192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9, !dbg !7193
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !7193
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !7193
  ret void, !dbg !7193
}

declare void @f_indent(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_index(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7194 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.typval_T, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7196, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7197, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i64 0, metadata !7201, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata i32 0, metadata !7202, metadata !DIExpression()), !dbg !7211
  %5 = bitcast i32* %3 to i8*, !dbg !7212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !7212
  call void @llvm.dbg.value(metadata i32 0, metadata !7203, metadata !DIExpression()), !dbg !7213
  store i32 0, i32* %3, align 4, !dbg !7213, !tbaa !2904
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7214
  store i64 -1, i64* %6, align 8, !dbg !7215, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7216
  %8 = load i32, i32* %7, align 8, !dbg !7216, !tbaa !3221
  switch i32 %8, label %56 [
    i32 8, label %9
    i32 11, label %59
  ], !dbg !7217

; <label>:9:                                      ; preds = %2
  %10 = bitcast %struct.typval_T* %4 to i8*, !dbg !7218
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9, !dbg !7218
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7219
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !7220
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %11, i64 0, i32 0, !dbg !7222
  %13 = load i32, i32* %12, align 8, !dbg !7222, !tbaa !3221
  %14 = icmp eq i32 %13, 0, !dbg !7223
  br i1 %14, label %20, label %15, !dbg !7224

; <label>:15:                                     ; preds = %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !7203, metadata !DIExpression()), !dbg !7213
  %16 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %11, i32* nonnull %3) #9, !dbg !7225
  %17 = trunc i64 %16 to i32, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %17, metadata !7207, metadata !DIExpression()), !dbg !7219
  %18 = load i32, i32* %3, align 4, !dbg !7227, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %18, metadata !7203, metadata !DIExpression()), !dbg !7213
  %19 = icmp eq i32 %18, 0, !dbg !7227
  br i1 %19, label %20, label %55, !dbg !7229

; <label>:20:                                     ; preds = %15, %9
  %21 = phi i32 [ %17, %15 ], [ 0, %9 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !7207, metadata !DIExpression()), !dbg !7219
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7230
  %23 = bitcast %union.anon* %22 to %struct.blobvar_S**, !dbg !7231
  %24 = load %struct.blobvar_S*, %struct.blobvar_S** %23, align 8, !dbg !7231, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.blobvar_S* %24, metadata !7200, metadata !DIExpression()), !dbg !7232
  %25 = icmp eq %struct.blobvar_S* %24, null, !dbg !7233
  br i1 %25, label %55, label %26, !dbg !7235

; <label>:26:                                     ; preds = %20
  %27 = icmp slt i32 %21, 0, !dbg !7236
  br i1 %27, label %28, label %34, !dbg !7238

; <label>:28:                                     ; preds = %26
  %29 = call i64 @blob_len(%struct.blobvar_S* nonnull %24) #9, !dbg !7239
  %30 = trunc i64 %29 to i32, !dbg !7239
  %31 = add i32 %21, %30, !dbg !7239
  call void @llvm.dbg.value(metadata i32 %31, metadata !7207, metadata !DIExpression()), !dbg !7219
  %32 = icmp sgt i32 %31, 0, !dbg !7241
  %33 = select i1 %32, i32 %31, i32 0, !dbg !7241
  call void @llvm.dbg.value(metadata i32 %33, metadata !7207, metadata !DIExpression()), !dbg !7219
  br label %34, !dbg !7242

; <label>:34:                                     ; preds = %28, %26
  %35 = phi i32 [ %33, %28 ], [ %21, %26 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7207, metadata !DIExpression()), !dbg !7219
  %36 = sext i32 %35 to i64, !dbg !7243
  call void @llvm.dbg.value(metadata i64 %36, metadata !7201, metadata !DIExpression()), !dbg !7210
  %37 = call i64 @blob_len(%struct.blobvar_S* nonnull %24) #9, !dbg !7245
  %38 = icmp sgt i64 %37, %36, !dbg !7247
  br i1 %38, label %39, label %55, !dbg !7248

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %4, i64 0, i32 0
  %41 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %4, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1
  br label %43, !dbg !7248

; <label>:43:                                     ; preds = %39, %51
  %44 = phi i64 [ %36, %39 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i64 %44, metadata !7201, metadata !DIExpression()), !dbg !7210
  store i32 5, i32* %40, align 8, !dbg !7249, !tbaa !3221
  %45 = trunc i64 %44 to i32, !dbg !7251
  %46 = call i32 @blob_get(%struct.blobvar_S* nonnull %24, i32 %45) #9, !dbg !7252
  %47 = sext i32 %46 to i64, !dbg !7252
  store i64 %47, i64* %41, align 8, !dbg !7253, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.typval_T* %4, metadata !7204, metadata !DIExpression()), !dbg !7254
  %48 = call i32 @tv_equal(%struct.typval_T* nonnull %4, %struct.typval_T* nonnull %42, i32 0, i32 0) #9, !dbg !7255
  %49 = icmp eq i32 %48, 0, !dbg !7255
  br i1 %49, label %51, label %50, !dbg !7257

; <label>:50:                                     ; preds = %43
  store i64 %44, i64* %6, align 8, !dbg !7258, !tbaa !2918
  br label %55, !dbg !7260

; <label>:51:                                     ; preds = %43
  %52 = add nsw i64 %44, 1, !dbg !7261
  call void @llvm.dbg.value(metadata i64 %52, metadata !7201, metadata !DIExpression()), !dbg !7210
  %53 = call i64 @blob_len(%struct.blobvar_S* nonnull %24) #9, !dbg !7245
  %54 = icmp slt i64 %52, %53, !dbg !7247
  br i1 %54, label %43, label %55, !dbg !7248, !llvm.loop !7262

; <label>:55:                                     ; preds = %51, %34, %20, %15, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9, !dbg !7264
  br label %137

; <label>:56:                                     ; preds = %2
  %57 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_listblobreq, i64 0, i64 0), i32 5) #9, !dbg !7265
  %58 = tail call i32 @emsg(i8* %57) #9, !dbg !7268
  br label %137, !dbg !7269

; <label>:59:                                     ; preds = %2
  %60 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7270
  %61 = bitcast %union.anon* %60 to %struct.listvar_S**, !dbg !7271
  %62 = load %struct.listvar_S*, %struct.listvar_S** %61, align 8, !dbg !7271, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %62, metadata !7198, metadata !DIExpression()), !dbg !7272
  %63 = icmp eq %struct.listvar_S* %62, null, !dbg !7273
  br i1 %63, label %137, label %64, !dbg !7275

; <label>:64:                                     ; preds = %59
  %65 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 0, !dbg !7276
  %66 = load %struct.listitem_S*, %struct.listitem_S** %65, align 8, !dbg !7276, !tbaa !3610
  %67 = icmp eq %struct.listitem_S* %66, @range_list_item, !dbg !7276
  br i1 %67, label %68, label %95, !dbg !7279

; <label>:68:                                     ; preds = %64
  call void @llvm.dbg.value(metadata %struct.listvar_S* %62, metadata !3612, metadata !DIExpression()) #9, !dbg !7280
  %69 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 2, !dbg !7282
  %70 = getelementptr inbounds %union.anon.0, %union.anon.0* %69, i64 0, i32 0, i32 0, !dbg !7283
  %71 = load i64, i64* %70, align 8, !dbg !7283, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %71, metadata !3617, metadata !DIExpression()) #9, !dbg !7284
  %72 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 2, i32 0, i32 1, !dbg !7285
  %73 = load i64, i64* %72, align 8, !dbg !7285, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %73, metadata !3618, metadata !DIExpression()) #9, !dbg !7286
  %74 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 2, i32 0, i32 2, !dbg !7287
  %75 = load i32, i32* %74, align 8, !dbg !7287, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %75, metadata !3619, metadata !DIExpression()) #9, !dbg !7288
  store %struct.listitem_S* null, %struct.listitem_S** %65, align 8, !dbg !7289, !tbaa !3610
  %76 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 8, !dbg !7290
  store i32 0, i32* %76, align 4, !dbg !7291, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %71, metadata !3620, metadata !DIExpression()) #9, !dbg !7292
  %77 = icmp sgt i32 %75, 0, !dbg !7293
  %78 = icmp sle i64 %71, %73, !dbg !7294
  %79 = icmp sge i64 %71, %73, !dbg !7295
  %80 = select i1 %77, i1 %78, i1 %79, !dbg !7296
  %81 = bitcast %union.anon.0* %69 to i8*, !dbg !7297
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %81, i8 0, i64 16, i32 8, i1 false) #9, !dbg !7298
  br i1 %80, label %82, label %95, !dbg !7297

; <label>:82:                                     ; preds = %68
  %83 = sext i32 %75 to i64
  br label %88, !dbg !7297

; <label>:84:                                     ; preds = %88
  call void @llvm.dbg.value(metadata i64 %92, metadata !3620, metadata !DIExpression()) #9, !dbg !7292
  %85 = icmp sle i64 %92, %73, !dbg !7294
  %86 = icmp sge i64 %92, %73, !dbg !7295
  %87 = select i1 %77, i1 %85, i1 %86, !dbg !7296
  br i1 %87, label %88, label %93, !dbg !7297, !llvm.loop !3642

; <label>:88:                                     ; preds = %84, %82
  %89 = phi i64 [ %71, %82 ], [ %92, %84 ]
  call void @llvm.dbg.value(metadata i64 %89, metadata !3620, metadata !DIExpression()) #9, !dbg !7292
  %90 = tail call i32 @list_append_number(%struct.listvar_S* nonnull %62, i64 %89) #9, !dbg !7299
  %91 = icmp eq i32 %90, 0, !dbg !7300
  %92 = add nsw i64 %89, %83, !dbg !7301
  call void @llvm.dbg.value(metadata i64 %92, metadata !3620, metadata !DIExpression()) #9, !dbg !7292
  br i1 %91, label %93, label %84, !dbg !7302

; <label>:93:                                     ; preds = %84, %88
  %94 = load %struct.listitem_S*, %struct.listitem_S** %65, align 8, !dbg !7303, !tbaa !3610
  br label %95, !dbg !7303

; <label>:95:                                     ; preds = %93, %68, %64
  %96 = phi %struct.listitem_S* [ %94, %93 ], [ null, %68 ], [ %66, %64 ], !dbg !7303
  call void @llvm.dbg.value(metadata %struct.listitem_S* %96, metadata !7199, metadata !DIExpression()), !dbg !7304
  %97 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !7305
  %98 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %97, i64 0, i32 0, !dbg !7307
  %99 = load i32, i32* %98, align 8, !dbg !7307, !tbaa !3221
  %100 = icmp eq i32 %99, 0, !dbg !7308
  br i1 %100, label %118, label %101, !dbg !7309

; <label>:101:                                    ; preds = %95
  call void @llvm.dbg.value(metadata i32* %3, metadata !7203, metadata !DIExpression()), !dbg !7213
  %102 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %97, i32* nonnull %3) #9, !dbg !7310
  %103 = call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %62, i64 %102) #9, !dbg !7312
  call void @llvm.dbg.value(metadata %struct.listitem_S* %103, metadata !7199, metadata !DIExpression()), !dbg !7304
  %104 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %62, i64 0, i32 2, i32 0, i32 2, !dbg !7313
  %105 = load i32, i32* %104, align 8, !dbg !7313, !tbaa !2918
  %106 = sext i32 %105 to i64, !dbg !7314
  call void @llvm.dbg.value(metadata i64 %106, metadata !7201, metadata !DIExpression()), !dbg !7210
  %107 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !7315
  %108 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %107, i64 0, i32 0, !dbg !7317
  %109 = load i32, i32* %108, align 8, !dbg !7317, !tbaa !3221
  %110 = icmp eq i32 %109, 0, !dbg !7318
  br i1 %110, label %114, label %111, !dbg !7319

; <label>:111:                                    ; preds = %101
  call void @llvm.dbg.value(metadata i32* %3, metadata !7203, metadata !DIExpression()), !dbg !7213
  %112 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %107, i32* nonnull %3) #9, !dbg !7320
  %113 = trunc i64 %112 to i32, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %113, metadata !7202, metadata !DIExpression()), !dbg !7211
  br label %114, !dbg !7322

; <label>:114:                                    ; preds = %101, %111
  %115 = phi i32 [ %113, %111 ], [ 0, %101 ]
  call void @llvm.dbg.value(metadata i32 %115, metadata !7202, metadata !DIExpression()), !dbg !7211
  %116 = load i32, i32* %3, align 4, !dbg !7323, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %116, metadata !7203, metadata !DIExpression()), !dbg !7213
  %117 = icmp eq i32 %116, 0, !dbg !7323
  br i1 %117, label %118, label %137

; <label>:118:                                    ; preds = %114, %95
  %119 = phi %struct.listitem_S* [ %96, %95 ], [ %103, %114 ]
  %120 = phi i64 [ 0, %95 ], [ %106, %114 ]
  %121 = phi i32 [ 0, %95 ], [ %115, %114 ]
  call void @llvm.dbg.value(metadata i32 %121, metadata !7202, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i64 %120, metadata !7201, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata %struct.listitem_S* %119, metadata !7199, metadata !DIExpression()), !dbg !7304
  %122 = icmp eq %struct.listitem_S* %119, null, !dbg !7325
  br i1 %122, label %137, label %123, !dbg !7328

; <label>:123:                                    ; preds = %118
  %124 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1
  br label %125, !dbg !7328

; <label>:125:                                    ; preds = %123, %132
  %126 = phi i64 [ %120, %123 ], [ %135, %132 ]
  %127 = phi %struct.listitem_S* [ %119, %123 ], [ %134, %132 ]
  call void @llvm.dbg.value(metadata %struct.listitem_S* %127, metadata !7199, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i64 %126, metadata !7201, metadata !DIExpression()), !dbg !7210
  %128 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %127, i64 0, i32 2, !dbg !7329
  %129 = call i32 @tv_equal(%struct.typval_T* nonnull %128, %struct.typval_T* nonnull %124, i32 %121, i32 0) #9, !dbg !7331
  %130 = icmp eq i32 %129, 0, !dbg !7331
  br i1 %130, label %132, label %131, !dbg !7332

; <label>:131:                                    ; preds = %125
  store i64 %126, i64* %6, align 8, !dbg !7333, !tbaa !2918
  br label %137, !dbg !7335

; <label>:132:                                    ; preds = %125
  %133 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %127, i64 0, i32 0, !dbg !7336
  %134 = load %struct.listitem_S*, %struct.listitem_S** %133, align 8, !dbg !7336, !tbaa !3736
  %135 = add nsw i64 %126, 1, !dbg !7337
  call void @llvm.dbg.value(metadata i64 %135, metadata !7201, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata %struct.listitem_S* %134, metadata !7199, metadata !DIExpression()), !dbg !7304
  %136 = icmp eq %struct.listitem_S* %134, null, !dbg !7325
  br i1 %136, label %137, label %125, !dbg !7328, !llvm.loop !7338

; <label>:137:                                    ; preds = %132, %114, %118, %131, %59, %56, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !7340
  ret void, !dbg !7340
}

; Function Attrs: nounwind uwtable
define internal void @f_input(%struct.typval_T*, %struct.typval_T*) #0 !dbg !7341 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7343, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7344, metadata !DIExpression()), !dbg !7346
  %3 = load i32, i32* @inputsecret_flag, align 4, !dbg !7347, !tbaa !2904
  tail call void @get_user_input(%struct.typval_T* %0, %struct.typval_T* %1, i32 0, i32 %3) #9, !dbg !7348
  ret void, !dbg !7349
}

; Function Attrs: nounwind uwtable
define internal void @f_inputdialog(%struct.typval_T*, %struct.typval_T*) #0 !dbg !7350 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7352, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7353, metadata !DIExpression()), !dbg !7360
  %4 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !7361, !tbaa !3859
  %5 = icmp eq i32 %4, 0, !dbg !7362
  br i1 %5, label %54, label %6, !dbg !7363

; <label>:6:                                      ; preds = %2
  %7 = load i8*, i8** @p_go, align 8, !dbg !7364, !tbaa !2783
  %8 = tail call i8* @vim_strchr(i8* %7, i32 99) #9, !dbg !7365
  %9 = icmp eq i8* %8, null, !dbg !7366
  br i1 %9, label %10, label %54, !dbg !7367

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !7368
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %11) #9, !dbg !7368
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !7357, metadata !DIExpression()), !dbg !7369
  %12 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !7370
  call void @llvm.dbg.value(metadata i8* %12, metadata !7354, metadata !DIExpression()), !dbg !7371
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !7372
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %13, i64 0, i32 0, !dbg !7374
  %15 = load i32, i32* %14, align 8, !dbg !7374, !tbaa !3221
  %16 = icmp eq i32 %15, 0, !dbg !7375
  br i1 %16, label %22, label %17, !dbg !7376

; <label>:17:                                     ; preds = %10
  %18 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %13, i8* nonnull %11) #9, !dbg !7377
  call void @llvm.dbg.value(metadata i8* %18, metadata !7358, metadata !DIExpression()), !dbg !7378
  %19 = icmp eq i8* %18, null, !dbg !7379
  br i1 %19, label %22, label %20, !dbg !7380

; <label>:20:                                     ; preds = %17
  %21 = load i8*, i8** @IObuff, align 8, !dbg !7381, !tbaa !2783
  call void @vim_strncpy(i8* %21, i8* nonnull %18, i64 1024) #9, !dbg !7382
  br label %25, !dbg !7382

; <label>:22:                                     ; preds = %17, %10
  %23 = phi i8* [ null, %17 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %10 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7358, metadata !DIExpression()), !dbg !7378
  %24 = load i8*, i8** @IObuff, align 8, !dbg !7383, !tbaa !2783
  store i8 0, i8* %24, align 1, !dbg !7384, !tbaa !2918
  br label %25

; <label>:25:                                     ; preds = %22, %20
  %26 = phi i8* [ %18, %20 ], [ %23, %22 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !7358, metadata !DIExpression()), !dbg !7378
  %27 = icmp ne i8* %12, null, !dbg !7385
  %28 = icmp ne i8* %26, null, !dbg !7387
  %29 = and i1 %27, %28, !dbg !7388
  br i1 %29, label %30, label %49, !dbg !7388

; <label>:30:                                     ; preds = %25
  %31 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.747, i64 0, i64 0), i32 5) #9, !dbg !7389
  %32 = load i8*, i8** @IObuff, align 8, !dbg !7390, !tbaa !2783
  %33 = call i32 @do_dialog(i32 4, i8* null, i8* nonnull %12, i8* %31, i32 1, i8* %32, i32 0) #9, !dbg !7391
  %34 = icmp eq i32 %33, 1, !dbg !7392
  br i1 %34, label %35, label %38, !dbg !7393

; <label>:35:                                     ; preds = %30
  %36 = load i8*, i8** @IObuff, align 8, !dbg !7394, !tbaa !2783
  %37 = call i8* @vim_strsave(i8* %36) #9, !dbg !7395
  br label %49, !dbg !7396

; <label>:38:                                     ; preds = %30
  %39 = load i32, i32* %14, align 8, !dbg !7397, !tbaa !3221
  %40 = icmp eq i32 %39, 0, !dbg !7400
  br i1 %40, label %49, label %41, !dbg !7401

; <label>:41:                                     ; preds = %38
  %42 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !7402
  %43 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %42, i64 0, i32 0, !dbg !7403
  %44 = load i32, i32* %43, align 8, !dbg !7403, !tbaa !3221
  %45 = icmp eq i32 %44, 0, !dbg !7404
  br i1 %45, label %49, label %46, !dbg !7405

; <label>:46:                                     ; preds = %41
  %47 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %42, i8* nonnull %11) #9, !dbg !7406
  %48 = call i8* @vim_strsave(i8* %47) #9, !dbg !7407
  br label %49, !dbg !7408

; <label>:49:                                     ; preds = %38, %41, %25, %46, %35
  %50 = phi i8* [ %48, %46 ], [ %37, %35 ], [ null, %25 ], [ null, %41 ], [ null, %38 ]
  %51 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %52 = bitcast %union.anon* %51 to i8**
  store i8* %50, i8** %52, align 8, !tbaa !2918
  %53 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7409
  store i32 7, i32* %53, align 8, !dbg !7410, !tbaa !3221
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %11) #9, !dbg !7411
  br label %56, !dbg !7412

; <label>:54:                                     ; preds = %2, %6
  %55 = load i32, i32* @inputsecret_flag, align 4, !dbg !7413, !tbaa !2904
  tail call void @get_user_input(%struct.typval_T* %0, %struct.typval_T* %1, i32 1, i32 %55) #9, !dbg !7414
  br label %56

; <label>:56:                                     ; preds = %54, %49
  ret void, !dbg !7415
}

; Function Attrs: nounwind uwtable
define internal void @f_inputlist(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !7416 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7418, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7419, metadata !DIExpression()), !dbg !7425
  %4 = bitcast i32* %3 to i8*, !dbg !7426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7426
  %5 = tail call i32 @no_console_input() #9, !dbg !7427
  %6 = icmp eq i32 %5, 0, !dbg !7427
  br i1 %6, label %10, label %7, !dbg !7429

; <label>:7:                                      ; preds = %2
  %8 = tail call i32 @is_not_a_term() #9, !dbg !7430
  %9 = icmp eq i32 %8, 0, !dbg !7430
  br i1 %9, label %77, label %10, !dbg !7431

; <label>:10:                                     ; preds = %7, %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7432
  %12 = load i32, i32* %11, align 8, !dbg !7432, !tbaa !3221
  %13 = icmp eq i32 %12, 11, !dbg !7434
  br i1 %13, label %14, label %19, !dbg !7435

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7436
  %16 = bitcast %union.anon* %15 to %struct.listvar_S**, !dbg !7437
  %17 = load %struct.listvar_S*, %struct.listvar_S** %16, align 8, !dbg !7437, !tbaa !2918
  %18 = icmp eq %struct.listvar_S* %17, null, !dbg !7438
  br i1 %18, label %19, label %22, !dbg !7439

; <label>:19:                                     ; preds = %10, %14
  %20 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_listarg, i64 0, i64 0), i32 5) #9, !dbg !7440
  %21 = tail call i32 (i8*, ...) @semsg(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.748, i64 0, i64 0)) #9, !dbg !7442
  br label %77, !dbg !7443

; <label>:22:                                     ; preds = %14
  tail call void @msg_start() #9, !dbg !7444
  %23 = load i64, i64* @Rows, align 8, !dbg !7445, !tbaa !4053
  %24 = trunc i64 %23 to i32, !dbg !7445
  %25 = add i32 %24, -1, !dbg !7445
  store i32 %25, i32* @msg_row, align 4, !dbg !7446, !tbaa !2904
  store i32 %24, i32* @lines_left, align 4, !dbg !7447, !tbaa !2904
  store i32 1, i32* @msg_scroll, align 4, !dbg !7448, !tbaa !2904
  tail call void @msg_clr_eos() #9, !dbg !7449
  %26 = load %struct.listvar_S*, %struct.listvar_S** %16, align 8, !dbg !7450, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %26, metadata !7420, metadata !DIExpression()), !dbg !7451
  %27 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %26, i64 0, i32 0, !dbg !7452
  %28 = load %struct.listitem_S*, %struct.listitem_S** %27, align 8, !dbg !7452, !tbaa !3610
  %29 = icmp eq %struct.listitem_S* %28, @range_list_item, !dbg !7452
  br i1 %29, label %30, label %57, !dbg !7454

; <label>:30:                                     ; preds = %22
  call void @llvm.dbg.value(metadata %struct.listvar_S* %26, metadata !3612, metadata !DIExpression()) #9, !dbg !7455
  %31 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %26, i64 0, i32 2, !dbg !7457
  %32 = getelementptr inbounds %union.anon.0, %union.anon.0* %31, i64 0, i32 0, i32 0, !dbg !7458
  %33 = load i64, i64* %32, align 8, !dbg !7458, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %33, metadata !3617, metadata !DIExpression()) #9, !dbg !7459
  %34 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %26, i64 0, i32 2, i32 0, i32 1, !dbg !7460
  %35 = load i64, i64* %34, align 8, !dbg !7460, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %35, metadata !3618, metadata !DIExpression()) #9, !dbg !7461
  %36 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %26, i64 0, i32 2, i32 0, i32 2, !dbg !7462
  %37 = load i32, i32* %36, align 8, !dbg !7462, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %37, metadata !3619, metadata !DIExpression()) #9, !dbg !7463
  store %struct.listitem_S* null, %struct.listitem_S** %27, align 8, !dbg !7464, !tbaa !3610
  %38 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %26, i64 0, i32 8, !dbg !7465
  store i32 0, i32* %38, align 4, !dbg !7466, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %33, metadata !3620, metadata !DIExpression()) #9, !dbg !7467
  %39 = icmp sgt i32 %37, 0, !dbg !7468
  %40 = icmp sle i64 %33, %35, !dbg !7469
  %41 = icmp sge i64 %33, %35, !dbg !7470
  %42 = select i1 %39, i1 %40, i1 %41, !dbg !7471
  %43 = bitcast %union.anon.0* %31 to i8*, !dbg !7472
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %43, i8 0, i64 16, i32 8, i1 false) #9, !dbg !7473
  br i1 %42, label %44, label %68, !dbg !7472

; <label>:44:                                     ; preds = %30
  %45 = sext i32 %37 to i64
  br label %50, !dbg !7472

; <label>:46:                                     ; preds = %50
  call void @llvm.dbg.value(metadata i64 %54, metadata !3620, metadata !DIExpression()) #9, !dbg !7467
  %47 = icmp sle i64 %54, %35, !dbg !7469
  %48 = icmp sge i64 %54, %35, !dbg !7470
  %49 = select i1 %39, i1 %47, i1 %48, !dbg !7471
  br i1 %49, label %50, label %55, !dbg !7472, !llvm.loop !3642

; <label>:50:                                     ; preds = %46, %44
  %51 = phi i64 [ %33, %44 ], [ %54, %46 ]
  call void @llvm.dbg.value(metadata i64 %51, metadata !3620, metadata !DIExpression()) #9, !dbg !7467
  %52 = tail call i32 @list_append_number(%struct.listvar_S* %26, i64 %51) #9, !dbg !7474
  %53 = icmp eq i32 %52, 0, !dbg !7475
  %54 = add nsw i64 %51, %45, !dbg !7476
  call void @llvm.dbg.value(metadata i64 %54, metadata !3620, metadata !DIExpression()) #9, !dbg !7467
  br i1 %53, label %55, label %46, !dbg !7477

; <label>:55:                                     ; preds = %46, %50
  %56 = load %struct.listitem_S*, %struct.listitem_S** %27, align 8, !dbg !7478, !tbaa !2783
  br label %57, !dbg !7478

; <label>:57:                                     ; preds = %55, %22
  %58 = phi %struct.listitem_S* [ %56, %55 ], [ %28, %22 ], !dbg !7478
  call void @llvm.dbg.value(metadata %struct.listitem_S** %27, metadata !7421, metadata !DIExpression(DW_OP_deref)), !dbg !7480
  call void @llvm.dbg.value(metadata %struct.listitem_S* %58, metadata !7421, metadata !DIExpression()), !dbg !7480
  %59 = icmp eq %struct.listitem_S* %58, null, !dbg !7481
  br i1 %59, label %68, label %60, !dbg !7478

; <label>:60:                                     ; preds = %57
  br label %61, !dbg !7483

; <label>:61:                                     ; preds = %60, %61
  %62 = phi %struct.listitem_S* [ %66, %61 ], [ %58, %60 ]
  %63 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %62, i64 0, i32 2, !dbg !7483
  %64 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %63) #9, !dbg !7485
  tail call void @msg_puts(i8* %64) #9, !dbg !7486
  tail call void @msg_putchar(i32 10) #9, !dbg !7487
  %65 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %62, i64 0, i32 0, !dbg !7481
  call void @llvm.dbg.value(metadata %struct.listitem_S** %65, metadata !7421, metadata !DIExpression(DW_OP_deref)), !dbg !7480
  %66 = load %struct.listitem_S*, %struct.listitem_S** %65, align 8, !dbg !7478, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.listitem_S* %66, metadata !7421, metadata !DIExpression()), !dbg !7480
  %67 = icmp eq %struct.listitem_S* %66, null, !dbg !7481
  br i1 %67, label %68, label %61, !dbg !7478, !llvm.loop !7488

; <label>:68:                                     ; preds = %61, %30, %57
  call void @llvm.dbg.value(metadata i32* %3, metadata !7423, metadata !DIExpression()), !dbg !7490
  %69 = call i32 @prompt_for_number(i32* nonnull %3) #9, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %69, metadata !7422, metadata !DIExpression()), !dbg !7492
  %70 = load i32, i32* %3, align 4, !dbg !7493, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %70, metadata !7423, metadata !DIExpression()), !dbg !7490
  %71 = icmp eq i32 %70, 0, !dbg !7493
  %72 = load i32, i32* @lines_left, align 4, !dbg !7495
  %73 = select i1 %71, i32 0, i32 %72, !dbg !7496
  %74 = sub nsw i32 %69, %73, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %74, metadata !7422, metadata !DIExpression()), !dbg !7492
  %75 = sext i32 %74 to i64, !dbg !7497
  %76 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7498
  store i64 %75, i64* %76, align 8, !dbg !7499, !tbaa !2918
  br label %77, !dbg !7500

; <label>:77:                                     ; preds = %7, %68, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7500
  ret void, !dbg !7500
}

; Function Attrs: nounwind uwtable
define internal void @f_inputrestore(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !7501 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7504, metadata !DIExpression()), !dbg !7506
  %3 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 0), align 8, !dbg !7507, !tbaa !3475
  %4 = icmp sgt i32 %3, 0, !dbg !7509
  br i1 %4, label %5, label %10, !dbg !7510

; <label>:5:                                      ; preds = %2
  %6 = add nsw i32 %3, -1, !dbg !7511
  store i32 %6, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 0), align 8, !dbg !7511, !tbaa !3475
  %7 = load %struct.tasave_T*, %struct.tasave_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 4) to %struct.tasave_T**), align 8, !dbg !7513, !tbaa !3473
  %8 = sext i32 %6 to i64, !dbg !7514
  %9 = getelementptr inbounds %struct.tasave_T, %struct.tasave_T* %7, i64 %8, !dbg !7514
  tail call void @restore_typeahead(%struct.tasave_T* %9) #9, !dbg !7515
  br label %17, !dbg !7516

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* @p_verbose, align 8, !dbg !7517, !tbaa !4053
  %12 = icmp sgt i64 %11, 1, !dbg !7519
  br i1 %12, label %13, label %17, !dbg !7520

; <label>:13:                                     ; preds = %10
  %14 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.749, i64 0, i64 0), i32 5) #9, !dbg !7521
  %15 = tail call i32 @verb_msg(i8* %14) #9, !dbg !7523
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7524
  store i64 1, i64* %16, align 8, !dbg !7525, !tbaa !2918
  br label %17, !dbg !7526

; <label>:17:                                     ; preds = %10, %13, %5
  ret void, !dbg !7527
}

; Function Attrs: nounwind uwtable
define internal void @f_inputsave(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !7528 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7530, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7531, metadata !DIExpression()), !dbg !7533
  %3 = tail call i32 @ga_grow(%struct.growarray* nonnull @ga_userinput, i32 1) #9, !dbg !7534
  %4 = icmp eq i32 %3, 1, !dbg !7536
  br i1 %4, label %5, label %12, !dbg !7537

; <label>:5:                                      ; preds = %2
  %6 = load %struct.tasave_T*, %struct.tasave_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 4) to %struct.tasave_T**), align 8, !dbg !7538, !tbaa !3473
  %7 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 0), align 8, !dbg !7540, !tbaa !3475
  %8 = sext i32 %7 to i64, !dbg !7541
  %9 = getelementptr inbounds %struct.tasave_T, %struct.tasave_T* %6, i64 %8, !dbg !7541
  tail call void @save_typeahead(%struct.tasave_T* %9) #9, !dbg !7542
  %10 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 0), align 8, !dbg !7543, !tbaa !3475
  %11 = add nsw i32 %10, 1, !dbg !7543
  store i32 %11, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @ga_userinput, i64 0, i32 0), align 8, !dbg !7543, !tbaa !3475
  br label %14, !dbg !7544

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7545
  store i64 1, i64* %13, align 8, !dbg !7546, !tbaa !2918
  br label %14

; <label>:14:                                     ; preds = %12, %5
  ret void, !dbg !7547
}

; Function Attrs: nounwind uwtable
define internal void @f_inputsecret(%struct.typval_T*, %struct.typval_T*) #0 !dbg !7548 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7551, metadata !DIExpression()), !dbg !7553
  %3 = load i32, i32* @cmdline_star, align 4, !dbg !7554, !tbaa !2904
  %4 = add nsw i32 %3, 1, !dbg !7554
  store i32 %4, i32* @cmdline_star, align 4, !dbg !7554, !tbaa !2904
  %5 = load i32, i32* @inputsecret_flag, align 4, !dbg !7555, !tbaa !2904
  %6 = add nsw i32 %5, 1, !dbg !7555
  store i32 %6, i32* @inputsecret_flag, align 4, !dbg !7555, !tbaa !2904
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7343, metadata !DIExpression()) #9, !dbg !7556
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7344, metadata !DIExpression()) #9, !dbg !7558
  tail call void @get_user_input(%struct.typval_T* %0, %struct.typval_T* %1, i32 0, i32 %6) #9, !dbg !7559
  %7 = load i32, i32* @cmdline_star, align 4, !dbg !7560, !tbaa !2904
  %8 = add nsw i32 %7, -1, !dbg !7560
  store i32 %8, i32* @cmdline_star, align 4, !dbg !7560, !tbaa !2904
  %9 = load i32, i32* @inputsecret_flag, align 4, !dbg !7561, !tbaa !2904
  %10 = add nsw i32 %9, -1, !dbg !7561
  store i32 %10, i32* @inputsecret_flag, align 4, !dbg !7561, !tbaa !2904
  ret void, !dbg !7562
}

declare void @f_insert(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_interrupt(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture readnone) #0 !dbg !7563 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7566, metadata !DIExpression()), !dbg !7568
  store volatile i32 1, i32* @got_int, align 4, !dbg !7569, !tbaa !2904
  ret void, !dbg !7570
}

; Function Attrs: nounwind uwtable
define internal void @f_invert(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7574, metadata !DIExpression()), !dbg !7576
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !7577
  %4 = xor i64 %3, -1, !dbg !7578
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7579
  store i64 %4, i64* %5, align 8, !dbg !7580, !tbaa !2918
  ret void, !dbg !7581
}

declare void @f_isdirectory(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_isinf(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !7582 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7585, metadata !DIExpression()), !dbg !7587
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7588
  %4 = load i32, i32* %3, align 8, !dbg !7588, !tbaa !3221
  %5 = icmp eq i32 %4, 6, !dbg !7590
  br i1 %5, label %6, label %16, !dbg !7591

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7592
  %8 = bitcast %union.anon* %7 to double*, !dbg !7592
  %9 = load double, double* %8, align 8, !dbg !7592, !tbaa !2918
  %10 = tail call double @llvm.fabs.f64(double %9) #11, !dbg !7592
  %11 = fcmp oeq double %10, 0x7FF0000000000000, !dbg !7592
  br i1 %11, label %12, label %16, !dbg !7593

; <label>:12:                                     ; preds = %6
  %13 = fcmp ogt double %9, 0.000000e+00, !dbg !7594
  %14 = select i1 %13, i64 1, i64 -1, !dbg !7595
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7596
  store i64 %14, i64* %15, align 8, !dbg !7597, !tbaa !2918
  br label %16, !dbg !7598

; <label>:16:                                     ; preds = %12, %6, %2
  ret void, !dbg !7599
}

; Function Attrs: nounwind uwtable
define internal void @f_islocked(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7600 {
  %3 = alloca %struct.lval_S, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7602, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7603, metadata !DIExpression()), !dbg !7627
  %4 = bitcast %struct.lval_S* %3 to i8*, !dbg !7628
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #9, !dbg !7628
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7629
  store i64 -1, i64* %5, align 8, !dbg !7630, !tbaa !2918
  %6 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !7631
  call void @llvm.dbg.value(metadata %struct.lval_S* %3, metadata !7604, metadata !DIExpression()), !dbg !7632
  %7 = call i8* @get_lval(i8* %6, %struct.typval_T* null, %struct.lval_S* nonnull %3, i32 0, i32 0, i32 20, i32 2) #9, !dbg !7633
  call void @llvm.dbg.value(metadata i8* %7, metadata !7624, metadata !DIExpression()), !dbg !7634
  %8 = icmp eq i8* %7, null, !dbg !7635
  br i1 %8, label %69, label %9, !dbg !7637

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 0, !dbg !7638
  %11 = load i8*, i8** %10, align 8, !dbg !7638, !tbaa !7639
  %12 = icmp eq i8* %11, null, !dbg !7641
  br i1 %12, label %69, label %13, !dbg !7642

; <label>:13:                                     ; preds = %9
  %14 = load i8, i8* %7, align 1, !dbg !7643, !tbaa !2918
  %15 = icmp eq i8 %14, 0, !dbg !7646
  br i1 %15, label %19, label %16, !dbg !7647

; <label>:16:                                     ; preds = %13
  %17 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_trailing_arg, i64 0, i64 0), i32 5) #9, !dbg !7648
  %18 = call i32 (i8*, ...) @semsg(i8* %17, i8* nonnull %7) #9, !dbg !7649
  br label %69, !dbg !7649

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 4, !dbg !7650
  %21 = load %struct.typval_T*, %struct.typval_T** %20, align 8, !dbg !7650, !tbaa !7653
  %22 = icmp eq %struct.typval_T* %21, null, !dbg !7654
  br i1 %22, label %23, label %38, !dbg !7655

; <label>:23:                                     ; preds = %19
  %24 = call %struct.dictitem_S* @find_var(i8* nonnull %11, %struct.hashtable_S** null, i32 1) #9, !dbg !7656
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %24, metadata !7625, metadata !DIExpression()), !dbg !7658
  %25 = icmp eq %struct.dictitem_S* %24, null, !dbg !7659
  br i1 %25, label %69, label %26, !dbg !7661

; <label>:26:                                     ; preds = %23
  %27 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %24, i64 0, i32 1, !dbg !7662
  %28 = load i8, i8* %27, align 8, !dbg !7662, !tbaa !7664
  %29 = and i8 %28, 8, !dbg !7665
  %30 = icmp eq i8 %29, 0, !dbg !7665
  br i1 %30, label %31, label %36, !dbg !7666

; <label>:31:                                     ; preds = %26
  %32 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %24, i64 0, i32 0, !dbg !7667
  %33 = call i32 @tv_islocked(%struct.typval_T* nonnull %32) #9, !dbg !7668
  %34 = icmp ne i32 %33, 0, !dbg !7666
  %35 = zext i1 %34 to i64, !dbg !7666
  br label %36, !dbg !7666

; <label>:36:                                     ; preds = %26, %31
  %37 = phi i64 [ 1, %26 ], [ %35, %31 ]
  store i64 %37, i64* %5, align 8, !dbg !7669, !tbaa !2918
  br label %69, !dbg !7670

; <label>:38:                                     ; preds = %19
  %39 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 7, !dbg !7671
  %40 = load i32, i32* %39, align 8, !dbg !7671, !tbaa !7673
  %41 = icmp eq i32 %40, 0, !dbg !7674
  br i1 %41, label %45, label %42, !dbg !7675

; <label>:42:                                     ; preds = %38
  %43 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.750, i64 0, i64 0), i32 5) #9, !dbg !7676
  %44 = call i32 @emsg(i8* %43) #9, !dbg !7677
  br label %69, !dbg !7677

; <label>:45:                                     ; preds = %38
  %46 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 13, !dbg !7678
  %47 = load i8*, i8** %46, align 8, !dbg !7678, !tbaa !7680
  %48 = icmp eq i8* %47, null, !dbg !7681
  br i1 %48, label %53, label %49, !dbg !7682

; <label>:49:                                     ; preds = %45
  %50 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_dictkey, i64 0, i64 0), i32 5) #9, !dbg !7683
  %51 = load i8*, i8** %46, align 8, !dbg !7684, !tbaa !7680
  %52 = call i32 (i8*, ...) @semsg(i8* %50, i8* %51) #9, !dbg !7685
  br label %69, !dbg !7685

; <label>:53:                                     ; preds = %45
  %54 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 6, !dbg !7686
  %55 = load %struct.listvar_S*, %struct.listvar_S** %54, align 8, !dbg !7686, !tbaa !7688
  %56 = icmp eq %struct.listvar_S* %55, null, !dbg !7689
  br i1 %56, label %63, label %57, !dbg !7690

; <label>:57:                                     ; preds = %53
  %58 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 5, !dbg !7691
  %59 = load %struct.listitem_S*, %struct.listitem_S** %58, align 8, !dbg !7691, !tbaa !7692
  %60 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %59, i64 0, i32 2, !dbg !7693
  %61 = call i32 @tv_islocked(%struct.typval_T* nonnull %60) #9, !dbg !7694
  %62 = sext i32 %61 to i64, !dbg !7694
  store i64 %62, i64* %5, align 8, !dbg !7695, !tbaa !2918
  br label %69, !dbg !7696

; <label>:63:                                     ; preds = %53
  %64 = getelementptr inbounds %struct.lval_S, %struct.lval_S* %3, i64 0, i32 12, !dbg !7697
  %65 = load %struct.dictitem_S*, %struct.dictitem_S** %64, align 8, !dbg !7697, !tbaa !7698
  %66 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %65, i64 0, i32 0, !dbg !7699
  %67 = call i32 @tv_islocked(%struct.typval_T* %66) #9, !dbg !7700
  %68 = sext i32 %67 to i64, !dbg !7700
  store i64 %68, i64* %5, align 8, !dbg !7701, !tbaa !2918
  br label %69

; <label>:69:                                     ; preds = %23, %9, %2, %16, %42, %57, %63, %49, %36
  call void @llvm.dbg.value(metadata %struct.lval_S* %3, metadata !7604, metadata !DIExpression()), !dbg !7632
  call void @clear_lval(%struct.lval_S* nonnull %3) #9, !dbg !7702
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #9, !dbg !7703
  ret void, !dbg !7703
}

; Function Attrs: nounwind uwtable
define internal void @f_isnan(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !7704 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7707, metadata !DIExpression()), !dbg !7709
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7710
  %4 = load i32, i32* %3, align 8, !dbg !7710, !tbaa !3221
  %5 = icmp eq i32 %4, 6, !dbg !7711
  br i1 %5, label %6, label %12, !dbg !7712

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7713
  %8 = bitcast %union.anon* %7 to double*, !dbg !7713
  %9 = load double, double* %8, align 8, !dbg !7713, !tbaa !2918
  %10 = fcmp uno double %9, 0.000000e+00, !dbg !7713
  %11 = zext i1 %10 to i64
  br label %12

; <label>:12:                                     ; preds = %6, %2
  %13 = phi i64 [ 0, %2 ], [ %11, %6 ]
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7714
  store i64 %13, i64* %14, align 8, !dbg !7715, !tbaa !2918
  ret void, !dbg !7716
}

declare void @f_items(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_job_getchannel(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_job_info(i32, %struct.type_S** nocapture readnone) #7 !dbg !7717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7719, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !7720, metadata !DIExpression()), !dbg !7722
  %3 = icmp eq i32 %0, 0, !dbg !7723
  %4 = select i1 %3, %struct.type_S* @t_list_job, %struct.type_S* @t_dict_any, !dbg !7725
  ret %struct.type_S* %4, !dbg !7726
}

declare void @f_job_info(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_job_setoptions(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_job_start(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_job_status(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_job_stop(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_join(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_js_decode(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_js_encode(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_json_decode(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_json_encode(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_keys(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_last_buffer_nr(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !7727 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.value(metadata %struct.file_buffer** @firstbuf, metadata !7732, metadata !DIExpression(DW_OP_deref)), !dbg !7736
  %3 = load %struct.file_buffer*, %struct.file_buffer** @firstbuf, align 8, !dbg !7737, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.file_buffer* %3, metadata !7732, metadata !DIExpression()), !dbg !7736
  %4 = icmp eq %struct.file_buffer* %3, null, !dbg !7739
  br i1 %4, label %18, label %5, !dbg !7737

; <label>:5:                                      ; preds = %2
  br label %6, !dbg !7741

; <label>:6:                                      ; preds = %5, %6
  %7 = phi %struct.file_buffer* [ %14, %6 ], [ %3, %5 ]
  %8 = phi i32 [ %12, %6 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7731, metadata !DIExpression()), !dbg !7735
  %9 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %7, i64 0, i32 13, !dbg !7741
  %10 = load i32, i32* %9, align 8, !dbg !7741, !tbaa !7743
  %11 = icmp slt i32 %8, %10, !dbg !7744
  %12 = select i1 %11, i32 %10, i32 %8, !dbg !7745
  %13 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %7, i64 0, i32 1, !dbg !7739
  call void @llvm.dbg.value(metadata %struct.file_buffer** %13, metadata !7732, metadata !DIExpression(DW_OP_deref)), !dbg !7736
  %14 = load %struct.file_buffer*, %struct.file_buffer** %13, align 8, !dbg !7737, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.file_buffer* %14, metadata !7732, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i32 %12, metadata !7731, metadata !DIExpression()), !dbg !7735
  %15 = icmp eq %struct.file_buffer* %14, null, !dbg !7739
  br i1 %15, label %16, label %6, !dbg !7737, !llvm.loop !7746

; <label>:16:                                     ; preds = %6
  %17 = sext i32 %12 to i64, !dbg !7748
  br label %18, !dbg !7748

; <label>:18:                                     ; preds = %16, %2
  %19 = phi i64 [ 0, %2 ], [ %17, %16 ]
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7749
  store i64 %19, i64* %20, align 8, !dbg !7750, !tbaa !2918
  ret void, !dbg !7751
}

; Function Attrs: nounwind uwtable
define internal void @f_len(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7752 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7754, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7755, metadata !DIExpression()), !dbg !7757
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7758
  %4 = load i32, i32* %3, align 8, !dbg !7758, !tbaa !3221
  switch i32 %4, label %30 [
    i32 7, label %5
    i32 5, label %5
    i32 8, label %9
    i32 11, label %15
    i32 12, label %21
    i32 0, label %27
    i32 1, label %27
    i32 2, label %27
    i32 3, label %27
    i32 4, label %27
    i32 6, label %27
    i32 9, label %27
    i32 10, label %27
    i32 13, label %27
    i32 14, label %27
  ], !dbg !7759

; <label>:5:                                      ; preds = %2, %2
  %6 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !7760
  %7 = tail call i64 @strlen(i8* %6) #10, !dbg !7760
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7762
  store i64 %7, i64* %8, align 8, !dbg !7763, !tbaa !2918
  br label %30, !dbg !7764

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7765
  %11 = bitcast %union.anon* %10 to %struct.blobvar_S**, !dbg !7766
  %12 = load %struct.blobvar_S*, %struct.blobvar_S** %11, align 8, !dbg !7766, !tbaa !2918
  %13 = tail call i64 @blob_len(%struct.blobvar_S* %12) #9, !dbg !7767
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7768
  store i64 %13, i64* %14, align 8, !dbg !7769, !tbaa !2918
  br label %30, !dbg !7770

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7771
  %17 = bitcast %union.anon* %16 to %struct.listvar_S**, !dbg !7772
  %18 = load %struct.listvar_S*, %struct.listvar_S** %17, align 8, !dbg !7772, !tbaa !2918
  %19 = tail call i64 @list_len(%struct.listvar_S* %18) #9, !dbg !7773
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7774
  store i64 %19, i64* %20, align 8, !dbg !7775, !tbaa !2918
  br label %30, !dbg !7776

; <label>:21:                                     ; preds = %2
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7777
  %23 = bitcast %union.anon* %22 to %struct.dictvar_S**, !dbg !7778
  %24 = load %struct.dictvar_S*, %struct.dictvar_S** %23, align 8, !dbg !7778, !tbaa !2918
  %25 = tail call i64 @dict_len(%struct.dictvar_S* %24) #9, !dbg !7779
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7780
  store i64 %25, i64* %26, align 8, !dbg !7781, !tbaa !2918
  br label %30, !dbg !7782

; <label>:27:                                     ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %28 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.751, i64 0, i64 0), i32 5) #9, !dbg !7783
  %29 = tail call i32 @emsg(i8* %28) #9, !dbg !7784
  br label %30, !dbg !7785

; <label>:30:                                     ; preds = %2, %27, %21, %15, %9, %5
  ret void, !dbg !7786
}

; Function Attrs: nounwind uwtable
define internal void @f_libcall(%struct.typval_T* nocapture readonly, %struct.typval_T*) #0 !dbg !7787 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7789, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7790, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7793, metadata !DIExpression()) #9, !dbg !7801
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7796, metadata !DIExpression()) #9, !dbg !7803
  call void @llvm.dbg.value(metadata i32 7, metadata !7797, metadata !DIExpression()) #9, !dbg !7804
  %4 = bitcast i32* %3 to i8*, !dbg !7805
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7805
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7806
  store i32 7, i32* %5, align 8, !dbg !7807, !tbaa !3221
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !7808
  %7 = bitcast %union.anon* %6 to i8**, !dbg !7810
  store i8* null, i8** %7, align 8, !dbg !7811, !tbaa !2918
  %8 = tail call i32 @check_restricted() #9, !dbg !7812
  %9 = icmp eq i32 %8, 0, !dbg !7812
  br i1 %9, label %10, label %44, !dbg !7814

; <label>:10:                                     ; preds = %2
  %11 = tail call i32 @check_secure() #9, !dbg !7815
  %12 = icmp eq i32 %11, 0, !dbg !7815
  br i1 %12, label %13, label %44, !dbg !7816

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7817
  %15 = load i32, i32* %14, align 8, !dbg !7817, !tbaa !3221
  %16 = icmp eq i32 %15, 7, !dbg !7819
  br i1 %16, label %17, label %44, !dbg !7820

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !7821
  %19 = load i32, i32* %18, align 8, !dbg !7821, !tbaa !3221
  %20 = icmp eq i32 %19, 7, !dbg !7822
  br i1 %20, label %21, label %44, !dbg !7823

; <label>:21:                                     ; preds = %17
  call void @llvm.dbg.value(metadata i8* null, metadata !7798, metadata !DIExpression()) #9, !dbg !7824
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 0, !dbg !7825
  %23 = load i32, i32* %22, align 8, !dbg !7825, !tbaa !3221
  %24 = icmp eq i32 %23, 7, !dbg !7828
  br i1 %24, label %28, label %25, !dbg !7829

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, i32 0
  %27 = load i64, i64* %26, align 8, !dbg !7830, !tbaa !2918
  br label %33, !dbg !7829

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, !dbg !7832
  %30 = bitcast %union.anon* %29 to i8**, !dbg !7833
  %31 = load i8*, i8** %30, align 8, !dbg !7833, !tbaa !2918
  call void @llvm.dbg.value(metadata i8* %31, metadata !7798, metadata !DIExpression()) #9, !dbg !7824
  %32 = ptrtoint i8* %31 to i64, !dbg !7834
  br label %33, !dbg !7834

; <label>:33:                                     ; preds = %28, %25
  %34 = phi i64 [ %32, %28 ], [ %27, %25 ], !dbg !7830
  %35 = phi i8* [ %31, %28 ], [ null, %25 ]
  call void @llvm.dbg.value(metadata i8* %35, metadata !7798, metadata !DIExpression()) #9, !dbg !7824
  call void @llvm.dbg.value(metadata i8** %7, metadata !7799, metadata !DIExpression()) #9, !dbg !7835
  call void @llvm.dbg.value(metadata i8** %7, metadata !7799, metadata !DIExpression()) #9, !dbg !7835
  %36 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7836
  %37 = bitcast %union.anon* %36 to i8**, !dbg !7837
  %38 = load i8*, i8** %37, align 8, !dbg !7837, !tbaa !2918
  %39 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !7838
  %40 = bitcast %union.anon* %39 to i8**, !dbg !7839
  %41 = load i8*, i8** %40, align 8, !dbg !7839, !tbaa !2918
  %42 = trunc i64 %34 to i32, !dbg !7840
  call void @llvm.dbg.value(metadata i32* %3, metadata !7800, metadata !DIExpression()) #9, !dbg !7841
  %43 = call i32 @mch_libcall(i8* %38, i8* %41, i8* %35, i32 %42, i8** nonnull %7, i32* nonnull %3) #9, !dbg !7842
  br label %44

; <label>:44:                                     ; preds = %2, %10, %13, %17, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: nounwind uwtable
define internal void @f_libcallnr(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !7845 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7847, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7848, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7793, metadata !DIExpression()) #9, !dbg !7851
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7796, metadata !DIExpression()) #9, !dbg !7853
  call void @llvm.dbg.value(metadata i32 5, metadata !7797, metadata !DIExpression()) #9, !dbg !7854
  %4 = bitcast i32* %3 to i8*, !dbg !7855
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7855
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7856
  store i32 5, i32* %5, align 8, !dbg !7857, !tbaa !3221
  %6 = tail call i32 @check_restricted() #9, !dbg !7858
  %7 = icmp eq i32 %6, 0, !dbg !7858
  br i1 %7, label %8, label %47, !dbg !7859

; <label>:8:                                      ; preds = %2
  %9 = tail call i32 @check_secure() #9, !dbg !7860
  %10 = icmp eq i32 %9, 0, !dbg !7860
  br i1 %10, label %11, label %47, !dbg !7861

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7862
  %13 = load i32, i32* %12, align 8, !dbg !7862, !tbaa !3221
  %14 = icmp eq i32 %13, 7, !dbg !7863
  br i1 %14, label %15, label %47, !dbg !7864

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !7865
  %17 = load i32, i32* %16, align 8, !dbg !7865, !tbaa !3221
  %18 = icmp eq i32 %17, 7, !dbg !7866
  br i1 %18, label %19, label %47, !dbg !7867

; <label>:19:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i8* null, metadata !7798, metadata !DIExpression()) #9, !dbg !7868
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 0, !dbg !7869
  %21 = load i32, i32* %20, align 8, !dbg !7869, !tbaa !3221
  %22 = icmp eq i32 %21, 7, !dbg !7870
  br i1 %22, label %26, label %23, !dbg !7871

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, i32 0
  %25 = load i64, i64* %24, align 8, !dbg !7872, !tbaa !2918
  br label %31, !dbg !7871

; <label>:26:                                     ; preds = %19
  %27 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, !dbg !7873
  %28 = bitcast %union.anon* %27 to i8**, !dbg !7874
  %29 = load i8*, i8** %28, align 8, !dbg !7874, !tbaa !2918
  call void @llvm.dbg.value(metadata i8* %29, metadata !7798, metadata !DIExpression()) #9, !dbg !7868
  %30 = ptrtoint i8* %29 to i64, !dbg !7875
  br label %31, !dbg !7875

; <label>:31:                                     ; preds = %26, %23
  %32 = phi i64 [ %30, %26 ], [ %25, %23 ], !dbg !7872
  %33 = phi i8* [ %29, %26 ], [ null, %23 ]
  call void @llvm.dbg.value(metadata i8* %33, metadata !7798, metadata !DIExpression()) #9, !dbg !7868
  call void @llvm.dbg.value(metadata i8** null, metadata !7799, metadata !DIExpression()) #9, !dbg !7876
  %34 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !7877
  %35 = bitcast %union.anon* %34 to i8**, !dbg !7878
  %36 = load i8*, i8** %35, align 8, !dbg !7878, !tbaa !2918
  %37 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !7879
  %38 = bitcast %union.anon* %37 to i8**, !dbg !7880
  %39 = load i8*, i8** %38, align 8, !dbg !7880, !tbaa !2918
  %40 = trunc i64 %32 to i32, !dbg !7881
  call void @llvm.dbg.value(metadata i32* %3, metadata !7800, metadata !DIExpression()) #9, !dbg !7882
  %41 = call i32 @mch_libcall(i8* %36, i8* %39, i8* %33, i32 %40, i8** null, i32* nonnull %3) #9, !dbg !7883
  %42 = icmp eq i32 %41, 1, !dbg !7884
  br i1 %42, label %43, label %47, !dbg !7885

; <label>:43:                                     ; preds = %31
  %44 = load i32, i32* %3, align 4, !dbg !7886, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %44, metadata !7800, metadata !DIExpression()) #9, !dbg !7882
  %45 = sext i32 %44 to i64, !dbg !7886
  %46 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7887
  store i64 %45, i64* %46, align 8, !dbg !7888, !tbaa !2918
  br label %47, !dbg !7889

; <label>:47:                                     ; preds = %2, %8, %11, %15, %31, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: nounwind uwtable
define internal void @f_line(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7892 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.tabpage_S*, align 8
  %5 = alloca %struct.window_S*, align 8
  %6 = alloca %struct.tabpage_S*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7894, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7895, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i64 0, metadata !7896, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata %struct.pos_T* null, metadata !7897, metadata !DIExpression()), !dbg !7907
  %7 = bitcast i32* %3 to i8*, !dbg !7908
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9, !dbg !7908
  %8 = bitcast %struct.tabpage_S** %4 to i8*, !dbg !7909
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !dbg !7909
  %9 = bitcast %struct.window_S** %5 to i8*, !dbg !7910
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9, !dbg !7910
  %10 = bitcast %struct.tabpage_S** %6 to i8*, !dbg !7911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9, !dbg !7911
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !7912
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %11, i64 0, i32 0, !dbg !7914
  %13 = load i32, i32* %12, align 8, !dbg !7914, !tbaa !3221
  %14 = icmp eq i32 %13, 0, !dbg !7915
  br i1 %14, label %32, label %15, !dbg !7916

; <label>:15:                                     ; preds = %2
  %16 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %11) #9, !dbg !7917
  %17 = trunc i64 %16 to i32, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %17, metadata !7899, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata %struct.tabpage_S** %4, metadata !7900, metadata !DIExpression()), !dbg !7921
  %18 = call %struct.window_S* @win_id2wp_tp(i32 %17, %struct.tabpage_S** nonnull %4) #9, !dbg !7922
  call void @llvm.dbg.value(metadata %struct.window_S* %18, metadata !7901, metadata !DIExpression()), !dbg !7923
  %19 = icmp ne %struct.window_S* %18, null, !dbg !7924
  %20 = load %struct.tabpage_S*, %struct.tabpage_S** %4, align 8, !dbg !7926
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %20, metadata !7900, metadata !DIExpression()), !dbg !7921
  %21 = icmp ne %struct.tabpage_S* %20, null, !dbg !7927
  %22 = and i1 %19, %21, !dbg !7928
  br i1 %22, label %23, label %40, !dbg !7928

; <label>:23:                                     ; preds = %15
  call void @llvm.dbg.value(metadata %struct.window_S** %5, metadata !7902, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %struct.tabpage_S** %6, metadata !7903, metadata !DIExpression()), !dbg !7930
  %24 = call i32 @switch_win_noblock(%struct.window_S** nonnull %5, %struct.tabpage_S** nonnull %6, %struct.window_S* nonnull %18, %struct.tabpage_S* nonnull %20, i32 1) #9, !dbg !7931
  %25 = icmp eq i32 %24, 1, !dbg !7934
  br i1 %25, label %26, label %28, !dbg !7935

; <label>:26:                                     ; preds = %23
  call void @check_cursor() #9, !dbg !7936
  call void @llvm.dbg.value(metadata i32* %3, metadata !7898, metadata !DIExpression()), !dbg !7938
  %27 = call %struct.pos_T* @var2fpos(%struct.typval_T* nonnull %0, i32 1, i32* nonnull %3, i32 0) #9, !dbg !7939
  call void @llvm.dbg.value(metadata %struct.pos_T* %27, metadata !7897, metadata !DIExpression()), !dbg !7907
  br label %28, !dbg !7940

; <label>:28:                                     ; preds = %26, %23
  %29 = phi %struct.pos_T* [ %27, %26 ], [ null, %23 ]
  call void @llvm.dbg.value(metadata %struct.pos_T* %29, metadata !7897, metadata !DIExpression()), !dbg !7907
  %30 = load %struct.window_S*, %struct.window_S** %5, align 8, !dbg !7941, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* %30, metadata !7902, metadata !DIExpression()), !dbg !7929
  %31 = load %struct.tabpage_S*, %struct.tabpage_S** %6, align 8, !dbg !7942, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %31, metadata !7903, metadata !DIExpression()), !dbg !7930
  call void @restore_win_noblock(%struct.window_S* %30, %struct.tabpage_S* %31, i32 1) #9, !dbg !7943
  br label %34, !dbg !7944

; <label>:32:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32* %3, metadata !7898, metadata !DIExpression()), !dbg !7938
  %33 = call %struct.pos_T* @var2fpos(%struct.typval_T* nonnull %0, i32 1, i32* nonnull %3, i32 0) #9, !dbg !7945
  call void @llvm.dbg.value(metadata %struct.pos_T* %33, metadata !7897, metadata !DIExpression()), !dbg !7907
  br label %34

; <label>:34:                                     ; preds = %28, %32
  %35 = phi %struct.pos_T* [ %29, %28 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata %struct.pos_T* %35, metadata !7897, metadata !DIExpression()), !dbg !7907
  %36 = icmp eq %struct.pos_T* %35, null, !dbg !7946
  br i1 %36, label %40, label %37, !dbg !7948

; <label>:37:                                     ; preds = %34
  %38 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %35, i64 0, i32 0, !dbg !7949
  %39 = load i64, i64* %38, align 8, !dbg !7949, !tbaa !4160
  call void @llvm.dbg.value(metadata i64 %39, metadata !7896, metadata !DIExpression()), !dbg !7906
  br label %40, !dbg !7950

; <label>:40:                                     ; preds = %15, %34, %37
  %41 = phi i64 [ %39, %37 ], [ 0, %34 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i64 %41, metadata !7896, metadata !DIExpression()), !dbg !7906
  %42 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7951
  store i64 %41, i64* %42, align 8, !dbg !7952, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9, !dbg !7953
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9, !dbg !7953
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !dbg !7953
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9, !dbg !7953
  ret void, !dbg !7953
}

; Function Attrs: nounwind uwtable
define internal void @f_line2byte(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !7954 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7956, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7957, metadata !DIExpression()), !dbg !7960
  %3 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !7961
  call void @llvm.dbg.value(metadata i64 %3, metadata !7958, metadata !DIExpression()), !dbg !7962
  %4 = icmp slt i64 %3, 1, !dbg !7963
  br i1 %4, label %11, label %5, !dbg !7965

; <label>:5:                                      ; preds = %2
  %6 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7966, !tbaa !2783
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %6, i64 0, i32 0, i32 0, !dbg !7967
  %8 = load i64, i64* %7, align 8, !dbg !7967, !tbaa !7968
  %9 = add nsw i64 %8, 1, !dbg !7969
  %10 = icmp sgt i64 %3, %9, !dbg !7970
  br i1 %10, label %11, label %13, !dbg !7971

; <label>:11:                                     ; preds = %2, %5
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7972
  store i64 -1, i64* %12, align 8, !dbg !7973, !tbaa !2918
  br label %19, !dbg !7974

; <label>:13:                                     ; preds = %5
  %14 = tail call i64 @ml_find_line_or_offset(%struct.file_buffer* %6, i64 %3, i64* null) #9, !dbg !7975
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !7976
  store i64 %14, i64* %15, align 8, !dbg !7977, !tbaa !2918
  %16 = icmp sgt i64 %14, -1, !dbg !7978
  br i1 %16, label %17, label %19, !dbg !7974

; <label>:17:                                     ; preds = %13
  %18 = add nsw i64 %14, 1, !dbg !7980
  store i64 %18, i64* %15, align 8, !dbg !7980, !tbaa !2918
  br label %19, !dbg !7980

; <label>:19:                                     ; preds = %11, %17, %13
  ret void, !dbg !7981
}

declare void @f_lispindent(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_list2str(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_listener_add(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_listener_flush(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_listener_remove(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_localtime(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_log(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !7982 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !7984, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !7985, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !7986, metadata !DIExpression()), !dbg !7989
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !7990
  store i32 6, i32* %3, align 8, !dbg !7991, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !7986, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !7992
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !7995
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !7996
  %5 = load i32, i32* %4, align 8, !dbg !7996, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !7997

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !7998
  %8 = bitcast i64* %7 to double*, !dbg !7998
  %9 = load double, double* %8, align 8, !dbg !7998, !tbaa !2918
  br label %14, !dbg !7999

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8000
  %12 = load i64, i64* %11, align 8, !dbg !8000, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !8001
  br label %14, !dbg !8002

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !7986, metadata !DIExpression()), !dbg !7989
  %16 = tail call double @log(double %15) #9, !dbg !8003
  br label %20, !dbg !8004

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !8005
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !8006
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !8007
}

; Function Attrs: nounwind uwtable
define internal void @f_log10(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !8008 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8011, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !8012, metadata !DIExpression()), !dbg !8015
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8016
  store i32 6, i32* %3, align 8, !dbg !8017, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !8012, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !8018
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !8021
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !8022
  %5 = load i32, i32* %4, align 8, !dbg !8022, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !8023

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8024
  %8 = bitcast i64* %7 to double*, !dbg !8024
  %9 = load double, double* %8, align 8, !dbg !8024, !tbaa !2918
  br label %14, !dbg !8025

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8026
  %12 = load i64, i64* %11, align 8, !dbg !8026, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !8027
  br label %14, !dbg !8028

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !8012, metadata !DIExpression()), !dbg !8015
  %16 = tail call double @log10(double %15) #9, !dbg !8029
  br label %20, !dbg !8030

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !8031
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !8032
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !8033
}

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_maparg(i32, %struct.type_S** nocapture readnone) #7 !dbg !8034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8036, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !8037, metadata !DIExpression()), !dbg !8039
  %3 = icmp eq i32 %0, 4, !dbg !8040
  %4 = select i1 %3, %struct.type_S* @t_dict_any, %struct.type_S* @t_string, !dbg !8042
  ret %struct.type_S* %4, !dbg !8043
}

; Function Attrs: nounwind uwtable
define internal void @f_maparg(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8044 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8046, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8047, metadata !DIExpression()), !dbg !8049
  tail call void @get_maparg(%struct.typval_T* %0, %struct.typval_T* %1, i32 1) #9, !dbg !8050
  ret void, !dbg !8051
}

; Function Attrs: nounwind uwtable
define internal void @f_mapcheck(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8052 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8054, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8055, metadata !DIExpression()), !dbg !8057
  tail call void @get_maparg(%struct.typval_T* %0, %struct.typval_T* %1, i32 0) #9, !dbg !8058
  ret void, !dbg !8059
}

declare void @f_mapnew(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_mapset(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_match(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8060 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8062, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8063, metadata !DIExpression()), !dbg !8065
  tail call fastcc void @find_some_match(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !8066
  ret void, !dbg !8067
}

declare void @f_matchadd(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_matchaddpos(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_matcharg(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_matchdelete(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_matchend(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8068 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8071, metadata !DIExpression()), !dbg !8073
  tail call fastcc void @find_some_match(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !8074
  ret void, !dbg !8075
}

declare void @f_matchfuzzy(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_matchfuzzypos(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_matchlist(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8076 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8079, metadata !DIExpression()), !dbg !8081
  tail call fastcc void @find_some_match(%struct.typval_T* %0, %struct.typval_T* %1, i32 3), !dbg !8082
  ret void, !dbg !8083
}

; Function Attrs: nounwind uwtable
define internal void @f_matchstr(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8084 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8086, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8087, metadata !DIExpression()), !dbg !8089
  tail call fastcc void @find_some_match(%struct.typval_T* %0, %struct.typval_T* %1, i32 2), !dbg !8090
  ret void, !dbg !8091
}

; Function Attrs: nounwind uwtable
define internal void @f_matchstrpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8092 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8094, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8095, metadata !DIExpression()), !dbg !8097
  tail call fastcc void @find_some_match(%struct.typval_T* %0, %struct.typval_T* %1, i32 4), !dbg !8098
  ret void, !dbg !8099
}

; Function Attrs: nounwind uwtable
define internal void @f_max(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !8100 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8103, metadata !DIExpression()), !dbg !8105
  tail call fastcc void @max_min(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !8106
  ret void, !dbg !8107
}

declare void @f_menu_info(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_min(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !8108 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8110, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8111, metadata !DIExpression()), !dbg !8113
  tail call fastcc void @max_min(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !8114
  ret void, !dbg !8115
}

declare void @f_mkdir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_mode(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_nextnonblank(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8116 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8118, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8119, metadata !DIExpression()), !dbg !8122
  %3 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !8123
  call void @llvm.dbg.value(metadata i64 %3, metadata !8120, metadata !DIExpression()), !dbg !8125
  %4 = icmp slt i64 %3, 0, !dbg !8126
  br i1 %4, label %23, label %5, !dbg !8130

; <label>:5:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i64 %3, metadata !8120, metadata !DIExpression()), !dbg !8125
  %6 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8131, !tbaa !2783
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %6, i64 0, i32 0, i32 0, !dbg !8132
  %8 = load i64, i64* %7, align 8, !dbg !8132, !tbaa !7968
  %9 = icmp sgt i64 %3, %8, !dbg !8133
  br i1 %9, label %23, label %10, !dbg !8134

; <label>:10:                                     ; preds = %5
  br label %11, !dbg !8135

; <label>:11:                                     ; preds = %10, %17
  %12 = phi i64 [ %18, %17 ], [ %3, %10 ]
  call void @llvm.dbg.value(metadata i64 %12, metadata !8120, metadata !DIExpression()), !dbg !8125
  %13 = tail call i8* @ml_get(i64 %12) #9, !dbg !8135
  %14 = tail call i8* @skipwhite(i8* %13) #9, !dbg !8137
  %15 = load i8, i8* %14, align 1, !dbg !8138, !tbaa !2918
  %16 = icmp eq i8 %15, 0, !dbg !8139
  br i1 %16, label %17, label %23, !dbg !8140

; <label>:17:                                     ; preds = %11
  %18 = add nsw i64 %12, 1, !dbg !8141
  call void @llvm.dbg.value(metadata i64 %18, metadata !8120, metadata !DIExpression()), !dbg !8125
  %19 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8131, !tbaa !2783
  %20 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %19, i64 0, i32 0, i32 0, !dbg !8132
  %21 = load i64, i64* %20, align 8, !dbg !8132, !tbaa !7968
  %22 = icmp slt i64 %12, %21, !dbg !8133
  br i1 %22, label %11, label %23, !dbg !8134

; <label>:23:                                     ; preds = %17, %11, %5, %2
  %24 = phi i64 [ 0, %2 ], [ 0, %5 ], [ %12, %11 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i64 %24, metadata !8120, metadata !DIExpression()), !dbg !8125
  %25 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8142
  store i64 %24, i64* %25, align 8, !dbg !8143, !tbaa !2918
  ret void, !dbg !8144
}

; Function Attrs: nounwind uwtable
define internal void @f_nr2char(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8145 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8147, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8148, metadata !DIExpression()), !dbg !8154
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !8155
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8155
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !8149, metadata !DIExpression()), !dbg !8156
  %5 = load i32, i32* @has_mbyte, align 4, !dbg !8157, !tbaa !2904
  %6 = icmp eq i32 %5, 0, !dbg !8157
  br i1 %6, label %27, label %7, !dbg !8158

; <label>:7:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !8150, metadata !DIExpression()), !dbg !8159
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8160
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %8, i64 0, i32 0, !dbg !8162
  %10 = load i32, i32* %9, align 8, !dbg !8162, !tbaa !3221
  %11 = icmp eq i32 %10, 0, !dbg !8163
  br i1 %11, label %21, label %12, !dbg !8164

; <label>:12:                                     ; preds = %7
  %13 = tail call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %8, i32* null) #9, !dbg !8165
  %14 = trunc i64 %13 to i32, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %14, metadata !8150, metadata !DIExpression()), !dbg !8159
  %15 = icmp eq i32 %14, 0, !dbg !8167
  br i1 %15, label %21, label %16, !dbg !8168

; <label>:16:                                     ; preds = %12
  %17 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %0) #9, !dbg !8169
  %18 = trunc i64 %17 to i32, !dbg !8171
  %19 = call i32 @utf_char2bytes(i32 %18, i8* nonnull %4) #9, !dbg !8172
  %20 = sext i32 %19 to i64, !dbg !8173
  br label %30, !dbg !8173

; <label>:21:                                     ; preds = %12, %7
  %22 = load i32 (i32, i8*)*, i32 (i32, i8*)** @mb_char2bytes, align 8, !dbg !8174, !tbaa !2783
  %23 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %0) #9, !dbg !8175
  %24 = trunc i64 %23 to i32, !dbg !8176
  %25 = call i32 %22(i32 %24, i8* nonnull %4) #9, !dbg !8177
  %26 = sext i32 %25 to i64, !dbg !8178
  br label %30

; <label>:27:                                     ; preds = %2
  %28 = tail call i64 @tv_get_number(%struct.typval_T* %0) #9, !dbg !8179
  %29 = trunc i64 %28 to i8, !dbg !8181
  store i8 %29, i8* %4, align 16, !dbg !8182, !tbaa !2918
  br label %30

; <label>:30:                                     ; preds = %16, %21, %27
  %31 = phi i64 [ %20, %16 ], [ %26, %21 ], [ 1, %27 ]
  %32 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 %31
  store i8 0, i8* %32, align 1, !tbaa !2918
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8183
  store i32 7, i32* %33, align 8, !dbg !8184, !tbaa !3221
  %34 = call i8* @vim_strsave(i8* nonnull %4) #9, !dbg !8185
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8186
  %36 = bitcast %union.anon* %35 to i8**, !dbg !8187
  store i8* %34, i8** %36, align 8, !dbg !8188, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8189
  ret void, !dbg !8189
}

; Function Attrs: nounwind uwtable
define internal void @f_or(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8193, metadata !DIExpression()), !dbg !8195
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !8196
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8197
  %5 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %4, i32* null) #9, !dbg !8198
  %6 = or i64 %5, %3, !dbg !8199
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8200
  store i64 %6, i64* %7, align 8, !dbg !8201, !tbaa !2918
  ret void, !dbg !8202
}

declare void @f_pathshorten(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_atcursor(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_beval(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_clear(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_close(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_create(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_dialog(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readnone uwtable
define internal nonnull %struct.type_S* @ret_bool(i32, %struct.type_S** nocapture readnone) #7 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !8206, metadata !DIExpression()), !dbg !8208
  ret %struct.type_S* @t_bool, !dbg !8209
}

declare void @f_popup_filter_menu(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_filter_yesno(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_findinfo(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_findpreview(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_getoptions(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_getpos(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_hide(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_list(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_locate(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_menu(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_move(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_notification(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_setoptions(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_settext(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_popup_show(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_pow(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8212, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8213, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !8214, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !8215, metadata !DIExpression()), !dbg !8219
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8220
  store i32 6, i32* %3, align 8, !dbg !8221, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !8214, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !8222
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !8225
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !8226
  %5 = load i32, i32* %4, align 8, !dbg !8226, !tbaa !3221
  switch i32 %5, label %14 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !8227

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8228
  %8 = bitcast i64* %7 to double*, !dbg !8228
  %9 = load double, double* %8, align 8, !dbg !8228, !tbaa !2918
  br label %17, !dbg !8229

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8230
  %12 = load i64, i64* %11, align 8, !dbg !8230, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !8231
  br label %17, !dbg !8232

; <label>:14:                                     ; preds = %2
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !8233
  %16 = tail call i32 @emsg(i8* %15) #9, !dbg !8234
  br label %35, !dbg !8235

; <label>:17:                                     ; preds = %6, %10
  %18 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double* undef, metadata !8215, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)) #9, !dbg !8236
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !8238
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !8239
  %20 = load i32, i32* %19, align 8, !dbg !8239, !tbaa !3221
  switch i32 %20, label %29 [
    i32 6, label %21
    i32 5, label %25
  ], !dbg !8240

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !8241
  %23 = bitcast i64* %22 to double*, !dbg !8241
  %24 = load double, double* %23, align 8, !dbg !8241, !tbaa !2918
  br label %32, !dbg !8242

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !8243
  %27 = load i64, i64* %26, align 8, !dbg !8243, !tbaa !2918
  %28 = sitofp i64 %27 to double, !dbg !8244
  br label %32, !dbg !8245

; <label>:29:                                     ; preds = %17
  %30 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !8246
  %31 = tail call i32 @emsg(i8* %30) #9, !dbg !8247
  br label %35, !dbg !8248

; <label>:32:                                     ; preds = %21, %25
  %33 = phi double [ %24, %21 ], [ %28, %25 ]
  call void @llvm.dbg.value(metadata double %18, metadata !8214, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata double %33, metadata !8215, metadata !DIExpression()), !dbg !8219
  %34 = tail call double @pow(double %18, double %33) #9, !dbg !8249
  br label %35, !dbg !8250

; <label>:35:                                     ; preds = %14, %29, %32
  %36 = phi double [ %34, %32 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %14 ]
  %37 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %38 = bitcast %union.anon* %37 to double*
  store double %36, double* %38, align 8, !tbaa !2918
  ret void, !dbg !8251
}

; Function Attrs: nounwind uwtable
define internal void @f_prevnonblank(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8252 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8254, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8255, metadata !DIExpression()), !dbg !8258
  %3 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !8259
  call void @llvm.dbg.value(metadata i64 %3, metadata !8256, metadata !DIExpression()), !dbg !8260
  %4 = icmp slt i64 %3, 1, !dbg !8261
  br i1 %4, label %20, label %5, !dbg !8263

; <label>:5:                                      ; preds = %2
  %6 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8264, !tbaa !2783
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %6, i64 0, i32 0, i32 0, !dbg !8265
  %8 = load i64, i64* %7, align 8, !dbg !8265, !tbaa !7968
  %9 = icmp sgt i64 %3, %8, !dbg !8266
  br i1 %9, label %20, label %10, !dbg !8267

; <label>:10:                                     ; preds = %5
  br label %11, !dbg !8268

; <label>:11:                                     ; preds = %10, %17
  %12 = phi i64 [ %18, %17 ], [ %3, %10 ]
  call void @llvm.dbg.value(metadata i64 %12, metadata !8256, metadata !DIExpression()), !dbg !8260
  %13 = tail call i8* @ml_get(i64 %12) #9, !dbg !8268
  %14 = tail call i8* @skipwhite(i8* %13) #9, !dbg !8269
  %15 = load i8, i8* %14, align 1, !dbg !8270, !tbaa !2918
  %16 = icmp eq i8 %15, 0, !dbg !8271
  br i1 %16, label %17, label %20, !dbg !8272

; <label>:17:                                     ; preds = %11
  %18 = add nsw i64 %12, -1, !dbg !8273
  call void @llvm.dbg.value(metadata i64 %18, metadata !8256, metadata !DIExpression()), !dbg !8260
  %19 = icmp sgt i64 %12, 1, !dbg !8274
  br i1 %19, label %11, label %20, !dbg !8275, !llvm.loop !8276

; <label>:20:                                     ; preds = %17, %11, %2, %5
  %21 = phi i64 [ 0, %5 ], [ 0, %2 ], [ %18, %17 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i64 %21, metadata !8256, metadata !DIExpression()), !dbg !8260
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8278
  store i64 %21, i64* %22, align 8, !dbg !8279, !tbaa !2918
  ret void, !dbg !8280
}

; Function Attrs: nounwind uwtable
define internal void @f_printf(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8281 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8283, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8284, metadata !DIExpression()), !dbg !8291
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !8292
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8292
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !8285, metadata !DIExpression()), !dbg !8293
  %5 = load i32, i32* @did_emsg, align 4, !dbg !8294, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %5, metadata !8288, metadata !DIExpression()), !dbg !8295
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8296
  store i32 7, i32* %6, align 8, !dbg !8297, !tbaa !3221
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8298
  %8 = bitcast %union.anon* %7 to i8**, !dbg !8299
  store i8* null, i8** %8, align 8, !dbg !8300, !tbaa !2918
  store i32 0, i32* @did_emsg, align 4, !dbg !8301, !tbaa !2904
  %9 = call i8* @tv_get_string_buf(%struct.typval_T* %0, i8* nonnull %4) #9, !dbg !8302
  call void @llvm.dbg.value(metadata i8* %9, metadata !8289, metadata !DIExpression()), !dbg !8303
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8304
  %11 = call i32 @vim_vsnprintf_typval(i8* null, i64 0, i8* %9, %struct.__va_list_tag* getelementptr inbounds ([1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* @ap, i64 0, i64 0), %struct.typval_T* nonnull %10) #9, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %11, metadata !8286, metadata !DIExpression()), !dbg !8306
  %12 = load i32, i32* @did_emsg, align 4, !dbg !8307, !tbaa !2904
  %13 = icmp eq i32 %12, 0, !dbg !8307
  br i1 %13, label %14, label %21, !dbg !8309

; <label>:14:                                     ; preds = %2
  %15 = add nsw i32 %11, 1, !dbg !8310
  %16 = sext i32 %15 to i64, !dbg !8312
  %17 = call i8* @alloc(i64 %16) #9, !dbg !8313
  call void @llvm.dbg.value(metadata i8* %17, metadata !8287, metadata !DIExpression()), !dbg !8314
  %18 = icmp eq i8* %17, null, !dbg !8315
  br i1 %18, label %21, label %19, !dbg !8317

; <label>:19:                                     ; preds = %14
  store i8* %17, i8** %8, align 8, !dbg !8318, !tbaa !2918
  %20 = call i32 @vim_vsnprintf_typval(i8* nonnull %17, i64 %16, i8* %9, %struct.__va_list_tag* getelementptr inbounds ([1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* @ap, i64 0, i64 0), %struct.typval_T* nonnull %10) #9, !dbg !8320
  br label %21, !dbg !8321

; <label>:21:                                     ; preds = %14, %2, %19
  %22 = load i32, i32* @did_emsg, align 4, !dbg !8322, !tbaa !2904
  %23 = or i32 %22, %5, !dbg !8322
  store i32 %23, i32* @did_emsg, align 4, !dbg !8322, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8323
  ret void, !dbg !8323
}

declare void @f_prompt_getprompt(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prompt_setcallback(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prompt_setinterrupt(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prompt_setprompt(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_add(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_clear(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_find(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_list(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_remove(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_type_add(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_type_change(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_type_delete(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_type_get(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_prop_type_list(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_pum_getpos(%struct.typval_T* nocapture readnone, %struct.typval_T*) #0 !dbg !8324 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8326, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8327, metadata !DIExpression()), !dbg !8329
  %3 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !8330
  %4 = icmp eq i32 %3, 1, !dbg !8332
  br i1 %4, label %5, label %9, !dbg !8333

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8334
  %7 = bitcast %union.anon* %6 to %struct.dictvar_S**, !dbg !8335
  %8 = load %struct.dictvar_S*, %struct.dictvar_S** %7, align 8, !dbg !8335, !tbaa !2918
  tail call void @pum_set_event_info(%struct.dictvar_S* %8) #9, !dbg !8336
  br label %9, !dbg !8337

; <label>:9:                                      ; preds = %2, %5
  ret void, !dbg !8337
}

; Function Attrs: nounwind uwtable
define internal void @f_pumvisible(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !8338 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8340, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8341, metadata !DIExpression()), !dbg !8343
  %3 = tail call i32 @pum_visible() #9, !dbg !8344
  %4 = icmp eq i32 %3, 0, !dbg !8344
  br i1 %4, label %7, label %5, !dbg !8346

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8347
  store i64 1, i64* %6, align 8, !dbg !8348, !tbaa !2918
  br label %7, !dbg !8349

; <label>:7:                                      ; preds = %2, %5
  ret void, !dbg !8350
}

; Function Attrs: nounwind uwtable
define internal void @f_rand(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !2604 {
  %3 = alloca %struct.anon.10, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !2606, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !2607, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata %struct.listvar_S* null, metadata !2608, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i32 0, metadata !2613, metadata !DIExpression()), !dbg !8354
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !8355
  %5 = load i32, i32* %4, align 8, !dbg !8355, !tbaa !3221
  switch i32 %5, label %141 [
    i32 0, label %6
    i32 11, label %80
  ], !dbg !8357

; <label>:6:                                      ; preds = %2
  %7 = load i1, i1* @f_rand.initialized, align 4
  br i1 %7, label %8, label %17, !dbg !8358

; <label>:8:                                      ; preds = %6
  %9 = load i32, i32* @f_rand.gy, align 4, !dbg !8360, !tbaa !2904
  %10 = load i32, i32* @f_rand.gx, align 4, !dbg !8360, !tbaa !2904
  %11 = load i32, i32* @f_rand.gz, align 4, !dbg !8360, !tbaa !2904
  %12 = load i32, i32* @f_rand.gw, align 4, !dbg !8360, !tbaa !2904
  %13 = insertelement <4 x i32> undef, i32 %12, i32 0, !dbg !8360
  %14 = insertelement <4 x i32> %13, i32 %11, i32 1, !dbg !8360
  %15 = insertelement <4 x i32> %14, i32 %10, i32 2, !dbg !8360
  %16 = insertelement <4 x i32> %15, i32 %9, i32 3, !dbg !8360
  br label %61, !dbg !8358

; <label>:17:                                     ; preds = %6
  %18 = load i1, i1* @srand_seed_for_testing_is_used, align 4
  br i1 %18, label %19, label %21, !dbg !8361

; <label>:19:                                     ; preds = %17
  %20 = load i32, i32* @srand_seed_for_testing, align 4, !dbg !8365, !tbaa !2904
  br label %44, !dbg !8368

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @init_srand.dev_urandom_state, align 4, !dbg !8369, !tbaa !2904
  %23 = icmp eq i32 %22, 0, !dbg !8370
  br i1 %23, label %41, label %24, !dbg !8371

; <label>:24:                                     ; preds = %21
  %25 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.754, i64 0, i64 0), i32 0) #9, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %25, metadata !2635, metadata !DIExpression()) #9, !dbg !8373
  %26 = bitcast %struct.anon.10* %3 to i8*, !dbg !8374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9, !dbg !8374
  %27 = icmp eq i32 %25, -1, !dbg !8375
  br i1 %27, label %28, label %29, !dbg !8377

; <label>:28:                                     ; preds = %24
  store i32 0, i32* @init_srand.dev_urandom_state, align 4, !dbg !8378, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9, !dbg !8379
  br label %41, !dbg !8380

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %3, i64 0, i32 0, i32 0, !dbg !8381
  store i32 0, i32* %30, align 4, !dbg !8383, !tbaa !2918
  %31 = call i64 @read(i32 %25, i8* nonnull %26, i64 4) #9, !dbg !8384
  %32 = icmp eq i64 %31, 4, !dbg !8386
  br i1 %32, label %34, label %33, !dbg !8387

; <label>:33:                                     ; preds = %29
  store i32 0, i32* @init_srand.dev_urandom_state, align 4, !dbg !8388, !tbaa !2904
  br label %36, !dbg !8389

; <label>:34:                                     ; preds = %29
  store i32 1, i32* @init_srand.dev_urandom_state, align 4, !dbg !8390, !tbaa !2904
  %35 = load i32, i32* %30, align 4, !dbg !8392, !tbaa !2918
  br label %36

; <label>:36:                                     ; preds = %34, %33
  %37 = phi i32 [ %35, %34 ], [ 0, %33 ]
  %38 = tail call i32 @close(i32 %25) #9, !dbg !8393
  %39 = load i32, i32* @init_srand.dev_urandom_state, align 4, !dbg !8394, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9, !dbg !8379
  %40 = icmp eq i32 %39, 1, !dbg !8396
  br i1 %40, label %44, label %41, !dbg !8380

; <label>:41:                                     ; preds = %36, %28, %21
  %42 = tail call i64 @vim_time() #9, !dbg !8397
  %43 = trunc i64 %42 to i32, !dbg !8397
  br label %44, !dbg !8398

; <label>:44:                                     ; preds = %19, %36, %41
  %45 = phi i32 [ %20, %19 ], [ %43, %41 ], [ %37, %36 ]
  call void @llvm.dbg.value(metadata i32 %45, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  %46 = insertelement <4 x i32> undef, i32 %45, i32 0, !dbg !8400
  %47 = shufflevector <4 x i32> %46, <4 x i32> undef, <4 x i32> zeroinitializer, !dbg !8400
  %48 = add <4 x i32> %47, <i32 2027808484, i32 -626627285, i32 -1640531527, i32 1013904242>, !dbg !8400
  %49 = lshr <4 x i32> %48, <i32 16, i32 16, i32 16, i32 16>, !dbg !8400
  %50 = xor <4 x i32> %49, %48, !dbg !8400
  %51 = mul <4 x i32> %50, <i32 -2048144789, i32 -2048144789, i32 -2048144789, i32 -2048144789>, !dbg !8400
  %52 = lshr <4 x i32> %51, <i32 13, i32 13, i32 13, i32 13>, !dbg !8400
  %53 = xor <4 x i32> %52, %51, !dbg !8400
  %54 = mul <4 x i32> %53, <i32 -1028477387, i32 -1028477387, i32 -1028477387, i32 -1028477387>, !dbg !8400
  %55 = lshr <4 x i32> %54, <i32 16, i32 16, i32 16, i32 16>, !dbg !8400
  %56 = xor <4 x i32> %55, %54, !dbg !8400
  %57 = extractelement <4 x i32> %56, i32 2, !dbg !8401
  store i32 %57, i32* @f_rand.gx, align 4, !dbg !8401, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  %58 = extractelement <4 x i32> %56, i32 3, !dbg !8402
  store i32 %58, i32* @f_rand.gy, align 4, !dbg !8402, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  %59 = extractelement <4 x i32> %56, i32 1, !dbg !8403
  store i32 %59, i32* @f_rand.gz, align 4, !dbg !8403, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2613, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 undef, metadata !2615, metadata !DIExpression()), !dbg !8399
  %60 = extractelement <4 x i32> %56, i32 0, !dbg !8404
  store i32 %60, i32* @f_rand.gw, align 4, !dbg !8404, !tbaa !2904
  store i1 true, i1* @f_rand.initialized, align 4
  br label %61, !dbg !8405

; <label>:61:                                     ; preds = %8, %44
  %62 = phi <4 x i32> [ %16, %8 ], [ %56, %44 ], !dbg !8360
  %63 = extractelement <4 x i32> %62, i32 3, !dbg !8360
  %64 = mul i32 %63, 5, !dbg !8360
  %65 = mul i32 %63, 640, !dbg !8360
  %66 = lshr i32 %64, 25, !dbg !8360
  %67 = or i32 %66, %65, !dbg !8360
  %68 = shl i32 %63, 9, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %68, metadata !2617, metadata !DIExpression()), !dbg !8406
  %69 = extractelement <4 x i32> %62, i32 1, !dbg !8360
  %70 = extractelement <4 x i32> %62, i32 2, !dbg !8360
  %71 = xor i32 %69, %70, !dbg !8360
  %72 = extractelement <4 x i32> %62, i32 0, !dbg !8360
  %73 = xor i32 %72, %63, !dbg !8360
  %74 = xor i32 %71, %63, !dbg !8360
  store i32 %74, i32* @f_rand.gy, align 4, !dbg !8360, !tbaa !2904
  %75 = xor i32 %73, %70, !dbg !8360
  store i32 %75, i32* @f_rand.gx, align 4, !dbg !8360, !tbaa !2904
  %76 = xor i32 %71, %68, !dbg !8360
  store i32 %76, i32* @f_rand.gz, align 4, !dbg !8360, !tbaa !2904
  %77 = shl i32 %73, 11, !dbg !8360
  %78 = lshr i32 %73, 21, !dbg !8360
  %79 = or i32 %77, %78, !dbg !8360
  store i32 %79, i32* @f_rand.gw, align 4, !dbg !8360, !tbaa !2904
  br label %136, !dbg !8407

; <label>:80:                                     ; preds = %2
  %81 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !8408
  %82 = bitcast %union.anon* %81 to %struct.listvar_S**, !dbg !8411
  %83 = load %struct.listvar_S*, %struct.listvar_S** %82, align 8, !dbg !8411, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %83, metadata !2608, metadata !DIExpression()), !dbg !8353
  %84 = icmp eq %struct.listvar_S* %83, null, !dbg !8412
  br i1 %84, label %141, label %85, !dbg !8414

; <label>:85:                                     ; preds = %80
  %86 = tail call i64 @list_len(%struct.listvar_S* nonnull %83) #9, !dbg !8415
  %87 = icmp eq i64 %86, 4, !dbg !8416
  br i1 %87, label %88, label %141, !dbg !8417

; <label>:88:                                     ; preds = %85
  %89 = tail call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %83, i64 0) #9, !dbg !8418
  call void @llvm.dbg.value(metadata %struct.listitem_S* %89, metadata !2609, metadata !DIExpression()), !dbg !8419
  %90 = tail call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %83, i64 1) #9, !dbg !8420
  call void @llvm.dbg.value(metadata %struct.listitem_S* %90, metadata !2610, metadata !DIExpression()), !dbg !8421
  %91 = tail call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %83, i64 2) #9, !dbg !8422
  call void @llvm.dbg.value(metadata %struct.listitem_S* %91, metadata !2611, metadata !DIExpression()), !dbg !8423
  %92 = tail call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %83, i64 3) #9, !dbg !8424
  call void @llvm.dbg.value(metadata %struct.listitem_S* %92, metadata !2612, metadata !DIExpression()), !dbg !8425
  %93 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %89, i64 0, i32 2, i32 0, !dbg !8426
  %94 = load i32, i32* %93, align 8, !dbg !8426, !tbaa !8428
  %95 = icmp eq i32 %94, 5, !dbg !8429
  br i1 %95, label %96, label %141, !dbg !8430

; <label>:96:                                     ; preds = %88
  %97 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %90, i64 0, i32 2, i32 0, !dbg !8431
  %98 = load i32, i32* %97, align 8, !dbg !8431, !tbaa !8428
  %99 = icmp eq i32 %98, 5, !dbg !8433
  br i1 %99, label %100, label %141, !dbg !8434

; <label>:100:                                    ; preds = %96
  %101 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %91, i64 0, i32 2, i32 0, !dbg !8435
  %102 = load i32, i32* %101, align 8, !dbg !8435, !tbaa !8428
  %103 = icmp eq i32 %102, 5, !dbg !8437
  br i1 %103, label %104, label %141, !dbg !8438

; <label>:104:                                    ; preds = %100
  %105 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %92, i64 0, i32 2, i32 0, !dbg !8439
  %106 = load i32, i32* %105, align 8, !dbg !8439, !tbaa !8428
  %107 = icmp eq i32 %106, 5, !dbg !8441
  br i1 %107, label %108, label %141, !dbg !8442

; <label>:108:                                    ; preds = %104
  %109 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %89, i64 0, i32 2, i32 2, i32 0, !dbg !8443
  %110 = load i64, i64* %109, align 8, !dbg !8443, !tbaa !2918
  %111 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %90, i64 0, i32 2, i32 2, i32 0, !dbg !8444
  %112 = load i64, i64* %111, align 8, !dbg !8444, !tbaa !2918
  %113 = trunc i64 %112 to i32, !dbg !8445
  call void @llvm.dbg.value(metadata i32 %113, metadata !2614, metadata !DIExpression()), !dbg !8446
  %114 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %91, i64 0, i32 2, i32 2, i32 0, !dbg !8447
  %115 = load i64, i64* %114, align 8, !dbg !8447, !tbaa !2918
  %116 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %92, i64 0, i32 2, i32 2, i32 0, !dbg !8448
  %117 = load i64, i64* %116, align 8, !dbg !8448, !tbaa !2918
  %118 = mul i32 %113, 5, !dbg !8449
  %119 = mul i32 %113, 640, !dbg !8449
  %120 = lshr i32 %118, 25, !dbg !8449
  %121 = or i32 %120, %119, !dbg !8449
  %122 = shl i64 %112, 9, !dbg !8449
  %123 = xor i64 %115, %110, !dbg !8449
  %124 = xor i64 %117, %112, !dbg !8449
  %125 = trunc i64 %124 to i32, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %125, metadata !2616, metadata !DIExpression()), !dbg !8450
  %126 = xor i64 %123, %112, !dbg !8449
  %127 = xor i64 %124, %110, !dbg !8449
  %128 = xor i64 %123, %122, !dbg !8449
  %129 = shl i32 %125, 11, !dbg !8449
  %130 = lshr i32 %125, 21, !dbg !8449
  %131 = or i32 %129, %130, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %131, metadata !2616, metadata !DIExpression()), !dbg !8450
  %132 = and i64 %127, 4294967295, !dbg !8451
  store i64 %132, i64* %109, align 8, !dbg !8452, !tbaa !2918
  %133 = and i64 %126, 4294967295, !dbg !8453
  store i64 %133, i64* %111, align 8, !dbg !8454, !tbaa !2918
  %134 = and i64 %128, 4294967295, !dbg !8455
  store i64 %134, i64* %114, align 8, !dbg !8456, !tbaa !2918
  %135 = zext i32 %131 to i64, !dbg !8457
  store i64 %135, i64* %116, align 8, !dbg !8458, !tbaa !2918
  br label %136

; <label>:136:                                    ; preds = %108, %61
  %137 = phi i32 [ %67, %61 ], [ %121, %108 ]
  %138 = mul i32 %137, 9
  call void @llvm.dbg.value(metadata i32 %138, metadata !2618, metadata !DIExpression()), !dbg !8459
  %139 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8460
  store i32 5, i32* %139, align 8, !dbg !8461, !tbaa !3221
  %140 = zext i32 %138 to i64, !dbg !8462
  br label %146, !dbg !8463

; <label>:141:                                    ; preds = %2, %104, %100, %96, %88, %85, %80
  %142 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !8464
  %143 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !8465
  %144 = tail call i32 (i8*, ...) @semsg(i8* %142, i8* %143) #9, !dbg !8466
  %145 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8467
  store i32 5, i32* %145, align 8, !dbg !8468, !tbaa !3221
  br label %146, !dbg !8469

; <label>:146:                                    ; preds = %141, %136
  %147 = phi i64 [ -1, %141 ], [ %140, %136 ]
  %148 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %147, i64* %148, align 8, !tbaa !2918
  ret void, !dbg !8469
}

; Function Attrs: nounwind uwtable
define internal void @f_range(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8470 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8472, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8473, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata i64 1, metadata !8476, metadata !DIExpression()), !dbg !8485
  %4 = bitcast i32* %3 to i8*, !dbg !8486
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !8486
  call void @llvm.dbg.value(metadata i32 0, metadata !8477, metadata !DIExpression()), !dbg !8487
  store i32 0, i32* %3, align 4, !dbg !8487, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %3, metadata !8477, metadata !DIExpression()), !dbg !8487
  %5 = call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* nonnull %3) #9, !dbg !8488
  call void @llvm.dbg.value(metadata i64 %5, metadata !8474, metadata !DIExpression()), !dbg !8489
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8490
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %6, i64 0, i32 0, !dbg !8492
  %8 = load i32, i32* %7, align 8, !dbg !8492, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !8493
  br i1 %9, label %10, label %12, !dbg !8494

; <label>:10:                                     ; preds = %2
  %11 = add nsw i64 %5, -1, !dbg !8495
  call void @llvm.dbg.value(metadata i64 %11, metadata !8475, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i64 0, metadata !8474, metadata !DIExpression()), !dbg !8489
  br label %20, !dbg !8498

; <label>:12:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32* %3, metadata !8477, metadata !DIExpression()), !dbg !8487
  %13 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %6, i32* nonnull %3) #9, !dbg !8499
  call void @llvm.dbg.value(metadata i64 %13, metadata !8475, metadata !DIExpression()), !dbg !8497
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !8501
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !8503
  %16 = load i32, i32* %15, align 8, !dbg !8503, !tbaa !3221
  %17 = icmp eq i32 %16, 0, !dbg !8504
  br i1 %17, label %20, label %18, !dbg !8505

; <label>:18:                                     ; preds = %12
  call void @llvm.dbg.value(metadata i32* %3, metadata !8477, metadata !DIExpression()), !dbg !8487
  %19 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %14, i32* nonnull %3) #9, !dbg !8506
  call void @llvm.dbg.value(metadata i64 %19, metadata !8476, metadata !DIExpression()), !dbg !8485
  br label %20, !dbg !8507

; <label>:20:                                     ; preds = %12, %18, %10
  %21 = phi i64 [ %11, %10 ], [ %13, %18 ], [ %13, %12 ]
  %22 = phi i64 [ 1, %10 ], [ %19, %18 ], [ 1, %12 ]
  %23 = phi i64 [ 0, %10 ], [ %5, %18 ], [ %5, %12 ]
  call void @llvm.dbg.value(metadata i64 %23, metadata !8474, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i64 %22, metadata !8476, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i64 %21, metadata !8475, metadata !DIExpression()), !dbg !8497
  %24 = load i32, i32* %3, align 4, !dbg !8508, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %24, metadata !8477, metadata !DIExpression()), !dbg !8487
  %25 = icmp eq i32 %24, 0, !dbg !8508
  br i1 %25, label %26, label %59, !dbg !8510

; <label>:26:                                     ; preds = %20
  %27 = icmp eq i64 %22, 0, !dbg !8511
  br i1 %27, label %28, label %31, !dbg !8512

; <label>:28:                                     ; preds = %26
  %29 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.755, i64 0, i64 0), i32 5) #9, !dbg !8513
  %30 = call i32 @emsg(i8* %29) #9, !dbg !8514
  br label %59, !dbg !8514

; <label>:31:                                     ; preds = %26
  %32 = icmp sgt i64 %22, 0, !dbg !8515
  br i1 %32, label %33, label %36, !dbg !8516

; <label>:33:                                     ; preds = %31
  %34 = add nsw i64 %21, 1, !dbg !8517
  %35 = icmp slt i64 %34, %23, !dbg !8518
  br i1 %35, label %39, label %42, !dbg !8519

; <label>:36:                                     ; preds = %31
  %37 = add nsw i64 %21, -1, !dbg !8520
  %38 = icmp sgt i64 %37, %23, !dbg !8521
  br i1 %38, label %39, label %42, !dbg !8516

; <label>:39:                                     ; preds = %36, %33
  %40 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.756, i64 0, i64 0), i32 5) #9, !dbg !8522
  %41 = call i32 @emsg(i8* %40) #9, !dbg !8523
  br label %59, !dbg !8523

; <label>:42:                                     ; preds = %36, %33
  %43 = call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !8524
  %44 = icmp eq i32 %43, 1, !dbg !8525
  br i1 %44, label %45, label %59, !dbg !8526

; <label>:45:                                     ; preds = %42
  %46 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8527
  %47 = bitcast %union.anon* %46 to %struct.listvar_S**, !dbg !8528
  %48 = load %struct.listvar_S*, %struct.listvar_S** %47, align 8, !dbg !8528, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %48, metadata !8478, metadata !DIExpression()), !dbg !8529
  %49 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %48, i64 0, i32 0, !dbg !8530
  store %struct.listitem_S* @range_list_item, %struct.listitem_S** %49, align 8, !dbg !8531, !tbaa !3610
  %50 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %48, i64 0, i32 2, i32 0, i32 0, !dbg !8532
  store i64 %23, i64* %50, align 8, !dbg !8533, !tbaa !2918
  %51 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %48, i64 0, i32 2, i32 0, i32 1, !dbg !8534
  store i64 %21, i64* %51, align 8, !dbg !8535, !tbaa !2918
  %52 = trunc i64 %22 to i32, !dbg !8536
  %53 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %48, i64 0, i32 2, i32 0, i32 2, !dbg !8537
  store i32 %52, i32* %53, align 8, !dbg !8538, !tbaa !2918
  %54 = sub nsw i64 %21, %23, !dbg !8539
  %55 = sdiv i64 %54, %22, !dbg !8540
  %56 = trunc i64 %55 to i32, !dbg !8541
  %57 = add i32 %56, 1, !dbg !8541
  %58 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %48, i64 0, i32 8, !dbg !8542
  store i32 %57, i32* %58, align 4, !dbg !8543, !tbaa !3541
  br label %59, !dbg !8544

; <label>:59:                                     ; preds = %28, %42, %45, %39, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !8545
  ret void, !dbg !8545
}

declare void @f_readblob(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_readdir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_readdirex(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_readfile(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_reduce(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_reg_executing(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !8546 {
  %3 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8548, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8549, metadata !DIExpression()), !dbg !8551
  %4 = load i32, i32* @reg_executing, align 4, !dbg !8552, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %4, metadata !8553, metadata !DIExpression()) #9, !dbg !8561
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8558, metadata !DIExpression()) #9, !dbg !8563
  %5 = bitcast i16* %3 to i8*, !dbg !8564
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #9, !dbg !8564
  call void @llvm.dbg.value(metadata i16 0, metadata !8559, metadata !DIExpression()) #9, !dbg !8565
  store i16 0, i16* %3, align 2, !dbg !8565
  %6 = trunc i32 %4 to i8, !dbg !8566
  store i8 %6, i8* %5, align 2, !dbg !8567, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8568
  store i32 7, i32* %7, align 8, !dbg !8569, !tbaa !3221
  %8 = call i8* @vim_strsave(i8* nonnull %5) #9, !dbg !8570
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8571
  %10 = bitcast %union.anon* %9 to i8**, !dbg !8572
  store i8* %8, i8** %10, align 8, !dbg !8573, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #9, !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: nounwind uwtable
define internal void @f_reg_recording(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !8576 {
  %3 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8579, metadata !DIExpression()), !dbg !8581
  %4 = load i32, i32* @reg_recording, align 4, !dbg !8582, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %4, metadata !8553, metadata !DIExpression()) #9, !dbg !8583
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8558, metadata !DIExpression()) #9, !dbg !8585
  %5 = bitcast i16* %3 to i8*, !dbg !8586
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #9, !dbg !8586
  call void @llvm.dbg.value(metadata i16 0, metadata !8559, metadata !DIExpression()) #9, !dbg !8587
  store i16 0, i16* %3, align 2, !dbg !8587
  %6 = trunc i32 %4 to i8, !dbg !8588
  store i8 %6, i8* %5, align 2, !dbg !8589, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8590
  store i32 7, i32* %7, align 8, !dbg !8591, !tbaa !3221
  %8 = call i8* @vim_strsave(i8* nonnull %5) #9, !dbg !8592
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8593
  %10 = bitcast %union.anon* %9 to i8**, !dbg !8594
  store i8* %8, i8** %10, align 8, !dbg !8595, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #9, !dbg !8596
  ret void, !dbg !8597
}

declare void @f_reltime(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_reltimefloat(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_reltimestr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_expr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_foreground(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_peek(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_read(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_send(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_remote_startserver(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind readonly uwtable
define internal %struct.type_S* @ret_remove(i32, %struct.type_S** readonly) #6 !dbg !8598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata %struct.type_S** %1, metadata !8601, metadata !DIExpression()), !dbg !8603
  %3 = icmp eq %struct.type_S** %1, null, !dbg !8604
  br i1 %3, label %11, label %4, !dbg !8606

; <label>:4:                                      ; preds = %2
  %5 = load %struct.type_S*, %struct.type_S** %1, align 8, !dbg !8607, !tbaa !2783
  %6 = getelementptr inbounds %struct.type_S, %struct.type_S* %5, i64 0, i32 0, !dbg !8610
  %7 = load i32, i32* %6, align 8, !dbg !8610, !tbaa !2727
  switch i32 %7, label %11 [
    i32 11, label %8
    i32 12, label %8
    i32 8, label %12
  ], !dbg !8611

; <label>:8:                                      ; preds = %4, %4
  %9 = getelementptr inbounds %struct.type_S, %struct.type_S* %5, i64 0, i32 4, !dbg !8612
  %10 = load %struct.type_S*, %struct.type_S** %9, align 8, !dbg !8612, !tbaa !2789
  br label %12, !dbg !8613

; <label>:11:                                     ; preds = %4, %2
  br label %12, !dbg !8614

; <label>:12:                                     ; preds = %4, %11, %8
  %13 = phi %struct.type_S* [ %10, %8 ], [ @t_any, %11 ], [ @t_number, %4 ]
  ret %struct.type_S* %13, !dbg !8615
}

declare void @f_remove(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_rename(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8616 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8618, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8619, metadata !DIExpression()), !dbg !8622
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !8623
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8623
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !8620, metadata !DIExpression()), !dbg !8624
  %5 = tail call i32 @check_restricted() #9, !dbg !8625
  %6 = icmp eq i32 %5, 0, !dbg !8625
  br i1 %6, label %7, label %16, !dbg !8627

; <label>:7:                                      ; preds = %2
  %8 = tail call i32 @check_secure() #9, !dbg !8628
  %9 = icmp eq i32 %8, 0, !dbg !8628
  br i1 %9, label %10, label %16, !dbg !8629

; <label>:10:                                     ; preds = %7
  %11 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !8630
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8631
  %13 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %12, i8* nonnull %4) #9, !dbg !8632
  %14 = call i32 @vim_rename(i8* %11, i8* %13) #9, !dbg !8633
  %15 = sext i32 %14 to i64, !dbg !8633
  br label %16

; <label>:16:                                     ; preds = %2, %7, %10
  %17 = phi i64 [ %15, %10 ], [ -1, %7 ], [ -1, %2 ]
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0
  store i64 %17, i64* %18, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !8634
  ret void, !dbg !8634
}

; Function Attrs: nounwind uwtable
define internal void @f_repeat(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8637, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8638, metadata !DIExpression()), !dbg !8646
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8647
  %4 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %3) #9, !dbg !8648
  %5 = trunc i64 %4 to i32, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %5, metadata !8640, metadata !DIExpression()), !dbg !8650
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !8651
  %7 = load i32, i32* %6, align 8, !dbg !8651, !tbaa !3221
  %8 = icmp eq i32 %7, 11, !dbg !8653
  br i1 %8, label %9, label %37, !dbg !8654

; <label>:9:                                      ; preds = %2
  %10 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !8655
  %11 = icmp eq i32 %10, 1, !dbg !8658
  br i1 %11, label %12, label %109, !dbg !8659

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !8660
  %14 = bitcast %union.anon* %13 to %struct.listvar_S**, !dbg !8661
  %15 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !8661, !tbaa !2918
  %16 = icmp eq %struct.listvar_S* %15, null, !dbg !8662
  br i1 %16, label %109, label %17, !dbg !8663

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8664
  %19 = bitcast %union.anon* %18 to %struct.listvar_S**, !dbg !8666
  call void @llvm.dbg.value(metadata i32 %5, metadata !8640, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 %5, metadata !8640, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8650
  %20 = icmp sgt i32 %5, 0, !dbg !8667
  br i1 %20, label %21, label %109, !dbg !8668

; <label>:21:                                     ; preds = %17
  %22 = load %struct.listvar_S*, %struct.listvar_S** %19, align 8, !dbg !8666, !tbaa !2918
  %23 = tail call i32 @list_extend(%struct.listvar_S* %22, %struct.listvar_S* nonnull %15, %struct.listitem_S* null) #9, !dbg !8669
  %24 = icmp ne i32 %23, 0, !dbg !8670
  %25 = icmp ne i32 %5, 1, !dbg !8667
  %26 = and i1 %24, %25, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %30, metadata !8640, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, metadata !8640, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8650
  br i1 %26, label %27, label %109, !dbg !8671, !llvm.loop !8672

; <label>:27:                                     ; preds = %21
  br label %28, !dbg !8674

; <label>:28:                                     ; preds = %27, %28
  %29 = phi i32 [ %30, %28 ], [ %5, %27 ]
  %30 = add nsw i32 %29, -1, !dbg !8674
  %31 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !8675, !tbaa !2918
  %32 = load %struct.listvar_S*, %struct.listvar_S** %19, align 8, !dbg !8666, !tbaa !2918
  %33 = tail call i32 @list_extend(%struct.listvar_S* %32, %struct.listvar_S* %31, %struct.listitem_S* null) #9, !dbg !8669
  %34 = icmp ne i32 %33, 0, !dbg !8670
  %35 = icmp sgt i32 %29, 2, !dbg !8667
  %36 = and i1 %34, %35, !dbg !8671
  br i1 %36, label %28, label %109, !dbg !8671, !llvm.loop !8672

; <label>:37:                                     ; preds = %2
  %38 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !8676
  call void @llvm.dbg.value(metadata i8* %38, metadata !8639, metadata !DIExpression()), !dbg !8678
  %39 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8679
  store i32 7, i32* %39, align 8, !dbg !8680, !tbaa !3221
  %40 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8681
  %41 = bitcast %union.anon* %40 to i8**, !dbg !8682
  store i8* null, i8** %41, align 8, !dbg !8683, !tbaa !2918
  %42 = tail call i64 @strlen(i8* %38) #10, !dbg !8684
  %43 = trunc i64 %42 to i32, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %43, metadata !8641, metadata !DIExpression()), !dbg !8686
  %44 = mul nsw i32 %43, %5, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %44, metadata !8642, metadata !DIExpression()), !dbg !8688
  %45 = icmp slt i32 %44, 1, !dbg !8689
  br i1 %45, label %109, label %46, !dbg !8691

; <label>:46:                                     ; preds = %37
  %47 = add nsw i32 %44, 1, !dbg !8692
  %48 = sext i32 %47 to i64, !dbg !8693
  %49 = tail call i8* @alloc(i64 %48) #9, !dbg !8694
  call void @llvm.dbg.value(metadata i8* %49, metadata !8643, metadata !DIExpression()), !dbg !8695
  %50 = icmp eq i8* %49, null, !dbg !8696
  br i1 %50, label %108, label %51, !dbg !8698

; <label>:51:                                     ; preds = %46
  call void @llvm.dbg.value(metadata i32 0, metadata !8644, metadata !DIExpression()), !dbg !8699
  %52 = icmp sgt i32 %5, 0, !dbg !8700
  br i1 %52, label %53, label %105, !dbg !8704

; <label>:53:                                     ; preds = %51
  %54 = shl i64 %42, 32
  %55 = ashr exact i64 %54, 32
  %56 = shl i64 %42, 32, !dbg !8704
  %57 = ashr exact i64 %56, 32, !dbg !8704
  %58 = and i64 %4, 4294967295
  %59 = add nsw i64 %58, -1, !dbg !8704
  %60 = and i64 %4, 7, !dbg !8704
  %61 = icmp ult i64 %59, 7, !dbg !8704
  br i1 %61, label %93, label %62, !dbg !8704

; <label>:62:                                     ; preds = %53
  %63 = sub nsw i64 %58, %60, !dbg !8704
  br label %64, !dbg !8704

; <label>:64:                                     ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %90, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %91, %64 ]
  call void @llvm.dbg.value(metadata i64 %65, metadata !8644, metadata !DIExpression()), !dbg !8699
  %67 = mul nsw i64 %65, %57, !dbg !8705
  %68 = getelementptr inbounds i8, i8* %49, i64 %67, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %68, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %69 = or i64 %65, 1, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %69, metadata !8644, metadata !DIExpression()), !dbg !8699
  %70 = mul nsw i64 %69, %57, !dbg !8705
  %71 = getelementptr inbounds i8, i8* %49, i64 %70, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %71, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %72 = or i64 %65, 2, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %72, metadata !8644, metadata !DIExpression()), !dbg !8699
  %73 = mul nsw i64 %72, %57, !dbg !8705
  %74 = getelementptr inbounds i8, i8* %49, i64 %73, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %74, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %75 = or i64 %65, 3, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %75, metadata !8644, metadata !DIExpression()), !dbg !8699
  %76 = mul nsw i64 %75, %57, !dbg !8705
  %77 = getelementptr inbounds i8, i8* %49, i64 %76, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %77, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %78 = or i64 %65, 4, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %78, metadata !8644, metadata !DIExpression()), !dbg !8699
  %79 = mul nsw i64 %78, %57, !dbg !8705
  %80 = getelementptr inbounds i8, i8* %49, i64 %79, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %80, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %81 = or i64 %65, 5, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %81, metadata !8644, metadata !DIExpression()), !dbg !8699
  %82 = mul nsw i64 %81, %57, !dbg !8705
  %83 = getelementptr inbounds i8, i8* %49, i64 %82, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %83, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %84 = or i64 %65, 6, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %84, metadata !8644, metadata !DIExpression()), !dbg !8699
  %85 = mul nsw i64 %84, %57, !dbg !8705
  %86 = getelementptr inbounds i8, i8* %49, i64 %85, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %86, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %87 = or i64 %65, 7, !dbg !8706
  call void @llvm.dbg.value(metadata i64 %87, metadata !8644, metadata !DIExpression()), !dbg !8699
  %88 = mul nsw i64 %87, %57, !dbg !8705
  %89 = getelementptr inbounds i8, i8* %49, i64 %88, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %89, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %90 = add nuw nsw i64 %65, 8, !dbg !8706
  %91 = add i64 %66, -8, !dbg !8704
  %92 = icmp eq i64 %91, 0, !dbg !8704
  br i1 %92, label %93, label %64, !dbg !8704, !llvm.loop !8707

; <label>:93:                                     ; preds = %64, %53
  %94 = phi i64 [ 0, %53 ], [ %90, %64 ]
  %95 = icmp eq i64 %60, 0, !dbg !8704
  br i1 %95, label %105, label %96, !dbg !8704

; <label>:96:                                     ; preds = %93
  br label %97, !dbg !8704

; <label>:97:                                     ; preds = %97, %96
  %98 = phi i64 [ %94, %96 ], [ %102, %97 ]
  %99 = phi i64 [ %60, %96 ], [ %103, %97 ]
  call void @llvm.dbg.value(metadata i64 %98, metadata !8644, metadata !DIExpression()), !dbg !8699
  %100 = mul nsw i64 %98, %57, !dbg !8705
  %101 = getelementptr inbounds i8, i8* %49, i64 %100, !dbg !8705
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %101, i8* %38, i64 %55, i32 1, i1 false), !dbg !8705
  %102 = add nuw nsw i64 %98, 1, !dbg !8706
  %103 = add i64 %99, -1, !dbg !8704
  %104 = icmp eq i64 %103, 0, !dbg !8704
  br i1 %104, label %105, label %97, !dbg !8704, !llvm.loop !8709

; <label>:105:                                    ; preds = %93, %97, %51
  %106 = sext i32 %44 to i64, !dbg !8710
  %107 = getelementptr inbounds i8, i8* %49, i64 %106, !dbg !8710
  store i8 0, i8* %107, align 1, !dbg !8711, !tbaa !2918
  br label %108, !dbg !8712

; <label>:108:                                    ; preds = %46, %105
  store i8* %49, i8** %41, align 8, !dbg !8713, !tbaa !2918
  br label %109

; <label>:109:                                    ; preds = %28, %21, %17, %108, %9, %12, %37
  ret void, !dbg !8714
}

declare void @f_resolve(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_reverse(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_round(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8718, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !8719, metadata !DIExpression()), !dbg !8722
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8723
  store i32 6, i32* %3, align 8, !dbg !8724, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !8719, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !8725
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !8728
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !8729
  %5 = load i32, i32* %4, align 8, !dbg !8729, !tbaa !3221
  switch i32 %5, label %22 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !8730

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8731
  %8 = bitcast i64* %7 to double*, !dbg !8731
  %9 = load double, double* %8, align 8, !dbg !8731, !tbaa !2918
  br label %14, !dbg !8732

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !8733
  %12 = load i64, i64* %11, align 8, !dbg !8733, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !8734
  br label %14, !dbg !8735

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !8719, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata double %15, metadata !3944, metadata !DIExpression()) #9, !dbg !8736
  %16 = fcmp ogt double %15, 0.000000e+00, !dbg !8738
  %17 = fadd double %15, 5.000000e-01, !dbg !8739
  %18 = tail call double @llvm.floor.f64(double %17) #9, !dbg !8740
  %19 = fadd double %15, -5.000000e-01, !dbg !8741
  %20 = tail call double @llvm.ceil.f64(double %19) #9, !dbg !8742
  %21 = select i1 %16, double %18, double %20, !dbg !8743
  br label %25, !dbg !8744

; <label>:22:                                     ; preds = %2
  %23 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !8745
  %24 = tail call i32 @emsg(i8* %23) #9, !dbg !8746
  br label %25

; <label>:25:                                     ; preds = %22, %14
  %26 = phi double [ 0.000000e+00, %22 ], [ %21, %14 ]
  %27 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %28 = bitcast %union.anon* %27 to double*
  store double %26, double* %28, align 8, !tbaa !2918
  ret void, !dbg !8747
}

; Function Attrs: nounwind uwtable
define internal void @f_screenattr(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8748 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8750, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8751, metadata !DIExpression()), !dbg !8756
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !8757
  %4 = trunc i64 %3 to i32, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %4, metadata !8752, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8759
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8760
  %6 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %5, i32* null) #9, !dbg !8761
  %7 = trunc i64 %6 to i32, !dbg !8762
  %8 = add nsw i32 %7, -1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %8, metadata !8753, metadata !DIExpression()), !dbg !8764
  %9 = icmp slt i32 %4, 1, !dbg !8765
  br i1 %9, label %31, label %10, !dbg !8767

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @screen_Rows, align 4, !dbg !8768, !tbaa !2904
  %12 = icmp slt i32 %11, %4, !dbg !8769
  %13 = icmp slt i32 %7, 1, !dbg !8770
  %14 = or i1 %13, %12, !dbg !8771
  %15 = load i32, i32* @screen_Columns, align 4, !dbg !8772
  %16 = icmp slt i32 %15, %7, !dbg !8773
  %17 = or i1 %14, %16, !dbg !8771
  br i1 %17, label %31, label %18, !dbg !8771

; <label>:18:                                     ; preds = %10
  %19 = load i16*, i16** @ScreenAttrs, align 8, !dbg !8774, !tbaa !2783
  %20 = load i32*, i32** @LineOffset, align 8, !dbg !8775, !tbaa !2783
  %21 = shl i64 %3, 32, !dbg !8775
  %22 = add i64 %21, -4294967296, !dbg !8775
  %23 = ashr exact i64 %22, 32, !dbg !8775
  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !8775
  %25 = load i32, i32* %24, align 4, !dbg !8775, !tbaa !2904
  %26 = add i32 %8, %25, !dbg !8776
  %27 = zext i32 %26 to i64, !dbg !8774
  %28 = getelementptr inbounds i16, i16* %19, i64 %27, !dbg !8774
  %29 = load i16, i16* %28, align 2, !dbg !8774, !tbaa !8777
  %30 = zext i16 %29 to i64
  br label %31

; <label>:31:                                     ; preds = %2, %10, %18
  %32 = phi i64 [ %30, %18 ], [ -1, %10 ], [ -1, %2 ]
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8778
  store i64 %32, i64* %33, align 8, !dbg !8779, !tbaa !2918
  ret void, !dbg !8780
}

; Function Attrs: nounwind uwtable
define internal void @f_screenchar(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8781 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8783, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8784, metadata !DIExpression()), !dbg !8790
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !8791
  %4 = trunc i64 %3 to i32, !dbg !8792
  call void @llvm.dbg.value(metadata i32 %4, metadata !8785, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8793
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8794
  %6 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %5, i32* null) #9, !dbg !8795
  %7 = trunc i64 %6 to i32, !dbg !8796
  %8 = add nsw i32 %7, -1, !dbg !8797
  call void @llvm.dbg.value(metadata i32 %8, metadata !8786, metadata !DIExpression()), !dbg !8798
  %9 = icmp slt i32 %4, 1, !dbg !8799
  br i1 %9, label %42, label %10, !dbg !8801

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @screen_Rows, align 4, !dbg !8802, !tbaa !2904
  %12 = icmp slt i32 %11, %4, !dbg !8803
  %13 = icmp slt i32 %7, 1, !dbg !8804
  %14 = or i1 %13, %12, !dbg !8805
  %15 = load i32, i32* @screen_Columns, align 4, !dbg !8806
  %16 = icmp slt i32 %15, %7, !dbg !8807
  %17 = or i1 %14, %16, !dbg !8805
  br i1 %17, label %42, label %18, !dbg !8805

; <label>:18:                                     ; preds = %10
  %19 = load i32*, i32** @LineOffset, align 8, !dbg !8808, !tbaa !2783
  %20 = shl i64 %3, 32, !dbg !8808
  %21 = add i64 %20, -4294967296, !dbg !8808
  %22 = ashr exact i64 %21, 32, !dbg !8808
  %23 = getelementptr inbounds i32, i32* %19, i64 %22, !dbg !8808
  %24 = load i32, i32* %23, align 4, !dbg !8808, !tbaa !2904
  %25 = add i32 %8, %24, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %25, metadata !8787, metadata !DIExpression()), !dbg !8811
  %26 = load i32, i32* @enc_utf8, align 4, !dbg !8812, !tbaa !2904
  %27 = icmp eq i32 %26, 0, !dbg !8812
  br i1 %27, label %28, label %30, !dbg !8814

; <label>:28:                                     ; preds = %18
  %29 = sext i32 %25 to i64, !dbg !8815
  br label %36, !dbg !8814

; <label>:30:                                     ; preds = %18
  %31 = load i32*, i32** @ScreenLinesUC, align 8, !dbg !8816, !tbaa !2783
  %32 = sext i32 %25 to i64, !dbg !8816
  %33 = getelementptr inbounds i32, i32* %31, i64 %32, !dbg !8816
  %34 = load i32, i32* %33, align 4, !dbg !8816, !tbaa !2904
  %35 = icmp eq i32 %34, 0, !dbg !8817
  br i1 %35, label %36, label %42, !dbg !8818

; <label>:36:                                     ; preds = %28, %30
  %37 = phi i64 [ %29, %28 ], [ %32, %30 ], !dbg !8815
  %38 = load i8*, i8** @ScreenLines, align 8, !dbg !8815, !tbaa !2783
  %39 = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !8815
  %40 = load i8, i8* %39, align 1, !dbg !8815, !tbaa !2918
  %41 = zext i8 %40 to i32, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %41, metadata !8788, metadata !DIExpression()), !dbg !8819
  br label %42

; <label>:42:                                     ; preds = %30, %2, %10, %36
  %43 = phi i32 [ %41, %36 ], [ -1, %10 ], [ -1, %2 ], [ %34, %30 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !8788, metadata !DIExpression()), !dbg !8819
  %44 = sext i32 %43 to i64, !dbg !8820
  %45 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8821
  store i64 %44, i64* %45, align 8, !dbg !8822, !tbaa !2918
  ret void, !dbg !8823
}

; Function Attrs: nounwind uwtable
define internal void @f_screenchars(%struct.typval_T*, %struct.typval_T*) #0 !dbg !8824 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8826, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8827, metadata !DIExpression()), !dbg !8834
  %3 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !8835
  %4 = icmp eq i32 %3, 0, !dbg !8837
  br i1 %4, label %74, label %5, !dbg !8838

; <label>:5:                                      ; preds = %2
  %6 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !8839
  %7 = trunc i64 %6 to i32, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %7, metadata !8828, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8841
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8842
  %9 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %8, i32* null) #9, !dbg !8843
  %10 = trunc i64 %9 to i32, !dbg !8844
  %11 = add nsw i32 %10, -1, !dbg !8845
  call void @llvm.dbg.value(metadata i32 %11, metadata !8829, metadata !DIExpression()), !dbg !8846
  %12 = icmp slt i32 %7, 1, !dbg !8847
  br i1 %12, label %74, label %13, !dbg !8849

; <label>:13:                                     ; preds = %5
  %14 = load i32, i32* @screen_Rows, align 4, !dbg !8850, !tbaa !2904
  %15 = icmp slt i32 %14, %7, !dbg !8851
  %16 = icmp slt i32 %10, 1, !dbg !8852
  %17 = or i1 %16, %15, !dbg !8853
  %18 = load i32, i32* @screen_Columns, align 4, !dbg !8854
  %19 = icmp slt i32 %18, %10, !dbg !8855
  %20 = or i1 %17, %19, !dbg !8853
  br i1 %20, label %74, label %21, !dbg !8853

; <label>:21:                                     ; preds = %13
  %22 = load i32*, i32** @LineOffset, align 8, !dbg !8856, !tbaa !2783
  %23 = shl i64 %6, 32, !dbg !8856
  %24 = add i64 %23, -4294967296, !dbg !8856
  %25 = ashr exact i64 %24, 32, !dbg !8856
  %26 = getelementptr inbounds i32, i32* %22, i64 %25, !dbg !8856
  %27 = load i32, i32* %26, align 4, !dbg !8856, !tbaa !2904
  %28 = add i32 %11, %27, !dbg !8857
  call void @llvm.dbg.value(metadata i32 %28, metadata !8830, metadata !DIExpression()), !dbg !8858
  %29 = load i32, i32* @enc_utf8, align 4, !dbg !8859, !tbaa !2904
  %30 = icmp eq i32 %29, 0, !dbg !8859
  br i1 %30, label %31, label %33, !dbg !8861

; <label>:31:                                     ; preds = %21
  %32 = sext i32 %28 to i64, !dbg !8862
  br label %39, !dbg !8861

; <label>:33:                                     ; preds = %21
  %34 = load i32*, i32** @ScreenLinesUC, align 8, !dbg !8863, !tbaa !2783
  %35 = sext i32 %28 to i64, !dbg !8863
  %36 = getelementptr inbounds i32, i32* %34, i64 %35, !dbg !8863
  %37 = load i32, i32* %36, align 4, !dbg !8863, !tbaa !2904
  %38 = icmp eq i32 %37, 0, !dbg !8864
  br i1 %38, label %39, label %45, !dbg !8865

; <label>:39:                                     ; preds = %31, %33
  %40 = phi i64 [ %32, %31 ], [ %35, %33 ], !dbg !8862
  %41 = load i8*, i8** @ScreenLines, align 8, !dbg !8862, !tbaa !2783
  %42 = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !8862
  %43 = load i8, i8* %42, align 1, !dbg !8862, !tbaa !2918
  %44 = zext i8 %43 to i32, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %44, metadata !8831, metadata !DIExpression()), !dbg !8866
  br label %45

; <label>:45:                                     ; preds = %33, %39
  %46 = phi i32 [ %44, %39 ], [ %37, %33 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !8831, metadata !DIExpression()), !dbg !8866
  %47 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8867
  %48 = bitcast %union.anon* %47 to %struct.listvar_S**, !dbg !8868
  %49 = load %struct.listvar_S*, %struct.listvar_S** %48, align 8, !dbg !8868, !tbaa !2918
  %50 = sext i32 %46 to i64, !dbg !8869
  %51 = tail call i32 @list_append_number(%struct.listvar_S* %49, i64 %50) #9, !dbg !8870
  %52 = load i32, i32* @enc_utf8, align 4, !dbg !8871, !tbaa !2904
  %53 = icmp ne i32 %52, 0, !dbg !8871
  %54 = load i32, i32* @Screen_mco, align 4, !dbg !8873
  %55 = icmp sgt i32 %54, 0, !dbg !8876
  %56 = and i1 %53, %55, !dbg !8877
  call void @llvm.dbg.value(metadata i32 0, metadata !8832, metadata !DIExpression()), !dbg !8878
  br i1 %56, label %57, label %74, !dbg !8877

; <label>:57:                                     ; preds = %45
  %58 = sext i32 %28 to i64
  br label %59, !dbg !8879

; <label>:59:                                     ; preds = %57, %66
  %60 = phi i64 [ 0, %57 ], [ %70, %66 ]
  call void @llvm.dbg.value(metadata i64 %60, metadata !8832, metadata !DIExpression()), !dbg !8878
  %61 = getelementptr inbounds [6 x i32*], [6 x i32*]* @ScreenLinesC, i64 0, i64 %60, !dbg !8880
  %62 = load i32*, i32** %61, align 8, !dbg !8880, !tbaa !2783
  %63 = getelementptr inbounds i32, i32* %62, i64 %58, !dbg !8880
  %64 = load i32, i32* %63, align 4, !dbg !8880, !tbaa !2904
  %65 = icmp eq i32 %64, 0, !dbg !8881
  br i1 %65, label %74, label %66, !dbg !8882

; <label>:66:                                     ; preds = %59
  %67 = load %struct.listvar_S*, %struct.listvar_S** %48, align 8, !dbg !8883, !tbaa !2918
  %68 = zext i32 %64 to i64, !dbg !8884
  %69 = tail call i32 @list_append_number(%struct.listvar_S* %67, i64 %68) #9, !dbg !8885
  %70 = add nuw nsw i64 %60, 1, !dbg !8886
  %71 = load i32, i32* @Screen_mco, align 4, !dbg !8873, !tbaa !2904
  %72 = sext i32 %71 to i64, !dbg !8876
  %73 = icmp slt i64 %70, %72, !dbg !8876
  br i1 %73, label %59, label %74, !dbg !8879, !llvm.loop !8887

; <label>:74:                                     ; preds = %59, %66, %45, %5, %13, %2
  ret void, !dbg !8889
}

; Function Attrs: nounwind uwtable
define internal void @f_screencol(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8892, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8893, metadata !DIExpression()), !dbg !8895
  %3 = tail call i32 @screen_screencol() #9, !dbg !8896
  %4 = add nsw i32 %3, 1, !dbg !8897
  %5 = sext i32 %4 to i64, !dbg !8896
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8898
  store i64 %5, i64* %6, align 8, !dbg !8899, !tbaa !2918
  ret void, !dbg !8900
}

declare void @f_screenpos(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_screenrow(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !8901 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8903, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8904, metadata !DIExpression()), !dbg !8906
  %3 = tail call i32 @screen_screenrow() #9, !dbg !8907
  %4 = add nsw i32 %3, 1, !dbg !8908
  %5 = sext i32 %4 to i64, !dbg !8907
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !8909
  store i64 %5, i64* %6, align 8, !dbg !8910, !tbaa !2918
  ret void, !dbg !8911
}

; Function Attrs: nounwind uwtable
define internal void @f_screenstring(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8912 {
  %3 = alloca [22 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8914, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8915, metadata !DIExpression()), !dbg !8927
  %4 = getelementptr inbounds [22 x i8], [22 x i8]* %3, i64 0, i64 0, !dbg !8928
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %4) #9, !dbg !8928
  call void @llvm.dbg.declare(metadata [22 x i8]* %3, metadata !8921, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8925, metadata !DIExpression()), !dbg !8930
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !8931
  %6 = bitcast %union.anon* %5 to i8**, !dbg !8932
  store i8* null, i8** %6, align 8, !dbg !8933, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !8934
  store i32 7, i32* %7, align 8, !dbg !8935, !tbaa !3221
  %8 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !8936
  %9 = trunc i64 %8 to i32, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %9, metadata !8916, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8938
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !8939
  %11 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %10, i32* null) #9, !dbg !8940
  %12 = trunc i64 %11 to i32, !dbg !8941
  %13 = add nsw i32 %12, -1, !dbg !8942
  call void @llvm.dbg.value(metadata i32 %13, metadata !8917, metadata !DIExpression()), !dbg !8943
  %14 = icmp slt i32 %9, 1, !dbg !8944
  br i1 %14, label %86, label %15, !dbg !8946

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* @screen_Rows, align 4, !dbg !8947, !tbaa !2904
  %17 = icmp slt i32 %16, %9, !dbg !8948
  %18 = icmp slt i32 %12, 1, !dbg !8949
  %19 = or i1 %18, %17, !dbg !8950
  %20 = load i32, i32* @screen_Columns, align 4, !dbg !8951
  %21 = icmp slt i32 %20, %12, !dbg !8952
  %22 = or i1 %19, %21, !dbg !8950
  br i1 %22, label %86, label %23, !dbg !8950

; <label>:23:                                     ; preds = %15
  %24 = load i32*, i32** @LineOffset, align 8, !dbg !8953, !tbaa !2783
  %25 = shl i64 %8, 32, !dbg !8953
  %26 = add i64 %25, -4294967296, !dbg !8953
  %27 = ashr exact i64 %26, 32, !dbg !8953
  %28 = getelementptr inbounds i32, i32* %24, i64 %27, !dbg !8953
  %29 = load i32, i32* %28, align 4, !dbg !8953, !tbaa !2904
  %30 = add i32 %13, %29, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %30, metadata !8918, metadata !DIExpression()), !dbg !8955
  %31 = load i32, i32* @enc_utf8, align 4, !dbg !8956, !tbaa !2904
  %32 = icmp eq i32 %31, 0, !dbg !8956
  br i1 %32, label %33, label %35, !dbg !8958

; <label>:33:                                     ; preds = %23
  %34 = sext i32 %30 to i64, !dbg !8959
  br label %41, !dbg !8958

; <label>:35:                                     ; preds = %23
  %36 = load i32*, i32** @ScreenLinesUC, align 8, !dbg !8960, !tbaa !2783
  %37 = sext i32 %30 to i64, !dbg !8960
  %38 = getelementptr inbounds i32, i32* %36, i64 %37, !dbg !8960
  %39 = load i32, i32* %38, align 4, !dbg !8960, !tbaa !2904
  %40 = icmp eq i32 %39, 0, !dbg !8961
  br i1 %40, label %41, label %47, !dbg !8962

; <label>:41:                                     ; preds = %33, %35
  %42 = phi i64 [ %34, %33 ], [ %37, %35 ], !dbg !8959
  %43 = load i8*, i8** @ScreenLines, align 8, !dbg !8959, !tbaa !2783
  %44 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !8959
  %45 = load i8, i8* %44, align 1, !dbg !8959, !tbaa !2918
  %46 = zext i8 %45 to i32, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %46, metadata !8919, metadata !DIExpression()), !dbg !8963
  br label %47

; <label>:47:                                     ; preds = %35, %41
  %48 = phi i32 [ %46, %41 ], [ %39, %35 ]
  call void @llvm.dbg.value(metadata i32 %48, metadata !8919, metadata !DIExpression()), !dbg !8963
  %49 = load i32 (i32, i8*)*, i32 (i32, i8*)** @mb_char2bytes, align 8, !dbg !8964, !tbaa !2783
  %50 = call i32 %49(i32 %48, i8* nonnull %4) #9, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %50, metadata !8925, metadata !DIExpression()), !dbg !8930
  %51 = load i32, i32* @enc_utf8, align 4, !dbg !8965, !tbaa !2904
  %52 = icmp eq i32 %51, 0, !dbg !8965
  br i1 %52, label %81, label %53, !dbg !8967

; <label>:53:                                     ; preds = %47
  %54 = load i32*, i32** @ScreenLinesUC, align 8, !dbg !8968, !tbaa !2783
  %55 = sext i32 %30 to i64, !dbg !8968
  %56 = getelementptr inbounds i32, i32* %54, i64 %55, !dbg !8968
  %57 = load i32, i32* %56, align 4, !dbg !8968, !tbaa !2904
  %58 = icmp ne i32 %57, 0, !dbg !8969
  %59 = load i32, i32* @Screen_mco, align 4, !dbg !8970
  %60 = icmp sgt i32 %59, 0, !dbg !8973
  %61 = and i1 %58, %60, !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8920, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.value(metadata i32 %50, metadata !8925, metadata !DIExpression()), !dbg !8930
  br i1 %61, label %62, label %81, !dbg !8974

; <label>:62:                                     ; preds = %53
  br label %63, !dbg !8976

; <label>:63:                                     ; preds = %62, %71
  %64 = phi i64 [ %77, %71 ], [ 0, %62 ]
  %65 = phi i32 [ %76, %71 ], [ %50, %62 ]
  call void @llvm.dbg.value(metadata i64 %64, metadata !8920, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.value(metadata i32 %65, metadata !8925, metadata !DIExpression()), !dbg !8930
  %66 = getelementptr inbounds [6 x i32*], [6 x i32*]* @ScreenLinesC, i64 0, i64 %64, !dbg !8976
  %67 = load i32*, i32** %66, align 8, !dbg !8976, !tbaa !2783
  %68 = getelementptr inbounds i32, i32* %67, i64 %55, !dbg !8976
  %69 = load i32, i32* %68, align 4, !dbg !8976, !tbaa !2904
  %70 = icmp eq i32 %69, 0, !dbg !8977
  br i1 %70, label %81, label %71, !dbg !8978

; <label>:71:                                     ; preds = %63
  %72 = load i32 (i32, i8*)*, i32 (i32, i8*)** @mb_char2bytes, align 8, !dbg !8979, !tbaa !2783
  %73 = sext i32 %65 to i64, !dbg !8980
  %74 = getelementptr inbounds [22 x i8], [22 x i8]* %3, i64 0, i64 %73, !dbg !8980
  %75 = call i32 %72(i32 %69, i8* nonnull %74) #9, !dbg !8979
  %76 = add nsw i32 %75, %65, !dbg !8981
  %77 = add nuw nsw i64 %64, 1, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %76, metadata !8925, metadata !DIExpression()), !dbg !8930
  %78 = load i32, i32* @Screen_mco, align 4, !dbg !8970, !tbaa !2904
  %79 = sext i32 %78 to i64, !dbg !8973
  %80 = icmp slt i64 %77, %79, !dbg !8973
  br i1 %80, label %63, label %81, !dbg !8983, !llvm.loop !8984

; <label>:81:                                     ; preds = %71, %63, %53, %47
  %82 = phi i32 [ %50, %53 ], [ %50, %47 ], [ %76, %71 ], [ %65, %63 ]
  call void @llvm.dbg.value(metadata i32 %82, metadata !8925, metadata !DIExpression()), !dbg !8930
  %83 = sext i32 %82 to i64, !dbg !8986
  %84 = getelementptr inbounds [22 x i8], [22 x i8]* %3, i64 0, i64 %83, !dbg !8986
  store i8 0, i8* %84, align 1, !dbg !8987, !tbaa !2918
  %85 = call i8* @vim_strsave(i8* nonnull %4) #9, !dbg !8988
  store i8* %85, i8** %6, align 8, !dbg !8989, !tbaa !2918
  br label %86, !dbg !8990

; <label>:86:                                     ; preds = %2, %15, %81
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %4) #9, !dbg !8990
  ret void, !dbg !8990
}

; Function Attrs: nounwind uwtable
define internal void @f_search(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !8991 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !8993, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !8994, metadata !DIExpression()), !dbg !8997
  %4 = bitcast i32* %3 to i8*, !dbg !8998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !8998
  call void @llvm.dbg.value(metadata i32 0, metadata !8995, metadata !DIExpression()), !dbg !8999
  store i32 0, i32* %3, align 4, !dbg !8999, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %3, metadata !8995, metadata !DIExpression()), !dbg !8999
  %5 = call fastcc i32 @search_cmn(%struct.typval_T* %0, %struct.pos_T* null, i32* nonnull %3), !dbg !9000
  %6 = sext i32 %5 to i64, !dbg !9000
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9001
  store i64 %6, i64* %7, align 8, !dbg !9002, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !9003
  ret void, !dbg !9003
}

declare void @f_searchcount(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_searchdecl(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9004 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9006, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9007, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata i32 1, metadata !9008, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 0, metadata !9009, metadata !DIExpression()), !dbg !9015
  %4 = bitcast i32* %3 to i8*, !dbg !9016
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !9016
  call void @llvm.dbg.value(metadata i32 0, metadata !9010, metadata !DIExpression()), !dbg !9017
  store i32 0, i32* %3, align 4, !dbg !9017, !tbaa !2904
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9018
  store i64 1, i64* %5, align 8, !dbg !9019, !tbaa !2918
  %6 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !9020
  call void @llvm.dbg.value(metadata i8* %6, metadata !9011, metadata !DIExpression()), !dbg !9021
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !9022
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %7, i64 0, i32 0, !dbg !9024
  %9 = load i32, i32* %8, align 8, !dbg !9024, !tbaa !3221
  %10 = icmp eq i32 %9, 0, !dbg !9025
  br i1 %10, label %28, label %11, !dbg !9026

; <label>:11:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32* %3, metadata !9010, metadata !DIExpression()), !dbg !9017
  %12 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %7, i32* nonnull %3) #9, !dbg !9027
  %13 = trunc i64 %12 to i32, !dbg !9029
  %14 = icmp eq i32 %13, 0, !dbg !9030
  %15 = zext i1 %14 to i32, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %15, metadata !9008, metadata !DIExpression()), !dbg !9014
  %16 = load i32, i32* %3, align 4, !dbg !9031, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %16, metadata !9010, metadata !DIExpression()), !dbg !9017
  %17 = icmp eq i32 %16, 0, !dbg !9031
  br i1 %17, label %18, label %40, !dbg !9033

; <label>:18:                                     ; preds = %11
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !9034
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %19, i64 0, i32 0, !dbg !9035
  %21 = load i32, i32* %20, align 8, !dbg !9035, !tbaa !3221
  %22 = icmp eq i32 %21, 0, !dbg !9036
  br i1 %22, label %28, label %23, !dbg !9037

; <label>:23:                                     ; preds = %18
  call void @llvm.dbg.value(metadata i32* %3, metadata !9010, metadata !DIExpression()), !dbg !9017
  %24 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %19, i32* nonnull %3) #9, !dbg !9038
  %25 = trunc i64 %24 to i32, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %25, metadata !9009, metadata !DIExpression()), !dbg !9015
  %26 = load i32, i32* %3, align 4, !dbg !9040, !tbaa !2904
  %27 = icmp eq i32 %26, 0, !dbg !9042
  br label %28, !dbg !9042

; <label>:28:                                     ; preds = %18, %2, %23
  %29 = phi i1 [ %27, %23 ], [ true, %18 ], [ true, %2 ]
  %30 = phi i32 [ %25, %23 ], [ 0, %18 ], [ 0, %2 ]
  %31 = phi i32 [ %15, %23 ], [ %15, %18 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %31, metadata !9008, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %30, metadata !9009, metadata !DIExpression()), !dbg !9015
  %32 = icmp ne i8* %6, null, !dbg !9043
  %33 = and i1 %32, %29, !dbg !9044
  br i1 %33, label %34, label %40, !dbg !9044

; <label>:34:                                     ; preds = %28
  %35 = call i64 @strlen(i8* nonnull %6) #10, !dbg !9045
  %36 = trunc i64 %35 to i32, !dbg !9046
  %37 = call i32 @find_decl(i8* nonnull %6, i32 %36, i32 %31, i32 %30, i32 1024) #9, !dbg !9047
  %38 = icmp eq i32 %37, 0, !dbg !9048
  %39 = zext i1 %38 to i64, !dbg !9047
  store i64 %39, i64* %5, align 8, !dbg !9049, !tbaa !2918
  br label %40, !dbg !9050

; <label>:40:                                     ; preds = %11, %28, %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !9051
  ret void, !dbg !9051
}

; Function Attrs: nounwind uwtable
define internal void @f_searchpair(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9052 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9055, metadata !DIExpression()), !dbg !9057
  %3 = tail call fastcc i32 @searchpair_cmn(%struct.typval_T* %0, %struct.pos_T* null), !dbg !9058
  %4 = sext i32 %3 to i64, !dbg !9058
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9059
  store i64 %4, i64* %5, align 8, !dbg !9060, !tbaa !2918
  ret void, !dbg !9061
}

; Function Attrs: nounwind uwtable
define internal void @f_searchpairpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !9062 {
  %3 = alloca %struct.pos_T, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9064, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9065, metadata !DIExpression()), !dbg !9070
  %4 = bitcast %struct.pos_T* %3 to i8*, !dbg !9071
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9, !dbg !9071
  call void @llvm.dbg.value(metadata i32 0, metadata !9067, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 0, metadata !9068, metadata !DIExpression()), !dbg !9073
  %5 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !9074
  %6 = icmp eq i32 %5, 0, !dbg !9076
  br i1 %6, label %27, label %7, !dbg !9077

; <label>:7:                                      ; preds = %2
  call void @llvm.dbg.value(metadata %struct.pos_T* %3, metadata !9066, metadata !DIExpression()), !dbg !9078
  %8 = call fastcc i32 @searchpair_cmn(%struct.typval_T* %0, %struct.pos_T* nonnull %3), !dbg !9079
  %9 = icmp sgt i32 %8, 0, !dbg !9081
  br i1 %9, label %10, label %18, !dbg !9082

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %3, i64 0, i32 0, !dbg !9083
  %12 = load i64, i64* %11, align 8, !dbg !9083, !tbaa !4160
  %13 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %3, i64 0, i32 1, !dbg !9085
  %14 = load i32, i32* %13, align 8, !dbg !9085, !tbaa !4166
  call void @llvm.dbg.value(metadata i32 %14, metadata !9068, metadata !DIExpression()), !dbg !9073
  %15 = shl i64 %12, 32, !dbg !9086
  %16 = ashr exact i64 %15, 32, !dbg !9086
  %17 = sext i32 %14 to i64, !dbg !9086
  br label %18, !dbg !9086

; <label>:18:                                     ; preds = %10, %7
  %19 = phi i64 [ %16, %10 ], [ 0, %7 ]
  %20 = phi i64 [ %17, %10 ], [ 0, %7 ]
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9087
  %22 = bitcast %union.anon* %21 to %struct.listvar_S**, !dbg !9088
  %23 = load %struct.listvar_S*, %struct.listvar_S** %22, align 8, !dbg !9088, !tbaa !2918
  %24 = call i32 @list_append_number(%struct.listvar_S* %23, i64 %19) #9, !dbg !9089
  %25 = load %struct.listvar_S*, %struct.listvar_S** %22, align 8, !dbg !9090, !tbaa !2918
  %26 = call i32 @list_append_number(%struct.listvar_S* %25, i64 %20) #9, !dbg !9091
  br label %27, !dbg !9092

; <label>:27:                                     ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9, !dbg !9092
  ret void, !dbg !9092
}

; Function Attrs: nounwind uwtable
define internal void @f_searchpos(%struct.typval_T*, %struct.typval_T*) #0 !dbg !9093 {
  %3 = alloca %struct.pos_T, align 8
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9095, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9096, metadata !DIExpression()), !dbg !9103
  %5 = bitcast %struct.pos_T* %3 to i8*, !dbg !9104
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9, !dbg !9104
  call void @llvm.dbg.value(metadata i32 0, metadata !9098, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.value(metadata i32 0, metadata !9099, metadata !DIExpression()), !dbg !9106
  %6 = bitcast i32* %4 to i8*, !dbg !9107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9, !dbg !9107
  call void @llvm.dbg.value(metadata i32 0, metadata !9101, metadata !DIExpression()), !dbg !9108
  store i32 0, i32* %4, align 4, !dbg !9108, !tbaa !2904
  %7 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !9109
  %8 = icmp eq i32 %7, 0, !dbg !9111
  br i1 %8, label %36, label %9, !dbg !9112

; <label>:9:                                      ; preds = %2
  call void @llvm.dbg.value(metadata %struct.pos_T* %3, metadata !9097, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32* %4, metadata !9101, metadata !DIExpression()), !dbg !9108
  %10 = call fastcc i32 @search_cmn(%struct.typval_T* %0, %struct.pos_T* nonnull %3, i32* nonnull %4), !dbg !9114
  call void @llvm.dbg.value(metadata i32 %10, metadata !9100, metadata !DIExpression()), !dbg !9115
  %11 = icmp sgt i32 %10, 0, !dbg !9116
  br i1 %11, label %12, label %20, !dbg !9118

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %3, i64 0, i32 0, !dbg !9119
  %14 = load i64, i64* %13, align 8, !dbg !9119, !tbaa !4160
  %15 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %3, i64 0, i32 1, !dbg !9121
  %16 = load i32, i32* %15, align 8, !dbg !9121, !tbaa !4166
  call void @llvm.dbg.value(metadata i32 %16, metadata !9099, metadata !DIExpression()), !dbg !9106
  %17 = shl i64 %14, 32, !dbg !9122
  %18 = ashr exact i64 %17, 32, !dbg !9122
  %19 = sext i32 %16 to i64, !dbg !9122
  br label %20, !dbg !9122

; <label>:20:                                     ; preds = %12, %9
  %21 = phi i64 [ %19, %12 ], [ 0, %9 ]
  %22 = phi i64 [ %18, %12 ], [ 0, %9 ]
  %23 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9123
  %24 = bitcast %union.anon* %23 to %struct.listvar_S**, !dbg !9124
  %25 = load %struct.listvar_S*, %struct.listvar_S** %24, align 8, !dbg !9124, !tbaa !2918
  %26 = call i32 @list_append_number(%struct.listvar_S* %25, i64 %22) #9, !dbg !9125
  %27 = load %struct.listvar_S*, %struct.listvar_S** %24, align 8, !dbg !9126, !tbaa !2918
  %28 = call i32 @list_append_number(%struct.listvar_S* %27, i64 %21) #9, !dbg !9127
  %29 = load i32, i32* %4, align 4, !dbg !9128, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %29, metadata !9101, metadata !DIExpression()), !dbg !9108
  %30 = and i32 %29, 32, !dbg !9130
  %31 = icmp eq i32 %30, 0, !dbg !9130
  br i1 %31, label %36, label %32, !dbg !9131

; <label>:32:                                     ; preds = %20
  %33 = load %struct.listvar_S*, %struct.listvar_S** %24, align 8, !dbg !9132, !tbaa !2918
  %34 = sext i32 %10 to i64, !dbg !9133
  %35 = call i32 @list_append_number(%struct.listvar_S* %33, i64 %34) #9, !dbg !9134
  br label %36, !dbg !9134

; <label>:36:                                     ; preds = %32, %20, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9, !dbg !9135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9, !dbg !9135
  ret void, !dbg !9135
}

declare void @f_server2client(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_serverlist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_setbufline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_setbufvar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_setcellwidths(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_setcharpos(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9138, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9139, metadata !DIExpression()), !dbg !9141
  tail call fastcc void @set_position(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !9142
  ret void, !dbg !9143
}

; Function Attrs: nounwind uwtable
define internal void @f_setcharsearch(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture readnone) #0 !dbg !9144 {
  %3 = alloca [6 x i32], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9146, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9147, metadata !DIExpression()), !dbg !9163
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !9164
  %5 = load i32, i32* %4, align 8, !dbg !9164, !tbaa !3221
  %6 = icmp eq i32 %5, 12, !dbg !9166
  br i1 %6, label %10, label %7, !dbg !9167

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_dictreq, i64 0, i64 0), i32 5) #9, !dbg !9168
  %9 = tail call i32 @emsg(i8* %8) #9, !dbg !9170
  br label %56, !dbg !9171

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !9172
  %12 = bitcast %union.anon* %11 to %struct.dictvar_S**, !dbg !9173
  %13 = load %struct.dictvar_S*, %struct.dictvar_S** %12, align 8, !dbg !9173, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %13, metadata !9148, metadata !DIExpression()), !dbg !9174
  %14 = icmp eq %struct.dictvar_S* %13, null, !dbg !9175
  br i1 %14, label %56, label %15, !dbg !9176

; <label>:15:                                     ; preds = %10
  %16 = tail call i8* @dict_get_string(%struct.dictvar_S* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.734, i64 0, i64 0), i32 0) #9, !dbg !9177
  call void @llvm.dbg.value(metadata i8* %16, metadata !9150, metadata !DIExpression()), !dbg !9178
  %17 = icmp eq i8* %16, null, !dbg !9179
  br i1 %17, label %39, label %18, !dbg !9180

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* @enc_utf8, align 4, !dbg !9181, !tbaa !2904
  %20 = icmp eq i32 %19, 0, !dbg !9181
  br i1 %20, label %26, label %21, !dbg !9182

; <label>:21:                                     ; preds = %18
  %22 = bitcast [6 x i32]* %3 to i8*, !dbg !9183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9, !dbg !9183
  call void @llvm.dbg.declare(metadata [6 x i32]* %3, metadata !9151, metadata !DIExpression()), !dbg !9184
  %23 = getelementptr inbounds [6 x i32], [6 x i32]* %3, i64 0, i64 0, !dbg !9185
  %24 = call i32 @utfc_ptr2char(i8* nonnull %16, i32* nonnull %23) #9, !dbg !9186
  call void @llvm.dbg.value(metadata i32 %24, metadata !9161, metadata !DIExpression()), !dbg !9187
  %25 = call i32 @utfc_ptr2len(i8* nonnull %16) #9, !dbg !9188
  call void @set_last_csearch(i32 %24, i8* nonnull %16, i32 %25) #9, !dbg !9189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9, !dbg !9190
  br label %39, !dbg !9191

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @has_mbyte, align 4, !dbg !9192, !tbaa !2904
  %28 = icmp eq i32 %27, 0, !dbg !9192
  br i1 %28, label %32, label %29, !dbg !9192

; <label>:29:                                     ; preds = %26
  %30 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !9192, !tbaa !2783
  %31 = tail call i32 %30(i8* nonnull %16) #9, !dbg !9192
  br label %35, !dbg !9192

; <label>:32:                                     ; preds = %26
  %33 = load i8, i8* %16, align 1, !dbg !9192, !tbaa !2918
  %34 = zext i8 %33 to i32, !dbg !9192
  br label %35, !dbg !9192

; <label>:35:                                     ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ], !dbg !9192
  %37 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !9193, !tbaa !2783
  %38 = tail call i32 %37(i8* nonnull %16) #9, !dbg !9193
  tail call void @set_last_csearch(i32 %36, i8* nonnull %16, i32 %38) #9, !dbg !9194
  br label %39

; <label>:39:                                     ; preds = %15, %21, %35
  %40 = call %struct.dictitem_S* @dict_find(%struct.dictvar_S* nonnull %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.735, i64 0, i64 0), i32 -1) #9, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %40, metadata !9149, metadata !DIExpression()), !dbg !9196
  %41 = icmp eq %struct.dictitem_S* %40, null, !dbg !9197
  br i1 %41, label %48, label %42, !dbg !9199

; <label>:42:                                     ; preds = %39
  %43 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %40, i64 0, i32 0, !dbg !9200
  %44 = call i64 @tv_get_number(%struct.typval_T* nonnull %43) #9, !dbg !9201
  %45 = trunc i64 %44 to i32, !dbg !9202
  %46 = icmp eq i32 %45, 0, !dbg !9202
  %47 = select i1 %46, i32 -1, i32 1, !dbg !9202
  call void @set_csearch_direction(i32 %47) #9, !dbg !9203
  br label %48, !dbg !9203

; <label>:48:                                     ; preds = %39, %42
  %49 = call %struct.dictitem_S* @dict_find(%struct.dictvar_S* nonnull %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.736, i64 0, i64 0), i32 -1) #9, !dbg !9204
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %49, metadata !9149, metadata !DIExpression()), !dbg !9196
  %50 = icmp eq %struct.dictitem_S* %49, null, !dbg !9205
  br i1 %50, label %56, label %51, !dbg !9207

; <label>:51:                                     ; preds = %48
  %52 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %49, i64 0, i32 0, !dbg !9208
  %53 = call i64 @tv_get_number(%struct.typval_T* nonnull %52) #9, !dbg !9209
  %54 = icmp ne i64 %53, 0, !dbg !9210
  %55 = zext i1 %54 to i32, !dbg !9211
  call void @set_csearch_until(i32 %55) #9, !dbg !9212
  br label %56, !dbg !9212

; <label>:56:                                     ; preds = %51, %10, %48, %7
  ret void, !dbg !9213
}

declare void @f_setcmdpos(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_setcursorcharpos(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9214 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9217, metadata !DIExpression()), !dbg !9219
  tail call fastcc void @set_cursorpos(%struct.typval_T* %0, %struct.typval_T* %1, i32 1), !dbg !9220
  ret void, !dbg !9221
}

; Function Attrs: nounwind uwtable
define internal void @f_setenv(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !9222 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9224, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9225, metadata !DIExpression()), !dbg !9230
  %5 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !9231
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %5) #9, !dbg !9231
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !9226, metadata !DIExpression()), !dbg !9232
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !9233
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !9233
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !9227, metadata !DIExpression()), !dbg !9234
  %7 = call i8* @tv_get_string_buf(%struct.typval_T* %0, i8* nonnull %5) #9, !dbg !9235
  call void @llvm.dbg.value(metadata i8* %7, metadata !9228, metadata !DIExpression()), !dbg !9236
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !9237
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %8, i64 0, i32 0, !dbg !9239
  %10 = load i32, i32* %9, align 8, !dbg !9239, !tbaa !3221
  %11 = icmp eq i32 %10, 4, !dbg !9240
  br i1 %11, label %12, label %17, !dbg !9241

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !9242
  %14 = load i64, i64* %13, align 8, !dbg !9242, !tbaa !2918
  %15 = icmp eq i64 %14, 3, !dbg !9243
  br i1 %15, label %16, label %17, !dbg !9244

; <label>:16:                                     ; preds = %12
  call void @vim_unsetenv(i8* %7) #9, !dbg !9245
  br label %19, !dbg !9245

; <label>:17:                                     ; preds = %12, %2
  %18 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %8, i8* nonnull %6) #9, !dbg !9246
  call void @vim_setenv(i8* %7, i8* %18) #9, !dbg !9247
  br label %19

; <label>:19:                                     ; preds = %17, %16
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !9248
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %5) #9, !dbg !9248
  ret void, !dbg !9248
}

; Function Attrs: nounwind uwtable
define internal void @f_setfperm(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9249 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9251, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9252, metadata !DIExpression()), !dbg !9260
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !9261
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !9261
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !9254, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 0, metadata !9258, metadata !DIExpression()), !dbg !9263
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9264
  store i64 0, i64* %5, align 8, !dbg !9265, !tbaa !2918
  %6 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !9266
  call void @llvm.dbg.value(metadata i8* %6, metadata !9253, metadata !DIExpression()), !dbg !9267
  %7 = icmp eq i8* %6, null, !dbg !9268
  br i1 %7, label %67, label %8, !dbg !9270

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !9271
  %10 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %9, i8* nonnull %4) #9, !dbg !9272
  call void @llvm.dbg.value(metadata i8* %10, metadata !9255, metadata !DIExpression()), !dbg !9273
  %11 = icmp eq i8* %10, null, !dbg !9274
  br i1 %11, label %67, label %12, !dbg !9276

; <label>:12:                                     ; preds = %8
  %13 = call i64 @strlen(i8* nonnull %10) #10, !dbg !9277
  %14 = icmp eq i64 %13, 9, !dbg !9279
  br i1 %14, label %18, label %15, !dbg !9280

; <label>:15:                                     ; preds = %12
  %16 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !9281
  %17 = call i32 (i8*, ...) @semsg(i8* %16, i8* nonnull %10) #9, !dbg !9283
  br label %67, !dbg !9284

; <label>:18:                                     ; preds = %12
  call void @llvm.dbg.value(metadata i32 1, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i32 8, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 0, metadata !9258, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i64 8, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 1, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i32 0, metadata !9258, metadata !DIExpression()), !dbg !9263
  %19 = getelementptr inbounds i8, i8* %10, i64 8, !dbg !9287
  %20 = load i8, i8* %19, align 1, !dbg !9287, !tbaa !2918
  %21 = icmp ne i8 %20, 45, !dbg !9292
  %22 = zext i1 %21 to i64, !dbg !9293
  call void @llvm.dbg.value(metadata i32 2, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 7, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 2, metadata !9257, metadata !DIExpression()), !dbg !9285
  %23 = getelementptr inbounds i8, i8* %10, i64 7, !dbg !9287
  %24 = load i8, i8* %23, align 1, !dbg !9287, !tbaa !2918
  %25 = icmp eq i8 %24, 45, !dbg !9292
  %26 = select i1 %25, i64 0, i64 2, !dbg !9293
  %27 = or i64 %26, %22, !dbg !9293
  call void @llvm.dbg.value(metadata i32 4, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 6, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 4, metadata !9257, metadata !DIExpression()), !dbg !9285
  %28 = getelementptr inbounds i8, i8* %10, i64 6, !dbg !9287
  %29 = load i8, i8* %28, align 1, !dbg !9287, !tbaa !2918
  %30 = icmp eq i8 %29, 45, !dbg !9292
  %31 = select i1 %30, i64 0, i64 4, !dbg !9293
  %32 = or i64 %31, %27, !dbg !9293
  call void @llvm.dbg.value(metadata i32 8, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 5, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 8, metadata !9257, metadata !DIExpression()), !dbg !9285
  %33 = getelementptr inbounds i8, i8* %10, i64 5, !dbg !9287
  %34 = load i8, i8* %33, align 1, !dbg !9287, !tbaa !2918
  %35 = icmp eq i8 %34, 45, !dbg !9292
  %36 = select i1 %35, i64 0, i64 8, !dbg !9293
  %37 = or i64 %36, %32, !dbg !9293
  call void @llvm.dbg.value(metadata i32 16, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 4, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 16, metadata !9257, metadata !DIExpression()), !dbg !9285
  %38 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !9287
  %39 = load i8, i8* %38, align 1, !dbg !9287, !tbaa !2918
  %40 = icmp eq i8 %39, 45, !dbg !9292
  %41 = select i1 %40, i64 0, i64 16, !dbg !9293
  %42 = or i64 %41, %37, !dbg !9293
  call void @llvm.dbg.value(metadata i32 32, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 3, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 32, metadata !9257, metadata !DIExpression()), !dbg !9285
  %43 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !9287
  %44 = load i8, i8* %43, align 1, !dbg !9287, !tbaa !2918
  %45 = icmp eq i8 %44, 45, !dbg !9292
  %46 = select i1 %45, i64 0, i64 32, !dbg !9293
  %47 = or i64 %46, %42, !dbg !9293
  call void @llvm.dbg.value(metadata i32 64, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 2, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 64, metadata !9257, metadata !DIExpression()), !dbg !9285
  %48 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !9287
  %49 = load i8, i8* %48, align 1, !dbg !9287, !tbaa !2918
  %50 = icmp eq i8 %49, 45, !dbg !9292
  %51 = select i1 %50, i64 0, i64 64, !dbg !9293
  %52 = or i64 %51, %47, !dbg !9293
  call void @llvm.dbg.value(metadata i32 128, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 1, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 128, metadata !9257, metadata !DIExpression()), !dbg !9285
  %53 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !9287
  %54 = load i8, i8* %53, align 1, !dbg !9287, !tbaa !2918
  %55 = icmp eq i8 %54, 45, !dbg !9292
  %56 = select i1 %55, i64 0, i64 128, !dbg !9293
  %57 = or i64 %56, %52, !dbg !9293
  call void @llvm.dbg.value(metadata i32 256, metadata !9257, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i64 0, metadata !9256, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 256, metadata !9257, metadata !DIExpression()), !dbg !9285
  %58 = load i8, i8* %10, align 1, !dbg !9287, !tbaa !2918
  %59 = icmp eq i8 %58, 45, !dbg !9292
  %60 = select i1 %59, i64 0, i64 256, !dbg !9293
  %61 = or i64 %60, %57, !dbg !9293
  call void @llvm.dbg.value(metadata i32 512, metadata !9257, metadata !DIExpression()), !dbg !9285
  %62 = shl i64 %61, 32, !dbg !9294
  %63 = ashr exact i64 %62, 32, !dbg !9294
  %64 = call i32 @mch_setperm(i8* nonnull %6, i64 %63) #9, !dbg !9295
  %65 = icmp eq i32 %64, 1, !dbg !9296
  %66 = zext i1 %65 to i64, !dbg !9295
  store i64 %66, i64* %5, align 8, !dbg !9297, !tbaa !2918
  br label %67, !dbg !9298

; <label>:67:                                     ; preds = %8, %2, %18, %15
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !9298
  ret void, !dbg !9298
}

declare void @f_setline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_setloclist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_setmatches(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_setpos(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9299 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9301, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9302, metadata !DIExpression()), !dbg !9304
  tail call fastcc void @set_position(%struct.typval_T* %0, %struct.typval_T* %1, i32 0), !dbg !9305
  ret void, !dbg !9306
}

declare void @f_setqflist(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_setreg(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9307 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [2 x i8*], align 16
  %6 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9309, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9310, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata %struct.typval_T* null, metadata !9318, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.value(metadata i64 -1, metadata !9317, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i8 -1, metadata !9316, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i32 0, metadata !9315, metadata !DIExpression()), !dbg !9347
  %7 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !9348
  call void @llvm.dbg.value(metadata i8* %7, metadata !9312, metadata !DIExpression()), !dbg !9349
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9350
  store i64 1, i64* %8, align 8, !dbg !9351, !tbaa !2918
  %9 = icmp eq i8* %7, null, !dbg !9352
  br i1 %9, label %258, label %10, !dbg !9354

; <label>:10:                                     ; preds = %2
  %11 = tail call i32 @in_vim9script() #9, !dbg !9355
  %12 = icmp eq i32 %11, 0, !dbg !9355
  br i1 %12, label %19, label %13, !dbg !9357

; <label>:13:                                     ; preds = %10
  %14 = tail call i64 @strlen(i8* nonnull %7) #10, !dbg !9358
  %15 = icmp ugt i64 %14, 1, !dbg !9359
  br i1 %15, label %16, label %19, !dbg !9360

; <label>:16:                                     ; preds = %13
  %17 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_register_name_must_be_one_char_str, i64 0, i64 0), i32 5) #9, !dbg !9361
  %18 = tail call i32 (i8*, ...) @semsg(i8* %17, i8* nonnull %7) #9, !dbg !9363
  br label %258, !dbg !9364

; <label>:19:                                     ; preds = %10, %13
  %20 = load i8, i8* %7, align 1, !dbg !9365, !tbaa !2918
  %21 = zext i8 %20 to i32, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %21, metadata !9311, metadata !DIExpression()), !dbg !9366
  %22 = or i8 %20, 64, !dbg !9367
  %23 = icmp eq i8 %22, 64, !dbg !9367
  %24 = select i1 %23, i32 34, i32 %21, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %24, metadata !9311, metadata !DIExpression()), !dbg !9366
  %25 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !9369
  %26 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %25, i64 0, i32 0, !dbg !9370
  %27 = load i32, i32* %26, align 8, !dbg !9370, !tbaa !3221
  %28 = icmp eq i32 %27, 12, !dbg !9371
  br i1 %28, label %29, label %86, !dbg !9372

; <label>:29:                                     ; preds = %19
  %30 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !9373
  %31 = bitcast %union.anon* %30 to %struct.dictvar_S**, !dbg !9374
  %32 = load %struct.dictvar_S*, %struct.dictvar_S** %31, align 8, !dbg !9374, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %32, metadata !9320, metadata !DIExpression()), !dbg !9375
  %33 = icmp eq %struct.dictvar_S* %32, null, !dbg !9376
  br i1 %33, label %38, label %34, !dbg !9377

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %32, i64 0, i32 4, i32 1, !dbg !9378
  %36 = load i64, i64* %35, align 8, !dbg !9378, !tbaa !5234
  %37 = icmp eq i64 %36, 0, !dbg !9379
  br i1 %37, label %38, label %41, !dbg !9380

; <label>:38:                                     ; preds = %34, %29
  %39 = bitcast [2 x i8*]* %5 to i8*, !dbg !9381
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9, !dbg !9381
  call void @llvm.dbg.declare(metadata [2 x i8*]* %5, metadata !9324, metadata !DIExpression()), !dbg !9382
  call void @llvm.memset.p0i8.i64(i8* nonnull %39, i8 0, i64 16, i32 16, i1 false), !dbg !9382
  %40 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 0, !dbg !9383
  call void @write_reg_contents_lst(i32 %24, i8** nonnull %40, i32 0, i32 0, i32 255, i64 -1) #9, !dbg !9384
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9, !dbg !9385
  br label %258

; <label>:41:                                     ; preds = %34
  %42 = tail call %struct.dictitem_S* @dict_find(%struct.dictvar_S* nonnull %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.739, i64 0, i64 0), i32 -1) #9, !dbg !9386
  call void @llvm.dbg.value(metadata %struct.dictitem_S* %42, metadata !9323, metadata !DIExpression()), !dbg !9387
  %43 = getelementptr inbounds %struct.dictitem_S, %struct.dictitem_S* %42, i64 0, i32 0, !dbg !9388
  call void @llvm.dbg.value(metadata %struct.typval_T* %43, metadata !9318, metadata !DIExpression()), !dbg !9344
  %44 = tail call i8* @dict_get_string(%struct.dictvar_S* nonnull %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.741, i64 0, i64 0), i32 0) #9, !dbg !9390
  call void @llvm.dbg.value(metadata i8* %44, metadata !9313, metadata !DIExpression()), !dbg !9391
  %45 = icmp eq i8* %44, null, !dbg !9392
  br i1 %45, label %72, label %46, !dbg !9393

; <label>:46:                                     ; preds = %41
  call void @llvm.dbg.value(metadata i8** undef, metadata !9313, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata i8** undef, metadata !9394, metadata !DIExpression()) #9, !dbg !9403
  %47 = bitcast i8** %4 to i8*, !dbg !9405
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9, !dbg !9405
  call void @llvm.dbg.value(metadata i8* %44, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  store i8* %44, i8** %4, align 8, !dbg !9406, !tbaa !2783
  %48 = load i8, i8* %44, align 1, !dbg !9407, !tbaa !2918
  switch i8 %48, label %49 [
    i8 118, label %62
    i8 99, label %62
    i8 86, label %50
    i8 108, label %50
    i8 98, label %51
    i8 22, label %51
  ], !dbg !9408

; <label>:49:                                     ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9, !dbg !9409
  call void @llvm.dbg.value(metadata i32 1, metadata !9328, metadata !DIExpression()), !dbg !9410
  br label %69, !dbg !9411

; <label>:50:                                     ; preds = %46, %46
  br label %62, !dbg !9413

; <label>:51:                                     ; preds = %46, %46
  call void @llvm.dbg.value(metadata i8* %44, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  %52 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !9415
  %53 = load i8, i8* %52, align 1, !dbg !9415, !tbaa !2918
  %54 = zext i8 %53 to i32, !dbg !9415
  %55 = add nsw i32 %54, -48, !dbg !9415
  %56 = icmp ult i32 %55, 10, !dbg !9415
  br i1 %56, label %57, label %62, !dbg !9417

; <label>:57:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i8* %52, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  store i8* %52, i8** %4, align 8, !dbg !9418, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %4, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  %58 = call i64 @getdigits(i8** nonnull %4) #9, !dbg !9420
  %59 = add nsw i64 %58, -1, !dbg !9421
  %60 = load i8*, i8** %4, align 8, !dbg !9422, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %60, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  %61 = getelementptr inbounds i8, i8* %60, i64 -1, !dbg !9422
  call void @llvm.dbg.value(metadata i8* %61, metadata !9402, metadata !DIExpression()) #9, !dbg !9406
  store i8* %61, i8** %4, align 8, !dbg !9422, !tbaa !2783
  br label %62, !dbg !9423

; <label>:62:                                     ; preds = %46, %46, %57, %51, %50
  %63 = phi i8 [ 2, %57 ], [ 2, %51 ], [ 1, %50 ], [ 0, %46 ], [ 0, %46 ]
  %64 = phi i64 [ %59, %57 ], [ -1, %51 ], [ -1, %50 ], [ -1, %46 ], [ -1, %46 ]
  %65 = phi i8* [ %61, %57 ], [ %44, %51 ], [ %44, %50 ], [ %44, %46 ], [ %44, %46 ]
  call void @llvm.dbg.value(metadata i8** %4, metadata !9402, metadata !DIExpression(DW_OP_deref)) #9, !dbg !9406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9, !dbg !9409
  call void @llvm.dbg.value(metadata i32 1, metadata !9328, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %65, metadata !9313, metadata !DIExpression()), !dbg !9391
  %66 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !9424
  call void @llvm.dbg.value(metadata i8* %66, metadata !9313, metadata !DIExpression()), !dbg !9391
  %67 = load i8, i8* %66, align 1, !dbg !9425, !tbaa !2918
  %68 = icmp eq i8 %67, 0, !dbg !9426
  br i1 %68, label %72, label %69, !dbg !9427

; <label>:69:                                     ; preds = %62, %49
  %70 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invargval, i64 0, i64 0), i32 5) #9, !dbg !9428
  %71 = call i32 (i8*, ...) @semsg(i8* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.757, i64 0, i64 0)) #9, !dbg !9430
  br label %258

; <label>:72:                                     ; preds = %62, %41
  %73 = phi i8 [ -1, %41 ], [ %63, %62 ]
  %74 = phi i64 [ -1, %41 ], [ %64, %62 ]
  %75 = icmp eq i32 %24, 34, !dbg !9431
  br i1 %75, label %76, label %82, !dbg !9433

; <label>:76:                                     ; preds = %72
  %77 = call i8* @dict_get_string(%struct.dictvar_S* nonnull %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.742, i64 0, i64 0), i32 0) #9, !dbg !9434
  call void @llvm.dbg.value(metadata i8* %77, metadata !9313, metadata !DIExpression()), !dbg !9391
  %78 = icmp eq i8* %77, null, !dbg !9436
  br i1 %78, label %86, label %79, !dbg !9438

; <label>:79:                                     ; preds = %76
  %80 = load i8, i8* %77, align 1, !dbg !9439, !tbaa !2918
  %81 = zext i8 %80 to i32, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %81, metadata !9319, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 %81, metadata !9311, metadata !DIExpression()), !dbg !9366
  br label %86, !dbg !9441

; <label>:82:                                     ; preds = %72
  %83 = call i64 @dict_get_bool(%struct.dictvar_S* nonnull %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.743, i64 0, i64 0), i32 -1) #9, !dbg !9442
  %84 = icmp sgt i64 %83, 0, !dbg !9444
  %85 = select i1 %84, i32 %24, i32 0, !dbg !9445
  br label %86, !dbg !9445

; <label>:86:                                     ; preds = %79, %82, %76, %19
  %87 = phi i8 [ -1, %19 ], [ %73, %76 ], [ %73, %82 ], [ %73, %79 ]
  %88 = phi i64 [ -1, %19 ], [ %74, %76 ], [ %74, %82 ], [ %74, %79 ]
  %89 = phi i32 [ 0, %19 ], [ 0, %76 ], [ %85, %82 ], [ %81, %79 ]
  %90 = phi %struct.typval_T* [ %25, %19 ], [ %43, %76 ], [ %43, %82 ], [ %43, %79 ]
  %91 = phi i32 [ %24, %19 ], [ 34, %76 ], [ %24, %82 ], [ %81, %79 ]
  call void @llvm.dbg.value(metadata i32 %91, metadata !9311, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata %struct.typval_T* %90, metadata !9318, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.value(metadata i32 %89, metadata !9319, metadata !DIExpression()), !dbg !9343
  %92 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !9446
  %93 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %92, i64 0, i32 0, !dbg !9448
  %94 = load i32, i32* %93, align 8, !dbg !9448, !tbaa !3221
  %95 = icmp eq i32 %94, 0, !dbg !9449
  br i1 %95, label %143, label %96, !dbg !9450

; <label>:96:                                     ; preds = %86
  call void @llvm.dbg.value(metadata i8 %87, metadata !9316, metadata !DIExpression()), !dbg !9346
  %97 = icmp eq i8 %87, -1, !dbg !9451
  br i1 %97, label %101, label %98, !dbg !9454

; <label>:98:                                     ; preds = %96
  %99 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_toomanyarg, i64 0, i64 0), i32 5) #9, !dbg !9455
  %100 = call i32 (i8*, ...) @semsg(i8* %99, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i64 0, i64 0)) #9, !dbg !9457
  br label %258, !dbg !9458

; <label>:101:                                    ; preds = %96
  %102 = call i8* @tv_get_string_chk(%struct.typval_T* nonnull %92) #9, !dbg !9459
  call void @llvm.dbg.value(metadata i8* %102, metadata !9313, metadata !DIExpression()), !dbg !9391
  %103 = icmp eq i8* %102, null, !dbg !9460
  br i1 %103, label %258, label %104, !dbg !9462

; <label>:104:                                    ; preds = %101
  %105 = bitcast i8** %3 to i8*
  br label %106, !dbg !9463

; <label>:106:                                    ; preds = %137, %104
  %107 = phi i8* [ %102, %104 ], [ %142, %137 ]
  %108 = phi i8 [ -1, %104 ], [ %139, %137 ]
  %109 = phi i64 [ %88, %104 ], [ %140, %137 ]
  %110 = phi i32 [ 0, %104 ], [ %141, %137 ]
  %111 = ptrtoint i8* %107 to i64
  call void @llvm.dbg.value(metadata i32 %110, metadata !9315, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %107, metadata !9313, metadata !DIExpression()), !dbg !9391
  %112 = load i8, i8* %107, align 1, !dbg !9464, !tbaa !2918
  switch i8 %112, label %113 [
    i8 0, label %143
    i8 97, label %137
    i8 65, label %137
  ], !dbg !9467

; <label>:113:                                    ; preds = %106
  call void @llvm.dbg.value(metadata i8** undef, metadata !9313, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata i8** undef, metadata !9394, metadata !DIExpression()) #9, !dbg !9468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #9, !dbg !9471
  call void @llvm.dbg.value(metadata i8* %107, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  store i8* %107, i8** %3, align 8, !dbg !9472, !tbaa !2783
  %114 = load i8, i8* %107, align 1, !dbg !9473, !tbaa !2918
  switch i8 %114, label %132 [
    i8 118, label %128
    i8 99, label %128
    i8 86, label %115
    i8 108, label %115
    i8 98, label %116
    i8 22, label %116
  ], !dbg !9474

; <label>:115:                                    ; preds = %113, %113
  br label %128, !dbg !9475

; <label>:116:                                    ; preds = %113, %113
  call void @llvm.dbg.value(metadata i8* %107, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  %117 = getelementptr inbounds i8, i8* %107, i64 1, !dbg !9476
  %118 = load i8, i8* %117, align 1, !dbg !9476, !tbaa !2918
  %119 = zext i8 %118 to i32, !dbg !9476
  %120 = add nsw i32 %119, -48, !dbg !9476
  %121 = icmp ult i32 %120, 10, !dbg !9476
  br i1 %121, label %122, label %128, !dbg !9477

; <label>:122:                                    ; preds = %116
  call void @llvm.dbg.value(metadata i8* %117, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  store i8* %117, i8** %3, align 8, !dbg !9478, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %3, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  %123 = call i64 @getdigits(i8** nonnull %3) #9, !dbg !9479
  %124 = add nsw i64 %123, -1, !dbg !9480
  %125 = load i8*, i8** %3, align 8, !dbg !9481, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %125, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  %126 = getelementptr inbounds i8, i8* %125, i64 -1, !dbg !9481
  call void @llvm.dbg.value(metadata i8* %126, metadata !9402, metadata !DIExpression()) #9, !dbg !9472
  store i8* %126, i8** %3, align 8, !dbg !9481, !tbaa !2783
  %127 = ptrtoint i8* %126 to i64, !dbg !9482
  br label %128, !dbg !9482

; <label>:128:                                    ; preds = %113, %113, %122, %116, %115
  %129 = phi i8 [ 2, %122 ], [ 2, %116 ], [ 1, %115 ], [ 0, %113 ], [ 0, %113 ]
  %130 = phi i64 [ %124, %122 ], [ %109, %116 ], [ %109, %115 ], [ %109, %113 ], [ %109, %113 ]
  %131 = phi i64 [ %127, %122 ], [ %111, %116 ], [ %111, %115 ], [ %111, %113 ], [ %111, %113 ], !dbg !9483
  call void @llvm.dbg.value(metadata i8** %3, metadata !9402, metadata !DIExpression(DW_OP_deref)) #9, !dbg !9472
  br label %132, !dbg !9484

; <label>:132:                                    ; preds = %113, %128
  %133 = phi i64 [ %111, %113 ], [ %131, %128 ]
  %134 = phi i8 [ %108, %113 ], [ %129, %128 ]
  %135 = phi i64 [ %109, %113 ], [ %130, %128 ]
  %136 = inttoptr i64 %133 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #9, !dbg !9485
  br label %137, !dbg !9486

; <label>:137:                                    ; preds = %106, %106, %132
  %138 = phi i8* [ %136, %132 ], [ %107, %106 ], [ %107, %106 ]
  %139 = phi i8 [ %134, %132 ], [ %108, %106 ], [ %108, %106 ]
  %140 = phi i64 [ %135, %132 ], [ %109, %106 ], [ %109, %106 ]
  %141 = phi i32 [ %110, %132 ], [ 1, %106 ], [ 1, %106 ]
  call void @llvm.dbg.value(metadata i32 %141, metadata !9315, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %138, metadata !9313, metadata !DIExpression()), !dbg !9391
  %142 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !9487
  call void @llvm.dbg.value(metadata i8* %142, metadata !9313, metadata !DIExpression()), !dbg !9391
  br label %106, !dbg !9488, !llvm.loop !9489

; <label>:143:                                    ; preds = %106, %86
  %144 = phi i8 [ %87, %86 ], [ %108, %106 ]
  %145 = phi i64 [ %88, %86 ], [ %109, %106 ]
  %146 = phi i32 [ 0, %86 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 %146, metadata !9315, metadata !DIExpression()), !dbg !9347
  %147 = icmp eq %struct.typval_T* %90, null, !dbg !9491
  br i1 %147, label %253, label %148, !dbg !9492

; <label>:148:                                    ; preds = %143
  %149 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %90, i64 0, i32 0, !dbg !9493
  %150 = load i32, i32* %149, align 8, !dbg !9493, !tbaa !3221
  %151 = icmp eq i32 %150, 11, !dbg !9494
  br i1 %151, label %152, label %248, !dbg !9495

; <label>:152:                                    ; preds = %148
  %153 = getelementptr inbounds [65 x i8], [65 x i8]* %6, i64 0, i64 0, !dbg !9496
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %153) #9, !dbg !9496
  call void @llvm.dbg.declare(metadata [65 x i8]* %6, metadata !9335, metadata !DIExpression()), !dbg !9497
  %154 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %90, i64 0, i32 2, !dbg !9498
  %155 = bitcast %union.anon* %154 to %struct.listvar_S**, !dbg !9499
  %156 = load %struct.listvar_S*, %struct.listvar_S** %155, align 8, !dbg !9499, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %156, metadata !9338, metadata !DIExpression()), !dbg !9500
  %157 = icmp eq %struct.listvar_S* %156, null, !dbg !9501
  br i1 %157, label %161, label %158, !dbg !9502

; <label>:158:                                    ; preds = %152
  %159 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 8, !dbg !9503
  %160 = load i32, i32* %159, align 4, !dbg !9503, !tbaa !3541
  br label %161, !dbg !9502

; <label>:161:                                    ; preds = %152, %158
  %162 = phi i32 [ %160, %158 ], [ 0, %152 ], !dbg !9502
  call void @llvm.dbg.value(metadata i32 %162, metadata !9340, metadata !DIExpression()), !dbg !9504
  %163 = shl i32 %162, 1, !dbg !9505
  %164 = add i32 %163, 2, !dbg !9505
  %165 = sext i32 %164 to i64, !dbg !9505
  %166 = shl nsw i64 %165, 3, !dbg !9505
  %167 = call i8* @alloc(i64 %166) #9, !dbg !9505
  %168 = bitcast i8* %167 to i8**, !dbg !9505
  call void @llvm.dbg.value(metadata i8** %168, metadata !9331, metadata !DIExpression()), !dbg !9506
  %169 = icmp eq i8* %167, null, !dbg !9507
  br i1 %169, label %247, label %170, !dbg !9509

; <label>:170:                                    ; preds = %161
  call void @llvm.dbg.value(metadata i8** %168, metadata !9336, metadata !DIExpression()), !dbg !9510
  %171 = sext i32 %162 to i64, !dbg !9511
  %172 = getelementptr inbounds i8*, i8** %168, i64 %171, !dbg !9511
  call void @llvm.dbg.value(metadata i8** %172, metadata !9334, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9512
  call void @llvm.dbg.value(metadata i8** %172, metadata !9337, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9513
  br i1 %157, label %232, label %173, !dbg !9514

; <label>:173:                                    ; preds = %170
  %174 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 0, !dbg !9515
  %175 = load %struct.listitem_S*, %struct.listitem_S** %174, align 8, !dbg !9515, !tbaa !3610
  %176 = icmp eq %struct.listitem_S* %175, @range_list_item, !dbg !9515
  br i1 %176, label %177, label %204, !dbg !9519

; <label>:177:                                    ; preds = %173
  call void @llvm.dbg.value(metadata %struct.listvar_S* %156, metadata !3612, metadata !DIExpression()) #9, !dbg !9520
  %178 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 2, !dbg !9522
  %179 = getelementptr inbounds %union.anon.0, %union.anon.0* %178, i64 0, i32 0, i32 0, !dbg !9523
  %180 = load i64, i64* %179, align 8, !dbg !9523, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %180, metadata !3617, metadata !DIExpression()) #9, !dbg !9524
  %181 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 2, i32 0, i32 1, !dbg !9525
  %182 = load i64, i64* %181, align 8, !dbg !9525, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %182, metadata !3618, metadata !DIExpression()) #9, !dbg !9526
  %183 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 2, i32 0, i32 2, !dbg !9527
  %184 = load i32, i32* %183, align 8, !dbg !9527, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %184, metadata !3619, metadata !DIExpression()) #9, !dbg !9528
  store %struct.listitem_S* null, %struct.listitem_S** %174, align 8, !dbg !9529, !tbaa !3610
  %185 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %156, i64 0, i32 8, !dbg !9530
  store i32 0, i32* %185, align 4, !dbg !9531, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %180, metadata !3620, metadata !DIExpression()) #9, !dbg !9532
  %186 = icmp sgt i32 %184, 0, !dbg !9533
  %187 = icmp sle i64 %180, %182, !dbg !9534
  %188 = icmp sge i64 %180, %182, !dbg !9535
  %189 = select i1 %186, i1 %187, i1 %188, !dbg !9536
  %190 = bitcast %union.anon.0* %178 to i8*, !dbg !9537
  call void @llvm.memset.p0i8.i64(i8* nonnull %190, i8 0, i64 16, i32 8, i1 false) #9, !dbg !9538
  br i1 %189, label %191, label %232, !dbg !9537

; <label>:191:                                    ; preds = %177
  %192 = sext i32 %184 to i64
  br label %197, !dbg !9537

; <label>:193:                                    ; preds = %197
  call void @llvm.dbg.value(metadata i64 %201, metadata !3620, metadata !DIExpression()) #9, !dbg !9532
  %194 = icmp sle i64 %201, %182, !dbg !9534
  %195 = icmp sge i64 %201, %182, !dbg !9535
  %196 = select i1 %186, i1 %194, i1 %195, !dbg !9536
  br i1 %196, label %197, label %202, !dbg !9537, !llvm.loop !3642

; <label>:197:                                    ; preds = %193, %191
  %198 = phi i64 [ %180, %191 ], [ %201, %193 ]
  call void @llvm.dbg.value(metadata i64 %198, metadata !3620, metadata !DIExpression()) #9, !dbg !9532
  %199 = call i32 @list_append_number(%struct.listvar_S* nonnull %156, i64 %198) #9, !dbg !9539
  %200 = icmp eq i32 %199, 0, !dbg !9540
  %201 = add nsw i64 %198, %192, !dbg !9541
  call void @llvm.dbg.value(metadata i64 %201, metadata !3620, metadata !DIExpression()) #9, !dbg !9532
  br i1 %200, label %202, label %193, !dbg !9542

; <label>:202:                                    ; preds = %193, %197
  %203 = load %struct.listitem_S*, %struct.listitem_S** %174, align 8, !dbg !9543, !tbaa !2783
  br label %204, !dbg !9543

; <label>:204:                                    ; preds = %202, %173
  %205 = phi %struct.listitem_S* [ %203, %202 ], [ %175, %173 ], !dbg !9543
  call void @llvm.dbg.value(metadata %struct.listitem_S** %174, metadata !9339, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  call void @llvm.dbg.value(metadata %struct.listitem_S* %205, metadata !9339, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8** %208, metadata !9337, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata i8** %168, metadata !9336, metadata !DIExpression()), !dbg !9510
  %206 = icmp eq %struct.listitem_S* %205, null, !dbg !9546
  br i1 %206, label %232, label %207, !dbg !9543

; <label>:207:                                    ; preds = %204
  %208 = getelementptr inbounds i8*, i8** %172, i64 2, !dbg !9545
  br label %209, !dbg !9543

; <label>:209:                                    ; preds = %207, %224
  %210 = phi i8** [ %208, %207 ], [ %230, %224 ]
  %211 = phi %struct.listitem_S* [ %205, %207 ], [ %229, %224 ]
  %212 = phi i64 [ 2, %207 ], [ %225, %224 ]
  %213 = phi i8** [ %168, %207 ], [ %227, %224 ]
  call void @llvm.dbg.value(metadata i8** %213, metadata !9336, metadata !DIExpression()), !dbg !9510
  %214 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %211, i64 0, i32 2, !dbg !9548
  %215 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %214, i8* nonnull %153) #9, !dbg !9550
  call void @llvm.dbg.value(metadata i8* %215, metadata !9314, metadata !DIExpression()), !dbg !9551
  %216 = icmp eq i8* %215, null, !dbg !9552
  br i1 %216, label %236, label %217, !dbg !9554

; <label>:217:                                    ; preds = %209
  %218 = icmp eq i8* %215, %153, !dbg !9555
  br i1 %218, label %219, label %224, !dbg !9557

; <label>:219:                                    ; preds = %217
  %220 = call i8* @vim_strsave(i8* nonnull %153) #9, !dbg !9558
  call void @llvm.dbg.value(metadata i8* %220, metadata !9314, metadata !DIExpression()), !dbg !9551
  %221 = icmp eq i8* %220, null, !dbg !9560
  br i1 %221, label %236, label %222, !dbg !9562

; <label>:222:                                    ; preds = %219
  %223 = add nsw i64 %212, 1, !dbg !9563
  store i8* %220, i8** %210, align 8, !dbg !9564, !tbaa !2783
  br label %224, !dbg !9565

; <label>:224:                                    ; preds = %222, %217
  %225 = phi i64 [ %223, %222 ], [ %212, %217 ]
  %226 = phi i8* [ %220, %222 ], [ %215, %217 ]
  call void @llvm.dbg.value(metadata i8* %226, metadata !9314, metadata !DIExpression()), !dbg !9551
  %227 = getelementptr inbounds i8*, i8** %213, i64 1, !dbg !9566
  store i8* %226, i8** %213, align 8, !dbg !9567, !tbaa !2783
  %228 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %211, i64 0, i32 0, !dbg !9546
  call void @llvm.dbg.value(metadata %struct.listitem_S** %228, metadata !9339, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  %229 = load %struct.listitem_S*, %struct.listitem_S** %228, align 8, !dbg !9543, !tbaa !2783
  %230 = getelementptr inbounds i8*, i8** %172, i64 %225, !dbg !9545
  call void @llvm.dbg.value(metadata %struct.listitem_S* %229, metadata !9339, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8** %230, metadata !9337, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata i8** %227, metadata !9336, metadata !DIExpression()), !dbg !9510
  %231 = icmp eq %struct.listitem_S* %229, null, !dbg !9546
  br i1 %231, label %232, label %209, !dbg !9543, !llvm.loop !9568

; <label>:232:                                    ; preds = %224, %177, %204, %170
  %233 = phi i8** [ %168, %170 ], [ %168, %204 ], [ %168, %177 ], [ %227, %224 ]
  %234 = phi i64 [ 2, %170 ], [ 2, %204 ], [ 2, %177 ], [ %225, %224 ]
  call void @llvm.dbg.value(metadata i8** %233, metadata !9336, metadata !DIExpression()), !dbg !9510
  store i8* null, i8** %233, align 8, !dbg !9570, !tbaa !2783
  call void @llvm.dbg.value(metadata i8 %144, metadata !9316, metadata !DIExpression()), !dbg !9346
  %235 = zext i8 %144 to i32, !dbg !9571
  call void @llvm.dbg.value(metadata i64 %145, metadata !9317, metadata !DIExpression()), !dbg !9345
  call void @write_reg_contents_lst(i32 %91, i8** %168, i32 -1, i32 %146, i32 %235, i64 %145) #9, !dbg !9572
  br label %236, !dbg !9572

; <label>:236:                                    ; preds = %219, %209, %232
  %237 = phi i64 [ %234, %232 ], [ %212, %209 ], [ %212, %219 ]
  %238 = icmp sgt i64 %237, 2, !dbg !9573
  br i1 %238, label %239, label %246, !dbg !9574

; <label>:239:                                    ; preds = %236
  br label %240, !dbg !9575

; <label>:240:                                    ; preds = %239, %240
  %241 = phi i64 [ %242, %240 ], [ %237, %239 ]
  %242 = add nsw i64 %241, -1, !dbg !9575
  %243 = getelementptr inbounds i8*, i8** %172, i64 %242, !dbg !9513
  call void @llvm.dbg.value(metadata i8** %243, metadata !9337, metadata !DIExpression()), !dbg !9513
  %244 = load i8*, i8** %243, align 8, !dbg !9576, !tbaa !2783
  call void @vim_free(i8* %244) #9, !dbg !9577
  %245 = icmp sgt i64 %241, 3, !dbg !9573
  br i1 %245, label %240, label %246, !dbg !9574, !llvm.loop !9578

; <label>:246:                                    ; preds = %240, %236
  call void @vim_free(i8* nonnull %167) #9, !dbg !9580
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %153) #9, !dbg !9581
  br label %253

; <label>:247:                                    ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %153) #9, !dbg !9581
  br label %258

; <label>:248:                                    ; preds = %148
  %249 = call i8* @tv_get_string_chk(%struct.typval_T* nonnull %90) #9, !dbg !9582
  call void @llvm.dbg.value(metadata i8* %249, metadata !9314, metadata !DIExpression()), !dbg !9551
  %250 = icmp eq i8* %249, null, !dbg !9585
  br i1 %250, label %258, label %251, !dbg !9587

; <label>:251:                                    ; preds = %248
  call void @llvm.dbg.value(metadata i8 %144, metadata !9316, metadata !DIExpression()), !dbg !9346
  %252 = zext i8 %144 to i32, !dbg !9588
  call void @llvm.dbg.value(metadata i64 %145, metadata !9317, metadata !DIExpression()), !dbg !9345
  call void @write_reg_contents_ex(i32 %91, i8* nonnull %249, i32 -1, i32 %146, i32 %252, i64 %145) #9, !dbg !9589
  br label %253, !dbg !9590

; <label>:253:                                    ; preds = %143, %246, %251
  %254 = icmp eq i32 %89, 0, !dbg !9591
  br i1 %254, label %257, label %255, !dbg !9593

; <label>:255:                                    ; preds = %253
  %256 = call i32 @get_yank_register(i32 %89, i32 1) #9, !dbg !9594
  br label %257, !dbg !9594

; <label>:257:                                    ; preds = %253, %255
  store i64 0, i64* %8, align 8, !dbg !9595, !tbaa !2918
  br label %258, !dbg !9596

; <label>:258:                                    ; preds = %38, %69, %248, %247, %101, %2, %257, %98, %16
  ret void, !dbg !9596
}

declare void @f_settabvar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_settabwinvar(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_settagstack(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !2653 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !2655, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !2656, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32 114, metadata !2659, metadata !DIExpression()), !dbg !9599
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9600
  store i64 -1, i64* %3, align 8, !dbg !9601, !tbaa !2918
  %4 = tail call %struct.window_S* @find_win_by_nr_or_id(%struct.typval_T* %0) #9, !dbg !9602
  call void @llvm.dbg.value(metadata %struct.window_S* %4, metadata !2657, metadata !DIExpression()), !dbg !9603
  %5 = icmp eq %struct.window_S* %4, null, !dbg !9604
  br i1 %5, label %44, label %6, !dbg !9606

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !9607
  %8 = load i32, i32* %7, align 8, !dbg !9607, !tbaa !3221
  %9 = icmp eq i32 %8, 12, !dbg !9609
  br i1 %9, label %13, label %10, !dbg !9610

; <label>:10:                                     ; preds = %6
  %11 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_dictreq, i64 0, i64 0), i32 5) #9, !dbg !9611
  %12 = tail call i32 @emsg(i8* %11) #9, !dbg !9613
  br label %44, !dbg !9614

; <label>:13:                                     ; preds = %6
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !9615
  %15 = bitcast %union.anon* %14 to %struct.dictvar_S**, !dbg !9616
  %16 = load %struct.dictvar_S*, %struct.dictvar_S** %15, align 8, !dbg !9616, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %16, metadata !2658, metadata !DIExpression()), !dbg !9617
  %17 = icmp eq %struct.dictvar_S* %16, null, !dbg !9618
  br i1 %17, label %44, label %18, !dbg !9620

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !9621
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %19, i64 0, i32 0, !dbg !9622
  %21 = load i32, i32* %20, align 8, !dbg !9622, !tbaa !3221
  switch i32 %21, label %36 [
    i32 0, label %39
    i32 7, label %22
  ], !dbg !9623

; <label>:22:                                     ; preds = %18
  %23 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %19) #9, !dbg !9624
  call void @llvm.dbg.value(metadata i8* %23, metadata !2660, metadata !DIExpression()), !dbg !9625
  %24 = icmp eq i8* %23, null, !dbg !9626
  br i1 %24, label %44, label %25, !dbg !9628

; <label>:25:                                     ; preds = %22
  %26 = load i8, i8* %23, align 1, !dbg !9629, !tbaa !2918
  switch i8 %26, label %31 [
    i8 114, label %27
    i8 97, label %27
    i8 116, label %27
  ], !dbg !9631

; <label>:27:                                     ; preds = %25, %25, %25
  %28 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !9632
  %29 = load i8, i8* %28, align 1, !dbg !9632, !tbaa !2918
  %30 = icmp eq i8 %29, 0, !dbg !9633
  br i1 %30, label %34, label %31, !dbg !9634

; <label>:31:                                     ; preds = %25, %27
  %32 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.758, i64 0, i64 0), i32 5) #9, !dbg !9635
  %33 = tail call i32 (i8*, ...) @semsg(i8* %32, i8* nonnull %23) #9, !dbg !9637
  br label %44, !dbg !9638

; <label>:34:                                     ; preds = %27
  %35 = zext i8 %26 to i32, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %35, metadata !2659, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 %35, metadata !2659, metadata !DIExpression()), !dbg !9599
  br label %39

; <label>:36:                                     ; preds = %18
  %37 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_stringreq, i64 0, i64 0), i32 5) #9, !dbg !9640
  %38 = tail call i32 @emsg(i8* %37) #9, !dbg !9642
  br label %44, !dbg !9643

; <label>:39:                                     ; preds = %34, %18
  %40 = phi i32 [ %35, %34 ], [ 114, %18 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !2659, metadata !DIExpression()), !dbg !9599
  %41 = tail call i32 @set_tagstack(%struct.window_S* nonnull %4, %struct.dictvar_S* nonnull %16, i32 %40) #9, !dbg !9644
  %42 = icmp eq i32 %41, 1, !dbg !9646
  br i1 %42, label %43, label %44, !dbg !9647

; <label>:43:                                     ; preds = %39
  store i64 0, i64* %3, align 8, !dbg !9648, !tbaa !2918
  br label %44, !dbg !9649

; <label>:44:                                     ; preds = %22, %31, %39, %43, %13, %2, %36, %10
  ret void, !dbg !9650
}

declare void @f_setwinvar(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_sha256(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9653, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9654, metadata !DIExpression()), !dbg !9657
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !9658
  call void @llvm.dbg.value(metadata i8* %3, metadata !9655, metadata !DIExpression()), !dbg !9659
  %4 = tail call i64 @strlen(i8* %3) #10, !dbg !9660
  %5 = trunc i64 %4 to i32, !dbg !9661
  %6 = tail call i8* @sha256_bytes(i8* %3, i32 %5, i8* null, i32 0) #9, !dbg !9662
  %7 = tail call i8* @vim_strsave(i8* %6) #9, !dbg !9663
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9664
  %9 = bitcast %union.anon* %8 to i8**, !dbg !9665
  store i8* %7, i8** %9, align 8, !dbg !9666, !tbaa !2918
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !9667
  store i32 7, i32* %10, align 8, !dbg !9668, !tbaa !3221
  ret void, !dbg !9669
}

; Function Attrs: nounwind uwtable
define internal void @f_shellescape(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9673, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3389, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9677
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !9679
  %4 = load i32, i32* %3, align 8, !dbg !9679, !tbaa !3221
  switch i32 %4, label %23 [
    i32 5, label %5
    i32 3, label %9
    i32 7, label %14
  ], !dbg !9680

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !9681
  %7 = load i64, i64* %6, align 8, !dbg !9681, !tbaa !2918
  %8 = icmp eq i64 %7, 0, !dbg !9682
  br i1 %8, label %13, label %23, !dbg !9683

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, i32 0, !dbg !9684
  %11 = load i64, i64* %10, align 8, !dbg !9684, !tbaa !2918
  %12 = icmp eq i64 %11, 1, !dbg !9685
  br i1 %12, label %23, label %13, !dbg !9686

; <label>:13:                                     ; preds = %9, %5
  br label %23, !dbg !9687

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !9688
  %16 = bitcast %union.anon* %15 to i8**, !dbg !9689
  %17 = load i8*, i8** %16, align 8, !dbg !9689, !tbaa !2918
  %18 = icmp eq i8* %17, null, !dbg !9690
  br i1 %18, label %23, label %19, !dbg !9691

; <label>:19:                                     ; preds = %14
  %20 = load i8, i8* %17, align 1, !dbg !9692, !tbaa !2918
  %21 = icmp ne i8 %20, 0, !dbg !9693
  %22 = zext i1 %21 to i32
  br label %23

; <label>:23:                                     ; preds = %2, %5, %9, %13, %14, %19
  %24 = phi i32 [ 1, %9 ], [ 1, %5 ], [ 0, %14 ], [ %22, %19 ], [ 0, %13 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !9674, metadata !DIExpression()), !dbg !9694
  %25 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !9695
  %26 = tail call i8* @vim_strsave_shellescape(i8* %25, i32 %24, i32 %24) #9, !dbg !9696
  %27 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9697
  %28 = bitcast %union.anon* %27 to i8**, !dbg !9698
  store i8* %26, i8** %28, align 8, !dbg !9699, !tbaa !2918
  %29 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !9700
  store i32 7, i32* %29, align 8, !dbg !9701, !tbaa !3221
  ret void, !dbg !9702
}

; Function Attrs: nounwind uwtable
define internal void @f_shiftwidth(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9703 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9705, metadata !DIExpression()), !dbg !9710
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9706, metadata !DIExpression()), !dbg !9711
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !9712
  store i64 0, i64* %3, align 8, !dbg !9713, !tbaa !2918
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !9714
  %5 = load i32, i32* %4, align 8, !dbg !9714, !tbaa !3221
  %6 = icmp eq i32 %5, 0, !dbg !9715
  br i1 %6, label %14, label %7, !dbg !9716

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %0, i32* null) #9, !dbg !9717
  call void @llvm.dbg.value(metadata i64 %8, metadata !9707, metadata !DIExpression()), !dbg !9718
  %9 = icmp slt i64 %8, 0, !dbg !9719
  br i1 %9, label %19, label %10, !dbg !9721

; <label>:10:                                     ; preds = %7
  %11 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9722, !tbaa !2783
  %12 = trunc i64 %8 to i32, !dbg !9723
  %13 = tail call i64 @get_sw_value_col(%struct.file_buffer* %11, i32 %12) #9, !dbg !9724
  br label %17, !dbg !9725

; <label>:14:                                     ; preds = %2
  %15 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9726, !tbaa !2783
  %16 = tail call i64 @get_sw_value(%struct.file_buffer* %15) #9, !dbg !9727
  br label %17, !dbg !9728

; <label>:17:                                     ; preds = %14, %10
  %18 = phi i64 [ %13, %10 ], [ %16, %14 ]
  store i64 %18, i64* %3, align 8, !tbaa !2918
  br label %19, !dbg !9728

; <label>:19:                                     ; preds = %17, %7
  ret void, !dbg !9728
}

declare void @f_sign_define(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_getdefined(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_getplaced(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_jump(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_place(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_placelist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_undefine(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_unplace(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sign_unplacelist(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_simplify(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_sin(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9731, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !9733, metadata !DIExpression()), !dbg !9736
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !9737
  store i32 6, i32* %3, align 8, !dbg !9738, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !9733, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !9739
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !9742
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !9743
  %5 = load i32, i32* %4, align 8, !dbg !9743, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !9744

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !9745
  %8 = bitcast i64* %7 to double*, !dbg !9745
  %9 = load double, double* %8, align 8, !dbg !9745, !tbaa !2918
  br label %14, !dbg !9746

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !9747
  %12 = load i64, i64* %11, align 8, !dbg !9747, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !9748
  br label %14, !dbg !9749

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !9733, metadata !DIExpression()), !dbg !9736
  %16 = tail call double @sin(double %15) #9, !dbg !9750
  br label %20, !dbg !9751

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !9752
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !9753
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !9754
}

; Function Attrs: nounwind uwtable
define internal void @f_sinh(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !9755 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9757, metadata !DIExpression()), !dbg !9760
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9758, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !9759, metadata !DIExpression()), !dbg !9762
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !9763
  store i32 6, i32* %3, align 8, !dbg !9764, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !9765
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !9768
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !9769
  %5 = load i32, i32* %4, align 8, !dbg !9769, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !9770

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !9771
  %8 = bitcast i64* %7 to double*, !dbg !9771
  %9 = load double, double* %8, align 8, !dbg !9771, !tbaa !2918
  br label %14, !dbg !9772

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !9773
  %12 = load i64, i64* %11, align 8, !dbg !9773, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !9774
  br label %14, !dbg !9775

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !9759, metadata !DIExpression()), !dbg !9762
  %16 = tail call double @sinh(double %15) #9, !dbg !9776
  br label %20, !dbg !9777

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !9778
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !9779
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !9780
}

declare void @f_slice(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_sort(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_soundfold(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9784, metadata !DIExpression()), !dbg !9787
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !9788
  store i32 7, i32* %3, align 8, !dbg !9789, !tbaa !3221
  %4 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !9790
  call void @llvm.dbg.value(metadata i8* %4, metadata !9785, metadata !DIExpression()), !dbg !9791
  %5 = tail call i8* @eval_soundfold(i8* %4) #9, !dbg !9792
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9793
  %7 = bitcast %union.anon* %6 to i8**, !dbg !9794
  store i8* %5, i8** %7, align 8, !dbg !9795, !tbaa !2918
  ret void, !dbg !9796
}

; Function Attrs: nounwind uwtable
define internal void @f_spellbadword(%struct.typval_T*, %struct.typval_T*) #0 !dbg !9797 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9799, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9800, metadata !DIExpression()), !dbg !9812
  %5 = bitcast i32* %3 to i8*, !dbg !9813
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !9813
  call void @llvm.dbg.value(metadata i32 48, metadata !9802, metadata !DIExpression()), !dbg !9814
  store i32 48, i32* %3, align 4, !dbg !9814, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 0, metadata !9804, metadata !DIExpression()), !dbg !9815
  %6 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9816, !tbaa !2783
  %7 = getelementptr inbounds %struct.window_S, %struct.window_S* %6, i64 0, i32 121, i32 31, !dbg !9817
  %8 = load i32, i32* %7, align 8, !dbg !9817, !tbaa !9818
  call void @llvm.dbg.value(metadata i32 %8, metadata !9805, metadata !DIExpression()), !dbg !9819
  %9 = icmp eq i32 %8, 0, !dbg !9820
  br i1 %9, label %10, label %14, !dbg !9822

; <label>:10:                                     ; preds = %2
  %11 = tail call i8* @did_set_spelllang(%struct.window_S* %6) #9, !dbg !9823
  %12 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9825, !tbaa !2783
  %13 = getelementptr inbounds %struct.window_S, %struct.window_S* %12, i64 0, i32 121, i32 31, !dbg !9826
  store i32 1, i32* %13, align 8, !dbg !9827, !tbaa !9818
  br label %14, !dbg !9828

; <label>:14:                                     ; preds = %2, %10
  %15 = phi %struct.window_S* [ %6, %2 ], [ %12, %10 ], !dbg !9829
  %16 = getelementptr inbounds %struct.window_S, %struct.window_S* %15, i64 0, i32 4, !dbg !9831
  %17 = load %struct.synblock_T*, %struct.synblock_T** %16, align 8, !dbg !9831, !tbaa !9832
  %18 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %17, i64 0, i32 37, !dbg !9833
  %19 = load i8*, i8** %18, align 8, !dbg !9833, !tbaa !9834
  %20 = load i8, i8* %19, align 1, !dbg !9835, !tbaa !2918
  %21 = icmp eq i8 %20, 0, !dbg !9836
  br i1 %21, label %22, label %27, !dbg !9837

; <label>:22:                                     ; preds = %14
  %23 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_no_spell, i64 0, i64 0), i32 5) #9, !dbg !9838
  %24 = tail call i32 @emsg(i8* %23) #9, !dbg !9840
  %25 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9841, !tbaa !2783
  %26 = getelementptr inbounds %struct.window_S, %struct.window_S* %25, i64 0, i32 121, i32 31, !dbg !9842
  store i32 %8, i32* %26, align 8, !dbg !9843, !tbaa !9818
  br label %94, !dbg !9844

; <label>:27:                                     ; preds = %14
  %28 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !9845
  %29 = icmp eq i32 %28, 0, !dbg !9847
  br i1 %29, label %30, label %33, !dbg !9848

; <label>:30:                                     ; preds = %27
  %31 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9849, !tbaa !2783
  %32 = getelementptr inbounds %struct.window_S, %struct.window_S* %31, i64 0, i32 121, i32 31, !dbg !9851
  store i32 %8, i32* %32, align 8, !dbg !9852, !tbaa !9818
  br label %94, !dbg !9853

; <label>:33:                                     ; preds = %27
  %34 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !9854
  %35 = load i32, i32* %34, align 8, !dbg !9854, !tbaa !3221
  %36 = icmp eq i32 %35, 0, !dbg !9855
  br i1 %36, label %37, label %45, !dbg !9856

; <label>:37:                                     ; preds = %33
  %38 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9857, !tbaa !2783
  call void @llvm.dbg.value(metadata i32* %3, metadata !9802, metadata !DIExpression()), !dbg !9814
  %39 = call i32 @spell_move_to(%struct.window_S* %38, i32 1, i32 1, i32 1, i32* nonnull %3) #9, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %39, metadata !9804, metadata !DIExpression()), !dbg !9815
  %40 = icmp eq i32 %39, 0, !dbg !9860
  br i1 %40, label %75, label %41, !dbg !9862

; <label>:41:                                     ; preds = %37
  %42 = call i8* @ml_get_cursor() #9, !dbg !9863
  call void @llvm.dbg.value(metadata i8* %42, metadata !9801, metadata !DIExpression()), !dbg !9865
  %43 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9866, !tbaa !2783
  %44 = getelementptr inbounds %struct.window_S, %struct.window_S* %43, i64 0, i32 9, !dbg !9867
  store i32 1, i32* %44, align 4, !dbg !9868, !tbaa !9869
  br label %75, !dbg !9870

; <label>:45:                                     ; preds = %33
  %46 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9871, !tbaa !2783
  %47 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %46, i64 0, i32 221, i32 37, !dbg !9872
  %48 = load i8*, i8** %47, align 8, !dbg !9872, !tbaa !9873
  %49 = load i8, i8* %48, align 1, !dbg !9874, !tbaa !2918
  %50 = icmp eq i8 %49, 0, !dbg !9875
  br i1 %50, label %75, label %51, !dbg !9876

; <label>:51:                                     ; preds = %45
  %52 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %0) #9, !dbg !9877
  call void @llvm.dbg.value(metadata i8* %52, metadata !9806, metadata !DIExpression()), !dbg !9878
  %53 = bitcast i32* %4 to i8*, !dbg !9879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #9, !dbg !9879
  call void @llvm.dbg.value(metadata i32 -1, metadata !9810, metadata !DIExpression()), !dbg !9880
  store i32 -1, i32* %4, align 4, !dbg !9880, !tbaa !2904
  %54 = icmp eq i8* %52, null, !dbg !9881
  br i1 %54, label %72, label %55, !dbg !9883

; <label>:55:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i8* %52, metadata !9806, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9804, metadata !DIExpression()), !dbg !9815
  %56 = load i8, i8* %52, align 1, !dbg !9884, !tbaa !2918
  %57 = icmp eq i8 %56, 0, !dbg !9886
  br i1 %57, label %72, label %58, !dbg !9887

; <label>:58:                                     ; preds = %55
  br label %59, !dbg !9888

; <label>:59:                                     ; preds = %58, %65
  %60 = phi i8* [ %67, %65 ], [ %52, %58 ]
  call void @llvm.dbg.value(metadata i8* %60, metadata !9806, metadata !DIExpression()), !dbg !9878
  %61 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9888, !tbaa !2783
  call void @llvm.dbg.value(metadata i32* %3, metadata !9802, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.value(metadata i32* %4, metadata !9810, metadata !DIExpression()), !dbg !9880
  %62 = call i32 @spell_check(%struct.window_S* %61, i8* %60, i32* nonnull %3, i32* nonnull %4, i32 0) #9, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %62, metadata !9804, metadata !DIExpression()), !dbg !9815
  %63 = load i32, i32* %3, align 4, !dbg !9891, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %63, metadata !9802, metadata !DIExpression()), !dbg !9814
  %64 = icmp eq i32 %63, 48, !dbg !9893
  br i1 %64, label %65, label %72, !dbg !9894

; <label>:65:                                     ; preds = %59
  %66 = sext i32 %62 to i64, !dbg !9895
  %67 = getelementptr inbounds i8, i8* %60, i64 %66, !dbg !9895
  %68 = load i32, i32* %4, align 4, !dbg !9896, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %68, metadata !9810, metadata !DIExpression()), !dbg !9880
  %69 = sub nsw i32 %68, %62, !dbg !9896
  call void @llvm.dbg.value(metadata i32 %69, metadata !9810, metadata !DIExpression()), !dbg !9880
  store i32 %69, i32* %4, align 4, !dbg !9896, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 0, metadata !9804, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8* %67, metadata !9806, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9804, metadata !DIExpression()), !dbg !9815
  %70 = load i8, i8* %67, align 1, !dbg !9884, !tbaa !2918
  %71 = icmp eq i8 %70, 0, !dbg !9886
  br i1 %71, label %72, label %59, !dbg !9887, !llvm.loop !9897

; <label>:72:                                     ; preds = %65, %59, %55, %51
  %73 = phi i32 [ 0, %51 ], [ 0, %55 ], [ 0, %65 ], [ %62, %59 ]
  %74 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %51 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %55 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %65 ], [ %60, %59 ]
  call void @llvm.dbg.value(metadata i8* %74, metadata !9801, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.value(metadata i32 %73, metadata !9804, metadata !DIExpression()), !dbg !9815
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #9, !dbg !9899
  br label %75, !dbg !9900

; <label>:75:                                     ; preds = %37, %45, %72, %41
  %76 = phi i32 [ %39, %41 ], [ 0, %37 ], [ %73, %72 ], [ 0, %45 ]
  %77 = phi i8* [ %42, %41 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %37 ], [ %74, %72 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), %45 ]
  call void @llvm.dbg.value(metadata i8* %77, metadata !9801, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.value(metadata i32 %76, metadata !9804, metadata !DIExpression()), !dbg !9815
  %78 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9901, !tbaa !2783
  %79 = getelementptr inbounds %struct.window_S, %struct.window_S* %78, i64 0, i32 121, i32 31, !dbg !9902
  store i32 %8, i32* %79, align 8, !dbg !9903, !tbaa !9818
  %80 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !9904
  %81 = bitcast %union.anon* %80 to %struct.listvar_S**, !dbg !9905
  %82 = load %struct.listvar_S*, %struct.listvar_S** %81, align 8, !dbg !9905, !tbaa !2918
  %83 = call i32 @list_append_string(%struct.listvar_S* %82, i8* %77, i32 %76) #9, !dbg !9906
  %84 = load %struct.listvar_S*, %struct.listvar_S** %81, align 8, !dbg !9907, !tbaa !2918
  %85 = load i32, i32* %3, align 4, !dbg !9908, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %85, metadata !9802, metadata !DIExpression()), !dbg !9814
  switch i32 %85, label %86 [
    i32 31, label %91
    i32 33, label %89
    i32 34, label %90
  ], !dbg !9908

; <label>:86:                                     ; preds = %75
  %87 = icmp eq i32 %85, 32, !dbg !9909
  %88 = select i1 %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.762, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), !dbg !9910
  br label %91, !dbg !9911

; <label>:89:                                     ; preds = %75
  br label %91, !dbg !9912

; <label>:90:                                     ; preds = %75
  br label %91, !dbg !9912

; <label>:91:                                     ; preds = %75, %90, %89, %86
  %92 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.759, i64 0, i64 0), %75 ], [ %88, %86 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.760, i64 0, i64 0), %89 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.761, i64 0, i64 0), %90 ], !dbg !9908
  %93 = call i32 @list_append_string(%struct.listvar_S* %84, i8* %92, i32 -1) #9, !dbg !9912
  br label %94, !dbg !9913

; <label>:94:                                     ; preds = %91, %30, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !9913
  ret void, !dbg !9913
}

; Function Attrs: nounwind uwtable
define internal void @f_spellsuggest(%struct.typval_T*, %struct.typval_T*) #0 !dbg !9914 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.growarray, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !9916, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !9917, metadata !DIExpression()), !dbg !9927
  %5 = bitcast i32* %3 to i8*, !dbg !9928
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !9928
  call void @llvm.dbg.value(metadata i32 0, metadata !9919, metadata !DIExpression()), !dbg !9929
  store i32 0, i32* %3, align 4, !dbg !9929, !tbaa !2904
  %6 = bitcast %struct.growarray* %4 to i8*, !dbg !9930
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9, !dbg !9930
  call void @llvm.dbg.value(metadata i32 0, metadata !9924, metadata !DIExpression()), !dbg !9931
  %7 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9932, !tbaa !2783
  %8 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 121, i32 31, !dbg !9933
  %9 = load i32, i32* %8, align 8, !dbg !9933, !tbaa !9818
  call void @llvm.dbg.value(metadata i32 %9, metadata !9925, metadata !DIExpression()), !dbg !9934
  %10 = icmp eq i32 %9, 0, !dbg !9935
  br i1 %10, label %11, label %15, !dbg !9937

; <label>:11:                                     ; preds = %2
  %12 = tail call i8* @did_set_spelllang(%struct.window_S* %7) #9, !dbg !9938
  %13 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9940, !tbaa !2783
  %14 = getelementptr inbounds %struct.window_S, %struct.window_S* %13, i64 0, i32 121, i32 31, !dbg !9941
  store i32 1, i32* %14, align 8, !dbg !9942, !tbaa !9818
  br label %15, !dbg !9943

; <label>:15:                                     ; preds = %2, %11
  %16 = phi %struct.window_S* [ %7, %2 ], [ %13, %11 ], !dbg !9944
  %17 = getelementptr inbounds %struct.window_S, %struct.window_S* %16, i64 0, i32 4, !dbg !9946
  %18 = load %struct.synblock_T*, %struct.synblock_T** %17, align 8, !dbg !9946, !tbaa !9832
  %19 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %18, i64 0, i32 37, !dbg !9947
  %20 = load i8*, i8** %19, align 8, !dbg !9947, !tbaa !9834
  %21 = load i8, i8* %20, align 1, !dbg !9948, !tbaa !2918
  %22 = icmp eq i8 %21, 0, !dbg !9949
  br i1 %22, label %23, label %28, !dbg !9950

; <label>:23:                                     ; preds = %15
  %24 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_no_spell, i64 0, i64 0), i32 5) #9, !dbg !9951
  %25 = tail call i32 @emsg(i8* %24) #9, !dbg !9953
  %26 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9954, !tbaa !2783
  %27 = getelementptr inbounds %struct.window_S, %struct.window_S* %26, i64 0, i32 121, i32 31, !dbg !9955
  store i32 %9, i32* %27, align 8, !dbg !9956, !tbaa !9818
  br label %96, !dbg !9957

; <label>:28:                                     ; preds = %15
  %29 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !9958
  %30 = icmp eq i32 %29, 0, !dbg !9960
  %31 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !tbaa !2783
  br i1 %30, label %32, label %34, !dbg !9961

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %struct.window_S, %struct.window_S* %31, i64 0, i32 121, i32 31, !dbg !9962
  store i32 %9, i32* %33, align 8, !dbg !9964, !tbaa !9818
  br label %96, !dbg !9965

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.window_S, %struct.window_S* %31, i64 0, i32 4, !dbg !9966
  %36 = load %struct.synblock_T*, %struct.synblock_T** %35, align 8, !dbg !9966, !tbaa !9832
  %37 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %36, i64 0, i32 37, !dbg !9968
  %38 = load i8*, i8** %37, align 8, !dbg !9968, !tbaa !9834
  %39 = load i8, i8* %38, align 1, !dbg !9969, !tbaa !2918
  %40 = icmp eq i8 %39, 0, !dbg !9970
  br i1 %40, label %93, label %41, !dbg !9971

; <label>:41:                                     ; preds = %34
  %42 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !9972
  call void @llvm.dbg.value(metadata i8* %42, metadata !9918, metadata !DIExpression()), !dbg !9974
  %43 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !9975
  %44 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %43, i64 0, i32 0, !dbg !9977
  %45 = load i32, i32* %44, align 8, !dbg !9977, !tbaa !3221
  %46 = icmp eq i32 %45, 0, !dbg !9978
  br i1 %46, label %61, label %47, !dbg !9979

; <label>:47:                                     ; preds = %41
  call void @llvm.dbg.value(metadata i32* %3, metadata !9919, metadata !DIExpression()), !dbg !9929
  %48 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %43, i32* nonnull %3) #9, !dbg !9980
  %49 = trunc i64 %48 to i32, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %49, metadata !9920, metadata !DIExpression()), !dbg !9983
  %50 = icmp slt i32 %49, 1, !dbg !9984
  br i1 %50, label %96, label %51, !dbg !9986

; <label>:51:                                     ; preds = %47
  %52 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !9987
  %53 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %52, i64 0, i32 0, !dbg !9989
  %54 = load i32, i32* %53, align 8, !dbg !9989, !tbaa !3221
  %55 = icmp eq i32 %54, 0, !dbg !9990
  br i1 %55, label %61, label %56, !dbg !9991

; <label>:56:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i32* %3, metadata !9919, metadata !DIExpression()), !dbg !9929
  %57 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %52, i32* nonnull %3) #9, !dbg !9992
  %58 = trunc i64 %57 to i32, !dbg !9994
  call void @llvm.dbg.value(metadata i32 %58, metadata !9924, metadata !DIExpression()), !dbg !9931
  %59 = load i32, i32* %3, align 4, !dbg !9995, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %59, metadata !9919, metadata !DIExpression()), !dbg !9929
  %60 = icmp eq i32 %59, 0, !dbg !9995
  br i1 %60, label %61, label %96, !dbg !9997

; <label>:61:                                     ; preds = %41, %56, %51
  %62 = phi i32 [ %49, %56 ], [ %49, %51 ], [ 25, %41 ]
  %63 = phi i32 [ %58, %56 ], [ 0, %51 ], [ 0, %41 ]
  call void @llvm.dbg.value(metadata i32 %63, metadata !9924, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata i32 %62, metadata !9920, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata %struct.growarray* %4, metadata !9921, metadata !DIExpression()), !dbg !9998
  call void @spell_suggest_list(%struct.growarray* nonnull %4, i8* %42, i32 %62, i32 %63, i32 0) #9, !dbg !9999
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !10000
  %64 = getelementptr inbounds %struct.growarray, %struct.growarray* %4, i64 0, i32 0, !dbg !10001
  %65 = load i32, i32* %64, align 8, !dbg !10001, !tbaa !3475
  %66 = icmp sgt i32 %65, 0, !dbg !10004
  br i1 %66, label %67, label %91, !dbg !10005

; <label>:67:                                     ; preds = %61
  %68 = getelementptr inbounds %struct.growarray, %struct.growarray* %4, i64 0, i32 4
  %69 = bitcast i8** %68 to i8***
  %70 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to %struct.listvar_S**
  br label %72, !dbg !10005

; <label>:72:                                     ; preds = %67, %86
  %73 = phi i64 [ 0, %67 ], [ %87, %86 ]
  call void @llvm.dbg.value(metadata i64 %73, metadata !9922, metadata !DIExpression()), !dbg !10000
  %74 = load i8**, i8*** %69, align 8, !dbg !10006, !tbaa !3473
  %75 = getelementptr inbounds i8*, i8** %74, i64 %73, !dbg !10008
  %76 = load i8*, i8** %75, align 8, !dbg !10008, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %76, metadata !9918, metadata !DIExpression()), !dbg !9974
  %77 = call %struct.listitem_S* @listitem_alloc() #9, !dbg !10009
  call void @llvm.dbg.value(metadata %struct.listitem_S* %77, metadata !9923, metadata !DIExpression()), !dbg !10010
  %78 = icmp eq %struct.listitem_S* %77, null, !dbg !10011
  br i1 %78, label %79, label %80, !dbg !10013

; <label>:79:                                     ; preds = %72
  call void @vim_free(i8* %76) #9, !dbg !10014
  br label %86, !dbg !10014

; <label>:80:                                     ; preds = %72
  %81 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %77, i64 0, i32 2, i32 0, !dbg !10015
  store i32 7, i32* %81, align 8, !dbg !10017, !tbaa !8428
  %82 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %77, i64 0, i32 2, i32 1, !dbg !10018
  store i8 0, i8* %82, align 4, !dbg !10019, !tbaa !10020
  %83 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %77, i64 0, i32 2, i32 2, !dbg !10021
  %84 = bitcast %union.anon* %83 to i8**, !dbg !10022
  store i8* %76, i8** %84, align 8, !dbg !10023, !tbaa !2918
  %85 = load %struct.listvar_S*, %struct.listvar_S** %71, align 8, !dbg !10024, !tbaa !2918
  call void @list_append(%struct.listvar_S* %85, %struct.listitem_S* nonnull %77) #9, !dbg !10025
  br label %86

; <label>:86:                                     ; preds = %79, %80
  %87 = add nuw nsw i64 %73, 1, !dbg !10026
  %88 = load i32, i32* %64, align 8, !dbg !10001, !tbaa !3475
  %89 = sext i32 %88 to i64, !dbg !10004
  %90 = icmp slt i64 %87, %89, !dbg !10004
  br i1 %90, label %72, label %91, !dbg !10005, !llvm.loop !10027

; <label>:91:                                     ; preds = %86, %61
  call void @llvm.dbg.value(metadata %struct.growarray* %4, metadata !9921, metadata !DIExpression()), !dbg !9998
  call void @ga_clear(%struct.growarray* nonnull %4) #9, !dbg !10029
  %92 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10030, !tbaa !2783
  br label %93, !dbg !10031

; <label>:93:                                     ; preds = %34, %91
  %94 = phi %struct.window_S* [ %31, %34 ], [ %92, %91 ], !dbg !10030
  %95 = getelementptr inbounds %struct.window_S, %struct.window_S* %94, i64 0, i32 121, i32 31, !dbg !10032
  store i32 %9, i32* %95, align 8, !dbg !10033, !tbaa !9818
  br label %96, !dbg !10034

; <label>:96:                                     ; preds = %56, %47, %93, %32, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9, !dbg !10034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !10034
  ret void, !dbg !10034
}

; Function Attrs: nounwind uwtable
define internal void @f_split(%struct.typval_T*, %struct.typval_T*) #0 !dbg !10035 {
  %3 = alloca %struct.regmatch_T, align 8
  %4 = alloca [65 x i8], align 16
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10037, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10038, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* null, metadata !10041, metadata !DIExpression()), !dbg !10051
  %6 = bitcast %struct.regmatch_T* %3 to i8*, !dbg !10052
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %6) #9, !dbg !10052
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !10053
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !10053
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !10043, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 0, metadata !10046, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32 0, metadata !10047, metadata !DIExpression()), !dbg !10056
  %8 = bitcast i32* %5 to i8*, !dbg !10057
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9, !dbg !10057
  call void @llvm.dbg.value(metadata i32 0, metadata !10048, metadata !DIExpression()), !dbg !10058
  store i32 0, i32* %5, align 4, !dbg !10058, !tbaa !2904
  %9 = load i64, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !10059, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** @p_cpo, metadata !10044, metadata !DIExpression(DW_OP_deref)), !dbg !10060
  %10 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10061, !tbaa !2783
  store i64 %10, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !10062, !tbaa !2783
  %11 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10063
  call void @llvm.dbg.value(metadata i8* %11, metadata !10039, metadata !DIExpression()), !dbg !10064
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10065
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %12, i64 0, i32 0, !dbg !10067
  %14 = load i32, i32* %13, align 8, !dbg !10067, !tbaa !3221
  %15 = icmp eq i32 %14, 0, !dbg !10068
  br i1 %15, label %33, label %16, !dbg !10069

; <label>:16:                                     ; preds = %2
  %17 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %12, i8* nonnull %7) #9, !dbg !10070
  call void @llvm.dbg.value(metadata i8* %17, metadata !10041, metadata !DIExpression()), !dbg !10051
  %18 = icmp eq i8* %17, null, !dbg !10072
  br i1 %18, label %19, label %20, !dbg !10074

; <label>:19:                                     ; preds = %16
  call void @llvm.dbg.value(metadata i32 1, metadata !10048, metadata !DIExpression()), !dbg !10058
  store i32 1, i32* %5, align 4, !dbg !10075, !tbaa !2904
  br label %20, !dbg !10076

; <label>:20:                                     ; preds = %19, %16
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10077
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %21, i64 0, i32 0, !dbg !10079
  %23 = load i32, i32* %22, align 8, !dbg !10079, !tbaa !3221
  %24 = icmp eq i32 %23, 0, !dbg !10080
  br i1 %24, label %28, label %25, !dbg !10081

; <label>:25:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32* %5, metadata !10048, metadata !DIExpression()), !dbg !10058
  %26 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %21, i32* nonnull %5) #9, !dbg !10082
  %27 = trunc i64 %26 to i32, !dbg !10083
  call void @llvm.dbg.value(metadata i32 %27, metadata !10047, metadata !DIExpression()), !dbg !10056
  br label %28, !dbg !10084

; <label>:28:                                     ; preds = %20, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %20 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !10047, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.value(metadata i8* %17, metadata !10041, metadata !DIExpression()), !dbg !10051
  br i1 %18, label %33, label %30, !dbg !10085

; <label>:30:                                     ; preds = %28
  %31 = load i8, i8* %17, align 1, !dbg !10087, !tbaa !2918
  %32 = icmp eq i8 %31, 0, !dbg !10088
  br i1 %32, label %33, label %35, !dbg !10089

; <label>:33:                                     ; preds = %2, %30, %28
  %34 = phi i32 [ %29, %30 ], [ %29, %28 ], [ 0, %2 ]
  br label %35, !dbg !10090

; <label>:35:                                     ; preds = %33, %30
  %36 = phi i32 [ %34, %33 ], [ %29, %30 ]
  %37 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.763, i64 0, i64 0), %33 ], [ %17, %30 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !10041, metadata !DIExpression()), !dbg !10051
  %38 = call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !10091
  %39 = icmp eq i32 %38, 0, !dbg !10093
  %40 = load i32, i32* %5, align 4, !dbg !10094
  call void @llvm.dbg.value(metadata i32 %40, metadata !10048, metadata !DIExpression()), !dbg !10058
  %41 = icmp ne i32 %40, 0, !dbg !10094
  %42 = or i1 %39, %41, !dbg !10096
  br i1 %42, label %114, label %43, !dbg !10096

; <label>:43:                                     ; preds = %35
  %44 = call %struct.regprog* @vim_regcomp(i8* %37, i32 3) #9, !dbg !10097
  %45 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %3, i64 0, i32 0, !dbg !10098
  store %struct.regprog* %44, %struct.regprog** %45, align 8, !dbg !10099, !tbaa !10100
  %46 = icmp eq %struct.regprog* %44, null, !dbg !10102
  br i1 %46, label %114, label %47, !dbg !10104

; <label>:47:                                     ; preds = %43
  %48 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %3, i64 0, i32 3, !dbg !10105
  store i32 0, i32* %48, align 8, !dbg !10107, !tbaa !10108
  call void @llvm.dbg.value(metadata i32 0, metadata !10046, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i8* %11, metadata !10039, metadata !DIExpression()), !dbg !10064
  %49 = load i8, i8* %11, align 1, !dbg !10109, !tbaa !2918
  %50 = icmp ne i8 %49, 0, !dbg !10110
  %51 = icmp ne i32 %36, 0, !dbg !10111
  %52 = or i1 %51, %50, !dbg !10111
  br i1 %52, label %53, label %112, !dbg !10112

; <label>:53:                                     ; preds = %47
  %54 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %55 = bitcast %union.anon* %54 to %struct.listvar_S**
  %56 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %3, i64 0, i32 2, i64 0
  %57 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %3, i64 0, i32 1, i64 0
  br label %58, !dbg !10112

; <label>:58:                                     ; preds = %53, %104
  %59 = phi i8 [ %49, %53 ], [ %107, %104 ]
  %60 = phi i32 [ 0, %53 ], [ %106, %104 ]
  %61 = phi i8* [ %11, %53 ], [ %105, %104 ]
  call void @llvm.dbg.value(metadata i8* %61, metadata !10039, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata i32 %60, metadata !10046, metadata !DIExpression()), !dbg !10055
  %62 = icmp eq i8 %59, 0, !dbg !10113
  br i1 %62, label %68, label %63, !dbg !10116

; <label>:63:                                     ; preds = %58
  call void @llvm.dbg.value(metadata %struct.regmatch_T* %3, metadata !10042, metadata !DIExpression()), !dbg !10117
  %64 = call i32 @vim_regexec_nl(%struct.regmatch_T* nonnull %3, i8* %61, i32 %60) #9, !dbg !10118
  call void @llvm.dbg.value(metadata i32 %64, metadata !10045, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata i32 %64, metadata !10045, metadata !DIExpression()), !dbg !10119
  %65 = icmp eq i32 %64, 0, !dbg !10120
  br i1 %65, label %68, label %66, !dbg !10122

; <label>:66:                                     ; preds = %63
  %67 = load i8*, i8** %57, align 8, !dbg !10123, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %67, metadata !10040, metadata !DIExpression()), !dbg !10124
  br label %71, !dbg !10125

; <label>:68:                                     ; preds = %63, %58
  %69 = call i64 @strlen(i8* %61) #10, !dbg !10126
  %70 = getelementptr inbounds i8, i8* %61, i64 %69, !dbg !10127
  call void @llvm.dbg.value(metadata i8* %70, metadata !10040, metadata !DIExpression()), !dbg !10124
  br label %71

; <label>:71:                                     ; preds = %68, %66
  %72 = phi i1 [ true, %66 ], [ false, %68 ]
  %73 = phi i8* [ %67, %66 ], [ %70, %68 ]
  call void @llvm.dbg.value(metadata i8* %73, metadata !10040, metadata !DIExpression()), !dbg !10124
  %74 = icmp ugt i8* %73, %61, !dbg !10128
  %75 = or i1 %51, %74, !dbg !10130
  %76 = load %struct.listvar_S*, %struct.listvar_S** %55, align 8, !tbaa !2918
  br i1 %75, label %88, label %77, !dbg !10130

; <label>:77:                                     ; preds = %71
  %78 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %76, i64 0, i32 8, !dbg !10131
  %79 = load i32, i32* %78, align 4, !dbg !10131, !tbaa !3541
  %80 = icmp sgt i32 %79, 0, !dbg !10132
  br i1 %80, label %81, label %96, !dbg !10133

; <label>:81:                                     ; preds = %77
  %82 = load i8, i8* %61, align 1, !dbg !10134, !tbaa !2918
  %83 = icmp ne i8 %82, 0, !dbg !10135
  %84 = and i1 %72, %83, !dbg !10136
  %85 = load i8*, i8** %56, align 8, !dbg !10137
  %86 = icmp ult i8* %73, %85, !dbg !10138
  %87 = and i1 %84, %86, !dbg !10136
  br i1 %87, label %88, label %96, !dbg !10136

; <label>:88:                                     ; preds = %71, %81
  %89 = ptrtoint i8* %73 to i64, !dbg !10139
  %90 = ptrtoint i8* %61 to i64, !dbg !10139
  %91 = sub i64 %89, %90, !dbg !10139
  %92 = trunc i64 %91 to i32, !dbg !10142
  %93 = call i32 @list_append_string(%struct.listvar_S* %76, i8* %61, i32 %92) #9, !dbg !10143
  %94 = icmp ne i32 %93, 0, !dbg !10144
  %95 = and i1 %72, %94, !dbg !10145
  br i1 %95, label %97, label %110, !dbg !10145

; <label>:96:                                     ; preds = %81, %77
  br i1 %72, label %97, label %110, !dbg !10146

; <label>:97:                                     ; preds = %88, %96
  %98 = load i8*, i8** %56, align 8, !dbg !10147, !tbaa !2783
  %99 = icmp ugt i8* %98, %61, !dbg !10149
  br i1 %99, label %104, label %100, !dbg !10150

; <label>:100:                                    ; preds = %97
  %101 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10151, !tbaa !2783
  %102 = call i32 %101(i8* %98) #9, !dbg !10152
  call void @llvm.dbg.value(metadata i32 %102, metadata !10046, metadata !DIExpression()), !dbg !10055
  %103 = load i8*, i8** %56, align 8, !dbg !10153, !tbaa !2783
  br label %104

; <label>:104:                                    ; preds = %97, %100
  %105 = phi i8* [ %103, %100 ], [ %98, %97 ], !dbg !10153
  %106 = phi i32 [ %102, %100 ], [ 0, %97 ]
  call void @llvm.dbg.value(metadata i32 %106, metadata !10046, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i8* %105, metadata !10039, metadata !DIExpression()), !dbg !10064
  %107 = load i8, i8* %105, align 1, !dbg !10109, !tbaa !2918
  %108 = icmp ne i8 %107, 0, !dbg !10110
  %109 = or i1 %51, %108, !dbg !10111
  br i1 %109, label %58, label %110, !dbg !10112, !llvm.loop !10154

; <label>:110:                                    ; preds = %88, %96, %104
  %111 = load %struct.regprog*, %struct.regprog** %45, align 8, !dbg !10156, !tbaa !10100
  br label %112, !dbg !10156

; <label>:112:                                    ; preds = %110, %47
  %113 = phi %struct.regprog* [ %111, %110 ], [ %44, %47 ], !dbg !10156
  call void @vim_regfree(%struct.regprog* %113) #9, !dbg !10157
  br label %114, !dbg !10158

; <label>:114:                                    ; preds = %43, %112, %35
  store i64 %9, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !10159, !tbaa !2783
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9, !dbg !10160
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !10160
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %6) #9, !dbg !10160
  ret void, !dbg !10160
}

; Function Attrs: nounwind uwtable
define internal void @f_sqrt(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !10161 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10163, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10164, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !10165, metadata !DIExpression()), !dbg !10168
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !10169
  store i32 6, i32* %3, align 8, !dbg !10170, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !10165, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !10171
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !10174
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !10175
  %5 = load i32, i32* %4, align 8, !dbg !10175, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !10176

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !10177
  %8 = bitcast i64* %7 to double*, !dbg !10177
  %9 = load double, double* %8, align 8, !dbg !10177, !tbaa !2918
  br label %14, !dbg !10178

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !10179
  %12 = load i64, i64* %11, align 8, !dbg !10179, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !10180
  br label %14, !dbg !10181

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !10165, metadata !DIExpression()), !dbg !10168
  %16 = tail call double @sqrt(double %15) #9, !dbg !10182
  br label %20, !dbg !10183

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !10184
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !10185
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !10186
}

; Function Attrs: nounwind uwtable
define internal void @f_srand(%struct.typval_T*, %struct.typval_T*) #0 !dbg !10187 {
  %3 = alloca %struct.anon.10, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10189, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10190, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.value(metadata i32 0, metadata !10191, metadata !DIExpression()), !dbg !10198
  %5 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !10199
  %6 = icmp eq i32 %5, 0, !dbg !10201
  br i1 %6, label %96, label %7, !dbg !10202

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !10203
  %9 = load i32, i32* %8, align 8, !dbg !10203, !tbaa !3221
  %10 = icmp eq i32 %9, 0, !dbg !10204
  br i1 %10, label %11, label %38, !dbg !10205

; <label>:11:                                     ; preds = %7
  %12 = load i1, i1* @srand_seed_for_testing_is_used, align 4
  br i1 %12, label %13, label %15, !dbg !10206

; <label>:13:                                     ; preds = %11
  %14 = load i32, i32* @srand_seed_for_testing, align 4, !dbg !10209, !tbaa !2904
  br label %44, !dbg !10210

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @init_srand.dev_urandom_state, align 4, !dbg !10211, !tbaa !2904
  %17 = icmp eq i32 %16, 0, !dbg !10212
  br i1 %17, label %35, label %18, !dbg !10213

; <label>:18:                                     ; preds = %15
  %19 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.754, i64 0, i64 0), i32 0) #9, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %19, metadata !2635, metadata !DIExpression()) #9, !dbg !10215
  %20 = bitcast %struct.anon.10* %3 to i8*, !dbg !10216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9, !dbg !10216
  %21 = icmp eq i32 %19, -1, !dbg !10217
  br i1 %21, label %22, label %23, !dbg !10218

; <label>:22:                                     ; preds = %18
  store i32 0, i32* @init_srand.dev_urandom_state, align 4, !dbg !10219, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9, !dbg !10220
  br label %35, !dbg !10221

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %3, i64 0, i32 0, i32 0, !dbg !10222
  store i32 0, i32* %24, align 4, !dbg !10223, !tbaa !2918
  %25 = call i64 @read(i32 %19, i8* nonnull %20, i64 4) #9, !dbg !10224
  %26 = icmp eq i64 %25, 4, !dbg !10225
  br i1 %26, label %28, label %27, !dbg !10226

; <label>:27:                                     ; preds = %23
  store i32 0, i32* @init_srand.dev_urandom_state, align 4, !dbg !10227, !tbaa !2904
  br label %30, !dbg !10228

; <label>:28:                                     ; preds = %23
  store i32 1, i32* @init_srand.dev_urandom_state, align 4, !dbg !10229, !tbaa !2904
  %29 = load i32, i32* %24, align 4, !dbg !10230, !tbaa !2918
  br label %30

; <label>:30:                                     ; preds = %28, %27
  %31 = phi i32 [ %29, %28 ], [ 0, %27 ]
  %32 = tail call i32 @close(i32 %19) #9, !dbg !10231
  %33 = load i32, i32* @init_srand.dev_urandom_state, align 4, !dbg !10232, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9, !dbg !10220
  %34 = icmp eq i32 %33, 1, !dbg !10233
  br i1 %34, label %44, label %35, !dbg !10221

; <label>:35:                                     ; preds = %30, %22, %15
  %36 = tail call i64 @vim_time() #9, !dbg !10234
  %37 = trunc i64 %36 to i32, !dbg !10234
  br label %44, !dbg !10235

; <label>:38:                                     ; preds = %7
  %39 = bitcast i32* %4 to i8*, !dbg !10236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #9, !dbg !10236
  call void @llvm.dbg.value(metadata i32 0, metadata !10193, metadata !DIExpression()), !dbg !10237
  store i32 0, i32* %4, align 4, !dbg !10237, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %4, metadata !10193, metadata !DIExpression()), !dbg !10237
  %40 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %0, i32* nonnull %4) #9, !dbg !10238
  %41 = trunc i64 %40 to i32, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %41, metadata !10191, metadata !DIExpression()), !dbg !10198
  %42 = load i32, i32* %4, align 4, !dbg !10240, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %42, metadata !10193, metadata !DIExpression()), !dbg !10237
  %43 = icmp eq i32 %42, 0, !dbg !10240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #9, !dbg !10242
  br i1 %43, label %44, label %96

; <label>:44:                                     ; preds = %35, %30, %13, %38
  %45 = phi i32 [ %41, %38 ], [ %14, %13 ], [ %37, %35 ], [ %31, %30 ]
  %46 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10243
  %47 = bitcast %union.anon* %46 to %struct.listvar_S**, !dbg !10244
  %48 = load %struct.listvar_S*, %struct.listvar_S** %47, align 8, !dbg !10244, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %45, metadata !10191, metadata !DIExpression()), !dbg !10198
  %49 = add i32 %45, -1640531527, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %49, metadata !10191, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i32 %49, metadata !10192, metadata !DIExpression()), !dbg !10246
  %50 = lshr i32 %49, 16, !dbg !10245
  %51 = xor i32 %50, %49, !dbg !10245
  %52 = mul i32 %51, -2048144789, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %52, metadata !10192, metadata !DIExpression()), !dbg !10246
  %53 = lshr i32 %52, 13, !dbg !10245
  %54 = xor i32 %53, %52, !dbg !10245
  %55 = mul i32 %54, -1028477387, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %55, metadata !10192, metadata !DIExpression()), !dbg !10246
  %56 = lshr i32 %55, 16, !dbg !10245
  %57 = xor i32 %56, %55, !dbg !10245
  %58 = zext i32 %57 to i64, !dbg !10247
  %59 = call i32 @list_append_number(%struct.listvar_S* %48, i64 %58) #9, !dbg !10248
  %60 = load %struct.listvar_S*, %struct.listvar_S** %47, align 8, !dbg !10249, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %49, metadata !10191, metadata !DIExpression()), !dbg !10198
  %61 = add i32 %45, 1013904242, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %61, metadata !10191, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i32 %61, metadata !10192, metadata !DIExpression()), !dbg !10246
  %62 = lshr i32 %61, 16, !dbg !10250
  %63 = xor i32 %62, %61, !dbg !10250
  %64 = mul i32 %63, -2048144789, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %64, metadata !10192, metadata !DIExpression()), !dbg !10246
  %65 = lshr i32 %64, 13, !dbg !10250
  %66 = xor i32 %65, %64, !dbg !10250
  %67 = mul i32 %66, -1028477387, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %67, metadata !10192, metadata !DIExpression()), !dbg !10246
  %68 = lshr i32 %67, 16, !dbg !10250
  %69 = xor i32 %68, %67, !dbg !10250
  %70 = zext i32 %69 to i64, !dbg !10251
  %71 = call i32 @list_append_number(%struct.listvar_S* %60, i64 %70) #9, !dbg !10252
  %72 = load %struct.listvar_S*, %struct.listvar_S** %47, align 8, !dbg !10253, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %61, metadata !10191, metadata !DIExpression()), !dbg !10198
  %73 = add i32 %45, -626627285, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %73, metadata !10191, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i32 %73, metadata !10192, metadata !DIExpression()), !dbg !10246
  %74 = lshr i32 %73, 16, !dbg !10254
  %75 = xor i32 %74, %73, !dbg !10254
  %76 = mul i32 %75, -2048144789, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %76, metadata !10192, metadata !DIExpression()), !dbg !10246
  %77 = lshr i32 %76, 13, !dbg !10254
  %78 = xor i32 %77, %76, !dbg !10254
  %79 = mul i32 %78, -1028477387, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %79, metadata !10192, metadata !DIExpression()), !dbg !10246
  %80 = lshr i32 %79, 16, !dbg !10254
  %81 = xor i32 %80, %79, !dbg !10254
  %82 = zext i32 %81 to i64, !dbg !10255
  %83 = call i32 @list_append_number(%struct.listvar_S* %72, i64 %82) #9, !dbg !10256
  %84 = load %struct.listvar_S*, %struct.listvar_S** %47, align 8, !dbg !10257, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %73, metadata !10191, metadata !DIExpression()), !dbg !10198
  %85 = add i32 %45, 2027808484, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %85, metadata !10191, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i32 %85, metadata !10192, metadata !DIExpression()), !dbg !10246
  %86 = lshr i32 %85, 16, !dbg !10258
  %87 = xor i32 %86, %85, !dbg !10258
  %88 = mul i32 %87, -2048144789, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %88, metadata !10192, metadata !DIExpression()), !dbg !10246
  %89 = lshr i32 %88, 13, !dbg !10258
  %90 = xor i32 %89, %88, !dbg !10258
  %91 = mul i32 %90, -1028477387, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %91, metadata !10192, metadata !DIExpression()), !dbg !10246
  %92 = lshr i32 %91, 16, !dbg !10258
  %93 = xor i32 %92, %91, !dbg !10258
  %94 = zext i32 %93 to i64, !dbg !10259
  %95 = call i32 @list_append_number(%struct.listvar_S* %84, i64 %94) #9, !dbg !10260
  br label %96, !dbg !10261

; <label>:96:                                     ; preds = %2, %38, %44
  ret void, !dbg !10261
}

declare void @f_state(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_str2float(%struct.typval_T*, %struct.typval_T*) #0 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10264, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10265, metadata !DIExpression()), !dbg !10269
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10270
  %4 = tail call i8* @skipwhite(i8* %3) #9, !dbg !10271
  call void @llvm.dbg.value(metadata i8* %4, metadata !10266, metadata !DIExpression()), !dbg !10272
  %5 = load i8, i8* %4, align 1, !dbg !10273, !tbaa !2918
  %6 = icmp eq i8 %5, 45, !dbg !10274
  switch i8 %5, label %10 [
    i8 45, label %7
    i8 43, label %7
  ], !dbg !10275

; <label>:7:                                      ; preds = %2, %2
  %8 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10277
  %9 = tail call i8* @skipwhite(i8* nonnull %8) #9, !dbg !10278
  call void @llvm.dbg.value(metadata i8* %9, metadata !10266, metadata !DIExpression()), !dbg !10272
  br label %10, !dbg !10279

; <label>:10:                                     ; preds = %2, %7
  %11 = phi i8* [ %9, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !10266, metadata !DIExpression()), !dbg !10272
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10280
  %13 = bitcast %union.anon* %12 to double*, !dbg !10281
  %14 = tail call i32 @string2float(i8* %11, double* nonnull %13) #9, !dbg !10282
  br i1 %6, label %15, label %18, !dbg !10283

; <label>:15:                                     ; preds = %10
  %16 = load double, double* %13, align 8, !dbg !10284, !tbaa !2918
  %17 = fsub double -0.000000e+00, %16, !dbg !10284
  store double %17, double* %13, align 8, !dbg !10284, !tbaa !2918
  br label %18, !dbg !10286

; <label>:18:                                     ; preds = %15, %10
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !10287
  store i32 6, i32* %19, align 8, !dbg !10288, !tbaa !3221
  ret void, !dbg !10289
}

; Function Attrs: nounwind uwtable
define internal void @f_str2list(%struct.typval_T*, %struct.typval_T*) #0 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10292, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10293, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i32 0, metadata !10295, metadata !DIExpression()), !dbg !10302
  %3 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !10303
  %4 = icmp eq i32 %3, 0, !dbg !10305
  br i1 %4, label %59, label %5, !dbg !10306

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10307
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %6, i64 0, i32 0, !dbg !10309
  %8 = load i32, i32* %7, align 8, !dbg !10309, !tbaa !3221
  %9 = icmp eq i32 %8, 0, !dbg !10310
  br i1 %9, label %14, label %10, !dbg !10311

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %6, i32* null) #9, !dbg !10312
  %12 = trunc i64 %11 to i32, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %12, metadata !10295, metadata !DIExpression()), !dbg !10302
  %13 = icmp ne i32 %12, 0, !dbg !10314
  br label %14, !dbg !10314

; <label>:14:                                     ; preds = %5, %10
  %15 = phi i1 [ %13, %10 ], [ false, %5 ]
  %16 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !10315
  call void @llvm.dbg.value(metadata i8* %16, metadata !10294, metadata !DIExpression()), !dbg !10316
  %17 = load i32, i32* @has_mbyte, align 4, !dbg !10317, !tbaa !2904
  %18 = icmp ne i32 %17, 0, !dbg !10317
  %19 = or i1 %15, %18, !dbg !10318
  br i1 %19, label %20, label %44, !dbg !10318

; <label>:20:                                     ; preds = %14
  %21 = load i32, i32* @enc_utf8, align 4, !dbg !10319
  %22 = icmp ne i32 %21, 0, !dbg !10319
  %23 = or i1 %15, %22, !dbg !10321
  %24 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10322
  call void @llvm.dbg.value(metadata i32 (i8*)* %24, metadata !10296, metadata !DIExpression()), !dbg !10324
  %25 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !10325
  call void @llvm.dbg.value(metadata i32 (i8*)* %25, metadata !10299, metadata !DIExpression()), !dbg !10326
  %26 = select i1 %23, i32 (i8*)* @utf_ptr2len, i32 (i8*)* %24, !dbg !10321
  %27 = select i1 %23, i32 (i8*)* @utf_ptr2char, i32 (i8*)* %25, !dbg !10321
  call void @llvm.dbg.value(metadata i32 (i8*)* %27, metadata !10299, metadata !DIExpression()), !dbg !10326
  call void @llvm.dbg.value(metadata i32 (i8*)* %26, metadata !10296, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i8* %16, metadata !10294, metadata !DIExpression()), !dbg !10316
  %28 = load i8, i8* %16, align 1, !dbg !10327, !tbaa !2918
  %29 = icmp eq i8 %28, 0, !dbg !10330
  br i1 %29, label %59, label %30, !dbg !10331

; <label>:30:                                     ; preds = %20
  %31 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %32 = bitcast %union.anon* %31 to %struct.listvar_S**
  br label %33, !dbg !10331

; <label>:33:                                     ; preds = %30, %33
  %34 = phi i8* [ %16, %30 ], [ %41, %33 ]
  call void @llvm.dbg.value(metadata i8* %34, metadata !10294, metadata !DIExpression()), !dbg !10316
  %35 = load %struct.listvar_S*, %struct.listvar_S** %32, align 8, !dbg !10332, !tbaa !2918
  %36 = tail call i32 %27(i8* %34) #9, !dbg !10333
  %37 = sext i32 %36 to i64, !dbg !10333
  %38 = tail call i32 @list_append_number(%struct.listvar_S* %35, i64 %37) #9, !dbg !10334
  %39 = tail call i32 %26(i8* %34) #9, !dbg !10335
  %40 = sext i32 %39 to i64, !dbg !10336
  %41 = getelementptr inbounds i8, i8* %34, i64 %40, !dbg !10336
  call void @llvm.dbg.value(metadata i8* %41, metadata !10294, metadata !DIExpression()), !dbg !10316
  %42 = load i8, i8* %41, align 1, !dbg !10327, !tbaa !2918
  %43 = icmp eq i8 %42, 0, !dbg !10330
  br i1 %43, label %59, label %33, !dbg !10331, !llvm.loop !10337

; <label>:44:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i8* %16, metadata !10294, metadata !DIExpression()), !dbg !10316
  %45 = load i8, i8* %16, align 1, !dbg !10339, !tbaa !2918
  %46 = icmp eq i8 %45, 0, !dbg !10342
  br i1 %46, label %59, label %47, !dbg !10343

; <label>:47:                                     ; preds = %44
  %48 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %49 = bitcast %union.anon* %48 to %struct.listvar_S**
  br label %50, !dbg !10343

; <label>:50:                                     ; preds = %47, %50
  %51 = phi i8 [ %45, %47 ], [ %57, %50 ]
  %52 = phi i8* [ %16, %47 ], [ %56, %50 ]
  call void @llvm.dbg.value(metadata i8* %52, metadata !10294, metadata !DIExpression()), !dbg !10316
  %53 = load %struct.listvar_S*, %struct.listvar_S** %49, align 8, !dbg !10344, !tbaa !2918
  %54 = zext i8 %51 to i64, !dbg !10345
  %55 = tail call i32 @list_append_number(%struct.listvar_S* %53, i64 %54) #9, !dbg !10346
  %56 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !10347
  call void @llvm.dbg.value(metadata i8* %56, metadata !10294, metadata !DIExpression()), !dbg !10316
  %57 = load i8, i8* %56, align 1, !dbg !10339, !tbaa !2918
  %58 = icmp eq i8 %57, 0, !dbg !10342
  br i1 %58, label %59, label %50, !dbg !10343, !llvm.loop !10348

; <label>:59:                                     ; preds = %50, %33, %44, %20, %2
  ret void, !dbg !10350
}

; Function Attrs: nounwind uwtable
define internal void @f_str2nr(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10351 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10353, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10354, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 10, metadata !10355, metadata !DIExpression()), !dbg !10362
  %4 = bitcast i64* %3 to i8*, !dbg !10363
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !10363
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10364
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10365
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %5, i64 0, i32 0, !dbg !10367
  %7 = load i32, i32* %6, align 8, !dbg !10367, !tbaa !3221
  %8 = icmp eq i32 %7, 0, !dbg !10368
  br i1 %8, label %28, label %9, !dbg !10369

; <label>:9:                                      ; preds = %2
  %10 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %5) #9, !dbg !10370
  %11 = trunc i64 %10 to i32, !dbg !10372
  call void @llvm.dbg.value(metadata i32 %11, metadata !10355, metadata !DIExpression()), !dbg !10362
  %12 = add i32 %11, -2, !dbg !10373
  %13 = lshr i32 %12, 1, !dbg !10373
  %14 = shl i32 %12, 31, !dbg !10373
  %15 = or i32 %13, %14, !dbg !10373
  switch i32 %15, label %16 [
    i32 7, label %19
    i32 4, label %19
    i32 3, label %19
    i32 0, label %19
  ], !dbg !10373

; <label>:16:                                     ; preds = %9
  %17 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i32 5) #9, !dbg !10375
  %18 = tail call i32 @emsg(i8* %17) #9, !dbg !10377
  br label %54, !dbg !10378

; <label>:19:                                     ; preds = %9, %9, %9, %9
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10379
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %20, i64 0, i32 0, !dbg !10381
  %22 = load i32, i32* %21, align 8, !dbg !10381, !tbaa !3221
  %23 = icmp eq i32 %22, 0, !dbg !10382
  br i1 %23, label %28, label %24, !dbg !10383

; <label>:24:                                     ; preds = %19
  %25 = tail call i64 @tv_get_bool(%struct.typval_T* nonnull %20) #9, !dbg !10384
  %26 = icmp eq i64 %25, 0, !dbg !10384
  %27 = select i1 %26, i32 0, i32 16, !dbg !10385
  br label %28, !dbg !10385

; <label>:28:                                     ; preds = %24, %19, %2
  %29 = phi i32 [ 0, %19 ], [ 0, %2 ], [ %27, %24 ]
  %30 = phi i32 [ %11, %19 ], [ 10, %2 ], [ %11, %24 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !10355, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata i32 %29, metadata !10358, metadata !DIExpression()), !dbg !10364
  %31 = tail call i8* @tv_get_string_strict(%struct.typval_T* nonnull %0) #9, !dbg !10386
  %32 = tail call i8* @skipwhite(i8* %31) #9, !dbg !10387
  call void @llvm.dbg.value(metadata i8* %32, metadata !10356, metadata !DIExpression()), !dbg !10388
  %33 = load i8, i8* %32, align 1, !dbg !10389, !tbaa !2918
  %34 = icmp eq i8 %33, 45, !dbg !10390
  switch i8 %33, label %38 [
    i8 45, label %35
    i8 43, label %35
  ], !dbg !10391

; <label>:35:                                     ; preds = %28, %28
  %36 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !10393
  %37 = tail call i8* @skipwhite(i8* nonnull %36) #9, !dbg !10394
  call void @llvm.dbg.value(metadata i8* %37, metadata !10356, metadata !DIExpression()), !dbg !10388
  br label %38, !dbg !10395

; <label>:38:                                     ; preds = %28, %35
  %39 = phi i8* [ %37, %35 ], [ %32, %28 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !10356, metadata !DIExpression()), !dbg !10388
  switch i32 %30, label %46 [
    i32 2, label %40
    i32 8, label %42
    i32 16, label %44
  ], !dbg !10396

; <label>:40:                                     ; preds = %38
  %41 = or i32 %29, 129, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %41, metadata !10358, metadata !DIExpression()), !dbg !10364
  br label %46, !dbg !10399

; <label>:42:                                     ; preds = %38
  %43 = or i32 %29, 138, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %43, metadata !10358, metadata !DIExpression()), !dbg !10364
  br label %46, !dbg !10401

; <label>:44:                                     ; preds = %38
  %45 = or i32 %29, 132, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %45, metadata !10358, metadata !DIExpression()), !dbg !10364
  br label %46, !dbg !10403

; <label>:46:                                     ; preds = %38, %44, %42, %40
  %47 = phi i32 [ %29, %38 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ]
  call void @llvm.dbg.value(metadata i32 %47, metadata !10358, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.value(metadata i64* %3, metadata !10357, metadata !DIExpression()), !dbg !10404
  call void @vim_str2nr(i8* %39, i32* null, i32* null, i32 %47, i64* nonnull %3, i64* null, i32 0, i32 0) #9, !dbg !10405
  %48 = load i64, i64* %3, align 8, !tbaa !3310
  call void @llvm.dbg.value(metadata i64 %48, metadata !10357, metadata !DIExpression()), !dbg !10404
  br i1 %34, label %49, label %52, !dbg !10406

; <label>:49:                                     ; preds = %46
  %50 = sub nsw i64 0, %48, !dbg !10407
  %51 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10409
  store i64 %50, i64* %51, align 8, !dbg !10410, !tbaa !2918
  br label %54, !dbg !10411

; <label>:52:                                     ; preds = %46
  %53 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10412
  store i64 %48, i64* %53, align 8, !dbg !10413, !tbaa !2918
  br label %54

; <label>:54:                                     ; preds = %49, %52, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !10414
  ret void, !dbg !10414
}

; Function Attrs: nounwind uwtable
define internal void @f_strcharlen(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10415 {
  %3 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10417, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10418, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10421, metadata !DIExpression()) #9, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10424, metadata !DIExpression()) #9, !dbg !10434
  call void @llvm.dbg.value(metadata i32 1, metadata !10425, metadata !DIExpression()) #9, !dbg !10435
  %4 = bitcast i8** %3 to i8*, !dbg !10436
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9, !dbg !10436
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10437
  call void @llvm.dbg.value(metadata i8* %5, metadata !10426, metadata !DIExpression()) #9, !dbg !10438
  store i8* %5, i8** %3, align 8, !dbg !10438, !tbaa !2783
  call void @llvm.dbg.value(metadata i64 0, metadata !10427, metadata !DIExpression()) #9, !dbg !10439
  call void @llvm.dbg.value(metadata i32 (i8**)* @mb_ptr2char_adv, metadata !10428, metadata !DIExpression()) #9, !dbg !10440
  call void @llvm.dbg.value(metadata i64 0, metadata !10427, metadata !DIExpression()) #9, !dbg !10439
  call void @llvm.dbg.value(metadata i8* %5, metadata !10426, metadata !DIExpression()) #9, !dbg !10438
  %6 = load i8, i8* %5, align 1, !dbg !10441, !tbaa !2918
  %7 = icmp eq i8 %6, 0, !dbg !10442
  br i1 %7, label %16, label %8, !dbg !10443

; <label>:8:                                      ; preds = %2
  br label %9, !dbg !10444

; <label>:9:                                      ; preds = %8, %9
  %10 = phi i64 [ %12, %9 ], [ 0, %8 ]
  call void @llvm.dbg.value(metadata i8** %3, metadata !10426, metadata !DIExpression()) #9, !dbg !10438
  call void @llvm.dbg.value(metadata i64 %10, metadata !10427, metadata !DIExpression()) #9, !dbg !10439
  %11 = call i32 @mb_ptr2char_adv(i8** nonnull %3) #9, !dbg !10444, !callees !10446
  %12 = add nuw nsw i64 %10, 1, !dbg !10447
  call void @llvm.dbg.value(metadata i64 %12, metadata !10427, metadata !DIExpression()) #9, !dbg !10439
  %13 = load i8*, i8** %3, align 8, !dbg !10448, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %13, metadata !10426, metadata !DIExpression()) #9, !dbg !10438
  %14 = load i8, i8* %13, align 1, !dbg !10441, !tbaa !2918
  %15 = icmp eq i8 %14, 0, !dbg !10442
  br i1 %15, label %16, label %9, !dbg !10443, !llvm.loop !10449

; <label>:16:                                     ; preds = %9, %2
  %17 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10452
  store i64 %17, i64* %18, align 8, !dbg !10453, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: nounwind uwtable
define internal void @f_strcharpart(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10456 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10458, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10459, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32 0, metadata !10462, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 0, metadata !10464, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 0, metadata !10465, metadata !DIExpression()), !dbg !10478
  %4 = bitcast i32* %3 to i8*, !dbg !10479
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10479
  call void @llvm.dbg.value(metadata i32 0, metadata !10467, metadata !DIExpression()), !dbg !10480
  store i32 0, i32* %3, align 4, !dbg !10480, !tbaa !2904
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10481
  call void @llvm.dbg.value(metadata i8* %5, metadata !10460, metadata !DIExpression()), !dbg !10482
  %6 = tail call i64 @strlen(i8* %5) #10, !dbg !10483
  %7 = trunc i64 %6 to i32, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %7, metadata !10466, metadata !DIExpression()), !dbg !10485
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10486
  call void @llvm.dbg.value(metadata i32* %3, metadata !10467, metadata !DIExpression()), !dbg !10480
  %9 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %8, i32* nonnull %3) #9, !dbg !10487
  %10 = trunc i64 %9 to i32, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10489
  %11 = load i32, i32* %3, align 4, !dbg !10490, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %11, metadata !10467, metadata !DIExpression()), !dbg !10480
  %12 = icmp eq i32 %11, 0, !dbg !10490
  br i1 %12, label %13, label %111, !dbg !10491

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10492
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !10494
  %16 = load i32, i32* %15, align 8, !dbg !10494, !tbaa !3221
  %17 = icmp eq i32 %16, 0, !dbg !10495
  br i1 %17, label %30, label %18, !dbg !10496

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !10497
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %19, i64 0, i32 0, !dbg !10498
  %21 = load i32, i32* %20, align 8, !dbg !10498, !tbaa !3221
  %22 = icmp eq i32 %21, 0, !dbg !10499
  br i1 %22, label %30, label %23, !dbg !10500

; <label>:23:                                     ; preds = %18
  %24 = call i64 @tv_get_bool(%struct.typval_T* nonnull %19) #9, !dbg !10501
  %25 = trunc i64 %24 to i32, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %25, metadata !10464, metadata !DIExpression()), !dbg !10477
  %26 = icmp ugt i32 %25, 1, !dbg !10503
  br i1 %26, label %27, label %30, !dbg !10503

; <label>:27:                                     ; preds = %23
  %28 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_using_number_as_bool_nr, i64 0, i64 0), i32 5) #9, !dbg !10505
  %29 = call i32 (i8*, ...) @semsg(i8* %28, i32 %25) #9, !dbg !10507
  br label %135, !dbg !10508

; <label>:30:                                     ; preds = %18, %13, %23
  %31 = phi i32 [ %25, %23 ], [ 0, %18 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %31, metadata !10464, metadata !DIExpression()), !dbg !10477
  %32 = icmp sgt i32 %10, 0, !dbg !10509
  br i1 %32, label %33, label %64, !dbg !10511

; <label>:33:                                     ; preds = %30
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 0, metadata !10462, metadata !DIExpression()), !dbg !10476
  %34 = icmp sgt i32 %7, 0, !dbg !10512
  br i1 %34, label %35, label %64, !dbg !10513

; <label>:35:                                     ; preds = %33
  %36 = icmp eq i32 %31, 0
  br label %37, !dbg !10513

; <label>:37:                                     ; preds = %35, %57
  %38 = phi i32 [ %10, %35 ], [ %60, %57 ]
  %39 = phi i32 [ 0, %35 ], [ %59, %57 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !10462, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %38, metadata !10461, metadata !DIExpression()), !dbg !10489
  br i1 %36, label %45, label %40, !dbg !10514

; <label>:40:                                     ; preds = %37
  %41 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10516, !tbaa !2783
  %42 = sext i32 %39 to i64, !dbg !10518
  %43 = getelementptr inbounds i8, i8* %5, i64 %42, !dbg !10518
  %44 = call i32 %41(i8* %43) #9, !dbg !10516
  br label %57, !dbg !10519

; <label>:45:                                     ; preds = %37
  %46 = load i32, i32* @enc_utf8, align 4, !dbg !10520, !tbaa !2904
  %47 = icmp eq i32 %46, 0, !dbg !10520
  br i1 %47, label %52, label %48, !dbg !10520

; <label>:48:                                     ; preds = %45
  %49 = sext i32 %39 to i64, !dbg !10520
  %50 = getelementptr inbounds i8, i8* %5, i64 %49, !dbg !10520
  %51 = call i32 @utf_ptr2len(i8* %50) #9, !dbg !10520
  br label %57, !dbg !10520

; <label>:52:                                     ; preds = %45
  %53 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10520, !tbaa !2783
  %54 = sext i32 %39 to i64, !dbg !10520
  %55 = getelementptr inbounds i8, i8* %5, i64 %54, !dbg !10520
  %56 = call i32 %53(i8* %55) #9, !dbg !10520
  br label %57, !dbg !10520

; <label>:57:                                     ; preds = %48, %52, %40
  %58 = phi i32 [ %44, %40 ], [ %51, %48 ], [ %56, %52 ]
  %59 = add nsw i32 %58, %39
  %60 = add nsw i32 %38, -1, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %60, metadata !10461, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %59, metadata !10462, metadata !DIExpression()), !dbg !10476
  %61 = icmp sgt i32 %38, 1, !dbg !10522
  %62 = icmp slt i32 %59, %7, !dbg !10512
  %63 = and i1 %62, %61, !dbg !10513
  br i1 %63, label %37, label %64, !dbg !10513, !llvm.loop !10523

; <label>:64:                                     ; preds = %57, %33, %30
  %65 = phi i32 [ %10, %30 ], [ 0, %33 ], [ %59, %57 ]
  call void @llvm.dbg.value(metadata i32 %65, metadata !10462, metadata !DIExpression()), !dbg !10476
  %66 = load i32, i32* %15, align 8, !dbg !10526, !tbaa !3221
  %67 = icmp eq i32 %66, 0, !dbg !10527
  br i1 %67, label %109, label %68, !dbg !10528

; <label>:68:                                     ; preds = %64
  %69 = call i64 @tv_get_number(%struct.typval_T* nonnull %14) #9, !dbg !10529
  %70 = trunc i64 %69 to i32, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %70, metadata !10463, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10465, metadata !DIExpression()), !dbg !10478
  %71 = icmp sgt i32 %70, 0, !dbg !10532
  br i1 %71, label %72, label %111, !dbg !10533

; <label>:72:                                     ; preds = %68
  %73 = icmp eq i32 %31, 0
  br label %74, !dbg !10533

; <label>:74:                                     ; preds = %72, %105
  %75 = phi i32 [ 0, %72 ], [ %106, %105 ]
  %76 = phi i32 [ %70, %72 ], [ %107, %105 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !10463, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 %75, metadata !10465, metadata !DIExpression()), !dbg !10478
  %77 = add nsw i32 %75, %65, !dbg !10534
  %78 = icmp slt i32 %77, %7, !dbg !10535
  br i1 %78, label %79, label %111, !dbg !10536

; <label>:79:                                     ; preds = %74
  call void @llvm.dbg.value(metadata i32 %77, metadata !10468, metadata !DIExpression()), !dbg !10537
  %80 = icmp slt i32 %77, 0, !dbg !10538
  br i1 %80, label %81, label %83, !dbg !10540

; <label>:81:                                     ; preds = %79
  %82 = add nsw i32 %75, 1, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %82, metadata !10465, metadata !DIExpression()), !dbg !10478
  br label %105, !dbg !10542

; <label>:83:                                     ; preds = %79
  br i1 %73, label %90, label %84, !dbg !10543

; <label>:84:                                     ; preds = %83
  %85 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10545, !tbaa !2783
  %86 = sext i32 %77 to i64, !dbg !10547
  %87 = getelementptr inbounds i8, i8* %5, i64 %86, !dbg !10547
  %88 = call i32 %85(i8* %87) #9, !dbg !10545
  %89 = add nsw i32 %88, %75, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %89, metadata !10465, metadata !DIExpression()), !dbg !10478
  br label %105, !dbg !10549

; <label>:90:                                     ; preds = %83
  %91 = load i32, i32* @enc_utf8, align 4, !dbg !10550, !tbaa !2904
  %92 = icmp eq i32 %91, 0, !dbg !10550
  br i1 %92, label %97, label %93, !dbg !10550

; <label>:93:                                     ; preds = %90
  %94 = sext i32 %77 to i64, !dbg !10550
  %95 = getelementptr inbounds i8, i8* %5, i64 %94, !dbg !10550
  %96 = call i32 @utf_ptr2len(i8* %95) #9, !dbg !10550
  br label %102, !dbg !10550

; <label>:97:                                     ; preds = %90
  %98 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10550, !tbaa !2783
  %99 = sext i32 %77 to i64, !dbg !10550
  %100 = getelementptr inbounds i8, i8* %5, i64 %99, !dbg !10550
  %101 = call i32 %98(i8* %100) #9, !dbg !10550
  br label %102, !dbg !10550

; <label>:102:                                    ; preds = %97, %93
  %103 = phi i32 [ %96, %93 ], [ %101, %97 ], !dbg !10550
  %104 = add nsw i32 %103, %75, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %104, metadata !10465, metadata !DIExpression()), !dbg !10478
  br label %105

; <label>:105:                                    ; preds = %84, %102, %81
  %106 = phi i32 [ %82, %81 ], [ %89, %84 ], [ %104, %102 ]
  %107 = add nsw i32 %76, -1, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %106, metadata !10465, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %107, metadata !10463, metadata !DIExpression()), !dbg !10531
  %108 = icmp sgt i32 %76, 1, !dbg !10532
  br i1 %108, label %74, label %111, !dbg !10533, !llvm.loop !10553

; <label>:109:                                    ; preds = %64
  %110 = sub nsw i32 %7, %65, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %110, metadata !10465, metadata !DIExpression()), !dbg !10478
  br label %111

; <label>:111:                                    ; preds = %74, %105, %68, %2, %109
  %112 = phi i32 [ 0, %2 ], [ %110, %109 ], [ 0, %68 ], [ %75, %74 ], [ %106, %105 ]
  %113 = phi i32 [ 0, %2 ], [ %65, %109 ], [ %65, %68 ], [ %65, %105 ], [ %65, %74 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !10462, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %112, metadata !10465, metadata !DIExpression()), !dbg !10478
  %114 = icmp slt i32 %113, 0, !dbg !10556
  call void @llvm.dbg.value(metadata i32 0, metadata !10462, metadata !DIExpression()), !dbg !10476
  %115 = icmp sgt i32 %113, %7, !dbg !10558
  %116 = select i1 %115, i32 %7, i32 %113, !dbg !10560
  %117 = select i1 %114, i32 %113, i32 0, !dbg !10561
  %118 = add nsw i32 %117, %112, !dbg !10561
  %119 = select i1 %114, i32 0, i32 %116, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %119, metadata !10462, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %118, metadata !10465, metadata !DIExpression()), !dbg !10478
  %120 = icmp slt i32 %118, 0, !dbg !10562
  br i1 %120, label %127, label %121, !dbg !10564

; <label>:121:                                    ; preds = %111
  %122 = add nsw i32 %119, %118, !dbg !10565
  %123 = icmp sgt i32 %122, %7, !dbg !10567
  %124 = sub nsw i32 %7, %119, !dbg !10568
  %125 = select i1 %123, i32 %124, i32 %118, !dbg !10569
  %126 = sext i32 %125 to i64, !dbg !10569
  br label %127, !dbg !10569

; <label>:127:                                    ; preds = %121, %111
  %128 = phi i64 [ 0, %111 ], [ %126, %121 ]
  %129 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !10570
  store i32 7, i32* %129, align 8, !dbg !10571, !tbaa !3221
  %130 = sext i32 %119 to i64, !dbg !10572
  %131 = getelementptr inbounds i8, i8* %5, i64 %130, !dbg !10572
  %132 = call i8* @vim_strnsave(i8* %131, i64 %128) #9, !dbg !10573
  %133 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10574
  %134 = bitcast %union.anon* %133 to i8**, !dbg !10575
  store i8* %132, i8** %134, align 8, !dbg !10576, !tbaa !2918
  br label %135, !dbg !10577

; <label>:135:                                    ; preds = %127, %27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10577
  ret void, !dbg !10577
}

; Function Attrs: nounwind uwtable
define internal void @f_strchars(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10578 {
  %3 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10580, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10581, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i64 0, metadata !10582, metadata !DIExpression()), !dbg !10585
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10586
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %4, i64 0, i32 0, !dbg !10588
  %6 = load i32, i32* %5, align 8, !dbg !10588, !tbaa !3221
  %7 = icmp eq i32 %6, 0, !dbg !10589
  br i1 %7, label %14, label %8, !dbg !10590

; <label>:8:                                      ; preds = %2
  %9 = tail call i64 @tv_get_bool(%struct.typval_T* nonnull %4) #9, !dbg !10591
  call void @llvm.dbg.value(metadata i64 %9, metadata !10582, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata i64 %9, metadata !10582, metadata !DIExpression()), !dbg !10585
  %10 = icmp ugt i64 %9, 1, !dbg !10592
  br i1 %10, label %11, label %14, !dbg !10592

; <label>:11:                                     ; preds = %8
  %12 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_using_number_as_bool_nr, i64 0, i64 0), i32 5) #9, !dbg !10594
  %13 = tail call i32 (i8*, ...) @semsg(i8* %12, i64 %9) #9, !dbg !10595
  br label %34, !dbg !10595

; <label>:14:                                     ; preds = %2, %8
  %15 = phi i64 [ %9, %8 ], [ 0, %2 ]
  %16 = trunc i64 %15 to i32, !dbg !10596
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10421, metadata !DIExpression()) #9, !dbg !10597
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10424, metadata !DIExpression()) #9, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %16, metadata !10425, metadata !DIExpression()) #9, !dbg !10600
  %17 = bitcast i8** %3 to i8*, !dbg !10601
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !dbg !10601
  %18 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !10602
  call void @llvm.dbg.value(metadata i8* %18, metadata !10426, metadata !DIExpression()) #9, !dbg !10603
  store i8* %18, i8** %3, align 8, !dbg !10603, !tbaa !2783
  call void @llvm.dbg.value(metadata i64 0, metadata !10427, metadata !DIExpression()) #9, !dbg !10604
  %19 = icmp eq i32 %16, 0, !dbg !10605
  %20 = select i1 %19, i32 (i8**)* @mb_cptr2char_adv, i32 (i8**)* @mb_ptr2char_adv, !dbg !10605
  call void @llvm.dbg.value(metadata i32 (i8**)* %20, metadata !10428, metadata !DIExpression()) #9, !dbg !10606
  call void @llvm.dbg.value(metadata i64 0, metadata !10427, metadata !DIExpression()) #9, !dbg !10604
  call void @llvm.dbg.value(metadata i8* %18, metadata !10426, metadata !DIExpression()) #9, !dbg !10603
  %21 = load i8, i8* %18, align 1, !dbg !10607, !tbaa !2918
  %22 = icmp eq i8 %21, 0, !dbg !10608
  br i1 %22, label %31, label %23, !dbg !10609

; <label>:23:                                     ; preds = %14
  br label %24, !dbg !10610

; <label>:24:                                     ; preds = %23, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %23 ]
  call void @llvm.dbg.value(metadata i8** %3, metadata !10426, metadata !DIExpression()) #9, !dbg !10603
  call void @llvm.dbg.value(metadata i64 %25, metadata !10427, metadata !DIExpression()) #9, !dbg !10604
  %26 = call i32 %20(i8** nonnull %3) #9, !dbg !10610, !callees !10446
  %27 = add nuw nsw i64 %25, 1, !dbg !10611
  call void @llvm.dbg.value(metadata i64 %27, metadata !10427, metadata !DIExpression()) #9, !dbg !10604
  %28 = load i8*, i8** %3, align 8, !dbg !10612, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %28, metadata !10426, metadata !DIExpression()) #9, !dbg !10603
  %29 = load i8, i8* %28, align 1, !dbg !10607, !tbaa !2918
  %30 = icmp eq i8 %29, 0, !dbg !10608
  br i1 %30, label %31, label %24, !dbg !10609, !llvm.loop !10449

; <label>:31:                                     ; preds = %24, %14
  %32 = phi i64 [ 0, %14 ], [ %27, %24 ]
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10613
  store i64 %32, i64* %33, align 8, !dbg !10614, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !dbg !10615
  br label %34

; <label>:34:                                     ; preds = %31, %11
  ret void, !dbg !10616
}

; Function Attrs: nounwind uwtable
define internal void @f_strdisplaywidth(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10617 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10619, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10620, metadata !DIExpression()), !dbg !10624
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10625
  call void @llvm.dbg.value(metadata i8* %3, metadata !10621, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.value(metadata i32 0, metadata !10622, metadata !DIExpression()), !dbg !10627
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10628
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %4, i64 0, i32 0, !dbg !10630
  %6 = load i32, i32* %5, align 8, !dbg !10630, !tbaa !3221
  %7 = icmp eq i32 %6, 0, !dbg !10631
  br i1 %7, label %11, label %8, !dbg !10632

; <label>:8:                                      ; preds = %2
  %9 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %4) #9, !dbg !10633
  %10 = trunc i64 %9 to i32, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %10, metadata !10622, metadata !DIExpression()), !dbg !10627
  br label %11, !dbg !10635

; <label>:11:                                     ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !10622, metadata !DIExpression()), !dbg !10627
  %13 = tail call i32 @linetabsize_col(i32 %12, i8* %3) #9, !dbg !10636
  %14 = sub nsw i32 %13, %12, !dbg !10637
  %15 = sext i32 %14 to i64, !dbg !10638
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10639
  store i64 %15, i64* %16, align 8, !dbg !10640, !tbaa !2918
  ret void, !dbg !10641
}

declare void @f_strftime(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_strgetchar(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10642 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10644, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10645, metadata !DIExpression()), !dbg !10652
  %4 = bitcast i32* %3 to i8*, !dbg !10653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10653
  call void @llvm.dbg.value(metadata i32 0, metadata !10648, metadata !DIExpression()), !dbg !10654
  store i32 0, i32* %3, align 4, !dbg !10654, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 0, metadata !10650, metadata !DIExpression()), !dbg !10655
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10656
  store i64 -1, i64* %5, align 8, !dbg !10657, !tbaa !2918
  %6 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !10658
  call void @llvm.dbg.value(metadata i8* %6, metadata !10646, metadata !DIExpression()), !dbg !10659
  %7 = icmp eq i8* %6, null, !dbg !10660
  br i1 %7, label %50, label %8, !dbg !10662

; <label>:8:                                      ; preds = %2
  %9 = tail call i64 @strlen(i8* nonnull %6) #10, !dbg !10663
  %10 = trunc i64 %9 to i32, !dbg !10664
  call void @llvm.dbg.value(metadata i32 %10, metadata !10647, metadata !DIExpression()), !dbg !10665
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10666
  call void @llvm.dbg.value(metadata i32* %3, metadata !10648, metadata !DIExpression()), !dbg !10654
  %12 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %11, i32* nonnull %3) #9, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %16, metadata !10649, metadata !DIExpression()), !dbg !10668
  %13 = load i32, i32* %3, align 4, !dbg !10669, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %13, metadata !10648, metadata !DIExpression()), !dbg !10654
  %14 = icmp eq i32 %13, 0, !dbg !10669
  br i1 %14, label %15, label %50, !dbg !10671

; <label>:15:                                     ; preds = %8
  %16 = trunc i64 %12 to i32, !dbg !10672
  call void @llvm.dbg.value(metadata i32 0, metadata !10650, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 %16, metadata !10649, metadata !DIExpression()), !dbg !10668
  %17 = icmp sgt i32 %16, -1, !dbg !10673
  %18 = icmp sgt i32 %10, 0, !dbg !10674
  %19 = and i1 %17, %18, !dbg !10675
  br i1 %19, label %20, label %50, !dbg !10675

; <label>:20:                                     ; preds = %15
  br label %21, !dbg !10676

; <label>:21:                                     ; preds = %20, %44
  %22 = phi i32 [ %46, %44 ], [ 0, %20 ]
  %23 = phi i32 [ %32, %44 ], [ %16, %20 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !10649, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata i32 %22, metadata !10650, metadata !DIExpression()), !dbg !10655
  %24 = icmp eq i32 %23, 0, !dbg !10676
  br i1 %24, label %25, label %31, !dbg !10679

; <label>:25:                                     ; preds = %21
  %26 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !10680, !tbaa !2783
  %27 = sext i32 %22 to i64, !dbg !10682
  %28 = getelementptr inbounds i8, i8* %6, i64 %27, !dbg !10682
  %29 = call i32 %26(i8* nonnull %28) #9, !dbg !10680
  %30 = sext i32 %29 to i64, !dbg !10680
  store i64 %30, i64* %5, align 8, !dbg !10683, !tbaa !2918
  br label %50, !dbg !10684

; <label>:31:                                     ; preds = %21
  %32 = add nsw i32 %23, -1, !dbg !10685
  %33 = load i32, i32* @enc_utf8, align 4, !dbg !10686, !tbaa !2904
  %34 = icmp eq i32 %33, 0, !dbg !10686
  br i1 %34, label %39, label %35, !dbg !10686

; <label>:35:                                     ; preds = %31
  %36 = sext i32 %22 to i64, !dbg !10686
  %37 = getelementptr inbounds i8, i8* %6, i64 %36, !dbg !10686
  %38 = call i32 @utf_ptr2len(i8* nonnull %37) #9, !dbg !10686
  br label %44, !dbg !10686

; <label>:39:                                     ; preds = %31
  %40 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10686, !tbaa !2783
  %41 = sext i32 %22 to i64, !dbg !10686
  %42 = getelementptr inbounds i8, i8* %6, i64 %41, !dbg !10686
  %43 = call i32 %40(i8* nonnull %42) #9, !dbg !10686
  br label %44, !dbg !10686

; <label>:44:                                     ; preds = %39, %35
  %45 = phi i32 [ %38, %35 ], [ %43, %39 ], !dbg !10686
  %46 = add nsw i32 %45, %22, !dbg !10687
  call void @llvm.dbg.value(metadata i32 %46, metadata !10650, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 %32, metadata !10649, metadata !DIExpression()), !dbg !10668
  %47 = icmp sgt i32 %23, 0, !dbg !10673
  %48 = icmp slt i32 %46, %10, !dbg !10674
  %49 = and i1 %47, %48, !dbg !10675
  br i1 %49, label %21, label %50, !dbg !10675, !llvm.loop !10688

; <label>:50:                                     ; preds = %44, %15, %25, %8, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10691
  ret void, !dbg !10691
}

; Function Attrs: nounwind uwtable
define internal void @f_stridx(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10692 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10694, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10695, metadata !DIExpression()), !dbg !10706
  %5 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !10707
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %5) #9, !dbg !10707
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !10696, metadata !DIExpression()), !dbg !10708
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10709
  %7 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %6) #9, !dbg !10710
  call void @llvm.dbg.value(metadata i8* %7, metadata !10697, metadata !DIExpression()), !dbg !10711
  %8 = call i8* @tv_get_string_buf_chk(%struct.typval_T* %0, i8* nonnull %5) #9, !dbg !10712
  call void @llvm.dbg.value(metadata i8* %8, metadata !10698, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i8* %8, metadata !10699, metadata !DIExpression()), !dbg !10714
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10715
  store i64 -1, i64* %9, align 8, !dbg !10716, !tbaa !2918
  %10 = icmp eq i8* %7, null, !dbg !10717
  %11 = icmp eq i8* %8, null, !dbg !10719
  %12 = or i1 %10, %11, !dbg !10720
  br i1 %12, label %43, label %13, !dbg !10720

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10721
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !10722
  %16 = load i32, i32* %15, align 8, !dbg !10722, !tbaa !3221
  %17 = icmp eq i32 %16, 0, !dbg !10723
  br i1 %17, label %35, label %18, !dbg !10724

; <label>:18:                                     ; preds = %13
  %19 = bitcast i32* %4 to i8*, !dbg !10725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9, !dbg !10725
  call void @llvm.dbg.value(metadata i32 0, metadata !10702, metadata !DIExpression()), !dbg !10726
  store i32 0, i32* %4, align 4, !dbg !10726, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %4, metadata !10702, metadata !DIExpression()), !dbg !10726
  %20 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %14, i32* nonnull %4) #9, !dbg !10727
  %21 = trunc i64 %20 to i32, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %21, metadata !10701, metadata !DIExpression()), !dbg !10729
  %22 = load i32, i32* %4, align 4, !dbg !10730, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %22, metadata !10702, metadata !DIExpression()), !dbg !10726
  %23 = icmp eq i32 %22, 0, !dbg !10730
  br i1 %23, label %24, label %28, !dbg !10732

; <label>:24:                                     ; preds = %18
  %25 = call i64 @strlen(i8* nonnull %8) #10, !dbg !10733
  %26 = trunc i64 %25 to i32, !dbg !10734
  %27 = icmp slt i32 %21, %26, !dbg !10735
  br i1 %27, label %29, label %28, !dbg !10736

; <label>:28:                                     ; preds = %24, %18
  call void @llvm.dbg.value(metadata i8* %34, metadata !10698, metadata !DIExpression()), !dbg !10713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9, !dbg !10737
  br label %43

; <label>:29:                                     ; preds = %24
  %30 = icmp sgt i32 %21, -1, !dbg !10738
  %31 = shl i64 %20, 32, !dbg !10740
  %32 = ashr exact i64 %31, 32, !dbg !10740
  %33 = getelementptr inbounds i8, i8* %8, i64 %32, !dbg !10740
  call void @llvm.dbg.value(metadata i8* %33, metadata !10698, metadata !DIExpression()), !dbg !10713
  %34 = select i1 %30, i8* %33, i8* %8, !dbg !10741
  call void @llvm.dbg.value(metadata i8* %34, metadata !10698, metadata !DIExpression()), !dbg !10713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9, !dbg !10737
  br label %35

; <label>:35:                                     ; preds = %29, %13
  %36 = phi i8* [ %34, %29 ], [ %8, %13 ]
  call void @llvm.dbg.value(metadata i8* %36, metadata !10698, metadata !DIExpression()), !dbg !10713
  %37 = call i8* @strstr(i8* %36, i8* nonnull %7) #10, !dbg !10742
  call void @llvm.dbg.value(metadata i8* %37, metadata !10700, metadata !DIExpression()), !dbg !10743
  %38 = icmp eq i8* %37, null, !dbg !10744
  br i1 %38, label %43, label %39, !dbg !10746

; <label>:39:                                     ; preds = %35
  %40 = ptrtoint i8* %37 to i64, !dbg !10747
  %41 = ptrtoint i8* %8 to i64, !dbg !10747
  %42 = sub i64 %40, %41, !dbg !10747
  store i64 %42, i64* %9, align 8, !dbg !10748, !tbaa !2918
  br label %43, !dbg !10749

; <label>:43:                                     ; preds = %28, %39, %35, %2
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %5) #9, !dbg !10750
  ret void, !dbg !10750
}

; Function Attrs: nounwind uwtable
define internal void @f_strlen(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10751 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10753, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10754, metadata !DIExpression()), !dbg !10756
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10757
  %4 = tail call i64 @strlen(i8* %3) #10, !dbg !10757
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10758
  store i64 %4, i64* %5, align 8, !dbg !10759, !tbaa !2918
  ret void, !dbg !10760
}

; Function Attrs: nounwind uwtable
define internal void @f_strpart(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10761 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10763, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10764, metadata !DIExpression()), !dbg !10774
  %4 = bitcast i32* %3 to i8*, !dbg !10775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10775
  call void @llvm.dbg.value(metadata i32 0, metadata !10769, metadata !DIExpression()), !dbg !10776
  store i32 0, i32* %3, align 4, !dbg !10776, !tbaa !2904
  %5 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10777
  call void @llvm.dbg.value(metadata i8* %5, metadata !10765, metadata !DIExpression()), !dbg !10778
  %6 = tail call i64 @strlen(i8* %5) #10, !dbg !10779
  %7 = trunc i64 %6 to i32, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %7, metadata !10768, metadata !DIExpression()), !dbg !10781
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10782
  call void @llvm.dbg.value(metadata i32* %3, metadata !10769, metadata !DIExpression()), !dbg !10776
  %9 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %8, i32* nonnull %3) #9, !dbg !10783
  %10 = trunc i64 %9 to i32, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %10, metadata !10766, metadata !DIExpression()), !dbg !10785
  %11 = load i32, i32* %3, align 4, !dbg !10786, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %11, metadata !10769, metadata !DIExpression()), !dbg !10776
  %12 = icmp eq i32 %11, 0, !dbg !10786
  br i1 %12, label %13, label %23, !dbg !10788

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10789
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !10791
  %16 = load i32, i32* %15, align 8, !dbg !10791, !tbaa !3221
  %17 = icmp eq i32 %16, 0, !dbg !10792
  br i1 %17, label %21, label %18, !dbg !10793

; <label>:18:                                     ; preds = %13
  %19 = call i64 @tv_get_number(%struct.typval_T* nonnull %14) #9, !dbg !10794
  %20 = trunc i64 %19 to i32, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %20, metadata !10767, metadata !DIExpression()), !dbg !10796
  br label %23, !dbg !10797

; <label>:21:                                     ; preds = %13
  %22 = sub nsw i32 %7, %10, !dbg !10798
  call void @llvm.dbg.value(metadata i32 %22, metadata !10767, metadata !DIExpression()), !dbg !10796
  br label %23

; <label>:23:                                     ; preds = %2, %18, %21
  %24 = phi i32 [ %20, %18 ], [ %22, %21 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !10767, metadata !DIExpression()), !dbg !10796
  %25 = icmp slt i32 %10, 0, !dbg !10799
  call void @llvm.dbg.value(metadata i32 0, metadata !10766, metadata !DIExpression()), !dbg !10785
  %26 = icmp slt i32 %7, %10, !dbg !10801
  %27 = select i1 %26, i32 %7, i32 %10, !dbg !10803
  %28 = select i1 %25, i32 %10, i32 0, !dbg !10804
  %29 = add nsw i32 %24, %28, !dbg !10804
  %30 = select i1 %25, i32 0, i32 %27, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %30, metadata !10766, metadata !DIExpression()), !dbg !10785
  call void @llvm.dbg.value(metadata i32 %29, metadata !10767, metadata !DIExpression()), !dbg !10796
  %31 = icmp slt i32 %29, 0, !dbg !10805
  br i1 %31, label %37, label %32, !dbg !10807

; <label>:32:                                     ; preds = %23
  %33 = add nsw i32 %29, %30, !dbg !10808
  %34 = icmp sgt i32 %33, %7, !dbg !10810
  %35 = sub nsw i32 %7, %30, !dbg !10811
  %36 = select i1 %34, i32 %35, i32 %29, !dbg !10812
  br label %37, !dbg !10812

; <label>:37:                                     ; preds = %32, %23
  %38 = phi i32 [ 0, %23 ], [ %36, %32 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !10767, metadata !DIExpression()), !dbg !10796
  %39 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 0, !dbg !10813
  %40 = load i32, i32* %39, align 8, !dbg !10813, !tbaa !3221
  %41 = icmp eq i32 %40, 0, !dbg !10814
  br i1 %41, label %66, label %42, !dbg !10815

; <label>:42:                                     ; preds = %37
  %43 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, i32 0, !dbg !10816
  %44 = load i32, i32* %43, align 8, !dbg !10816, !tbaa !3221
  %45 = icmp eq i32 %44, 0, !dbg !10817
  br i1 %45, label %66, label %46, !dbg !10818

; <label>:46:                                     ; preds = %42
  call void @llvm.dbg.value(metadata i32 %30, metadata !10770, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i32 %38, metadata !10767, metadata !DIExpression()), !dbg !10796
  %47 = icmp slt i32 %30, %7, !dbg !10820
  %48 = icmp sgt i32 %38, 0, !dbg !10823
  %49 = and i1 %48, %47, !dbg !10824
  br i1 %49, label %50, label %63, !dbg !10825

; <label>:50:                                     ; preds = %46
  br label %51, !dbg !10826

; <label>:51:                                     ; preds = %50, %51
  %52 = phi i32 [ %58, %51 ], [ %30, %50 ]
  %53 = phi i32 [ %59, %51 ], [ %38, %50 ]
  call void @llvm.dbg.value(metadata i32 %53, metadata !10767, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata i32 %52, metadata !10770, metadata !DIExpression()), !dbg !10819
  %54 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !10826, !tbaa !2783
  %55 = sext i32 %52 to i64, !dbg !10827
  %56 = getelementptr inbounds i8, i8* %5, i64 %55, !dbg !10827
  %57 = call i32 %54(i8* %56) #9, !dbg !10826
  %58 = add nsw i32 %57, %52, !dbg !10828
  %59 = add nsw i32 %53, -1, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %58, metadata !10770, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i32 %59, metadata !10767, metadata !DIExpression()), !dbg !10796
  %60 = icmp slt i32 %58, %7, !dbg !10820
  %61 = icmp sgt i32 %53, 1, !dbg !10823
  %62 = and i1 %61, %60, !dbg !10824
  br i1 %62, label %51, label %63, !dbg !10825, !llvm.loop !10830

; <label>:63:                                     ; preds = %51, %46
  %64 = phi i32 [ %30, %46 ], [ %58, %51 ]
  %65 = sub nsw i32 %64, %30, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %65, metadata !10767, metadata !DIExpression()), !dbg !10796
  br label %66, !dbg !10833

; <label>:66:                                     ; preds = %42, %37, %63
  %67 = phi i32 [ %65, %63 ], [ %38, %42 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %67, metadata !10767, metadata !DIExpression()), !dbg !10796
  %68 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !10834
  store i32 7, i32* %68, align 8, !dbg !10835, !tbaa !3221
  %69 = sext i32 %30 to i64, !dbg !10836
  %70 = getelementptr inbounds i8, i8* %5, i64 %69, !dbg !10836
  %71 = sext i32 %67 to i64, !dbg !10837
  %72 = call i8* @vim_strnsave(i8* %70, i64 %71) #9, !dbg !10838
  %73 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10839
  %74 = bitcast %union.anon* %73 to i8**, !dbg !10840
  store i8* %72, i8** %74, align 8, !dbg !10841, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10842
  ret void, !dbg !10842
}

declare void @f_strptime(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_strridx(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10843 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10845, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10846, metadata !DIExpression()), !dbg !10855
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !10856
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !10856
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !10847, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i8* null, metadata !10851, metadata !DIExpression()), !dbg !10858
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10859
  %6 = tail call i8* @tv_get_string_chk(%struct.typval_T* nonnull %5) #9, !dbg !10860
  call void @llvm.dbg.value(metadata i8* %6, metadata !10848, metadata !DIExpression()), !dbg !10861
  %7 = call i8* @tv_get_string_buf_chk(%struct.typval_T* %0, i8* nonnull %4) #9, !dbg !10862
  call void @llvm.dbg.value(metadata i8* %7, metadata !10849, metadata !DIExpression()), !dbg !10863
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10864
  store i64 -1, i64* %8, align 8, !dbg !10865, !tbaa !2918
  %9 = icmp eq i8* %6, null, !dbg !10866
  %10 = icmp eq i8* %7, null, !dbg !10868
  %11 = or i1 %9, %10, !dbg !10869
  br i1 %11, label %52, label %12, !dbg !10869

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !10870
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %13, i64 0, i32 0, !dbg !10872
  %15 = load i32, i32* %14, align 8, !dbg !10872, !tbaa !3221
  %16 = icmp eq i32 %15, 0, !dbg !10873
  br i1 %16, label %21, label %17, !dbg !10874

; <label>:17:                                     ; preds = %12
  %18 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %13, i32* null) #9, !dbg !10875
  %19 = trunc i64 %18 to i32, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %19, metadata !10853, metadata !DIExpression()), !dbg !10878
  %20 = icmp slt i32 %19, 0, !dbg !10879
  br i1 %20, label %52, label %23, !dbg !10881

; <label>:21:                                     ; preds = %12
  %22 = call i64 @strlen(i8* nonnull %7) #10, !dbg !10882
  br label %23

; <label>:23:                                     ; preds = %17, %21
  %24 = phi i64 [ %18, %17 ], [ %22, %21 ]
  %25 = load i8, i8* %6, align 1, !dbg !10883, !tbaa !2918
  %26 = icmp eq i8 %25, 0, !dbg !10885
  %27 = shl i64 %24, 32
  %28 = ashr exact i64 %27, 32
  %29 = getelementptr inbounds i8, i8* %7, i64 %28
  br i1 %26, label %45, label %30, !dbg !10886

; <label>:30:                                     ; preds = %23
  call void @llvm.dbg.value(metadata i8* %7, metadata !10850, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i8* %7, metadata !10850, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i8* null, metadata !10851, metadata !DIExpression()), !dbg !10858
  %31 = load i8, i8* %7, align 1, !dbg !10888, !tbaa !2918
  %32 = icmp eq i8 %31, 0, !dbg !10892
  br i1 %32, label %45, label %33, !dbg !10893

; <label>:33:                                     ; preds = %30
  br label %37, !dbg !10894

; <label>:34:                                     ; preds = %37
  call void @llvm.dbg.value(metadata i8* %44, metadata !10850, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i8* %40, metadata !10851, metadata !DIExpression()), !dbg !10858
  %35 = load i8, i8* %44, align 1, !dbg !10888, !tbaa !2918
  %36 = icmp eq i8 %35, 0, !dbg !10892
  br i1 %36, label %45, label %37, !dbg !10893, !llvm.loop !10896

; <label>:37:                                     ; preds = %33, %34
  %38 = phi i8* [ %44, %34 ], [ %7, %33 ]
  %39 = phi i8* [ %40, %34 ], [ null, %33 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !10851, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.value(metadata i8* %38, metadata !10850, metadata !DIExpression()), !dbg !10887
  %40 = call i8* @strstr(i8* nonnull %38, i8* %6) #10, !dbg !10894
  call void @llvm.dbg.value(metadata i8* %40, metadata !10850, metadata !DIExpression()), !dbg !10887
  %41 = icmp eq i8* %40, null, !dbg !10898
  %42 = icmp ugt i8* %40, %29, !dbg !10900
  %43 = or i1 %41, %42, !dbg !10901
  call void @llvm.dbg.value(metadata i8* %40, metadata !10851, metadata !DIExpression()), !dbg !10858
  %44 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !10902
  call void @llvm.dbg.value(metadata i8* %44, metadata !10850, metadata !DIExpression()), !dbg !10887
  br i1 %43, label %45, label %34, !dbg !10901

; <label>:45:                                     ; preds = %37, %34, %30, %23
  %46 = phi i8* [ %29, %23 ], [ null, %30 ], [ %39, %37 ], [ %40, %34 ]
  call void @llvm.dbg.value(metadata i8* %46, metadata !10851, metadata !DIExpression()), !dbg !10858
  %47 = icmp eq i8* %46, null, !dbg !10903
  %48 = ptrtoint i8* %46 to i64, !dbg !10905
  %49 = ptrtoint i8* %7 to i64, !dbg !10905
  %50 = sub i64 %48, %49, !dbg !10905
  %51 = select i1 %47, i64 -1, i64 %50, !dbg !10906
  store i64 %51, i64* %8, align 8, !tbaa !2918
  br label %52, !dbg !10907

; <label>:52:                                     ; preds = %17, %2, %45
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !10907
  ret void, !dbg !10907
}

; Function Attrs: nounwind uwtable
define internal void @f_strtrans(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10910, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10911, metadata !DIExpression()), !dbg !10913
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !10914
  store i32 7, i32* %3, align 8, !dbg !10915, !tbaa !3221
  %4 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10916
  %5 = tail call i8* @transstr(i8* %4) #9, !dbg !10917
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10918
  %7 = bitcast %union.anon* %6 to i8**, !dbg !10919
  store i8* %5, i8** %7, align 8, !dbg !10920, !tbaa !2918
  ret void, !dbg !10921
}

; Function Attrs: nounwind uwtable
define internal void @f_strwidth(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10922 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10924, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10925, metadata !DIExpression()), !dbg !10928
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !10929
  call void @llvm.dbg.value(metadata i8* %3, metadata !10926, metadata !DIExpression()), !dbg !10930
  %4 = tail call i32 @mb_string2cells(i8* %3, i32 -1) #9, !dbg !10931
  %5 = sext i32 %4 to i64, !dbg !10932
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !10933
  store i64 %5, i64* %6, align 8, !dbg !10934, !tbaa !2918
  ret void, !dbg !10935
}

; Function Attrs: nounwind uwtable
define internal void @f_submatch(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10936 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10938, metadata !DIExpression()), !dbg !10943
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10939, metadata !DIExpression()), !dbg !10944
  %4 = bitcast i32* %3 to i8*, !dbg !10945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10945
  call void @llvm.dbg.value(metadata i32 0, metadata !10940, metadata !DIExpression()), !dbg !10946
  store i32 0, i32* %3, align 4, !dbg !10946, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 0, metadata !10942, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32* %3, metadata !10940, metadata !DIExpression()), !dbg !10946
  %5 = call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* nonnull %3) #9, !dbg !10948
  %6 = trunc i64 %5 to i32, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %6, metadata !10941, metadata !DIExpression()), !dbg !10950
  %7 = load i32, i32* %3, align 4, !dbg !10951, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %7, metadata !10940, metadata !DIExpression()), !dbg !10946
  %8 = icmp eq i32 %7, 0, !dbg !10951
  br i1 %8, label %9, label %38, !dbg !10953

; <label>:9:                                      ; preds = %2
  %10 = icmp ugt i32 %6, 9, !dbg !10954
  br i1 %10, label %11, label %14, !dbg !10954

; <label>:11:                                     ; preds = %9
  %12 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.764, i64 0, i64 0), i32 5) #9, !dbg !10956
  %13 = call i32 (i8*, ...) @semsg(i8* %12, i32 %6) #9, !dbg !10958
  br label %38, !dbg !10959

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !10960
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %15, i64 0, i32 0, !dbg !10962
  %17 = load i32, i32* %16, align 8, !dbg !10962, !tbaa !3221
  %18 = icmp eq i32 %17, 0, !dbg !10963
  br i1 %18, label %19, label %21, !dbg !10964

; <label>:19:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i32 %26, metadata !10942, metadata !DIExpression()), !dbg !10947
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0
  br label %29, !dbg !10965

; <label>:21:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i32* %3, metadata !10940, metadata !DIExpression()), !dbg !10946
  %22 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %15, i32* nonnull %3) #9, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %26, metadata !10942, metadata !DIExpression()), !dbg !10947
  %23 = load i32, i32* %3, align 4, !dbg !10967, !tbaa !2904
  %24 = icmp eq i32 %23, 0, !dbg !10969
  call void @llvm.dbg.value(metadata i32 %26, metadata !10942, metadata !DIExpression()), !dbg !10947
  br i1 %24, label %25, label %38, !dbg !10970

; <label>:25:                                     ; preds = %21
  %26 = trunc i64 %22 to i32, !dbg !10971
  %27 = icmp eq i32 %26, 0, !dbg !10972
  %28 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0
  br i1 %27, label %29, label %34, !dbg !10965

; <label>:29:                                     ; preds = %19, %25
  %30 = phi i32* [ %20, %19 ], [ %28, %25 ]
  store i32 7, i32* %30, align 8, !dbg !10974, !tbaa !3221
  %31 = call i8* @reg_submatch(i32 %6) #9, !dbg !10976
  %32 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10977
  %33 = bitcast %union.anon* %32 to i8**, !dbg !10978
  store i8* %31, i8** %33, align 8, !dbg !10979, !tbaa !2918
  br label %38, !dbg !10980

; <label>:34:                                     ; preds = %25
  store i32 11, i32* %28, align 8, !dbg !10981, !tbaa !3221
  %35 = call %struct.listvar_S* @reg_submatch_list(i32 %6) #9, !dbg !10983
  %36 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !10984
  %37 = bitcast %union.anon* %36 to %struct.listvar_S**, !dbg !10985
  store %struct.listvar_S* %35, %struct.listvar_S** %37, align 8, !dbg !10986, !tbaa !2918
  br label %38

; <label>:38:                                     ; preds = %29, %34, %21, %2, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !10987
  ret void, !dbg !10987
}

; Function Attrs: nounwind uwtable
define internal void @f_substitute(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !10988 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  %5 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !10990, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !10991, metadata !DIExpression()), !dbg !11001
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !11002
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11002
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !10992, metadata !DIExpression()), !dbg !11003
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !11004
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11004
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !10993, metadata !DIExpression()), !dbg !11005
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0, !dbg !11006
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %8) #9, !dbg !11006
  call void @llvm.dbg.declare(metadata [65 x i8]* %5, metadata !10994, metadata !DIExpression()), !dbg !11007
  %9 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !11008
  call void @llvm.dbg.value(metadata i8* %9, metadata !10995, metadata !DIExpression()), !dbg !11009
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11010
  %11 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %10, i8* nonnull %6) #9, !dbg !11011
  call void @llvm.dbg.value(metadata i8* %11, metadata !10996, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i8* null, metadata !10997, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata %struct.typval_T* null, metadata !10998, metadata !DIExpression()), !dbg !11014
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !11015
  %13 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %12, i8* nonnull %8) #9, !dbg !11016
  call void @llvm.dbg.value(metadata i8* %13, metadata !10999, metadata !DIExpression()), !dbg !11017
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !11018
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !11020
  %16 = load i32, i32* %15, align 8, !dbg !11020, !tbaa !3221
  %17 = add i32 %16, -9, !dbg !11021
  %18 = icmp ult i32 %17, 2, !dbg !11021
  br i1 %18, label %21, label %19, !dbg !11021

; <label>:19:                                     ; preds = %2
  %20 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %14, i8* nonnull %7) #9, !dbg !11022
  call void @llvm.dbg.value(metadata i8* %20, metadata !10997, metadata !DIExpression()), !dbg !11013
  br label %21

; <label>:21:                                     ; preds = %2, %19
  %22 = phi %struct.typval_T* [ null, %19 ], [ %14, %2 ]
  %23 = phi i8* [ %20, %19 ], [ null, %2 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !10997, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata %struct.typval_T* %22, metadata !10998, metadata !DIExpression()), !dbg !11014
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11023
  store i32 7, i32* %24, align 8, !dbg !11024, !tbaa !3221
  %25 = icmp eq i8* %9, null, !dbg !11025
  %26 = icmp eq i8* %11, null, !dbg !11027
  %27 = or i1 %25, %26, !dbg !11028
  br i1 %27, label %36, label %28, !dbg !11028

; <label>:28:                                     ; preds = %21
  %29 = icmp eq i8* %23, null, !dbg !11029
  %30 = icmp eq %struct.typval_T* %22, null, !dbg !11030
  %31 = and i1 %30, %29, !dbg !11031
  %32 = icmp eq i8* %13, null, !dbg !11032
  %33 = or i1 %32, %31, !dbg !11031
  br i1 %33, label %36, label %34, !dbg !11031

; <label>:34:                                     ; preds = %28
  %35 = call i8* @do_string_sub(i8* nonnull %9, i8* nonnull %11, i8* %23, %struct.typval_T* %22, i8* nonnull %13) #9, !dbg !11033
  br label %36

; <label>:36:                                     ; preds = %21, %28, %34
  %37 = phi i8* [ %35, %34 ], [ null, %28 ], [ null, %21 ]
  %38 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %39 = bitcast %union.anon* %38 to i8**
  store i8* %37, i8** %39, align 8, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %8) #9, !dbg !11034
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11034
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11034
  ret void, !dbg !11034
}

; Function Attrs: nounwind uwtable
define internal void @f_swapinfo(%struct.typval_T*, %struct.typval_T*) #0 !dbg !11035 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11037, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11038, metadata !DIExpression()), !dbg !11040
  %3 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !11041
  %4 = icmp eq i32 %3, 1, !dbg !11043
  br i1 %4, label %5, label %10, !dbg !11044

; <label>:5:                                      ; preds = %2
  %6 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !11045
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11046
  %8 = bitcast %union.anon* %7 to %struct.dictvar_S**, !dbg !11047
  %9 = load %struct.dictvar_S*, %struct.dictvar_S** %8, align 8, !dbg !11047, !tbaa !2918
  tail call void @get_b0_dict(i8* %6, %struct.dictvar_S* %9) #9, !dbg !11048
  br label %10, !dbg !11048

; <label>:10:                                     ; preds = %5, %2
  ret void, !dbg !11049
}

; Function Attrs: nounwind uwtable
define internal void @f_swapname(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11053, metadata !DIExpression()), !dbg !11056
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11057
  store i32 7, i32* %3, align 8, !dbg !11058, !tbaa !3221
  %4 = tail call %struct.file_buffer* @tv_get_buf(%struct.typval_T* %0, i32 0) #9, !dbg !11059
  call void @llvm.dbg.value(metadata %struct.file_buffer* %4, metadata !11054, metadata !DIExpression()), !dbg !11060
  %5 = icmp eq %struct.file_buffer* %4, null, !dbg !11061
  br i1 %5, label %16, label %6, !dbg !11063

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %4, i64 0, i32 0, i32 1, !dbg !11064
  %8 = load %struct.memfile*, %struct.memfile** %7, align 8, !dbg !11064, !tbaa !11065
  %9 = icmp eq %struct.memfile* %8, null, !dbg !11066
  br i1 %9, label %16, label %10, !dbg !11067

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.memfile, %struct.memfile* %8, i64 0, i32 0, !dbg !11068
  %12 = load i8*, i8** %11, align 8, !dbg !11068, !tbaa !11069
  %13 = icmp eq i8* %12, null, !dbg !11072
  br i1 %13, label %16, label %14, !dbg !11073

; <label>:14:                                     ; preds = %10
  %15 = tail call i8* @vim_strsave(i8* nonnull %12) #9, !dbg !11074
  br label %16

; <label>:16:                                     ; preds = %2, %6, %10, %14
  %17 = phi i8* [ %15, %14 ], [ null, %10 ], [ null, %6 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %19 = bitcast %union.anon* %18 to i8**
  store i8* %17, i8** %19, align 8, !tbaa !2918
  ret void, !dbg !11075
}

; Function Attrs: nounwind uwtable
define internal void @f_synID(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11076 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11078, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11079, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata i32 0, metadata !11080, metadata !DIExpression()), !dbg !11087
  %4 = bitcast i32* %3 to i8*, !dbg !11088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9, !dbg !11088
  call void @llvm.dbg.value(metadata i32 0, metadata !11084, metadata !DIExpression()), !dbg !11089
  store i32 0, i32* %3, align 4, !dbg !11089, !tbaa !2904
  %5 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !11090
  call void @llvm.dbg.value(metadata i64 %5, metadata !11081, metadata !DIExpression()), !dbg !11091
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11092
  %7 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %6) #9, !dbg !11093
  %8 = trunc i64 %7 to i32, !dbg !11094
  %9 = add i32 %8, -1, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %9, metadata !11082, metadata !DIExpression()), !dbg !11095
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !11096
  call void @llvm.dbg.value(metadata i32* %3, metadata !11084, metadata !DIExpression()), !dbg !11089
  %11 = call i64 @tv_get_bool_chk(%struct.typval_T* nonnull %10, i32* nonnull %3) #9, !dbg !11097
  %12 = trunc i64 %11 to i32, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %12, metadata !11083, metadata !DIExpression()), !dbg !11099
  %13 = load i32, i32* %3, align 4, !dbg !11100, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %13, metadata !11084, metadata !DIExpression()), !dbg !11089
  %14 = icmp eq i32 %13, 0, !dbg !11100
  %15 = icmp sgt i64 %5, 0, !dbg !11102
  %16 = and i1 %15, %14, !dbg !11103
  br i1 %16, label %17, label %33, !dbg !11103

; <label>:17:                                     ; preds = %2
  %18 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11104, !tbaa !2783
  %19 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %18, i64 0, i32 0, i32 0, !dbg !11105
  %20 = load i64, i64* %19, align 8, !dbg !11105, !tbaa !7968
  %21 = icmp sle i64 %5, %20, !dbg !11106
  %22 = icmp sgt i32 %9, -1, !dbg !11107
  %23 = and i1 %22, %21, !dbg !11108
  br i1 %23, label %24, label %33, !dbg !11108

; <label>:24:                                     ; preds = %17
  %25 = sext i32 %9 to i64, !dbg !11109
  %26 = call i8* @ml_get(i64 %5) #9, !dbg !11110
  %27 = call i64 @strlen(i8* %26) #10, !dbg !11110
  %28 = icmp sgt i64 %27, %25, !dbg !11111
  br i1 %28, label %29, label %33, !dbg !11112

; <label>:29:                                     ; preds = %24
  %30 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !11113, !tbaa !2783
  %31 = call i32 @syn_get_id(%struct.window_S* %30, i64 %5, i32 %9, i32 %12, i32* null, i32 0) #9, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %31, metadata !11080, metadata !DIExpression()), !dbg !11087
  %32 = sext i32 %31 to i64, !dbg !11115
  br label %33, !dbg !11115

; <label>:33:                                     ; preds = %2, %29, %24, %17
  %34 = phi i64 [ %32, %29 ], [ 0, %24 ], [ 0, %17 ], [ 0, %2 ]
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !11116
  store i64 %34, i64* %35, align 8, !dbg !11117, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9, !dbg !11118
  ret void, !dbg !11118
}

; Function Attrs: nounwind uwtable
define internal void @f_synIDattr(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11119 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11121, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11122, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i8* null, metadata !11123, metadata !DIExpression()), !dbg !11131
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !11132
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !11132
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !11127, metadata !DIExpression()), !dbg !11133
  %5 = tail call i64 @tv_get_number(%struct.typval_T* %0) #9, !dbg !11134
  %6 = trunc i64 %5 to i32, !dbg !11135
  call void @llvm.dbg.value(metadata i32 %6, metadata !11124, metadata !DIExpression()), !dbg !11136
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11137
  %8 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %7) #9, !dbg !11138
  call void @llvm.dbg.value(metadata i8* %8, metadata !11125, metadata !DIExpression()), !dbg !11139
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !11140
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %9, i64 0, i32 0, !dbg !11142
  %11 = load i32, i32* %10, align 8, !dbg !11142, !tbaa !3221
  %12 = icmp eq i32 %11, 0, !dbg !11143
  br i1 %12, label %23, label %13, !dbg !11144

; <label>:13:                                     ; preds = %2
  %14 = call i8* @tv_get_string_buf(%struct.typval_T* nonnull %9, i8* nonnull %4) #9, !dbg !11145
  call void @llvm.dbg.value(metadata i8* %14, metadata !11126, metadata !DIExpression()), !dbg !11147
  %15 = load i8, i8* %14, align 1, !dbg !11148, !tbaa !2918
  %16 = zext i8 %15 to i32, !dbg !11148
  %17 = add i8 %15, -65, !dbg !11148
  %18 = icmp ugt i8 %17, 25, !dbg !11148
  %19 = add nuw nsw i32 %16, 32, !dbg !11148
  %20 = select i1 %18, i32 %16, i32 %19, !dbg !11148
  call void @llvm.dbg.value(metadata i32 %20, metadata !11128, metadata !DIExpression()), !dbg !11149
  %21 = trunc i32 %20 to i9, !dbg !11150
  switch i9 %21, label %22 [
    i9 116, label %32
    i9 103, label %32
    i9 99, label %32
  ], !dbg !11150

; <label>:22:                                     ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, metadata !11128, metadata !DIExpression()), !dbg !11149
  br label %32, !dbg !11152

; <label>:23:                                     ; preds = %2
  %24 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !11153, !tbaa !3859
  %25 = load i32, i32* @p_tgc, align 4, !dbg !11153
  %26 = or i32 %25, %24, !dbg !11153
  %27 = icmp eq i32 %26, 0, !dbg !11153
  br i1 %27, label %28, label %32, !dbg !11153

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* @t_colors, align 4, !dbg !11156, !tbaa !2904
  %30 = icmp sgt i32 %29, 1, !dbg !11158
  %31 = select i1 %30, i32 99, i32 116, !dbg !11159
  br label %32, !dbg !11159

; <label>:32:                                     ; preds = %28, %23, %13, %13, %13, %22
  %33 = phi i32 [ 0, %22 ], [ %20, %13 ], [ %20, %13 ], [ %20, %13 ], [ 103, %23 ], [ %31, %28 ]
  call void @llvm.dbg.value(metadata i32 %33, metadata !11128, metadata !DIExpression()), !dbg !11149
  %34 = load i8, i8* %8, align 1, !dbg !11160, !tbaa !2918
  %35 = zext i8 %34 to i32, !dbg !11160
  %36 = add i8 %34, -65, !dbg !11160
  %37 = icmp ugt i8 %36, 25, !dbg !11160
  %38 = add nuw nsw i32 %35, 32, !dbg !11160
  %39 = select i1 %37, i32 %35, i32 %38, !dbg !11160
  %40 = trunc i32 %39 to i9, !dbg !11161
  switch i9 %40, label %130 [
    i9 98, label %41
    i9 102, label %54
    i9 105, label %56
    i9 110, label %69
    i9 114, label %72
    i9 115, label %74
    i9 117, label %98
  ], !dbg !11161

; <label>:41:                                     ; preds = %32
  %42 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11162
  %43 = load i8, i8* %42, align 1, !dbg !11162, !tbaa !2918
  %44 = zext i8 %43 to i32, !dbg !11162
  %45 = add i8 %43, -65, !dbg !11162
  %46 = icmp ugt i8 %45, 25, !dbg !11162
  %47 = add nuw nsw i32 %44, 32, !dbg !11162
  %48 = select i1 %46, i32 %44, i32 %47, !dbg !11162
  %49 = icmp eq i32 %48, 103, !dbg !11165
  br i1 %49, label %50, label %52, !dbg !11166

; <label>:50:                                     ; preds = %41
  %51 = call i8* @highlight_color(i32 %6, i8* nonnull %8, i32 %33) #9, !dbg !11167
  call void @llvm.dbg.value(metadata i8* %51, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11168

; <label>:52:                                     ; preds = %41
  %53 = call i8* @highlight_has_attr(i32 %6, i32 2, i32 %33) #9, !dbg !11169
  call void @llvm.dbg.value(metadata i8* %53, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125

; <label>:54:                                     ; preds = %32
  %55 = call i8* @highlight_color(i32 %6, i8* nonnull %8, i32 %33) #9, !dbg !11170
  call void @llvm.dbg.value(metadata i8* %55, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11171

; <label>:56:                                     ; preds = %32
  %57 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11172
  %58 = load i8, i8* %57, align 1, !dbg !11172, !tbaa !2918
  %59 = zext i8 %58 to i32, !dbg !11172
  %60 = add i8 %58, -65, !dbg !11172
  %61 = icmp ugt i8 %60, 25, !dbg !11172
  %62 = add nuw nsw i32 %59, 32, !dbg !11172
  %63 = select i1 %61, i32 %59, i32 %62, !dbg !11172
  %64 = icmp eq i32 %63, 110, !dbg !11174
  br i1 %64, label %65, label %67, !dbg !11175

; <label>:65:                                     ; preds = %56
  %66 = call i8* @highlight_has_attr(i32 %6, i32 1, i32 %33) #9, !dbg !11176
  call void @llvm.dbg.value(metadata i8* %66, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11177

; <label>:67:                                     ; preds = %56
  %68 = call i8* @highlight_has_attr(i32 %6, i32 4, i32 %33) #9, !dbg !11178
  call void @llvm.dbg.value(metadata i8* %68, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125

; <label>:69:                                     ; preds = %32
  %70 = add nsw i32 %6, -1, !dbg !11179
  %71 = call i8* @get_highlight_name_ext(%struct.expand* null, i32 %70, i32 0) #9, !dbg !11180
  call void @llvm.dbg.value(metadata i8* %71, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11181

; <label>:72:                                     ; preds = %32
  %73 = call i8* @highlight_has_attr(i32 %6, i32 1, i32 %33) #9, !dbg !11182
  call void @llvm.dbg.value(metadata i8* %73, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11183

; <label>:74:                                     ; preds = %32
  %75 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11184
  %76 = load i8, i8* %75, align 1, !dbg !11184, !tbaa !2918
  %77 = zext i8 %76 to i32, !dbg !11184
  %78 = add i8 %76, -65, !dbg !11184
  %79 = icmp ugt i8 %78, 25, !dbg !11184
  %80 = add nuw nsw i32 %77, 32, !dbg !11184
  %81 = select i1 %79, i32 %77, i32 %80, !dbg !11184
  %82 = trunc i32 %81 to i9, !dbg !11186
  switch i9 %82, label %96 [
    i9 112, label %83
    i9 116, label %85
  ], !dbg !11186

; <label>:83:                                     ; preds = %74
  %84 = call i8* @highlight_color(i32 %6, i8* nonnull %8, i32 %33) #9, !dbg !11187
  call void @llvm.dbg.value(metadata i8* %84, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11188

; <label>:85:                                     ; preds = %74
  %86 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !11189
  %87 = load i8, i8* %86, align 1, !dbg !11189, !tbaa !2918
  %88 = zext i8 %87 to i32, !dbg !11189
  %89 = add i8 %87, -65, !dbg !11189
  %90 = icmp ugt i8 %89, 25, !dbg !11189
  %91 = add nuw nsw i32 %88, 32, !dbg !11189
  %92 = select i1 %90, i32 %88, i32 %91, !dbg !11189
  %93 = icmp eq i32 %92, 114, !dbg !11191
  br i1 %93, label %94, label %96, !dbg !11192

; <label>:94:                                     ; preds = %85
  %95 = call i8* @highlight_has_attr(i32 %6, i32 128, i32 %33) #9, !dbg !11193
  call void @llvm.dbg.value(metadata i8* %95, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11194

; <label>:96:                                     ; preds = %74, %85
  %97 = call i8* @highlight_has_attr(i32 %6, i32 32, i32 %33) #9, !dbg !11195
  call void @llvm.dbg.value(metadata i8* %97, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125

; <label>:98:                                     ; preds = %32
  %99 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11196
  %100 = load i8, i8* %99, align 1, !dbg !11196, !tbaa !2918
  %101 = zext i8 %100 to i32, !dbg !11196
  %102 = add i8 %100, -65, !dbg !11196
  %103 = icmp ugt i8 %102, 25, !dbg !11196
  %104 = add nuw nsw i32 %101, 32, !dbg !11196
  %105 = select i1 %103, i32 %101, i32 %104, !dbg !11196
  %106 = icmp eq i32 %105, 108, !dbg !11198
  br i1 %106, label %107, label %109, !dbg !11199

; <label>:107:                                    ; preds = %98
  %108 = call i8* @highlight_color(i32 %6, i8* nonnull %8, i32 %33) #9, !dbg !11200
  call void @llvm.dbg.value(metadata i8* %108, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11201

; <label>:109:                                    ; preds = %98
  %110 = call i64 @strlen(i8* nonnull %8) #10, !dbg !11202
  %111 = icmp ult i64 %110, 6, !dbg !11204
  br i1 %111, label %121, label %112, !dbg !11205

; <label>:112:                                    ; preds = %109
  %113 = getelementptr inbounds i8, i8* %8, i64 5, !dbg !11206
  %114 = load i8, i8* %113, align 1, !dbg !11206, !tbaa !2918
  %115 = zext i8 %114 to i32, !dbg !11206
  %116 = add i8 %114, -65, !dbg !11206
  %117 = icmp ugt i8 %116, 25, !dbg !11206
  %118 = add nuw nsw i32 %115, 32, !dbg !11206
  %119 = select i1 %117, i32 %115, i32 %118, !dbg !11206
  %120 = icmp eq i32 %119, 99, !dbg !11207
  br i1 %120, label %123, label %121, !dbg !11208

; <label>:121:                                    ; preds = %112, %109
  %122 = call i8* @highlight_has_attr(i32 %6, i32 8, i32 %33) #9, !dbg !11209
  call void @llvm.dbg.value(metadata i8* %122, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125, !dbg !11210

; <label>:123:                                    ; preds = %112
  %124 = call i8* @highlight_has_attr(i32 %6, i32 16, i32 %33) #9, !dbg !11211
  call void @llvm.dbg.value(metadata i8* %124, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %125

; <label>:125:                                    ; preds = %107, %123, %121, %83, %96, %94, %65, %67, %50, %52, %72, %69, %54
  %126 = phi i8* [ %108, %107 ], [ %122, %121 ], [ %124, %123 ], [ %84, %83 ], [ %95, %94 ], [ %97, %96 ], [ %73, %72 ], [ %71, %69 ], [ %66, %65 ], [ %68, %67 ], [ %55, %54 ], [ %51, %50 ], [ %53, %52 ]
  call void @llvm.dbg.value(metadata i8* %126, metadata !11123, metadata !DIExpression()), !dbg !11131
  %127 = icmp eq i8* %126, null, !dbg !11212
  br i1 %127, label %130, label %128, !dbg !11214

; <label>:128:                                    ; preds = %125
  %129 = call i8* @vim_strsave(i8* nonnull %126) #9, !dbg !11215
  call void @llvm.dbg.value(metadata i8* %129, metadata !11123, metadata !DIExpression()), !dbg !11131
  br label %130, !dbg !11216

; <label>:130:                                    ; preds = %32, %125, %128
  %131 = phi i8* [ %129, %128 ], [ null, %125 ], [ null, %32 ]
  call void @llvm.dbg.value(metadata i8* %131, metadata !11123, metadata !DIExpression()), !dbg !11131
  %132 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11217
  store i32 7, i32* %132, align 8, !dbg !11218, !tbaa !3221
  %133 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11219
  %134 = bitcast %union.anon* %133 to i8**, !dbg !11220
  store i8* %131, i8** %134, align 8, !dbg !11221, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !11222
  ret void, !dbg !11222
}

; Function Attrs: nounwind uwtable
define internal void @f_synIDtrans(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11223 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11225, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11226, metadata !DIExpression()), !dbg !11229
  %3 = tail call i64 @tv_get_number(%struct.typval_T* %0) #9, !dbg !11230
  %4 = trunc i64 %3 to i32, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %4, metadata !11227, metadata !DIExpression()), !dbg !11232
  %5 = icmp sgt i32 %4, 0, !dbg !11233
  br i1 %5, label %6, label %9, !dbg !11235

; <label>:6:                                      ; preds = %2
  %7 = tail call i32 @syn_get_final_id(i32 %4) #9, !dbg !11236
  call void @llvm.dbg.value(metadata i32 %7, metadata !11227, metadata !DIExpression()), !dbg !11232
  %8 = sext i32 %7 to i64, !dbg !11237
  br label %9, !dbg !11237

; <label>:9:                                      ; preds = %2, %6
  %10 = phi i64 [ %8, %6 ], [ 0, %2 ]
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !11238
  store i64 %10, i64* %11, align 8, !dbg !11239, !tbaa !2918
  ret void, !dbg !11240
}

; Function Attrs: nounwind uwtable
define internal void @f_synconcealed(%struct.typval_T*, %struct.typval_T*) #0 !dbg !11241 {
  %3 = alloca i32, align 4
  %4 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11243, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11244, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 0, metadata !11247, metadata !DIExpression()), !dbg !11253
  %5 = bitcast i32* %3 to i8*, !dbg !11254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11249, metadata !DIExpression()), !dbg !11255
  store i32 0, i32* %3, align 4, !dbg !11255, !tbaa !2904
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !11256
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11256
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !11250, metadata !DIExpression()), !dbg !11257
  tail call void @rettv_list_set(%struct.typval_T* %1, %struct.listvar_S* null) #9, !dbg !11258
  %7 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !11259
  call void @llvm.dbg.value(metadata i64 %7, metadata !11245, metadata !DIExpression()), !dbg !11260
  %8 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11261
  %9 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %8) #9, !dbg !11262
  %10 = trunc i64 %9 to i32, !dbg !11263
  %11 = add nsw i32 %10, -1, !dbg !11264
  call void @llvm.dbg.value(metadata i32 %11, metadata !11246, metadata !DIExpression()), !dbg !11265
  call void @llvm.memset.p0i8.i64(i8* nonnull %6, i8 0, i64 65, i32 16, i1 false), !dbg !11266
  %12 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !11267
  %13 = icmp eq i32 %12, 0, !dbg !11269
  br i1 %13, label %80, label %14, !dbg !11270

; <label>:14:                                     ; preds = %2
  %15 = icmp sgt i64 %7, 0, !dbg !11271
  br i1 %15, label %16, label %65, !dbg !11274

; <label>:16:                                     ; preds = %14
  %17 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11275, !tbaa !2783
  %18 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %17, i64 0, i32 0, i32 0, !dbg !11276
  %19 = load i64, i64* %18, align 8, !dbg !11276, !tbaa !7968
  %20 = icmp sle i64 %7, %19, !dbg !11277
  %21 = icmp sgt i32 %10, 0, !dbg !11278
  %22 = and i1 %21, %20, !dbg !11279
  br i1 %22, label %23, label %65, !dbg !11279

; <label>:23:                                     ; preds = %16
  %24 = sext i32 %11 to i64, !dbg !11280
  %25 = tail call i8* @ml_get(i64 %7) #9, !dbg !11281
  %26 = tail call i64 @strlen(i8* %25) #10, !dbg !11281
  %27 = icmp slt i64 %26, %24, !dbg !11282
  br i1 %27, label %65, label %28, !dbg !11283

; <label>:28:                                     ; preds = %23
  %29 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !11284, !tbaa !2783
  %30 = getelementptr inbounds %struct.window_S, %struct.window_S* %29, i64 0, i32 121, i32 44, !dbg !11285
  %31 = load i64, i64* %30, align 8, !dbg !11285, !tbaa !11286
  %32 = icmp sgt i64 %31, 0, !dbg !11287
  br i1 %32, label %33, label %65, !dbg !11288

; <label>:33:                                     ; preds = %28
  %34 = tail call i32 @syn_get_id(%struct.window_S* %29, i64 %7, i32 %11, i32 0, i32* null, i32 0) #9, !dbg !11289
  call void @llvm.dbg.value(metadata i32* %3, metadata !11249, metadata !DIExpression()), !dbg !11255
  %35 = call i32 @get_syntax_info(i32* nonnull %3) #9, !dbg !11291
  call void @llvm.dbg.value(metadata i32 %35, metadata !11247, metadata !DIExpression()), !dbg !11253
  %36 = and i32 %35, 131072, !dbg !11292
  %37 = icmp eq i32 %36, 0, !dbg !11292
  br i1 %37, label %65, label %38, !dbg !11294

; <label>:38:                                     ; preds = %33
  %39 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !11295, !tbaa !2783
  %40 = getelementptr inbounds %struct.window_S, %struct.window_S* %39, i64 0, i32 121, i32 44, !dbg !11296
  %41 = load i64, i64* %40, align 8, !dbg !11296, !tbaa !11286
  %42 = icmp slt i64 %41, 3, !dbg !11297
  br i1 %42, label %43, label %65, !dbg !11298

; <label>:43:                                     ; preds = %38
  %44 = call i32 @syn_get_sub_char() #9, !dbg !11299
  call void @llvm.dbg.value(metadata i32 %44, metadata !11248, metadata !DIExpression()), !dbg !11301
  %45 = icmp eq i32 %44, 0, !dbg !11302
  br i1 %45, label %46, label %56, !dbg !11304

; <label>:46:                                     ; preds = %43
  %47 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !11305, !tbaa !2783
  %48 = getelementptr inbounds %struct.window_S, %struct.window_S* %47, i64 0, i32 121, i32 44, !dbg !11306
  %49 = load i64, i64* %48, align 8, !dbg !11306, !tbaa !11286
  %50 = icmp eq i64 %49, 1, !dbg !11307
  br i1 %50, label %51, label %65, !dbg !11308

; <label>:51:                                     ; preds = %46
  %52 = getelementptr inbounds %struct.window_S, %struct.window_S* %47, i64 0, i32 18, i32 10, !dbg !11309
  %53 = load i32, i32* %52, align 8, !dbg !11309, !tbaa !11310
  %54 = icmp eq i32 %53, 0, !dbg !11311
  %55 = select i1 %54, i32 32, i32 %53
  br label %56

; <label>:56:                                     ; preds = %51, %43
  %57 = phi i32 [ %44, %43 ], [ %55, %51 ]
  %58 = load i32, i32* @has_mbyte, align 4, !dbg !11312, !tbaa !2904
  %59 = icmp eq i32 %58, 0, !dbg !11312
  br i1 %59, label %63, label %60, !dbg !11316

; <label>:60:                                     ; preds = %56
  %61 = load i32 (i32, i8*)*, i32 (i32, i8*)** @mb_char2bytes, align 8, !dbg !11317, !tbaa !2783
  %62 = call i32 %61(i32 %57, i8* nonnull %6) #9, !dbg !11318
  br label %65, !dbg !11318

; <label>:63:                                     ; preds = %56
  %64 = trunc i32 %57 to i8, !dbg !11319
  store i8 %64, i8* %6, align 16, !dbg !11320, !tbaa !2918
  br label %65

; <label>:65:                                     ; preds = %46, %33, %23, %38, %60, %63, %28, %16, %14
  %66 = phi i32 [ %35, %60 ], [ %35, %63 ], [ %35, %38 ], [ %35, %33 ], [ 0, %28 ], [ 0, %23 ], [ 0, %16 ], [ 0, %14 ], [ %35, %46 ]
  call void @llvm.dbg.value(metadata i32 %66, metadata !11247, metadata !DIExpression()), !dbg !11253
  %67 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11321
  %68 = bitcast %union.anon* %67 to %struct.listvar_S**, !dbg !11322
  %69 = load %struct.listvar_S*, %struct.listvar_S** %68, align 8, !dbg !11322, !tbaa !2918
  %70 = lshr i32 %66, 17, !dbg !11323
  %71 = and i32 %70, 1, !dbg !11323
  %72 = zext i32 %71 to i64, !dbg !11324
  %73 = call i32 @list_append_number(%struct.listvar_S* %69, i64 %72) #9, !dbg !11325
  %74 = load %struct.listvar_S*, %struct.listvar_S** %68, align 8, !dbg !11326, !tbaa !2918
  %75 = call i32 @list_append_string(%struct.listvar_S* %74, i8* nonnull %6, i32 -1) #9, !dbg !11327
  %76 = load %struct.listvar_S*, %struct.listvar_S** %68, align 8, !dbg !11328, !tbaa !2918
  %77 = load i32, i32* %3, align 4, !dbg !11329, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %77, metadata !11249, metadata !DIExpression()), !dbg !11255
  %78 = sext i32 %77 to i64, !dbg !11329
  %79 = call i32 @list_append_number(%struct.listvar_S* %76, i64 %78) #9, !dbg !11330
  br label %80, !dbg !11331

; <label>:80:                                     ; preds = %2, %65
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11332
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !11332
  ret void, !dbg !11332
}

; Function Attrs: nounwind uwtable
define internal void @f_synstack(%struct.typval_T*, %struct.typval_T*) #0 !dbg !11333 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11335, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11336, metadata !DIExpression()), !dbg !11342
  tail call void @rettv_list_set(%struct.typval_T* %1, %struct.listvar_S* null) #9, !dbg !11343
  %3 = tail call i64 @tv_get_lnum(%struct.typval_T* %0) #9, !dbg !11344
  call void @llvm.dbg.value(metadata i64 %3, metadata !11337, metadata !DIExpression()), !dbg !11345
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11346
  %5 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %4) #9, !dbg !11347
  %6 = trunc i64 %5 to i32, !dbg !11348
  %7 = add nsw i32 %6, -1, !dbg !11349
  call void @llvm.dbg.value(metadata i32 %7, metadata !11338, metadata !DIExpression()), !dbg !11350
  %8 = icmp sgt i64 %3, 0, !dbg !11351
  br i1 %8, label %9, label %43, !dbg !11353

; <label>:9:                                      ; preds = %2
  %10 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11354, !tbaa !2783
  %11 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %10, i64 0, i32 0, i32 0, !dbg !11355
  %12 = load i64, i64* %11, align 8, !dbg !11355, !tbaa !7968
  %13 = icmp sle i64 %3, %12, !dbg !11356
  %14 = icmp sgt i32 %6, 0, !dbg !11357
  %15 = and i1 %14, %13, !dbg !11358
  br i1 %15, label %16, label %43, !dbg !11358

; <label>:16:                                     ; preds = %9
  %17 = sext i32 %7 to i64, !dbg !11359
  %18 = tail call i8* @ml_get(i64 %3) #9, !dbg !11360
  %19 = tail call i64 @strlen(i8* %18) #10, !dbg !11360
  %20 = icmp slt i64 %19, %17, !dbg !11361
  br i1 %20, label %43, label %21, !dbg !11362

; <label>:21:                                     ; preds = %16
  %22 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !11363
  %23 = icmp eq i32 %22, 0, !dbg !11364
  br i1 %23, label %43, label %24, !dbg !11365

; <label>:24:                                     ; preds = %21
  %25 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !11366, !tbaa !2783
  %26 = tail call i32 @syn_get_id(%struct.window_S* %25, i64 %3, i32 %7, i32 0, i32* null, i32 1) #9, !dbg !11368
  call void @llvm.dbg.value(metadata i32 0, metadata !11339, metadata !DIExpression()), !dbg !11369
  %27 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11370
  %28 = bitcast %union.anon* %27 to %struct.listvar_S**, !dbg !11375
  call void @llvm.dbg.value(metadata i32 0, metadata !11339, metadata !DIExpression()), !dbg !11369
  %29 = tail call i32 @syn_get_stack_item(i32 0) #9, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %29, metadata !11340, metadata !DIExpression()), !dbg !11377
  %30 = icmp slt i32 %29, 0, !dbg !11378
  br i1 %30, label %43, label %31, !dbg !11380

; <label>:31:                                     ; preds = %24
  br label %35, !dbg !11375

; <label>:32:                                     ; preds = %35
  call void @llvm.dbg.value(metadata i32 %42, metadata !11339, metadata !DIExpression()), !dbg !11369
  %33 = tail call i32 @syn_get_stack_item(i32 %42) #9, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %33, metadata !11340, metadata !DIExpression()), !dbg !11377
  %34 = icmp slt i32 %33, 0, !dbg !11378
  br i1 %34, label %43, label %35, !dbg !11380, !llvm.loop !11381

; <label>:35:                                     ; preds = %31, %32
  %36 = phi i32 [ %33, %32 ], [ %29, %31 ]
  %37 = phi i32 [ %42, %32 ], [ 0, %31 ]
  call void @llvm.dbg.value(metadata i32 %37, metadata !11339, metadata !DIExpression()), !dbg !11369
  %38 = load %struct.listvar_S*, %struct.listvar_S** %28, align 8, !dbg !11375, !tbaa !2918
  %39 = sext i32 %36 to i64, !dbg !11384
  %40 = tail call i32 @list_append_number(%struct.listvar_S* %38, i64 %39) #9, !dbg !11385
  %41 = icmp eq i32 %40, 0, !dbg !11386
  %42 = add nuw nsw i32 %37, 1, !dbg !11387
  call void @llvm.dbg.value(metadata i32 %42, metadata !11339, metadata !DIExpression()), !dbg !11369
  br i1 %41, label %43, label %32, !dbg !11388

; <label>:43:                                     ; preds = %35, %32, %24, %21, %16, %9, %2
  ret void, !dbg !11389
}

declare void @f_system(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_systemlist(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_tabpagebuflist(%struct.typval_T*, %struct.typval_T*) #0 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11392, metadata !DIExpression()), !dbg !11396
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11393, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata %struct.window_S* null, metadata !11395, metadata !DIExpression()), !dbg !11398
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11399
  %4 = load i32, i32* %3, align 8, !dbg !11399, !tbaa !3221
  %5 = icmp eq i32 %4, 0, !dbg !11401
  br i1 %5, label %16, label %6, !dbg !11402

; <label>:6:                                      ; preds = %2
  %7 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %0) #9, !dbg !11403
  %8 = trunc i64 %7 to i32, !dbg !11405
  %9 = tail call %struct.tabpage_S* @find_tabpage(i32 %8) #9, !dbg !11406
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %9, metadata !11394, metadata !DIExpression()), !dbg !11407
  %10 = icmp eq %struct.tabpage_S* %9, null, !dbg !11408
  br i1 %10, label %40, label %11, !dbg !11410

; <label>:11:                                     ; preds = %6
  %12 = load %struct.tabpage_S*, %struct.tabpage_S** @curtab, align 8, !dbg !11411, !tbaa !2783
  %13 = icmp eq %struct.tabpage_S* %9, %12, !dbg !11412
  %14 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %9, i64 0, i32 4, !dbg !11413
  %15 = select i1 %13, %struct.window_S** @firstwin, %struct.window_S** %14, !dbg !11414
  call void @llvm.dbg.value(metadata %struct.window_S** %15, metadata !11395, metadata !DIExpression(DW_OP_deref)), !dbg !11398
  br label %16, !dbg !11415

; <label>:16:                                     ; preds = %2, %11
  %17 = phi %struct.window_S** [ %15, %11 ], [ @firstwin, %2 ]
  %18 = load %struct.window_S*, %struct.window_S** %17, align 8, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* %18, metadata !11395, metadata !DIExpression()), !dbg !11398
  %19 = icmp eq %struct.window_S* %18, null, !dbg !11416
  br i1 %19, label %40, label %20, !dbg !11418

; <label>:20:                                     ; preds = %16
  %21 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !11419
  %22 = icmp eq i32 %21, 0, !dbg !11420
  br i1 %22, label %40, label %23, !dbg !11421

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11422
  %25 = bitcast %union.anon* %24 to %struct.listvar_S**, !dbg !11427
  call void @llvm.dbg.value(metadata %struct.window_S* %18, metadata !11395, metadata !DIExpression()), !dbg !11398
  br label %26, !dbg !11428

; <label>:26:                                     ; preds = %23, %36
  %27 = phi %struct.window_S* [ %18, %23 ], [ %38, %36 ]
  call void @llvm.dbg.value(metadata %struct.window_S* %27, metadata !11395, metadata !DIExpression()), !dbg !11398
  %28 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !11427, !tbaa !2918
  %29 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 1, !dbg !11429
  %30 = load %struct.file_buffer*, %struct.file_buffer** %29, align 8, !dbg !11429, !tbaa !6364
  %31 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %30, i64 0, i32 13, !dbg !11430
  %32 = load i32, i32* %31, align 8, !dbg !11430, !tbaa !7743
  %33 = sext i32 %32 to i64, !dbg !11431
  %34 = tail call i32 @list_append_number(%struct.listvar_S* %28, i64 %33) #9, !dbg !11432
  %35 = icmp eq i32 %34, 0, !dbg !11433
  br i1 %35, label %40, label %36, !dbg !11434

; <label>:36:                                     ; preds = %26
  %37 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 3, !dbg !11435
  %38 = load %struct.window_S*, %struct.window_S** %37, align 8, !dbg !11435, !tbaa !11436
  call void @llvm.dbg.value(metadata %struct.window_S* %38, metadata !11395, metadata !DIExpression()), !dbg !11398
  %39 = icmp eq %struct.window_S* %38, null, !dbg !11437
  br i1 %39, label %40, label %26, !dbg !11428, !llvm.loop !11438

; <label>:40:                                     ; preds = %26, %36, %6, %20, %16
  ret void, !dbg !11440
}

declare void @f_tabpagenr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_tabpagewinnr(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_tagfiles(%struct.typval_T* nocapture readnone, %struct.typval_T*) #0 !dbg !11441 {
  %3 = alloca %struct.tagname_T, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11443, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11444, metadata !DIExpression()), !dbg !11457
  %4 = bitcast %struct.tagname_T* %3 to i8*, !dbg !11458
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #9, !dbg !11458
  %5 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !11459
  %6 = icmp eq i32 %5, 0, !dbg !11461
  br i1 %6, label %24, label %7, !dbg !11462

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @alloc(i64 4096) #9, !dbg !11463
  call void @llvm.dbg.value(metadata i8* %8, metadata !11445, metadata !DIExpression()), !dbg !11464
  %9 = icmp eq i8* %8, null, !dbg !11465
  br i1 %9, label %24, label %10, !dbg !11467

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.value(metadata i32 1, metadata !11455, metadata !DIExpression()), !dbg !11468
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11469
  %12 = bitcast %union.anon* %11 to %struct.listvar_S**, !dbg !11473
  call void @llvm.dbg.value(metadata i32 1, metadata !11455, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.tagname_T* %3, metadata !11446, metadata !DIExpression()), !dbg !11474
  %13 = call i32 @get_tagfname(%struct.tagname_T* nonnull %3, i32 1, i8* nonnull %8) #9, !dbg !11475
  %14 = icmp eq i32 %13, 0, !dbg !11476
  br i1 %14, label %23, label %15, !dbg !11477

; <label>:15:                                     ; preds = %10
  br label %19, !dbg !11473

; <label>:16:                                     ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !11455, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.tagname_T* %3, metadata !11446, metadata !DIExpression()), !dbg !11474
  %17 = call i32 @get_tagfname(%struct.tagname_T* nonnull %3, i32 0, i8* nonnull %8) #9, !dbg !11475
  %18 = icmp eq i32 %17, 0, !dbg !11476
  br i1 %18, label %23, label %19, !dbg !11477, !llvm.loop !11478

; <label>:19:                                     ; preds = %15, %16
  %20 = load %struct.listvar_S*, %struct.listvar_S** %12, align 8, !dbg !11473, !tbaa !2918
  %21 = call i32 @list_append_string(%struct.listvar_S* %20, i8* nonnull %8, i32 -1) #9, !dbg !11481
  %22 = icmp eq i32 %21, 0, !dbg !11482
  call void @llvm.dbg.value(metadata i32 0, metadata !11455, metadata !DIExpression()), !dbg !11468
  br i1 %22, label %23, label %16, !dbg !11483

; <label>:23:                                     ; preds = %19, %16, %10
  call void @llvm.dbg.value(metadata %struct.tagname_T* %3, metadata !11446, metadata !DIExpression()), !dbg !11474
  call void @tagname_free(%struct.tagname_T* nonnull %3) #9, !dbg !11484
  call void @vim_free(i8* nonnull %8) #9, !dbg !11485
  br label %24, !dbg !11486

; <label>:24:                                     ; preds = %7, %2, %23
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #9, !dbg !11486
  ret void, !dbg !11486
}

; Function Attrs: nounwind uwtable
define internal void @f_taglist(%struct.typval_T*, %struct.typval_T*) #0 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11489, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11490, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i8* null, metadata !11491, metadata !DIExpression()), !dbg !11495
  %3 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !11496
  call void @llvm.dbg.value(metadata i8* %3, metadata !11492, metadata !DIExpression()), !dbg !11497
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11498
  %5 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, !dbg !11499
  store i64 0, i64* %5, align 8, !dbg !11500, !tbaa !2918
  %6 = load i8, i8* %3, align 1, !dbg !11501, !tbaa !2918
  %7 = icmp eq i8 %6, 0, !dbg !11503
  br i1 %7, label %23, label %8, !dbg !11504

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11505
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %9, i64 0, i32 0, !dbg !11507
  %11 = load i32, i32* %10, align 8, !dbg !11507, !tbaa !3221
  %12 = icmp eq i32 %11, 0, !dbg !11508
  br i1 %12, label %15, label %13, !dbg !11509

; <label>:13:                                     ; preds = %8
  %14 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %9) #9, !dbg !11510
  call void @llvm.dbg.value(metadata i8* %14, metadata !11491, metadata !DIExpression()), !dbg !11495
  br label %15, !dbg !11511

; <label>:15:                                     ; preds = %8, %13
  %16 = phi i8* [ %14, %13 ], [ null, %8 ]
  call void @llvm.dbg.value(metadata i8* %16, metadata !11491, metadata !DIExpression()), !dbg !11495
  %17 = tail call i32 @rettv_list_alloc(%struct.typval_T* nonnull %1) #9, !dbg !11512
  %18 = icmp eq i32 %17, 1, !dbg !11514
  br i1 %18, label %19, label %23, !dbg !11515

; <label>:19:                                     ; preds = %15
  %20 = bitcast %union.anon* %4 to %struct.listvar_S**, !dbg !11516
  %21 = load %struct.listvar_S*, %struct.listvar_S** %20, align 8, !dbg !11516, !tbaa !2918
  %22 = tail call i32 @get_tags(%struct.listvar_S* %21, i8* %3, i8* %16) #9, !dbg !11517
  br label %23, !dbg !11518

; <label>:23:                                     ; preds = %15, %19, %2
  ret void, !dbg !11519
}

; Function Attrs: nounwind uwtable
define internal void @f_tan(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !11520 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11522, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11523, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !11524, metadata !DIExpression()), !dbg !11527
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11528
  store i32 6, i32* %3, align 8, !dbg !11529, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !11524, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !11530
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !11533
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11534
  %5 = load i32, i32* %4, align 8, !dbg !11534, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !11535

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11536
  %8 = bitcast i64* %7 to double*, !dbg !11536
  %9 = load double, double* %8, align 8, !dbg !11536, !tbaa !2918
  br label %14, !dbg !11537

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11538
  %12 = load i64, i64* %11, align 8, !dbg !11538, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !11539
  br label %14, !dbg !11540

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !11524, metadata !DIExpression()), !dbg !11527
  %16 = tail call double @tan(double %15) #9, !dbg !11541
  br label %20, !dbg !11542

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !11543
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !11544
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !11545
}

; Function Attrs: nounwind uwtable
define internal void @f_tanh(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11548, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11549, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !11550, metadata !DIExpression()), !dbg !11553
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11554
  store i32 6, i32* %3, align 8, !dbg !11555, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !11550, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !11556
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !11559
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11560
  %5 = load i32, i32* %4, align 8, !dbg !11560, !tbaa !3221
  switch i32 %5, label %17 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !11561

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11562
  %8 = bitcast i64* %7 to double*, !dbg !11562
  %9 = load double, double* %8, align 8, !dbg !11562, !tbaa !2918
  br label %14, !dbg !11563

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11564
  %12 = load i64, i64* %11, align 8, !dbg !11564, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !11565
  br label %14, !dbg !11566

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !11550, metadata !DIExpression()), !dbg !11553
  %16 = tail call double @tanh(double %15) #9, !dbg !11567
  br label %20, !dbg !11568

; <label>:17:                                     ; preds = %2
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !11569
  %19 = tail call i32 @emsg(i8* %18) #9, !dbg !11570
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = phi double [ 0.000000e+00, %17 ], [ %16, %14 ]
  %22 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to double*
  store double %21, double* %23, align 8, !tbaa !2918
  ret void, !dbg !11571
}

declare void @f_tempname(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_dumpdiff(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_dumpload(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_dumpwrite(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getaltscreen(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getansicolors(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getattr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getcursor(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getjob(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getscrolled(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getsize(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_getstatus(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_gettitle(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_gettty(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_list(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_scrape(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_sendkeys(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_setansicolors(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_setapi(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_setkill(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_setrestore(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_setsize(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_start(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_term_wait(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_terminalprops(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_alloc_fail(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_autochdir(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_feedinput(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_garbagecollect_now(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_garbagecollect_soon(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_getvalue(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_ignore_error(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_blob(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_channel(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_dict(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_function(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_job(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_list(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_partial(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_null_string(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_option_not_set(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_override(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_refcount(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_scrollbar(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_setmouse(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_settime(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_test_srand_seed(%struct.typval_T*, %struct.typval_T* nocapture readnone) #0 !dbg !11572 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11574, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11575, metadata !DIExpression()), !dbg !11577
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11578
  %4 = load i32, i32* %3, align 8, !dbg !11578, !tbaa !3221
  %5 = icmp eq i32 %4, 0, !dbg !11580
  br i1 %5, label %9, label %6, !dbg !11581

; <label>:6:                                      ; preds = %2
  %7 = tail call i64 @tv_get_number(%struct.typval_T* nonnull %0) #9, !dbg !11582
  %8 = trunc i64 %7 to i32, !dbg !11584
  store i32 %8, i32* @srand_seed_for_testing, align 4, !dbg !11585, !tbaa !2904
  br label %9

; <label>:9:                                      ; preds = %2, %6
  %10 = phi i1 [ true, %6 ], [ false, %2 ]
  store i1 %10, i1* @srand_seed_for_testing_is_used, align 4
  ret void, !dbg !11586
}

declare void @f_test_unknown(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_test_void(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_timer_info(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_timer_pause(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_timer_start(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_timer_stop(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_timer_stopall(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_tolower(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11587 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11589, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11590, metadata !DIExpression()), !dbg !11592
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11593
  store i32 7, i32* %3, align 8, !dbg !11594, !tbaa !3221
  %4 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !11595
  %5 = tail call i8* @strlow_save(i8* %4) #9, !dbg !11596
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11597
  %7 = bitcast %union.anon* %6 to i8**, !dbg !11598
  store i8* %5, i8** %7, align 8, !dbg !11599, !tbaa !2918
  ret void, !dbg !11600
}

; Function Attrs: nounwind uwtable
define internal void @f_toupper(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11603, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11604, metadata !DIExpression()), !dbg !11606
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11607
  store i32 7, i32* %3, align 8, !dbg !11608, !tbaa !3221
  %4 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !11609
  %5 = tail call i8* @strup_save(i8* %4) #9, !dbg !11610
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11611
  %7 = bitcast %union.anon* %6 to i8**, !dbg !11612
  store i8* %5, i8** %7, align 8, !dbg !11613, !tbaa !2918
  ret void, !dbg !11614
}

; Function Attrs: nounwind uwtable
define internal void @f_tr(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11615 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  %5 = alloca %struct.growarray, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11617, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11618, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i32 1, metadata !11629, metadata !DIExpression()), !dbg !11635
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !11636
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11636
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !11630, metadata !DIExpression()), !dbg !11637
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !11638
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11638
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !11631, metadata !DIExpression()), !dbg !11639
  %8 = bitcast %struct.growarray* %5 to i8*, !dbg !11640
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9, !dbg !11640
  %9 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !11641
  call void @llvm.dbg.value(metadata i8* %9, metadata !11619, metadata !DIExpression()), !dbg !11642
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11643
  %11 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %10, i8* nonnull %6) #9, !dbg !11644
  call void @llvm.dbg.value(metadata i8* %11, metadata !11620, metadata !DIExpression()), !dbg !11645
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !11646
  %13 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %12, i8* nonnull %7) #9, !dbg !11647
  call void @llvm.dbg.value(metadata i8* %13, metadata !11621, metadata !DIExpression()), !dbg !11648
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11649
  store i32 7, i32* %14, align 8, !dbg !11650, !tbaa !3221
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11651
  %16 = bitcast %union.anon* %15 to i8**, !dbg !11652
  store i8* null, i8** %16, align 8, !dbg !11653, !tbaa !2918
  %17 = icmp eq i8* %11, null, !dbg !11654
  %18 = icmp eq i8* %13, null, !dbg !11656
  %19 = or i1 %17, %18, !dbg !11657
  br i1 %19, label %148, label %20, !dbg !11657

; <label>:20:                                     ; preds = %2
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  call void @ga_init2(%struct.growarray* nonnull %5, i32 1, i32 80) #9, !dbg !11659
  %21 = load i32, i32* @has_mbyte, align 4, !dbg !11660, !tbaa !2904
  %22 = icmp eq i32 %21, 0, !dbg !11660
  br i1 %22, label %23, label %30, !dbg !11662

; <label>:23:                                     ; preds = %20
  %24 = call i64 @strlen(i8* nonnull %11) #10, !dbg !11663
  %25 = call i64 @strlen(i8* nonnull %13) #10, !dbg !11665
  %26 = icmp eq i64 %24, %25, !dbg !11666
  br i1 %26, label %30, label %27, !dbg !11667

; <label>:27:                                     ; preds = %107, %77, %61, %71, %23
  %28 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !11668
  %29 = call i32 (i8*, ...) @semsg(i8* %28, i8* %11) #9, !dbg !11670
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  call void @ga_clear(%struct.growarray* nonnull %5) #9, !dbg !11671
  br label %148, !dbg !11672

; <label>:30:                                     ; preds = %23, %20
  call void @llvm.dbg.value(metadata i32 1, metadata !11629, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %9, metadata !11619, metadata !DIExpression()), !dbg !11642
  %31 = load i8, i8* %9, align 1, !dbg !11673, !tbaa !2918
  %32 = icmp eq i8 %31, 0, !dbg !11674
  br i1 %32, label %33, label %35, !dbg !11675

; <label>:33:                                     ; preds = %30
  %34 = getelementptr inbounds %struct.growarray, %struct.growarray* %5, i64 0, i32 4, !dbg !11676
  br label %142, !dbg !11675

; <label>:35:                                     ; preds = %30
  %36 = ptrtoint i8* %11 to i64
  %37 = getelementptr inbounds %struct.growarray, %struct.growarray* %5, i64 0, i32 4
  %38 = getelementptr inbounds %struct.growarray, %struct.growarray* %5, i64 0, i32 0
  br label %39, !dbg !11675

; <label>:39:                                     ; preds = %140, %35
  %40 = phi i32 [ %21, %35 ], [ %141, %140 ], !dbg !11677
  %41 = phi i8 [ %31, %35 ], [ %138, %140 ]
  %42 = phi i32 [ 1, %35 ], [ %136, %140 ]
  %43 = phi i8* [ %9, %35 ], [ %137, %140 ]
  call void @llvm.dbg.value(metadata i8* %43, metadata !11619, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.value(metadata i32 %42, metadata !11629, metadata !DIExpression()), !dbg !11635
  %44 = icmp eq i32 %40, 0, !dbg !11677
  br i1 %44, label %121, label %45, !dbg !11680

; <label>:45:                                     ; preds = %39
  %46 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11681, !tbaa !2783
  %47 = call i32 %46(i8* %43) #9, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %47, metadata !11623, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i8* %43, metadata !11627, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 %47, metadata !11628, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i32 0, metadata !11626, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i8* %11, metadata !11622, metadata !DIExpression()), !dbg !11688
  %48 = load i8, i8* %11, align 1, !dbg !11689, !tbaa !2918
  %49 = icmp eq i8 %48, 0, !dbg !11692
  br i1 %49, label %86, label %50, !dbg !11693

; <label>:50:                                     ; preds = %45
  %51 = sext i32 %47 to i64
  br label %52, !dbg !11693

; <label>:52:                                     ; preds = %50, %80
  %53 = phi i32 [ 0, %50 ], [ %81, %80 ]
  %54 = phi i8* [ %11, %50 ], [ %83, %80 ]
  call void @llvm.dbg.value(metadata i8* %54, metadata !11622, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %53, metadata !11626, metadata !DIExpression()), !dbg !11687
  %55 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11694, !tbaa !2783
  %56 = call i32 %55(i8* %54) #9, !dbg !11696
  call void @llvm.dbg.value(metadata i32 %56, metadata !11624, metadata !DIExpression()), !dbg !11697
  %57 = icmp eq i32 %56, %47, !dbg !11698
  br i1 %57, label %58, label %80, !dbg !11700

; <label>:58:                                     ; preds = %52
  %59 = call i32 @strncmp(i8* %43, i8* %54, i64 %51) #10, !dbg !11701
  %60 = icmp eq i32 %59, 0, !dbg !11702
  br i1 %60, label %61, label %80, !dbg !11703

; <label>:61:                                     ; preds = %58
  call void @llvm.dbg.value(metadata i8* %13, metadata !11622, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %53, metadata !11626, metadata !DIExpression()), !dbg !11687
  %62 = load i8, i8* %13, align 1, !dbg !11704, !tbaa !2918
  %63 = icmp eq i8 %62, 0, !dbg !11708
  br i1 %63, label %27, label %64, !dbg !11709

; <label>:64:                                     ; preds = %61
  br label %65, !dbg !11710

; <label>:65:                                     ; preds = %64, %71
  %66 = phi i32 [ %72, %71 ], [ %53, %64 ]
  %67 = phi i8* [ %74, %71 ], [ %13, %64 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !11622, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %66, metadata !11626, metadata !DIExpression()), !dbg !11687
  %68 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11710, !tbaa !2783
  %69 = call i32 %68(i8* %67) #9, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %69, metadata !11625, metadata !DIExpression()), !dbg !11713
  %70 = icmp eq i32 %66, 0, !dbg !11714
  br i1 %70, label %77, label %71, !dbg !11716

; <label>:71:                                     ; preds = %65
  %72 = add nsw i32 %66, -1, !dbg !11717
  %73 = sext i32 %69 to i64, !dbg !11718
  %74 = getelementptr inbounds i8, i8* %67, i64 %73, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %72, metadata !11626, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i8* %74, metadata !11622, metadata !DIExpression()), !dbg !11688
  %75 = load i8, i8* %74, align 1, !dbg !11704, !tbaa !2918
  %76 = icmp eq i8 %75, 0, !dbg !11708
  br i1 %76, label %27, label %65, !dbg !11709, !llvm.loop !11719

; <label>:77:                                     ; preds = %65
  %78 = load i8, i8* %67, align 1, !dbg !11721, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %69, metadata !11628, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i8* undef, metadata !11627, metadata !DIExpression()), !dbg !11685
  %79 = icmp eq i8 %78, 0, !dbg !11723
  br i1 %79, label %27, label %86, !dbg !11724

; <label>:80:                                     ; preds = %58, %52
  %81 = add nuw nsw i32 %53, 1, !dbg !11725
  %82 = sext i32 %56 to i64, !dbg !11726
  %83 = getelementptr inbounds i8, i8* %54, i64 %82, !dbg !11726
  call void @llvm.dbg.value(metadata i32 %81, metadata !11626, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i8* %83, metadata !11622, metadata !DIExpression()), !dbg !11688
  %84 = load i8, i8* %83, align 1, !dbg !11689, !tbaa !2918
  %85 = icmp eq i8 %84, 0, !dbg !11692
  br i1 %85, label %86, label %52, !dbg !11693, !llvm.loop !11727

; <label>:86:                                     ; preds = %80, %45, %77
  %87 = phi i32 [ -1, %77 ], [ 0, %45 ], [ %81, %80 ]
  %88 = phi i8* [ %67, %77 ], [ %43, %45 ], [ %43, %80 ]
  %89 = phi i32 [ %69, %77 ], [ %47, %45 ], [ %47, %80 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !11628, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i8* %88, metadata !11627, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 %87, metadata !11626, metadata !DIExpression()), !dbg !11687
  %90 = icmp ne i32 %42, 0, !dbg !11729
  %91 = icmp eq i8* %88, %43, !dbg !11731
  %92 = and i1 %90, %91, !dbg !11732
  br i1 %92, label %93, label %110, !dbg !11732

; <label>:93:                                     ; preds = %86
  call void @llvm.dbg.value(metadata i32 0, metadata !11629, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %13, metadata !11622, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %87, metadata !11626, metadata !DIExpression()), !dbg !11687
  %94 = load i8, i8* %13, align 1, !dbg !11733, !tbaa !2918
  %95 = icmp eq i8 %94, 0, !dbg !11737
  br i1 %95, label %107, label %96, !dbg !11738

; <label>:96:                                     ; preds = %93
  br label %97, !dbg !11739

; <label>:97:                                     ; preds = %96, %97
  %98 = phi i32 [ %102, %97 ], [ %87, %96 ]
  %99 = phi i8* [ %104, %97 ], [ %13, %96 ]
  call void @llvm.dbg.value(metadata i8* %99, metadata !11622, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %98, metadata !11626, metadata !DIExpression()), !dbg !11687
  %100 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11739, !tbaa !2783
  %101 = call i32 %100(i8* %99) #9, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %101, metadata !11625, metadata !DIExpression()), !dbg !11713
  %102 = add nsw i32 %98, -1, !dbg !11742
  %103 = sext i32 %101 to i64, !dbg !11743
  %104 = getelementptr inbounds i8, i8* %99, i64 %103, !dbg !11743
  call void @llvm.dbg.value(metadata i32 %102, metadata !11626, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i8* %104, metadata !11622, metadata !DIExpression()), !dbg !11688
  %105 = load i8, i8* %104, align 1, !dbg !11733, !tbaa !2918
  %106 = icmp eq i8 %105, 0, !dbg !11737
  br i1 %106, label %107, label %97, !dbg !11738, !llvm.loop !11744

; <label>:107:                                    ; preds = %97, %93
  %108 = phi i32 [ %87, %93 ], [ %102, %97 ]
  %109 = icmp eq i32 %108, 0, !dbg !11746
  br i1 %109, label %110, label %27, !dbg !11748

; <label>:110:                                    ; preds = %86, %107
  %111 = phi i32 [ 0, %107 ], [ %42, %86 ]
  call void @llvm.dbg.value(metadata i32 %111, metadata !11629, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  %112 = call i32 @ga_grow(%struct.growarray* nonnull %5, i32 %89) #9, !dbg !11749
  %113 = load i8*, i8** %37, align 8, !dbg !11750, !tbaa !3473
  %114 = load i32, i32* %38, align 8, !dbg !11750, !tbaa !3475
  %115 = sext i32 %114 to i64, !dbg !11750
  %116 = getelementptr inbounds i8, i8* %113, i64 %115, !dbg !11750
  %117 = sext i32 %89 to i64, !dbg !11750
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %116, i8* %88, i64 %117, i32 1, i1 false), !dbg !11750
  %118 = load i32, i32* %38, align 8, !dbg !11751, !tbaa !3475
  %119 = add nsw i32 %118, %89, !dbg !11751
  store i32 %119, i32* %38, align 8, !dbg !11751, !tbaa !3475
  %120 = sext i32 %47 to i64, !dbg !11752
  br label %134, !dbg !11753

; <label>:121:                                    ; preds = %39
  %122 = zext i8 %41 to i32, !dbg !11673
  %123 = call i8* @vim_strchr(i8* %11, i32 %122) #9, !dbg !11754
  call void @llvm.dbg.value(metadata i8* %123, metadata !11622, metadata !DIExpression()), !dbg !11688
  %124 = icmp eq i8* %123, null, !dbg !11756
  br i1 %124, label %131, label %125, !dbg !11758

; <label>:125:                                    ; preds = %121
  %126 = ptrtoint i8* %123 to i64, !dbg !11759
  %127 = sub i64 %126, %36, !dbg !11759
  %128 = getelementptr inbounds i8, i8* %13, i64 %127, !dbg !11760
  %129 = load i8, i8* %128, align 1, !dbg !11760, !tbaa !2918
  %130 = zext i8 %129 to i32, !dbg !11760
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  call void @ga_append(%struct.growarray* nonnull %5, i32 %130) #9, !dbg !11761
  br label %134, !dbg !11761

; <label>:131:                                    ; preds = %121
  %132 = load i8, i8* %43, align 1, !dbg !11762, !tbaa !2918
  %133 = zext i8 %132 to i32, !dbg !11762
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  call void @ga_append(%struct.growarray* nonnull %5, i32 %133) #9, !dbg !11763
  br label %134

; <label>:134:                                    ; preds = %125, %131, %110
  %135 = phi i64 [ %120, %110 ], [ 1, %131 ], [ 1, %125 ]
  %136 = phi i32 [ %111, %110 ], [ %42, %131 ], [ %42, %125 ]
  %137 = getelementptr inbounds i8, i8* %43, i64 %135
  call void @llvm.dbg.value(metadata i32 %136, metadata !11629, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %137, metadata !11619, metadata !DIExpression()), !dbg !11642
  %138 = load i8, i8* %137, align 1, !dbg !11673, !tbaa !2918
  %139 = icmp eq i8 %138, 0, !dbg !11674
  br i1 %139, label %142, label %140, !dbg !11675, !llvm.loop !11764

; <label>:140:                                    ; preds = %134
  %141 = load i32, i32* @has_mbyte, align 4, !dbg !11677, !tbaa !2904
  br label %39, !dbg !11675

; <label>:142:                                    ; preds = %134, %33
  %143 = phi i8** [ %34, %33 ], [ %37, %134 ], !dbg !11676
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  %144 = call i32 @ga_grow(%struct.growarray* nonnull %5, i32 1) #9, !dbg !11766
  call void @llvm.dbg.value(metadata %struct.growarray* %5, metadata !11632, metadata !DIExpression()), !dbg !11658
  call void @ga_append(%struct.growarray* nonnull %5, i32 0) #9, !dbg !11767
  %145 = bitcast i8** %143 to i64*, !dbg !11676
  %146 = load i64, i64* %145, align 8, !dbg !11676, !tbaa !3473
  %147 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0, !dbg !11768
  store i64 %146, i64* %147, align 8, !dbg !11768, !tbaa !2918
  br label %148, !dbg !11769

; <label>:148:                                    ; preds = %2, %142, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9, !dbg !11769
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11769
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11769
  ret void, !dbg !11769
}

; Function Attrs: nounwind uwtable
define internal void @f_trim(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11770 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca [65 x i8], align 16
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11772, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11773, metadata !DIExpression()), !dbg !11789
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !11790
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11790
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !11774, metadata !DIExpression()), !dbg !11791
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !11792
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11792
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !11775, metadata !DIExpression()), !dbg !11793
  %8 = call i8* @tv_get_string_buf_chk(%struct.typval_T* %0, i8* nonnull %6) #9, !dbg !11794
  call void @llvm.dbg.value(metadata i8* %8, metadata !11776, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i8* null, metadata !11777, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i32 0, metadata !11782, metadata !DIExpression()), !dbg !11797
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11798
  store i32 7, i32* %9, align 8, !dbg !11799, !tbaa !3221
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !11800
  %11 = bitcast %union.anon* %10 to i8**, !dbg !11801
  store i8* null, i8** %11, align 8, !dbg !11802, !tbaa !2918
  %12 = icmp eq i8* %8, null, !dbg !11803
  br i1 %12, label %170, label %13, !dbg !11805

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !11806
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %14, i64 0, i32 0, !dbg !11807
  %16 = load i32, i32* %15, align 8, !dbg !11807, !tbaa !3221
  %17 = icmp eq i32 %16, 7, !dbg !11808
  br i1 %17, label %18, label %38, !dbg !11809

; <label>:18:                                     ; preds = %13
  %19 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %14, i8* nonnull %7) #9, !dbg !11810
  call void @llvm.dbg.value(metadata i8* %19, metadata !11777, metadata !DIExpression()), !dbg !11796
  %20 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !11811
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %20, i64 0, i32 0, !dbg !11812
  %22 = load i32, i32* %21, align 8, !dbg !11812, !tbaa !3221
  %23 = icmp eq i32 %22, 0, !dbg !11813
  br i1 %23, label %38, label %24, !dbg !11814

; <label>:24:                                     ; preds = %18
  %25 = bitcast i32* %5 to i8*, !dbg !11815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9, !dbg !11815
  call void @llvm.dbg.value(metadata i32 0, metadata !11783, metadata !DIExpression()), !dbg !11816
  store i32 0, i32* %5, align 4, !dbg !11816, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %5, metadata !11783, metadata !DIExpression()), !dbg !11816
  %26 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %20, i32* nonnull %5) #9, !dbg !11817
  %27 = trunc i64 %26 to i32, !dbg !11818
  call void @llvm.dbg.value(metadata i32 %27, metadata !11782, metadata !DIExpression()), !dbg !11797
  %28 = load i32, i32* %5, align 4, !dbg !11819, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %28, metadata !11783, metadata !DIExpression()), !dbg !11816
  %29 = icmp eq i32 %28, 0, !dbg !11819
  br i1 %29, label %30, label %169, !dbg !11821

; <label>:30:                                     ; preds = %24
  %31 = icmp ugt i32 %27, 2, !dbg !11822
  br i1 %31, label %32, label %36, !dbg !11822

; <label>:32:                                     ; preds = %30
  %33 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !11824
  %34 = call i8* @tv_get_string(%struct.typval_T* nonnull %20) #9, !dbg !11826
  %35 = call i32 (i8*, ...) @semsg(i8* %33, i8* %34) #9, !dbg !11827
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9, !dbg !11828
  br label %170

; <label>:36:                                     ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %27, metadata !11782, metadata !DIExpression()), !dbg !11797
  call void @llvm.dbg.value(metadata i8* %19, metadata !11777, metadata !DIExpression()), !dbg !11796
  %37 = icmp eq i32 %27, 2, !dbg !11829
  br i1 %37, label %93, label %38, !dbg !11829

; <label>:38:                                     ; preds = %36, %13, %18
  %39 = phi i32 [ %27, %36 ], [ 0, %18 ], [ 0, %13 ]
  %40 = phi i8* [ %19, %36 ], [ %19, %18 ], [ null, %13 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !11776, metadata !DIExpression()), !dbg !11795
  %41 = load i8, i8* %8, align 1, !dbg !11831, !tbaa !2918
  %42 = icmp eq i8 %41, 0, !dbg !11833
  br i1 %42, label %93, label %43, !dbg !11834

; <label>:43:                                     ; preds = %38
  %44 = icmp eq i8* %40, null
  br label %45, !dbg !11834

; <label>:45:                                     ; preds = %43, %86
  %46 = phi i8 [ %41, %43 ], [ %91, %86 ]
  %47 = phi i8* [ %8, %43 ], [ %90, %86 ]
  call void @llvm.dbg.value(metadata i8* %47, metadata !11776, metadata !DIExpression()), !dbg !11795
  %48 = zext i8 %46 to i32, !dbg !11831
  %49 = load i32, i32* @has_mbyte, align 4, !dbg !11835, !tbaa !2904
  %50 = icmp eq i32 %49, 0, !dbg !11835
  br i1 %50, label %54, label %51, !dbg !11835

; <label>:51:                                     ; preds = %45
  %52 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !11835, !tbaa !2783
  %53 = call i32 %52(i8* %47) #9, !dbg !11835
  br label %54, !dbg !11835

; <label>:54:                                     ; preds = %45, %51
  %55 = phi i32 [ %53, %51 ], [ %48, %45 ], !dbg !11835
  call void @llvm.dbg.value(metadata i32 %55, metadata !11781, metadata !DIExpression()), !dbg !11837
  br i1 %44, label %56, label %60, !dbg !11838

; <label>:56:                                     ; preds = %54
  %57 = icmp sgt i32 %55, 32, !dbg !11839
  %58 = icmp ne i32 %55, 160, !dbg !11843
  %59 = and i1 %57, %58, !dbg !11844
  br i1 %59, label %93, label %86, !dbg !11844

; <label>:60:                                     ; preds = %54
  call void @llvm.dbg.value(metadata i8* %19, metadata !11780, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i8* %40, metadata !11780, metadata !DIExpression()), !dbg !11845
  %61 = load i8, i8* %40, align 1, !dbg !11846, !tbaa !2918
  %62 = icmp eq i8 %61, 0, !dbg !11850
  br i1 %62, label %93, label %63, !dbg !11851

; <label>:63:                                     ; preds = %60
  br label %64, !dbg !11846

; <label>:64:                                     ; preds = %63, %76
  %65 = phi i8 [ %81, %76 ], [ %61, %63 ]
  %66 = phi i8* [ %80, %76 ], [ %40, %63 ]
  call void @llvm.dbg.value(metadata i8* %66, metadata !11780, metadata !DIExpression()), !dbg !11845
  %67 = zext i8 %65 to i32, !dbg !11846
  %68 = load i32, i32* @has_mbyte, align 4, !dbg !11852, !tbaa !2904
  %69 = icmp eq i32 %68, 0, !dbg !11852
  br i1 %69, label %73, label %70, !dbg !11852

; <label>:70:                                     ; preds = %64
  %71 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !11852, !tbaa !2783
  %72 = call i32 %71(i8* %66) #9, !dbg !11852
  br label %73, !dbg !11852

; <label>:73:                                     ; preds = %64, %70
  %74 = phi i32 [ %72, %70 ], [ %67, %64 ], !dbg !11852
  %75 = icmp eq i32 %55, %74, !dbg !11854
  br i1 %75, label %83, label %76, !dbg !11855

; <label>:76:                                     ; preds = %73
  %77 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11856, !tbaa !2783
  %78 = call i32 %77(i8* %66) #9, !dbg !11856
  %79 = sext i32 %78 to i64, !dbg !11856
  %80 = getelementptr inbounds i8, i8* %66, i64 %79, !dbg !11856
  call void @llvm.dbg.value(metadata i8* %80, metadata !11780, metadata !DIExpression()), !dbg !11845
  %81 = load i8, i8* %80, align 1, !dbg !11846, !tbaa !2918
  %82 = icmp eq i8 %81, 0, !dbg !11850
  br i1 %82, label %93, label %64, !dbg !11851, !llvm.loop !11857

; <label>:83:                                     ; preds = %73
  %84 = load i8, i8* %66, align 1, !dbg !11859, !tbaa !2918
  %85 = icmp eq i8 %84, 0, !dbg !11861
  br i1 %85, label %93, label %86, !dbg !11862

; <label>:86:                                     ; preds = %83, %56
  %87 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11863, !tbaa !2783
  %88 = call i32 %87(i8* %47) #9, !dbg !11863
  %89 = sext i32 %88 to i64, !dbg !11863
  %90 = getelementptr inbounds i8, i8* %47, i64 %89, !dbg !11863
  call void @llvm.dbg.value(metadata i8* %90, metadata !11776, metadata !DIExpression()), !dbg !11795
  %91 = load i8, i8* %90, align 1, !dbg !11831, !tbaa !2918
  %92 = icmp eq i8 %91, 0, !dbg !11833
  br i1 %92, label %93, label %45, !dbg !11834, !llvm.loop !11864

; <label>:93:                                     ; preds = %83, %56, %86, %60, %76, %38, %36
  %94 = phi i32 [ 2, %36 ], [ %39, %38 ], [ %39, %76 ], [ %39, %60 ], [ %39, %86 ], [ %39, %56 ], [ %39, %83 ]
  %95 = phi i8* [ %19, %36 ], [ %40, %38 ], [ %40, %76 ], [ %40, %83 ], [ null, %56 ], [ %40, %86 ], [ %40, %60 ]
  %96 = phi i8* [ %8, %36 ], [ %8, %38 ], [ %47, %76 ], [ %47, %83 ], [ %47, %56 ], [ %90, %86 ], [ %47, %60 ]
  call void @llvm.dbg.value(metadata i8* %96, metadata !11776, metadata !DIExpression()), !dbg !11795
  %97 = call i64 @strlen(i8* %96) #10, !dbg !11866
  %98 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !11867
  call void @llvm.dbg.value(metadata i8* %98, metadata !11778, metadata !DIExpression()), !dbg !11868
  %99 = or i32 %94, 2, !dbg !11869
  %100 = icmp eq i32 %99, 2, !dbg !11869
  %101 = icmp sgt i64 %97, 0, !dbg !11871
  %102 = and i1 %100, %101, !dbg !11869
  call void @llvm.dbg.value(metadata i8* %98, metadata !11778, metadata !DIExpression()), !dbg !11868
  br i1 %102, label %103, label %163, !dbg !11869

; <label>:103:                                    ; preds = %93
  %104 = icmp eq i8* %95, null
  br label %105, !dbg !11875

; <label>:105:                                    ; preds = %103, %161
  %106 = phi i8* [ %98, %103 ], [ %129, %161 ]
  call void @llvm.dbg.value(metadata i8* %106, metadata !11779, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i8* %106, metadata !11778, metadata !DIExpression()), !dbg !11868
  %107 = load i32, i32* @has_mbyte, align 4, !dbg !11877, !tbaa !2904
  %108 = icmp eq i32 %107, 0, !dbg !11877
  br i1 %108, label %109, label %111, !dbg !11877

; <label>:109:                                    ; preds = %105
  %110 = getelementptr inbounds i8, i8* %106, i64 -1, !dbg !11877
  call void @llvm.dbg.value(metadata i8* %119, metadata !11779, metadata !DIExpression()), !dbg !11876
  br label %124, !dbg !11879

; <label>:111:                                    ; preds = %105
  %112 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** @mb_head_off, align 8, !dbg !11877, !tbaa !2783
  %113 = getelementptr inbounds i8, i8* %106, i64 -1, !dbg !11877
  %114 = call i32 %112(i8* %96, i8* nonnull %113) #9, !dbg !11877
  %115 = add nsw i32 %114, 1, !dbg !11877
  %116 = load i32, i32* @has_mbyte, align 4, !dbg !11879, !tbaa !2904
  %117 = sext i32 %115 to i64, !dbg !11877
  %118 = sub nsw i64 0, %117, !dbg !11877
  %119 = getelementptr inbounds i8, i8* %106, i64 %118, !dbg !11877
  call void @llvm.dbg.value(metadata i8* %119, metadata !11779, metadata !DIExpression()), !dbg !11876
  %120 = icmp eq i32 %116, 0, !dbg !11879
  br i1 %120, label %124, label %121, !dbg !11879

; <label>:121:                                    ; preds = %111
  %122 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !11879, !tbaa !2783
  %123 = call i32 %122(i8* %119) #9, !dbg !11879
  br label %128, !dbg !11879

; <label>:124:                                    ; preds = %109, %111
  %125 = phi i8* [ %110, %109 ], [ %119, %111 ]
  %126 = load i8, i8* %125, align 1, !dbg !11879, !tbaa !2918
  %127 = zext i8 %126 to i32, !dbg !11879
  br label %128, !dbg !11879

; <label>:128:                                    ; preds = %124, %121
  %129 = phi i8* [ %119, %121 ], [ %125, %124 ]
  %130 = phi i32 [ %123, %121 ], [ %127, %124 ], !dbg !11879
  call void @llvm.dbg.value(metadata i32 %130, metadata !11781, metadata !DIExpression()), !dbg !11837
  br i1 %104, label %131, label %135, !dbg !11880

; <label>:131:                                    ; preds = %128
  %132 = icmp sgt i32 %130, 32, !dbg !11881
  %133 = icmp ne i32 %130, 160, !dbg !11885
  %134 = and i1 %132, %133, !dbg !11886
  br i1 %134, label %163, label %161, !dbg !11886

; <label>:135:                                    ; preds = %128
  call void @llvm.dbg.value(metadata i8* %19, metadata !11780, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i8* %95, metadata !11780, metadata !DIExpression()), !dbg !11845
  %136 = load i8, i8* %95, align 1, !dbg !11887, !tbaa !2918
  %137 = icmp eq i8 %136, 0, !dbg !11891
  br i1 %137, label %163, label %138, !dbg !11892

; <label>:138:                                    ; preds = %135
  br label %139, !dbg !11887

; <label>:139:                                    ; preds = %138, %151
  %140 = phi i8 [ %156, %151 ], [ %136, %138 ]
  %141 = phi i8* [ %155, %151 ], [ %95, %138 ]
  call void @llvm.dbg.value(metadata i8* %141, metadata !11780, metadata !DIExpression()), !dbg !11845
  %142 = zext i8 %140 to i32, !dbg !11887
  %143 = load i32, i32* @has_mbyte, align 4, !dbg !11893, !tbaa !2904
  %144 = icmp eq i32 %143, 0, !dbg !11893
  br i1 %144, label %148, label %145, !dbg !11893

; <label>:145:                                    ; preds = %139
  %146 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !11893, !tbaa !2783
  %147 = call i32 %146(i8* %141) #9, !dbg !11893
  br label %148, !dbg !11893

; <label>:148:                                    ; preds = %139, %145
  %149 = phi i32 [ %147, %145 ], [ %142, %139 ], !dbg !11893
  %150 = icmp eq i32 %130, %149, !dbg !11895
  br i1 %150, label %158, label %151, !dbg !11896

; <label>:151:                                    ; preds = %148
  %152 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !11897, !tbaa !2783
  %153 = call i32 %152(i8* %141) #9, !dbg !11897
  %154 = sext i32 %153 to i64, !dbg !11897
  %155 = getelementptr inbounds i8, i8* %141, i64 %154, !dbg !11897
  call void @llvm.dbg.value(metadata i8* %155, metadata !11780, metadata !DIExpression()), !dbg !11845
  %156 = load i8, i8* %155, align 1, !dbg !11887, !tbaa !2918
  %157 = icmp eq i8 %156, 0, !dbg !11891
  br i1 %157, label %163, label %139, !dbg !11892, !llvm.loop !11898

; <label>:158:                                    ; preds = %148
  %159 = load i8, i8* %141, align 1, !dbg !11900, !tbaa !2918
  %160 = icmp eq i8 %159, 0, !dbg !11902
  br i1 %160, label %163, label %161, !dbg !11903

; <label>:161:                                    ; preds = %131, %158
  call void @llvm.dbg.value(metadata i8* %119, metadata !11778, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i8* %129, metadata !11778, metadata !DIExpression()), !dbg !11868
  %162 = icmp ugt i8* %129, %96, !dbg !11871
  br i1 %162, label %105, label %163, !dbg !11875, !llvm.loop !11904

; <label>:163:                                    ; preds = %158, %131, %161, %135, %151, %93
  %164 = phi i8* [ %98, %93 ], [ %106, %151 ], [ %106, %135 ], [ %106, %158 ], [ %106, %131 ], [ %129, %161 ]
  call void @llvm.dbg.value(metadata i8* %164, metadata !11778, metadata !DIExpression()), !dbg !11868
  %165 = ptrtoint i8* %164 to i64, !dbg !11906
  %166 = ptrtoint i8* %96 to i64, !dbg !11906
  %167 = sub i64 %165, %166, !dbg !11906
  %168 = call i8* @vim_strnsave(i8* %96, i64 %167) #9, !dbg !11907
  store i8* %168, i8** %11, align 8, !dbg !11908, !tbaa !2918
  br label %170, !dbg !11909

; <label>:169:                                    ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9, !dbg !11828
  br label %170

; <label>:170:                                    ; preds = %169, %32, %2, %163
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %7) #9, !dbg !11909
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %6) #9, !dbg !11909
  ret void, !dbg !11909
}

; Function Attrs: nounwind uwtable
define internal void @f_trunc(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !11910 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11912, metadata !DIExpression()), !dbg !11915
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11913, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !11914, metadata !DIExpression()), !dbg !11917
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !11918
  store i32 6, i32* %3, align 8, !dbg !11919, !tbaa !3221
  call void @llvm.dbg.value(metadata double* undef, metadata !11914, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !4281, metadata !DIExpression()) #9, !dbg !11920
  call void @llvm.dbg.value(metadata double* undef, metadata !4287, metadata !DIExpression()) #9, !dbg !11923
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11924
  %5 = load i32, i32* %4, align 8, !dbg !11924, !tbaa !3221
  switch i32 %5, label %20 [
    i32 6, label %6
    i32 5, label %10
  ], !dbg !11925

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11926
  %8 = bitcast i64* %7 to double*, !dbg !11926
  %9 = load double, double* %8, align 8, !dbg !11926, !tbaa !2918
  br label %14, !dbg !11927

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !11928
  %12 = load i64, i64* %11, align 8, !dbg !11928, !tbaa !2918
  %13 = sitofp i64 %12 to double, !dbg !11929
  br label %14, !dbg !11930

; <label>:14:                                     ; preds = %6, %10
  %15 = phi double [ %9, %6 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata double %15, metadata !11914, metadata !DIExpression()), !dbg !11917
  %16 = fcmp ogt double %15, 0.000000e+00, !dbg !11931
  %17 = tail call double @llvm.floor.f64(double %15), !dbg !11932
  %18 = tail call double @llvm.ceil.f64(double %15), !dbg !11933
  %19 = select i1 %16, double %17, double %18, !dbg !11934
  br label %23, !dbg !11935

; <label>:20:                                     ; preds = %2
  %21 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.718, i64 0, i64 0), i32 5) #9, !dbg !11936
  %22 = tail call i32 @emsg(i8* %21) #9, !dbg !11937
  br label %23

; <label>:23:                                     ; preds = %20, %14
  %24 = phi double [ 0.000000e+00, %20 ], [ %19, %14 ]
  %25 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  %26 = bitcast %union.anon* %25 to double*
  store double %24, double* %26, align 8, !tbaa !2918
  ret void, !dbg !11938
}

; Function Attrs: nounwind uwtable
define internal void @f_type(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11941, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11942, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.value(metadata i32 -1, metadata !11943, metadata !DIExpression()), !dbg !11946
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !11947
  %4 = load i32, i32* %3, align 8, !dbg !11947, !tbaa !3221
  switch i32 %4, label %17 [
    i32 5, label %5
    i32 7, label %6
    i32 10, label %7
    i32 9, label %7
    i32 11, label %8
    i32 12, label %9
    i32 6, label %10
    i32 3, label %11
    i32 4, label %12
    i32 13, label %13
    i32 14, label %14
    i32 8, label %15
    i32 0, label %16
    i32 1, label %16
    i32 2, label %16
  ], !dbg !11948

; <label>:5:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11949

; <label>:6:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 1, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11951

; <label>:7:                                      ; preds = %2, %2
  call void @llvm.dbg.value(metadata i32 2, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11952

; <label>:8:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 3, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11953

; <label>:9:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 4, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11954

; <label>:10:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 5, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11955

; <label>:11:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 6, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11956

; <label>:12:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 7, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11957

; <label>:13:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 8, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11958

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 9, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11959

; <label>:15:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 10, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11960

; <label>:16:                                     ; preds = %2, %2, %2
  tail call void @internal_error_no_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.765, i64 0, i64 0)) #9, !dbg !11961
  call void @llvm.dbg.value(metadata i32 -1, metadata !11943, metadata !DIExpression()), !dbg !11946
  br label %17, !dbg !11962

; <label>:17:                                     ; preds = %2, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %18 = phi i64 [ -1, %2 ], [ -1, %16 ], [ 10, %15 ], [ 9, %14 ], [ 8, %13 ], [ 7, %12 ], [ 6, %11 ], [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %5 ]
  %19 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !11963
  store i64 %18, i64* %19, align 8, !dbg !11964, !tbaa !2918
  ret void, !dbg !11965
}

declare void @f_typename(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_undofile(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_undotree(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_uniq(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_values(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_virtcol(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !11966 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !11968, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !11969, metadata !DIExpression()), !dbg !11975
  %5 = bitcast i32* %3 to i8*, !dbg !11976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !11976
  call void @llvm.dbg.value(metadata i32 0, metadata !11970, metadata !DIExpression()), !dbg !11977
  store i32 0, i32* %3, align 4, !dbg !11977, !tbaa !2904
  %6 = bitcast i32* %4 to i8*, !dbg !11978
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9, !dbg !11978
  %7 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11979, !tbaa !2783
  %8 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %7, i64 0, i32 13, !dbg !11980
  %9 = load i32, i32* %8, align 8, !dbg !11980, !tbaa !7743
  call void @llvm.dbg.value(metadata i32 %9, metadata !11972, metadata !DIExpression()), !dbg !11981
  store i32 %9, i32* %4, align 4, !dbg !11981, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %4, metadata !11972, metadata !DIExpression()), !dbg !11981
  %10 = call %struct.pos_T* @var2fpos(%struct.typval_T* %0, i32 0, i32* nonnull %4, i32 0) #9, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.pos_T* %10, metadata !11971, metadata !DIExpression()), !dbg !11983
  %11 = icmp eq %struct.pos_T* %10, null, !dbg !11984
  br i1 %11, label %41, label %12, !dbg !11986

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %10, i64 0, i32 0, !dbg !11987
  %14 = load i64, i64* %13, align 8, !dbg !11987, !tbaa !4160
  %15 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11988, !tbaa !2783
  %16 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %15, i64 0, i32 0, i32 0, !dbg !11989
  %17 = load i64, i64* %16, align 8, !dbg !11989, !tbaa !7968
  %18 = icmp sgt i64 %14, %17, !dbg !11990
  br i1 %18, label %41, label %19, !dbg !11991

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* %4, align 4, !dbg !11992, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %20, metadata !11972, metadata !DIExpression()), !dbg !11981
  %21 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %15, i64 0, i32 13, !dbg !11993
  %22 = load i32, i32* %21, align 8, !dbg !11993, !tbaa !7743
  %23 = icmp eq i32 %20, %22, !dbg !11994
  br i1 %23, label %24, label %41, !dbg !11995

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %10, i64 0, i32 1, !dbg !11996
  %26 = load i32, i32* %25, align 8, !dbg !11996, !tbaa !4166
  %27 = icmp slt i32 %26, 0, !dbg !11999
  br i1 %27, label %34, label %28, !dbg !12000

; <label>:28:                                     ; preds = %24
  %29 = call i8* @ml_get(i64 %14) #9, !dbg !12001
  %30 = call i64 @strlen(i8* %29) #10, !dbg !12001
  %31 = trunc i64 %30 to i32, !dbg !12003
  call void @llvm.dbg.value(metadata i32 %31, metadata !11973, metadata !DIExpression()), !dbg !12004
  %32 = load i32, i32* %25, align 8, !dbg !12005, !tbaa !4166
  %33 = icmp sgt i32 %32, %31, !dbg !12007
  br i1 %33, label %34, label %36, !dbg !12008

; <label>:34:                                     ; preds = %28, %24
  %35 = phi i32 [ 0, %24 ], [ %31, %28 ]
  store i32 %35, i32* %25, align 8, !tbaa !4166
  br label %36, !dbg !12009

; <label>:36:                                     ; preds = %34, %28
  %37 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12009, !tbaa !2783
  call void @llvm.dbg.value(metadata i32* %3, metadata !11970, metadata !DIExpression()), !dbg !11977
  call void @getvvcol(%struct.window_S* %37, %struct.pos_T* nonnull %10, i32* null, i32* null, i32* nonnull %3) #9, !dbg !12010
  %38 = load i32, i32* %3, align 4, !dbg !12011, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %38, metadata !11970, metadata !DIExpression()), !dbg !11977
  %39 = add nsw i32 %38, 1, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %39, metadata !11970, metadata !DIExpression()), !dbg !11977
  store i32 %39, i32* %3, align 4, !dbg !12011, !tbaa !2904
  %40 = sext i32 %39 to i64, !dbg !12012
  br label %41, !dbg !12012

; <label>:41:                                     ; preds = %12, %2, %36, %19
  %42 = phi i64 [ 0, %12 ], [ 0, %2 ], [ %40, %36 ], [ 0, %19 ]
  %43 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12013
  store i64 %42, i64* %43, align 8, !dbg !12014, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9, !dbg !12015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !12015
  ret void, !dbg !12015
}

; Function Attrs: nounwind uwtable
define internal void @f_visualmode(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture) #0 !dbg !12016 {
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12018, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12019, metadata !DIExpression()), !dbg !12022
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !12023
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #9, !dbg !12023
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !12020, metadata !DIExpression()), !dbg !12024
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !12025
  store i32 7, i32* %5, align 8, !dbg !12026, !tbaa !3221
  %6 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12027, !tbaa !2783
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %6, i64 0, i32 32, !dbg !12028
  %8 = load i32, i32* %7, align 8, !dbg !12028, !tbaa !12029
  %9 = trunc i32 %8 to i8, !dbg !12027
  store i8 %9, i8* %4, align 1, !dbg !12030, !tbaa !2918
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !12031
  store i8 0, i8* %10, align 1, !dbg !12032, !tbaa !2918
  %11 = call i8* @vim_strsave(i8* nonnull %4) #9, !dbg !12033
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !12034
  %13 = bitcast %union.anon* %12 to i8**, !dbg !12035
  store i8* %11, i8** %13, align 8, !dbg !12036, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !3389, metadata !DIExpression()), !dbg !12037
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !12040
  %15 = load i32, i32* %14, align 8, !dbg !12040, !tbaa !3221
  switch i32 %15, label %35 [
    i32 5, label %16
    i32 3, label %20
    i32 7, label %24
  ], !dbg !12041

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !12042
  %18 = load i64, i64* %17, align 8, !dbg !12042, !tbaa !2918
  %19 = icmp eq i64 %18, 0, !dbg !12043
  br i1 %19, label %35, label %32, !dbg !12044

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, i32 0, !dbg !12045
  %22 = load i64, i64* %21, align 8, !dbg !12045, !tbaa !2918
  %23 = icmp eq i64 %22, 1, !dbg !12046
  br i1 %23, label %32, label %35, !dbg !12047

; <label>:24:                                     ; preds = %2
  %25 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !12048
  %26 = bitcast %union.anon* %25 to i8**, !dbg !12049
  %27 = load i8*, i8** %26, align 8, !dbg !12049, !tbaa !2918
  %28 = icmp eq i8* %27, null, !dbg !12050
  br i1 %28, label %35, label %29, !dbg !12051

; <label>:29:                                     ; preds = %24
  %30 = load i8, i8* %27, align 1, !dbg !12052, !tbaa !2918
  %31 = icmp eq i8 %30, 0, !dbg !12053
  br i1 %31, label %35, label %32, !dbg !12054

; <label>:32:                                     ; preds = %16, %20, %29
  %33 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12055, !tbaa !2783
  %34 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %33, i64 0, i32 32, !dbg !12056
  store i32 0, i32* %34, align 8, !dbg !12057, !tbaa !12029
  br label %35, !dbg !12055

; <label>:35:                                     ; preds = %16, %20, %2, %24, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #9, !dbg !12058
  ret void, !dbg !12058
}

; Function Attrs: nounwind uwtable
define internal void @f_wildmenumode(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !12059 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12061, metadata !DIExpression()), !dbg !12063
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12062, metadata !DIExpression()), !dbg !12064
  %3 = load i32, i32* @wild_menu_showing, align 4, !dbg !12065, !tbaa !2904
  %4 = icmp eq i32 %3, 0, !dbg !12065
  br i1 %4, label %7, label %5, !dbg !12067

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12068
  store i64 1, i64* %6, align 8, !dbg !12069, !tbaa !2918
  br label %7, !dbg !12070

; <label>:7:                                      ; preds = %2, %5
  ret void, !dbg !12071
}

declare void @f_win_execute(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_findbuf(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_getid(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_gettype(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_gotoid(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_id2tabwin(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_id2win(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_screenpos(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_win_splitmove(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winbufnr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_wincol(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_windowsversion(%struct.typval_T* nocapture readnone, %struct.typval_T* nocapture) #0 !dbg !12072 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12074, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12075, metadata !DIExpression()), !dbg !12077
  %3 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !12078
  store i32 7, i32* %3, align 8, !dbg !12079, !tbaa !3221
  %4 = tail call i8* @vim_strsave(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @windowsVersion, i64 0, i64 0)) #9, !dbg !12080
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !12081
  %6 = bitcast %union.anon* %5 to i8**, !dbg !12082
  store i8* %4, i8** %6, align 8, !dbg !12083, !tbaa !2918
  ret void, !dbg !12084
}

declare void @f_winheight(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winlayout(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winline(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winnr(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winrestcmd(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winrestview(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winsaveview(%struct.typval_T*, %struct.typval_T*) #3

declare void @f_winwidth(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_wordcount(%struct.typval_T* nocapture readnone, %struct.typval_T*) #0 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12087, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12088, metadata !DIExpression()), !dbg !12090
  %3 = tail call i32 @rettv_dict_alloc(%struct.typval_T* %1) #9, !dbg !12091
  %4 = icmp eq i32 %3, 0, !dbg !12093
  br i1 %4, label %9, label %5, !dbg !12094

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !12095
  %7 = bitcast %union.anon* %6 to %struct.dictvar_S**, !dbg !12096
  %8 = load %struct.dictvar_S*, %struct.dictvar_S** %7, align 8, !dbg !12096, !tbaa !2918
  tail call void @cursor_pos_info(%struct.dictvar_S* %8) #9, !dbg !12097
  br label %9, !dbg !12098

; <label>:9:                                      ; preds = %2, %5
  ret void, !dbg !12098
}

declare void @f_writefile(%struct.typval_T*, %struct.typval_T*) #3

; Function Attrs: nounwind uwtable
define internal void @f_xor(%struct.typval_T*, %struct.typval_T* nocapture) #0 !dbg !12099 {
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12101, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12102, metadata !DIExpression()), !dbg !12104
  %3 = tail call i64 @tv_get_number_chk(%struct.typval_T* %0, i32* null) #9, !dbg !12105
  %4 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !12106
  %5 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %4, i32* null) #9, !dbg !12107
  %6 = xor i64 %5, %3, !dbg !12108
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12109
  store i64 %6, i64* %7, align 8, !dbg !12110, !tbaa !2918
  ret void, !dbg !12111
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #1

declare i64 @tv_get_number_chk(%struct.typval_T*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @acos(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @asin(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @atan2(double, double) local_unnamed_addr #5

declare void @post_balloon(%struct.BalloonEvalStruct*, i8*, %struct.listvar_S*) local_unnamed_addr #3

declare i32 @in_vim9script() local_unnamed_addr #3

declare i32 @check_for_string_arg(%struct.typval_T*, i32) local_unnamed_addr #3

declare i32 @rettv_list_alloc(%struct.typval_T*) local_unnamed_addr #3

declare i32 @split_message(i8*, %struct.pumitem_T**) local_unnamed_addr #3

declare i32 @list_append_string(%struct.listvar_S*, i8*, i32) local_unnamed_addr #3

declare i64 @tv_get_number(%struct.typval_T*) local_unnamed_addr #3

declare i64 @ml_find_line_or_offset(%struct.file_buffer*, i64, i64*) local_unnamed_addr #3

declare i32 @utf_ptr2len(i8*) local_unnamed_addr #3

declare i8* @partial_name(%struct.partial_S*) local_unnamed_addr #3

declare i32 @func_call(i8*, %struct.typval_T*, %struct.partial_S*, %struct.dictvar_S*, %struct.typval_T*) local_unnamed_addr #3

declare i64 @tv_get_bool_chk(%struct.typval_T*, i32*) local_unnamed_addr #3

declare i32 @utf_ptr2char(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @get_col(%struct.typval_T*, %struct.typval_T* nocapture, i32) unnamed_addr #0 !dbg !12112 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12114, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12115, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.value(metadata i32 %2, metadata !12116, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 0, metadata !12117, metadata !DIExpression()), !dbg !12133
  %5 = bitcast i32* %4 to i8*, !dbg !12134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !12134
  %6 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12135, !tbaa !2783
  %7 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %6, i64 0, i32 13, !dbg !12136
  %8 = load i32, i32* %7, align 8, !dbg !12136, !tbaa !7743
  call void @llvm.dbg.value(metadata i32 %8, metadata !12119, metadata !DIExpression()), !dbg !12137
  store i32 %8, i32* %4, align 4, !dbg !12137, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %4, metadata !12119, metadata !DIExpression()), !dbg !12137
  %9 = call %struct.pos_T* @var2fpos(%struct.typval_T* %0, i32 0, i32* nonnull %4, i32 %2) #9, !dbg !12138
  call void @llvm.dbg.value(metadata %struct.pos_T* %9, metadata !12118, metadata !DIExpression()), !dbg !12139
  %10 = icmp eq %struct.pos_T* %9, null, !dbg !12140
  br i1 %10, label %62, label %11, !dbg !12141

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* %4, align 4, !dbg !12142, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %12, metadata !12119, metadata !DIExpression()), !dbg !12137
  %13 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12143, !tbaa !2783
  %14 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %13, i64 0, i32 13, !dbg !12144
  %15 = load i32, i32* %14, align 8, !dbg !12144, !tbaa !7743
  %16 = icmp eq i32 %12, %15, !dbg !12145
  br i1 %16, label %17, label %62, !dbg !12146

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %9, i64 0, i32 1, !dbg !12147
  %19 = load i32, i32* %18, align 8, !dbg !12147, !tbaa !4166
  %20 = icmp eq i32 %19, 2147483647, !dbg !12148
  br i1 %20, label %21, label %32, !dbg !12149

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %9, i64 0, i32 0, !dbg !12150
  %23 = load i64, i64* %22, align 8, !dbg !12150, !tbaa !4160
  %24 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %13, i64 0, i32 0, i32 0, !dbg !12153
  %25 = load i64, i64* %24, align 8, !dbg !12153, !tbaa !7968
  %26 = icmp sgt i64 %23, %25, !dbg !12154
  br i1 %26, label %62, label %27, !dbg !12155

; <label>:27:                                     ; preds = %21
  %28 = call i8* @ml_get(i64 %23) #9, !dbg !12156
  %29 = call i64 @strlen(i8* %28) #10, !dbg !12156
  %30 = trunc i64 %29 to i32, !dbg !12157
  %31 = add nsw i32 %30, 1, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %31, metadata !12117, metadata !DIExpression()), !dbg !12133
  br label %62, !dbg !12159

; <label>:32:                                     ; preds = %17
  %33 = add nsw i32 %19, 1, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %33, metadata !12117, metadata !DIExpression()), !dbg !12133
  %34 = call i32 @virtual_active() #9, !dbg !12161
  %35 = icmp eq i32 %34, 0, !dbg !12161
  br i1 %35, label %62, label %36, !dbg !12162

; <label>:36:                                     ; preds = %32
  %37 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12163, !tbaa !2783
  %38 = getelementptr inbounds %struct.window_S, %struct.window_S* %37, i64 0, i32 7, !dbg !12164
  %39 = icmp eq %struct.pos_T* %9, %38, !dbg !12165
  br i1 %39, label %40, label %62, !dbg !12166

; <label>:40:                                     ; preds = %36
  %41 = call i8* @ml_get_cursor() #9, !dbg !12167
  call void @llvm.dbg.value(metadata i8* %41, metadata !12120, metadata !DIExpression()), !dbg !12168
  %42 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12169, !tbaa !2783
  %43 = getelementptr inbounds %struct.window_S, %struct.window_S* %42, i64 0, i32 7, i32 2, !dbg !12170
  %44 = load i32, i32* %43, align 4, !dbg !12170, !tbaa !12171
  %45 = getelementptr inbounds %struct.window_S, %struct.window_S* %42, i64 0, i32 92, !dbg !12172
  %46 = load i32, i32* %45, align 8, !dbg !12172, !tbaa !12173
  %47 = sub nsw i32 %46, %44, !dbg !12174
  %48 = call i32 @chartabsize(i8* %41, i32 %47) #9, !dbg !12175
  %49 = icmp slt i32 %44, %48, !dbg !12176
  br i1 %49, label %62, label %50, !dbg !12177

; <label>:50:                                     ; preds = %40
  %51 = load i8, i8* %41, align 1, !dbg !12178, !tbaa !2918
  %52 = icmp eq i8 %51, 0, !dbg !12180
  br i1 %52, label %62, label %53, !dbg !12181

; <label>:53:                                     ; preds = %50
  %54 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !12182, !tbaa !2783
  %55 = call i32 %54(i8* nonnull %41) #9, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %55, metadata !12127, metadata !DIExpression()), !dbg !12184
  %56 = sext i32 %55 to i64, !dbg !12185
  %57 = getelementptr inbounds i8, i8* %41, i64 %56, !dbg !12185
  %58 = load i8, i8* %57, align 1, !dbg !12185, !tbaa !2918
  %59 = icmp eq i8 %58, 0, !dbg !12186
  %60 = select i1 %59, i32 %55, i32 0, !dbg !12187
  %61 = add nsw i32 %60, %33, !dbg !12187
  br label %62, !dbg !12187

; <label>:62:                                     ; preds = %53, %40, %50, %21, %32, %3, %27, %36, %11
  %63 = phi i32 [ %31, %27 ], [ %33, %36 ], [ %33, %32 ], [ 0, %11 ], [ 0, %3 ], [ 2147483647, %21 ], [ %33, %40 ], [ %33, %50 ], [ %61, %53 ]
  call void @llvm.dbg.value(metadata i32 %63, metadata !12117, metadata !DIExpression()), !dbg !12133
  %64 = sext i32 %63 to i64, !dbg !12188
  %65 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12189
  store i64 %64, i64* %65, align 8, !dbg !12190, !tbaa !2918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !12191
  ret void, !dbg !12191
}

declare %struct.pos_T* @var2fpos(%struct.typval_T*, i32, i32*, i32) local_unnamed_addr #3

declare i8* @ml_get(i64) local_unnamed_addr #3

declare i32 @virtual_active() local_unnamed_addr #3

declare i8* @ml_get_cursor() local_unnamed_addr #3

declare i32 @chartabsize(i8*, i32) local_unnamed_addr #3

declare i32 @do_dialog(i32, i8*, i8*, i8*, i32, i8*, i32) local_unnamed_addr #3

declare i32 @item_copy(%struct.typval_T*, %struct.typval_T*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @cosh(double) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc void @set_cursorpos(%struct.typval_T*, %struct.typval_T* nocapture, i32) unnamed_addr #0 !dbg !12192 {
  %4 = alloca %struct.pos_T, align 8
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12194, metadata !DIExpression()), !dbg !12205
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12195, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %2, metadata !12196, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i64 0, metadata !12199, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12200, metadata !DIExpression()), !dbg !12209
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12210
  store i64 -1, i64* %6, align 8, !dbg !12211, !tbaa !2918
  %7 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !12212
  %8 = load i32, i32* %7, align 8, !dbg !12212, !tbaa !3221
  switch i32 %8, label %63 [
    i32 11, label %9
    i32 5, label %34
    i32 7, label %34
  ], !dbg !12213

; <label>:9:                                      ; preds = %3
  %10 = bitcast %struct.pos_T* %4 to i8*, !dbg !12214
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9, !dbg !12214
  %11 = bitcast i32* %5 to i8*, !dbg !12215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9, !dbg !12215
  call void @llvm.dbg.value(metadata i32 -1, metadata !12204, metadata !DIExpression()), !dbg !12216
  store i32 -1, i32* %5, align 4, !dbg !12216, !tbaa !2904
  call void @llvm.dbg.value(metadata %struct.pos_T* %4, metadata !12201, metadata !DIExpression()), !dbg !12217
  call void @llvm.dbg.value(metadata i32* %5, metadata !12204, metadata !DIExpression()), !dbg !12216
  %12 = call i32 @list2fpos(%struct.typval_T* nonnull %0, %struct.pos_T* nonnull %4, i32* null, i32* nonnull %5, i32 %2) #9, !dbg !12218
  %13 = icmp eq i32 %12, 0, !dbg !12220
  br i1 %13, label %31, label %14, !dbg !12221

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 0, !dbg !12222
  %16 = load i64, i64* %15, align 8, !dbg !12222, !tbaa !4160
  call void @llvm.dbg.value(metadata i64 %16, metadata !12197, metadata !DIExpression()), !dbg !12223
  %17 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 1, !dbg !12224
  %18 = load i32, i32* %17, align 8, !dbg !12224, !tbaa !4166
  %19 = sext i32 %18 to i64, !dbg !12225
  call void @llvm.dbg.value(metadata i64 %19, metadata !12198, metadata !DIExpression()), !dbg !12226
  %20 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 2, !dbg !12227
  %21 = load i32, i32* %20, align 4, !dbg !12227, !tbaa !6398
  %22 = sext i32 %21 to i64, !dbg !12228
  call void @llvm.dbg.value(metadata i64 %22, metadata !12199, metadata !DIExpression()), !dbg !12208
  %23 = load i32, i32* %5, align 4, !dbg !12229, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %23, metadata !12204, metadata !DIExpression()), !dbg !12216
  %24 = icmp sgt i32 %23, -1, !dbg !12231
  br i1 %24, label %25, label %29, !dbg !12232

; <label>:25:                                     ; preds = %14
  %26 = add nsw i32 %23, -1, !dbg !12233
  %27 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12235, !tbaa !2783
  %28 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 8, !dbg !12236
  store i32 %26, i32* %28, align 8, !dbg !12237, !tbaa !12238
  call void @llvm.dbg.value(metadata i32 0, metadata !12200, metadata !DIExpression()), !dbg !12209
  br label %29, !dbg !12239

; <label>:29:                                     ; preds = %25, %14
  %30 = phi i32 [ 1, %14 ], [ 0, %25 ]
  call void @llvm.dbg.value(metadata i32 1, metadata !12200, metadata !DIExpression()), !dbg !12209
  call void @llvm.dbg.value(metadata i64 0, metadata !12199, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i64 undef, metadata !12198, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i64 undef, metadata !12197, metadata !DIExpression()), !dbg !12223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9, !dbg !12240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9, !dbg !12240
  br label %66

; <label>:31:                                     ; preds = %9
  %32 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i32 5) #9, !dbg !12241
  %33 = call i32 @emsg(i8* %32) #9, !dbg !12243
  call void @llvm.dbg.value(metadata i32 1, metadata !12200, metadata !DIExpression()), !dbg !12209
  call void @llvm.dbg.value(metadata i64 0, metadata !12199, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i64 undef, metadata !12198, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i64 undef, metadata !12197, metadata !DIExpression()), !dbg !12223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9, !dbg !12240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9, !dbg !12240
  br label %98

; <label>:34:                                     ; preds = %3, %3
  %35 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !12244
  %36 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %35, i64 0, i32 0, !dbg !12246
  %37 = load i32, i32* %36, align 8, !dbg !12246, !tbaa !3221
  switch i32 %37, label %63 [
    i32 5, label %38
    i32 7, label %38
  ], !dbg !12247

; <label>:38:                                     ; preds = %34, %34
  %39 = tail call i64 @tv_get_lnum(%struct.typval_T* nonnull %0) #9, !dbg !12248
  call void @llvm.dbg.value(metadata i64 %39, metadata !12197, metadata !DIExpression()), !dbg !12223
  %40 = icmp slt i64 %39, 0, !dbg !12250
  br i1 %40, label %41, label %45, !dbg !12252

; <label>:41:                                     ; preds = %38
  %42 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !12253
  %43 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !12254
  %44 = tail call i32 (i8*, ...) @semsg(i8* %42, i8* %43) #9, !dbg !12255
  br label %45, !dbg !12255

; <label>:45:                                     ; preds = %41, %38
  %46 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %35, i32* null) #9, !dbg !12256
  call void @llvm.dbg.value(metadata i64 %46, metadata !12198, metadata !DIExpression()), !dbg !12226
  %47 = icmp eq i32 %2, 0, !dbg !12257
  br i1 %47, label %55, label %48, !dbg !12259

; <label>:48:                                     ; preds = %45
  %49 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12260, !tbaa !2783
  %50 = trunc i64 %39 to i32, !dbg !12261
  %51 = trunc i64 %46 to i32, !dbg !12262
  %52 = tail call i32 @buf_charidx_to_byteidx(%struct.file_buffer* %49, i32 %50, i32 %51) #9, !dbg !12263
  %53 = add nsw i32 %52, 1, !dbg !12264
  %54 = sext i32 %53 to i64, !dbg !12263
  call void @llvm.dbg.value(metadata i64 %54, metadata !12198, metadata !DIExpression()), !dbg !12226
  br label %55, !dbg !12265

; <label>:55:                                     ; preds = %45, %48
  %56 = phi i64 [ %54, %48 ], [ %46, %45 ]
  call void @llvm.dbg.value(metadata i64 %56, metadata !12198, metadata !DIExpression()), !dbg !12226
  %57 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !12266
  %58 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %57, i64 0, i32 0, !dbg !12268
  %59 = load i32, i32* %58, align 8, !dbg !12268, !tbaa !3221
  %60 = icmp eq i32 %59, 0, !dbg !12269
  br i1 %60, label %66, label %61, !dbg !12270

; <label>:61:                                     ; preds = %55
  %62 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %57, i32* null) #9, !dbg !12271
  call void @llvm.dbg.value(metadata i64 %62, metadata !12199, metadata !DIExpression()), !dbg !12208
  br label %66, !dbg !12272

; <label>:63:                                     ; preds = %34, %3
  %64 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i32 5) #9, !dbg !12273
  %65 = tail call i32 @emsg(i8* %64) #9, !dbg !12275
  br label %98, !dbg !12276

; <label>:66:                                     ; preds = %29, %55, %61
  %67 = phi i64 [ %39, %61 ], [ %39, %55 ], [ %16, %29 ]
  %68 = phi i64 [ %56, %61 ], [ %56, %55 ], [ %19, %29 ]
  %69 = phi i64 [ %62, %61 ], [ 0, %55 ], [ %22, %29 ]
  %70 = phi i32 [ 1, %61 ], [ 1, %55 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %70, metadata !12200, metadata !DIExpression()), !dbg !12209
  call void @llvm.dbg.value(metadata i64 %69, metadata !12199, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i64 %68, metadata !12198, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i64 %67, metadata !12197, metadata !DIExpression()), !dbg !12223
  %71 = or i64 %68, %67, !dbg !12277
  %72 = or i64 %71, %69, !dbg !12277
  %73 = icmp slt i64 %72, 0, !dbg !12277
  br i1 %73, label %98, label %74, !dbg !12277

; <label>:74:                                     ; preds = %66
  %75 = icmp sgt i64 %67, 0, !dbg !12279
  br i1 %75, label %76, label %79, !dbg !12281

; <label>:76:                                     ; preds = %74
  %77 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12282, !tbaa !2783
  %78 = getelementptr inbounds %struct.window_S, %struct.window_S* %77, i64 0, i32 7, i32 0, !dbg !12283
  store i64 %67, i64* %78, align 8, !dbg !12284, !tbaa !4150
  br label %79, !dbg !12282

; <label>:79:                                     ; preds = %76, %74
  %80 = icmp sgt i64 %68, 0, !dbg !12285
  br i1 %80, label %83, label %81, !dbg !12287

; <label>:81:                                     ; preds = %79
  %82 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12288, !tbaa !2783
  br label %88, !dbg !12287

; <label>:83:                                     ; preds = %79
  %84 = trunc i64 %68 to i32, !dbg !12289
  %85 = add i32 %84, -1, !dbg !12289
  %86 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12290, !tbaa !2783
  %87 = getelementptr inbounds %struct.window_S, %struct.window_S* %86, i64 0, i32 7, i32 1, !dbg !12291
  store i32 %85, i32* %87, align 8, !dbg !12292, !tbaa !4162
  br label %88, !dbg !12290

; <label>:88:                                     ; preds = %81, %83
  %89 = phi %struct.window_S* [ %82, %81 ], [ %86, %83 ], !dbg !12288
  %90 = trunc i64 %69 to i32, !dbg !12293
  %91 = getelementptr inbounds %struct.window_S, %struct.window_S* %89, i64 0, i32 7, i32 2, !dbg !12294
  store i32 %90, i32* %91, align 4, !dbg !12295, !tbaa !12171
  call void @check_cursor() #9, !dbg !12296
  %92 = load i32, i32* @has_mbyte, align 4, !dbg !12297, !tbaa !2904
  %93 = icmp eq i32 %92, 0, !dbg !12297
  br i1 %93, label %95, label %94, !dbg !12299

; <label>:94:                                     ; preds = %88
  call void @mb_adjust_cursor() #9, !dbg !12300
  br label %95, !dbg !12300

; <label>:95:                                     ; preds = %88, %94
  %96 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12301, !tbaa !2783
  %97 = getelementptr inbounds %struct.window_S, %struct.window_S* %96, i64 0, i32 9, !dbg !12302
  store i32 %70, i32* %97, align 4, !dbg !12303, !tbaa !9869
  store i64 0, i64* %6, align 8, !dbg !12304, !tbaa !2918
  br label %98, !dbg !12305

; <label>:98:                                     ; preds = %31, %66, %95, %63
  ret void, !dbg !12305
}

declare i32 @list2fpos(%struct.typval_T*, %struct.pos_T*, i32*, i32*, i32) local_unnamed_addr #3

declare i64 @tv_get_lnum(%struct.typval_T*) local_unnamed_addr #3

declare i32 @buf_charidx_to_byteidx(%struct.file_buffer*, i32, i32) local_unnamed_addr #3

declare void @check_cursor() local_unnamed_addr #3

declare void @mb_adjust_cursor() local_unnamed_addr #3

declare void @out_str(i8*) local_unnamed_addr #3

declare void @out_flush() local_unnamed_addr #3

declare i32 @channel_is_open(%struct.channel_S*) local_unnamed_addr #3

declare void @internal_error_no_abort(i8*) local_unnamed_addr #3

declare i32 @rettv_dict_alloc(%struct.typval_T*) local_unnamed_addr #3

declare i8* @vim_strchr(i8*, i32) local_unnamed_addr #3

declare i32 @dict_add_string(%struct.dictvar_S*, i8*, i8*) local_unnamed_addr #3

declare i8* @vim_strsave_escaped(i8*, i8*) local_unnamed_addr #3

declare i8* @tv_get_string_buf(%struct.typval_T*, i8*) local_unnamed_addr #3

declare i8* @skipwhite(i8*) local_unnamed_addr #3

declare i32 @eval1(i8**, %struct.typval_T*, %struct.evalarg_T*) local_unnamed_addr #3

declare i32 @aborting() local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #4

declare i8* @expand_env_save(i8*) local_unnamed_addr #3

declare i32 @eval_option(i8**, %struct.typval_T*, i32) local_unnamed_addr #3

declare i32 @function_exists(i8*, i32) local_unnamed_addr #3

declare i32 @cmd_exists(i8*) local_unnamed_addr #3

declare i32 @autocmd_supported(i8*) local_unnamed_addr #3

declare i32 @au_exists(i8*) local_unnamed_addr #3

declare i32 @var_exists(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @exp(double) local_unnamed_addr #5

declare void @rettv_list_set(%struct.typval_T*, %struct.listvar_S*) local_unnamed_addr #3

declare i8* @eval_vars(i8*, i8*, i32*, i64*, i8**, i32*) local_unnamed_addr #3

declare void @ExpandInit(%struct.expand*) local_unnamed_addr #3

declare i8* @ExpandOne(%struct.expand*, i8*, i8*, i32, i32) local_unnamed_addr #3

declare void @ExpandCleanup(%struct.expand*) local_unnamed_addr #3

declare i32 @expand_filename(%struct.exarg*, i8**, i8**) local_unnamed_addr #3

declare i32 @check_secure() local_unnamed_addr #3

declare i8* @vim_strsave_escape_csi(i8*) local_unnamed_addr #3

declare void @add_to_input_buf(i8*, i32) local_unnamed_addr #3

declare i32 @ins_typebuf(i8*, i32, i32, i32, i32) local_unnamed_addr #3

declare void @exec_normal(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @fmod(double, double) local_unnamed_addr #5

declare i8* @vim_strsave_fnameescape(i8*, i32) local_unnamed_addr #3

declare void @gui_mch_set_foreground() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @common_function(%struct.typval_T*, %struct.typval_T* nocapture, i32) unnamed_addr #0 !dbg !12306 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [25 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12308, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12309, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 %2, metadata !12310, metadata !DIExpression()), !dbg !12343
  %7 = bitcast i8** %4 to i8*, !dbg !12344
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9, !dbg !12344
  call void @llvm.dbg.value(metadata i32 0, metadata !12313, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata %struct.partial_S* null, metadata !12314, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.value(metadata i8* null, metadata !12315, metadata !DIExpression()), !dbg !12347
  %8 = bitcast i32* %5 to i8*, !dbg !12348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9, !dbg !12348
  call void @llvm.dbg.value(metadata i32 0, metadata !12316, metadata !DIExpression()), !dbg !12349
  store i32 0, i32* %5, align 4, !dbg !12349, !tbaa !2904
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !12350
  %10 = load i32, i32* %9, align 8, !dbg !12350, !tbaa !3221
  switch i32 %10, label %22 [
    i32 9, label %11
    i32 10, label %15
  ], !dbg !12352

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !12353
  %13 = bitcast %union.anon* %12 to i8**, !dbg !12355
  %14 = load i8*, i8** %13, align 8, !dbg !12355, !tbaa !2918
  call void @llvm.dbg.value(metadata i8* %14, metadata !12311, metadata !DIExpression()), !dbg !12356
  br label %28, !dbg !12357

; <label>:15:                                     ; preds = %3
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !12358
  %17 = bitcast %union.anon* %16 to %struct.partial_S**, !dbg !12360
  %18 = load %struct.partial_S*, %struct.partial_S** %17, align 8, !dbg !12360, !tbaa !2918
  %19 = icmp eq %struct.partial_S* %18, null, !dbg !12361
  br i1 %19, label %22, label %20, !dbg !12362

; <label>:20:                                     ; preds = %15
  call void @llvm.dbg.value(metadata %struct.partial_S* %18, metadata !12314, metadata !DIExpression()), !dbg !12346
  %21 = tail call i8* @partial_name(%struct.partial_S* nonnull %18) #9, !dbg !12363
  call void @llvm.dbg.value(metadata i8* %21, metadata !12311, metadata !DIExpression()), !dbg !12356
  br label %28, !dbg !12365

; <label>:22:                                     ; preds = %3, %15
  %23 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !12366
  call void @llvm.dbg.value(metadata i8* %23, metadata !12311, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i32 1, metadata !12313, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata i8* %23, metadata !12311, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata %struct.partial_S* null, metadata !12314, metadata !DIExpression()), !dbg !12346
  %24 = tail call i8* @vim_strchr(i8* %23, i32 35) #9, !dbg !12368
  %25 = icmp eq i8* %24, null, !dbg !12370
  %26 = icmp ne i32 %2, 0, !dbg !12371
  %27 = or i1 %26, %25, !dbg !12372
  br i1 %27, label %32, label %42, !dbg !12372

; <label>:28:                                     ; preds = %11, %20
  %29 = phi %struct.partial_S* [ %18, %20 ], [ null, %11 ]
  %30 = phi i8* [ %21, %20 ], [ %14, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !12311, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata %struct.partial_S* null, metadata !12314, metadata !DIExpression()), !dbg !12346
  %31 = icmp eq i32 %2, 0, !dbg !12371
  br i1 %31, label %42, label %32, !dbg !12373

; <label>:32:                                     ; preds = %28, %22
  %33 = phi i8* [ %30, %28 ], [ %23, %22 ]
  %34 = phi i1 [ false, %28 ], [ true, %22 ]
  %35 = phi %struct.partial_S* [ %29, %28 ], [ null, %22 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !12312, metadata !DIExpression()), !dbg !12374
  store i8* %33, i8** %4, align 8, !dbg !12375, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %4, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.value(metadata i32* %5, metadata !12316, metadata !DIExpression()), !dbg !12349
  %36 = call i8* @trans_function_name(i8** nonnull %4, i32* nonnull %5, i32 0, i32 15, %struct.funcdict_T* null, %struct.partial_S** null, %struct.type_S** null) #9, !dbg !12377
  call void @llvm.dbg.value(metadata i8* %36, metadata !12315, metadata !DIExpression()), !dbg !12347
  %37 = load i8*, i8** %4, align 8, !dbg !12378, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %37, metadata !12312, metadata !DIExpression()), !dbg !12374
  %38 = load i8, i8* %37, align 1, !dbg !12380, !tbaa !2918
  %39 = icmp eq i8 %38, 0, !dbg !12381
  br i1 %39, label %42, label %40

; <label>:40:                                     ; preds = %32
  call void @llvm.dbg.value(metadata i8* %46, metadata !12311, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i8* %45, metadata !12315, metadata !DIExpression()), !dbg !12347
  %41 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !12382
  br i1 %34, label %64, label %68, !dbg !12383

; <label>:42:                                     ; preds = %32, %28, %22
  %43 = phi i1 [ true, %22 ], [ false, %28 ], [ %34, %32 ]
  %44 = phi %struct.partial_S* [ null, %22 ], [ %29, %28 ], [ %35, %32 ]
  %45 = phi i8* [ null, %22 ], [ null, %28 ], [ %36, %32 ]
  %46 = phi i8* [ %23, %22 ], [ %30, %28 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i8* %46, metadata !12311, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i8* %45, metadata !12315, metadata !DIExpression()), !dbg !12347
  %47 = icmp eq i8* %46, null, !dbg !12384
  br i1 %47, label %60, label %48, !dbg !12385

; <label>:48:                                     ; preds = %42
  %49 = load i8, i8* %46, align 1, !dbg !12386, !tbaa !2918
  %50 = icmp eq i8 %49, 0, !dbg !12387
  br i1 %50, label %60, label %51, !dbg !12388

; <label>:51:                                     ; preds = %48
  %52 = zext i8 %49 to i32, !dbg !12386
  %53 = add nsw i32 %52, -48, !dbg !12389
  %54 = icmp ult i32 %53, 10, !dbg !12389
  %55 = and i1 %43, %54, !dbg !12390
  br i1 %55, label %60, label %56, !dbg !12390

; <label>:56:                                     ; preds = %51
  %57 = icmp ne i32 %2, 0, !dbg !12391
  %58 = icmp eq i8* %45, null, !dbg !12392
  %59 = and i1 %57, %58, !dbg !12393
  br i1 %59, label %60, label %73, !dbg !12393

; <label>:60:                                     ; preds = %51, %56, %48, %42
  %61 = phi i8* [ %46, %51 ], [ %46, %56 ], [ %46, %48 ], [ null, %42 ]
  %62 = phi i8* [ %45, %51 ], [ null, %56 ], [ %45, %48 ], [ %45, %42 ]
  %63 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !12382
  br i1 %43, label %64, label %68, !dbg !12383

; <label>:64:                                     ; preds = %40, %60
  %65 = phi i8* [ %41, %40 ], [ %63, %60 ]
  %66 = phi i8* [ %36, %40 ], [ %62, %60 ]
  %67 = call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !12394
  br label %68, !dbg !12383

; <label>:68:                                     ; preds = %40, %60, %64
  %69 = phi i8* [ %65, %64 ], [ %63, %60 ], [ %41, %40 ]
  %70 = phi i8* [ %66, %64 ], [ %62, %60 ], [ %36, %40 ]
  %71 = phi i8* [ %67, %64 ], [ %61, %60 ], [ null, %40 ], !dbg !12383
  %72 = call i32 (i8*, ...) @semsg(i8* %69, i8* %71) #9, !dbg !12395
  br label %341, !dbg !12395

; <label>:73:                                     ; preds = %56
  br i1 %58, label %85, label %74, !dbg !12396

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* %5, align 4, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %75, metadata !12316, metadata !DIExpression()), !dbg !12349
  br i1 %57, label %76, label %79, !dbg !12397

; <label>:76:                                     ; preds = %74
  %77 = call %struct.ufunc_T* @find_func(i8* nonnull %45, i32 %75, %struct.cctx_S* null) #9, !dbg !12398
  %78 = icmp eq %struct.ufunc_T* %77, null, !dbg !12399
  br i1 %78, label %82, label %85, !dbg !12400

; <label>:79:                                     ; preds = %74
  %80 = call i32 @translated_function_exists(i8* nonnull %45, i32 %75) #9, !dbg !12401
  %81 = icmp eq i32 %80, 0, !dbg !12401
  br i1 %81, label %82, label %85, !dbg !12397

; <label>:82:                                     ; preds = %79, %76
  %83 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.721, i64 0, i64 0), i32 5) #9, !dbg !12402
  %84 = call i32 (i8*, ...) @semsg(i8* %83, i8* nonnull %46) #9, !dbg !12403
  br label %341, !dbg !12403

; <label>:85:                                     ; preds = %79, %73, %76
  call void @llvm.dbg.value(metadata i32 0, metadata !12317, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 0, metadata !12321, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata %struct.listvar_S* null, metadata !12322, metadata !DIExpression()), !dbg !12406
  %86 = call i32 @strncmp(i8* nonnull %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.722, i64 0, i64 0), i64 2) #10, !dbg !12407
  %87 = icmp eq i32 %86, 0, !dbg !12408
  br i1 %87, label %91, label %88, !dbg !12409

; <label>:88:                                     ; preds = %85
  %89 = call i32 @strncmp(i8* nonnull %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.723, i64 0, i64 0), i64 5) #10, !dbg !12410
  %90 = icmp eq i32 %89, 0, !dbg !12411
  br i1 %90, label %91, label %111, !dbg !12412

; <label>:91:                                     ; preds = %88, %85
  %92 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i64 0, i64 0, !dbg !12413
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %92) #9, !dbg !12413
  call void @llvm.dbg.declare(metadata [25 x i8]* %6, metadata !12323, metadata !DIExpression()), !dbg !12414
  %93 = load i8, i8* %46, align 1, !dbg !12415, !tbaa !2918
  %94 = icmp eq i8 %93, 115, !dbg !12416
  %95 = load i32, i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 0), align 8, !dbg !12417, !tbaa !12418
  %96 = sext i32 %95 to i64, !dbg !12419
  %97 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.724, i64 0, i64 0), i64 %96) #9, !dbg !12420
  %98 = call i64 @strlen(i8* nonnull %92) #10, !dbg !12421
  %99 = select i1 %94, i64 2, i64 5, !dbg !12422
  %100 = getelementptr inbounds i8, i8* %46, i64 %99, !dbg !12422
  %101 = call i64 @strlen(i8* nonnull %100) #10, !dbg !12422
  %102 = add i64 %98, 1, !dbg !12423
  %103 = add i64 %102, %101, !dbg !12424
  %104 = call i8* @alloc(i64 %103) #9, !dbg !12425
  call void @llvm.dbg.value(metadata i8* %104, metadata !12312, metadata !DIExpression()), !dbg !12374
  store i8* %104, i8** %4, align 8, !dbg !12426, !tbaa !2783
  %105 = icmp eq i8* %104, null, !dbg !12427
  br i1 %105, label %110, label %106, !dbg !12429

; <label>:106:                                    ; preds = %91
  %107 = call i8* @strcpy(i8* nonnull %104, i8* nonnull %92) #9, !dbg !12430
  %108 = load i8*, i8** %4, align 8, !dbg !12432, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %108, metadata !12312, metadata !DIExpression()), !dbg !12374
  %109 = call i8* @strcat(i8* %108, i8* nonnull %100) #9, !dbg !12432
  br label %110, !dbg !12433

; <label>:110:                                    ; preds = %91, %106
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %92) #9, !dbg !12434
  br label %113, !dbg !12435

; <label>:111:                                    ; preds = %88
  %112 = call i8* @vim_strsave(i8* nonnull %46) #9, !dbg !12436
  call void @llvm.dbg.value(metadata i8* %112, metadata !12312, metadata !DIExpression()), !dbg !12374
  store i8* %112, i8** %4, align 8, !dbg !12437, !tbaa !2783
  br label %113

; <label>:113:                                    ; preds = %111, %110
  %114 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !12438
  %115 = load i32, i32* %114, align 8, !dbg !12438, !tbaa !3221
  %116 = icmp eq i32 %115, 0, !dbg !12440
  br i1 %116, label %163, label %117, !dbg !12441

; <label>:117:                                    ; preds = %113
  %118 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 0, !dbg !12442
  %119 = load i32, i32* %118, align 8, !dbg !12442, !tbaa !3221
  switch i32 %119, label %128 [
    i32 0, label %120
    i32 12, label %132
  ], !dbg !12445

; <label>:120:                                    ; preds = %117
  %121 = icmp eq i32 %115, 12, !dbg !12446
  br i1 %121, label %122, label %138

; <label>:122:                                    ; preds = %120
  %123 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !12448
  %124 = bitcast %union.anon* %123 to %struct.dictvar_S**, !dbg !12452
  %125 = load %struct.dictvar_S*, %struct.dictvar_S** %124, align 8, !dbg !12452, !tbaa !2918
  %126 = icmp ne %struct.dictvar_S* %125, null, !dbg !12453
  %127 = zext i1 %126 to i32, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %137, metadata !12317, metadata !DIExpression()), !dbg !12404
  br label %163, !dbg !12455

; <label>:128:                                    ; preds = %117
  %129 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.725, i64 0, i64 0), i32 5) #9, !dbg !12456
  %130 = call i32 @emsg(i8* %129) #9, !dbg !12459
  %131 = load i8*, i8** %4, align 8, !dbg !12460, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %131, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %131) #9, !dbg !12461
  br label %341, !dbg !12462

; <label>:132:                                    ; preds = %117
  %133 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, i32 2, !dbg !12448
  %134 = bitcast %union.anon* %133 to %struct.dictvar_S**, !dbg !12452
  %135 = load %struct.dictvar_S*, %struct.dictvar_S** %134, align 8, !dbg !12452, !tbaa !2918
  %136 = icmp eq %struct.dictvar_S* %135, null, !dbg !12453
  %137 = select i1 %136, i32 0, i32 2, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %137, metadata !12317, metadata !DIExpression()), !dbg !12404
  br label %138

; <label>:138:                                    ; preds = %120, %132
  %139 = phi i32 [ %137, %132 ], [ 0, %120 ]
  %140 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 0, !dbg !12463
  %141 = load i32, i32* %140, align 8, !dbg !12463, !tbaa !3221
  %142 = icmp eq i32 %141, 11, !dbg !12467
  br i1 %142, label %147, label %143, !dbg !12468

; <label>:143:                                    ; preds = %138
  %144 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.726, i64 0, i64 0), i32 5) #9, !dbg !12469
  %145 = call i32 @emsg(i8* %144) #9, !dbg !12471
  %146 = load i8*, i8** %4, align 8, !dbg !12472, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %146, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %146) #9, !dbg !12473
  br label %341, !dbg !12474

; <label>:147:                                    ; preds = %138
  %148 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, i32 2, !dbg !12475
  %149 = bitcast %union.anon* %148 to %struct.listvar_S**, !dbg !12476
  %150 = load %struct.listvar_S*, %struct.listvar_S** %149, align 8, !dbg !12476, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %150, metadata !12322, metadata !DIExpression()), !dbg !12406
  %151 = icmp eq %struct.listvar_S* %150, null, !dbg !12477
  br i1 %151, label %163, label %152, !dbg !12479

; <label>:152:                                    ; preds = %147
  %153 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %150, i64 0, i32 8, !dbg !12480
  %154 = load i32, i32* %153, align 4, !dbg !12480, !tbaa !3541
  %155 = icmp eq i32 %154, 0, !dbg !12481
  br i1 %155, label %163, label %156, !dbg !12482

; <label>:156:                                    ; preds = %152
  %157 = icmp sgt i32 %154, 20, !dbg !12483
  br i1 %157, label %161, label %158, !dbg !12485

; <label>:158:                                    ; preds = %156
  call void @llvm.dbg.value(metadata %struct.listvar_S* %165, metadata !12322, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata i32 0, metadata !12321, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 %164, metadata !12317, metadata !DIExpression()), !dbg !12404
  %159 = icmp ne i32 %139, 0, !dbg !12486
  %160 = icmp ne %struct.partial_S* %44, null, !dbg !12487
  br label %170, !dbg !12488

; <label>:161:                                    ; preds = %156
  call void @emsg_funcname(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_toomanyarg, i64 0, i64 0), i8* nonnull %46) #9, !dbg !12489
  %162 = load i8*, i8** %4, align 8, !dbg !12491, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %162, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %162) #9, !dbg !12492
  br label %341, !dbg !12493

; <label>:163:                                    ; preds = %122, %147, %152, %113
  %164 = phi i32 [ 0, %113 ], [ %139, %152 ], [ %139, %147 ], [ %127, %122 ]
  %165 = phi %struct.listvar_S* [ null, %113 ], [ %150, %152 ], [ null, %147 ], [ null, %122 ]
  call void @llvm.dbg.value(metadata %struct.listvar_S* %165, metadata !12322, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata i32 0, metadata !12321, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 %164, metadata !12317, metadata !DIExpression()), !dbg !12404
  %166 = icmp sgt i32 %164, 0, !dbg !12486
  %167 = icmp ne %struct.partial_S* %44, null, !dbg !12487
  %168 = or i1 %167, %166, !dbg !12488
  %169 = or i1 %57, %168, !dbg !12488
  br i1 %169, label %170, label %335, !dbg !12488

; <label>:170:                                    ; preds = %158, %163
  %171 = phi i1 [ %160, %158 ], [ %167, %163 ]
  %172 = phi i1 [ true, %158 ], [ false, %163 ]
  %173 = phi i1 [ %159, %158 ], [ %166, %163 ]
  %174 = phi %struct.listvar_S* [ %150, %158 ], [ %165, %163 ]
  %175 = phi i32 [ %139, %158 ], [ %164, %163 ]
  %176 = call i8* @alloc_clear(i64 104) #9, !dbg !12494
  call void @llvm.dbg.value(metadata i8* %176, metadata !12330, metadata !DIExpression()), !dbg !12495
  %177 = icmp eq i8* %176, null, !dbg !12496
  br i1 %177, label %178, label %180, !dbg !12497

; <label>:178:                                    ; preds = %170
  %179 = load i8*, i8** %4, align 8, !dbg !12498, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %179, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %179) #9, !dbg !12499
  br label %331, !dbg !12499

; <label>:180:                                    ; preds = %170
  br i1 %172, label %186, label %181, !dbg !12500

; <label>:181:                                    ; preds = %180
  br i1 %171, label %182, label %277, !dbg !12501

; <label>:182:                                    ; preds = %181
  %183 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 6, !dbg !12502
  %184 = load i32, i32* %183, align 8, !dbg !12502, !tbaa !6290
  %185 = icmp sgt i32 %184, 0, !dbg !12503
  br i1 %185, label %190, label %277, !dbg !12504

; <label>:186:                                    ; preds = %180
  call void @llvm.dbg.value(metadata i32 0, metadata !12338, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.value(metadata i32 0, metadata !12339, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i32 0, metadata !12340, metadata !DIExpression()), !dbg !12507
  br i1 %171, label %187, label %190, !dbg !12508

; <label>:187:                                    ; preds = %186
  %188 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 6
  %189 = load i32, i32* %188, align 8, !dbg !12509, !tbaa !6290
  br label %190, !dbg !12508

; <label>:190:                                    ; preds = %182, %187, %186
  %191 = phi i32 [ 0, %186 ], [ %189, %187 ], [ %184, %182 ]
  call void @llvm.dbg.value(metadata i32 %191, metadata !12339, metadata !DIExpression()), !dbg !12506
  %192 = icmp eq %struct.listvar_S* %174, null, !dbg !12511
  br i1 %192, label %196, label %193, !dbg !12513

; <label>:193:                                    ; preds = %190
  %194 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 8, !dbg !12514
  %195 = load i32, i32* %194, align 4, !dbg !12514, !tbaa !3541
  call void @llvm.dbg.value(metadata i32 %195, metadata !12340, metadata !DIExpression()), !dbg !12507
  br label %196, !dbg !12515

; <label>:196:                                    ; preds = %190, %193
  %197 = phi i32 [ %195, %193 ], [ 0, %190 ]
  call void @llvm.dbg.value(metadata i32 %197, metadata !12340, metadata !DIExpression()), !dbg !12507
  %198 = add nsw i32 %197, %191, !dbg !12516
  %199 = getelementptr inbounds i8, i8* %176, i64 72, !dbg !12517
  %200 = bitcast i8* %199 to i32*, !dbg !12517
  store i32 %198, i32* %200, align 8, !dbg !12518, !tbaa !6290
  %201 = sext i32 %198 to i64, !dbg !12519
  %202 = shl nsw i64 %201, 4, !dbg !12519
  %203 = call i8* @alloc(i64 %202) #9, !dbg !12519
  %204 = getelementptr inbounds i8, i8* %176, i64 80, !dbg !12520
  %205 = bitcast i8* %204 to %struct.typval_T**, !dbg !12520
  %206 = bitcast i8* %204 to i8**, !dbg !12521
  store i8* %203, i8** %206, align 8, !dbg !12521, !tbaa !6295
  %207 = icmp eq i8* %203, null, !dbg !12522
  %208 = bitcast i8* %203 to %struct.typval_T*, !dbg !12524
  br i1 %207, label %275, label %209, !dbg !12524

; <label>:209:                                    ; preds = %196
  call void @llvm.dbg.value(metadata i32 0, metadata !12338, metadata !DIExpression()), !dbg !12505
  %210 = icmp sgt i32 %191, 0, !dbg !12525
  br i1 %210, label %211, label %227, !dbg !12528

; <label>:211:                                    ; preds = %209
  %212 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 7
  %213 = zext i32 %191 to i64
  call void @llvm.dbg.value(metadata i64 0, metadata !12338, metadata !DIExpression()), !dbg !12505
  %214 = load %struct.typval_T*, %struct.typval_T** %212, align 8, !dbg !12529, !tbaa !6295
  call void @copy_tv(%struct.typval_T* %214, %struct.typval_T* %208) #9, !dbg !12530
  %215 = icmp eq i32 %191, 1, !dbg !12525
  br i1 %215, label %225, label %216, !dbg !12528, !llvm.loop !12531

; <label>:216:                                    ; preds = %211
  br label %217, !dbg !12533

; <label>:217:                                    ; preds = %216, %217
  %218 = phi i64 [ %223, %217 ], [ 1, %216 ]
  %219 = load %struct.typval_T*, %struct.typval_T** %205, align 8, !dbg !12533, !tbaa !6295
  call void @llvm.dbg.value(metadata i64 %218, metadata !12338, metadata !DIExpression()), !dbg !12505
  %220 = load %struct.typval_T*, %struct.typval_T** %212, align 8, !dbg !12529, !tbaa !6295
  %221 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %220, i64 %218, !dbg !12534
  %222 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %219, i64 %218, !dbg !12535
  call void @copy_tv(%struct.typval_T* nonnull %221, %struct.typval_T* nonnull %222) #9, !dbg !12530
  %223 = add nuw nsw i64 %218, 1, !dbg !12536
  %224 = icmp eq i64 %223, %213, !dbg !12525
  br i1 %224, label %225, label %217, !dbg !12528, !llvm.loop !12531

; <label>:225:                                    ; preds = %217, %211
  %226 = zext i32 %191 to i64, !dbg !12537
  br label %227, !dbg !12537

; <label>:227:                                    ; preds = %225, %209
  %228 = phi i64 [ 0, %209 ], [ %226, %225 ]
  %229 = icmp sgt i32 %197, 0, !dbg !12537
  br i1 %229, label %230, label %277, !dbg !12539

; <label>:230:                                    ; preds = %227
  %231 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 0, !dbg !12540
  %232 = load %struct.listitem_S*, %struct.listitem_S** %231, align 8, !dbg !12540, !tbaa !3610
  %233 = icmp eq %struct.listitem_S* %232, @range_list_item, !dbg !12540
  br i1 %233, label %234, label %261, !dbg !12543

; <label>:234:                                    ; preds = %230
  call void @llvm.dbg.value(metadata %struct.listvar_S* %165, metadata !3612, metadata !DIExpression()) #9, !dbg !12544
  %235 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 2, !dbg !12546
  %236 = getelementptr inbounds %union.anon.0, %union.anon.0* %235, i64 0, i32 0, i32 0, !dbg !12547
  %237 = load i64, i64* %236, align 8, !dbg !12547, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %237, metadata !3617, metadata !DIExpression()) #9, !dbg !12548
  %238 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 2, i32 0, i32 1, !dbg !12549
  %239 = load i64, i64* %238, align 8, !dbg !12549, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %239, metadata !3618, metadata !DIExpression()) #9, !dbg !12550
  %240 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 2, i32 0, i32 2, !dbg !12551
  %241 = load i32, i32* %240, align 8, !dbg !12551, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %241, metadata !3619, metadata !DIExpression()) #9, !dbg !12552
  store %struct.listitem_S* null, %struct.listitem_S** %231, align 8, !dbg !12553, !tbaa !3610
  %242 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %174, i64 0, i32 8, !dbg !12554
  store i32 0, i32* %242, align 4, !dbg !12555, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %237, metadata !3620, metadata !DIExpression()) #9, !dbg !12556
  %243 = icmp sgt i32 %241, 0, !dbg !12557
  %244 = icmp sle i64 %237, %239, !dbg !12558
  %245 = icmp sge i64 %237, %239, !dbg !12559
  %246 = select i1 %243, i1 %244, i1 %245, !dbg !12560
  %247 = bitcast %union.anon.0* %235 to i8*, !dbg !12561
  call void @llvm.memset.p0i8.i64(i8* nonnull %247, i8 0, i64 16, i32 8, i1 false) #9, !dbg !12562
  br i1 %246, label %248, label %277, !dbg !12561

; <label>:248:                                    ; preds = %234
  %249 = sext i32 %241 to i64
  br label %254, !dbg !12561

; <label>:250:                                    ; preds = %254
  call void @llvm.dbg.value(metadata i64 %258, metadata !3620, metadata !DIExpression()) #9, !dbg !12556
  %251 = icmp sle i64 %258, %239, !dbg !12558
  %252 = icmp sge i64 %258, %239, !dbg !12559
  %253 = select i1 %243, i1 %251, i1 %252, !dbg !12560
  br i1 %253, label %254, label %259, !dbg !12561, !llvm.loop !3642

; <label>:254:                                    ; preds = %250, %248
  %255 = phi i64 [ %237, %248 ], [ %258, %250 ]
  call void @llvm.dbg.value(metadata i64 %255, metadata !3620, metadata !DIExpression()) #9, !dbg !12556
  %256 = call i32 @list_append_number(%struct.listvar_S* %174, i64 %255) #9, !dbg !12563
  %257 = icmp eq i32 %256, 0, !dbg !12564
  %258 = add nsw i64 %255, %249, !dbg !12565
  call void @llvm.dbg.value(metadata i64 %258, metadata !3620, metadata !DIExpression()) #9, !dbg !12556
  br i1 %257, label %259, label %250, !dbg !12566

; <label>:259:                                    ; preds = %250, %254
  %260 = load %struct.listitem_S*, %struct.listitem_S** %231, align 8, !dbg !12567, !tbaa !2783
  br label %261, !dbg !12567

; <label>:261:                                    ; preds = %259, %230
  %262 = phi %struct.listitem_S* [ %260, %259 ], [ %232, %230 ], !dbg !12567
  call void @llvm.dbg.value(metadata %struct.listitem_S** %231, metadata !12333, metadata !DIExpression(DW_OP_deref)), !dbg !12569
  call void @llvm.dbg.value(metadata %struct.listitem_S* %262, metadata !12333, metadata !DIExpression()), !dbg !12569
  %263 = icmp eq %struct.listitem_S* %262, null, !dbg !12570
  br i1 %263, label %277, label %264, !dbg !12567

; <label>:264:                                    ; preds = %261
  br label %265, !dbg !12572

; <label>:265:                                    ; preds = %264, %265
  %266 = phi i64 [ %270, %265 ], [ %228, %264 ]
  %267 = phi %struct.listitem_S* [ %273, %265 ], [ %262, %264 ]
  call void @llvm.dbg.value(metadata i64 %266, metadata !12338, metadata !DIExpression()), !dbg !12505
  %268 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %267, i64 0, i32 2, !dbg !12572
  %269 = load %struct.typval_T*, %struct.typval_T** %205, align 8, !dbg !12573, !tbaa !6295
  %270 = add nuw i64 %266, 1, !dbg !12574
  %271 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %269, i64 %266, !dbg !12575
  call void @copy_tv(%struct.typval_T* nonnull %268, %struct.typval_T* %271) #9, !dbg !12576
  %272 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %267, i64 0, i32 0, !dbg !12570
  call void @llvm.dbg.value(metadata %struct.listitem_S** %272, metadata !12333, metadata !DIExpression(DW_OP_deref)), !dbg !12569
  %273 = load %struct.listitem_S*, %struct.listitem_S** %272, align 8, !dbg !12567, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.listitem_S* %273, metadata !12333, metadata !DIExpression()), !dbg !12569
  %274 = icmp eq %struct.listitem_S* %273, null, !dbg !12570
  br i1 %274, label %277, label %265, !dbg !12567, !llvm.loop !12577

; <label>:275:                                    ; preds = %196
  call void @vim_free(i8* nonnull %176) #9, !dbg !12579
  %276 = load i8*, i8** %4, align 8, !dbg !12581, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %276, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %276) #9, !dbg !12582
  br label %341

; <label>:277:                                    ; preds = %265, %234, %261, %227, %182, %181
  br i1 %173, label %297, label %278, !dbg !12583

; <label>:278:                                    ; preds = %277
  br i1 %171, label %279, label %316, !dbg !12584

; <label>:279:                                    ; preds = %278
  %280 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 8, !dbg !12586
  %281 = bitcast %struct.dictvar_S** %280 to i64*, !dbg !12586
  %282 = load i64, i64* %281, align 8, !dbg !12586, !tbaa !6274
  %283 = getelementptr inbounds i8, i8* %176, i64 88, !dbg !12589
  %284 = bitcast i8* %283 to i64*, !dbg !12590
  store i64 %282, i64* %284, align 8, !dbg !12590, !tbaa !6274
  %285 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 3, !dbg !12591
  %286 = load i32, i32* %285, align 8, !dbg !12591, !tbaa !12592
  %287 = getelementptr inbounds i8, i8* %176, i64 24, !dbg !12593
  %288 = bitcast i8* %287 to i32*, !dbg !12593
  store i32 %286, i32* %288, align 8, !dbg !12594, !tbaa !12592
  %289 = icmp eq i64 %282, 0, !dbg !12595
  br i1 %289, label %295, label %290, !dbg !12597

; <label>:290:                                    ; preds = %279
  %291 = inttoptr i64 %282 to %struct.dictvar_S*, !dbg !12598
  %292 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %291, i64 0, i32 2, !dbg !12599
  %293 = load i32, i32* %292, align 4, !dbg !12600, !tbaa !12601
  %294 = add nsw i32 %293, 1, !dbg !12600
  store i32 %294, i32* %292, align 4, !dbg !12600, !tbaa !12601
  br label %295, !dbg !12600

; <label>:295:                                    ; preds = %279, %290
  %296 = bitcast i8* %176 to i32*, !dbg !12602
  store i32 1, i32* %296, align 8, !dbg !12603, !tbaa !12604
  br label %308, !dbg !12605

; <label>:297:                                    ; preds = %277
  %298 = sext i32 %175 to i64, !dbg !12607
  %299 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 %298, i32 2, !dbg !12609
  %300 = bitcast %union.anon* %299 to %struct.dictvar_S**, !dbg !12610
  %301 = load %struct.dictvar_S*, %struct.dictvar_S** %300, align 8, !dbg !12610, !tbaa !2918
  %302 = getelementptr inbounds i8, i8* %176, i64 88, !dbg !12611
  %303 = bitcast i8* %302 to %struct.dictvar_S**, !dbg !12611
  store %struct.dictvar_S* %301, %struct.dictvar_S** %303, align 8, !dbg !12612, !tbaa !6274
  %304 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %301, i64 0, i32 2, !dbg !12613
  %305 = load i32, i32* %304, align 4, !dbg !12614, !tbaa !12601
  %306 = add nsw i32 %305, 1, !dbg !12614
  store i32 %306, i32* %304, align 4, !dbg !12614, !tbaa !12601
  %307 = bitcast i8* %176 to i32*, !dbg !12602
  store i32 1, i32* %307, align 8, !dbg !12603, !tbaa !12604
  br i1 %171, label %308, label %318, !dbg !12605

; <label>:308:                                    ; preds = %295, %297
  %309 = getelementptr inbounds %struct.partial_S, %struct.partial_S* %44, i64 0, i32 2, !dbg !12615
  %310 = load %struct.ufunc_T*, %struct.ufunc_T** %309, align 8, !dbg !12615, !tbaa !12616
  %311 = icmp eq %struct.ufunc_T* %310, null, !dbg !12617
  br i1 %311, label %318, label %312, !dbg !12618

; <label>:312:                                    ; preds = %308
  %313 = getelementptr inbounds i8, i8* %176, i64 16, !dbg !12619
  %314 = bitcast i8* %313 to %struct.ufunc_T**, !dbg !12619
  store %struct.ufunc_T* %310, %struct.ufunc_T** %314, align 8, !dbg !12621, !tbaa !12616
  call void @func_ptr_ref(%struct.ufunc_T* nonnull %310) #9, !dbg !12622
  %315 = load i8*, i8** %4, align 8, !dbg !12623, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %315, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %315) #9, !dbg !12624
  br label %331, !dbg !12625

; <label>:316:                                    ; preds = %278
  %317 = bitcast i8* %176 to i32*, !dbg !12602
  store i32 1, i32* %317, align 8, !dbg !12603, !tbaa !12604
  br label %318

; <label>:318:                                    ; preds = %316, %308, %297
  br i1 %57, label %319, label %325, !dbg !12626

; <label>:319:                                    ; preds = %318
  %320 = load i32, i32* %5, align 4, !dbg !12627, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %320, metadata !12316, metadata !DIExpression()), !dbg !12349
  %321 = call %struct.ufunc_T* @find_func(i8* %45, i32 %320, %struct.cctx_S* null) #9, !dbg !12630
  %322 = getelementptr inbounds i8, i8* %176, i64 16, !dbg !12631
  %323 = bitcast i8* %322 to %struct.ufunc_T**, !dbg !12631
  store %struct.ufunc_T* %321, %struct.ufunc_T** %323, align 8, !dbg !12632, !tbaa !12616
  call void @func_ptr_ref(%struct.ufunc_T* %321) #9, !dbg !12633
  %324 = load i8*, i8** %4, align 8, !dbg !12634, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %324, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @vim_free(i8* %324) #9, !dbg !12635
  br label %331, !dbg !12636

; <label>:325:                                    ; preds = %318
  %326 = bitcast i8** %4 to i64*, !dbg !12637
  %327 = load i64, i64* %326, align 8, !dbg !12637, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %4, metadata !12312, metadata !DIExpression(DW_OP_deref)), !dbg !12374
  %328 = getelementptr inbounds i8, i8* %176, i64 8, !dbg !12639
  %329 = bitcast i8* %328 to i64*, !dbg !12640
  store i64 %327, i64* %329, align 8, !dbg !12640, !tbaa !6227
  %330 = inttoptr i64 %327 to i8*, !dbg !12641
  call void @llvm.dbg.value(metadata i8* %330, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @func_ref(i8* %330) #9, !dbg !12642
  br label %331

; <label>:331:                                    ; preds = %312, %325, %319, %178
  %332 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !12643
  store i32 10, i32* %332, align 8, !dbg !12644, !tbaa !3221
  %333 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !12645
  %334 = bitcast %union.anon* %333 to i8**, !dbg !12646
  store i8* %176, i8** %334, align 8, !dbg !12646, !tbaa !2918
  br label %341, !dbg !12647

; <label>:335:                                    ; preds = %163
  %336 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !12648
  store i32 9, i32* %336, align 8, !dbg !12650, !tbaa !3221
  %337 = bitcast i8** %4 to i64*, !dbg !12651
  %338 = load i64, i64* %337, align 8, !dbg !12651, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** %4, metadata !12312, metadata !DIExpression(DW_OP_deref)), !dbg !12374
  %339 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !12652
  store i64 %338, i64* %339, align 8, !dbg !12652, !tbaa !2918
  %340 = inttoptr i64 %338 to i8*, !dbg !12653
  call void @llvm.dbg.value(metadata i8* %340, metadata !12312, metadata !DIExpression()), !dbg !12374
  call void @func_ref(i8* %340) #9, !dbg !12654
  br label %341

; <label>:341:                                    ; preds = %275, %331, %128, %143, %161, %335, %68, %82
  %342 = phi i8* [ %45, %331 ], [ %45, %275 ], [ %45, %128 ], [ %45, %143 ], [ %45, %161 ], [ %45, %335 ], [ %70, %68 ], [ %45, %82 ]
  call void @vim_free(i8* %342) #9, !dbg !12655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9, !dbg !12656
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9, !dbg !12656
  ret void, !dbg !12656
}

declare i8* @trans_function_name(i8**, i32*, i32, i32, %struct.funcdict_T*, %struct.partial_S**, %struct.type_S**) local_unnamed_addr #3

declare %struct.ufunc_T* @find_func(i8*, i32, %struct.cctx_S*) local_unnamed_addr #3

declare i32 @translated_function_exists(i8*, i32) local_unnamed_addr #3

declare void @emsg_funcname(i8*, i8*) local_unnamed_addr #3

declare i8* @alloc_clear(i64) local_unnamed_addr #3

declare void @copy_tv(%struct.typval_T*, %struct.typval_T*) local_unnamed_addr #3

declare void @func_ptr_ref(%struct.ufunc_T*) local_unnamed_addr #3

declare void @func_ref(i8*) local_unnamed_addr #3

declare i64 @blob_len(%struct.blobvar_S*) local_unnamed_addr #3

declare i32 @blob_get(%struct.blobvar_S*, i32) local_unnamed_addr #3

declare %struct.listitem_S* @list_find(%struct.listvar_S*, i64) local_unnamed_addr #3

declare %struct.dictitem_S* @dict_find(%struct.dictvar_S*, i8*, i32) local_unnamed_addr #3

declare void @rettv_dict_set(%struct.typval_T*, %struct.dictvar_S*) local_unnamed_addr #3

declare i32 @list_append_tv(%struct.listvar_S*, %struct.typval_T*) local_unnamed_addr #3

declare %struct.file_buffer* @tv_get_buf_from_arg(%struct.typval_T*) local_unnamed_addr #3

declare %struct.listvar_S* @list_alloc() local_unnamed_addr #3

declare i32 @list_append_list(%struct.listvar_S*, %struct.listvar_S*) local_unnamed_addr #3

declare %struct.dictvar_S* @dict_alloc() local_unnamed_addr #3

declare i32 @list_append_dict(%struct.listvar_S*, %struct.dictvar_S*) local_unnamed_addr #3

declare i32 @dict_add_number(%struct.dictvar_S*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @getpos_both(%struct.typval_T*, %struct.typval_T*, i32, i32) unnamed_addr #0 !dbg !12657 {
  %5 = alloca %struct.pos_T, align 8
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12661, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12662, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata i32 %2, metadata !12663, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata i32 %3, metadata !12664, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.value(metadata %struct.pos_T* null, metadata !12665, metadata !DIExpression()), !dbg !12681
  %7 = bitcast %struct.pos_T* %5 to i8*, !dbg !12682
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9, !dbg !12682
  %8 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12683, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.window_S* %8, metadata !12667, metadata !DIExpression()), !dbg !12684
  %9 = bitcast i32* %6 to i8*, !dbg !12685
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9, !dbg !12685
  call void @llvm.dbg.value(metadata i32 -1, metadata !12669, metadata !DIExpression()), !dbg !12686
  store i32 -1, i32* %6, align 4, !dbg !12686, !tbaa !2904
  %10 = tail call i32 @rettv_list_alloc(%struct.typval_T* %1) #9, !dbg !12687
  %11 = icmp eq i32 %10, 1, !dbg !12688
  %12 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2
  br i1 %11, label %13, label %113, !dbg !12689

; <label>:13:                                     ; preds = %4
  %14 = bitcast %union.anon* %12 to %struct.listvar_S**, !dbg !12690
  %15 = load %struct.listvar_S*, %struct.listvar_S** %14, align 8, !dbg !12690, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %15, metadata !12668, metadata !DIExpression()), !dbg !12691
  %16 = icmp ne i32 %2, 0, !dbg !12692
  br i1 %16, label %17, label %45, !dbg !12694

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !12695
  %19 = load i32, i32* %18, align 8, !dbg !12695, !tbaa !3221
  %20 = icmp eq i32 %19, 0, !dbg !12698
  br i1 %20, label %26, label %21, !dbg !12699

; <label>:21:                                     ; preds = %17
  %22 = tail call %struct.window_S* @find_win_by_nr_or_id(%struct.typval_T* nonnull %0) #9, !dbg !12700
  call void @llvm.dbg.value(metadata %struct.window_S* %22, metadata !12667, metadata !DIExpression()), !dbg !12684
  %23 = icmp eq %struct.window_S* %22, null, !dbg !12702
  %24 = getelementptr inbounds %struct.window_S, %struct.window_S* %22, i64 0, i32 7, !dbg !12704
  %25 = select i1 %23, %struct.pos_T* null, %struct.pos_T* %24, !dbg !12705
  br label %29, !dbg !12705

; <label>:26:                                     ; preds = %17
  %27 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12706, !tbaa !2783
  %28 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 7, !dbg !12707
  call void @llvm.dbg.value(metadata %struct.pos_T* %28, metadata !12665, metadata !DIExpression()), !dbg !12681
  br label %29

; <label>:29:                                     ; preds = %21, %26
  %30 = phi %struct.window_S* [ %8, %26 ], [ %22, %21 ]
  %31 = phi %struct.pos_T* [ %28, %26 ], [ %25, %21 ]
  call void @llvm.dbg.value(metadata %struct.pos_T* %31, metadata !12665, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata %struct.window_S* %30, metadata !12667, metadata !DIExpression()), !dbg !12684
  %32 = icmp ne %struct.pos_T* %31, null, !dbg !12708
  %33 = icmp ne i32 %3, 0, !dbg !12710
  %34 = and i1 %33, %32, !dbg !12711
  br i1 %34, label %35, label %52, !dbg !12711

; <label>:35:                                     ; preds = %29
  %36 = bitcast %struct.pos_T* %31 to i8*, !dbg !12712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* %36, i64 16, i32 8, i1 false), !dbg !12712, !tbaa.struct !4052
  %37 = getelementptr inbounds %struct.window_S, %struct.window_S* %30, i64 0, i32 1, !dbg !12714
  %38 = load %struct.file_buffer*, %struct.file_buffer** %37, align 8, !dbg !12714, !tbaa !6364
  %39 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %5, i64 0, i32 0, !dbg !12715
  %40 = load i64, i64* %39, align 8, !dbg !12715, !tbaa !4160
  %41 = trunc i64 %40 to i32, !dbg !12716
  %42 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %5, i64 0, i32 1, !dbg !12717
  %43 = load i32, i32* %42, align 8, !dbg !12717, !tbaa !4166
  %44 = tail call i32 @buf_byteidx_to_charidx(%struct.file_buffer* %38, i32 %41, i32 %43) #9, !dbg !12718
  store i32 %44, i32* %42, align 8, !dbg !12719, !tbaa !4166
  call void @llvm.dbg.value(metadata %struct.pos_T* %5, metadata !12665, metadata !DIExpression()), !dbg !12681
  br label %52, !dbg !12720

; <label>:45:                                     ; preds = %13
  call void @llvm.dbg.value(metadata i32* %6, metadata !12669, metadata !DIExpression()), !dbg !12686
  %46 = call %struct.pos_T* @var2fpos(%struct.typval_T* %0, i32 1, i32* nonnull %6, i32 %3) #9, !dbg !12721
  call void @llvm.dbg.value(metadata %struct.pos_T* %46, metadata !12665, metadata !DIExpression()), !dbg !12681
  %47 = load i32, i32* %6, align 4, !dbg !12722, !tbaa !2904
  call void @llvm.dbg.value(metadata %struct.pos_T* %46, metadata !12665, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata %struct.window_S* %8, metadata !12667, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.value(metadata i32 %47, metadata !12669, metadata !DIExpression()), !dbg !12686
  %48 = icmp eq i32 %47, -1, !dbg !12724
  br i1 %48, label %52, label %49, !dbg !12725

; <label>:49:                                     ; preds = %45
  %50 = sext i32 %47 to i64, !dbg !12726
  %51 = call i32 @list_append_number(%struct.listvar_S* %15, i64 %50) #9, !dbg !12727
  br label %56, !dbg !12727

; <label>:52:                                     ; preds = %29, %35, %45
  %53 = phi %struct.pos_T* [ %46, %45 ], [ %31, %29 ], [ %5, %35 ]
  %54 = phi %struct.window_S* [ %8, %45 ], [ %30, %29 ], [ %30, %35 ]
  %55 = call i32 @list_append_number(%struct.listvar_S* %15, i64 0) #9, !dbg !12728
  br label %56

; <label>:56:                                     ; preds = %52, %49
  %57 = phi %struct.pos_T* [ %53, %52 ], [ %46, %49 ]
  %58 = phi %struct.window_S* [ %54, %52 ], [ %8, %49 ]
  %59 = icmp eq %struct.pos_T* %57, null, !dbg !12729
  br i1 %59, label %60, label %63, !dbg !12730

; <label>:60:                                     ; preds = %56
  %61 = call i32 @list_append_number(%struct.listvar_S* %15, i64 0) #9, !dbg !12731
  %62 = call i32 @list_append_number(%struct.listvar_S* %15, i64 0) #9, !dbg !12732
  br label %77

; <label>:63:                                     ; preds = %56
  %64 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %57, i64 0, i32 0, !dbg !12733
  %65 = load i64, i64* %64, align 8, !dbg !12733, !tbaa !4160
  %66 = call i32 @list_append_number(%struct.listvar_S* %15, i64 %65) #9, !dbg !12731
  %67 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %57, i64 0, i32 1, !dbg !12734
  %68 = load i32, i32* %67, align 8, !dbg !12734, !tbaa !4166
  %69 = icmp eq i32 %68, 2147483647, !dbg !12735
  %70 = add nsw i32 %68, 1, !dbg !12736
  %71 = sext i32 %70 to i64, !dbg !12737
  %72 = select i1 %69, i64 2147483647, i64 %71, !dbg !12737
  %73 = call i32 @list_append_number(%struct.listvar_S* %15, i64 %72) #9, !dbg !12732
  %74 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %57, i64 0, i32 2, !dbg !12738
  %75 = load i32, i32* %74, align 4, !dbg !12738, !tbaa !6398
  %76 = sext i32 %75 to i64, !dbg !12739
  br label %77, !dbg !12740

; <label>:77:                                     ; preds = %60, %63
  %78 = phi i64 [ %76, %63 ], [ 0, %60 ], !dbg !12740
  %79 = call i32 @list_append_number(%struct.listvar_S* %15, i64 %78) #9, !dbg !12741
  br i1 %16, label %80, label %115, !dbg !12742

; <label>:80:                                     ; preds = %77
  %81 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12743, !tbaa !2783
  %82 = getelementptr inbounds %struct.window_S, %struct.window_S* %81, i64 0, i32 9, !dbg !12744
  %83 = load i32, i32* %82, align 4, !dbg !12744, !tbaa !9869
  call void @llvm.dbg.value(metadata i32 %83, metadata !12670, metadata !DIExpression()), !dbg !12745
  %84 = getelementptr inbounds %struct.window_S, %struct.window_S* %81, i64 0, i32 8, !dbg !12746
  %85 = load i32, i32* %84, align 8, !dbg !12746, !tbaa !12238
  call void @llvm.dbg.value(metadata i32 %85, metadata !12675, metadata !DIExpression()), !dbg !12747
  %86 = getelementptr inbounds %struct.window_S, %struct.window_S* %81, i64 0, i32 92, !dbg !12748
  %87 = load i32, i32* %86, align 8, !dbg !12748, !tbaa !12173
  call void @llvm.dbg.value(metadata i32 %87, metadata !12676, metadata !DIExpression()), !dbg !12749
  %88 = icmp eq %struct.window_S* %58, %81, !dbg !12750
  br i1 %88, label %89, label %90, !dbg !12752

; <label>:89:                                     ; preds = %80
  call void @update_curswant() #9, !dbg !12753
  br label %90, !dbg !12753

; <label>:90:                                     ; preds = %89, %80
  %91 = icmp eq %struct.window_S* %58, null, !dbg !12754
  br i1 %91, label %99, label %92, !dbg !12755

; <label>:92:                                     ; preds = %90
  %93 = getelementptr inbounds %struct.window_S, %struct.window_S* %58, i64 0, i32 8, !dbg !12756
  %94 = load i32, i32* %93, align 8, !dbg !12756, !tbaa !12238
  %95 = icmp eq i32 %94, 2147483647, !dbg !12757
  br i1 %95, label %99, label %96, !dbg !12758

; <label>:96:                                     ; preds = %92
  %97 = sext i32 %94 to i64, !dbg !12759
  %98 = add nsw i64 %97, 1, !dbg !12760
  br label %99, !dbg !12758

; <label>:99:                                     ; preds = %96, %92, %90
  %100 = phi i64 [ 0, %90 ], [ %98, %96 ], [ 2147483647, %92 ], !dbg !12755
  %101 = call i32 @list_append_number(%struct.listvar_S* %15, i64 %100) #9, !dbg !12761
  %102 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12762, !tbaa !2783
  %103 = icmp eq %struct.window_S* %58, %102, !dbg !12764
  %104 = icmp ne i32 %83, 0, !dbg !12765
  %105 = and i1 %104, %103, !dbg !12766
  br i1 %105, label %106, label %115, !dbg !12766

; <label>:106:                                    ; preds = %99
  %107 = getelementptr inbounds %struct.window_S, %struct.window_S* %58, i64 0, i32 9, !dbg !12767
  store i32 %83, i32* %107, align 4, !dbg !12769, !tbaa !9869
  %108 = getelementptr inbounds %struct.window_S, %struct.window_S* %58, i64 0, i32 8, !dbg !12770
  store i32 %85, i32* %108, align 8, !dbg !12771, !tbaa !12238
  %109 = getelementptr inbounds %struct.window_S, %struct.window_S* %58, i64 0, i32 92, !dbg !12772
  store i32 %87, i32* %109, align 8, !dbg !12773, !tbaa !12173
  %110 = getelementptr inbounds %struct.window_S, %struct.window_S* %58, i64 0, i32 86, !dbg !12774
  %111 = load i32, i32* %110, align 4, !dbg !12775, !tbaa !12776
  %112 = and i32 %111, -5, !dbg !12775
  store i32 %112, i32* %110, align 4, !dbg !12775, !tbaa !12776
  br label %115, !dbg !12777

; <label>:113:                                    ; preds = %4
  %114 = getelementptr inbounds %union.anon, %union.anon* %12, i64 0, i32 0, !dbg !12778
  store i64 0, i64* %114, align 8, !dbg !12779, !tbaa !2918
  br label %115

; <label>:115:                                    ; preds = %99, %106, %77, %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9, !dbg !12780
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9, !dbg !12780
  ret void, !dbg !12780
}

declare i32 @buf_byteidx_to_charidx(%struct.file_buffer*, i32, i32) local_unnamed_addr #3

declare void @update_curswant() local_unnamed_addr #3

declare i8* @last_csearch() local_unnamed_addr #3

declare i32 @last_csearch_forward() local_unnamed_addr #3

declare i32 @last_csearch_until() local_unnamed_addr #3

declare i8* @vim_getenv(i8*, i32*) local_unnamed_addr #3

declare i8* @hl_get_font_name() local_unnamed_addr #3

declare %struct._PangoFontDescription* @gui_mch_get_font(i8*, i32) local_unnamed_addr #3

declare i8* @gui_mch_get_fontname(%struct._PangoFontDescription*, i8*) local_unnamed_addr #3

declare void @gui_mch_free_font(%struct._PangoFontDescription*) local_unnamed_addr #3

declare %struct.window_S* @find_tabwin(%struct.typval_T*, %struct.typval_T*, %struct.tabpage_S**) local_unnamed_addr #3

declare void @cleanup_jumplist(%struct.window_S*, i32) local_unnamed_addr #3

declare i64 @mch_get_pid() local_unnamed_addr #3

declare i8* @get_vim_var_str(i32) local_unnamed_addr #3

declare i8* @get_reg_contents(i32, i32) local_unnamed_addr #3

declare i32 @dict_add_list(%struct.dictvar_S*, i8*, %struct.listvar_S*) local_unnamed_addr #3

declare zeroext i8 @get_reg_type(i32, i64*) local_unnamed_addr #3

declare i32 @vim_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #3

declare i32 @get_register_name(i32) local_unnamed_addr #3

declare i32 @get_unname_register() local_unnamed_addr #3

declare %struct.dictitem_S* @dictitem_alloc(i8*) local_unnamed_addr #3

declare i32 @dict_add(%struct.dictvar_S*, %struct.dictitem_S*) local_unnamed_addr #3

declare void @get_tagstack(%struct.window_S*, %struct.dictvar_S*) local_unnamed_addr #3

declare i32 @map_to_exists(i8*, i8*, i32) local_unnamed_addr #3

declare i32 @syn_name2id(i8*) local_unnamed_addr #3

declare i32 @highlight_exists(i8*) local_unnamed_addr #3

declare void @mch_get_host_name(i8*, i32) local_unnamed_addr #3

declare i8* @enc_canonize(i8*) local_unnamed_addr #3

declare i8* @enc_skip(i8*) local_unnamed_addr #3

declare i32 @convert_setup(%struct.vimconv_T*, i8*, i8*) local_unnamed_addr #3

declare i8* @string_convert(%struct.vimconv_T*, i8*, i32*) local_unnamed_addr #3

declare i32 @tv_equal(%struct.typval_T*, %struct.typval_T*, i32, i32) local_unnamed_addr #3

declare void @get_user_input(%struct.typval_T*, %struct.typval_T*, i32, i32) local_unnamed_addr #3

declare void @vim_strncpy(i8*, i8*, i64) local_unnamed_addr #3

declare i32 @no_console_input() local_unnamed_addr #3

declare i32 @is_not_a_term() local_unnamed_addr #3

declare void @msg_start() local_unnamed_addr #3

declare void @msg_clr_eos() local_unnamed_addr #3

declare void @msg_puts(i8*) local_unnamed_addr #3

declare void @msg_putchar(i32) local_unnamed_addr #3

declare i32 @prompt_for_number(i32*) local_unnamed_addr #3

declare void @restore_typeahead(%struct.tasave_T*) local_unnamed_addr #3

declare i32 @verb_msg(i8*) local_unnamed_addr #3

declare void @save_typeahead(%struct.tasave_T*) local_unnamed_addr #3

declare i8* @get_lval(i8*, %struct.typval_T*, %struct.lval_S*, i32, i32, i32, i32) local_unnamed_addr #3

declare %struct.dictitem_S* @find_var(i8*, %struct.hashtable_S**, i32) local_unnamed_addr #3

declare i32 @tv_islocked(%struct.typval_T*) local_unnamed_addr #3

declare void @clear_lval(%struct.lval_S*) local_unnamed_addr #3

declare i64 @list_len(%struct.listvar_S*) local_unnamed_addr #3

declare i64 @dict_len(%struct.dictvar_S*) local_unnamed_addr #3

declare i32 @check_restricted() local_unnamed_addr #3

declare i32 @mch_libcall(i8*, i8*, i8*, i32, i8**, i32*) local_unnamed_addr #3

declare %struct.window_S* @win_id2wp_tp(i32, %struct.tabpage_S**) local_unnamed_addr #3

declare i32 @switch_win_noblock(%struct.window_S**, %struct.tabpage_S**, %struct.window_S*, %struct.tabpage_S*, i32) local_unnamed_addr #3

declare void @restore_win_noblock(%struct.window_S*, %struct.tabpage_S*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @log(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @log10(double) local_unnamed_addr #5

declare void @get_maparg(%struct.typval_T*, %struct.typval_T*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @find_some_match(%struct.typval_T*, %struct.typval_T*, i32) unnamed_addr #0 !dbg !12781 {
  %4 = alloca %struct.regmatch_T, align 8
  %5 = alloca [65 x i8], align 16
  %6 = alloca [65 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !12786, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !12787, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 %2, metadata !12788, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.value(metadata i8* null, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 0, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8* null, metadata !12791, metadata !DIExpression()), !dbg !12826
  %9 = bitcast %struct.regmatch_T* %4 to i8*, !dbg !12827
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %9) #9, !dbg !12827
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0, !dbg !12828
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %10) #9, !dbg !12828
  call void @llvm.dbg.declare(metadata [65 x i8]* %5, metadata !12794, metadata !DIExpression()), !dbg !12829
  %11 = getelementptr inbounds [65 x i8], [65 x i8]* %6, i64 0, i64 0, !dbg !12830
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %11) #9, !dbg !12830
  call void @llvm.dbg.declare(metadata [65 x i8]* %6, metadata !12795, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i64 0, metadata !12797, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i64 1, metadata !12798, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i32 0, metadata !12800, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %struct.listvar_S* null, metadata !12801, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata %struct.listitem_S* null, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i64 0, metadata !12803, metadata !DIExpression()), !dbg !12838
  %12 = bitcast i8** %7 to i8*, !dbg !12839
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9, !dbg !12839
  call void @llvm.dbg.value(metadata i8* null, metadata !12804, metadata !DIExpression()), !dbg !12840
  store i8* null, i8** %7, align 8, !dbg !12840, !tbaa !2783
  %13 = load i64, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !12841, !tbaa !2783
  call void @llvm.dbg.value(metadata i8** @p_cpo, metadata !12796, metadata !DIExpression(DW_OP_deref)), !dbg !12842
  %14 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !12843, !tbaa !2783
  store i64 %14, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !12844, !tbaa !2783
  %15 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, !dbg !12845
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0, !dbg !12846
  store i64 -1, i64* %16, align 8, !dbg !12847, !tbaa !2918
  %17 = icmp eq i32 %2, 4, !dbg !12848
  %18 = add i32 %2, -3, !dbg !12850
  %19 = icmp ult i32 %18, 2, !dbg !12850
  br i1 %19, label %20, label %43, !dbg !12850

; <label>:20:                                     ; preds = %3
  %21 = tail call i32 @rettv_list_alloc(%struct.typval_T* nonnull %1) #9, !dbg !12851
  %22 = icmp eq i32 %21, 0, !dbg !12854
  br i1 %22, label %305, label %23, !dbg !12855

; <label>:23:                                     ; preds = %20
  br i1 %17, label %24, label %48, !dbg !12856

; <label>:24:                                     ; preds = %23
  %25 = bitcast %union.anon* %15 to %struct.listvar_S**, !dbg !12858
  %26 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !12858, !tbaa !2918
  %27 = tail call i32 @list_append_string(%struct.listvar_S* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), i32 0) #9, !dbg !12859
  %28 = icmp eq i32 %27, 0, !dbg !12860
  br i1 %28, label %41, label %29, !dbg !12861

; <label>:29:                                     ; preds = %24
  %30 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !12862, !tbaa !2918
  %31 = tail call i32 @list_append_number(%struct.listvar_S* %30, i64 -1) #9, !dbg !12863
  %32 = icmp eq i32 %31, 0, !dbg !12864
  br i1 %32, label %41, label %33, !dbg !12865

; <label>:33:                                     ; preds = %29
  %34 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !12866, !tbaa !2918
  %35 = tail call i32 @list_append_number(%struct.listvar_S* %34, i64 -1) #9, !dbg !12867
  %36 = icmp eq i32 %35, 0, !dbg !12868
  br i1 %36, label %41, label %37, !dbg !12869

; <label>:37:                                     ; preds = %33
  %38 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !12870, !tbaa !2918
  %39 = tail call i32 @list_append_number(%struct.listvar_S* %38, i64 -1) #9, !dbg !12871
  %40 = icmp eq i32 %39, 0, !dbg !12872
  br i1 %40, label %41, label %48, !dbg !12873

; <label>:41:                                     ; preds = %37, %33, %29, %24
  %42 = load %struct.listvar_S*, %struct.listvar_S** %25, align 8, !dbg !12874, !tbaa !2918
  tail call void @list_free(%struct.listvar_S* %42) #9, !dbg !12876
  store %struct.listvar_S* null, %struct.listvar_S** %25, align 8, !dbg !12877, !tbaa !2918
  br label %305, !dbg !12878

; <label>:43:                                     ; preds = %3
  %44 = icmp eq i32 %2, 2, !dbg !12879
  br i1 %44, label %45, label %48, !dbg !12881

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 0, !dbg !12882
  store i32 7, i32* %46, align 8, !dbg !12884, !tbaa !3221
  %47 = bitcast %union.anon* %15 to i8**, !dbg !12885
  store i8* null, i8** %47, align 8, !dbg !12886, !tbaa !2918
  br label %48, !dbg !12887

; <label>:48:                                     ; preds = %43, %45, %23, %37
  %49 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !12888
  %50 = load i32, i32* %49, align 8, !dbg !12888, !tbaa !3221
  %51 = icmp eq i32 %50, 11, !dbg !12890
  br i1 %51, label %52, label %88, !dbg !12891

; <label>:52:                                     ; preds = %48
  %53 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !12892
  %54 = bitcast %union.anon* %53 to %struct.listvar_S**, !dbg !12895
  %55 = load %struct.listvar_S*, %struct.listvar_S** %54, align 8, !dbg !12895, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %55, metadata !12801, metadata !DIExpression()), !dbg !12836
  %56 = icmp eq %struct.listvar_S* %55, null, !dbg !12896
  br i1 %56, label %305, label %57, !dbg !12897

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %55, i64 0, i32 0, !dbg !12898
  %59 = load %struct.listitem_S*, %struct.listitem_S** %58, align 8, !dbg !12898, !tbaa !3610
  %60 = icmp eq %struct.listitem_S* %59, @range_list_item, !dbg !12898
  br i1 %60, label %61, label %91, !dbg !12900

; <label>:61:                                     ; preds = %57
  call void @llvm.dbg.value(metadata %struct.listvar_S* %55, metadata !3612, metadata !DIExpression()) #9, !dbg !12901
  %62 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %55, i64 0, i32 2, !dbg !12903
  %63 = getelementptr inbounds %union.anon.0, %union.anon.0* %62, i64 0, i32 0, i32 0, !dbg !12904
  %64 = load i64, i64* %63, align 8, !dbg !12904, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %64, metadata !3617, metadata !DIExpression()) #9, !dbg !12905
  %65 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %55, i64 0, i32 2, i32 0, i32 1, !dbg !12906
  %66 = load i64, i64* %65, align 8, !dbg !12906, !tbaa !2918
  call void @llvm.dbg.value(metadata i64 %66, metadata !3618, metadata !DIExpression()) #9, !dbg !12907
  %67 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %55, i64 0, i32 2, i32 0, i32 2, !dbg !12908
  %68 = load i32, i32* %67, align 8, !dbg !12908, !tbaa !2918
  call void @llvm.dbg.value(metadata i32 %68, metadata !3619, metadata !DIExpression()) #9, !dbg !12909
  store %struct.listitem_S* null, %struct.listitem_S** %58, align 8, !dbg !12910, !tbaa !3610
  %69 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %55, i64 0, i32 8, !dbg !12911
  store i32 0, i32* %69, align 4, !dbg !12912, !tbaa !3541
  call void @llvm.dbg.value(metadata i64 %64, metadata !3620, metadata !DIExpression()) #9, !dbg !12913
  %70 = icmp sgt i32 %68, 0, !dbg !12914
  %71 = icmp sle i64 %64, %66, !dbg !12915
  %72 = icmp sge i64 %64, %66, !dbg !12916
  %73 = select i1 %70, i1 %71, i1 %72, !dbg !12917
  %74 = bitcast %union.anon.0* %62 to i8*, !dbg !12918
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %74, i8 0, i64 16, i32 8, i1 false) #9, !dbg !12919
  br i1 %73, label %75, label %91, !dbg !12918

; <label>:75:                                     ; preds = %61
  %76 = sext i32 %68 to i64
  br label %81, !dbg !12918

; <label>:77:                                     ; preds = %81
  call void @llvm.dbg.value(metadata i64 %85, metadata !3620, metadata !DIExpression()) #9, !dbg !12913
  %78 = icmp sle i64 %85, %66, !dbg !12915
  %79 = icmp sge i64 %85, %66, !dbg !12916
  %80 = select i1 %70, i1 %78, i1 %79, !dbg !12917
  br i1 %80, label %81, label %86, !dbg !12918, !llvm.loop !3642

; <label>:81:                                     ; preds = %77, %75
  %82 = phi i64 [ %64, %75 ], [ %85, %77 ]
  call void @llvm.dbg.value(metadata i64 %82, metadata !3620, metadata !DIExpression()) #9, !dbg !12913
  %83 = tail call i32 @list_append_number(%struct.listvar_S* nonnull %55, i64 %82) #9, !dbg !12920
  %84 = icmp eq i32 %83, 0, !dbg !12921
  %85 = add nsw i64 %82, %76, !dbg !12922
  call void @llvm.dbg.value(metadata i64 %85, metadata !3620, metadata !DIExpression()) #9, !dbg !12913
  br i1 %84, label %86, label %77, !dbg !12923

; <label>:86:                                     ; preds = %77, %81
  %87 = load %struct.listitem_S*, %struct.listitem_S** %58, align 8, !dbg !12924, !tbaa !3610
  br label %91, !dbg !12924

; <label>:88:                                     ; preds = %48
  %89 = tail call i8* @tv_get_string(%struct.typval_T* nonnull %0) #9, !dbg !12925
  call void @llvm.dbg.value(metadata i8* %89, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %89, metadata !12791, metadata !DIExpression()), !dbg !12826
  %90 = tail call i64 @strlen(i8* %89) #10, !dbg !12927
  call void @llvm.dbg.value(metadata i64 %90, metadata !12790, metadata !DIExpression()), !dbg !12825
  br label %91

; <label>:91:                                     ; preds = %57, %61, %86, %88
  %92 = phi %struct.listvar_S* [ null, %88 ], [ %55, %86 ], [ %55, %61 ], [ %55, %57 ]
  %93 = phi %struct.listitem_S* [ null, %88 ], [ %87, %86 ], [ null, %61 ], [ %59, %57 ]
  %94 = phi i8* [ %89, %88 ], [ null, %86 ], [ null, %61 ], [ null, %57 ]
  %95 = phi i64 [ %90, %88 ], [ 0, %86 ], [ 0, %61 ], [ 0, %57 ]
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8* %94, metadata !12791, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata %struct.listitem_S* %93, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata %struct.listvar_S* %92, metadata !12801, metadata !DIExpression()), !dbg !12836
  %96 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !12928
  %97 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %96, i8* nonnull %10) #9, !dbg !12929
  call void @llvm.dbg.value(metadata i8* %97, metadata !12792, metadata !DIExpression()), !dbg !12930
  %98 = icmp eq i8* %97, null, !dbg !12931
  br i1 %98, label %305, label %99, !dbg !12933

; <label>:99:                                     ; preds = %91
  %100 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !12934
  %101 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %100, i64 0, i32 0, !dbg !12935
  %102 = load i32, i32* %101, align 8, !dbg !12935, !tbaa !3221
  %103 = icmp eq i32 %102, 0, !dbg !12936
  br i1 %103, label %150, label %104, !dbg !12937

; <label>:104:                                    ; preds = %99
  %105 = bitcast i32* %8 to i8*, !dbg !12938
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #9, !dbg !12938
  call void @llvm.dbg.value(metadata i32 0, metadata !12805, metadata !DIExpression()), !dbg !12939
  store i32 0, i32* %8, align 4, !dbg !12939, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %8, metadata !12805, metadata !DIExpression()), !dbg !12939
  %106 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %100, i32* nonnull %8) #9, !dbg !12940
  call void @llvm.dbg.value(metadata i64 %106, metadata !12797, metadata !DIExpression()), !dbg !12832
  %107 = load i32, i32* %8, align 4, !dbg !12941, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %107, metadata !12805, metadata !DIExpression()), !dbg !12939
  %108 = icmp eq i32 %107, 0, !dbg !12941
  br i1 %108, label %109, label %140, !dbg !12943

; <label>:109:                                    ; preds = %104
  %110 = icmp eq %struct.listvar_S* %92, null, !dbg !12944
  br i1 %110, label %114, label %111, !dbg !12946

; <label>:111:                                    ; preds = %109
  %112 = call %struct.listitem_S* @list_find(%struct.listvar_S* nonnull %92, i64 %106) #9, !dbg !12947
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  %113 = icmp eq %struct.listitem_S* %112, null, !dbg !12949
  br i1 %113, label %140, label %127, !dbg !12951

; <label>:114:                                    ; preds = %109
  %115 = icmp sgt i64 %106, 0, !dbg !12952
  %116 = select i1 %115, i64 %106, i64 0, !dbg !12952
  call void @llvm.dbg.value(metadata i64 %116, metadata !12797, metadata !DIExpression()), !dbg !12832
  %117 = icmp slt i64 %95, %116, !dbg !12954
  br i1 %117, label %140, label %118, !dbg !12956

; <label>:118:                                    ; preds = %114
  %119 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, i32 0, !dbg !12957
  %120 = load i32, i32* %119, align 8, !dbg !12957, !tbaa !3221
  %121 = icmp eq i32 %120, 0, !dbg !12959
  br i1 %121, label %124, label %122, !dbg !12960

; <label>:122:                                    ; preds = %118
  %123 = trunc i64 %116 to i32, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %123, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  br label %134, !dbg !12962

; <label>:124:                                    ; preds = %118
  %125 = getelementptr inbounds i8, i8* %94, i64 %116, !dbg !12963
  call void @llvm.dbg.value(metadata i8* %125, metadata !12789, metadata !DIExpression()), !dbg !12824
  %126 = sub nsw i64 %95, %116, !dbg !12965
  call void @llvm.dbg.value(metadata i64 %126, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  br label %141, !dbg !12962

; <label>:127:                                    ; preds = %111
  %128 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %92, i64 0, i32 2, i32 0, i32 2, !dbg !12966
  %129 = load i32, i32* %128, align 8, !dbg !12966, !tbaa !2918
  %130 = sext i32 %129 to i64, !dbg !12967
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  %131 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, i32 0
  %132 = load i32, i32* %131, align 8, !dbg !12968, !tbaa !3221
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  %133 = icmp eq i32 %132, 0, !dbg !12970
  br i1 %133, label %141, label %134, !dbg !12962

; <label>:134:                                    ; preds = %122, %127
  %135 = phi i64 [ 0, %122 ], [ %130, %127 ]
  %136 = phi %struct.listitem_S* [ %93, %122 ], [ %112, %127 ]
  %137 = phi i32 [ %123, %122 ], [ 0, %127 ]
  %138 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !12971
  call void @llvm.dbg.value(metadata i32* %8, metadata !12805, metadata !DIExpression()), !dbg !12939
  %139 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %138, i32* nonnull %8) #9, !dbg !12972
  call void @llvm.dbg.value(metadata i64 %139, metadata !12798, metadata !DIExpression()), !dbg !12833
  br label %141, !dbg !12973

; <label>:140:                                    ; preds = %104, %111, %114
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i64 %147, metadata !12798, metadata !DIExpression()), !dbg !12833
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #9, !dbg !12974
  br label %305

; <label>:141:                                    ; preds = %124, %134, %127
  %142 = phi i8* [ %94, %134 ], [ %94, %127 ], [ %125, %124 ]
  %143 = phi i64 [ %95, %134 ], [ %95, %127 ], [ %126, %124 ]
  %144 = phi i64 [ %135, %134 ], [ %130, %127 ], [ 0, %124 ]
  %145 = phi %struct.listitem_S* [ %136, %134 ], [ %112, %127 ], [ %93, %124 ]
  %146 = phi i32 [ %137, %134 ], [ 0, %127 ], [ 0, %124 ]
  %147 = phi i64 [ %139, %134 ], [ 1, %127 ], [ 1, %124 ]
  call void @llvm.dbg.value(metadata i64 %147, metadata !12798, metadata !DIExpression()), !dbg !12833
  %148 = load i32, i32* %8, align 4, !dbg !12975, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %148, metadata !12805, metadata !DIExpression()), !dbg !12939
  %149 = icmp eq i32 %148, 0, !dbg !12975
  call void @llvm.dbg.value(metadata i8* %94, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %95, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %130, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %112, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 0, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i64 %147, metadata !12798, metadata !DIExpression()), !dbg !12833
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #9, !dbg !12974
  br i1 %149, label %150, label %305

; <label>:150:                                    ; preds = %99, %141
  %151 = phi i64 [ %147, %141 ], [ 1, %99 ]
  %152 = phi i32 [ %146, %141 ], [ 0, %99 ]
  %153 = phi %struct.listitem_S* [ %145, %141 ], [ %93, %99 ]
  %154 = phi i64 [ %144, %141 ], [ 0, %99 ]
  %155 = phi i64 [ %143, %141 ], [ %95, %99 ]
  %156 = phi i8* [ %142, %141 ], [ %94, %99 ]
  call void @llvm.dbg.value(metadata i8* %156, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i64 %155, metadata !12790, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 %154, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %153, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 %152, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i64 %151, metadata !12798, metadata !DIExpression()), !dbg !12833
  %157 = call %struct.regprog* @vim_regcomp(i8* nonnull %97, i32 3) #9, !dbg !12977
  %158 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 0, !dbg !12978
  store %struct.regprog* %157, %struct.regprog** %158, align 8, !dbg !12979, !tbaa !10100
  %159 = icmp eq %struct.regprog* %157, null, !dbg !12980
  br i1 %159, label %305, label %160, !dbg !12981

; <label>:160:                                    ; preds = %150
  %161 = load i32, i32* @p_ic, align 4, !dbg !12982, !tbaa !2904
  %162 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 3, !dbg !12983
  store i32 %161, i32* %162, align 8, !dbg !12984, !tbaa !10108
  %163 = icmp ne %struct.listvar_S* %92, null
  %164 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 1, i64 0
  %165 = trunc i64 %155 to i32
  br label %166, !dbg !12985

; <label>:166:                                    ; preds = %214, %160
  %167 = phi i64 [ %194, %214 ], [ %151, %160 ]
  %168 = phi i32 [ %212, %214 ], [ %152, %160 ]
  %169 = phi i32 [ %191, %214 ], [ 0, %160 ]
  %170 = phi %struct.listitem_S* [ %177, %214 ], [ %153, %160 ]
  %171 = phi i64 [ %178, %214 ], [ %154, %160 ]
  %172 = phi i8* [ %189, %214 ], [ %94, %160 ]
  %173 = phi i8* [ %190, %214 ], [ %156, %160 ]
  br label %174, !dbg !12986

; <label>:174:                                    ; preds = %166, %198
  %175 = phi i64 [ %199, %198 ], [ %167, %166 ]
  %176 = phi i32 [ %191, %198 ], [ %169, %166 ]
  %177 = phi %struct.listitem_S* [ %201, %198 ], [ %170, %166 ]
  %178 = phi i64 [ %202, %198 ], [ %171, %166 ]
  %179 = phi i8* [ %189, %198 ], [ %172, %166 ]
  %180 = phi i8* [ %190, %198 ], [ %173, %166 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %179, metadata !12791, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i64 %178, metadata !12803, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata %struct.listitem_S* %177, metadata !12802, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i32 %176, metadata !12800, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %168, metadata !12799, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i64 %175, metadata !12798, metadata !DIExpression()), !dbg !12833
  br i1 %163, label %181, label %188, !dbg !12986

; <label>:181:                                    ; preds = %174
  %182 = icmp eq %struct.listitem_S* %177, null, !dbg !12990
  br i1 %182, label %303, label %183, !dbg !12994

; <label>:183:                                    ; preds = %181
  %184 = load i8*, i8** %7, align 8, !dbg !12995, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %184, metadata !12804, metadata !DIExpression()), !dbg !12840
  call void @vim_free(i8* %184) #9, !dbg !12996
  %185 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %177, i64 0, i32 2, !dbg !12997
  call void @llvm.dbg.value(metadata i8** %7, metadata !12804, metadata !DIExpression()), !dbg !12840
  %186 = call i8* @echo_string(%struct.typval_T* nonnull %185, i8** nonnull %7, i8* nonnull %11, i32 0) #9, !dbg !12998
  call void @llvm.dbg.value(metadata i8* %186, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %186, metadata !12791, metadata !DIExpression()), !dbg !12826
  %187 = icmp eq i8* %186, null, !dbg !12999
  br i1 %187, label %220, label %188, !dbg !13001

; <label>:188:                                    ; preds = %183, %174
  %189 = phi i8* [ %186, %183 ], [ %179, %174 ]
  %190 = phi i8* [ %186, %183 ], [ %180, %174 ]
  call void @llvm.dbg.value(metadata i8* %190, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %189, metadata !12791, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata %struct.regmatch_T* %4, metadata !12793, metadata !DIExpression()), !dbg !13002
  %191 = call i32 @vim_regexec_nl(%struct.regmatch_T* nonnull %4, i8* %190, i32 %168) #9, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %191, metadata !12800, metadata !DIExpression()), !dbg !12835
  %192 = icmp eq i32 %191, 0, !dbg !13004
  br i1 %192, label %196, label %193, !dbg !13006

; <label>:193:                                    ; preds = %188
  %194 = add nsw i64 %175, -1, !dbg !13007
  call void @llvm.dbg.value(metadata i64 %194, metadata !12798, metadata !DIExpression()), !dbg !12833
  %195 = icmp slt i64 %175, 2, !dbg !13008
  br i1 %195, label %222, label %197, !dbg !13009

; <label>:196:                                    ; preds = %188
  call void @llvm.dbg.value(metadata i64 %175, metadata !12798, metadata !DIExpression()), !dbg !12833
  br i1 %163, label %198, label %303, !dbg !13010

; <label>:197:                                    ; preds = %193
  br i1 %163, label %198, label %203, !dbg !13012

; <label>:198:                                    ; preds = %196, %197
  %199 = phi i64 [ %194, %197 ], [ %175, %196 ]
  %200 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %177, i64 0, i32 0, !dbg !13013
  %201 = load %struct.listitem_S*, %struct.listitem_S** %200, align 8, !dbg !13013, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %201, metadata !12802, metadata !DIExpression()), !dbg !12837
  %202 = add nsw i64 %178, 1, !dbg !13016
  call void @llvm.dbg.value(metadata i64 %202, metadata !12803, metadata !DIExpression()), !dbg !12838
  br label %174, !dbg !13017, !llvm.loop !13018

; <label>:203:                                    ; preds = %197
  %204 = load i8*, i8** %164, align 8, !dbg !13021, !tbaa !2783
  %205 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !13023, !tbaa !2783
  %206 = call i32 %205(i8* %204) #9, !dbg !13024
  %207 = sext i32 %206 to i64, !dbg !13025
  %208 = getelementptr inbounds i8, i8* %204, i64 %207, !dbg !13025
  %209 = ptrtoint i8* %208 to i64, !dbg !13026
  %210 = ptrtoint i8* %190 to i64, !dbg !13026
  %211 = sub i64 %209, %210, !dbg !13026
  %212 = trunc i64 %211 to i32, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %212, metadata !12799, metadata !DIExpression()), !dbg !12834
  %213 = icmp sgt i32 %212, %165, !dbg !13028
  br i1 %213, label %303, label %214, !dbg !13030

; <label>:214:                                    ; preds = %203
  %215 = shl i64 %211, 32, !dbg !13031
  %216 = ashr exact i64 %215, 32, !dbg !13031
  %217 = getelementptr inbounds i8, i8* %190, i64 %216, !dbg !13031
  %218 = load i8*, i8** %164, align 8, !dbg !13032, !tbaa !2783
  %219 = icmp ugt i8* %217, %218, !dbg !13033
  br i1 %219, label %166, label %303, !dbg !13034, !llvm.loop !13018

; <label>:220:                                    ; preds = %183
  call void @llvm.dbg.value(metadata i8* null, metadata !12789, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* null, metadata !12791, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 %176, metadata !12800, metadata !DIExpression()), !dbg !12835
  %221 = icmp eq i32 %176, 0, !dbg !13035
  br i1 %221, label %303, label %222, !dbg !13036

; <label>:222:                                    ; preds = %193, %220
  %223 = phi i8* [ null, %220 ], [ %189, %193 ]
  br i1 %17, label %224, label %255, !dbg !13037

; <label>:224:                                    ; preds = %222
  %225 = bitcast %union.anon* %15 to %struct.listvar_S**, !dbg !13038
  %226 = load %struct.listvar_S*, %struct.listvar_S** %225, align 8, !dbg !13038, !tbaa !2918
  %227 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %226, i64 0, i32 0, !dbg !13039
  %228 = load %struct.listitem_S*, %struct.listitem_S** %227, align 8, !dbg !13039, !tbaa !3610
  call void @llvm.dbg.value(metadata %struct.listitem_S* %228, metadata !12808, metadata !DIExpression()), !dbg !13040
  %229 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %228, i64 0, i32 0, !dbg !13041
  %230 = load %struct.listitem_S*, %struct.listitem_S** %229, align 8, !dbg !13041, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %230, metadata !12815, metadata !DIExpression()), !dbg !13042
  %231 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %230, i64 0, i32 0, !dbg !13043
  %232 = load %struct.listitem_S*, %struct.listitem_S** %231, align 8, !dbg !13043, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %232, metadata !12816, metadata !DIExpression()), !dbg !13044
  %233 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %232, i64 0, i32 0, !dbg !13045
  %234 = load %struct.listitem_S*, %struct.listitem_S** %233, align 8, !dbg !13045, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %234, metadata !12817, metadata !DIExpression()), !dbg !13046
  %235 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %228, i64 0, i32 2, i32 2, !dbg !13047
  %236 = bitcast %union.anon* %235 to i8**, !dbg !13048
  %237 = load i8*, i8** %236, align 8, !dbg !13048, !tbaa !2918
  call void @vim_free(i8* %237) #9, !dbg !13049
  %238 = load i8*, i8** %164, align 8, !dbg !13050, !tbaa !2783
  %239 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 2, i64 0, !dbg !13051
  %240 = bitcast i8** %239 to i64*, !dbg !13051
  %241 = load i64, i64* %240, align 8, !dbg !13051, !tbaa !2783
  %242 = ptrtoint i8* %238 to i64, !dbg !13052
  %243 = sub i64 %241, %242, !dbg !13052
  %244 = call i8* @vim_strnsave(i8* %238, i64 %243) #9, !dbg !13053
  store i8* %244, i8** %236, align 8, !dbg !13054, !tbaa !2918
  %245 = bitcast i8** %164 to i64*, !dbg !13055
  %246 = load i64, i64* %245, align 8, !dbg !13055, !tbaa !2783
  %247 = ptrtoint i8* %223 to i64, !dbg !13056
  %248 = sub i64 %246, %247, !dbg !13056
  %249 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %232, i64 0, i32 2, i32 2, i32 0, !dbg !13057
  store i64 %248, i64* %249, align 8, !dbg !13058, !tbaa !2918
  %250 = load i64, i64* %240, align 8, !dbg !13059, !tbaa !2783
  %251 = sub i64 %250, %247, !dbg !13060
  %252 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %234, i64 0, i32 2, i32 2, i32 0, !dbg !13061
  store i64 %251, i64* %252, align 8, !dbg !13062, !tbaa !2918
  br i1 %163, label %253, label %303, !dbg !13063

; <label>:253:                                    ; preds = %224
  %254 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %230, i64 0, i32 2, i32 2, i32 0, !dbg !13064
  store i64 %178, i64* %254, align 8, !dbg !13066, !tbaa !2918
  br label %303, !dbg !13067

; <label>:255:                                    ; preds = %222
  switch i32 %2, label %291 [
    i32 3, label %256
    i32 2, label %279
  ], !dbg !13068

; <label>:256:                                    ; preds = %255
  call void @llvm.dbg.value(metadata i32 0, metadata !12818, metadata !DIExpression()), !dbg !13069
  %257 = bitcast %union.anon* %15 to %struct.listvar_S**
  br label %258, !dbg !13070

; <label>:258:                                    ; preds = %256, %276
  %259 = phi i64 [ 0, %256 ], [ %277, %276 ]
  call void @llvm.dbg.value(metadata i64 %259, metadata !12818, metadata !DIExpression()), !dbg !13069
  %260 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 2, i64 %259, !dbg !13072
  %261 = load i8*, i8** %260, align 8, !dbg !13072, !tbaa !2783
  %262 = icmp eq i8* %261, null, !dbg !13076
  %263 = load %struct.listvar_S*, %struct.listvar_S** %257, align 8, !tbaa !2918
  br i1 %262, label %264, label %267, !dbg !13077

; <label>:264:                                    ; preds = %258
  %265 = call i32 @list_append_string(%struct.listvar_S* %263, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.746, i64 0, i64 0), i32 0) #9, !dbg !13078
  %266 = icmp eq i32 %265, 0, !dbg !13081
  br i1 %266, label %303, label %276, !dbg !13082

; <label>:267:                                    ; preds = %258
  %268 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 1, i64 %259, !dbg !13083
  %269 = load i8*, i8** %268, align 8, !dbg !13083, !tbaa !2783
  %270 = ptrtoint i8* %261 to i64, !dbg !13085
  %271 = ptrtoint i8* %269 to i64, !dbg !13085
  %272 = sub i64 %270, %271, !dbg !13085
  %273 = trunc i64 %272 to i32, !dbg !13086
  %274 = call i32 @list_append_string(%struct.listvar_S* %263, i8* %269, i32 %273) #9, !dbg !13087
  %275 = icmp eq i32 %274, 0, !dbg !13088
  br i1 %275, label %303, label %276, !dbg !13089

; <label>:276:                                    ; preds = %264, %267
  %277 = add nuw nsw i64 %259, 1, !dbg !13090
  %278 = icmp ult i64 %277, 10, !dbg !13091
  br i1 %278, label %258, label %303, !dbg !13070, !llvm.loop !13092

; <label>:279:                                    ; preds = %255
  br i1 %163, label %280, label %282, !dbg !13094

; <label>:280:                                    ; preds = %279
  %281 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %177, i64 0, i32 2, !dbg !13097
  call void @copy_tv(%struct.typval_T* nonnull %281, %struct.typval_T* %1) #9, !dbg !13099
  br label %303, !dbg !13099

; <label>:282:                                    ; preds = %279
  %283 = load i8*, i8** %164, align 8, !dbg !13100, !tbaa !2783
  %284 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 2, i64 0, !dbg !13101
  %285 = bitcast i8** %284 to i64*, !dbg !13101
  %286 = load i64, i64* %285, align 8, !dbg !13101, !tbaa !2783
  %287 = ptrtoint i8* %283 to i64, !dbg !13102
  %288 = sub i64 %286, %287, !dbg !13102
  %289 = call i8* @vim_strnsave(i8* %283, i64 %288) #9, !dbg !13103
  %290 = bitcast %union.anon* %15 to i8**, !dbg !13104
  store i8* %289, i8** %290, align 8, !dbg !13105, !tbaa !2918
  br label %303

; <label>:291:                                    ; preds = %255
  br i1 %163, label %292, label %293, !dbg !13106

; <label>:292:                                    ; preds = %291
  store i64 %178, i64* %16, align 8, !dbg !13107, !tbaa !2918
  br label %303, !dbg !13109

; <label>:293:                                    ; preds = %291
  %294 = icmp eq i32 %2, 0, !dbg !13110
  %295 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %4, i64 0, i32 2, i64 0, !dbg !13113
  %296 = bitcast i8** %295 to i64*, !dbg !13113
  %297 = load i64, i64* %296, align 8, !dbg !13113
  %298 = bitcast i8** %164 to i64*, !dbg !13114
  %299 = load i64, i64* %298, align 8, !dbg !13114
  %300 = select i1 %294, i64 %297, i64 %299, !dbg !13115
  %301 = ptrtoint i8* %223 to i64, !dbg !13116
  %302 = sub i64 %300, %301, !dbg !13117
  store i64 %302, i64* %16, align 8, !dbg !13117, !tbaa !2918
  br label %303

; <label>:303:                                    ; preds = %181, %196, %203, %214, %276, %264, %267, %224, %253, %220, %282, %280, %293, %292
  %304 = load %struct.regprog*, %struct.regprog** %158, align 8, !dbg !13118, !tbaa !10100
  call void @vim_regfree(%struct.regprog* %304) #9, !dbg !13119
  br label %305, !dbg !13120

; <label>:305:                                    ; preds = %140, %150, %303, %141, %91, %52, %20, %41
  %306 = phi %struct.listvar_S* [ null, %20 ], [ null, %41 ], [ null, %52 ], [ %92, %91 ], [ %92, %303 ], [ %92, %150 ], [ %92, %141 ], [ %92, %140 ]
  call void @llvm.dbg.value(metadata %struct.listvar_S* %306, metadata !12801, metadata !DIExpression()), !dbg !12836
  %307 = icmp eq %struct.listvar_S* %306, null, !dbg !13121
  %308 = and i1 %17, %307, !dbg !13123
  br i1 %308, label %309, label %318, !dbg !13123

; <label>:309:                                    ; preds = %305
  %310 = bitcast %union.anon* %15 to %struct.listvar_S**, !dbg !13124
  %311 = load %struct.listvar_S*, %struct.listvar_S** %310, align 8, !dbg !13124, !tbaa !2918
  %312 = icmp eq %struct.listvar_S* %311, null, !dbg !13125
  br i1 %312, label %318, label %313, !dbg !13126

; <label>:313:                                    ; preds = %309
  %314 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %311, i64 0, i32 0, !dbg !13127
  %315 = load %struct.listitem_S*, %struct.listitem_S** %314, align 8, !dbg !13127, !tbaa !3610
  %316 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %315, i64 0, i32 0, !dbg !13128
  %317 = load %struct.listitem_S*, %struct.listitem_S** %316, align 8, !dbg !13128, !tbaa !3736
  call void @listitem_remove(%struct.listvar_S* nonnull %311, %struct.listitem_S* %317) #9, !dbg !13129
  br label %318, !dbg !13129

; <label>:318:                                    ; preds = %309, %313, %305
  %319 = load i8*, i8** %7, align 8, !dbg !13130, !tbaa !2783
  call void @llvm.dbg.value(metadata i8* %319, metadata !12804, metadata !DIExpression()), !dbg !12840
  call void @vim_free(i8* %319) #9, !dbg !13131
  store i64 %13, i64* bitcast (i8** @p_cpo to i64*), align 8, !dbg !13132, !tbaa !2783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9, !dbg !13133
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %11) #9, !dbg !13133
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %10) #9, !dbg !13133
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %9) #9, !dbg !13133
  ret void, !dbg !13133
}

declare void @list_free(%struct.listvar_S*) local_unnamed_addr #3

declare %struct.regprog* @vim_regcomp(i8*, i32) local_unnamed_addr #3

declare i8* @echo_string(%struct.typval_T*, i8**, i8*, i32) local_unnamed_addr #3

declare i32 @vim_regexec_nl(%struct.regmatch_T*, i8*, i32) local_unnamed_addr #3

declare i8* @vim_strnsave(i8*, i64) local_unnamed_addr #3

declare void @vim_regfree(%struct.regprog*) local_unnamed_addr #3

declare void @listitem_remove(%struct.listvar_S*, %struct.listitem_S*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @max_min(%struct.typval_T* nocapture readonly, %struct.typval_T* nocapture, i32) unnamed_addr #0 !dbg !13134 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !13136, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !13137, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.value(metadata i32 %2, metadata !13138, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i64 0, metadata !13139, metadata !DIExpression()), !dbg !13155
  %5 = bitcast i32* %4 to i8*, !dbg !13156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9, !dbg !13156
  call void @llvm.dbg.value(metadata i32 0, metadata !13141, metadata !DIExpression()), !dbg !13157
  store i32 0, i32* %4, align 4, !dbg !13157, !tbaa !2904
  %6 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !13158
  %7 = load i32, i32* %6, align 8, !dbg !13158, !tbaa !3221
  switch i32 %7, label %110 [
    i32 11, label %8
    i32 12, label %65
  ], !dbg !13159

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !13160
  %10 = bitcast %union.anon* %9 to %struct.listvar_S**, !dbg !13161
  %11 = load %struct.listvar_S*, %struct.listvar_S** %10, align 8, !dbg !13161, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.listvar_S* %11, metadata !13142, metadata !DIExpression()), !dbg !13162
  %12 = icmp eq %struct.listvar_S* %11, null, !dbg !13163
  br i1 %12, label %115, label %13, !dbg !13165

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %11, i64 0, i32 8, !dbg !13166
  %15 = load i32, i32* %14, align 4, !dbg !13166, !tbaa !3541
  %16 = icmp sgt i32 %15, 0, !dbg !13167
  br i1 %16, label %17, label %115, !dbg !13168

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %11, i64 0, i32 0, !dbg !13169
  %19 = load %struct.listitem_S*, %struct.listitem_S** %18, align 8, !dbg !13169, !tbaa !3610
  %20 = icmp eq %struct.listitem_S* %19, @range_list_item, !dbg !13172
  br i1 %20, label %21, label %34, !dbg !13173

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %11, i64 0, i32 2, i32 0, i32 2, !dbg !13174
  %23 = load i32, i32* %22, align 8, !dbg !13174, !tbaa !2918
  %24 = icmp sgt i32 %23, 0, !dbg !13177
  %25 = zext i1 %24 to i32, !dbg !13177
  %26 = icmp eq i32 %25, %2, !dbg !13178
  %27 = getelementptr inbounds %struct.listvar_S, %struct.listvar_S* %11, i64 0, i32 2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2918
  br i1 %26, label %29, label %115, !dbg !13179

; <label>:29:                                     ; preds = %21
  %30 = add nsw i32 %15, -1, !dbg !13180
  %31 = mul nsw i32 %23, %30, !dbg !13181
  %32 = sext i32 %31 to i64, !dbg !13182
  %33 = add nsw i64 %28, %32, !dbg !13183
  call void @llvm.dbg.value(metadata i64 %33, metadata !13139, metadata !DIExpression()), !dbg !13155
  br label %115

; <label>:34:                                     ; preds = %17
  call void @llvm.dbg.value(metadata %struct.listitem_S* %19, metadata !13145, metadata !DIExpression()), !dbg !13184
  %35 = icmp eq %struct.listitem_S* %19, null, !dbg !13185
  br i1 %35, label %115, label %36, !dbg !13188

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %19, i64 0, i32 2, !dbg !13189
  call void @llvm.dbg.value(metadata i32* %4, metadata !13141, metadata !DIExpression()), !dbg !13157
  %38 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %37, i32* nonnull %4) #9, !dbg !13191
  call void @llvm.dbg.value(metadata i64 %38, metadata !13139, metadata !DIExpression()), !dbg !13155
  %39 = load i32, i32* %4, align 4, !dbg !13192, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %39, metadata !13141, metadata !DIExpression()), !dbg !13157
  %40 = icmp eq i32 %39, 0, !dbg !13192
  br i1 %40, label %41, label %118, !dbg !13194

; <label>:41:                                     ; preds = %36
  call void @llvm.dbg.value(metadata i64 %38, metadata !13139, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.value(metadata %struct.listitem_S* %19, metadata !13145, metadata !DIExpression()), !dbg !13184
  %42 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %19, i64 0, i32 0, !dbg !13195
  %43 = load %struct.listitem_S*, %struct.listitem_S** %42, align 8, !dbg !13195, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %43, metadata !13145, metadata !DIExpression()), !dbg !13184
  %44 = icmp eq %struct.listitem_S* %43, null, !dbg !13199
  br i1 %44, label %115, label %45, !dbg !13201

; <label>:45:                                     ; preds = %41
  %46 = icmp eq i32 %2, 0
  br label %47, !dbg !13201

; <label>:47:                                     ; preds = %45, %60
  %48 = phi %struct.listitem_S* [ %43, %45 ], [ %63, %60 ]
  %49 = phi i64 [ %38, %45 ], [ %61, %60 ]
  call void @llvm.dbg.value(metadata i64 %49, metadata !13139, metadata !DIExpression()), !dbg !13155
  %50 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %48, i64 0, i32 2, !dbg !13202
  call void @llvm.dbg.value(metadata i32* %4, metadata !13141, metadata !DIExpression()), !dbg !13157
  %51 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %50, i32* nonnull %4) #9, !dbg !13203
  call void @llvm.dbg.value(metadata i64 %51, metadata !13140, metadata !DIExpression()), !dbg !13204
  %52 = load i32, i32* %4, align 4, !dbg !13205, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %52, metadata !13141, metadata !DIExpression()), !dbg !13157
  %53 = icmp eq i32 %52, 0, !dbg !13205
  br i1 %53, label %54, label %118, !dbg !13207

; <label>:54:                                     ; preds = %47
  br i1 %46, label %57, label %55, !dbg !13208

; <label>:55:                                     ; preds = %54
  %56 = icmp sgt i64 %51, %49, !dbg !13209
  br i1 %56, label %59, label %60, !dbg !13211

; <label>:57:                                     ; preds = %54
  %58 = icmp slt i64 %51, %49, !dbg !13212
  br i1 %58, label %59, label %60, !dbg !13208

; <label>:59:                                     ; preds = %57, %55
  call void @llvm.dbg.value(metadata i64 %51, metadata !13139, metadata !DIExpression()), !dbg !13155
  br label %60, !dbg !13213

; <label>:60:                                     ; preds = %59, %57, %55
  %61 = phi i64 [ %51, %59 ], [ %49, %55 ], [ %49, %57 ]
  call void @llvm.dbg.value(metadata i64 %61, metadata !13139, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.value(metadata %struct.listitem_S* %48, metadata !13145, metadata !DIExpression()), !dbg !13184
  %62 = getelementptr inbounds %struct.listitem_S, %struct.listitem_S* %48, i64 0, i32 0, !dbg !13195
  %63 = load %struct.listitem_S*, %struct.listitem_S** %62, align 8, !dbg !13195, !tbaa !3736
  call void @llvm.dbg.value(metadata %struct.listitem_S* %63, metadata !13145, metadata !DIExpression()), !dbg !13184
  %64 = icmp eq %struct.listitem_S* %63, null, !dbg !13199
  br i1 %64, label %115, label %47, !dbg !13201, !llvm.loop !13214

; <label>:65:                                     ; preds = %3
  call void @llvm.dbg.value(metadata i32 1, metadata !13149, metadata !DIExpression()), !dbg !13217
  %66 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 2, !dbg !13218
  %67 = bitcast %union.anon* %66 to %struct.dictvar_S**, !dbg !13219
  %68 = load %struct.dictvar_S*, %struct.dictvar_S** %67, align 8, !dbg !13219, !tbaa !2918
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %68, metadata !13146, metadata !DIExpression()), !dbg !13220
  %69 = icmp eq %struct.dictvar_S* %68, null, !dbg !13221
  br i1 %69, label %115, label %70, !dbg !13223

; <label>:70:                                     ; preds = %65
  %71 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %68, i64 0, i32 4, i32 1, !dbg !13224
  %72 = load i64, i64* %71, align 8, !dbg !13224, !tbaa !5234
  %73 = trunc i64 %72 to i32, !dbg !13226
  call void @llvm.dbg.value(metadata i32 %73, metadata !13151, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata %struct.hashitem_S* %77, metadata !13150, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 %73, metadata !13151, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 1, metadata !13149, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i64 0, metadata !13139, metadata !DIExpression()), !dbg !13155
  %74 = icmp sgt i32 %73, 0, !dbg !13229
  br i1 %74, label %75, label %115, !dbg !13232

; <label>:75:                                     ; preds = %70
  %76 = getelementptr inbounds %struct.dictvar_S, %struct.dictvar_S* %68, i64 0, i32 4, i32 6, !dbg !13233
  %77 = load %struct.hashitem_S*, %struct.hashitem_S** %76, align 8, !dbg !13233, !tbaa !13234
  %78 = icmp eq i32 %2, 0
  br label %79, !dbg !13232

; <label>:79:                                     ; preds = %75, %104
  %80 = phi i32 [ %73, %75 ], [ %107, %104 ]
  %81 = phi %struct.hashitem_S* [ %77, %75 ], [ %108, %104 ]
  %82 = phi i32 [ 1, %75 ], [ %106, %104 ]
  %83 = phi i64 [ 0, %75 ], [ %105, %104 ]
  call void @llvm.dbg.value(metadata i64 %83, metadata !13139, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.value(metadata i32 %82, metadata !13149, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata %struct.hashitem_S* %81, metadata !13150, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 %80, metadata !13151, metadata !DIExpression()), !dbg !13227
  %84 = getelementptr inbounds %struct.hashitem_S, %struct.hashitem_S* %81, i64 0, i32 1, !dbg !13235
  %85 = load i8*, i8** %84, align 8, !dbg !13235, !tbaa !13238
  %86 = icmp eq i8* %85, null, !dbg !13235
  %87 = icmp eq i8* %85, @hash_removed, !dbg !13235
  %88 = or i1 %86, %87, !dbg !13235
  br i1 %88, label %104, label %89, !dbg !13235

; <label>:89:                                     ; preds = %79
  %90 = add nsw i32 %80, -1, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %90, metadata !13151, metadata !DIExpression()), !dbg !13227
  %91 = getelementptr inbounds i8, i8* %85, i64 -17, !dbg !13242
  %92 = bitcast i8* %91 to %struct.typval_T*, !dbg !13243
  call void @llvm.dbg.value(metadata i32* %4, metadata !13141, metadata !DIExpression()), !dbg !13157
  %93 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %92, i32* nonnull %4) #9, !dbg !13244
  call void @llvm.dbg.value(metadata i64 %93, metadata !13140, metadata !DIExpression()), !dbg !13204
  %94 = load i32, i32* %4, align 4, !dbg !13245, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %94, metadata !13141, metadata !DIExpression()), !dbg !13157
  %95 = icmp eq i32 %94, 0, !dbg !13245
  br i1 %95, label %96, label %118, !dbg !13247

; <label>:96:                                     ; preds = %89
  %97 = icmp eq i32 %82, 0, !dbg !13248
  br i1 %97, label %98, label %104, !dbg !13250

; <label>:98:                                     ; preds = %96
  br i1 %78, label %101, label %99, !dbg !13251

; <label>:99:                                     ; preds = %98
  %100 = icmp sgt i64 %93, %83, !dbg !13252
  br i1 %100, label %103, label %104, !dbg !13254

; <label>:101:                                    ; preds = %98
  %102 = icmp slt i64 %93, %83, !dbg !13255
  br i1 %102, label %103, label %104, !dbg !13251

; <label>:103:                                    ; preds = %101, %99
  call void @llvm.dbg.value(metadata i64 %93, metadata !13139, metadata !DIExpression()), !dbg !13155
  br label %104, !dbg !13256

; <label>:104:                                    ; preds = %96, %79, %99, %101, %103
  %105 = phi i64 [ %83, %79 ], [ %93, %103 ], [ %83, %99 ], [ %83, %101 ], [ %93, %96 ]
  %106 = phi i32 [ %82, %79 ], [ 0, %103 ], [ 0, %99 ], [ 0, %101 ], [ 0, %96 ]
  %107 = phi i32 [ %80, %79 ], [ %90, %103 ], [ %90, %99 ], [ %90, %101 ], [ %90, %96 ]
  %108 = getelementptr inbounds %struct.hashitem_S, %struct.hashitem_S* %81, i64 1, !dbg !13257
  call void @llvm.dbg.value(metadata i32 %107, metadata !13151, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata %struct.hashitem_S* %108, metadata !13150, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 %106, metadata !13149, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i64 %105, metadata !13139, metadata !DIExpression()), !dbg !13155
  %109 = icmp sgt i32 %107, 0, !dbg !13229
  br i1 %109, label %79, label %115, !dbg !13232, !llvm.loop !13258

; <label>:110:                                    ; preds = %3
  %111 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_listdictarg, i64 0, i64 0), i32 5) #9, !dbg !13260
  %112 = icmp eq i32 %2, 0, !dbg !13261
  %113 = select i1 %112, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.753, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.752, i64 0, i64 0), !dbg !13261
  %114 = tail call i32 (i8*, ...) @semsg(i8* %111, i8* %113) #9, !dbg !13262
  br label %115

; <label>:115:                                    ; preds = %104, %60, %70, %41, %65, %13, %29, %8, %34, %21, %110
  %116 = phi i64 [ 0, %110 ], [ %28, %21 ], [ 0, %8 ], [ 0, %13 ], [ 0, %34 ], [ %33, %29 ], [ 0, %65 ], [ %38, %41 ], [ 0, %70 ], [ %61, %60 ], [ %105, %104 ]
  call void @llvm.dbg.value(metadata i64 %116, metadata !13139, metadata !DIExpression()), !dbg !13155
  %117 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !13263
  store i64 %116, i64* %117, align 8, !dbg !13264, !tbaa !2918
  br label %118, !dbg !13265

; <label>:118:                                    ; preds = %89, %47, %36, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9, !dbg !13265
  ret void, !dbg !13265
}

declare i32 @utf_char2bytes(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @pow(double, double) local_unnamed_addr #5

declare i32 @vim_vsnprintf_typval(i8*, i64, i8*, %struct.__va_list_tag*, %struct.typval_T*) local_unnamed_addr #3

declare void @pum_set_event_info(%struct.dictvar_S*) local_unnamed_addr #3

declare i32 @pum_visible() local_unnamed_addr #3

declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #3

declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #3

declare i32 @close(i32) local_unnamed_addr #3

declare i64 @vim_time() local_unnamed_addr #3

declare i32 @vim_rename(i8*, i8*) local_unnamed_addr #3

declare i32 @list_extend(%struct.listvar_S*, %struct.listvar_S*, %struct.listitem_S*) local_unnamed_addr #3

declare i32 @screen_screencol() local_unnamed_addr #3

declare i32 @screen_screenrow() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @search_cmn(%struct.typval_T*, %struct.pos_T*, i32*) unnamed_addr #0 !dbg !13266 {
  %4 = alloca %struct.pos_T, align 8
  %5 = alloca %struct.pos_T, align 8
  %6 = alloca %struct.timeval, align 8
  %7 = alloca %struct.searchit_arg_T, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.pos_T, align 8
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !13270, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata %struct.pos_T* %1, metadata !13271, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.value(metadata i32* %2, metadata !13272, metadata !DIExpression()), !dbg !13297
  %10 = bitcast %struct.pos_T* %4 to i8*, !dbg !13298
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9, !dbg !13298
  %11 = bitcast %struct.pos_T* %5 to i8*, !dbg !13299
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11), !dbg !13299
  %12 = load i32, i32* @p_ws, align 4, !dbg !13300, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %12, metadata !13277, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.value(metadata i32 0, metadata !13279, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.value(metadata i64 0, metadata !13280, metadata !DIExpression()), !dbg !13303
  %13 = bitcast %struct.timeval* %6 to i8*, !dbg !13304
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9, !dbg !13304
  call void @llvm.dbg.value(metadata i64 0, metadata !13282, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 1024, metadata !13283, metadata !DIExpression()), !dbg !13306
  %14 = bitcast %struct.searchit_arg_T* %7 to i8*, !dbg !13307
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9, !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13286, metadata !DIExpression()), !dbg !13308
  %15 = tail call i8* @tv_get_string(%struct.typval_T* %0) #9, !dbg !13309
  call void @llvm.dbg.value(metadata i8* %15, metadata !13274, metadata !DIExpression()), !dbg !13310
  %16 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !13311
  %17 = tail call fastcc i32 @get_search_arg(%struct.typval_T* nonnull %16, i32* %2), !dbg !13312
  call void @llvm.dbg.value(metadata i32 %17, metadata !13278, metadata !DIExpression()), !dbg !13313
  %18 = icmp eq i32 %17, 0, !dbg !13314
  br i1 %18, label %148, label %19, !dbg !13316

; <label>:19:                                     ; preds = %3
  %20 = load i32, i32* %2, align 4, !dbg !13317, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %20, metadata !13273, metadata !DIExpression()), !dbg !13318
  %21 = shl i32 %20, 4, !dbg !13319
  %22 = and i32 %21, 256, !dbg !13319
  %23 = and i32 %20, 64, !dbg !13320
  %24 = or i32 %23, %22, !dbg !13322
  %25 = shl i32 %20, 5, !dbg !13323
  %26 = and i32 %25, 4096, !dbg !13323
  %27 = or i32 %24, %26, !dbg !13323
  %28 = or i32 %27, 1024, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %28, metadata !13283, metadata !DIExpression()), !dbg !13306
  %29 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %16, i64 0, i32 0, !dbg !13324
  %30 = load i32, i32* %29, align 8, !dbg !13324, !tbaa !3221
  %31 = icmp eq i32 %30, 0, !dbg !13326
  br i1 %31, label %51, label %32, !dbg !13327

; <label>:32:                                     ; preds = %19
  %33 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !13328
  %34 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %33, i64 0, i32 0, !dbg !13329
  %35 = load i32, i32* %34, align 8, !dbg !13329, !tbaa !3221
  %36 = icmp eq i32 %35, 0, !dbg !13330
  br i1 %36, label %51, label %37, !dbg !13331

; <label>:37:                                     ; preds = %32
  %38 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %33, i32* null) #9, !dbg !13332
  call void @llvm.dbg.value(metadata i64 %38, metadata !13280, metadata !DIExpression()), !dbg !13303
  %39 = icmp slt i64 %38, 0, !dbg !13334
  br i1 %39, label %148, label %40, !dbg !13336

; <label>:40:                                     ; preds = %37
  %41 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !13337
  %42 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %41, i64 0, i32 0, !dbg !13339
  %43 = load i32, i32* %42, align 8, !dbg !13339, !tbaa !3221
  %44 = icmp eq i32 %43, 0, !dbg !13340
  br i1 %44, label %51, label %45, !dbg !13341

; <label>:45:                                     ; preds = %40
  %46 = tail call i64 @tv_get_number_chk(%struct.typval_T* nonnull %41, i32* null) #9, !dbg !13342
  call void @llvm.dbg.value(metadata i64 %46, metadata !13282, metadata !DIExpression()), !dbg !13305
  %47 = icmp slt i64 %46, 0, !dbg !13344
  br i1 %47, label %148, label %48, !dbg !13346

; <label>:48:                                     ; preds = %45
  %49 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 4, !dbg !13347
  %50 = tail call i32 @eval_expr_valid_arg(%struct.typval_T* nonnull %49) #9, !dbg !13348
  call void @llvm.dbg.value(metadata i32 %50, metadata !13286, metadata !DIExpression()), !dbg !13308
  br label %51, !dbg !13349

; <label>:51:                                     ; preds = %40, %32, %19, %48
  %52 = phi i64 [ %38, %48 ], [ %38, %40 ], [ 0, %32 ], [ 0, %19 ]
  %53 = phi i64 [ %46, %48 ], [ 0, %40 ], [ 0, %32 ], [ 0, %19 ]
  %54 = phi i32 [ %50, %48 ], [ 0, %40 ], [ 0, %32 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !13286, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i64 %53, metadata !13282, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i64 %52, metadata !13280, metadata !DIExpression()), !dbg !13303
  call void @llvm.dbg.value(metadata %struct.timeval* %6, metadata !13281, metadata !DIExpression()), !dbg !13350
  call void @profile_setlimit(i64 %53, %struct.timeval* nonnull %6) #9, !dbg !13351
  %55 = and i32 %20, 6, !dbg !13352
  %56 = icmp eq i32 %55, 0, !dbg !13354
  br i1 %56, label %57, label %64, !dbg !13355

; <label>:57:                                     ; preds = %51
  %58 = and i32 %20, 1, !dbg !13356
  %59 = icmp ne i32 %58, 0, !dbg !13356
  %60 = xor i1 %59, true, !dbg !13357
  %61 = and i32 %20, 8, !dbg !13358
  %62 = icmp eq i32 %61, 0, !dbg !13358
  %63 = or i1 %62, %60, !dbg !13357
  br i1 %63, label %68, label %64, !dbg !13357

; <label>:64:                                     ; preds = %57, %51
  %65 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !13359
  %66 = call i8* @tv_get_string(%struct.typval_T* nonnull %16) #9, !dbg !13361
  %67 = call i32 (i8*, ...) @semsg(i8* %65, i8* %66) #9, !dbg !13362
  br label %148, !dbg !13363

; <label>:68:                                     ; preds = %57
  %69 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !13364, !tbaa !2783
  %70 = getelementptr inbounds %struct.window_S, %struct.window_S* %69, i64 0, i32 7, !dbg !13365
  %71 = bitcast %struct.pos_T* %70 to i8*, !dbg !13365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %11, i8* nonnull %71, i64 16, i32 8, i1 false), !dbg !13365, !tbaa.struct !4052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %10, i8* nonnull %71, i64 16, i32 8, i1 false), !dbg !13366
  call void @llvm.dbg.value(metadata i64 0, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !13367
  call void @llvm.dbg.value(metadata i32 0, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !13367
  call void @llvm.dbg.value(metadata i32 0, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !13367
  %72 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %7, i64 0, i32 2
  %73 = bitcast i32* %72 to i64*, !dbg !13368
  store i64 0, i64* %73, align 8, !dbg !13368
  %74 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %7, i64 0, i32 0, !dbg !13369
  store i64 %52, i64* %74, align 8, !dbg !13370, !tbaa !4063
  %75 = getelementptr inbounds %struct.searchit_arg_T, %struct.searchit_arg_T* %7, i64 0, i32 1, !dbg !13371
  store %struct.timeval* %6, %struct.timeval** %75, align 8, !dbg !13372, !tbaa !4066
  %76 = icmp ne i32 %54, 0
  %77 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 0
  %78 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 1
  %79 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 2
  %80 = bitcast i32* %8 to i8*
  %81 = bitcast %struct.pos_T* %9 to i8*
  %82 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 4
  br label %83, !dbg !13373

; <label>:83:                                     ; preds = %105, %68
  %84 = phi %struct.window_S* [ %69, %68 ], [ %111, %105 ], !dbg !13374
  %85 = phi i32 [ 0, %68 ], [ %106, %105 ]
  %86 = phi i32 [ 0, %68 ], [ %94, %105 ]
  %87 = phi i64 [ 0, %68 ], [ %91, %105 ]
  call void @llvm.dbg.value(metadata i64 %87, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !13367
  call void @llvm.dbg.value(metadata i32 %86, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !13367
  call void @llvm.dbg.value(metadata i32 %85, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !13367
  %88 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !13375, !tbaa !2783
  call void @llvm.dbg.value(metadata %struct.pos_T* %4, metadata !13275, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata %struct.searchit_arg_T* %7, metadata !13285, metadata !DIExpression()), !dbg !13377
  %89 = call i32 @searchit(%struct.window_S* %84, %struct.file_buffer* %88, %struct.pos_T* nonnull %4, %struct.pos_T* null, i32 %17, i8* %15, i64 1, i32 %28, i32 0, %struct.searchit_arg_T* nonnull %7) #9, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %89, metadata !13284, metadata !DIExpression()), !dbg !13379
  %90 = icmp ne i64 %87, 0, !dbg !13380
  %91 = load i64, i64* %77, align 8, !dbg !13382
  %92 = icmp eq i64 %91, %87, !dbg !13382
  %93 = and i1 %90, %92, !dbg !13383
  %94 = load i32, i32* %78, align 8, !dbg !13382
  %95 = icmp eq i32 %94, %86, !dbg !13382
  %96 = and i1 %93, %95, !dbg !13383
  br i1 %96, label %97, label %101, !dbg !13383

; <label>:97:                                     ; preds = %83
  %98 = load i32, i32* %79, align 4, !dbg !13382, !tbaa !6398
  %99 = icmp eq i32 %98, %85, !dbg !13382
  %100 = select i1 %99, i32 0, i32 %89, !dbg !13384
  br label %101, !dbg !13384

; <label>:101:                                    ; preds = %83, %97
  %102 = phi i32 [ %89, %83 ], [ %100, %97 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !13284, metadata !DIExpression()), !dbg !13379
  %103 = icmp ne i32 %102, 0, !dbg !13385
  %104 = and i1 %76, %103, !dbg !13387
  br i1 %104, label %105, label %119, !dbg !13387

; <label>:105:                                    ; preds = %101
  call void @llvm.dbg.value(metadata i64 %91, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !13367
  call void @llvm.dbg.value(metadata i32 %94, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !13367
  %106 = load i32, i32* %79, align 4, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %106, metadata !13287, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !13367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #9, !dbg !13389
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81), !dbg !13390
  %107 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !13391, !tbaa !2783
  %108 = getelementptr inbounds %struct.window_S, %struct.window_S* %107, i64 0, i32 7, !dbg !13392
  %109 = bitcast %struct.pos_T* %108 to i8*, !dbg !13392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %81, i8* nonnull %109, i64 16, i32 8, i1 false), !dbg !13392, !tbaa.struct !4052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %109, i8* nonnull %10, i64 16, i32 8, i1 false), !dbg !13393, !tbaa.struct !4052
  call void @llvm.dbg.value(metadata i32 0, metadata !13293, metadata !DIExpression()), !dbg !13394
  store i32 0, i32* %8, align 4, !dbg !13395, !tbaa !2904
  call void @llvm.dbg.value(metadata i32* %8, metadata !13293, metadata !DIExpression()), !dbg !13394
  %110 = call i32 @eval_expr_to_bool(%struct.typval_T* nonnull %82, i32* nonnull %8) #9, !dbg !13396
  call void @llvm.dbg.value(metadata i32 %110, metadata !13288, metadata !DIExpression()), !dbg !13397
  %111 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !13398, !tbaa !2783
  %112 = getelementptr inbounds %struct.window_S, %struct.window_S* %111, i64 0, i32 7, !dbg !13399
  %113 = bitcast %struct.pos_T* %112 to i8*, !dbg !13400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %113, i8* nonnull %81, i64 16, i32 8, i1 false), !dbg !13400, !tbaa.struct !4052
  %114 = load i32, i32* %8, align 4, !dbg !13401, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %114, metadata !13293, metadata !DIExpression()), !dbg !13394
  %115 = icmp eq i32 %114, 0, !dbg !13401
  %116 = icmp ne i32 %110, 0, !dbg !13403
  %117 = and i1 %116, %115, !dbg !13405
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81), !dbg !13406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #9, !dbg !13406
  br i1 %117, label %83, label %118, !llvm.loop !13407

; <label>:118:                                    ; preds = %105
  br i1 %115, label %121, label %140

; <label>:119:                                    ; preds = %101
  call void @llvm.dbg.value(metadata i32 %102, metadata !13284, metadata !DIExpression()), !dbg !13379
  %120 = icmp eq i32 %102, 0, !dbg !13410
  br i1 %120, label %140, label %121, !dbg !13412

; <label>:121:                                    ; preds = %118, %119
  %122 = and i32 %20, 32, !dbg !13413
  %123 = icmp eq i32 %122, 0, !dbg !13413
  %124 = load i64, i64* %77, align 8, !dbg !13416
  %125 = trunc i64 %124 to i32, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %125, metadata !13279, metadata !DIExpression()), !dbg !13302
  %126 = select i1 %123, i32 %125, i32 %102, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %126, metadata !13279, metadata !DIExpression()), !dbg !13302
  br i1 %62, label %128, label %127, !dbg !13419

; <label>:127:                                    ; preds = %121
  call void @setpcmark() #9, !dbg !13420
  br label %128, !dbg !13420

; <label>:128:                                    ; preds = %121, %127
  %129 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !13422, !tbaa !2783
  %130 = getelementptr inbounds %struct.window_S, %struct.window_S* %129, i64 0, i32 7, !dbg !13423
  %131 = bitcast %struct.pos_T* %130 to i8*, !dbg !13424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %131, i8* nonnull %10, i64 16, i32 8, i1 false), !dbg !13424, !tbaa.struct !4052
  %132 = icmp eq %struct.pos_T* %1, null, !dbg !13425
  br i1 %132, label %139, label %133, !dbg !13427

; <label>:133:                                    ; preds = %128
  %134 = load i64, i64* %77, align 8, !dbg !13428, !tbaa !4160
  %135 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %1, i64 0, i32 0, !dbg !13430
  store i64 %134, i64* %135, align 8, !dbg !13431, !tbaa !4160
  %136 = load i32, i32* %78, align 8, !dbg !13432, !tbaa !4166
  %137 = add nsw i32 %136, 1, !dbg !13433
  %138 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %1, i64 0, i32 1, !dbg !13434
  store i32 %137, i32* %138, align 8, !dbg !13435, !tbaa !4166
  br label %139, !dbg !13436

; <label>:139:                                    ; preds = %128, %133
  call void @check_cursor() #9, !dbg !13437
  br label %140, !dbg !13438

; <label>:140:                                    ; preds = %118, %119, %139
  %141 = phi i32 [ %126, %139 ], [ 0, %119 ], [ 0, %118 ]
  call void @llvm.dbg.value(metadata i32 %141, metadata !13279, metadata !DIExpression()), !dbg !13302
  %142 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !tbaa !2783
  br i1 %59, label %143, label %146, !dbg !13439

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds %struct.window_S, %struct.window_S* %142, i64 0, i32 7, !dbg !13440
  %145 = bitcast %struct.pos_T* %144 to i8*, !dbg !13442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %145, i8* nonnull %11, i64 16, i32 8, i1 false), !dbg !13442, !tbaa.struct !4052
  br label %148, !dbg !13443

; <label>:146:                                    ; preds = %140
  %147 = getelementptr inbounds %struct.window_S, %struct.window_S* %142, i64 0, i32 9, !dbg !13444
  store i32 1, i32* %147, align 4, !dbg !13445, !tbaa !9869
  br label %148

; <label>:148:                                    ; preds = %143, %146, %45, %37, %3, %64
  %149 = phi i32 [ 0, %3 ], [ 0, %37 ], [ 0, %45 ], [ 0, %64 ], [ %141, %143 ], [ %141, %146 ]
  call void @llvm.dbg.value(metadata i32 %149, metadata !13279, metadata !DIExpression()), !dbg !13302
  store i32 %12, i32* @p_ws, align 4, !dbg !13446, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9, !dbg !13447
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9, !dbg !13447
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !13447
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9, !dbg !13447
  ret i32 %149, !dbg !13448
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_search_arg(%struct.typval_T*, i32*) unnamed_addr #0 !dbg !13449 {
  %3 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !13453, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.value(metadata i32* %1, metadata !13454, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i32 1, metadata !13455, metadata !DIExpression()), !dbg !13461
  %4 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0, !dbg !13462
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %4) #9, !dbg !13462
  call void @llvm.dbg.declare(metadata [65 x i8]* %3, metadata !13457, metadata !DIExpression()), !dbg !13463
  %5 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 0, i32 0, !dbg !13464
  %6 = load i32, i32* %5, align 8, !dbg !13464, !tbaa !3221
  %7 = icmp eq i32 %6, 0, !dbg !13466
  br i1 %7, label %38, label %8, !dbg !13467

; <label>:8:                                      ; preds = %2
  %9 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %0, i8* nonnull %4) #9, !dbg !13468
  call void @llvm.dbg.value(metadata i8* %9, metadata !13456, metadata !DIExpression()), !dbg !13470
  %10 = icmp eq i8* %9, null, !dbg !13471
  br i1 %10, label %38, label %11, !dbg !13473

; <label>:11:                                     ; preds = %8
  %12 = icmp eq i32* %1, null
  br label %13, !dbg !13474

; <label>:13:                                     ; preds = %35, %11
  %14 = phi i32 [ 1, %11 ], [ %36, %35 ]
  %15 = phi i8* [ %9, %11 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i8* %15, metadata !13456, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i32 %14, metadata !13455, metadata !DIExpression()), !dbg !13461
  %16 = load i8, i8* %15, align 1, !dbg !13475, !tbaa !2918
  switch i8 %16, label %19 [
    i8 0, label %38
    i8 98, label %35
    i8 119, label %17
    i8 87, label %18
  ], !dbg !13474

; <label>:17:                                     ; preds = %13
  store i32 1, i32* @p_ws, align 4, !dbg !13476, !tbaa !2904
  br label %35, !dbg !13479

; <label>:18:                                     ; preds = %13
  store i32 0, i32* @p_ws, align 4, !dbg !13480, !tbaa !2904
  br label %35, !dbg !13481

; <label>:19:                                     ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, metadata !13458, metadata !DIExpression()), !dbg !13482
  br i1 %12, label %32, label %20, !dbg !13483

; <label>:20:                                     ; preds = %19
  switch i8 %16, label %32 [
    i8 99, label %28
    i8 101, label %21
    i8 109, label %22
    i8 110, label %23
    i8 112, label %24
    i8 114, label %25
    i8 115, label %26
    i8 122, label %27
  ], !dbg !13484

; <label>:21:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 64, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13486

; <label>:22:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 4, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13488

; <label>:23:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 1, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13489

; <label>:24:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 32, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13490

; <label>:25:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 2, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13491

; <label>:26:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 8, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13492

; <label>:27:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i32 128, metadata !13458, metadata !DIExpression()), !dbg !13482
  br label %28, !dbg !13493

; <label>:28:                                     ; preds = %20, %27, %26, %25, %24, %23, %22, %21
  %29 = phi i32 [ 64, %21 ], [ 4, %22 ], [ 1, %23 ], [ 32, %24 ], [ 2, %25 ], [ 8, %26 ], [ 128, %27 ], [ 16, %20 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !13458, metadata !DIExpression()), !dbg !13482
  %30 = load i32, i32* %1, align 4, !dbg !13494, !tbaa !2904
  %31 = or i32 %30, %29, !dbg !13494
  store i32 %31, i32* %1, align 4, !dbg !13494, !tbaa !2904
  br label %35

; <label>:32:                                     ; preds = %19, %20
  call void @llvm.dbg.value(metadata i32 0, metadata !13458, metadata !DIExpression()), !dbg !13482
  %33 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !13496
  %34 = call i32 (i8*, ...) @semsg(i8* %33, i8* nonnull %15) #9, !dbg !13498
  call void @llvm.dbg.value(metadata i32 0, metadata !13455, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata i32 0, metadata !13455, metadata !DIExpression()), !dbg !13461
  br label %38, !dbg !13499

; <label>:35:                                     ; preds = %28, %18, %17, %13
  %36 = phi i32 [ -1, %13 ], [ %14, %17 ], [ %14, %18 ], [ %14, %28 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !13455, metadata !DIExpression()), !dbg !13461
  %37 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !13500
  call void @llvm.dbg.value(metadata i8* %37, metadata !13456, metadata !DIExpression()), !dbg !13470
  br label %13, !dbg !13474, !llvm.loop !13501

; <label>:38:                                     ; preds = %13, %32, %2, %8
  %39 = phi i32 [ 0, %8 ], [ 0, %32 ], [ 1, %2 ], [ %14, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %4) #9, !dbg !13503
  ret i32 %39, !dbg !13503
}

declare i32 @find_decl(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @searchpair_cmn(%struct.typval_T*, %struct.pos_T*) unnamed_addr #0 !dbg !13504 {
  %3 = alloca i32, align 4
  %4 = alloca [65 x i8], align 16
  %5 = alloca [65 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !13508, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata %struct.pos_T* %1, metadata !13509, metadata !DIExpression()), !dbg !13523
  %6 = load i32, i32* @p_ws, align 4, !dbg !13524, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %6, metadata !13514, metadata !DIExpression()), !dbg !13525
  %7 = bitcast i32* %3 to i8*, !dbg !13526
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9, !dbg !13526
  call void @llvm.dbg.value(metadata i32 0, metadata !13516, metadata !DIExpression()), !dbg !13527
  store i32 0, i32* %3, align 4, !dbg !13527, !tbaa !2904
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0, !dbg !13528
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %8) #9, !dbg !13528
  call void @llvm.dbg.declare(metadata [65 x i8]* %4, metadata !13517, metadata !DIExpression()), !dbg !13529
  %9 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0, !dbg !13530
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %9) #9, !dbg !13530
  call void @llvm.dbg.declare(metadata [65 x i8]* %5, metadata !13518, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13519, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata i64 0, metadata !13520, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i64 0, metadata !13521, metadata !DIExpression()), !dbg !13534
  %10 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !13535
  call void @llvm.dbg.value(metadata i8* %10, metadata !13510, metadata !DIExpression()), !dbg !13536
  %11 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !13537
  %12 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %11, i8* nonnull %8) #9, !dbg !13538
  call void @llvm.dbg.value(metadata i8* %12, metadata !13511, metadata !DIExpression()), !dbg !13539
  %13 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 2, !dbg !13540
  %14 = call i8* @tv_get_string_buf_chk(%struct.typval_T* nonnull %13, i8* nonnull %9) #9, !dbg !13541
  call void @llvm.dbg.value(metadata i8* %14, metadata !13512, metadata !DIExpression()), !dbg !13542
  %15 = icmp eq i8* %10, null, !dbg !13543
  %16 = icmp eq i8* %12, null, !dbg !13545
  %17 = or i1 %15, %16, !dbg !13546
  %18 = icmp eq i8* %14, null, !dbg !13547
  %19 = or i1 %17, %18, !dbg !13546
  br i1 %19, label %79, label %20, !dbg !13546

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 3, !dbg !13548
  call void @llvm.dbg.value(metadata i32* %3, metadata !13516, metadata !DIExpression()), !dbg !13527
  %22 = call fastcc i32 @get_search_arg(%struct.typval_T* nonnull %21, i32* nonnull %3), !dbg !13549
  call void @llvm.dbg.value(metadata i32 %22, metadata !13515, metadata !DIExpression()), !dbg !13550
  %23 = icmp eq i32 %22, 0, !dbg !13551
  br i1 %23, label %79, label %24, !dbg !13553

; <label>:24:                                     ; preds = %20
  %25 = load i32, i32* %3, align 4, !dbg !13554, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %25, metadata !13516, metadata !DIExpression()), !dbg !13527
  %26 = and i32 %25, 96, !dbg !13556
  %27 = icmp ne i32 %26, 0, !dbg !13557
  %28 = and i32 %25, 9, !dbg !13558
  %29 = icmp eq i32 %28, 9, !dbg !13558
  %30 = or i1 %27, %29, !dbg !13559
  br i1 %30, label %31, label %35, !dbg !13559

; <label>:31:                                     ; preds = %24
  %32 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !13560
  %33 = call i8* @tv_get_string(%struct.typval_T* nonnull %21) #9, !dbg !13562
  %34 = call i32 (i8*, ...) @semsg(i8* %32, i8* %33) #9, !dbg !13563
  br label %79, !dbg !13564

; <label>:35:                                     ; preds = %24
  call void @llvm.dbg.value(metadata i32 %25, metadata !13516, metadata !DIExpression()), !dbg !13527
  %36 = and i32 %25, 2, !dbg !13565
  %37 = icmp eq i32 %36, 0, !dbg !13565
  br i1 %37, label %39, label %38, !dbg !13567

; <label>:38:                                     ; preds = %35
  store i32 0, i32* @p_ws, align 4, !dbg !13568, !tbaa !2904
  br label %39, !dbg !13569

; <label>:39:                                     ; preds = %35, %38
  %40 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %21, i64 0, i32 0, !dbg !13570
  %41 = load i32, i32* %40, align 8, !dbg !13570, !tbaa !3221
  %42 = icmp eq i32 %41, 0, !dbg !13572
  br i1 %42, label %72, label %43, !dbg !13573

; <label>:43:                                     ; preds = %39
  %44 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 4, !dbg !13574
  %45 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %44, i64 0, i32 0, !dbg !13575
  %46 = load i32, i32* %45, align 8, !dbg !13575, !tbaa !3221
  %47 = icmp eq i32 %46, 0, !dbg !13576
  br i1 %47, label %72, label %48, !dbg !13577

; <label>:48:                                     ; preds = %43
  call void @llvm.dbg.value(metadata %struct.typval_T* %44, metadata !13513, metadata !DIExpression()), !dbg !13578
  %49 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 5, !dbg !13579
  %50 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %49, i64 0, i32 0, !dbg !13582
  %51 = load i32, i32* %50, align 8, !dbg !13582, !tbaa !3221
  %52 = icmp eq i32 %51, 0, !dbg !13583
  br i1 %52, label %72, label %53, !dbg !13584

; <label>:53:                                     ; preds = %48
  %54 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %49, i32* null) #9, !dbg !13585
  call void @llvm.dbg.value(metadata i64 %54, metadata !13520, metadata !DIExpression()), !dbg !13533
  %55 = icmp slt i64 %54, 0, !dbg !13587
  br i1 %55, label %56, label %60, !dbg !13589

; <label>:56:                                     ; preds = %53
  %57 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !13590
  %58 = call i8* @tv_get_string(%struct.typval_T* nonnull %49) #9, !dbg !13592
  %59 = call i32 (i8*, ...) @semsg(i8* %57, i8* %58) #9, !dbg !13593
  br label %79, !dbg !13594

; <label>:60:                                     ; preds = %53
  %61 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 6, !dbg !13595
  %62 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %61, i64 0, i32 0, !dbg !13597
  %63 = load i32, i32* %62, align 8, !dbg !13597, !tbaa !3221
  %64 = icmp eq i32 %63, 0, !dbg !13598
  br i1 %64, label %72, label %65, !dbg !13599

; <label>:65:                                     ; preds = %60
  %66 = call i64 @tv_get_number_chk(%struct.typval_T* nonnull %61, i32* null) #9, !dbg !13600
  call void @llvm.dbg.value(metadata i64 %66, metadata !13521, metadata !DIExpression()), !dbg !13534
  %67 = icmp slt i64 %66, 0, !dbg !13602
  br i1 %67, label %68, label %72, !dbg !13604

; <label>:68:                                     ; preds = %65
  %69 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg2, i64 0, i64 0), i32 5) #9, !dbg !13605
  %70 = call i8* @tv_get_string(%struct.typval_T* nonnull %61) #9, !dbg !13607
  %71 = call i32 (i8*, ...) @semsg(i8* %69, i8* %70) #9, !dbg !13608
  br label %79, !dbg !13609

; <label>:72:                                     ; preds = %39, %43, %60, %48, %65
  %73 = phi %struct.typval_T* [ %44, %65 ], [ %44, %60 ], [ %44, %48 ], [ null, %43 ], [ null, %39 ]
  %74 = phi i64 [ %54, %65 ], [ %54, %60 ], [ 0, %48 ], [ 0, %43 ], [ 0, %39 ]
  %75 = phi i64 [ %66, %65 ], [ 0, %60 ], [ 0, %48 ], [ 0, %43 ], [ 0, %39 ]
  call void @llvm.dbg.value(metadata i64 %75, metadata !13521, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.value(metadata i64 %74, metadata !13520, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata %struct.typval_T* %73, metadata !13513, metadata !DIExpression()), !dbg !13578
  %76 = load i32, i32* %3, align 4, !dbg !13610, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %76, metadata !13516, metadata !DIExpression()), !dbg !13527
  %77 = call i64 @do_searchpair(i8* nonnull %10, i8* nonnull %12, i8* nonnull %14, i32 %22, %struct.typval_T* %73, i32 %76, %struct.pos_T* %1, i64 %74, i64 %75), !dbg !13611
  %78 = trunc i64 %77 to i32, !dbg !13611
  call void @llvm.dbg.value(metadata i32 %78, metadata !13519, metadata !DIExpression()), !dbg !13532
  br label %79, !dbg !13612

; <label>:79:                                     ; preds = %20, %2, %72, %68, %56, %31
  %80 = phi i32 [ 0, %2 ], [ 0, %20 ], [ 0, %31 ], [ %78, %72 ], [ 0, %56 ], [ 0, %68 ]
  call void @llvm.dbg.value(metadata i32 %80, metadata !13519, metadata !DIExpression()), !dbg !13532
  store i32 %6, i32* @p_ws, align 4, !dbg !13613, !tbaa !2904
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %9) #9, !dbg !13614
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %8) #9, !dbg !13614
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9, !dbg !13614
  ret i32 %80, !dbg !13615
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_position(%struct.typval_T*, %struct.typval_T* nocapture, i32) unnamed_addr #0 !dbg !13616 {
  %4 = alloca %struct.pos_T, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.typval_T* %0, metadata !13618, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata %struct.typval_T* %1, metadata !13619, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i32 %2, metadata !13620, metadata !DIExpression()), !dbg !13627
  %7 = bitcast %struct.pos_T* %4 to i8*, !dbg !13628
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9, !dbg !13628
  %8 = bitcast i32* %5 to i8*, !dbg !13629
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9, !dbg !13629
  %9 = bitcast i32* %6 to i8*, !dbg !13630
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9, !dbg !13630
  call void @llvm.dbg.value(metadata i32 -1, metadata !13624, metadata !DIExpression()), !dbg !13631
  store i32 -1, i32* %6, align 4, !dbg !13631, !tbaa !2904
  %10 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %1, i64 0, i32 2, i32 0, !dbg !13632
  store i64 -1, i64* %10, align 8, !dbg !13633, !tbaa !2918
  %11 = tail call i8* @tv_get_string_chk(%struct.typval_T* %0) #9, !dbg !13634
  call void @llvm.dbg.value(metadata i8* %11, metadata !13623, metadata !DIExpression()), !dbg !13635
  %12 = icmp eq i8* %11, null, !dbg !13636
  br i1 %12, label %59, label %13, !dbg !13638

; <label>:13:                                     ; preds = %3
  %14 = getelementptr inbounds %struct.typval_T, %struct.typval_T* %0, i64 1, !dbg !13639
  call void @llvm.dbg.value(metadata %struct.pos_T* %4, metadata !13621, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.value(metadata i32* %5, metadata !13622, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata i32* %6, metadata !13624, metadata !DIExpression()), !dbg !13631
  %15 = call i32 @list2fpos(%struct.typval_T* nonnull %14, %struct.pos_T* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32 %2) #9, !dbg !13644
  %16 = icmp eq i32 %15, 1, !dbg !13645
  br i1 %16, label %17, label %59, !dbg !13646

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.pos_T, %struct.pos_T* %4, i64 0, i32 1, !dbg !13647
  %19 = load i32, i32* %18, align 8, !dbg !13647, !tbaa !4166
  %20 = icmp eq i32 %19, 2147483647, !dbg !13650
  br i1 %20, label %25, label %21, !dbg !13651

; <label>:21:                                     ; preds = %17
  %22 = add nsw i32 %19, -1, !dbg !13652
  %23 = icmp slt i32 %19, 1, !dbg !13653
  %24 = select i1 %23, i32 0, i32 %22, !dbg !13654
  store i32 %24, i32* %18, align 8
  br label %25, !dbg !13654

; <label>:25:                                     ; preds = %21, %17
  %26 = load i8, i8* %11, align 1, !dbg !13655, !tbaa !2918
  switch i8 %26, label %56 [
    i8 46, label %27
    i8 39, label %42
  ], !dbg !13657

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13658
  %29 = load i8, i8* %28, align 1, !dbg !13658, !tbaa !2918
  %30 = icmp eq i8 %29, 0, !dbg !13659
  br i1 %30, label %31, label %56, !dbg !13660

; <label>:31:                                     ; preds = %27
  %32 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !13661, !tbaa !2783
  %33 = getelementptr inbounds %struct.window_S, %struct.window_S* %32, i64 0, i32 7, !dbg !13663
  %34 = bitcast %struct.pos_T* %33 to i8*, !dbg !13664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %34, i8* nonnull %7, i64 16, i32 8, i1 false), !dbg !13664, !tbaa.struct !4052
  %35 = load i32, i32* %6, align 4, !dbg !13665, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %35, metadata !13624, metadata !DIExpression()), !dbg !13631
  %36 = icmp sgt i32 %35, -1, !dbg !13667
  br i1 %36, label %37, label %41, !dbg !13668

; <label>:37:                                     ; preds = %31
  %38 = add nsw i32 %35, -1, !dbg !13669
  %39 = getelementptr inbounds %struct.window_S, %struct.window_S* %32, i64 0, i32 8, !dbg !13671
  store i32 %38, i32* %39, align 8, !dbg !13672, !tbaa !12238
  %40 = getelementptr inbounds %struct.window_S, %struct.window_S* %32, i64 0, i32 9, !dbg !13673
  store i32 0, i32* %40, align 4, !dbg !13674, !tbaa !9869
  br label %41, !dbg !13675

; <label>:41:                                     ; preds = %37, %31
  call void @check_cursor() #9, !dbg !13676
  store i64 0, i64* %10, align 8, !dbg !13677, !tbaa !2918
  br label %59, !dbg !13678

; <label>:42:                                     ; preds = %25
  %43 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13679
  %44 = load i8, i8* %43, align 1, !dbg !13679, !tbaa !2918
  %45 = zext i8 %44 to i32, !dbg !13679
  %46 = icmp eq i8 %44, 0, !dbg !13681
  br i1 %46, label %56, label %47, !dbg !13682

; <label>:47:                                     ; preds = %42
  %48 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !13683
  %49 = load i8, i8* %48, align 1, !dbg !13683, !tbaa !2918
  %50 = icmp eq i8 %49, 0, !dbg !13684
  br i1 %50, label %51, label %56, !dbg !13685

; <label>:51:                                     ; preds = %47
  %52 = load i32, i32* %5, align 4, !dbg !13686, !tbaa !2904
  call void @llvm.dbg.value(metadata i32 %52, metadata !13622, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata %struct.pos_T* %4, metadata !13621, metadata !DIExpression()), !dbg !13642
  %53 = call i32 @setmark_pos(i32 %45, %struct.pos_T* nonnull %4, i32 %52) #9, !dbg !13689
  %54 = icmp eq i32 %53, 1, !dbg !13690
  br i1 %54, label %55, label %59, !dbg !13691

; <label>:55:                                     ; preds = %51
  store i64 0, i64* %10, align 8, !dbg !13692, !tbaa !2918
  br label %59, !dbg !13693

; <label>:56:                                     ; preds = %25, %27, %42, %47
  %57 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i32 5) #9, !dbg !13694
  %58 = call i32 @emsg(i8* %57) #9, !dbg !13695
  br label %59

; <label>:59:                                     ; preds = %3, %13, %56, %55, %51, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9, !dbg !13696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9, !dbg !13696
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9, !dbg !13696
  ret void, !dbg !13696
}

declare i32 @setmark_pos(i32, %struct.pos_T*, i32) local_unnamed_addr #3

declare i8* @dict_get_string(%struct.dictvar_S*, i8*, i32) local_unnamed_addr #3

declare i32 @utfc_ptr2char(i8*, i32*) local_unnamed_addr #3

declare void @set_last_csearch(i32, i8*, i32) local_unnamed_addr #3

declare i32 @utfc_ptr2len(i8*) local_unnamed_addr #3

declare void @set_csearch_direction(i32) local_unnamed_addr #3

declare void @set_csearch_until(i32) local_unnamed_addr #3

declare void @vim_unsetenv(i8*) local_unnamed_addr #3

declare void @vim_setenv(i8*, i8*) local_unnamed_addr #3

declare i32 @mch_setperm(i8*, i64) local_unnamed_addr #3

declare void @write_reg_contents_lst(i32, i8**, i32, i32, i32, i64) local_unnamed_addr #3

declare i64 @dict_get_bool(%struct.dictvar_S*, i8*, i32) local_unnamed_addr #3

declare void @write_reg_contents_ex(i32, i8*, i32, i32, i32, i64) local_unnamed_addr #3

declare i32 @get_yank_register(i32, i32) local_unnamed_addr #3

declare i64 @getdigits(i8**) local_unnamed_addr #3

declare i32 @set_tagstack(%struct.window_S*, %struct.dictvar_S*, i32) local_unnamed_addr #3

declare i8* @sha256_bytes(i8*, i32, i8*, i32) local_unnamed_addr #3

declare i8* @vim_strsave_shellescape(i8*, i32, i32) local_unnamed_addr #3

declare i64 @get_sw_value_col(%struct.file_buffer*, i32) local_unnamed_addr #3

declare i64 @get_sw_value(%struct.file_buffer*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @sinh(double) local_unnamed_addr #5

declare i8* @eval_soundfold(i8*) local_unnamed_addr #3

declare i8* @did_set_spelllang(%struct.window_S*) local_unnamed_addr #3

declare i32 @spell_move_to(%struct.window_S*, i32, i32, i32, i32*) local_unnamed_addr #3

declare i32 @spell_check(%struct.window_S*, i8*, i32*, i32*, i32) local_unnamed_addr #3

declare void @spell_suggest_list(%struct.growarray*, i8*, i32, i32, i32) local_unnamed_addr #3

declare %struct.listitem_S* @listitem_alloc() local_unnamed_addr #3

declare void @list_append(%struct.listvar_S*, %struct.listitem_S*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @sqrt(double) local_unnamed_addr #5

declare i32 @string2float(i8*, double*) local_unnamed_addr #3

declare i8* @tv_get_string_strict(%struct.typval_T*) local_unnamed_addr #3

declare void @vim_str2nr(i8*, i32*, i32*, i32, i64*, i64*, i32, i32) local_unnamed_addr #3

declare i32 @mb_ptr2char_adv(i8**) local_unnamed_addr #3

declare i32 @mb_cptr2char_adv(i8**) local_unnamed_addr #3

declare i32 @linetabsize_col(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #4

declare i8* @transstr(i8*) local_unnamed_addr #3

declare i32 @mb_string2cells(i8*, i32) local_unnamed_addr #3

declare i8* @reg_submatch(i32) local_unnamed_addr #3

declare %struct.listvar_S* @reg_submatch_list(i32) local_unnamed_addr #3

declare i8* @do_string_sub(i8*, i8*, i8*, %struct.typval_T*, i8*) local_unnamed_addr #3

declare void @get_b0_dict(i8*, %struct.dictvar_S*) local_unnamed_addr #3

declare i32 @syn_get_id(%struct.window_S*, i64, i32, i32, i32*, i32) local_unnamed_addr #3

declare i8* @highlight_color(i32, i8*, i32) local_unnamed_addr #3

declare i8* @highlight_has_attr(i32, i32, i32) local_unnamed_addr #3

declare i8* @get_highlight_name_ext(%struct.expand*, i32, i32) local_unnamed_addr #3

declare i32 @syn_get_final_id(i32) local_unnamed_addr #3

declare i32 @get_syntax_info(i32*) local_unnamed_addr #3

declare i32 @syn_get_sub_char() local_unnamed_addr #3

declare i32 @syn_get_stack_item(i32) local_unnamed_addr #3

declare %struct.tabpage_S* @find_tabpage(i32) local_unnamed_addr #3

declare i32 @get_tagfname(%struct.tagname_T*, i32, i8*) local_unnamed_addr #3

declare void @tagname_free(%struct.tagname_T*) local_unnamed_addr #3

declare i32 @get_tags(%struct.listvar_S*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare double @tanh(double) local_unnamed_addr #5

declare i8* @strlow_save(i8*) local_unnamed_addr #3

declare i8* @strup_save(i8*) local_unnamed_addr #3

declare void @ga_append(%struct.growarray*, i32) local_unnamed_addr #3

declare void @getvvcol(%struct.window_S*, %struct.pos_T*, i32*, i32*, i32*) local_unnamed_addr #3

declare void @cursor_pos_info(%struct.dictvar_S*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2666, !2667, !2668}
!llvm.ident = !{!2669}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "arg1_string", scope: !2, file: !3, line: 439, type: !2494, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.1-14 (tags/RELEASE_601/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !749, globals: !2471)
!3 = !DIFile(filename: "evalfunc.c", directory: "/home/sahil/vim/src")
!4 = !{!5, !23, !30, !36, !44, !49, !58, !63, !68, !75, !81, !88, !670, !684, !690, !697}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1374, size: 32, elements: !7)
!6 = !DIFile(filename: "./structs.h", directory: "/home/sahil/vim/src")
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22}
!8 = !DIEnumerator(name: "VAR_UNKNOWN", value: 0)
!9 = !DIEnumerator(name: "VAR_ANY", value: 1)
!10 = !DIEnumerator(name: "VAR_VOID", value: 2)
!11 = !DIEnumerator(name: "VAR_BOOL", value: 3)
!12 = !DIEnumerator(name: "VAR_SPECIAL", value: 4)
!13 = !DIEnumerator(name: "VAR_NUMBER", value: 5)
!14 = !DIEnumerator(name: "VAR_FLOAT", value: 6)
!15 = !DIEnumerator(name: "VAR_STRING", value: 7)
!16 = !DIEnumerator(name: "VAR_BLOB", value: 8)
!17 = !DIEnumerator(name: "VAR_FUNC", value: 9)
!18 = !DIEnumerator(name: "VAR_PARTIAL", value: 10)
!19 = !DIEnumerator(name: "VAR_LIST", value: 11)
!20 = !DIEnumerator(name: "VAR_DICT", value: 12)
!21 = !DIEnumerator(name: "VAR_JOB", value: 13)
!22 = !DIEnumerator(name: "VAR_CHANNEL", value: 14)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1585, size: 32, elements: !24)
!24 = !{!25, !26, !27, !28, !29}
!25 = !DIEnumerator(name: "UF_NOT_COMPILED", value: 0)
!26 = !DIEnumerator(name: "UF_TO_BE_COMPILED", value: 1)
!27 = !DIEnumerator(name: "UF_COMPILING", value: 2)
!28 = !DIEnumerator(name: "UF_COMPILED", value: 3)
!29 = !DIEnumerator(name: "UF_COMPILE_ERROR", value: 4)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2061, size: 32, elements: !31)
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "JOB_FAILED", value: 0)
!33 = !DIEnumerator(name: "JOB_STARTED", value: 1)
!34 = !DIEnumerator(name: "JOB_ENDED", value: 2)
!35 = !DIEnumerator(name: "JOB_FINISHED", value: 3)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2517, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43}
!38 = !DIEnumerator(name: "POPPOS_BOTLEFT", value: 0)
!39 = !DIEnumerator(name: "POPPOS_TOPLEFT", value: 1)
!40 = !DIEnumerator(name: "POPPOS_BOTRIGHT", value: 2)
!41 = !DIEnumerator(name: "POPPOS_TOPRIGHT", value: 3)
!42 = !DIEnumerator(name: "POPPOS_CENTER", value: 4)
!43 = !DIEnumerator(name: "POPPOS_NONE", value: 5)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2526, size: 32, elements: !45)
!45 = !{!46, !47, !48}
!46 = !DIEnumerator(name: "POPCLOSE_NONE", value: 0)
!47 = !DIEnumerator(name: "POPCLOSE_BUTTON", value: 1)
!48 = !DIEnumerator(name: "POPCLOSE_CLICK", value: 2)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !50, line: 55, size: 32, elements: !51)
!50 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkvisual.h", directory: "/home/sahil/vim/src")
!51 = !{!52, !53, !54, !55, !56, !57}
!52 = !DIEnumerator(name: "GDK_VISUAL_STATIC_GRAY", value: 0)
!53 = !DIEnumerator(name: "GDK_VISUAL_GRAYSCALE", value: 1)
!54 = !DIEnumerator(name: "GDK_VISUAL_STATIC_COLOR", value: 2)
!55 = !DIEnumerator(name: "GDK_VISUAL_PSEUDO_COLOR", value: 3)
!56 = !DIEnumerator(name: "GDK_VISUAL_TRUE_COLOR", value: 4)
!57 = !DIEnumerator(name: "GDK_VISUAL_DIRECT_COLOR", value: 5)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !59, line: 118, size: 32, elements: !60)
!59 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdktypes.h", directory: "/home/sahil/vim/src")
!60 = !{!61, !62}
!61 = !DIEnumerator(name: "GDK_LSB_FIRST", value: 0)
!62 = !DIEnumerator(name: "GDK_MSB_FIRST", value: 1)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !64, line: 43, size: 32, elements: !65)
!64 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkfont.h", directory: "/home/sahil/vim/src")
!65 = !{!66, !67}
!66 = !DIEnumerator(name: "GDK_FONT_FONT", value: 0)
!67 = !DIEnumerator(name: "GDK_FONT_FONTSET", value: 1)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !69, line: 52, size: 32, elements: !70)
!69 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkrc.h", directory: "/home/sahil/vim/src")
!70 = !{!71, !72, !73, !74}
!71 = !DIEnumerator(name: "GTK_RC_FG", value: 1)
!72 = !DIEnumerator(name: "GTK_RC_BG", value: 2)
!73 = !DIEnumerator(name: "GTK_RC_TEXT", value: 4)
!74 = !DIEnumerator(name: "GTK_RC_BASE", value: 8)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2140, size: 32, elements: !76)
!76 = !{!77, !78, !79, !80}
!77 = !DIEnumerator(name: "MODE_NL", value: 0)
!78 = !DIEnumerator(name: "MODE_RAW", value: 1)
!79 = !DIEnumerator(name: "MODE_JSON", value: 2)
!80 = !DIEnumerator(name: "MODE_JS", value: 3)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2148, size: 32, elements: !82)
!82 = !{!83, !84, !85, !86, !87}
!83 = !DIEnumerator(name: "JIO_PIPE", value: 0)
!84 = !DIEnumerator(name: "JIO_NULL", value: 1)
!85 = !DIEnumerator(name: "JIO_FILE", value: 2)
!86 = !DIEnumerator(name: "JIO_BUFFER", value: 3)
!87 = !DIEnumerator(name: "JIO_OUT", value: 4)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CMD_index", file: !89, line: 110, size: 32, elements: !90)
!89 = !DIFile(filename: "./ex_cmds.h", directory: "/home/sahil/vim/src")
!90 = !{!91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669}
!91 = !DIEnumerator(name: "CMD_append", value: 0)
!92 = !DIEnumerator(name: "CMD_abbreviate", value: 1)
!93 = !DIEnumerator(name: "CMD_abclear", value: 2)
!94 = !DIEnumerator(name: "CMD_aboveleft", value: 3)
!95 = !DIEnumerator(name: "CMD_all", value: 4)
!96 = !DIEnumerator(name: "CMD_amenu", value: 5)
!97 = !DIEnumerator(name: "CMD_anoremenu", value: 6)
!98 = !DIEnumerator(name: "CMD_args", value: 7)
!99 = !DIEnumerator(name: "CMD_argadd", value: 8)
!100 = !DIEnumerator(name: "CMD_argdelete", value: 9)
!101 = !DIEnumerator(name: "CMD_argdo", value: 10)
!102 = !DIEnumerator(name: "CMD_argedit", value: 11)
!103 = !DIEnumerator(name: "CMD_argglobal", value: 12)
!104 = !DIEnumerator(name: "CMD_arglocal", value: 13)
!105 = !DIEnumerator(name: "CMD_argument", value: 14)
!106 = !DIEnumerator(name: "CMD_ascii", value: 15)
!107 = !DIEnumerator(name: "CMD_autocmd", value: 16)
!108 = !DIEnumerator(name: "CMD_augroup", value: 17)
!109 = !DIEnumerator(name: "CMD_aunmenu", value: 18)
!110 = !DIEnumerator(name: "CMD_buffer", value: 19)
!111 = !DIEnumerator(name: "CMD_bNext", value: 20)
!112 = !DIEnumerator(name: "CMD_ball", value: 21)
!113 = !DIEnumerator(name: "CMD_badd", value: 22)
!114 = !DIEnumerator(name: "CMD_balt", value: 23)
!115 = !DIEnumerator(name: "CMD_bdelete", value: 24)
!116 = !DIEnumerator(name: "CMD_behave", value: 25)
!117 = !DIEnumerator(name: "CMD_belowright", value: 26)
!118 = !DIEnumerator(name: "CMD_bfirst", value: 27)
!119 = !DIEnumerator(name: "CMD_blast", value: 28)
!120 = !DIEnumerator(name: "CMD_bmodified", value: 29)
!121 = !DIEnumerator(name: "CMD_bnext", value: 30)
!122 = !DIEnumerator(name: "CMD_botright", value: 31)
!123 = !DIEnumerator(name: "CMD_bprevious", value: 32)
!124 = !DIEnumerator(name: "CMD_brewind", value: 33)
!125 = !DIEnumerator(name: "CMD_break", value: 34)
!126 = !DIEnumerator(name: "CMD_breakadd", value: 35)
!127 = !DIEnumerator(name: "CMD_breakdel", value: 36)
!128 = !DIEnumerator(name: "CMD_breaklist", value: 37)
!129 = !DIEnumerator(name: "CMD_browse", value: 38)
!130 = !DIEnumerator(name: "CMD_buffers", value: 39)
!131 = !DIEnumerator(name: "CMD_bufdo", value: 40)
!132 = !DIEnumerator(name: "CMD_bunload", value: 41)
!133 = !DIEnumerator(name: "CMD_bwipeout", value: 42)
!134 = !DIEnumerator(name: "CMD_change", value: 43)
!135 = !DIEnumerator(name: "CMD_cNext", value: 44)
!136 = !DIEnumerator(name: "CMD_cNfile", value: 45)
!137 = !DIEnumerator(name: "CMD_cabbrev", value: 46)
!138 = !DIEnumerator(name: "CMD_cabclear", value: 47)
!139 = !DIEnumerator(name: "CMD_cabove", value: 48)
!140 = !DIEnumerator(name: "CMD_caddbuffer", value: 49)
!141 = !DIEnumerator(name: "CMD_caddexpr", value: 50)
!142 = !DIEnumerator(name: "CMD_caddfile", value: 51)
!143 = !DIEnumerator(name: "CMD_cafter", value: 52)
!144 = !DIEnumerator(name: "CMD_call", value: 53)
!145 = !DIEnumerator(name: "CMD_catch", value: 54)
!146 = !DIEnumerator(name: "CMD_cbuffer", value: 55)
!147 = !DIEnumerator(name: "CMD_cbefore", value: 56)
!148 = !DIEnumerator(name: "CMD_cbelow", value: 57)
!149 = !DIEnumerator(name: "CMD_cbottom", value: 58)
!150 = !DIEnumerator(name: "CMD_cc", value: 59)
!151 = !DIEnumerator(name: "CMD_cclose", value: 60)
!152 = !DIEnumerator(name: "CMD_cd", value: 61)
!153 = !DIEnumerator(name: "CMD_cdo", value: 62)
!154 = !DIEnumerator(name: "CMD_center", value: 63)
!155 = !DIEnumerator(name: "CMD_cexpr", value: 64)
!156 = !DIEnumerator(name: "CMD_cfile", value: 65)
!157 = !DIEnumerator(name: "CMD_cfdo", value: 66)
!158 = !DIEnumerator(name: "CMD_cfirst", value: 67)
!159 = !DIEnumerator(name: "CMD_cgetfile", value: 68)
!160 = !DIEnumerator(name: "CMD_cgetbuffer", value: 69)
!161 = !DIEnumerator(name: "CMD_cgetexpr", value: 70)
!162 = !DIEnumerator(name: "CMD_chdir", value: 71)
!163 = !DIEnumerator(name: "CMD_changes", value: 72)
!164 = !DIEnumerator(name: "CMD_checkpath", value: 73)
!165 = !DIEnumerator(name: "CMD_checktime", value: 74)
!166 = !DIEnumerator(name: "CMD_chistory", value: 75)
!167 = !DIEnumerator(name: "CMD_clist", value: 76)
!168 = !DIEnumerator(name: "CMD_clast", value: 77)
!169 = !DIEnumerator(name: "CMD_close", value: 78)
!170 = !DIEnumerator(name: "CMD_clearjumps", value: 79)
!171 = !DIEnumerator(name: "CMD_cmap", value: 80)
!172 = !DIEnumerator(name: "CMD_cmapclear", value: 81)
!173 = !DIEnumerator(name: "CMD_cmenu", value: 82)
!174 = !DIEnumerator(name: "CMD_cnext", value: 83)
!175 = !DIEnumerator(name: "CMD_cnewer", value: 84)
!176 = !DIEnumerator(name: "CMD_cnfile", value: 85)
!177 = !DIEnumerator(name: "CMD_cnoremap", value: 86)
!178 = !DIEnumerator(name: "CMD_cnoreabbrev", value: 87)
!179 = !DIEnumerator(name: "CMD_cnoremenu", value: 88)
!180 = !DIEnumerator(name: "CMD_copy", value: 89)
!181 = !DIEnumerator(name: "CMD_colder", value: 90)
!182 = !DIEnumerator(name: "CMD_colorscheme", value: 91)
!183 = !DIEnumerator(name: "CMD_command", value: 92)
!184 = !DIEnumerator(name: "CMD_comclear", value: 93)
!185 = !DIEnumerator(name: "CMD_compiler", value: 94)
!186 = !DIEnumerator(name: "CMD_continue", value: 95)
!187 = !DIEnumerator(name: "CMD_confirm", value: 96)
!188 = !DIEnumerator(name: "CMD_const", value: 97)
!189 = !DIEnumerator(name: "CMD_copen", value: 98)
!190 = !DIEnumerator(name: "CMD_cprevious", value: 99)
!191 = !DIEnumerator(name: "CMD_cpfile", value: 100)
!192 = !DIEnumerator(name: "CMD_cquit", value: 101)
!193 = !DIEnumerator(name: "CMD_crewind", value: 102)
!194 = !DIEnumerator(name: "CMD_cscope", value: 103)
!195 = !DIEnumerator(name: "CMD_cstag", value: 104)
!196 = !DIEnumerator(name: "CMD_cunmap", value: 105)
!197 = !DIEnumerator(name: "CMD_cunabbrev", value: 106)
!198 = !DIEnumerator(name: "CMD_cunmenu", value: 107)
!199 = !DIEnumerator(name: "CMD_cwindow", value: 108)
!200 = !DIEnumerator(name: "CMD_delete", value: 109)
!201 = !DIEnumerator(name: "CMD_delmarks", value: 110)
!202 = !DIEnumerator(name: "CMD_debug", value: 111)
!203 = !DIEnumerator(name: "CMD_debuggreedy", value: 112)
!204 = !DIEnumerator(name: "CMD_def", value: 113)
!205 = !DIEnumerator(name: "CMD_defcompile", value: 114)
!206 = !DIEnumerator(name: "CMD_delcommand", value: 115)
!207 = !DIEnumerator(name: "CMD_delfunction", value: 116)
!208 = !DIEnumerator(name: "CMD_display", value: 117)
!209 = !DIEnumerator(name: "CMD_diffupdate", value: 118)
!210 = !DIEnumerator(name: "CMD_diffget", value: 119)
!211 = !DIEnumerator(name: "CMD_diffoff", value: 120)
!212 = !DIEnumerator(name: "CMD_diffpatch", value: 121)
!213 = !DIEnumerator(name: "CMD_diffput", value: 122)
!214 = !DIEnumerator(name: "CMD_diffsplit", value: 123)
!215 = !DIEnumerator(name: "CMD_diffthis", value: 124)
!216 = !DIEnumerator(name: "CMD_digraphs", value: 125)
!217 = !DIEnumerator(name: "CMD_disassemble", value: 126)
!218 = !DIEnumerator(name: "CMD_djump", value: 127)
!219 = !DIEnumerator(name: "CMD_dlist", value: 128)
!220 = !DIEnumerator(name: "CMD_doautocmd", value: 129)
!221 = !DIEnumerator(name: "CMD_doautoall", value: 130)
!222 = !DIEnumerator(name: "CMD_drop", value: 131)
!223 = !DIEnumerator(name: "CMD_dsearch", value: 132)
!224 = !DIEnumerator(name: "CMD_dsplit", value: 133)
!225 = !DIEnumerator(name: "CMD_edit", value: 134)
!226 = !DIEnumerator(name: "CMD_earlier", value: 135)
!227 = !DIEnumerator(name: "CMD_echo", value: 136)
!228 = !DIEnumerator(name: "CMD_echoerr", value: 137)
!229 = !DIEnumerator(name: "CMD_echohl", value: 138)
!230 = !DIEnumerator(name: "CMD_echomsg", value: 139)
!231 = !DIEnumerator(name: "CMD_echoconsole", value: 140)
!232 = !DIEnumerator(name: "CMD_echon", value: 141)
!233 = !DIEnumerator(name: "CMD_else", value: 142)
!234 = !DIEnumerator(name: "CMD_elseif", value: 143)
!235 = !DIEnumerator(name: "CMD_emenu", value: 144)
!236 = !DIEnumerator(name: "CMD_endif", value: 145)
!237 = !DIEnumerator(name: "CMD_enddef", value: 146)
!238 = !DIEnumerator(name: "CMD_endfunction", value: 147)
!239 = !DIEnumerator(name: "CMD_endfor", value: 148)
!240 = !DIEnumerator(name: "CMD_endtry", value: 149)
!241 = !DIEnumerator(name: "CMD_endwhile", value: 150)
!242 = !DIEnumerator(name: "CMD_enew", value: 151)
!243 = !DIEnumerator(name: "CMD_eval", value: 152)
!244 = !DIEnumerator(name: "CMD_ex", value: 153)
!245 = !DIEnumerator(name: "CMD_execute", value: 154)
!246 = !DIEnumerator(name: "CMD_exit", value: 155)
!247 = !DIEnumerator(name: "CMD_export", value: 156)
!248 = !DIEnumerator(name: "CMD_exusage", value: 157)
!249 = !DIEnumerator(name: "CMD_file", value: 158)
!250 = !DIEnumerator(name: "CMD_files", value: 159)
!251 = !DIEnumerator(name: "CMD_filetype", value: 160)
!252 = !DIEnumerator(name: "CMD_filter", value: 161)
!253 = !DIEnumerator(name: "CMD_find", value: 162)
!254 = !DIEnumerator(name: "CMD_final", value: 163)
!255 = !DIEnumerator(name: "CMD_finally", value: 164)
!256 = !DIEnumerator(name: "CMD_finish", value: 165)
!257 = !DIEnumerator(name: "CMD_first", value: 166)
!258 = !DIEnumerator(name: "CMD_fixdel", value: 167)
!259 = !DIEnumerator(name: "CMD_fold", value: 168)
!260 = !DIEnumerator(name: "CMD_foldclose", value: 169)
!261 = !DIEnumerator(name: "CMD_folddoopen", value: 170)
!262 = !DIEnumerator(name: "CMD_folddoclosed", value: 171)
!263 = !DIEnumerator(name: "CMD_foldopen", value: 172)
!264 = !DIEnumerator(name: "CMD_for", value: 173)
!265 = !DIEnumerator(name: "CMD_function", value: 174)
!266 = !DIEnumerator(name: "CMD_global", value: 175)
!267 = !DIEnumerator(name: "CMD_goto", value: 176)
!268 = !DIEnumerator(name: "CMD_grep", value: 177)
!269 = !DIEnumerator(name: "CMD_grepadd", value: 178)
!270 = !DIEnumerator(name: "CMD_gui", value: 179)
!271 = !DIEnumerator(name: "CMD_gvim", value: 180)
!272 = !DIEnumerator(name: "CMD_help", value: 181)
!273 = !DIEnumerator(name: "CMD_helpclose", value: 182)
!274 = !DIEnumerator(name: "CMD_helpfind", value: 183)
!275 = !DIEnumerator(name: "CMD_helpgrep", value: 184)
!276 = !DIEnumerator(name: "CMD_helptags", value: 185)
!277 = !DIEnumerator(name: "CMD_hardcopy", value: 186)
!278 = !DIEnumerator(name: "CMD_highlight", value: 187)
!279 = !DIEnumerator(name: "CMD_hide", value: 188)
!280 = !DIEnumerator(name: "CMD_history", value: 189)
!281 = !DIEnumerator(name: "CMD_insert", value: 190)
!282 = !DIEnumerator(name: "CMD_iabbrev", value: 191)
!283 = !DIEnumerator(name: "CMD_iabclear", value: 192)
!284 = !DIEnumerator(name: "CMD_if", value: 193)
!285 = !DIEnumerator(name: "CMD_ijump", value: 194)
!286 = !DIEnumerator(name: "CMD_ilist", value: 195)
!287 = !DIEnumerator(name: "CMD_imap", value: 196)
!288 = !DIEnumerator(name: "CMD_imapclear", value: 197)
!289 = !DIEnumerator(name: "CMD_imenu", value: 198)
!290 = !DIEnumerator(name: "CMD_import", value: 199)
!291 = !DIEnumerator(name: "CMD_inoremap", value: 200)
!292 = !DIEnumerator(name: "CMD_inoreabbrev", value: 201)
!293 = !DIEnumerator(name: "CMD_inoremenu", value: 202)
!294 = !DIEnumerator(name: "CMD_intro", value: 203)
!295 = !DIEnumerator(name: "CMD_isearch", value: 204)
!296 = !DIEnumerator(name: "CMD_isplit", value: 205)
!297 = !DIEnumerator(name: "CMD_iunmap", value: 206)
!298 = !DIEnumerator(name: "CMD_iunabbrev", value: 207)
!299 = !DIEnumerator(name: "CMD_iunmenu", value: 208)
!300 = !DIEnumerator(name: "CMD_join", value: 209)
!301 = !DIEnumerator(name: "CMD_jumps", value: 210)
!302 = !DIEnumerator(name: "CMD_k", value: 211)
!303 = !DIEnumerator(name: "CMD_keepmarks", value: 212)
!304 = !DIEnumerator(name: "CMD_keepjumps", value: 213)
!305 = !DIEnumerator(name: "CMD_keeppatterns", value: 214)
!306 = !DIEnumerator(name: "CMD_keepalt", value: 215)
!307 = !DIEnumerator(name: "CMD_list", value: 216)
!308 = !DIEnumerator(name: "CMD_lNext", value: 217)
!309 = !DIEnumerator(name: "CMD_lNfile", value: 218)
!310 = !DIEnumerator(name: "CMD_last", value: 219)
!311 = !DIEnumerator(name: "CMD_labove", value: 220)
!312 = !DIEnumerator(name: "CMD_language", value: 221)
!313 = !DIEnumerator(name: "CMD_laddexpr", value: 222)
!314 = !DIEnumerator(name: "CMD_laddbuffer", value: 223)
!315 = !DIEnumerator(name: "CMD_laddfile", value: 224)
!316 = !DIEnumerator(name: "CMD_lafter", value: 225)
!317 = !DIEnumerator(name: "CMD_later", value: 226)
!318 = !DIEnumerator(name: "CMD_lbuffer", value: 227)
!319 = !DIEnumerator(name: "CMD_lbefore", value: 228)
!320 = !DIEnumerator(name: "CMD_lbelow", value: 229)
!321 = !DIEnumerator(name: "CMD_lbottom", value: 230)
!322 = !DIEnumerator(name: "CMD_lcd", value: 231)
!323 = !DIEnumerator(name: "CMD_lchdir", value: 232)
!324 = !DIEnumerator(name: "CMD_lclose", value: 233)
!325 = !DIEnumerator(name: "CMD_lcscope", value: 234)
!326 = !DIEnumerator(name: "CMD_ldo", value: 235)
!327 = !DIEnumerator(name: "CMD_left", value: 236)
!328 = !DIEnumerator(name: "CMD_leftabove", value: 237)
!329 = !DIEnumerator(name: "CMD_let", value: 238)
!330 = !DIEnumerator(name: "CMD_lexpr", value: 239)
!331 = !DIEnumerator(name: "CMD_lfile", value: 240)
!332 = !DIEnumerator(name: "CMD_lfdo", value: 241)
!333 = !DIEnumerator(name: "CMD_lfirst", value: 242)
!334 = !DIEnumerator(name: "CMD_lgetfile", value: 243)
!335 = !DIEnumerator(name: "CMD_lgetbuffer", value: 244)
!336 = !DIEnumerator(name: "CMD_lgetexpr", value: 245)
!337 = !DIEnumerator(name: "CMD_lgrep", value: 246)
!338 = !DIEnumerator(name: "CMD_lgrepadd", value: 247)
!339 = !DIEnumerator(name: "CMD_lhelpgrep", value: 248)
!340 = !DIEnumerator(name: "CMD_lhistory", value: 249)
!341 = !DIEnumerator(name: "CMD_ll", value: 250)
!342 = !DIEnumerator(name: "CMD_llast", value: 251)
!343 = !DIEnumerator(name: "CMD_llist", value: 252)
!344 = !DIEnumerator(name: "CMD_lmap", value: 253)
!345 = !DIEnumerator(name: "CMD_lmapclear", value: 254)
!346 = !DIEnumerator(name: "CMD_lmake", value: 255)
!347 = !DIEnumerator(name: "CMD_lnoremap", value: 256)
!348 = !DIEnumerator(name: "CMD_lnext", value: 257)
!349 = !DIEnumerator(name: "CMD_lnewer", value: 258)
!350 = !DIEnumerator(name: "CMD_lnfile", value: 259)
!351 = !DIEnumerator(name: "CMD_loadview", value: 260)
!352 = !DIEnumerator(name: "CMD_loadkeymap", value: 261)
!353 = !DIEnumerator(name: "CMD_lockmarks", value: 262)
!354 = !DIEnumerator(name: "CMD_lockvar", value: 263)
!355 = !DIEnumerator(name: "CMD_lolder", value: 264)
!356 = !DIEnumerator(name: "CMD_lopen", value: 265)
!357 = !DIEnumerator(name: "CMD_lprevious", value: 266)
!358 = !DIEnumerator(name: "CMD_lpfile", value: 267)
!359 = !DIEnumerator(name: "CMD_lrewind", value: 268)
!360 = !DIEnumerator(name: "CMD_ltag", value: 269)
!361 = !DIEnumerator(name: "CMD_lunmap", value: 270)
!362 = !DIEnumerator(name: "CMD_lua", value: 271)
!363 = !DIEnumerator(name: "CMD_luado", value: 272)
!364 = !DIEnumerator(name: "CMD_luafile", value: 273)
!365 = !DIEnumerator(name: "CMD_lvimgrep", value: 274)
!366 = !DIEnumerator(name: "CMD_lvimgrepadd", value: 275)
!367 = !DIEnumerator(name: "CMD_lwindow", value: 276)
!368 = !DIEnumerator(name: "CMD_ls", value: 277)
!369 = !DIEnumerator(name: "CMD_move", value: 278)
!370 = !DIEnumerator(name: "CMD_mark", value: 279)
!371 = !DIEnumerator(name: "CMD_make", value: 280)
!372 = !DIEnumerator(name: "CMD_map", value: 281)
!373 = !DIEnumerator(name: "CMD_mapclear", value: 282)
!374 = !DIEnumerator(name: "CMD_marks", value: 283)
!375 = !DIEnumerator(name: "CMD_match", value: 284)
!376 = !DIEnumerator(name: "CMD_menu", value: 285)
!377 = !DIEnumerator(name: "CMD_menutranslate", value: 286)
!378 = !DIEnumerator(name: "CMD_messages", value: 287)
!379 = !DIEnumerator(name: "CMD_mkexrc", value: 288)
!380 = !DIEnumerator(name: "CMD_mksession", value: 289)
!381 = !DIEnumerator(name: "CMD_mkspell", value: 290)
!382 = !DIEnumerator(name: "CMD_mkvimrc", value: 291)
!383 = !DIEnumerator(name: "CMD_mkview", value: 292)
!384 = !DIEnumerator(name: "CMD_mode", value: 293)
!385 = !DIEnumerator(name: "CMD_mzscheme", value: 294)
!386 = !DIEnumerator(name: "CMD_mzfile", value: 295)
!387 = !DIEnumerator(name: "CMD_next", value: 296)
!388 = !DIEnumerator(name: "CMD_nbkey", value: 297)
!389 = !DIEnumerator(name: "CMD_nbclose", value: 298)
!390 = !DIEnumerator(name: "CMD_nbstart", value: 299)
!391 = !DIEnumerator(name: "CMD_new", value: 300)
!392 = !DIEnumerator(name: "CMD_nmap", value: 301)
!393 = !DIEnumerator(name: "CMD_nmapclear", value: 302)
!394 = !DIEnumerator(name: "CMD_nmenu", value: 303)
!395 = !DIEnumerator(name: "CMD_nnoremap", value: 304)
!396 = !DIEnumerator(name: "CMD_nnoremenu", value: 305)
!397 = !DIEnumerator(name: "CMD_noremap", value: 306)
!398 = !DIEnumerator(name: "CMD_noautocmd", value: 307)
!399 = !DIEnumerator(name: "CMD_nohlsearch", value: 308)
!400 = !DIEnumerator(name: "CMD_noreabbrev", value: 309)
!401 = !DIEnumerator(name: "CMD_noremenu", value: 310)
!402 = !DIEnumerator(name: "CMD_noswapfile", value: 311)
!403 = !DIEnumerator(name: "CMD_normal", value: 312)
!404 = !DIEnumerator(name: "CMD_number", value: 313)
!405 = !DIEnumerator(name: "CMD_nunmap", value: 314)
!406 = !DIEnumerator(name: "CMD_nunmenu", value: 315)
!407 = !DIEnumerator(name: "CMD_open", value: 316)
!408 = !DIEnumerator(name: "CMD_oldfiles", value: 317)
!409 = !DIEnumerator(name: "CMD_omap", value: 318)
!410 = !DIEnumerator(name: "CMD_omapclear", value: 319)
!411 = !DIEnumerator(name: "CMD_omenu", value: 320)
!412 = !DIEnumerator(name: "CMD_only", value: 321)
!413 = !DIEnumerator(name: "CMD_onoremap", value: 322)
!414 = !DIEnumerator(name: "CMD_onoremenu", value: 323)
!415 = !DIEnumerator(name: "CMD_options", value: 324)
!416 = !DIEnumerator(name: "CMD_ounmap", value: 325)
!417 = !DIEnumerator(name: "CMD_ounmenu", value: 326)
!418 = !DIEnumerator(name: "CMD_ownsyntax", value: 327)
!419 = !DIEnumerator(name: "CMD_print", value: 328)
!420 = !DIEnumerator(name: "CMD_packadd", value: 329)
!421 = !DIEnumerator(name: "CMD_packloadall", value: 330)
!422 = !DIEnumerator(name: "CMD_pclose", value: 331)
!423 = !DIEnumerator(name: "CMD_perl", value: 332)
!424 = !DIEnumerator(name: "CMD_perldo", value: 333)
!425 = !DIEnumerator(name: "CMD_pedit", value: 334)
!426 = !DIEnumerator(name: "CMD_pop", value: 335)
!427 = !DIEnumerator(name: "CMD_popup", value: 336)
!428 = !DIEnumerator(name: "CMD_ppop", value: 337)
!429 = !DIEnumerator(name: "CMD_preserve", value: 338)
!430 = !DIEnumerator(name: "CMD_previous", value: 339)
!431 = !DIEnumerator(name: "CMD_promptfind", value: 340)
!432 = !DIEnumerator(name: "CMD_promptrepl", value: 341)
!433 = !DIEnumerator(name: "CMD_profile", value: 342)
!434 = !DIEnumerator(name: "CMD_profdel", value: 343)
!435 = !DIEnumerator(name: "CMD_psearch", value: 344)
!436 = !DIEnumerator(name: "CMD_ptag", value: 345)
!437 = !DIEnumerator(name: "CMD_ptNext", value: 346)
!438 = !DIEnumerator(name: "CMD_ptfirst", value: 347)
!439 = !DIEnumerator(name: "CMD_ptjump", value: 348)
!440 = !DIEnumerator(name: "CMD_ptlast", value: 349)
!441 = !DIEnumerator(name: "CMD_ptnext", value: 350)
!442 = !DIEnumerator(name: "CMD_ptprevious", value: 351)
!443 = !DIEnumerator(name: "CMD_ptrewind", value: 352)
!444 = !DIEnumerator(name: "CMD_ptselect", value: 353)
!445 = !DIEnumerator(name: "CMD_put", value: 354)
!446 = !DIEnumerator(name: "CMD_pwd", value: 355)
!447 = !DIEnumerator(name: "CMD_python", value: 356)
!448 = !DIEnumerator(name: "CMD_pydo", value: 357)
!449 = !DIEnumerator(name: "CMD_pyfile", value: 358)
!450 = !DIEnumerator(name: "CMD_py3", value: 359)
!451 = !DIEnumerator(name: "CMD_py3do", value: 360)
!452 = !DIEnumerator(name: "CMD_python3", value: 361)
!453 = !DIEnumerator(name: "CMD_py3file", value: 362)
!454 = !DIEnumerator(name: "CMD_pyx", value: 363)
!455 = !DIEnumerator(name: "CMD_pyxdo", value: 364)
!456 = !DIEnumerator(name: "CMD_pythonx", value: 365)
!457 = !DIEnumerator(name: "CMD_pyxfile", value: 366)
!458 = !DIEnumerator(name: "CMD_quit", value: 367)
!459 = !DIEnumerator(name: "CMD_quitall", value: 368)
!460 = !DIEnumerator(name: "CMD_qall", value: 369)
!461 = !DIEnumerator(name: "CMD_read", value: 370)
!462 = !DIEnumerator(name: "CMD_recover", value: 371)
!463 = !DIEnumerator(name: "CMD_redo", value: 372)
!464 = !DIEnumerator(name: "CMD_redir", value: 373)
!465 = !DIEnumerator(name: "CMD_redraw", value: 374)
!466 = !DIEnumerator(name: "CMD_redrawstatus", value: 375)
!467 = !DIEnumerator(name: "CMD_redrawtabline", value: 376)
!468 = !DIEnumerator(name: "CMD_registers", value: 377)
!469 = !DIEnumerator(name: "CMD_resize", value: 378)
!470 = !DIEnumerator(name: "CMD_retab", value: 379)
!471 = !DIEnumerator(name: "CMD_return", value: 380)
!472 = !DIEnumerator(name: "CMD_rewind", value: 381)
!473 = !DIEnumerator(name: "CMD_right", value: 382)
!474 = !DIEnumerator(name: "CMD_rightbelow", value: 383)
!475 = !DIEnumerator(name: "CMD_runtime", value: 384)
!476 = !DIEnumerator(name: "CMD_ruby", value: 385)
!477 = !DIEnumerator(name: "CMD_rubydo", value: 386)
!478 = !DIEnumerator(name: "CMD_rubyfile", value: 387)
!479 = !DIEnumerator(name: "CMD_rundo", value: 388)
!480 = !DIEnumerator(name: "CMD_rviminfo", value: 389)
!481 = !DIEnumerator(name: "CMD_substitute", value: 390)
!482 = !DIEnumerator(name: "CMD_sNext", value: 391)
!483 = !DIEnumerator(name: "CMD_sargument", value: 392)
!484 = !DIEnumerator(name: "CMD_sall", value: 393)
!485 = !DIEnumerator(name: "CMD_sandbox", value: 394)
!486 = !DIEnumerator(name: "CMD_saveas", value: 395)
!487 = !DIEnumerator(name: "CMD_sbuffer", value: 396)
!488 = !DIEnumerator(name: "CMD_sbNext", value: 397)
!489 = !DIEnumerator(name: "CMD_sball", value: 398)
!490 = !DIEnumerator(name: "CMD_sbfirst", value: 399)
!491 = !DIEnumerator(name: "CMD_sblast", value: 400)
!492 = !DIEnumerator(name: "CMD_sbmodified", value: 401)
!493 = !DIEnumerator(name: "CMD_sbnext", value: 402)
!494 = !DIEnumerator(name: "CMD_sbprevious", value: 403)
!495 = !DIEnumerator(name: "CMD_sbrewind", value: 404)
!496 = !DIEnumerator(name: "CMD_scriptnames", value: 405)
!497 = !DIEnumerator(name: "CMD_scriptencoding", value: 406)
!498 = !DIEnumerator(name: "CMD_scriptversion", value: 407)
!499 = !DIEnumerator(name: "CMD_scscope", value: 408)
!500 = !DIEnumerator(name: "CMD_set", value: 409)
!501 = !DIEnumerator(name: "CMD_setfiletype", value: 410)
!502 = !DIEnumerator(name: "CMD_setglobal", value: 411)
!503 = !DIEnumerator(name: "CMD_setlocal", value: 412)
!504 = !DIEnumerator(name: "CMD_sfind", value: 413)
!505 = !DIEnumerator(name: "CMD_sfirst", value: 414)
!506 = !DIEnumerator(name: "CMD_shell", value: 415)
!507 = !DIEnumerator(name: "CMD_simalt", value: 416)
!508 = !DIEnumerator(name: "CMD_sign", value: 417)
!509 = !DIEnumerator(name: "CMD_silent", value: 418)
!510 = !DIEnumerator(name: "CMD_sleep", value: 419)
!511 = !DIEnumerator(name: "CMD_slast", value: 420)
!512 = !DIEnumerator(name: "CMD_smagic", value: 421)
!513 = !DIEnumerator(name: "CMD_smap", value: 422)
!514 = !DIEnumerator(name: "CMD_smapclear", value: 423)
!515 = !DIEnumerator(name: "CMD_smenu", value: 424)
!516 = !DIEnumerator(name: "CMD_snext", value: 425)
!517 = !DIEnumerator(name: "CMD_snomagic", value: 426)
!518 = !DIEnumerator(name: "CMD_snoremap", value: 427)
!519 = !DIEnumerator(name: "CMD_snoremenu", value: 428)
!520 = !DIEnumerator(name: "CMD_source", value: 429)
!521 = !DIEnumerator(name: "CMD_sort", value: 430)
!522 = !DIEnumerator(name: "CMD_split", value: 431)
!523 = !DIEnumerator(name: "CMD_spellgood", value: 432)
!524 = !DIEnumerator(name: "CMD_spelldump", value: 433)
!525 = !DIEnumerator(name: "CMD_spellinfo", value: 434)
!526 = !DIEnumerator(name: "CMD_spellrepall", value: 435)
!527 = !DIEnumerator(name: "CMD_spellrare", value: 436)
!528 = !DIEnumerator(name: "CMD_spellundo", value: 437)
!529 = !DIEnumerator(name: "CMD_spellwrong", value: 438)
!530 = !DIEnumerator(name: "CMD_sprevious", value: 439)
!531 = !DIEnumerator(name: "CMD_srewind", value: 440)
!532 = !DIEnumerator(name: "CMD_stop", value: 441)
!533 = !DIEnumerator(name: "CMD_stag", value: 442)
!534 = !DIEnumerator(name: "CMD_startinsert", value: 443)
!535 = !DIEnumerator(name: "CMD_startgreplace", value: 444)
!536 = !DIEnumerator(name: "CMD_startreplace", value: 445)
!537 = !DIEnumerator(name: "CMD_stopinsert", value: 446)
!538 = !DIEnumerator(name: "CMD_stjump", value: 447)
!539 = !DIEnumerator(name: "CMD_stselect", value: 448)
!540 = !DIEnumerator(name: "CMD_sunhide", value: 449)
!541 = !DIEnumerator(name: "CMD_sunmap", value: 450)
!542 = !DIEnumerator(name: "CMD_sunmenu", value: 451)
!543 = !DIEnumerator(name: "CMD_suspend", value: 452)
!544 = !DIEnumerator(name: "CMD_sview", value: 453)
!545 = !DIEnumerator(name: "CMD_swapname", value: 454)
!546 = !DIEnumerator(name: "CMD_syntax", value: 455)
!547 = !DIEnumerator(name: "CMD_syntime", value: 456)
!548 = !DIEnumerator(name: "CMD_syncbind", value: 457)
!549 = !DIEnumerator(name: "CMD_smile", value: 458)
!550 = !DIEnumerator(name: "CMD_t", value: 459)
!551 = !DIEnumerator(name: "CMD_tNext", value: 460)
!552 = !DIEnumerator(name: "CMD_tag", value: 461)
!553 = !DIEnumerator(name: "CMD_tags", value: 462)
!554 = !DIEnumerator(name: "CMD_tab", value: 463)
!555 = !DIEnumerator(name: "CMD_tabclose", value: 464)
!556 = !DIEnumerator(name: "CMD_tabdo", value: 465)
!557 = !DIEnumerator(name: "CMD_tabedit", value: 466)
!558 = !DIEnumerator(name: "CMD_tabfind", value: 467)
!559 = !DIEnumerator(name: "CMD_tabfirst", value: 468)
!560 = !DIEnumerator(name: "CMD_tabmove", value: 469)
!561 = !DIEnumerator(name: "CMD_tablast", value: 470)
!562 = !DIEnumerator(name: "CMD_tabnext", value: 471)
!563 = !DIEnumerator(name: "CMD_tabnew", value: 472)
!564 = !DIEnumerator(name: "CMD_tabonly", value: 473)
!565 = !DIEnumerator(name: "CMD_tabprevious", value: 474)
!566 = !DIEnumerator(name: "CMD_tabNext", value: 475)
!567 = !DIEnumerator(name: "CMD_tabrewind", value: 476)
!568 = !DIEnumerator(name: "CMD_tabs", value: 477)
!569 = !DIEnumerator(name: "CMD_tcd", value: 478)
!570 = !DIEnumerator(name: "CMD_tchdir", value: 479)
!571 = !DIEnumerator(name: "CMD_tcl", value: 480)
!572 = !DIEnumerator(name: "CMD_tcldo", value: 481)
!573 = !DIEnumerator(name: "CMD_tclfile", value: 482)
!574 = !DIEnumerator(name: "CMD_tearoff", value: 483)
!575 = !DIEnumerator(name: "CMD_terminal", value: 484)
!576 = !DIEnumerator(name: "CMD_tfirst", value: 485)
!577 = !DIEnumerator(name: "CMD_throw", value: 486)
!578 = !DIEnumerator(name: "CMD_tjump", value: 487)
!579 = !DIEnumerator(name: "CMD_tlast", value: 488)
!580 = !DIEnumerator(name: "CMD_tlmenu", value: 489)
!581 = !DIEnumerator(name: "CMD_tlnoremenu", value: 490)
!582 = !DIEnumerator(name: "CMD_tlunmenu", value: 491)
!583 = !DIEnumerator(name: "CMD_tmenu", value: 492)
!584 = !DIEnumerator(name: "CMD_tmap", value: 493)
!585 = !DIEnumerator(name: "CMD_tmapclear", value: 494)
!586 = !DIEnumerator(name: "CMD_tnext", value: 495)
!587 = !DIEnumerator(name: "CMD_tnoremap", value: 496)
!588 = !DIEnumerator(name: "CMD_topleft", value: 497)
!589 = !DIEnumerator(name: "CMD_tprevious", value: 498)
!590 = !DIEnumerator(name: "CMD_trewind", value: 499)
!591 = !DIEnumerator(name: "CMD_try", value: 500)
!592 = !DIEnumerator(name: "CMD_tselect", value: 501)
!593 = !DIEnumerator(name: "CMD_tunmenu", value: 502)
!594 = !DIEnumerator(name: "CMD_tunmap", value: 503)
!595 = !DIEnumerator(name: "CMD_undo", value: 504)
!596 = !DIEnumerator(name: "CMD_undojoin", value: 505)
!597 = !DIEnumerator(name: "CMD_undolist", value: 506)
!598 = !DIEnumerator(name: "CMD_unabbreviate", value: 507)
!599 = !DIEnumerator(name: "CMD_unhide", value: 508)
!600 = !DIEnumerator(name: "CMD_unlet", value: 509)
!601 = !DIEnumerator(name: "CMD_unlockvar", value: 510)
!602 = !DIEnumerator(name: "CMD_unmap", value: 511)
!603 = !DIEnumerator(name: "CMD_unmenu", value: 512)
!604 = !DIEnumerator(name: "CMD_unsilent", value: 513)
!605 = !DIEnumerator(name: "CMD_update", value: 514)
!606 = !DIEnumerator(name: "CMD_vglobal", value: 515)
!607 = !DIEnumerator(name: "CMD_var", value: 516)
!608 = !DIEnumerator(name: "CMD_version", value: 517)
!609 = !DIEnumerator(name: "CMD_verbose", value: 518)
!610 = !DIEnumerator(name: "CMD_vertical", value: 519)
!611 = !DIEnumerator(name: "CMD_visual", value: 520)
!612 = !DIEnumerator(name: "CMD_view", value: 521)
!613 = !DIEnumerator(name: "CMD_vimgrep", value: 522)
!614 = !DIEnumerator(name: "CMD_vimgrepadd", value: 523)
!615 = !DIEnumerator(name: "CMD_vim9cmd", value: 524)
!616 = !DIEnumerator(name: "CMD_vim9script", value: 525)
!617 = !DIEnumerator(name: "CMD_viusage", value: 526)
!618 = !DIEnumerator(name: "CMD_vmap", value: 527)
!619 = !DIEnumerator(name: "CMD_vmapclear", value: 528)
!620 = !DIEnumerator(name: "CMD_vmenu", value: 529)
!621 = !DIEnumerator(name: "CMD_vnoremap", value: 530)
!622 = !DIEnumerator(name: "CMD_vnew", value: 531)
!623 = !DIEnumerator(name: "CMD_vnoremenu", value: 532)
!624 = !DIEnumerator(name: "CMD_vsplit", value: 533)
!625 = !DIEnumerator(name: "CMD_vunmap", value: 534)
!626 = !DIEnumerator(name: "CMD_vunmenu", value: 535)
!627 = !DIEnumerator(name: "CMD_write", value: 536)
!628 = !DIEnumerator(name: "CMD_wNext", value: 537)
!629 = !DIEnumerator(name: "CMD_wall", value: 538)
!630 = !DIEnumerator(name: "CMD_while", value: 539)
!631 = !DIEnumerator(name: "CMD_winsize", value: 540)
!632 = !DIEnumerator(name: "CMD_wincmd", value: 541)
!633 = !DIEnumerator(name: "CMD_windo", value: 542)
!634 = !DIEnumerator(name: "CMD_winpos", value: 543)
!635 = !DIEnumerator(name: "CMD_wnext", value: 544)
!636 = !DIEnumerator(name: "CMD_wprevious", value: 545)
!637 = !DIEnumerator(name: "CMD_wq", value: 546)
!638 = !DIEnumerator(name: "CMD_wqall", value: 547)
!639 = !DIEnumerator(name: "CMD_wundo", value: 548)
!640 = !DIEnumerator(name: "CMD_wviminfo", value: 549)
!641 = !DIEnumerator(name: "CMD_xit", value: 550)
!642 = !DIEnumerator(name: "CMD_xall", value: 551)
!643 = !DIEnumerator(name: "CMD_xmap", value: 552)
!644 = !DIEnumerator(name: "CMD_xmapclear", value: 553)
!645 = !DIEnumerator(name: "CMD_xmenu", value: 554)
!646 = !DIEnumerator(name: "CMD_xnoremap", value: 555)
!647 = !DIEnumerator(name: "CMD_xnoremenu", value: 556)
!648 = !DIEnumerator(name: "CMD_xrestore", value: 557)
!649 = !DIEnumerator(name: "CMD_xunmap", value: 558)
!650 = !DIEnumerator(name: "CMD_xunmenu", value: 559)
!651 = !DIEnumerator(name: "CMD_yank", value: 560)
!652 = !DIEnumerator(name: "CMD_z", value: 561)
!653 = !DIEnumerator(name: "CMD_bang", value: 562)
!654 = !DIEnumerator(name: "CMD_pound", value: 563)
!655 = !DIEnumerator(name: "CMD_and", value: 564)
!656 = !DIEnumerator(name: "CMD_star", value: 565)
!657 = !DIEnumerator(name: "CMD_lshift", value: 566)
!658 = !DIEnumerator(name: "CMD_equal", value: 567)
!659 = !DIEnumerator(name: "CMD_rshift", value: 568)
!660 = !DIEnumerator(name: "CMD_at", value: 569)
!661 = !DIEnumerator(name: "CMD_block", value: 570)
!662 = !DIEnumerator(name: "CMD_endblock", value: 571)
!663 = !DIEnumerator(name: "CMD_tilde", value: 572)
!664 = !DIEnumerator(name: "CMD_Next", value: 573)
!665 = !DIEnumerator(name: "CMD_Print", value: 574)
!666 = !DIEnumerator(name: "CMD_X", value: 575)
!667 = !DIEnumerator(name: "CMD_SIZE", value: 576)
!668 = !DIEnumerator(name: "CMD_USER", value: -1)
!669 = !DIEnumerator(name: "CMD_USER_BUF", value: -2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 68, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683}
!672 = !DIEnumerator(name: "ADDR_LINES", value: 0)
!673 = !DIEnumerator(name: "ADDR_WINDOWS", value: 1)
!674 = !DIEnumerator(name: "ADDR_ARGUMENTS", value: 2)
!675 = !DIEnumerator(name: "ADDR_LOADED_BUFFERS", value: 3)
!676 = !DIEnumerator(name: "ADDR_BUFFERS", value: 4)
!677 = !DIEnumerator(name: "ADDR_TABS", value: 5)
!678 = !DIEnumerator(name: "ADDR_TABS_RELATIVE", value: 6)
!679 = !DIEnumerator(name: "ADDR_QUICKFIX_VALID", value: 7)
!680 = !DIEnumerator(name: "ADDR_QUICKFIX", value: 8)
!681 = !DIEnumerator(name: "ADDR_UNSIGNED", value: 9)
!682 = !DIEnumerator(name: "ADDR_OTHER", value: 10)
!683 = !DIEnumerator(name: "ADDR_NONE", value: 11)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1572, size: 32, elements: !685)
!685 = !{!686, !687, !688, !689}
!686 = !DIEnumerator(name: "GETLINE_NONE", value: 0)
!687 = !DIEnumerator(name: "GETLINE_CONCAT_CONT", value: 1)
!688 = !DIEnumerator(name: "GETLINE_CONCAT_CONTBAR", value: 2)
!689 = !DIEnumerator(name: "GETLINE_CONCAT_ALL", value: 3)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 6497, size: 32, elements: !691)
!691 = !{!692, !693, !694, !695, !696}
!692 = !DIEnumerator(name: "MATCH_END", value: 0)
!693 = !DIEnumerator(name: "MATCH_MATCH", value: 1)
!694 = !DIEnumerator(name: "MATCH_STR", value: 2)
!695 = !DIEnumerator(name: "MATCH_LIST", value: 3)
!696 = !DIEnumerator(name: "MATCH_POS", value: 4)
!697 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !698, line: 1363, size: 32, elements: !699)
!698 = !DIFile(filename: "./vim.h", directory: "/home/sahil/vim/src")
!699 = !{!700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748}
!700 = !DIEnumerator(name: "HLF_8", value: 0)
!701 = !DIEnumerator(name: "HLF_EOB", value: 1)
!702 = !DIEnumerator(name: "HLF_AT", value: 2)
!703 = !DIEnumerator(name: "HLF_D", value: 3)
!704 = !DIEnumerator(name: "HLF_E", value: 4)
!705 = !DIEnumerator(name: "HLF_H", value: 5)
!706 = !DIEnumerator(name: "HLF_I", value: 6)
!707 = !DIEnumerator(name: "HLF_L", value: 7)
!708 = !DIEnumerator(name: "HLF_M", value: 8)
!709 = !DIEnumerator(name: "HLF_CM", value: 9)
!710 = !DIEnumerator(name: "HLF_N", value: 10)
!711 = !DIEnumerator(name: "HLF_LNA", value: 11)
!712 = !DIEnumerator(name: "HLF_LNB", value: 12)
!713 = !DIEnumerator(name: "HLF_CLN", value: 13)
!714 = !DIEnumerator(name: "HLF_R", value: 14)
!715 = !DIEnumerator(name: "HLF_S", value: 15)
!716 = !DIEnumerator(name: "HLF_SNC", value: 16)
!717 = !DIEnumerator(name: "HLF_C", value: 17)
!718 = !DIEnumerator(name: "HLF_T", value: 18)
!719 = !DIEnumerator(name: "HLF_V", value: 19)
!720 = !DIEnumerator(name: "HLF_VNC", value: 20)
!721 = !DIEnumerator(name: "HLF_W", value: 21)
!722 = !DIEnumerator(name: "HLF_WM", value: 22)
!723 = !DIEnumerator(name: "HLF_FL", value: 23)
!724 = !DIEnumerator(name: "HLF_FC", value: 24)
!725 = !DIEnumerator(name: "HLF_ADD", value: 25)
!726 = !DIEnumerator(name: "HLF_CHD", value: 26)
!727 = !DIEnumerator(name: "HLF_DED", value: 27)
!728 = !DIEnumerator(name: "HLF_TXD", value: 28)
!729 = !DIEnumerator(name: "HLF_CONCEAL", value: 29)
!730 = !DIEnumerator(name: "HLF_SC", value: 30)
!731 = !DIEnumerator(name: "HLF_SPB", value: 31)
!732 = !DIEnumerator(name: "HLF_SPC", value: 32)
!733 = !DIEnumerator(name: "HLF_SPR", value: 33)
!734 = !DIEnumerator(name: "HLF_SPL", value: 34)
!735 = !DIEnumerator(name: "HLF_PNI", value: 35)
!736 = !DIEnumerator(name: "HLF_PSI", value: 36)
!737 = !DIEnumerator(name: "HLF_PSB", value: 37)
!738 = !DIEnumerator(name: "HLF_PST", value: 38)
!739 = !DIEnumerator(name: "HLF_TP", value: 39)
!740 = !DIEnumerator(name: "HLF_TPS", value: 40)
!741 = !DIEnumerator(name: "HLF_TPF", value: 41)
!742 = !DIEnumerator(name: "HLF_CUC", value: 42)
!743 = !DIEnumerator(name: "HLF_CUL", value: 43)
!744 = !DIEnumerator(name: "HLF_MC", value: 44)
!745 = !DIEnumerator(name: "HLF_QFL", value: 45)
!746 = !DIEnumerator(name: "HLF_ST", value: 46)
!747 = !DIEnumerator(name: "HLF_STNC", value: 47)
!748 = !DIEnumerator(name: "HLF_COUNT", value: 48)
!749 = !{!750, !751, !753, !756, !757, !759, !762, !764, !766, !765, !767, !768, !2305, !2427, !885, !2428, !2464, !760, !2465, !2469, !2470, !2367}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !754, line: 62, baseType: !755)
!754 = !DIFile(filename: "/usr/lib/llvm-6.0/lib/clang/6.0.1/include/stddef.h", directory: "/home/sahil/vim/src")
!755 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!756 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "varnumber_T", file: !6, line: 1327, baseType: !758)
!758 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_u", file: !698, line: 324, baseType: !761)
!761 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_T", file: !6, line: 1344, baseType: !763)
!763 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "linenr_T", file: !698, line: 1687, baseType: !765)
!765 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "colnr_T", file: !698, line: 1688, baseType: !756)
!767 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "partial_T", file: !6, line: 1348, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partial_S", file: !6, line: 1994, size: 832, elements: !771)
!771 = !{!772, !773, !774, !2402, !2403, !2413, !2423, !2424, !2425, !2426}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "pt_refcount", scope: !770, file: !6, line: 1996, baseType: !756, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pt_name", scope: !770, file: !6, line: 1997, baseType: !759, size: 64, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pt_func", scope: !770, file: !6, line: 1999, baseType: !775, size: 64, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "ufunc_T", file: !6, line: 1658, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1597, size: 3072, elements: !778)
!778 = !{!779, !780, !781, !782, !783, !785, !786, !795, !796, !811, !812, !813, !814, !815, !816, !817, !818, !820, !821, !822, !823, !824, !834, !835, !836, !837, !839, !840, !841, !842, !843, !844, !845, !854, !855, !856, !2399, !2400}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "uf_varargs", scope: !777, file: !6, line: 1599, baseType: !756, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "uf_flags", scope: !777, file: !6, line: 1600, baseType: !756, size: 32, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "uf_calls", scope: !777, file: !6, line: 1601, baseType: !756, size: 32, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "uf_cleared", scope: !777, file: !6, line: 1602, baseType: !756, size: 32, offset: 96)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "uf_def_status", scope: !777, file: !6, line: 1603, baseType: !784, size: 32, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_status_T", file: !6, line: 1591, baseType: !23)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "uf_dfunc_idx", scope: !777, file: !6, line: 1604, baseType: !756, size: 32, offset: 160)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "uf_args", scope: !777, file: !6, line: 1605, baseType: !787, size: 192, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "garray_T", file: !6, line: 55, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "growarray", file: !6, line: 48, size: 192, elements: !789)
!789 = !{!790, !791, !792, !793, !794}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ga_len", scope: !788, file: !6, line: 50, baseType: !756, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ga_maxlen", scope: !788, file: !6, line: 51, baseType: !756, size: 32, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "ga_itemsize", scope: !788, file: !6, line: 52, baseType: !756, size: 32, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "ga_growsize", scope: !788, file: !6, line: 53, baseType: !756, size: 32, offset: 96)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "ga_data", scope: !788, file: !6, line: 54, baseType: !750, size: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "uf_def_args", scope: !777, file: !6, line: 1606, baseType: !787, size: 192, offset: 384)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "uf_arg_types", scope: !777, file: !6, line: 1609, baseType: !797, size: 64, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "type_T", file: !6, line: 1394, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "type_S", file: !6, line: 1395, size: 192, elements: !801)
!801 = !{!802, !804, !807, !808, !809, !810}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "tt_type", scope: !800, file: !6, line: 1396, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "vartype_T", file: !6, line: 1391, baseType: !5)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "tt_argcount", scope: !800, file: !6, line: 1397, baseType: !805, size: 8, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_T", file: !6, line: 1342, baseType: !806)
!806 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "tt_min_argcount", scope: !800, file: !6, line: 1398, baseType: !752, size: 8, offset: 40)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "tt_flags", scope: !800, file: !6, line: 1399, baseType: !752, size: 8, offset: 48)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "tt_member", scope: !800, file: !6, line: 1400, baseType: !798, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "tt_args", scope: !800, file: !6, line: 1401, baseType: !797, size: 64, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "uf_ret_type", scope: !777, file: !6, line: 1610, baseType: !798, size: 64, offset: 640)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "uf_type_list", scope: !777, file: !6, line: 1611, baseType: !787, size: 192, offset: 704)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "uf_partial", scope: !777, file: !6, line: 1612, baseType: !768, size: 64, offset: 896)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "uf_va_name", scope: !777, file: !6, line: 1615, baseType: !759, size: 64, offset: 960)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "uf_va_type", scope: !777, file: !6, line: 1616, baseType: !798, size: 64, offset: 1024)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uf_func_type", scope: !777, file: !6, line: 1617, baseType: !798, size: 64, offset: 1088)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "uf_block_depth", scope: !777, file: !6, line: 1618, baseType: !756, size: 32, offset: 1152)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "uf_block_ids", scope: !777, file: !6, line: 1619, baseType: !819, size: 64, offset: 1216)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "uf_lines", scope: !777, file: !6, line: 1626, baseType: !787, size: 192, offset: 1280)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "uf_profiling", scope: !777, file: !6, line: 1628, baseType: !756, size: 32, offset: 1472)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "uf_prof_initialized", scope: !777, file: !6, line: 1629, baseType: !756, size: 32, offset: 1504)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_count", scope: !777, file: !6, line: 1631, baseType: !756, size: 32, offset: 1536)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_total", scope: !777, file: !6, line: 1632, baseType: !825, size: 128, offset: 1600)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "proftime_T", file: !698, line: 1786, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !827, line: 8, size: 128, elements: !828)
!827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "/home/sahil/vim/src")
!828 = !{!829, !832}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !826, file: !827, line: 10, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !831, line: 160, baseType: !765)
!831 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/sahil/vim/src")
!832 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !826, file: !827, line: 11, baseType: !833, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !831, line: 162, baseType: !765)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_self", scope: !777, file: !6, line: 1633, baseType: !825, size: 128, offset: 1728)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_children", scope: !777, file: !6, line: 1634, baseType: !825, size: 128, offset: 1856)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_count", scope: !777, file: !6, line: 1636, baseType: !819, size: 64, offset: 1984)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_total", scope: !777, file: !6, line: 1637, baseType: !838, size: 64, offset: 2048)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_self", scope: !777, file: !6, line: 1638, baseType: !838, size: 64, offset: 2112)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_start", scope: !777, file: !6, line: 1639, baseType: !825, size: 128, offset: 2176)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_children", scope: !777, file: !6, line: 1640, baseType: !825, size: 128, offset: 2304)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_wait", scope: !777, file: !6, line: 1641, baseType: !825, size: 128, offset: 2432)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_idx", scope: !777, file: !6, line: 1642, baseType: !756, size: 32, offset: 2560)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_execed", scope: !777, file: !6, line: 1643, baseType: !756, size: 32, offset: 2592)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "uf_script_ctx", scope: !777, file: !6, line: 1645, baseType: !846, size: 192, offset: 2624)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "sctx_T", file: !6, line: 92, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 85, size: 192, elements: !848)
!848 = !{!849, !851, !852, !853}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "sc_sid", scope: !847, file: !6, line: 87, baseType: !850, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "scid_T", file: !6, line: 62, baseType: !756)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "sc_seq", scope: !847, file: !6, line: 88, baseType: !756, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "sc_lnum", scope: !847, file: !6, line: 89, baseType: !764, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "sc_version", scope: !847, file: !6, line: 91, baseType: !756, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "uf_script_ctx_version", scope: !777, file: !6, line: 1648, baseType: !756, size: 32, offset: 2816)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "uf_refcount", scope: !777, file: !6, line: 1649, baseType: !756, size: 32, offset: 2848)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "uf_scoped", scope: !777, file: !6, line: 1651, baseType: !857, size: 64, offset: 2880)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "funccall_T", file: !6, line: 1582, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funccall_S", file: !6, line: 1682, size: 17280, elements: !860)
!860 = !{!861, !862, !863, !864, !2383, !2384, !2385, !2386, !2387, !2388, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !859, file: !6, line: 1684, baseType: !775, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "linenr", scope: !859, file: !6, line: 1685, baseType: !756, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "returned", scope: !859, file: !6, line: 1686, baseType: !756, size: 32, offset: 96)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "fixvar", scope: !859, file: !6, line: 1691, baseType: !865, size: 4608, offset: 128)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 4608, elements: !2381)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !859, file: !6, line: 1687, size: 384, elements: !867)
!867 = !{!868, !2379}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !866, file: !6, line: 1689, baseType: !869, size: 192)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictitem_T", file: !6, line: 1519, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictitem_S", file: !6, line: 1513, size: 192, elements: !871)
!871 = !{!872, !2377, !2378}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "di_tv", scope: !870, file: !6, line: 1515, baseType: !873, size: 128)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "typval_T", file: !6, line: 1432, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1412, size: 128, elements: !875)
!875 = !{!876, !877, !878}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "v_type", scope: !874, file: !6, line: 1414, baseType: !803, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "v_lock", scope: !874, file: !6, line: 1415, baseType: !752, size: 8, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "vval", scope: !874, file: !6, line: 1431, baseType: !879, size: 64, offset: 64)
!879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !6, line: 1416, size: 64, elements: !880)
!880 = !{!881, !882, !883, !884, !928, !963, !964, !2368, !2369}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "v_number", scope: !879, file: !6, line: 1418, baseType: !757, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "v_float", scope: !879, file: !6, line: 1420, baseType: !762, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "v_string", scope: !879, file: !6, line: 1422, baseType: !759, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "v_list", scope: !879, file: !6, line: 1423, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "list_T", file: !6, line: 1346, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listvar_S", file: !6, line: 1471, size: 768, elements: !888)
!888 = !{!889, !897, !904, !919, !920, !921, !922, !923, !924, !925, !926, !927}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "lv_first", scope: !887, file: !6, line: 1473, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "listitem_T", file: !6, line: 1446, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listitem_S", file: !6, line: 1448, size: 256, elements: !893)
!893 = !{!894, !895, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "li_next", scope: !892, file: !6, line: 1450, baseType: !890, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "li_prev", scope: !892, file: !6, line: 1451, baseType: !890, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "li_tv", scope: !892, file: !6, line: 1452, baseType: !873, size: 128, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "lv_watch", scope: !887, file: !6, line: 1474, baseType: !898, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "listwatch_T", file: !6, line: 1456, baseType: !900)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listwatch_S", file: !6, line: 1458, size: 128, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "lw_item", scope: !900, file: !6, line: 1460, baseType: !890, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "lw_next", scope: !900, file: !6, line: 1461, baseType: !898, size: 64, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "lv_u", scope: !887, file: !6, line: 1487, baseType: !905, size: 192, offset: 128)
!905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !6, line: 1475, size: 192, elements: !906)
!906 = !{!907, !913}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nonmat", scope: !905, file: !6, line: 1481, baseType: !908, size: 192)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !905, file: !6, line: 1476, size: 192, elements: !909)
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "lv_start", scope: !908, file: !6, line: 1478, baseType: !757, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "lv_end", scope: !908, file: !6, line: 1479, baseType: !757, size: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "lv_stride", scope: !908, file: !6, line: 1480, baseType: !756, size: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !905, file: !6, line: 1486, baseType: !914, size: 192)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !905, file: !6, line: 1482, size: 192, elements: !915)
!915 = !{!916, !917, !918}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "lv_last", scope: !914, file: !6, line: 1483, baseType: !890, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "lv_idx_item", scope: !914, file: !6, line: 1484, baseType: !890, size: 64, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lv_idx", scope: !914, file: !6, line: 1485, baseType: !756, size: 32, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "lv_type", scope: !887, file: !6, line: 1488, baseType: !798, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "lv_copylist", scope: !887, file: !6, line: 1489, baseType: !885, size: 64, offset: 384)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lv_used_next", scope: !887, file: !6, line: 1490, baseType: !885, size: 64, offset: 448)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lv_used_prev", scope: !887, file: !6, line: 1491, baseType: !885, size: 64, offset: 512)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "lv_refcount", scope: !887, file: !6, line: 1492, baseType: !756, size: 32, offset: 576)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lv_len", scope: !887, file: !6, line: 1493, baseType: !756, size: 32, offset: 608)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "lv_with_items", scope: !887, file: !6, line: 1494, baseType: !756, size: 32, offset: 640)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "lv_copyID", scope: !887, file: !6, line: 1496, baseType: !756, size: 32, offset: 672)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "lv_lock", scope: !887, file: !6, line: 1497, baseType: !752, size: 8, offset: 704)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "v_dict", scope: !879, file: !6, line: 1424, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict_T", file: !6, line: 1347, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictvar_S", file: !6, line: 1545, size: 2816, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !959, !960, !961, !962}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "dv_lock", scope: !931, file: !6, line: 1547, baseType: !752, size: 8)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dv_scope", scope: !931, file: !6, line: 1548, baseType: !752, size: 8, offset: 8)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "dv_refcount", scope: !931, file: !6, line: 1549, baseType: !756, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "dv_copyID", scope: !931, file: !6, line: 1550, baseType: !756, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "dv_hashtab", scope: !931, file: !6, line: 1551, baseType: !938, size: 2432, offset: 128)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashtab_T", file: !6, line: 1290, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashtable_S", file: !6, line: 1277, size: 2432, elements: !940)
!940 = !{!941, !943, !944, !945, !946, !947, !948, !955}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ht_mask", scope: !939, file: !6, line: 1279, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "long_u", file: !698, line: 345, baseType: !755)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ht_used", scope: !939, file: !6, line: 1281, baseType: !942, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ht_filled", scope: !939, file: !6, line: 1282, baseType: !942, size: 64, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ht_changed", scope: !939, file: !6, line: 1283, baseType: !756, size: 32, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ht_locked", scope: !939, file: !6, line: 1284, baseType: !756, size: 32, offset: 224)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ht_error", scope: !939, file: !6, line: 1285, baseType: !756, size: 32, offset: 256)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ht_array", scope: !939, file: !6, line: 1287, baseType: !949, size: 64, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashitem_T", file: !6, line: 1265, baseType: !951)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashitem_S", file: !6, line: 1261, size: 128, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "hi_hash", scope: !951, file: !6, line: 1263, baseType: !942, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "hi_key", scope: !951, file: !6, line: 1264, baseType: !759, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "ht_smallarray", scope: !939, file: !6, line: 1289, baseType: !956, size: 2048, offset: 384)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !950, size: 2048, elements: !957)
!957 = !{!958}
!958 = !DISubrange(count: 16)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "dv_type", scope: !931, file: !6, line: 1552, baseType: !798, size: 64, offset: 2560)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "dv_copydict", scope: !931, file: !6, line: 1553, baseType: !929, size: 64, offset: 2624)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "dv_used_next", scope: !931, file: !6, line: 1554, baseType: !929, size: 64, offset: 2688)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "dv_used_prev", scope: !931, file: !6, line: 1555, baseType: !929, size: 64, offset: 2752)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "v_partial", scope: !879, file: !6, line: 1425, baseType: !768, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "v_job", scope: !879, file: !6, line: 1427, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "job_T", file: !6, line: 1365, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "jobvar_S", file: !6, line: 2072, size: 1024, elements: !968)
!968 = !{!969, !970, !971, !975, !976, !977, !979, !980, !981, !982, !989, !2267, !2268, !2269, !2366}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "jv_next", scope: !967, file: !6, line: 2074, baseType: !965, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "jv_prev", scope: !967, file: !6, line: 2075, baseType: !965, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "jv_pid", scope: !967, file: !6, line: 2077, baseType: !972, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !973, line: 97, baseType: !974)
!973 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/sahil/vim/src")
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !831, line: 154, baseType: !756)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "jv_tty_in", scope: !967, file: !6, line: 2083, baseType: !759, size: 64, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "jv_tty_out", scope: !967, file: !6, line: 2084, baseType: !759, size: 64, offset: 256)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "jv_status", scope: !967, file: !6, line: 2085, baseType: !978, size: 32, offset: 320)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "jobstatus_T", file: !6, line: 2067, baseType: !30)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "jv_stoponexit", scope: !967, file: !6, line: 2086, baseType: !759, size: 64, offset: 384)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "jv_termsig", scope: !967, file: !6, line: 2088, baseType: !759, size: 64, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "jv_exitval", scope: !967, file: !6, line: 2093, baseType: !756, size: 32, offset: 512)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "jv_exit_cb", scope: !967, file: !6, line: 2094, baseType: !983, size: 192, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "callback_T", file: !6, line: 1360, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1356, size: 192, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "cb_name", scope: !984, file: !6, line: 1357, baseType: !759, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "cb_partial", scope: !984, file: !6, line: 1358, baseType: !768, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "cb_free_name", scope: !984, file: !6, line: 1359, baseType: !756, size: 32, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "jv_in_buf", scope: !967, file: !6, line: 2096, baseType: !990, size: 64, offset: 768)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "buf_T", file: !6, line: 63, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_buffer", file: !6, line: 2629, size: 73152, elements: !993)
!993 = !{!994, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1101, !1104, !1105, !1109, !1110, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1937, !1938, !1939, !1944, !1945, !1946, !1950, !1958, !1959, !1960, !1961, !1962, !1964, !1965, !1966, !1967, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2211, !2212, !2213, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2250, !2251, !2252, !2253, !2254, !2261, !2262, !2266}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "b_ml", scope: !992, file: !6, line: 2631, baseType: !995, size: 832)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "memline_T", file: !6, line: 766, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "memline", file: !6, line: 737, size: 832, elements: !997)
!997 = !{!998, !999, !1060, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1086, !1087}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_count", scope: !996, file: !6, line: 739, baseType: !764, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "ml_mfp", scope: !996, file: !6, line: 741, baseType: !1000, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "memfile_T", file: !6, line: 459, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "memfile", file: !6, line: 671, size: 9856, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1028, !1029, !1030, !1031, !1032, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1057, !1058, !1059}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "mf_fname", scope: !1002, file: !6, line: 673, baseType: !759, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "mf_ffname", scope: !1002, file: !6, line: 674, baseType: !759, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "mf_fd", scope: !1002, file: !6, line: 675, baseType: !756, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "mf_flags", scope: !1002, file: !6, line: 676, baseType: !756, size: 32, offset: 160)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "mf_reopen", scope: !1002, file: !6, line: 677, baseType: !756, size: 32, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "mf_free_first", scope: !1002, file: !6, line: 678, baseType: !1010, size: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "bhdr_T", file: !6, line: 458, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_hdr", file: !6, line: 506, size: 448, elements: !1013)
!1013 = !{!1014, !1023, !1024, !1025, !1026, !1027}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "bh_hashitem", scope: !1012, file: !6, line: 508, baseType: !1015, size: 192)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "mf_hashitem_T", file: !6, line: 469, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mf_hashitem_S", file: !6, line: 471, size: 192, elements: !1017)
!1017 = !{!1018, !1020, !1021}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_next", scope: !1016, file: !6, line: 473, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_prev", scope: !1016, file: !6, line: 474, baseType: !1019, size: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_key", scope: !1016, file: !6, line: 475, baseType: !1022, size: 64, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "blocknr_T", file: !6, line: 460, baseType: !765)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "bh_next", scope: !1012, file: !6, line: 511, baseType: !1010, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "bh_prev", scope: !1012, file: !6, line: 512, baseType: !1010, size: 64, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "bh_data", scope: !1012, file: !6, line: 513, baseType: !759, size: 64, offset: 320)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bh_page_count", scope: !1012, file: !6, line: 514, baseType: !756, size: 32, offset: 384)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "bh_flags", scope: !1012, file: !6, line: 518, baseType: !752, size: 8, offset: 416)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_first", scope: !1002, file: !6, line: 679, baseType: !1010, size: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_last", scope: !1002, file: !6, line: 680, baseType: !1010, size: 64, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_count", scope: !1002, file: !6, line: 681, baseType: !767, size: 32, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_count_max", scope: !1002, file: !6, line: 682, baseType: !767, size: 32, offset: 480)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "mf_hash", scope: !1002, file: !6, line: 683, baseType: !1033, size: 4352, offset: 512)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "mf_hashtab_T", file: !6, line: 489, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mf_hashtab_S", file: !6, line: 480, size: 4352, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1040, !1044}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mht_mask", scope: !1034, file: !6, line: 482, baseType: !942, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mht_count", scope: !1034, file: !6, line: 484, baseType: !942, size: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "mht_buckets", scope: !1034, file: !6, line: 485, baseType: !1039, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "mht_small_buckets", scope: !1034, file: !6, line: 487, baseType: !1041, size: 4096, offset: 192)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 4096, elements: !1042)
!1042 = !{!1043}
!1043 = !DISubrange(count: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "mht_fixed", scope: !1034, file: !6, line: 488, baseType: !752, size: 8, offset: 4288)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "mf_trans", scope: !1002, file: !6, line: 684, baseType: !1033, size: 4352, offset: 4864)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "mf_blocknr_max", scope: !1002, file: !6, line: 685, baseType: !1022, size: 64, offset: 9216)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "mf_blocknr_min", scope: !1002, file: !6, line: 686, baseType: !1022, size: 64, offset: 9280)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "mf_neg_count", scope: !1002, file: !6, line: 687, baseType: !1022, size: 64, offset: 9344)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "mf_infile_count", scope: !1002, file: !6, line: 688, baseType: !1022, size: 64, offset: 9408)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "mf_page_size", scope: !1002, file: !6, line: 689, baseType: !767, size: 32, offset: 9472)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "mf_dirty", scope: !1002, file: !6, line: 690, baseType: !756, size: 32, offset: 9504)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "mf_buffer", scope: !1002, file: !6, line: 692, baseType: !990, size: 64, offset: 9536)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "mf_seed", scope: !1002, file: !6, line: 693, baseType: !1054, size: 64, offset: 9600)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !1055)
!1055 = !{!1056}
!1056 = !DISubrange(count: 8)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_key", scope: !1002, file: !6, line: 697, baseType: !759, size: 64, offset: 9664)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_cm", scope: !1002, file: !6, line: 698, baseType: !756, size: 32, offset: 9728)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_seed", scope: !1002, file: !6, line: 699, baseType: !1054, size: 64, offset: 9760)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack", scope: !996, file: !6, line: 743, baseType: !1061, size: 64, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "infoptr_T", file: !6, line: 717, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "info_pointer", file: !6, line: 711, size: 256, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ip_bnum", scope: !1063, file: !6, line: 713, baseType: !1022, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ip_low", scope: !1063, file: !6, line: 714, baseType: !764, size: 64, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ip_high", scope: !1063, file: !6, line: 715, baseType: !764, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ip_index", scope: !1063, file: !6, line: 716, baseType: !756, size: 32, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack_top", scope: !996, file: !6, line: 744, baseType: !756, size: 32, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack_size", scope: !996, file: !6, line: 745, baseType: !756, size: 32, offset: 224)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !996, file: !6, line: 751, baseType: !756, size: 32, offset: 256)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_len", scope: !996, file: !6, line: 753, baseType: !766, size: 32, offset: 288)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_lnum", scope: !996, file: !6, line: 754, baseType: !764, size: 64, offset: 320)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_ptr", scope: !996, file: !6, line: 755, baseType: !759, size: 64, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked", scope: !996, file: !6, line: 757, baseType: !1010, size: 64, offset: 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_low", scope: !996, file: !6, line: 758, baseType: !764, size: 64, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_high", scope: !996, file: !6, line: 759, baseType: !764, size: 64, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_lineadd", scope: !996, file: !6, line: 760, baseType: !756, size: 32, offset: 640)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "ml_chunksize", scope: !996, file: !6, line: 762, baseType: !1080, size: 64, offset: 704)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksize_T", file: !6, line: 724, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ml_chunksize", file: !6, line: 720, size: 128, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "mlcs_numlines", scope: !1082, file: !6, line: 722, baseType: !756, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mlcs_totalsize", scope: !1082, file: !6, line: 723, baseType: !765, size: 64, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "ml_numchunks", scope: !996, file: !6, line: 763, baseType: !756, size: 32, offset: 768)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "ml_usedchunks", scope: !996, file: !6, line: 764, baseType: !756, size: 32, offset: 800)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "b_next", scope: !992, file: !6, line: 2634, baseType: !990, size: 64, offset: 832)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "b_prev", scope: !992, file: !6, line: 2635, baseType: !990, size: 64, offset: 896)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "b_nwindows", scope: !992, file: !6, line: 2637, baseType: !756, size: 32, offset: 960)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "b_flags", scope: !992, file: !6, line: 2639, baseType: !756, size: 32, offset: 992)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "b_locked", scope: !992, file: !6, line: 2640, baseType: !756, size: 32, offset: 1024)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "b_locked_split", scope: !992, file: !6, line: 2642, baseType: !756, size: 32, offset: 1056)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "b_ffname", scope: !992, file: !6, line: 2651, baseType: !759, size: 64, offset: 1088)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "b_sfname", scope: !992, file: !6, line: 2652, baseType: !759, size: 64, offset: 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "b_fname", scope: !992, file: !6, line: 2654, baseType: !759, size: 64, offset: 1216)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "b_dev_valid", scope: !992, file: !6, line: 2658, baseType: !756, size: 32, offset: 1280)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "b_dev", scope: !992, file: !6, line: 2659, baseType: !1099, size: 64, offset: 1344)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !973, line: 59, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !831, line: 145, baseType: !755)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "b_ino", scope: !992, file: !6, line: 2660, baseType: !1102, size: 64, offset: 1408)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !973, line: 47, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !831, line: 148, baseType: !755)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "b_fnum", scope: !992, file: !6, line: 2667, baseType: !756, size: 32, offset: 1472)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "b_key", scope: !992, file: !6, line: 2668, baseType: !1106, size: 72, offset: 1504)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 72, elements: !1107)
!1107 = !{!1108}
!1108 = !DISubrange(count: 9)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "b_changed", scope: !992, file: !6, line: 2672, baseType: !756, size: 32, offset: 1600)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "b_ct_di", scope: !992, file: !6, line: 2674, baseType: !1111, size: 320, offset: 1664)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictitem16_T", file: !6, line: 1532, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictitem16_S", file: !6, line: 1526, size: 320, elements: !1113)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "di_tv", scope: !1112, file: !6, line: 1528, baseType: !873, size: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "di_flags", scope: !1112, file: !6, line: 1529, baseType: !760, size: 8, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "di_key", scope: !1112, file: !6, line: 1530, baseType: !1117, size: 136, offset: 136)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 136, elements: !1118)
!1118 = !{!1119}
!1119 = !DISubrange(count: 17)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_changedtick", scope: !992, file: !6, line: 2679, baseType: !757, size: 64, offset: 1984)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_changedtick_pum", scope: !992, file: !6, line: 2681, baseType: !757, size: 64, offset: 2048)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "b_saving", scope: !992, file: !6, line: 2684, baseType: !756, size: 32, offset: 2112)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_set", scope: !992, file: !6, line: 2691, baseType: !756, size: 32, offset: 2144)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_top", scope: !992, file: !6, line: 2693, baseType: !764, size: 64, offset: 2176)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_bot", scope: !992, file: !6, line: 2694, baseType: !764, size: 64, offset: 2240)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_xlines", scope: !992, file: !6, line: 2696, baseType: !765, size: 64, offset: 2304)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "b_wininfo", scope: !992, file: !6, line: 2699, baseType: !1128, size: 64, offset: 2368)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "wininfo_T", file: !6, line: 60, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wininfo_S", file: !6, line: 325, size: 11648, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1932, !1933, !1934, !1935, !1936}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "wi_next", scope: !1130, file: !6, line: 327, baseType: !1128, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "wi_prev", scope: !1130, file: !6, line: 328, baseType: !1128, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "wi_win", scope: !1130, file: !6, line: 329, baseType: !1135, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "win_T", file: !6, line: 59, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "window_S", file: !6, line: 3365, size: 72064, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1298, !1299, !1314, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1371, !1372, !1373, !1374, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1397, !1398, !1400, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1421, !1422, !1423, !1424, !1425, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1485, !1486, !1487, !1488, !1489, !1742, !1750, !1751, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1843, !1844, !1845, !1846, !1887, !1888, !1900, !1901, !1902, !1903, !1904, !1924, !1925, !1926, !1927, !1931}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "w_id", scope: !1137, file: !6, line: 3367, baseType: !756, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "w_buffer", scope: !1137, file: !6, line: 3369, baseType: !990, size: 64, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev", scope: !1137, file: !6, line: 3371, baseType: !1135, size: 64, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "w_next", scope: !1137, file: !6, line: 3372, baseType: !1135, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "w_s", scope: !1137, file: !6, line: 3375, baseType: !1144, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "synblock_T", file: !6, line: 2618, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2542, size: 9920, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1163, !1164, !1165, !1166, !1167, !1225, !1233, !1234, !1235, !1236, !1237, !1274, !1275, !1276, !1277, !1278, !1279, !1281, !1282, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1297}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "b_keywtab", scope: !1146, file: !6, line: 2544, baseType: !938, size: 2432)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "b_keywtab_ic", scope: !1146, file: !6, line: 2545, baseType: !938, size: 2432, offset: 2432)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_error", scope: !1146, file: !6, line: 2546, baseType: !756, size: 32, offset: 4864)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_slow", scope: !1146, file: !6, line: 2548, baseType: !756, size: 32, offset: 4896)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_ic", scope: !1146, file: !6, line: 2550, baseType: !756, size: 32, offset: 4928)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_foldlevel", scope: !1146, file: !6, line: 2551, baseType: !756, size: 32, offset: 4960)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_spell", scope: !1146, file: !6, line: 2552, baseType: !756, size: 32, offset: 4992)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_patterns", scope: !1146, file: !6, line: 2553, baseType: !787, size: 192, offset: 5056)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_clusters", scope: !1146, file: !6, line: 2554, baseType: !787, size: 192, offset: 5248)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_cluster_id", scope: !1146, file: !6, line: 2555, baseType: !756, size: 32, offset: 5440)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "b_nospell_cluster_id", scope: !1146, file: !6, line: 2556, baseType: !756, size: 32, offset: 5472)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_containedin", scope: !1146, file: !6, line: 2557, baseType: !756, size: 32, offset: 5504)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_flags", scope: !1146, file: !6, line: 2559, baseType: !756, size: 32, offset: 5536)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_id", scope: !1146, file: !6, line: 2560, baseType: !1162, size: 16, offset: 5568)
!1162 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_minlines", scope: !1146, file: !6, line: 2561, baseType: !765, size: 64, offset: 5632)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_maxlines", scope: !1146, file: !6, line: 2562, baseType: !765, size: 64, offset: 5696)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_linebreaks", scope: !1146, file: !6, line: 2563, baseType: !765, size: 64, offset: 5760)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_pat", scope: !1146, file: !6, line: 2564, baseType: !759, size: 64, offset: 5824)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_prog", scope: !1146, file: !6, line: 2565, baseType: !1168, size: 64, offset: 5888)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "regprog_T", file: !1170, line: 56, baseType: !1171)
!1170 = !DIFile(filename: "./regexp.h", directory: "/home/sahil/vim/src")
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regprog", file: !1170, line: 49, size: 192, elements: !1172)
!1172 = !{!1173, !1221, !1222, !1223, !1224}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1171, file: !1170, line: 51, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "regengine_T", file: !1170, line: 42, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regengine", file: !1170, line: 167, size: 320, elements: !1177)
!1177 = !{!1178, !1182, !1186, !1201, !1220}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "regcomp", scope: !1176, file: !1170, line: 169, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!1168, !759, !756}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "regfree", scope: !1176, file: !1170, line: 170, baseType: !1183, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null, !1168}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "regexec_nl", scope: !1176, file: !1170, line: 171, baseType: !1187, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!756, !1190, !759, !766, !756}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_T", file: !1170, line: 137, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1170, line: 131, size: 1408, elements: !1193)
!1193 = !{!1194, !1195, !1199, !1200}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "regprog", scope: !1192, file: !1170, line: 133, baseType: !1168, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "startp", scope: !1192, file: !1170, line: 134, baseType: !1196, size: 640, offset: 64)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 640, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 10)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "endp", scope: !1192, file: !1170, line: 135, baseType: !1196, size: 640, offset: 704)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "rm_ic", scope: !1192, file: !1170, line: 136, baseType: !756, size: 32, offset: 1344)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "regexec_multi", scope: !1176, file: !1170, line: 172, baseType: !1202, size: 64, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!765, !1205, !1135, !990, !764, !766, !838, !819}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmmatch_T", file: !1170, line: 154, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1170, line: 147, size: 2688, elements: !1208)
!1208 = !{!1209, !1210, !1217, !1218, !1219}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "regprog", scope: !1207, file: !1170, line: 149, baseType: !1168, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "startpos", scope: !1207, file: !1170, line: 150, baseType: !1211, size: 1280, offset: 64)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 1280, elements: !1197)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "lpos_T", file: !6, line: 41, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 37, size: 128, elements: !1214)
!1214 = !{!1215, !1216}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1213, file: !6, line: 39, baseType: !764, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1213, file: !6, line: 40, baseType: !766, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "endpos", scope: !1207, file: !1170, line: 151, baseType: !1211, size: 1280, offset: 1344)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "rmm_ic", scope: !1207, file: !1170, line: 152, baseType: !756, size: 32, offset: 2624)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rmm_maxcol", scope: !1207, file: !1170, line: 153, baseType: !766, size: 32, offset: 2656)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1176, file: !1170, line: 173, baseType: !759, size: 64, offset: 256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "regflags", scope: !1171, file: !1170, line: 52, baseType: !767, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "re_engine", scope: !1171, file: !1170, line: 53, baseType: !767, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "re_flags", scope: !1171, file: !1170, line: 54, baseType: !767, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "re_in_use", scope: !1171, file: !1170, line: 55, baseType: !756, size: 32, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_time", scope: !1146, file: !6, line: 2567, baseType: !1226, size: 384, offset: 5952)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "syn_time_T", file: !6, line: 2475, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2470, size: 384, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !1227, file: !6, line: 2471, baseType: !825, size: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "slowest", scope: !1227, file: !6, line: 2472, baseType: !825, size: 128, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1227, file: !6, line: 2473, baseType: !765, size: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1227, file: !6, line: 2474, baseType: !765, size: 64, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_ic", scope: !1146, file: !6, line: 2569, baseType: !756, size: 32, offset: 6336)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_topgrp", scope: !1146, file: !6, line: 2570, baseType: !756, size: 32, offset: 6368)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_conceal", scope: !1146, file: !6, line: 2572, baseType: !756, size: 32, offset: 6400)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_folditems", scope: !1146, file: !6, line: 2575, baseType: !756, size: 32, offset: 6432)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_array", scope: !1146, file: !6, line: 2592, baseType: !1238, size: 64, offset: 6464)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "synstate_T", file: !6, line: 1061, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syn_state", file: !6, line: 1063, size: 1728, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1266, !1267, !1268, !1270, !1273}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next", scope: !1240, file: !6, line: 1065, baseType: !1238, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sst_lnum", scope: !1240, file: !6, line: 1066, baseType: !764, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sst_union", scope: !1240, file: !6, line: 1071, baseType: !1245, size: 1344, offset: 128)
!1245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1240, file: !6, line: 1067, size: 1344, elements: !1246)
!1246 = !{!1247, !1265}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sst_stack", scope: !1245, file: !6, line: 1069, baseType: !1248, size: 1344)
!1248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1249, size: 1344, elements: !1263)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "bufstate_T", file: !6, line: 1055, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_state", file: !6, line: 1046, size: 192, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "bs_idx", scope: !1250, file: !6, line: 1048, baseType: !756, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "bs_flags", scope: !1250, file: !6, line: 1049, baseType: !756, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "bs_seqnr", scope: !1250, file: !6, line: 1051, baseType: !756, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "bs_cchar", scope: !1250, file: !6, line: 1052, baseType: !756, size: 32, offset: 96)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bs_extmatch", scope: !1250, file: !6, line: 1054, baseType: !1257, size: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_extmatch_T", file: !1170, line: 165, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1170, line: 161, size: 704, elements: !1260)
!1260 = !{!1261, !1262}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1259, file: !1170, line: 163, baseType: !1162, size: 16)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !1259, file: !1170, line: 164, baseType: !1196, size: 640, offset: 64)
!1263 = !{!1264}
!1264 = !DISubrange(count: 7)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sst_ga", scope: !1245, file: !6, line: 1070, baseType: !787, size: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next_flags", scope: !1240, file: !6, line: 1072, baseType: !756, size: 32, offset: 1472)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sst_stacksize", scope: !1240, file: !6, line: 1073, baseType: !756, size: 32, offset: 1504)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next_list", scope: !1240, file: !6, line: 1074, baseType: !1269, size: 64, offset: 1536)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "sst_tick", scope: !1240, file: !6, line: 1076, baseType: !1271, size: 16, offset: 1600)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "disptick_T", file: !698, line: 1689, baseType: !1272)
!1272 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "sst_change_lnum", scope: !1240, file: !6, line: 1077, baseType: !764, size: 64, offset: 1664)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_len", scope: !1146, file: !6, line: 2593, baseType: !756, size: 32, offset: 6528)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_first", scope: !1146, file: !6, line: 2594, baseType: !1238, size: 64, offset: 6592)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_firstfree", scope: !1146, file: !6, line: 2595, baseType: !1238, size: 64, offset: 6656)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_freecount", scope: !1146, file: !6, line: 2596, baseType: !756, size: 32, offset: 6720)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_check_lnum", scope: !1146, file: !6, line: 2597, baseType: !764, size: 64, offset: 6784)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_lasttick", scope: !1146, file: !6, line: 2598, baseType: !1280, size: 16, offset: 6848)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "short_u", file: !698, line: 325, baseType: !1272)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "b_langp", scope: !1146, file: !6, line: 2603, baseType: !787, size: 192, offset: 6912)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_ismw", scope: !1146, file: !6, line: 2604, baseType: !1283, size: 2048, offset: 7104)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 2048, elements: !1284)
!1284 = !{!1285}
!1285 = !DISubrange(count: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_ismw_mb", scope: !1146, file: !6, line: 2605, baseType: !759, size: 64, offset: 9152)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spc", scope: !1146, file: !6, line: 2606, baseType: !759, size: 64, offset: 9216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "b_cap_prog", scope: !1146, file: !6, line: 2607, baseType: !1168, size: 64, offset: 9280)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spf", scope: !1146, file: !6, line: 2608, baseType: !759, size: 64, offset: 9344)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spl", scope: !1146, file: !6, line: 2609, baseType: !759, size: 64, offset: 9408)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spo", scope: !1146, file: !6, line: 2610, baseType: !759, size: 64, offset: 9472)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "b_cjk", scope: !1146, file: !6, line: 2611, baseType: !756, size: 32, offset: 9536)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_chartab", scope: !1146, file: !6, line: 2616, baseType: !1294, size: 256, offset: 9568)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 256, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_isk", scope: !1146, file: !6, line: 2617, baseType: !759, size: 64, offset: 9856)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "w_closing", scope: !1137, file: !6, line: 3378, baseType: !756, size: 32, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "w_frame", scope: !1137, file: !6, line: 3381, baseType: !1300, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "frame_T", file: !6, line: 61, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frame_S", file: !6, line: 3231, size: 512, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "fr_layout", scope: !1302, file: !6, line: 3233, baseType: !752, size: 8)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fr_width", scope: !1302, file: !6, line: 3234, baseType: !756, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "fr_newwidth", scope: !1302, file: !6, line: 3235, baseType: !756, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "fr_height", scope: !1302, file: !6, line: 3236, baseType: !756, size: 32, offset: 96)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "fr_newheight", scope: !1302, file: !6, line: 3237, baseType: !756, size: 32, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "fr_parent", scope: !1302, file: !6, line: 3238, baseType: !1300, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "fr_next", scope: !1302, file: !6, line: 3239, baseType: !1300, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "fr_prev", scope: !1302, file: !6, line: 3241, baseType: !1300, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "fr_child", scope: !1302, file: !6, line: 3244, baseType: !1300, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fr_win", scope: !1302, file: !6, line: 3245, baseType: !1135, size: 64, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor", scope: !1137, file: !6, line: 3383, baseType: !1315, size: 128, offset: 448)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "pos_T", file: !6, line: 31, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 26, size: 128, elements: !1317)
!1317 = !{!1318, !1319, !1320}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1316, file: !6, line: 28, baseType: !764, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1316, file: !6, line: 29, baseType: !766, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "coladd", scope: !1316, file: !6, line: 30, baseType: !766, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "w_curswant", scope: !1137, file: !6, line: 3385, baseType: !766, size: 32, offset: 576)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "w_set_curswant", scope: !1137, file: !6, line: 3389, baseType: !756, size: 32, offset: 608)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "w_last_cursorline", scope: !1137, file: !6, line: 3394, baseType: !764, size: 64, offset: 640)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_mode", scope: !1137, file: !6, line: 3400, baseType: !752, size: 8, offset: 704)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_lnum", scope: !1137, file: !6, line: 3401, baseType: !764, size: 64, offset: 768)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_fcol", scope: !1137, file: !6, line: 3402, baseType: !766, size: 32, offset: 832)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_lcol", scope: !1137, file: !6, line: 3403, baseType: !766, size: 32, offset: 864)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_lnum", scope: !1137, file: !6, line: 3404, baseType: !764, size: 64, offset: 896)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_col", scope: !1137, file: !6, line: 3405, baseType: !766, size: 32, offset: 960)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_curswant", scope: !1137, file: !6, line: 3406, baseType: !766, size: 32, offset: 992)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "w_lcs_chars", scope: !1137, file: !6, line: 3408, baseType: !1332, size: 352, offset: 1024)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "lcs_chars_T", file: !6, line: 3358, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3343, size: 352, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "eol", scope: !1333, file: !6, line: 3345, baseType: !756, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1333, file: !6, line: 3346, baseType: !756, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !1333, file: !6, line: 3347, baseType: !756, size: 32, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "nbsp", scope: !1333, file: !6, line: 3348, baseType: !756, size: 32, offset: 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !1333, file: !6, line: 3349, baseType: !756, size: 32, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "tab1", scope: !1333, file: !6, line: 3350, baseType: !756, size: 32, offset: 160)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "tab2", scope: !1333, file: !6, line: 3351, baseType: !756, size: 32, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "tab3", scope: !1333, file: !6, line: 3352, baseType: !756, size: 32, offset: 224)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "trail", scope: !1333, file: !6, line: 3353, baseType: !756, size: 32, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "lead", scope: !1333, file: !6, line: 3354, baseType: !756, size: 32, offset: 288)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "conceal", scope: !1333, file: !6, line: 3356, baseType: !756, size: 32, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline", scope: !1137, file: !6, line: 3414, baseType: !764, size: 64, offset: 1408)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_was_set", scope: !1137, file: !6, line: 3416, baseType: !752, size: 8, offset: 1472)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "w_botline", scope: !1137, file: !6, line: 3419, baseType: !764, size: 64, offset: 1536)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "w_topfill", scope: !1137, file: !6, line: 3423, baseType: !756, size: 32, offset: 1600)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_topfill", scope: !1137, file: !6, line: 3424, baseType: !756, size: 32, offset: 1632)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "w_botfill", scope: !1137, file: !6, line: 3425, baseType: !756, size: 32, offset: 1664)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_botfill", scope: !1137, file: !6, line: 3427, baseType: !756, size: 32, offset: 1696)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "w_leftcol", scope: !1137, file: !6, line: 3429, baseType: !766, size: 32, offset: 1728)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "w_skipcol", scope: !1137, file: !6, line: 3432, baseType: !766, size: 32, offset: 1760)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "w_empty_rows", scope: !1137, file: !6, line: 3435, baseType: !756, size: 32, offset: 1792)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "w_filler_rows", scope: !1137, file: !6, line: 3437, baseType: !756, size: 32, offset: 1824)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "w_winrow", scope: !1137, file: !6, line: 3445, baseType: !756, size: 32, offset: 1856)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "w_height", scope: !1137, file: !6, line: 3446, baseType: !756, size: 32, offset: 1888)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "w_status_height", scope: !1137, file: !6, line: 3449, baseType: !756, size: 32, offset: 1920)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "w_wincol", scope: !1137, file: !6, line: 3450, baseType: !756, size: 32, offset: 1952)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "w_width", scope: !1137, file: !6, line: 3451, baseType: !756, size: 32, offset: 1984)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "w_vsep_width", scope: !1137, file: !6, line: 3452, baseType: !756, size: 32, offset: 2016)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "w_save_cursor", scope: !1137, file: !6, line: 3454, baseType: !1364, size: 320, offset: 2048)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "pos_save_T", file: !6, line: 3330, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3324, size: 320, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_save", scope: !1365, file: !6, line: 3326, baseType: !756, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_corr", scope: !1365, file: !6, line: 3327, baseType: !756, size: 32, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor_save", scope: !1365, file: !6, line: 3328, baseType: !1315, size: 128, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor_corr", scope: !1365, file: !6, line: 3329, baseType: !1315, size: 128, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_flags", scope: !1137, file: !6, line: 3457, baseType: !756, size: 32, offset: 2368)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_handled", scope: !1137, file: !6, line: 3458, baseType: !756, size: 32, offset: 2400)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_title", scope: !1137, file: !6, line: 3459, baseType: !759, size: 64, offset: 2432)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_pos", scope: !1137, file: !6, line: 3460, baseType: !1375, size: 32, offset: 2496)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "poppos_T", file: !6, line: 2524, baseType: !36)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_fixed", scope: !1137, file: !6, line: 3461, baseType: !756, size: 32, offset: 2528)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_type", scope: !1137, file: !6, line: 3462, baseType: !756, size: 32, offset: 2560)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_win", scope: !1137, file: !6, line: 3463, baseType: !1135, size: 64, offset: 2624)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_id", scope: !1137, file: !6, line: 3464, baseType: !756, size: 32, offset: 2688)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "w_zindex", scope: !1137, file: !6, line: 3465, baseType: !756, size: 32, offset: 2720)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "w_minheight", scope: !1137, file: !6, line: 3466, baseType: !756, size: 32, offset: 2752)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "w_minwidth", scope: !1137, file: !6, line: 3467, baseType: !756, size: 32, offset: 2784)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxheight", scope: !1137, file: !6, line: 3468, baseType: !756, size: 32, offset: 2816)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxwidth", scope: !1137, file: !6, line: 3469, baseType: !756, size: 32, offset: 2848)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxwidth_opt", scope: !1137, file: !6, line: 3470, baseType: !756, size: 32, offset: 2880)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "w_wantline", scope: !1137, file: !6, line: 3471, baseType: !756, size: 32, offset: 2912)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "w_wantcol", scope: !1137, file: !6, line: 3472, baseType: !756, size: 32, offset: 2944)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "w_firstline", scope: !1137, file: !6, line: 3473, baseType: !756, size: 32, offset: 2976)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "w_want_scrollbar", scope: !1137, file: !6, line: 3474, baseType: !756, size: 32, offset: 3008)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "w_has_scrollbar", scope: !1137, file: !6, line: 3475, baseType: !756, size: 32, offset: 3040)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "w_scrollbar_highlight", scope: !1137, file: !6, line: 3476, baseType: !759, size: 64, offset: 3072)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "w_thumb_highlight", scope: !1137, file: !6, line: 3477, baseType: !759, size: 64, offset: 3136)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_padding", scope: !1137, file: !6, line: 3478, baseType: !1394, size: 128, offset: 3200)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 128, elements: !1395)
!1395 = !{!1396}
!1396 = !DISubrange(count: 4)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_border", scope: !1137, file: !6, line: 3479, baseType: !1394, size: 128, offset: 3328)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "w_border_highlight", scope: !1137, file: !6, line: 3480, baseType: !1399, size: 256, offset: 3456)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 256, elements: !1395)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "w_border_char", scope: !1137, file: !6, line: 3481, baseType: !1401, size: 256, offset: 3712)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 256, elements: !1055)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_leftoff", scope: !1137, file: !6, line: 3483, baseType: !756, size: 32, offset: 3968)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_rightoff", scope: !1137, file: !6, line: 3484, baseType: !756, size: 32, offset: 4000)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_last_changedtick", scope: !1137, file: !6, line: 3485, baseType: !757, size: 64, offset: 4032)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_changedtick", scope: !1137, file: !6, line: 3487, baseType: !757, size: 64, offset: 4096)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_topline", scope: !1137, file: !6, line: 3490, baseType: !756, size: 32, offset: 4160)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_last_curline", scope: !1137, file: !6, line: 3493, baseType: !764, size: 64, offset: 4224)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "w_close_cb", scope: !1137, file: !6, line: 3495, baseType: !983, size: 192, offset: 4288)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_cb", scope: !1137, file: !6, line: 3496, baseType: !983, size: 192, offset: 4480)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_errors", scope: !1137, file: !6, line: 3497, baseType: !756, size: 32, offset: 4672)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_mode", scope: !1137, file: !6, line: 3498, baseType: !756, size: 32, offset: 4704)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_curwin", scope: !1137, file: !6, line: 3500, baseType: !1135, size: 64, offset: 4736)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_lnum", scope: !1137, file: !6, line: 3501, baseType: !764, size: 64, offset: 4800)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mincol", scope: !1137, file: !6, line: 3502, baseType: !766, size: 32, offset: 4864)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_maxcol", scope: !1137, file: !6, line: 3503, baseType: !766, size: 32, offset: 4896)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_row", scope: !1137, file: !6, line: 3504, baseType: !756, size: 32, offset: 4928)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_mincol", scope: !1137, file: !6, line: 3505, baseType: !756, size: 32, offset: 4960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_maxcol", scope: !1137, file: !6, line: 3506, baseType: !756, size: 32, offset: 4992)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_close", scope: !1137, file: !6, line: 3507, baseType: !1420, size: 32, offset: 5024)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "popclose_T", file: !6, line: 2530, baseType: !44)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask", scope: !1137, file: !6, line: 3509, baseType: !885, size: 64, offset: 5056)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_cells", scope: !1137, file: !6, line: 3510, baseType: !759, size: 64, offset: 5120)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_height", scope: !1137, file: !6, line: 3511, baseType: !756, size: 32, offset: 5184)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_width", scope: !1137, file: !6, line: 3512, baseType: !756, size: 32, offset: 5216)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_timer", scope: !1137, file: !6, line: 3514, baseType: !1426, size: 64, offset: 5248)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "timer_T", file: !6, line: 2478, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_S", file: !6, line: 2479, size: 704, elements: !1429)
!1429 = !{!1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tr_id", scope: !1428, file: !6, line: 2481, baseType: !765, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "tr_next", scope: !1428, file: !6, line: 2483, baseType: !1426, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tr_prev", scope: !1428, file: !6, line: 2484, baseType: !1426, size: 64, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "tr_due", scope: !1428, file: !6, line: 2485, baseType: !825, size: 128, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tr_firing", scope: !1428, file: !6, line: 2486, baseType: !752, size: 8, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "tr_paused", scope: !1428, file: !6, line: 2487, baseType: !752, size: 8, offset: 328)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "tr_repeat", scope: !1428, file: !6, line: 2488, baseType: !756, size: 32, offset: 352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "tr_interval", scope: !1428, file: !6, line: 2489, baseType: !765, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "tr_callback", scope: !1428, file: !6, line: 2490, baseType: !983, size: 192, offset: 448)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "tr_emsg_count", scope: !1428, file: !6, line: 2491, baseType: !756, size: 32, offset: 640)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "w_flags", scope: !1137, file: !6, line: 3517, baseType: !756, size: 32, offset: 5312)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid", scope: !1137, file: !6, line: 3534, baseType: !756, size: 32, offset: 5344)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid_cursor", scope: !1137, file: !6, line: 3535, baseType: !1315, size: 128, offset: 5376)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid_leftcol", scope: !1137, file: !6, line: 3537, baseType: !766, size: 32, offset: 5504)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_height", scope: !1137, file: !6, line: 3543, baseType: !756, size: 32, offset: 5536)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_folded", scope: !1137, file: !6, line: 3545, baseType: !756, size: 32, offset: 5568)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_row", scope: !1137, file: !6, line: 3548, baseType: !756, size: 32, offset: 5600)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "w_virtcol", scope: !1137, file: !6, line: 3550, baseType: !766, size: 32, offset: 5632)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "w_wrow", scope: !1137, file: !6, line: 3562, baseType: !756, size: 32, offset: 5664)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "w_wcol", scope: !1137, file: !6, line: 3562, baseType: !756, size: 32, offset: 5696)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "w_lines_valid", scope: !1137, file: !6, line: 3574, baseType: !756, size: 32, offset: 5728)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "w_lines", scope: !1137, file: !6, line: 3575, baseType: !1452, size: 64, offset: 5760)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "wline_T", file: !6, line: 3225, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "w_line", file: !6, line: 3216, size: 192, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "wl_lnum", scope: !1454, file: !6, line: 3218, baseType: !764, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "wl_size", scope: !1454, file: !6, line: 3219, baseType: !1280, size: 16, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "wl_valid", scope: !1454, file: !6, line: 3220, baseType: !752, size: 8, offset: 80)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "wl_folded", scope: !1454, file: !6, line: 3222, baseType: !752, size: 8, offset: 88)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "wl_lastlnum", scope: !1454, file: !6, line: 3223, baseType: !764, size: 64, offset: 128)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "w_folds", scope: !1137, file: !6, line: 3578, baseType: !787, size: 192, offset: 5824)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "w_fold_manual", scope: !1137, file: !6, line: 3579, baseType: !752, size: 8, offset: 6016)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "w_foldinvalid", scope: !1137, file: !6, line: 3581, baseType: !752, size: 8, offset: 6024)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth", scope: !1137, file: !6, line: 3585, baseType: !756, size: 32, offset: 6048)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "w_redr_type", scope: !1137, file: !6, line: 3593, baseType: !756, size: 32, offset: 6080)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "w_upd_rows", scope: !1137, file: !6, line: 3594, baseType: !756, size: 32, offset: 6112)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "w_redraw_top", scope: !1137, file: !6, line: 3596, baseType: !764, size: 64, offset: 6144)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "w_redraw_bot", scope: !1137, file: !6, line: 3597, baseType: !764, size: 64, offset: 6208)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "w_redr_status", scope: !1137, file: !6, line: 3598, baseType: !756, size: 32, offset: 6272)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_cursor", scope: !1137, file: !6, line: 3602, baseType: !1315, size: 128, offset: 6336)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_virtcol", scope: !1137, file: !6, line: 3603, baseType: !766, size: 32, offset: 6464)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_topline", scope: !1137, file: !6, line: 3604, baseType: !764, size: 64, offset: 6528)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_line_count", scope: !1137, file: !6, line: 3605, baseType: !764, size: 64, offset: 6592)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_topfill", scope: !1137, file: !6, line: 3607, baseType: !756, size: 32, offset: 6656)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_empty", scope: !1137, file: !6, line: 3609, baseType: !752, size: 8, offset: 6688)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "w_alt_fnum", scope: !1137, file: !6, line: 3612, baseType: !756, size: 32, offset: 6720)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "w_alist", scope: !1137, file: !6, line: 3614, baseType: !1478, size: 64, offset: 6784)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "alist_T", file: !6, line: 863, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arglist", file: !6, line: 858, size: 256, elements: !1481)
!1481 = !{!1482, !1483, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "al_ga", scope: !1480, file: !6, line: 860, baseType: !787, size: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "al_refcount", scope: !1480, file: !6, line: 861, baseType: !756, size: 32, offset: 192)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1480, file: !6, line: 862, baseType: !756, size: 32, offset: 224)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "w_arg_idx", scope: !1137, file: !6, line: 3615, baseType: !756, size: 32, offset: 6848)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "w_arg_idx_invalid", scope: !1137, file: !6, line: 3617, baseType: !756, size: 32, offset: 6880)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "w_localdir", scope: !1137, file: !6, line: 3619, baseType: !759, size: 64, offset: 6912)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "w_prevdir", scope: !1137, file: !6, line: 3621, baseType: !759, size: 64, offset: 6976)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar", scope: !1137, file: !6, line: 3623, baseType: !1490, size: 64, offset: 7040)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "vimmenu_T", file: !6, line: 67, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VimMenu", file: !6, line: 3889, size: 1984, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1507, !1508, !1509, !1510, !1512, !1513, !1515, !1516, !1517, !1518, !1739, !1740, !1741}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !1492, file: !6, line: 3891, baseType: !756, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1492, file: !6, line: 3892, baseType: !756, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1492, file: !6, line: 3893, baseType: !759, size: 64, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "dname", scope: !1492, file: !6, line: 3894, baseType: !759, size: 64, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "en_name", scope: !1492, file: !6, line: 3896, baseType: !759, size: 64, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "en_dname", scope: !1492, file: !6, line: 3898, baseType: !759, size: 64, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mnemonic", scope: !1492, file: !6, line: 3901, baseType: !756, size: 32, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "actext", scope: !1492, file: !6, line: 3902, baseType: !759, size: 64, offset: 384)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1492, file: !6, line: 3903, baseType: !756, size: 32, offset: 448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1492, file: !6, line: 3905, baseType: !1504, size: 64, offset: 512)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{null, !1490}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !1492, file: !6, line: 3908, baseType: !759, size: 64, offset: 576)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "iconidx", scope: !1492, file: !6, line: 3909, baseType: !756, size: 32, offset: 640)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "icon_builtin", scope: !1492, file: !6, line: 3910, baseType: !756, size: 32, offset: 672)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "strings", scope: !1492, file: !6, line: 3912, baseType: !1511, size: 512, offset: 704)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 512, elements: !1055)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "noremap", scope: !1492, file: !6, line: 3913, baseType: !1401, size: 256, offset: 1216)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "silent", scope: !1492, file: !6, line: 3914, baseType: !1514, size: 64, offset: 1472)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 64, elements: !1055)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1492, file: !6, line: 3915, baseType: !1490, size: 64, offset: 1536)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1492, file: !6, line: 3916, baseType: !1490, size: 64, offset: 1600)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1492, file: !6, line: 3917, baseType: !1490, size: 64, offset: 1664)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1492, file: !6, line: 3923, baseType: !1519, size: 64, offset: 1728)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkWidget", file: !1521, line: 69, baseType: !1522)
!1521 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkstyle.h", directory: "/home/sahil/vim/src")
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkWidget", file: !1523, line: 530, size: 768, elements: !1524)
!1523 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkwidget.h", directory: "/home/sahil/vim/src")
!1524 = !{!1525, !1561, !1563, !1565, !1566, !1569, !1720, !1726, !1735, !1738}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1522, file: !1523, line: 538, baseType: !1526, size: 256)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkObject", file: !1527, line: 49, baseType: !1528)
!1527 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtktypeutils.h", directory: "/home/sahil/vim/src")
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkObject", file: !1529, line: 107, size: 256, elements: !1530)
!1529 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkobject.h", directory: "/home/sahil/vim/src")
!1530 = !{!1531, !1559}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1528, file: !1529, line: 109, baseType: !1532, size: 192)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "GInitiallyUnowned", file: !1533, line: 189, baseType: !1534)
!1533 = !DIFile(filename: "/usr/include/glib-2.0/gobject/gobject.h", directory: "/home/sahil/vim/src")
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GObject", file: !1533, line: 245, size: 192, elements: !1535)
!1535 = !{!1536, !1550, !1554}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "g_type_instance", scope: !1534, file: !1533, line: 247, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "GTypeInstance", file: !1538, line: 393, baseType: !1539)
!1538 = !DIFile(filename: "/usr/include/glib-2.0/gobject/gtype.h", directory: "/home/sahil/vim/src")
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GTypeInstance", file: !1538, line: 418, size: 64, elements: !1540)
!1540 = !{!1541}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "g_class", scope: !1539, file: !1538, line: 421, baseType: !1542, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "GTypeClass", file: !1538, line: 391, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GTypeClass", file: !1538, line: 408, size: 64, elements: !1545)
!1545 = !{!1546}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "g_type", scope: !1544, file: !1538, line: 411, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "GType", file: !1538, line: 384, baseType: !1548)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "gsize", file: !1549, line: 78, baseType: !755)
!1549 = !DIFile(filename: "/usr/lib/x86_64-linux-gnu/glib-2.0/include/glibconfig.h", directory: "/home/sahil/vim/src")
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1534, file: !1533, line: 250, baseType: !1551, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint", file: !1553, line: 55, baseType: !767)
!1553 = !DIFile(filename: "/usr/include/glib-2.0/glib/gtypes.h", directory: "/home/sahil/vim/src")
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "qdata", scope: !1534, file: !1533, line: 251, baseType: !1555, size: 64, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "GData", file: !1557, line: 36, baseType: !1558)
!1557 = !DIFile(filename: "/usr/include/glib-2.0/glib/gdataset.h", directory: "/home/sahil/vim/src")
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "_GData", file: !1557, line: 36, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1528, file: !1529, line: 116, baseType: !1560, size: 32, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint32", file: !1549, line: 52, baseType: !767)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "private_flags", scope: !1522, file: !1523, line: 545, baseType: !1562, size: 16, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint16", file: !1549, line: 44, baseType: !1272)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1522, file: !1523, line: 550, baseType: !1564, size: 8, offset: 272)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint8", file: !1549, line: 41, baseType: !761)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "saved_state", scope: !1522, file: !1523, line: 558, baseType: !1564, size: 8, offset: 280)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1522, file: !1523, line: 566, baseType: !1567, size: 64, offset: 320)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "gchar", file: !1553, line: 46, baseType: !752)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1522, file: !1523, line: 575, baseType: !1570, size: 64, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkStyle", file: !1521, line: 54, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkStyle", file: !1521, line: 73, size: 7872, elements: !1573)
!1573 = !{!1574, !1576, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1602, !1604, !1605, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1667, !1668, !1669, !1670, !1679, !1680, !1717, !1718, !1719}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1572, file: !1521, line: 75, baseType: !1575, size: 192)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "GObject", file: !1533, line: 187, baseType: !1534)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !1572, file: !1521, line: 79, baseType: !1577, size: 480, offset: 192)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1578, size: 480, elements: !1586)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkColor", file: !59, line: 102, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkColor", file: !1580, line: 46, size: 96, elements: !1581)
!1580 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkcolor.h", directory: "/home/sahil/vim/src")
!1581 = !{!1582, !1583, !1584, !1585}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !1579, file: !1580, line: 48, baseType: !1560, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1579, file: !1580, line: 49, baseType: !1562, size: 16, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1579, file: !1580, line: 50, baseType: !1562, size: 16, offset: 48)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1579, file: !1580, line: 51, baseType: !1562, size: 16, offset: 64)
!1586 = !{!1587}
!1587 = !DISubrange(count: 5)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !1572, file: !1521, line: 80, baseType: !1577, size: 480, offset: 672)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "light", scope: !1572, file: !1521, line: 81, baseType: !1577, size: 480, offset: 1152)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dark", scope: !1572, file: !1521, line: 82, baseType: !1577, size: 480, offset: 1632)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !1572, file: !1521, line: 83, baseType: !1577, size: 480, offset: 2112)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1572, file: !1521, line: 84, baseType: !1577, size: 480, offset: 2592)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1572, file: !1521, line: 85, baseType: !1577, size: 480, offset: 3072)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "text_aa", scope: !1572, file: !1521, line: 86, baseType: !1577, size: 480, offset: 3552)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1572, file: !1521, line: 88, baseType: !1578, size: 96, offset: 4032)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1572, file: !1521, line: 89, baseType: !1578, size: 96, offset: 4128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "font_desc", scope: !1572, file: !1521, line: 90, baseType: !1598, size: 64, offset: 4224)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "PangoFontDescription", file: !1600, line: 41, baseType: !1601)
!1600 = !DIFile(filename: "/usr/include/pango-1.0/pango/pango-font.h", directory: "/home/sahil/vim/src")
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PangoFontDescription", file: !1600, line: 41, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "xthickness", scope: !1572, file: !1521, line: 92, baseType: !1603, size: 32, offset: 4288)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "gint", file: !1553, line: 49, baseType: !756)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ythickness", scope: !1572, file: !1521, line: 93, baseType: !1603, size: 32, offset: 4320)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fg_gc", scope: !1572, file: !1521, line: 95, baseType: !1606, size: 320, offset: 4352)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1607, size: 320, elements: !1586)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkGC", file: !59, line: 106, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkGC", file: !1610, line: 189, size: 384, elements: !1611)
!1610 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkgc.h", directory: "/home/sahil/vim/src")
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1617}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1609, file: !1610, line: 191, baseType: !1575, size: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "clip_x_origin", scope: !1609, file: !1610, line: 193, baseType: !1603, size: 32, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "clip_y_origin", scope: !1609, file: !1610, line: 194, baseType: !1603, size: 32, offset: 224)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ts_x_origin", scope: !1609, file: !1610, line: 195, baseType: !1603, size: 32, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ts_y_origin", scope: !1609, file: !1610, line: 196, baseType: !1603, size: 32, offset: 288)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1609, file: !1610, line: 198, baseType: !1618, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkColormap", file: !59, line: 103, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkColormap", file: !1580, line: 68, size: 448, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1626, !1648}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1620, file: !1580, line: 71, baseType: !1575, size: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1620, file: !1580, line: 74, baseType: !1603, size: 32, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1620, file: !1580, line: 75, baseType: !1625, size: 64, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !1620, file: !1580, line: 78, baseType: !1627, size: 64, offset: 320)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkVisual", file: !59, line: 109, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkVisual", file: !50, line: 77, size: 640, elements: !1630)
!1630 = !{!1631, !1632, !1634, !1635, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1629, file: !50, line: 79, baseType: !1575, size: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1629, file: !50, line: 81, baseType: !1633, size: 32, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkVisualType", file: !50, line: 63, baseType: !49)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1629, file: !50, line: 82, baseType: !1603, size: 32, offset: 224)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !1629, file: !50, line: 83, baseType: !1636, size: 32, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkByteOrder", file: !59, line: 122, baseType: !58)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "colormap_size", scope: !1629, file: !50, line: 84, baseType: !1603, size: 32, offset: 288)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_rgb", scope: !1629, file: !50, line: 85, baseType: !1603, size: 32, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "red_mask", scope: !1629, file: !50, line: 87, baseType: !1560, size: 32, offset: 352)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "red_shift", scope: !1629, file: !50, line: 88, baseType: !1603, size: 32, offset: 384)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "red_prec", scope: !1629, file: !50, line: 89, baseType: !1603, size: 32, offset: 416)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "green_mask", scope: !1629, file: !50, line: 91, baseType: !1560, size: 32, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "green_shift", scope: !1629, file: !50, line: 92, baseType: !1603, size: 32, offset: 480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "green_prec", scope: !1629, file: !50, line: 93, baseType: !1603, size: 32, offset: 512)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "blue_mask", scope: !1629, file: !50, line: 95, baseType: !1560, size: 32, offset: 544)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "blue_shift", scope: !1629, file: !50, line: 96, baseType: !1603, size: 32, offset: 576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "blue_prec", scope: !1629, file: !50, line: 97, baseType: !1603, size: 32, offset: 608)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_data", scope: !1620, file: !1580, line: 80, baseType: !1649, size: 64, offset: 384)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpointer", file: !1553, line: 103, baseType: !750)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "bg_gc", scope: !1572, file: !1521, line: 96, baseType: !1606, size: 320, offset: 4672)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "light_gc", scope: !1572, file: !1521, line: 97, baseType: !1606, size: 320, offset: 4992)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "dark_gc", scope: !1572, file: !1521, line: 98, baseType: !1606, size: 320, offset: 5312)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "mid_gc", scope: !1572, file: !1521, line: 99, baseType: !1606, size: 320, offset: 5632)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "text_gc", scope: !1572, file: !1521, line: 100, baseType: !1606, size: 320, offset: 5952)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "base_gc", scope: !1572, file: !1521, line: 101, baseType: !1606, size: 320, offset: 6272)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "text_aa_gc", scope: !1572, file: !1521, line: 102, baseType: !1606, size: 320, offset: 6592)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "black_gc", scope: !1572, file: !1521, line: 103, baseType: !1607, size: 64, offset: 6912)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "white_gc", scope: !1572, file: !1521, line: 104, baseType: !1607, size: 64, offset: 6976)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "bg_pixmap", scope: !1572, file: !1521, line: 106, baseType: !1660, size: 320, offset: 7040)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 320, elements: !1586)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkPixmap", file: !59, line: 113, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkDrawable", file: !1664, line: 53, size: 192, elements: !1665)
!1664 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkdrawable.h", directory: "/home/sahil/vim/src")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1663, file: !1664, line: 55, baseType: !1575, size: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "attach_count", scope: !1572, file: !1521, line: 110, baseType: !1603, size: 32, offset: 7360)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1572, file: !1521, line: 112, baseType: !1603, size: 32, offset: 7392)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1572, file: !1521, line: 113, baseType: !1618, size: 64, offset: 7424)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "private_font", scope: !1572, file: !1521, line: 114, baseType: !1671, size: 64, offset: 7488)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkFont", file: !59, line: 105, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkFont", file: !64, line: 49, size: 96, elements: !1674)
!1674 = !{!1675, !1677, !1678}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1673, file: !64, line: 51, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkFontType", file: !64, line: 47, baseType: !63)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ascent", scope: !1673, file: !64, line: 52, baseType: !1603, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "descent", scope: !1673, file: !64, line: 53, baseType: !1603, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "private_font_desc", scope: !1572, file: !1521, line: 115, baseType: !1598, size: 64, offset: 7552)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rc_style", scope: !1572, file: !1521, line: 118, baseType: !1681, size: 64, offset: 7616)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRcStyle", file: !1521, line: 57, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkRcStyle", file: !69, line: 60, size: 3072, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1689, !1690, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1707, !1715, !1716}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1683, file: !69, line: 62, baseType: !1575, size: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1683, file: !69, line: 66, baseType: !1567, size: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "bg_pixmap_name", scope: !1683, file: !69, line: 67, baseType: !1688, size: 320, offset: 256)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 320, elements: !1586)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "font_desc", scope: !1683, file: !69, line: 68, baseType: !1598, size: 64, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "color_flags", scope: !1683, file: !69, line: 70, baseType: !1691, size: 160, offset: 640)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 160, elements: !1586)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRcFlags", file: !69, line: 58, baseType: !68)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !1683, file: !69, line: 71, baseType: !1577, size: 480, offset: 800)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !1683, file: !69, line: 72, baseType: !1577, size: 480, offset: 1280)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1683, file: !69, line: 73, baseType: !1577, size: 480, offset: 1760)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1683, file: !69, line: 74, baseType: !1577, size: 480, offset: 2240)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "xthickness", scope: !1683, file: !69, line: 76, baseType: !1603, size: 32, offset: 2720)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ythickness", scope: !1683, file: !69, line: 77, baseType: !1603, size: 32, offset: 2752)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rc_properties", scope: !1683, file: !69, line: 80, baseType: !1700, size: 64, offset: 2816)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "GArray", file: !1702, line: 37, baseType: !1703)
!1702 = !DIFile(filename: "/usr/include/glib-2.0/glib/garray.h", directory: "/home/sahil/vim/src")
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GArray", file: !1702, line: 41, size: 128, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1703, file: !1702, line: 43, baseType: !1567, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1703, file: !1702, line: 44, baseType: !1552, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rc_style_lists", scope: !1683, file: !69, line: 83, baseType: !1708, size: 64, offset: 2880)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSList", file: !1710, line: 37, baseType: !1711)
!1710 = !DIFile(filename: "/usr/include/glib-2.0/glib/gslist.h", directory: "/home/sahil/vim/src")
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GSList", file: !1710, line: 39, size: 128, elements: !1712)
!1712 = !{!1713, !1714}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1711, file: !1710, line: 41, baseType: !1649, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1711, file: !1710, line: 42, baseType: !1708, size: 64, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "icon_factories", scope: !1683, file: !69, line: 85, baseType: !1708, size: 64, offset: 2944)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "engine_specified", scope: !1683, file: !69, line: 87, baseType: !1552, size: 1, offset: 3008, flags: DIFlagBitField, extraData: i64 3008)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "styles", scope: !1572, file: !1521, line: 120, baseType: !1708, size: 64, offset: 7680)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "property_cache", scope: !1572, file: !1521, line: 121, baseType: !1700, size: 64, offset: 7744)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "icon_factories", scope: !1572, file: !1521, line: 122, baseType: !1708, size: 64, offset: 7808)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "requisition", scope: !1522, file: !1523, line: 579, baseType: !1721, size: 64, offset: 448)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRequisition", file: !1523, line: 478, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkRequisition", file: !1523, line: 519, size: 64, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1722, file: !1523, line: 521, baseType: !1603, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1722, file: !1523, line: 522, baseType: !1603, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "allocation", scope: !1522, file: !1523, line: 583, baseType: !1727, size: 128, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkAllocation", file: !1523, line: 498, baseType: !1728)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkRectangle", file: !59, line: 69, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkRectangle", file: !59, line: 200, size: 128, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1729, file: !59, line: 202, baseType: !1603, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1729, file: !59, line: 203, baseType: !1603, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1729, file: !59, line: 204, baseType: !1603, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1729, file: !59, line: 205, baseType: !1603, size: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1522, file: !1523, line: 589, baseType: !1736, size: 64, offset: 640)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkWindow", file: !59, line: 114, baseType: !1663)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1522, file: !1523, line: 593, baseType: !1519, size: 64, offset: 704)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "submenu_id", scope: !1492, file: !6, line: 3924, baseType: !1519, size: 64, offset: 1792)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "tearoff_handle", scope: !1492, file: !6, line: 3926, baseType: !1519, size: 64, offset: 1856)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1492, file: !6, line: 3928, baseType: !1519, size: 64, offset: 1920)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar_items", scope: !1137, file: !6, line: 3624, baseType: !1743, size: 64, offset: 7104)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "winbar_item_T", file: !6, line: 3337, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3333, size: 128, elements: !1746)
!1746 = !{!1747, !1748, !1749}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "wb_startcol", scope: !1745, file: !6, line: 3334, baseType: !756, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "wb_endcol", scope: !1745, file: !6, line: 3335, baseType: !756, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "wb_menu", scope: !1745, file: !6, line: 3336, baseType: !1490, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar_height", scope: !1137, file: !6, line: 3625, baseType: !756, size: 32, offset: 7168)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "w_onebuf_opt", scope: !1137, file: !6, line: 3635, baseType: !1752, size: 11008, offset: 7232)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "winopt_T", file: !6, line: 313, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 172, size: 11008, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "wo_arab", scope: !1753, file: !6, line: 175, baseType: !756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "wo_bri", scope: !1753, file: !6, line: 179, baseType: !756, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "wo_briopt", scope: !1753, file: !6, line: 181, baseType: !759, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wcr", scope: !1753, file: !6, line: 184, baseType: !759, size: 64, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "wo_diff", scope: !1753, file: !6, line: 187, baseType: !756, size: 32, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdc", scope: !1753, file: !6, line: 191, baseType: !765, size: 64, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdc_save", scope: !1753, file: !6, line: 193, baseType: !756, size: 32, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fen", scope: !1753, file: !6, line: 195, baseType: !756, size: 32, offset: 352)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fen_save", scope: !1753, file: !6, line: 197, baseType: !756, size: 32, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdi", scope: !1753, file: !6, line: 199, baseType: !759, size: 64, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdl", scope: !1753, file: !6, line: 201, baseType: !765, size: 64, offset: 512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdl_save", scope: !1753, file: !6, line: 203, baseType: !756, size: 32, offset: 576)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdm", scope: !1753, file: !6, line: 205, baseType: !759, size: 64, offset: 640)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdm_save", scope: !1753, file: !6, line: 207, baseType: !759, size: 64, offset: 704)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fml", scope: !1753, file: !6, line: 209, baseType: !765, size: 64, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdn", scope: !1753, file: !6, line: 211, baseType: !765, size: 64, offset: 832)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fde", scope: !1753, file: !6, line: 214, baseType: !759, size: 64, offset: 896)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdt", scope: !1753, file: !6, line: 216, baseType: !759, size: 64, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fmr", scope: !1753, file: !6, line: 219, baseType: !759, size: 64, offset: 1024)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "wo_lbr", scope: !1753, file: !6, line: 223, baseType: !756, size: 32, offset: 1088)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "wo_list", scope: !1753, file: !6, line: 226, baseType: !756, size: 32, offset: 1120)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "wo_lcs", scope: !1753, file: !6, line: 228, baseType: !759, size: 64, offset: 1152)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "wo_nu", scope: !1753, file: !6, line: 230, baseType: !756, size: 32, offset: 1216)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rnu", scope: !1753, file: !6, line: 232, baseType: !756, size: 32, offset: 1248)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "wo_nuw", scope: !1753, file: !6, line: 235, baseType: !765, size: 64, offset: 1280)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wfh", scope: !1753, file: !6, line: 238, baseType: !756, size: 32, offset: 1344)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wfw", scope: !1753, file: !6, line: 240, baseType: !756, size: 32, offset: 1376)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "wo_pvw", scope: !1753, file: !6, line: 243, baseType: !756, size: 32, offset: 1408)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rl", scope: !1753, file: !6, line: 247, baseType: !756, size: 32, offset: 1440)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rlc", scope: !1753, file: !6, line: 249, baseType: !759, size: 64, offset: 1472)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scr", scope: !1753, file: !6, line: 252, baseType: !765, size: 64, offset: 1536)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "wo_spell", scope: !1753, file: !6, line: 255, baseType: !756, size: 32, offset: 1600)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cuc", scope: !1753, file: !6, line: 259, baseType: !756, size: 32, offset: 1632)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cul", scope: !1753, file: !6, line: 261, baseType: !756, size: 32, offset: 1664)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "wo_culopt", scope: !1753, file: !6, line: 263, baseType: !759, size: 64, offset: 1728)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cc", scope: !1753, file: !6, line: 265, baseType: !759, size: 64, offset: 1792)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "wo_sbr", scope: !1753, file: !6, line: 269, baseType: !759, size: 64, offset: 1856)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "wo_stl", scope: !1753, file: !6, line: 273, baseType: !759, size: 64, offset: 1920)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scb", scope: !1753, file: !6, line: 276, baseType: !756, size: 32, offset: 1984)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "wo_diff_saved", scope: !1753, file: !6, line: 278, baseType: !756, size: 32, offset: 2016)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scb_save", scope: !1753, file: !6, line: 280, baseType: !756, size: 32, offset: 2048)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wrap", scope: !1753, file: !6, line: 282, baseType: !756, size: 32, offset: 2080)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wrap_save", scope: !1753, file: !6, line: 285, baseType: !756, size: 32, offset: 2112)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cocu", scope: !1753, file: !6, line: 289, baseType: !759, size: 64, offset: 2176)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cole", scope: !1753, file: !6, line: 291, baseType: !765, size: 64, offset: 2240)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "wo_crb", scope: !1753, file: !6, line: 294, baseType: !756, size: 32, offset: 2304)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "wo_crb_save", scope: !1753, file: !6, line: 296, baseType: !756, size: 32, offset: 2336)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scl", scope: !1753, file: !6, line: 299, baseType: !759, size: 64, offset: 2368)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "wo_twk", scope: !1753, file: !6, line: 303, baseType: !759, size: 64, offset: 2432)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "wo_tws", scope: !1753, file: !6, line: 305, baseType: !759, size: 64, offset: 2496)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "wo_script_ctx", scope: !1753, file: !6, line: 310, baseType: !1806, size: 8448, offset: 2560)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 8448, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 44)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "w_allbuf_opt", scope: !1137, file: !6, line: 3636, baseType: !1752, size: 11008, offset: 18240)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_stl_flags", scope: !1137, file: !6, line: 3640, baseType: !942, size: 64, offset: 29248)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_fde_flags", scope: !1137, file: !6, line: 3643, baseType: !942, size: 64, offset: 29312)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_fdt_flags", scope: !1137, file: !6, line: 3644, baseType: !942, size: 64, offset: 29376)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_cc_cols", scope: !1137, file: !6, line: 3647, baseType: !819, size: 64, offset: 29440)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_culopt_flags", scope: !1137, file: !6, line: 3648, baseType: !760, size: 8, offset: 29504)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_siso", scope: !1137, file: !6, line: 3650, baseType: !765, size: 64, offset: 29568)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_so", scope: !1137, file: !6, line: 3651, baseType: !765, size: 64, offset: 29632)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_min", scope: !1137, file: !6, line: 3654, baseType: !756, size: 32, offset: 29696)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_shift", scope: !1137, file: !6, line: 3655, baseType: !756, size: 32, offset: 29728)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_sbr", scope: !1137, file: !6, line: 3656, baseType: !756, size: 32, offset: 29760)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "w_scbind_pos", scope: !1137, file: !6, line: 3662, baseType: !765, size: 64, offset: 29824)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "w_winvar", scope: !1137, file: !6, line: 3665, baseType: !869, size: 192, offset: 29888)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "w_vars", scope: !1137, file: !6, line: 3666, baseType: !929, size: 64, offset: 30080)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "w_pcmark", scope: !1137, file: !6, line: 3674, baseType: !1315, size: 128, offset: 30144)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev_pcmark", scope: !1137, file: !6, line: 3675, baseType: !1315, size: 128, offset: 30272)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplist", scope: !1137, file: !6, line: 3681, baseType: !1826, size: 32000, offset: 30400)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 32000, elements: !1841)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "xfmark_T", file: !6, line: 153, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xfilemark", file: !6, line: 146, size: 320, elements: !1829)
!1829 = !{!1830, !1836, !1837}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "fmark", scope: !1828, file: !6, line: 148, baseType: !1831, size: 192)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmark_T", file: !6, line: 143, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "filemark", file: !6, line: 139, size: 192, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !1832, file: !6, line: 141, baseType: !1315, size: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "fnum", scope: !1832, file: !6, line: 142, baseType: !756, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !1828, file: !6, line: 149, baseType: !759, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "time_set", scope: !1828, file: !6, line: 151, baseType: !1838, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_T", file: !698, line: 1809, baseType: !1839)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1840, line: 7, baseType: !830)
!1840 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "/home/sahil/vim/src")
!1841 = !{!1842}
!1842 = !DISubrange(count: 100)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplistlen", scope: !1137, file: !6, line: 3682, baseType: !756, size: 32, offset: 62400)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplistidx", scope: !1137, file: !6, line: 3683, baseType: !756, size: 32, offset: 62432)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "w_changelistidx", scope: !1137, file: !6, line: 3685, baseType: !756, size: 32, offset: 62464)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "w_match_head", scope: !1137, file: !6, line: 3689, baseType: !1847, size: 64, offset: 62528)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "matchitem_T", file: !6, line: 3306, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "matchitem", file: !6, line: 3307, size: 7360, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1871, !1885, !1886}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1849, file: !6, line: 3309, baseType: !1847, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1849, file: !6, line: 3310, baseType: !756, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1849, file: !6, line: 3311, baseType: !756, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !1849, file: !6, line: 3312, baseType: !759, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1849, file: !6, line: 3313, baseType: !1206, size: 2688, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1849, file: !6, line: 3314, baseType: !1857, size: 1216, offset: 2880)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "posmatch_T", file: !6, line: 3293, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posmatch", file: !6, line: 3294, size: 1216, elements: !1859)
!1859 = !{!1860, !1868, !1869, !1870}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1858, file: !6, line: 3296, baseType: !1861, size: 1024)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 1024, elements: !1055)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "llpos_T", file: !6, line: 3287, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3282, size: 128, elements: !1864)
!1864 = !{!1865, !1866, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1863, file: !6, line: 3284, baseType: !764, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1863, file: !6, line: 3285, baseType: !766, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1863, file: !6, line: 3286, baseType: !756, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1858, file: !6, line: 3297, baseType: !756, size: 32, offset: 1024)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "toplnum", scope: !1858, file: !6, line: 3298, baseType: !764, size: 64, offset: 1088)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "botlnum", scope: !1858, file: !6, line: 3299, baseType: !764, size: 64, offset: 1152)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "hl", scope: !1849, file: !6, line: 3315, baseType: !1872, size: 3200, offset: 4096)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "match_T", file: !6, line: 3274, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3258, size: 3200, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !1873, file: !6, line: 3260, baseType: !1206, size: 2688)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1873, file: !6, line: 3262, baseType: !990, size: 64, offset: 2688)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1873, file: !6, line: 3263, baseType: !764, size: 64, offset: 2752)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1873, file: !6, line: 3264, baseType: !756, size: 32, offset: 2816)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "attr_cur", scope: !1873, file: !6, line: 3265, baseType: !756, size: 32, offset: 2848)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "first_lnum", scope: !1873, file: !6, line: 3266, baseType: !764, size: 64, offset: 2880)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "startcol", scope: !1873, file: !6, line: 3267, baseType: !766, size: 32, offset: 2944)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "endcol", scope: !1873, file: !6, line: 3268, baseType: !766, size: 32, offset: 2976)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "is_addpos", scope: !1873, file: !6, line: 3269, baseType: !756, size: 32, offset: 3008)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "tm", scope: !1873, file: !6, line: 3272, baseType: !825, size: 128, offset: 3072)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "hlg_id", scope: !1849, file: !6, line: 3316, baseType: !756, size: 32, offset: 7296)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "conceal_char", scope: !1849, file: !6, line: 3318, baseType: !756, size: 32, offset: 7328)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "w_next_match_id", scope: !1137, file: !6, line: 3690, baseType: !756, size: 32, offset: 62592)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstack", scope: !1137, file: !6, line: 3699, baseType: !1889, size: 7680, offset: 62656)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 7680, elements: !1898)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "taggy_T", file: !6, line: 165, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "taggy", file: !6, line: 158, size: 384, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "tagname", scope: !1891, file: !6, line: 160, baseType: !759, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "fmark", scope: !1891, file: !6, line: 161, baseType: !1831, size: 192, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "cur_match", scope: !1891, file: !6, line: 162, baseType: !756, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cur_fnum", scope: !1891, file: !6, line: 163, baseType: !756, size: 32, offset: 288)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1891, file: !6, line: 164, baseType: !759, size: 64, offset: 320)
!1898 = !{!1899}
!1899 = !DISubrange(count: 20)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstackidx", scope: !1137, file: !6, line: 3700, baseType: !756, size: 32, offset: 70336)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstacklen", scope: !1137, file: !6, line: 3701, baseType: !756, size: 32, offset: 70368)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "w_fraction", scope: !1137, file: !6, line: 3709, baseType: !756, size: 32, offset: 70400)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev_fraction_row", scope: !1137, file: !6, line: 3710, baseType: !756, size: 32, offset: 70432)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "w_scrollbars", scope: !1137, file: !6, line: 3713, baseType: !1905, size: 1280, offset: 70464)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 1280, elements: !1922)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "scrollbar_T", file: !1907, line: 196, baseType: !1908)
!1907 = !DIFile(filename: "./gui.h", directory: "/home/sahil/vim/src")
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GuiScrollbar", file: !1907, line: 157, size: 640, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !1908, file: !1907, line: 159, baseType: !765, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1908, file: !1907, line: 160, baseType: !1135, size: 64, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1908, file: !1907, line: 161, baseType: !756, size: 32, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1908, file: !1907, line: 162, baseType: !765, size: 64, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1908, file: !1907, line: 166, baseType: !765, size: 64, offset: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1908, file: !1907, line: 167, baseType: !765, size: 64, offset: 320)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1908, file: !1907, line: 170, baseType: !756, size: 32, offset: 384)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1908, file: !1907, line: 171, baseType: !756, size: 32, offset: 416)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1908, file: !1907, line: 172, baseType: !756, size: 32, offset: 448)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "status_height", scope: !1908, file: !1907, line: 173, baseType: !756, size: 32, offset: 480)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1908, file: !1907, line: 178, baseType: !1519, size: 64, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "handler_id", scope: !1908, file: !1907, line: 179, baseType: !755, size: 64, offset: 576)
!1922 = !{!1923}
!1923 = !DISubrange(count: 2)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth_line_count", scope: !1137, file: !6, line: 3716, baseType: !764, size: 64, offset: 71744)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "w_nuw_cached", scope: !1137, file: !6, line: 3718, baseType: !765, size: 64, offset: 71808)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth_width", scope: !1137, file: !6, line: 3719, baseType: !756, size: 32, offset: 71872)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "w_llist", scope: !1137, file: !6, line: 3723, baseType: !1928, size: 64, offset: 71936)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "qf_info_T", file: !6, line: 2464, baseType: !1930)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "qf_info_S", file: !6, line: 2464, flags: DIFlagFwdDecl)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "w_llist_ref", scope: !1137, file: !6, line: 3728, baseType: !1928, size: 64, offset: 72000)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "wi_fpos", scope: !1130, file: !6, line: 330, baseType: !1315, size: 128, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "wi_optset", scope: !1130, file: !6, line: 331, baseType: !756, size: 32, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "wi_opt", scope: !1130, file: !6, line: 332, baseType: !1752, size: 11008, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "wi_fold_manual", scope: !1130, file: !6, line: 334, baseType: !756, size: 32, offset: 11392)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "wi_folds", scope: !1130, file: !6, line: 335, baseType: !787, size: 192, offset: 11456)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "b_mtime", scope: !992, file: !6, line: 2701, baseType: !765, size: 64, offset: 2432)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "b_mtime_read", scope: !992, file: !6, line: 2702, baseType: !765, size: 64, offset: 2496)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "b_orig_size", scope: !992, file: !6, line: 2703, baseType: !1940, size: 64, offset: 2560)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_T", file: !698, line: 384, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1942, line: 63, baseType: !1943)
!1942 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/sahil/vim/src")
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !831, line: 152, baseType: !765)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "b_orig_mode", scope: !992, file: !6, line: 2704, baseType: !756, size: 32, offset: 2624)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_used", scope: !992, file: !6, line: 2706, baseType: !1838, size: 64, offset: 2688)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "b_namedm", scope: !992, file: !6, line: 2710, baseType: !1947, size: 3328, offset: 2752)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 3328, elements: !1948)
!1948 = !{!1949}
!1949 = !DISubrange(count: 26)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "b_visual", scope: !992, file: !6, line: 2713, baseType: !1951, size: 320, offset: 6080)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "visualinfo_T", file: !6, line: 361, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 355, size: 320, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "vi_start", scope: !1952, file: !6, line: 357, baseType: !1315, size: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "vi_end", scope: !1952, file: !6, line: 358, baseType: !1315, size: 128, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "vi_mode", scope: !1952, file: !6, line: 359, baseType: !756, size: 32, offset: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "vi_curswant", scope: !1952, file: !6, line: 360, baseType: !766, size: 32, offset: 288)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "b_visual_mode_eval", scope: !992, file: !6, line: 2715, baseType: !756, size: 32, offset: 6400)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_cursor", scope: !992, file: !6, line: 2718, baseType: !1315, size: 128, offset: 6464)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_insert", scope: !992, file: !6, line: 2720, baseType: !1315, size: 128, offset: 6592)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_change", scope: !992, file: !6, line: 2721, baseType: !1315, size: 128, offset: 6720)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "b_changelist", scope: !992, file: !6, line: 2727, baseType: !1963, size: 12800, offset: 6848)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 12800, elements: !1841)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "b_changelistlen", scope: !992, file: !6, line: 2728, baseType: !756, size: 32, offset: 19648)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "b_new_change", scope: !992, file: !6, line: 2729, baseType: !756, size: 32, offset: 19680)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "b_chartab", scope: !992, file: !6, line: 2736, baseType: !1294, size: 256, offset: 19712)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "b_maphash", scope: !992, file: !6, line: 2739, baseType: !1968, size: 16384, offset: 19968)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 16384, elements: !1284)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "mapblock_T", file: !6, line: 1218, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mapblock", file: !6, line: 1219, size: 704, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "m_next", scope: !1971, file: !6, line: 1221, baseType: !1969, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "m_keys", scope: !1971, file: !6, line: 1222, baseType: !759, size: 64, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "m_str", scope: !1971, file: !6, line: 1223, baseType: !759, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "m_orig_str", scope: !1971, file: !6, line: 1224, baseType: !759, size: 64, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "m_keylen", scope: !1971, file: !6, line: 1225, baseType: !756, size: 32, offset: 256)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "m_mode", scope: !1971, file: !6, line: 1226, baseType: !756, size: 32, offset: 288)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "m_simplified", scope: !1971, file: !6, line: 1227, baseType: !756, size: 32, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "m_noremap", scope: !1971, file: !6, line: 1229, baseType: !756, size: 32, offset: 352)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "m_silent", scope: !1971, file: !6, line: 1230, baseType: !752, size: 8, offset: 384)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "m_nowait", scope: !1971, file: !6, line: 1231, baseType: !752, size: 8, offset: 392)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "m_script_ctx", scope: !1971, file: !6, line: 1233, baseType: !846, size: 192, offset: 448)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "m_expr", scope: !1971, file: !6, line: 1234, baseType: !752, size: 8, offset: 640)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "b_first_abbr", scope: !992, file: !6, line: 2742, baseType: !1969, size: 64, offset: 36352)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "b_ucmds", scope: !992, file: !6, line: 2745, baseType: !787, size: 192, offset: 36416)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_start", scope: !992, file: !6, line: 2747, baseType: !1315, size: 128, offset: 36608)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_start_orig", scope: !992, file: !6, line: 2748, baseType: !1315, size: 128, offset: 36736)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_end", scope: !992, file: !6, line: 2749, baseType: !1315, size: 128, offset: 36864)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "b_marks_read", scope: !992, file: !6, line: 2752, baseType: !756, size: 32, offset: 36992)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_oldhead", scope: !992, file: !6, line: 2758, baseType: !1992, size: 64, offset: 37056)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_header_T", file: !6, line: 376, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u_header", file: !6, line: 390, size: 4544, elements: !1995)
!1995 = !{!1996, !2001, !2006, !2011, !2016, !2017, !2018, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "uh_next", scope: !1994, file: !6, line: 397, baseType: !1997, size: 64)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !6, line: 394, size: 64, elements: !1998)
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1997, file: !6, line: 395, baseType: !1992, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1997, file: !6, line: 396, baseType: !765, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "uh_prev", scope: !1994, file: !6, line: 401, baseType: !2002, size: 64, offset: 64)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !6, line: 398, size: 64, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2002, file: !6, line: 399, baseType: !1992, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2002, file: !6, line: 400, baseType: !765, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "uh_alt_next", scope: !1994, file: !6, line: 405, baseType: !2007, size: 64, offset: 128)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !6, line: 402, size: 64, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2007, file: !6, line: 403, baseType: !1992, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2007, file: !6, line: 404, baseType: !765, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "uh_alt_prev", scope: !1994, file: !6, line: 409, baseType: !2012, size: 64, offset: 192)
!2012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !6, line: 406, size: 64, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2012, file: !6, line: 407, baseType: !1992, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2012, file: !6, line: 408, baseType: !765, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "uh_seq", scope: !1994, file: !6, line: 410, baseType: !765, size: 64, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "uh_walk", scope: !1994, file: !6, line: 411, baseType: !756, size: 32, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "uh_entry", scope: !1994, file: !6, line: 412, baseType: !2019, size: 64, offset: 384)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_entry_T", file: !6, line: 375, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u_entry", file: !6, line: 377, size: 384, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2034}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ue_next", scope: !2021, file: !6, line: 379, baseType: !2019, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ue_top", scope: !2021, file: !6, line: 380, baseType: !764, size: 64, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ue_bot", scope: !2021, file: !6, line: 381, baseType: !764, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ue_lcount", scope: !2021, file: !6, line: 382, baseType: !764, size: 64, offset: 192)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ue_array", scope: !2021, file: !6, line: 383, baseType: !2028, size: 64, offset: 256)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "undoline_T", file: !6, line: 373, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 369, size: 128, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ul_line", scope: !2030, file: !6, line: 370, baseType: !759, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ul_len", scope: !2030, file: !6, line: 371, baseType: !765, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ue_size", scope: !2021, file: !6, line: 384, baseType: !765, size: 64, offset: 320)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "uh_getbot_entry", scope: !1994, file: !6, line: 413, baseType: !2019, size: 64, offset: 448)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "uh_cursor", scope: !1994, file: !6, line: 414, baseType: !1315, size: 128, offset: 512)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "uh_cursor_vcol", scope: !1994, file: !6, line: 415, baseType: !765, size: 64, offset: 640)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "uh_flags", scope: !1994, file: !6, line: 416, baseType: !756, size: 32, offset: 704)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "uh_namedm", scope: !1994, file: !6, line: 417, baseType: !1947, size: 3328, offset: 768)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "uh_visual", scope: !1994, file: !6, line: 418, baseType: !1951, size: 320, offset: 4096)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "uh_time", scope: !1994, file: !6, line: 419, baseType: !1838, size: 64, offset: 4416)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "uh_save_nr", scope: !1994, file: !6, line: 420, baseType: !765, size: 64, offset: 4480)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_newhead", scope: !992, file: !6, line: 2759, baseType: !1992, size: 64, offset: 37120)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_curhead", scope: !992, file: !6, line: 2761, baseType: !1992, size: 64, offset: 37184)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_numhead", scope: !992, file: !6, line: 2762, baseType: !756, size: 32, offset: 37248)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_synced", scope: !992, file: !6, line: 2763, baseType: !756, size: 32, offset: 37280)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_seq_last", scope: !992, file: !6, line: 2764, baseType: !765, size: 64, offset: 37312)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_save_nr_last", scope: !992, file: !6, line: 2765, baseType: !765, size: 64, offset: 37376)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_seq_cur", scope: !992, file: !6, line: 2766, baseType: !765, size: 64, offset: 37440)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_time_cur", scope: !992, file: !6, line: 2767, baseType: !1838, size: 64, offset: 37504)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_save_nr_cur", scope: !992, file: !6, line: 2768, baseType: !765, size: 64, offset: 37568)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_ptr", scope: !992, file: !6, line: 2773, baseType: !2029, size: 128, offset: 37632)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_lnum", scope: !992, file: !6, line: 2774, baseType: !764, size: 64, offset: 37760)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_colnr", scope: !992, file: !6, line: 2775, baseType: !766, size: 32, offset: 37824)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "b_scanned", scope: !992, file: !6, line: 2777, baseType: !756, size: 32, offset: 37856)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_iminsert", scope: !992, file: !6, line: 2780, baseType: !765, size: 64, offset: 37888)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_imsearch", scope: !992, file: !6, line: 2781, baseType: !765, size: 64, offset: 37952)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "b_kmap_state", scope: !992, file: !6, line: 2789, baseType: !1162, size: 16, offset: 38016)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "b_kmap_ga", scope: !992, file: !6, line: 2792, baseType: !787, size: 192, offset: 38080)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_initialized", scope: !992, file: !6, line: 2800, baseType: !756, size: 32, offset: 38272)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_script_ctx", scope: !992, file: !6, line: 2803, baseType: !2062, size: 16128, offset: 38336)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 16128, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: 84)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ai", scope: !992, file: !6, line: 2806, baseType: !756, size: 32, offset: 54464)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ai_nopaste", scope: !992, file: !6, line: 2807, baseType: !756, size: 32, offset: 54496)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bkc", scope: !992, file: !6, line: 2808, baseType: !759, size: 64, offset: 54528)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "b_bkc_flags", scope: !992, file: !6, line: 2809, baseType: !767, size: 32, offset: 54592)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ci", scope: !992, file: !6, line: 2810, baseType: !756, size: 32, offset: 54624)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bin", scope: !992, file: !6, line: 2811, baseType: !756, size: 32, offset: 54656)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bomb", scope: !992, file: !6, line: 2812, baseType: !756, size: 32, offset: 54688)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bh", scope: !992, file: !6, line: 2813, baseType: !759, size: 64, offset: 54720)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bt", scope: !992, file: !6, line: 2814, baseType: !759, size: 64, offset: 54784)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_qf_entry", scope: !992, file: !6, line: 2818, baseType: !756, size: 32, offset: 54848)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bl", scope: !992, file: !6, line: 2820, baseType: !756, size: 32, offset: 54880)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cin", scope: !992, file: !6, line: 2822, baseType: !756, size: 32, offset: 54912)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cino", scope: !992, file: !6, line: 2823, baseType: !759, size: 64, offset: 54976)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cink", scope: !992, file: !6, line: 2824, baseType: !759, size: 64, offset: 55040)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cinw", scope: !992, file: !6, line: 2827, baseType: !759, size: 64, offset: 55104)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_com", scope: !992, file: !6, line: 2829, baseType: !759, size: 64, offset: 55168)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cms", scope: !992, file: !6, line: 2831, baseType: !759, size: 64, offset: 55232)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cpt", scope: !992, file: !6, line: 2833, baseType: !759, size: 64, offset: 55296)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cfu", scope: !992, file: !6, line: 2838, baseType: !759, size: 64, offset: 55360)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ofu", scope: !992, file: !6, line: 2839, baseType: !759, size: 64, offset: 55424)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tfu", scope: !992, file: !6, line: 2842, baseType: !759, size: 64, offset: 55488)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_eol", scope: !992, file: !6, line: 2844, baseType: !756, size: 32, offset: 55552)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fixeol", scope: !992, file: !6, line: 2845, baseType: !756, size: 32, offset: 55584)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et", scope: !992, file: !6, line: 2846, baseType: !756, size: 32, offset: 55616)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et_nobin", scope: !992, file: !6, line: 2847, baseType: !756, size: 32, offset: 55648)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et_nopaste", scope: !992, file: !6, line: 2848, baseType: !756, size: 32, offset: 55680)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fenc", scope: !992, file: !6, line: 2849, baseType: !759, size: 64, offset: 55744)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ff", scope: !992, file: !6, line: 2850, baseType: !759, size: 64, offset: 55808)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ft", scope: !992, file: !6, line: 2851, baseType: !759, size: 64, offset: 55872)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fo", scope: !992, file: !6, line: 2852, baseType: !759, size: 64, offset: 55936)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_flp", scope: !992, file: !6, line: 2853, baseType: !759, size: 64, offset: 56000)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inf", scope: !992, file: !6, line: 2854, baseType: !756, size: 32, offset: 56064)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_isk", scope: !992, file: !6, line: 2855, baseType: !759, size: 64, offset: 56128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_def", scope: !992, file: !6, line: 2857, baseType: !759, size: 64, offset: 56192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inc", scope: !992, file: !6, line: 2858, baseType: !759, size: 64, offset: 56256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inex", scope: !992, file: !6, line: 2860, baseType: !759, size: 64, offset: 56320)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inex_flags", scope: !992, file: !6, line: 2861, baseType: !942, size: 64, offset: 56384)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inde", scope: !992, file: !6, line: 2865, baseType: !759, size: 64, offset: 56448)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inde_flags", scope: !992, file: !6, line: 2866, baseType: !942, size: 64, offset: 56512)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_indk", scope: !992, file: !6, line: 2867, baseType: !759, size: 64, offset: 56576)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fp", scope: !992, file: !6, line: 2869, baseType: !759, size: 64, offset: 56640)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fex", scope: !992, file: !6, line: 2871, baseType: !759, size: 64, offset: 56704)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fex_flags", scope: !992, file: !6, line: 2872, baseType: !942, size: 64, offset: 56768)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_key", scope: !992, file: !6, line: 2875, baseType: !759, size: 64, offset: 56832)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_kp", scope: !992, file: !6, line: 2877, baseType: !759, size: 64, offset: 56896)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_lisp", scope: !992, file: !6, line: 2879, baseType: !756, size: 32, offset: 56960)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_menc", scope: !992, file: !6, line: 2881, baseType: !759, size: 64, offset: 57024)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_mps", scope: !992, file: !6, line: 2882, baseType: !759, size: 64, offset: 57088)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ml", scope: !992, file: !6, line: 2883, baseType: !756, size: 32, offset: 57152)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ml_nobin", scope: !992, file: !6, line: 2884, baseType: !756, size: 32, offset: 57184)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ma", scope: !992, file: !6, line: 2885, baseType: !756, size: 32, offset: 57216)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_nf", scope: !992, file: !6, line: 2886, baseType: !759, size: 64, offset: 57280)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_pi", scope: !992, file: !6, line: 2887, baseType: !756, size: 32, offset: 57344)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_qe", scope: !992, file: !6, line: 2889, baseType: !759, size: 64, offset: 57408)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ro", scope: !992, file: !6, line: 2891, baseType: !756, size: 32, offset: 57472)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sw", scope: !992, file: !6, line: 2892, baseType: !765, size: 64, offset: 57536)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sn", scope: !992, file: !6, line: 2893, baseType: !756, size: 32, offset: 57600)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_si", scope: !992, file: !6, line: 2895, baseType: !756, size: 32, offset: 57632)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sts", scope: !992, file: !6, line: 2897, baseType: !765, size: 64, offset: 57664)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sts_nopaste", scope: !992, file: !6, line: 2898, baseType: !765, size: 64, offset: 57728)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sua", scope: !992, file: !6, line: 2900, baseType: !759, size: 64, offset: 57792)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_swf", scope: !992, file: !6, line: 2902, baseType: !756, size: 32, offset: 57856)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_smc", scope: !992, file: !6, line: 2904, baseType: !765, size: 64, offset: 57920)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_syn", scope: !992, file: !6, line: 2905, baseType: !759, size: 64, offset: 57984)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ts", scope: !992, file: !6, line: 2907, baseType: !765, size: 64, offset: 58048)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tx", scope: !992, file: !6, line: 2908, baseType: !756, size: 32, offset: 58112)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw", scope: !992, file: !6, line: 2909, baseType: !765, size: 64, offset: 58176)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw_nobin", scope: !992, file: !6, line: 2910, baseType: !765, size: 64, offset: 58240)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw_nopaste", scope: !992, file: !6, line: 2911, baseType: !765, size: 64, offset: 58304)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm", scope: !992, file: !6, line: 2912, baseType: !765, size: 64, offset: 58368)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm_nobin", scope: !992, file: !6, line: 2913, baseType: !765, size: 64, offset: 58432)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm_nopaste", scope: !992, file: !6, line: 2914, baseType: !765, size: 64, offset: 58496)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts", scope: !992, file: !6, line: 2916, baseType: !759, size: 64, offset: 58560)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts_array", scope: !992, file: !6, line: 2917, baseType: !819, size: 64, offset: 58624)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts_nopaste", scope: !992, file: !6, line: 2918, baseType: !759, size: 64, offset: 58688)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vts", scope: !992, file: !6, line: 2919, baseType: !759, size: 64, offset: 58752)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vts_array", scope: !992, file: !6, line: 2920, baseType: !819, size: 64, offset: 58816)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_keymap", scope: !992, file: !6, line: 2923, baseType: !759, size: 64, offset: 58880)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_gp", scope: !992, file: !6, line: 2930, baseType: !759, size: 64, offset: 58944)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_mp", scope: !992, file: !6, line: 2931, baseType: !759, size: 64, offset: 59008)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_efm", scope: !992, file: !6, line: 2932, baseType: !759, size: 64, offset: 59072)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ep", scope: !992, file: !6, line: 2934, baseType: !759, size: 64, offset: 59136)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_path", scope: !992, file: !6, line: 2935, baseType: !759, size: 64, offset: 59200)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ar", scope: !992, file: !6, line: 2936, baseType: !756, size: 32, offset: 59264)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tags", scope: !992, file: !6, line: 2937, baseType: !759, size: 64, offset: 59328)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tc", scope: !992, file: !6, line: 2938, baseType: !759, size: 64, offset: 59392)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "b_tc_flags", scope: !992, file: !6, line: 2939, baseType: !767, size: 32, offset: 59456)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_dict", scope: !992, file: !6, line: 2940, baseType: !759, size: 64, offset: 59520)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tsr", scope: !992, file: !6, line: 2941, baseType: !759, size: 64, offset: 59584)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ul", scope: !992, file: !6, line: 2942, baseType: !765, size: 64, offset: 59648)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_udf", scope: !992, file: !6, line: 2944, baseType: !756, size: 32, offset: 59712)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_lw", scope: !992, file: !6, line: 2947, baseType: !759, size: 64, offset: 59776)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_twsl", scope: !992, file: !6, line: 2950, baseType: !765, size: 64, offset: 59840)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_level", scope: !992, file: !6, line: 2959, baseType: !756, size: 32, offset: 59904)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_imag", scope: !992, file: !6, line: 2960, baseType: !756, size: 32, offset: 59936)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_no_brace", scope: !992, file: !6, line: 2961, baseType: !756, size: 32, offset: 59968)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_first_open", scope: !992, file: !6, line: 2962, baseType: !756, size: 32, offset: 60000)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_extra", scope: !992, file: !6, line: 2963, baseType: !756, size: 32, offset: 60032)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_close_extra", scope: !992, file: !6, line: 2964, baseType: !756, size: 32, offset: 60064)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_left_imag", scope: !992, file: !6, line: 2965, baseType: !756, size: 32, offset: 60096)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_jump_label", scope: !992, file: !6, line: 2966, baseType: !756, size: 32, offset: 60128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case", scope: !992, file: !6, line: 2967, baseType: !756, size: 32, offset: 60160)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case_code", scope: !992, file: !6, line: 2968, baseType: !756, size: 32, offset: 60192)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case_break", scope: !992, file: !6, line: 2969, baseType: !756, size: 32, offset: 60224)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_param", scope: !992, file: !6, line: 2970, baseType: !756, size: 32, offset: 60256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_func_type", scope: !992, file: !6, line: 2971, baseType: !756, size: 32, offset: 60288)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_comment", scope: !992, file: !6, line: 2972, baseType: !756, size: 32, offset: 60320)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_in_comment", scope: !992, file: !6, line: 2973, baseType: !756, size: 32, offset: 60352)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_in_comment2", scope: !992, file: !6, line: 2974, baseType: !756, size: 32, offset: 60384)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_baseclass", scope: !992, file: !6, line: 2975, baseType: !756, size: 32, offset: 60416)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_continuation", scope: !992, file: !6, line: 2976, baseType: !756, size: 32, offset: 60448)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed", scope: !992, file: !6, line: 2977, baseType: !756, size: 32, offset: 60480)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed2", scope: !992, file: !6, line: 2978, baseType: !756, size: 32, offset: 60512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_noignore", scope: !992, file: !6, line: 2979, baseType: !756, size: 32, offset: 60544)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_wrapped", scope: !992, file: !6, line: 2980, baseType: !756, size: 32, offset: 60576)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_whiteok", scope: !992, file: !6, line: 2981, baseType: !756, size: 32, offset: 60608)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_matching_paren", scope: !992, file: !6, line: 2982, baseType: !756, size: 32, offset: 60640)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_paren_prev", scope: !992, file: !6, line: 2983, baseType: !756, size: 32, offset: 60672)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_maxparen", scope: !992, file: !6, line: 2984, baseType: !756, size: 32, offset: 60704)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_maxcomment", scope: !992, file: !6, line: 2985, baseType: !756, size: 32, offset: 60736)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_scopedecl", scope: !992, file: !6, line: 2986, baseType: !756, size: 32, offset: 60768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_scopedecl_code", scope: !992, file: !6, line: 2987, baseType: !756, size: 32, offset: 60800)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_java", scope: !992, file: !6, line: 2988, baseType: !756, size: 32, offset: 60832)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_js", scope: !992, file: !6, line: 2989, baseType: !756, size: 32, offset: 60864)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_keep_case_label", scope: !992, file: !6, line: 2990, baseType: !756, size: 32, offset: 60896)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_hash_comment", scope: !992, file: !6, line: 2991, baseType: !756, size: 32, offset: 60928)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_namespace", scope: !992, file: !6, line: 2992, baseType: !756, size: 32, offset: 60960)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_if_for_while", scope: !992, file: !6, line: 2993, baseType: !756, size: 32, offset: 60992)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_extern_c", scope: !992, file: !6, line: 2994, baseType: !756, size: 32, offset: 61024)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_pragma", scope: !992, file: !6, line: 2995, baseType: !756, size: 32, offset: 61056)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "b_no_eol_lnum", scope: !992, file: !6, line: 2998, baseType: !764, size: 64, offset: 61120)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_eol", scope: !992, file: !6, line: 3001, baseType: !756, size: 32, offset: 61184)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_ffc", scope: !992, file: !6, line: 3002, baseType: !756, size: 32, offset: 61216)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_fenc", scope: !992, file: !6, line: 3003, baseType: !759, size: 64, offset: 61248)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "b_bad_char", scope: !992, file: !6, line: 3004, baseType: !756, size: 32, offset: 61312)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_bomb", scope: !992, file: !6, line: 3005, baseType: !756, size: 32, offset: 61344)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "b_bufvar", scope: !992, file: !6, line: 3008, baseType: !869, size: 192, offset: 61376)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "b_vars", scope: !992, file: !6, line: 3009, baseType: !929, size: 64, offset: 61568)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "b_listener", scope: !992, file: !6, line: 3011, baseType: !2204, size: 64, offset: 61632)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "listener_T", file: !6, line: 2411, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listener_S", file: !6, line: 2412, size: 320, elements: !2207)
!2207 = !{!2208, !2209, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "lr_next", scope: !2206, file: !6, line: 2414, baseType: !2204, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "lr_id", scope: !2206, file: !6, line: 2415, baseType: !756, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "lr_callback", scope: !2206, file: !6, line: 2416, baseType: !983, size: 192, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "b_recorded_changes", scope: !992, file: !6, line: 3012, baseType: !885, size: 64, offset: 61696)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_textprop", scope: !992, file: !6, line: 3015, baseType: !756, size: 32, offset: 61760)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "b_proptypes", scope: !992, file: !6, line: 3016, baseType: !2214, size: 64, offset: 61824)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bexpr", scope: !992, file: !6, line: 3020, baseType: !759, size: 64, offset: 61888)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bexpr_flags", scope: !992, file: !6, line: 3021, baseType: !942, size: 64, offset: 61952)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cm", scope: !992, file: !6, line: 3024, baseType: !759, size: 64, offset: 62016)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "b_may_swap", scope: !992, file: !6, line: 3030, baseType: !756, size: 32, offset: 62080)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "b_did_warn", scope: !992, file: !6, line: 3031, baseType: !756, size: 32, offset: 62112)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "b_help", scope: !992, file: !6, line: 3038, baseType: !756, size: 32, offset: 62144)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell", scope: !992, file: !6, line: 3041, baseType: !756, size: 32, offset: 62176)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "b_shortname", scope: !992, file: !6, line: 3046, baseType: !756, size: 32, offset: 62208)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_text", scope: !992, file: !6, line: 3049, baseType: !759, size: 64, offset: 62272)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_callback", scope: !992, file: !6, line: 3050, baseType: !983, size: 192, offset: 62336)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_interrupt", scope: !992, file: !6, line: 3051, baseType: !983, size: 192, offset: 62528)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_insert", scope: !992, file: !6, line: 3052, baseType: !756, size: 32, offset: 62720)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "b_s", scope: !992, file: !6, line: 3080, baseType: !1145, size: 9920, offset: 62784)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "b_signlist", scope: !992, file: !6, line: 3086, baseType: !2229, size: 64, offset: 72704)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sign_entry_T", file: !6, line: 820, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sign_entry", file: !6, line: 821, size: 384, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2248, !2249}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "se_id", scope: !2231, file: !6, line: 823, baseType: !756, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "se_typenr", scope: !2231, file: !6, line: 824, baseType: !756, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "se_priority", scope: !2231, file: !6, line: 825, baseType: !756, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "se_lnum", scope: !2231, file: !6, line: 826, baseType: !764, size: 64, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "se_group", scope: !2231, file: !6, line: 827, baseType: !2238, size: 64, offset: 192)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "signgroup_T", file: !6, line: 818, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signgroup_S", file: !6, line: 813, size: 64, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "sg_next_sign_id", scope: !2240, file: !6, line: 815, baseType: !756, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "sg_refcount", scope: !2240, file: !6, line: 816, baseType: !1280, size: 16, offset: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "sg_name", scope: !2240, file: !6, line: 817, baseType: !2245, size: 8, offset: 48)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 8, elements: !2246)
!2246 = !{!2247}
!2247 = !DISubrange(count: 1)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "se_next", scope: !2231, file: !6, line: 828, baseType: !2229, size: 64, offset: 256)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "se_prev", scope: !2231, file: !6, line: 829, baseType: !2229, size: 64, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_sign_column", scope: !992, file: !6, line: 3088, baseType: !756, size: 32, offset: 72768)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "b_netbeans_file", scope: !992, file: !6, line: 3095, baseType: !756, size: 32, offset: 72800)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "b_was_netbeans_file", scope: !992, file: !6, line: 3096, baseType: !756, size: 32, offset: 72832)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "b_write_to_channel", scope: !992, file: !6, line: 3099, baseType: !756, size: 32, offset: 72864)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "b_cryptstate", scope: !992, file: !6, line: 3104, baseType: !2255, size: 64, offset: 72896)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "cryptstate_T", file: !6, line: 2503, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2500, size: 128, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "method_nr", scope: !2257, file: !6, line: 2501, baseType: !756, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "method_state", scope: !2257, file: !6, line: 2502, baseType: !750, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "b_mapped_ctrl_c", scope: !992, file: !6, line: 3107, baseType: !756, size: 32, offset: 72960)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "b_term", scope: !992, file: !6, line: 3110, baseType: !2263, size: 64, offset: 73024)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "term_T", file: !6, line: 64, baseType: !2265)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "terminal_S", file: !6, line: 64, flags: DIFlagFwdDecl)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "b_diff_failed", scope: !992, file: !6, line: 3114, baseType: !756, size: 32, offset: 73088)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "jv_refcount", scope: !967, file: !6, line: 2098, baseType: !756, size: 32, offset: 832)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "jv_copyID", scope: !967, file: !6, line: 2099, baseType: !756, size: 32, offset: 864)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "jv_channel", scope: !967, file: !6, line: 2101, baseType: !2270, size: 64, offset: 896)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "channel_T", file: !6, line: 1370, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "channel_S", file: !6, line: 2225, size: 11008, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277, !2278, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ch_next", scope: !2272, file: !6, line: 2226, baseType: !2270, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ch_prev", scope: !2272, file: !6, line: 2227, baseType: !2270, size: 64, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ch_id", scope: !2272, file: !6, line: 2229, baseType: !756, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "ch_last_msg_id", scope: !2272, file: !6, line: 2230, baseType: !756, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ch_part", scope: !2272, file: !6, line: 2232, baseType: !2279, size: 9728, offset: 192)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2280, size: 9728, elements: !1395)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "chanpart_T", file: !6, line: 2223, baseType: !2281)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2177, size: 2432, elements: !2282)
!2282 = !{!2283, !2285, !2286, !2288, !2290, !2291, !2300, !2310, !2311, !2312, !2313, !2314, !2315, !2323, !2332, !2333, !2340, !2341, !2342, !2343, !2344}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ch_fd", scope: !2281, file: !6, line: 2178, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sock_T", file: !698, line: 1816, baseType: !756)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ch_inputHandler", scope: !2281, file: !6, line: 2188, baseType: !1603, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mode", scope: !2281, file: !6, line: 2191, baseType: !2287, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ch_mode_T", file: !6, line: 2146, baseType: !75)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ch_io", scope: !2281, file: !6, line: 2192, baseType: !2289, size: 32, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "job_io_T", file: !6, line: 2154, baseType: !81)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ch_timeout", scope: !2281, file: !6, line: 2193, baseType: !756, size: 32, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ch_head", scope: !2281, file: !6, line: 2195, baseType: !2292, size: 256, offset: 192)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "readq_T", file: !6, line: 1366, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readq_S", file: !6, line: 2108, size: 256, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2299}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "rq_buffer", scope: !2293, file: !6, line: 2110, baseType: !759, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "rq_buflen", scope: !2293, file: !6, line: 2111, baseType: !942, size: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "rq_next", scope: !2293, file: !6, line: 2112, baseType: !2298, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "rq_prev", scope: !2293, file: !6, line: 2113, baseType: !2298, size: 64, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ch_json_head", scope: !2281, file: !6, line: 2196, baseType: !2301, size: 256, offset: 448)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "jsonq_T", file: !6, line: 1368, baseType: !2302)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "jsonq_S", file: !6, line: 2123, size: 256, elements: !2303)
!2303 = !{!2304, !2306, !2308, !2309}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "jq_value", scope: !2302, file: !6, line: 2125, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "jq_next", scope: !2302, file: !6, line: 2126, baseType: !2307, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "jq_prev", scope: !2302, file: !6, line: 2127, baseType: !2307, size: 64, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "jq_no_callback", scope: !2302, file: !6, line: 2128, baseType: !756, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ch_block_ids", scope: !2281, file: !6, line: 2197, baseType: !787, size: 192, offset: 704)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ch_wait_len", scope: !2281, file: !6, line: 2203, baseType: !753, size: 64, offset: 896)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ch_deadline", scope: !2281, file: !6, line: 2207, baseType: !826, size: 128, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ch_block_write", scope: !2281, file: !6, line: 2209, baseType: !756, size: 32, offset: 1088)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nonblocking", scope: !2281, file: !6, line: 2211, baseType: !756, size: 32, offset: 1120)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "ch_writeque", scope: !2281, file: !6, line: 2212, baseType: !2316, size: 320, offset: 1152)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "writeq_T", file: !6, line: 1367, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeq_S", file: !6, line: 2116, size: 320, elements: !2318)
!2318 = !{!2319, !2320, !2322}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "wq_ga", scope: !2317, file: !6, line: 2118, baseType: !787, size: 192)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "wq_next", scope: !2317, file: !6, line: 2119, baseType: !2321, size: 64, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "wq_prev", scope: !2317, file: !6, line: 2120, baseType: !2321, size: 64, offset: 256)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ch_cb_head", scope: !2281, file: !6, line: 2214, baseType: !2324, size: 384, offset: 1472)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbq_T", file: !6, line: 1369, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbq_S", file: !6, line: 2131, size: 384, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2331}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "cq_callback", scope: !2325, file: !6, line: 2133, baseType: !983, size: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "cq_seq_nr", scope: !2325, file: !6, line: 2134, baseType: !756, size: 32, offset: 192)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "cq_next", scope: !2325, file: !6, line: 2135, baseType: !2330, size: 64, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "cq_prev", scope: !2325, file: !6, line: 2136, baseType: !2330, size: 64, offset: 320)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ch_callback", scope: !2281, file: !6, line: 2215, baseType: !983, size: 192, offset: 1856)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ch_bufref", scope: !2281, file: !6, line: 2217, baseType: !2334, size: 128, offset: 2048)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "bufref_T", file: !6, line: 102, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 98, size: 128, elements: !2336)
!2336 = !{!2337, !2338, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "br_buf", scope: !2335, file: !6, line: 99, baseType: !990, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "br_fnum", scope: !2335, file: !6, line: 100, baseType: !756, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "br_buf_free_count", scope: !2335, file: !6, line: 101, baseType: !756, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nomodifiable", scope: !2281, file: !6, line: 2218, baseType: !756, size: 32, offset: 2176)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nomod_error", scope: !2281, file: !6, line: 2219, baseType: !756, size: 32, offset: 2208)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_append", scope: !2281, file: !6, line: 2220, baseType: !756, size: 32, offset: 2240)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_top", scope: !2281, file: !6, line: 2221, baseType: !764, size: 64, offset: 2304)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_bot", scope: !2281, file: !6, line: 2222, baseType: !764, size: 64, offset: 2368)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ch_write_text_mode", scope: !2272, file: !6, line: 2233, baseType: !756, size: 32, offset: 9920)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ch_hostname", scope: !2272, file: !6, line: 2235, baseType: !751, size: 64, offset: 9984)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ch_port", scope: !2272, file: !6, line: 2236, baseType: !756, size: 32, offset: 10048)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ch_to_be_closed", scope: !2272, file: !6, line: 2238, baseType: !756, size: 32, offset: 10080)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ch_to_be_freed", scope: !2272, file: !6, line: 2241, baseType: !756, size: 32, offset: 10112)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ch_error", scope: !2272, file: !6, line: 2243, baseType: !756, size: 32, offset: 10144)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nb_close_cb", scope: !2272, file: !6, line: 2249, baseType: !2352, size: 64, offset: 10176)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ch_callback", scope: !2272, file: !6, line: 2256, baseType: !983, size: 192, offset: 10240)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ch_close_cb", scope: !2272, file: !6, line: 2257, baseType: !983, size: 192, offset: 10432)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ch_drop_never", scope: !2272, file: !6, line: 2258, baseType: !756, size: 32, offset: 10624)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ch_keep_open", scope: !2272, file: !6, line: 2259, baseType: !756, size: 32, offset: 10656)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nonblock", scope: !2272, file: !6, line: 2260, baseType: !756, size: 32, offset: 10688)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ch_job", scope: !2272, file: !6, line: 2262, baseType: !965, size: 64, offset: 10752)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ch_job_killed", scope: !2272, file: !6, line: 2265, baseType: !756, size: 32, offset: 10816)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ch_anonymous_pipe", scope: !2272, file: !6, line: 2267, baseType: !756, size: 32, offset: 10848)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ch_killing", scope: !2272, file: !6, line: 2268, baseType: !756, size: 32, offset: 10880)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ch_refcount", scope: !2272, file: !6, line: 2270, baseType: !756, size: 32, offset: 10912)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ch_copyID", scope: !2272, file: !6, line: 2271, baseType: !756, size: 32, offset: 10944)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "jv_argv", scope: !967, file: !6, line: 2102, baseType: !2367, size: 64, offset: 960)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "v_channel", scope: !879, file: !6, line: 1428, baseType: !2270, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v_blob", scope: !879, file: !6, line: 1430, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "blob_T", file: !6, line: 1349, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blobvar_S", file: !6, line: 1561, size: 256, elements: !2373)
!2373 = !{!2374, !2375, !2376}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "bv_ga", scope: !2372, file: !6, line: 1563, baseType: !787, size: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "bv_refcount", scope: !2372, file: !6, line: 1564, baseType: !756, size: 32, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "bv_lock", scope: !2372, file: !6, line: 1565, baseType: !752, size: 8, offset: 224)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "di_flags", scope: !870, file: !6, line: 1516, baseType: !760, size: 8, offset: 128)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "di_key", scope: !870, file: !6, line: 1517, baseType: !2245, size: 8, offset: 136)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "room", scope: !866, file: !6, line: 1690, baseType: !2380, size: 160, offset: 192)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 160, elements: !1898)
!2381 = !{!2382}
!2382 = !DISubrange(count: 12)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "l_vars", scope: !859, file: !6, line: 1692, baseType: !930, size: 2816, offset: 4736)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "l_vars_var", scope: !859, file: !6, line: 1693, baseType: !869, size: 192, offset: 7552)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "l_avars", scope: !859, file: !6, line: 1694, baseType: !930, size: 2816, offset: 7744)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "l_avars_var", scope: !859, file: !6, line: 1695, baseType: !869, size: 192, offset: 10560)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "l_varlist", scope: !859, file: !6, line: 1696, baseType: !886, size: 768, offset: 10752)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "l_listitems", scope: !859, file: !6, line: 1697, baseType: !2389, size: 5120, offset: 11520)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 5120, elements: !1898)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "rettv", scope: !859, file: !6, line: 1698, baseType: !2305, size: 64, offset: 16640)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "breakpoint", scope: !859, file: !6, line: 1699, baseType: !764, size: 64, offset: 16704)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_tick", scope: !859, file: !6, line: 1700, baseType: !756, size: 32, offset: 16768)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !859, file: !6, line: 1701, baseType: !756, size: 32, offset: 16800)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "prof_child", scope: !859, file: !6, line: 1703, baseType: !825, size: 128, offset: 16832)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !859, file: !6, line: 1705, baseType: !857, size: 64, offset: 16960)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "fc_refcount", scope: !859, file: !6, line: 1709, baseType: !756, size: 32, offset: 17024)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "fc_copyID", scope: !859, file: !6, line: 1711, baseType: !756, size: 32, offset: 17056)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "fc_funcs", scope: !859, file: !6, line: 1712, baseType: !787, size: 192, offset: 17088)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "uf_name_exp", scope: !777, file: !6, line: 1653, baseType: !759, size: 64, offset: 2944)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "uf_name", scope: !777, file: !6, line: 1655, baseType: !2401, size: 32, offset: 3008)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 32, elements: !1395)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pt_auto", scope: !770, file: !6, line: 2001, baseType: !756, size: 32, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "pt_outer", scope: !770, file: !6, line: 2005, baseType: !2404, size: 256, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "outer_T", file: !6, line: 1986, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "outer_S", file: !6, line: 1987, size: 256, elements: !2406)
!2406 = !{!2407, !2409, !2410, !2412}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "out_stack", scope: !2405, file: !6, line: 1988, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame_idx", scope: !2405, file: !6, line: 1989, baseType: !756, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "out_up", scope: !2405, file: !6, line: 1990, baseType: !2411, size: 64, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "out_up_is_copy", scope: !2405, file: !6, line: 1991, baseType: !756, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pt_funcstack", scope: !770, file: !6, line: 2007, baseType: !2414, size: 64, offset: 512)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "funcstack_T", file: !6, line: 1984, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funcstack_S", file: !6, line: 1972, size: 320, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421, !2422}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "fs_ga", scope: !2416, file: !6, line: 1974, baseType: !787, size: 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fs_var_offset", scope: !2416, file: !6, line: 1978, baseType: !756, size: 32, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fs_refcount", scope: !2416, file: !6, line: 1981, baseType: !756, size: 32, offset: 224)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "fs_min_refcount", scope: !2416, file: !6, line: 1982, baseType: !756, size: 32, offset: 256)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "fs_copyID", scope: !2416, file: !6, line: 1983, baseType: !756, size: 32, offset: 288)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pt_argc", scope: !770, file: !6, line: 2010, baseType: !756, size: 32, offset: 576)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pt_argv", scope: !770, file: !6, line: 2011, baseType: !2305, size: 64, offset: 640)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pt_dict", scope: !770, file: !6, line: 2013, baseType: !929, size: 64, offset: 704)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pt_copyID", scope: !770, file: !6, line: 2014, baseType: !756, size: 32, offset: 768)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "GuiFont", file: !1907, line: 208, baseType: !1598)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "tasave_T", file: !6, line: 1169, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1158, size: 1088, elements: !2431)
!2431 = !{!2432, !2445, !2446, !2447, !2448, !2462, !2463}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "save_typebuf", scope: !2430, file: !6, line: 1160, baseType: !2433, size: 384)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "typebuf_T", file: !6, line: 1155, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1144, size: 384, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "tb_buf", scope: !2434, file: !6, line: 1146, baseType: !759, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "tb_noremap", scope: !2434, file: !6, line: 1147, baseType: !759, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "tb_buflen", scope: !2434, file: !6, line: 1148, baseType: !756, size: 32, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "tb_off", scope: !2434, file: !6, line: 1149, baseType: !756, size: 32, offset: 160)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "tb_len", scope: !2434, file: !6, line: 1150, baseType: !756, size: 32, offset: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tb_maplen", scope: !2434, file: !6, line: 1151, baseType: !756, size: 32, offset: 224)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "tb_silent", scope: !2434, file: !6, line: 1152, baseType: !756, size: 32, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "tb_no_abbr_cnt", scope: !2434, file: !6, line: 1153, baseType: !756, size: 32, offset: 288)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "tb_change_cnt", scope: !2434, file: !6, line: 1154, baseType: !756, size: 32, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "typebuf_valid", scope: !2430, file: !6, line: 1161, baseType: !756, size: 32, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "old_char", scope: !2430, file: !6, line: 1162, baseType: !756, size: 32, offset: 416)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "old_mod_mask", scope: !2430, file: !6, line: 1163, baseType: !756, size: 32, offset: 448)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "save_readbuf1", scope: !2430, file: !6, line: 1164, baseType: !2449, size: 256, offset: 512)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "buffheader_T", file: !6, line: 539, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buffheader", file: !6, line: 553, size: 256, elements: !2451)
!2451 = !{!2452, !2459, !2460, !2461}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "bh_first", scope: !2450, file: !6, line: 555, baseType: !2453, size: 128)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "buffblock_T", file: !6, line: 538, baseType: !2454)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buffblock", file: !6, line: 544, size: 128, elements: !2455)
!2455 = !{!2456, !2458}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "b_next", scope: !2454, file: !6, line: 546, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "b_str", scope: !2454, file: !6, line: 547, baseType: !2245, size: 8, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "bh_curr", scope: !2450, file: !6, line: 556, baseType: !2457, size: 64, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "bh_index", scope: !2450, file: !6, line: 557, baseType: !756, size: 32, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "bh_space", scope: !2450, file: !6, line: 558, baseType: !756, size: 32, offset: 224)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "save_readbuf2", scope: !2430, file: !6, line: 1165, baseType: !2449, size: 256, offset: 768)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "save_inputbuf", scope: !2430, file: !6, line: 1167, baseType: !759, size: 64, offset: 1024)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32_T", file: !698, line: 1438, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2467, line: 26, baseType: !2468)
!2467 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "/home/sahil/vim/src")
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !831, line: 42, baseType: !767)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!2471 = !{!0, !2472, !2492, !2495, !2498, !2500, !2502, !2504, !2528, !2535, !2563, !2565, !2585, !2587, !2589, !2602, !2619, !2621, !2623, !2625, !2627, !2647, !2649, !2651}
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "arg3_string_nr_bool", scope: !2, file: !3, line: 440, type: !2474, isLocal: false, isDefinition: true)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 192, elements: !2490)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "argcheck_T", file: !3, line: 285, baseType: !2476)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!756, !798, !2479}
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "argcontext_T", file: !3, line: 280, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 275, size: 256, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !2481, file: !3, line: 276, baseType: !756, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "arg_types", scope: !2481, file: !3, line: 277, baseType: !797, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "arg_idx", scope: !2481, file: !3, line: 278, baseType: !756, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "arg_cctx", scope: !2481, file: !3, line: 279, baseType: !2487, size: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "cctx_T", file: !6, line: 1371, baseType: !2489)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "cctx_S", file: !6, line: 1371, flags: DIFlagFwdDecl)
!2490 = !{!2491}
!2491 = !DISubrange(count: 3)
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "arg1_float_or_nr", scope: !2, file: !3, line: 441, type: !2494, isLocal: false, isDefinition: true)
!2494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 64, elements: !2246)
!2495 = !DIGlobalVariableExpression(var: !2496, expr: !DIExpression())
!2496 = distinct !DIGlobalVariable(name: "arg2_listblob_item", scope: !2, file: !3, line: 442, type: !2497, isLocal: false, isDefinition: true)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 128, elements: !1922)
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(name: "arg23_extend", scope: !2, file: !3, line: 443, type: !2474, isLocal: false, isDefinition: true)
!2500 = !DIGlobalVariableExpression(var: !2501, expr: !DIExpression())
!2501 = distinct !DIGlobalVariable(name: "arg23_extendnew", scope: !2, file: !3, line: 444, type: !2474, isLocal: false, isDefinition: true)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "arg3_insert", scope: !2, file: !3, line: 445, type: !2474, isLocal: false, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "intidx", scope: !2506, file: !3, line: 1865, type: !756, isLocal: true, isDefinition: true)
!2506 = distinct !DISubprogram(name: "get_function_name", scope: !3, file: !3, line: 1863, type: !2507, isLocal: false, isDefinition: true, scopeLine: 1864, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2524)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!759, !2509, !756}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "expand_T", file: !6, line: 589, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expand", file: !6, line: 570, size: 640, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "xp_pattern", scope: !2511, file: !6, line: 572, baseType: !759, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "xp_context", scope: !2511, file: !6, line: 573, baseType: !756, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "xp_pattern_len", scope: !2511, file: !6, line: 574, baseType: !756, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "xp_arg", scope: !2511, file: !6, line: 576, baseType: !759, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "xp_script_ctx", scope: !2511, file: !6, line: 577, baseType: !846, size: 192, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "xp_backslash", scope: !2511, file: !6, line: 579, baseType: !756, size: 32, offset: 384)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "xp_shell", scope: !2511, file: !6, line: 581, baseType: !756, size: 32, offset: 416)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "xp_numfiles", scope: !2511, file: !6, line: 584, baseType: !756, size: 32, offset: 448)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "xp_col", scope: !2511, file: !6, line: 586, baseType: !756, size: 32, offset: 480)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "xp_files", scope: !2511, file: !6, line: 587, baseType: !2469, size: 64, offset: 512)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "xp_line", scope: !2511, file: !6, line: 588, baseType: !759, size: 64, offset: 576)
!2524 = !{!2525, !2526, !2527}
!2525 = !DILocalVariable(name: "xp", arg: 1, scope: !2506, file: !3, line: 1863, type: !2509)
!2526 = !DILocalVariable(name: "idx", arg: 2, scope: !2506, file: !3, line: 1863, type: !756)
!2527 = !DILocalVariable(name: "name", scope: !2506, file: !3, line: 1866, type: !759)
!2528 = !DIGlobalVariableExpression(var: !2529, expr: !DIExpression())
!2529 = distinct !DIGlobalVariable(name: "intidx", scope: !2530, file: !3, line: 1899, type: !756, isLocal: true, isDefinition: true)
!2530 = distinct !DISubprogram(name: "get_expr_name", scope: !3, file: !3, line: 1897, type: !2507, isLocal: false, isDefinition: true, scopeLine: 1898, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2531)
!2531 = !{!2532, !2533, !2534}
!2532 = !DILocalVariable(name: "xp", arg: 1, scope: !2530, file: !3, line: 1897, type: !2509)
!2533 = !DILocalVariable(name: "idx", arg: 2, scope: !2530, file: !3, line: 1897, type: !756)
!2534 = !DILocalVariable(name: "name", scope: !2530, file: !3, line: 1900, type: !759)
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "has_list", scope: !2537, file: !3, line: 4458, type: !2555, isLocal: true, isDefinition: true)
!2537 = distinct !DISubprogram(name: "f_has", scope: !3, file: !3, line: 4448, type: !2538, isLocal: false, isDefinition: true, scopeLine: 4449, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2540)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{null, !2305, !2305}
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2554}
!2541 = !DILocalVariable(name: "argvars", arg: 1, scope: !2537, file: !3, line: 4448, type: !2305)
!2542 = !DILocalVariable(name: "rettv", arg: 2, scope: !2537, file: !3, line: 4448, type: !2305)
!2543 = !DILocalVariable(name: "i", scope: !2537, file: !3, line: 4450, type: !756)
!2544 = !DILocalVariable(name: "name", scope: !2537, file: !3, line: 4451, type: !759)
!2545 = !DILocalVariable(name: "x", scope: !2537, file: !3, line: 4452, type: !756)
!2546 = !DILocalVariable(name: "n", scope: !2537, file: !3, line: 4453, type: !756)
!2547 = !DILocalVariable(name: "major", scope: !2548, file: !3, line: 5665, type: !756)
!2548 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 5664, column: 6)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 5659, column: 10)
!2550 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 5657, column: 2)
!2551 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 5656, column: 6)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 5655, column: 5)
!2553 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 5654, column: 9)
!2554 = !DILocalVariable(name: "minor", scope: !2548, file: !3, line: 5666, type: !756)
!2555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2556, size: 23552, elements: !2561)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "has_item_T", scope: !2537, file: !3, line: 4457, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2537, file: !3, line: 4454, size: 128, elements: !2558)
!2558 = !{!2559, !2560}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2557, file: !3, line: 4455, baseType: !751, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2557, file: !3, line: 4456, baseType: !1162, size: 16, offset: 64)
!2561 = !{!2562}
!2562 = !DISubrange(count: 184)
!2563 = !DIGlobalVariableExpression(var: !2564, expr: !DIExpression())
!2564 = distinct !DIGlobalVariable(name: "redir_execute_ga", scope: !2, file: !3, line: 3100, type: !787, isLocal: true, isDefinition: true)
!2565 = !DIGlobalVariableExpression(var: !2566, expr: !DIExpression())
!2566 = distinct !DIGlobalVariable(name: "global_functions", scope: !2, file: !3, line: 702, type: !2567, isLocal: true, isDefinition: true)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2568, size: 167040, elements: !2583)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "funcentry_T", file: !3, line: 652, baseType: !2569)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 641, size: 320, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574, !2575, !2577, !2581}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "f_name", scope: !2569, file: !3, line: 643, baseType: !751, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "f_min_argc", scope: !2569, file: !3, line: 644, baseType: !752, size: 8, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "f_max_argc", scope: !2569, file: !3, line: 645, baseType: !752, size: 8, offset: 72)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "f_argtype", scope: !2569, file: !3, line: 646, baseType: !752, size: 8, offset: 80)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "f_argcheck", scope: !2569, file: !3, line: 647, baseType: !2576, size: 64, offset: 128)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "f_retfunc", scope: !2569, file: !3, line: 648, baseType: !2578, size: 64, offset: 192)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!798, !756, !797}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "f_func", scope: !2569, file: !3, line: 650, baseType: !2582, size: 64, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2583 = !{!2584}
!2584 = !DISubrange(count: 522)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "inputsecret_flag", scope: !2, file: !3, line: 6019, type: !756, isLocal: true, isDefinition: true)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "ga_userinput", scope: !2, file: !3, line: 6117, type: !787, isLocal: true, isDefinition: true)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "ap", scope: !2, file: !3, line: 7020, type: !2591, isLocal: true, isDefinition: true)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1942, line: 52, baseType: !2592)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2593, line: 48, baseType: !2594)
!2593 = !DIFile(filename: "/usr/lib/llvm-6.0/lib/clang/6.0.1/include/stdarg.h", directory: "/home/sahil/vim/src")
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 7020, baseType: !2595)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2596, size: 192, elements: !2246)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 7020, size: 192, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2596, file: !3, line: 7020, baseType: !767, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2596, file: !3, line: 7020, baseType: !767, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2596, file: !3, line: 7020, baseType: !750, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2596, file: !3, line: 7020, baseType: !750, size: 64, offset: 128)
!2602 = !DIGlobalVariableExpression(var: !2603, expr: !DIExpression())
!2603 = distinct !DIGlobalVariable(name: "gx", scope: !2604, file: !3, line: 7225, type: !2465, isLocal: true, isDefinition: true)
!2604 = distinct !DISubprogram(name: "f_rand", scope: !3, file: !3, line: 7222, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7223, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2606 = !DILocalVariable(name: "argvars", arg: 1, scope: !2604, file: !3, line: 7222, type: !2305)
!2607 = !DILocalVariable(name: "rettv", arg: 2, scope: !2604, file: !3, line: 7222, type: !2305)
!2608 = !DILocalVariable(name: "l", scope: !2604, file: !3, line: 7224, type: !885)
!2609 = !DILocalVariable(name: "lx", scope: !2604, file: !3, line: 7227, type: !890)
!2610 = !DILocalVariable(name: "ly", scope: !2604, file: !3, line: 7227, type: !890)
!2611 = !DILocalVariable(name: "lz", scope: !2604, file: !3, line: 7227, type: !890)
!2612 = !DILocalVariable(name: "lw", scope: !2604, file: !3, line: 7227, type: !890)
!2613 = !DILocalVariable(name: "x", scope: !2604, file: !3, line: 7228, type: !2465)
!2614 = !DILocalVariable(name: "y", scope: !2604, file: !3, line: 7228, type: !2465)
!2615 = !DILocalVariable(name: "z", scope: !2604, file: !3, line: 7228, type: !2465)
!2616 = !DILocalVariable(name: "w", scope: !2604, file: !3, line: 7228, type: !2465)
!2617 = !DILocalVariable(name: "t", scope: !2604, file: !3, line: 7228, type: !2465)
!2618 = !DILocalVariable(name: "result", scope: !2604, file: !3, line: 7228, type: !2465)
!2619 = !DIGlobalVariableExpression(var: !2620, expr: !DIExpression())
!2620 = distinct !DIGlobalVariable(name: "gy", scope: !2604, file: !3, line: 7225, type: !2465, isLocal: true, isDefinition: true)
!2621 = !DIGlobalVariableExpression(var: !2622, expr: !DIExpression())
!2622 = distinct !DIGlobalVariable(name: "gz", scope: !2604, file: !3, line: 7225, type: !2465, isLocal: true, isDefinition: true)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression())
!2624 = distinct !DIGlobalVariable(name: "gw", scope: !2604, file: !3, line: 7225, type: !2465, isLocal: true, isDefinition: true)
!2625 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression())
!2626 = distinct !DIGlobalVariable(name: "initialized", scope: !2604, file: !3, line: 7226, type: !756, isLocal: true, isDefinition: true)
!2627 = !DIGlobalVariableExpression(var: !2628, expr: !DIExpression())
!2628 = distinct !DIGlobalVariable(name: "dev_urandom_state", scope: !2629, file: !3, line: 7160, type: !756, isLocal: true, isDefinition: true)
!2629 = distinct !DISubprogram(name: "init_srand", scope: !3, file: !3, line: 7157, type: !2630, isLocal: true, isDefinition: true, scopeLine: 7158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2633)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{null, !2632}
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2633 = !{!2634, !2635, !2638}
!2634 = !DILocalVariable(name: "x", arg: 1, scope: !2629, file: !3, line: 7157, type: !2632)
!2635 = !DILocalVariable(name: "fd", scope: !2636, file: !3, line: 7171, type: !756)
!2636 = distinct !DILexicalBlock(scope: !2637, file: !3, line: 7170, column: 5)
!2637 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 7169, column: 9)
!2638 = !DILocalVariable(name: "buf", scope: !2636, file: !3, line: 7177, type: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2629, file: !3, line: 7172, size: 32, elements: !2640)
!2640 = !{!2641}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2639, file: !3, line: 7176, baseType: !2642, size: 32)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2639, file: !3, line: 7173, size: 32, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !2642, file: !3, line: 7174, baseType: !2465, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2642, file: !3, line: 7175, baseType: !2646, size: 32)
!2646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 32, elements: !1395)
!2647 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression())
!2648 = distinct !DIGlobalVariable(name: "srand_seed_for_testing_is_used", scope: !2, file: !3, line: 7142, type: !756, isLocal: true, isDefinition: true)
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "srand_seed_for_testing", scope: !2, file: !3, line: 7141, type: !2465, isLocal: true, isDefinition: true)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "e_invact2", scope: !2653, file: !3, line: 8659, type: !751, isLocal: true, isDefinition: true)
!2653 = distinct !DISubprogram(name: "f_settagstack", scope: !3, file: !3, line: 8657, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8658, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2654)
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660}
!2655 = !DILocalVariable(name: "argvars", arg: 1, scope: !2653, file: !3, line: 8657, type: !2305)
!2656 = !DILocalVariable(name: "rettv", arg: 2, scope: !2653, file: !3, line: 8657, type: !2305)
!2657 = !DILocalVariable(name: "wp", scope: !2653, file: !3, line: 8660, type: !1135)
!2658 = !DILocalVariable(name: "d", scope: !2653, file: !3, line: 8661, type: !929)
!2659 = !DILocalVariable(name: "action", scope: !2653, file: !3, line: 8662, type: !756)
!2660 = !DILocalVariable(name: "actstr", scope: !2661, file: !3, line: 8687, type: !759)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 8686, column: 5)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 8685, column: 14)
!2663 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 8683, column: 9)
!2664 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression(DW_OP_deref, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2665 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression(DW_OP_deref, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2666 = !{i32 2, !"Dwarf Version", i32 4}
!2667 = !{i32 2, !"Debug Info Version", i32 3}
!2668 = !{i32 1, !"wchar_size", i32 4}
!2669 = !{!"clang version 6.0.1-14 (tags/RELEASE_601/final)"}
!2670 = distinct !DISubprogram(name: "arg_string", scope: !3, file: !3, line: 329, type: !2477, isLocal: true, isDefinition: true, scopeLine: 330, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2671)
!2671 = !{!2672, !2673}
!2672 = !DILocalVariable(name: "type", arg: 1, scope: !2670, file: !3, line: 329, type: !798)
!2673 = !DILocalVariable(name: "context", arg: 2, scope: !2670, file: !3, line: 329, type: !2479)
!2674 = !DILocation(line: 329, column: 20, scope: !2670)
!2675 = !DILocation(line: 329, column: 40, scope: !2670)
!2676 = !DILocalVariable(name: "expected", arg: 1, scope: !2677, file: !3, line: 292, type: !798)
!2677 = distinct !DISubprogram(name: "check_arg_type", scope: !3, file: !3, line: 291, type: !2678, isLocal: true, isDefinition: true, scopeLine: 295, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2680)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!756, !798, !798, !2479}
!2680 = !{!2676, !2681, !2682}
!2681 = !DILocalVariable(name: "actual", arg: 2, scope: !2677, file: !3, line: 293, type: !798)
!2682 = !DILocalVariable(name: "context", arg: 3, scope: !2677, file: !3, line: 294, type: !2479)
!2683 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2684)
!2684 = distinct !DILocation(line: 331, column: 12, scope: !2670)
!2685 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2684)
!2686 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2684)
!2687 = !DILocation(line: 299, column: 15, scope: !2677, inlinedAt: !2684)
!2688 = !{!2689, !2690, i64 16}
!2689 = !{!"", !2690, i64 0, !2693, i64 8, !2690, i64 16, !2693, i64 24}
!2690 = !{!"int", !2691, i64 0}
!2691 = !{!"omnipotent char", !2692, i64 0}
!2692 = !{!"Simple C/C++ TBAA"}
!2693 = !{!"any pointer", !2691, i64 0}
!2694 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2684)
!2695 = !{!2689, !2690, i64 0}
!2696 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2684)
!2697 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2684)
!2698 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2684)
!2699 = !{!2689, !2693, i64 24}
!2700 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2684)
!2701 = !DILocation(line: 331, column: 5, scope: !2670)
!2702 = distinct !DISubprogram(name: "arg_number", scope: !3, file: !3, line: 320, type: !2477, isLocal: true, isDefinition: true, scopeLine: 321, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2703)
!2703 = !{!2704, !2705}
!2704 = !DILocalVariable(name: "type", arg: 1, scope: !2702, file: !3, line: 320, type: !798)
!2705 = !DILocalVariable(name: "context", arg: 2, scope: !2702, file: !3, line: 320, type: !2479)
!2706 = !DILocation(line: 320, column: 20, scope: !2702)
!2707 = !DILocation(line: 320, column: 40, scope: !2702)
!2708 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2709)
!2709 = distinct !DILocation(line: 322, column: 12, scope: !2702)
!2710 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2709)
!2711 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2709)
!2712 = !DILocation(line: 299, column: 15, scope: !2677, inlinedAt: !2709)
!2713 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2709)
!2714 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2709)
!2715 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2709)
!2716 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2709)
!2717 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2709)
!2718 = !DILocation(line: 322, column: 5, scope: !2702)
!2719 = distinct !DISubprogram(name: "arg_bool", scope: !3, file: !3, line: 338, type: !2477, isLocal: true, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2720)
!2720 = !{!2721, !2722}
!2721 = !DILocalVariable(name: "type", arg: 1, scope: !2719, file: !3, line: 338, type: !798)
!2722 = !DILocalVariable(name: "context", arg: 2, scope: !2719, file: !3, line: 338, type: !2479)
!2723 = !DILocation(line: 338, column: 18, scope: !2719)
!2724 = !DILocation(line: 338, column: 38, scope: !2719)
!2725 = !DILocation(line: 340, column: 15, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 340, column: 9)
!2727 = !{!2728, !2691, i64 0}
!2728 = !{!"type_S", !2691, i64 0, !2691, i64 4, !2691, i64 5, !2691, i64 6, !2693, i64 8, !2693, i64 16}
!2729 = !DILocation(line: 341, column: 6, scope: !2726)
!2730 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2731)
!2731 = distinct !DILocation(line: 343, column: 12, scope: !2719)
!2732 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2731)
!2733 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2731)
!2734 = !DILocation(line: 299, column: 15, scope: !2677, inlinedAt: !2731)
!2735 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2731)
!2736 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2731)
!2737 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2731)
!2738 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2731)
!2739 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2731)
!2740 = !DILocation(line: 343, column: 5, scope: !2719)
!2741 = !DILocation(line: 344, column: 1, scope: !2719)
!2742 = distinct !DISubprogram(name: "arg_float_or_nr", scope: !3, file: !3, line: 307, type: !2477, isLocal: true, isDefinition: true, scopeLine: 308, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2743)
!2743 = !{!2744, !2745}
!2744 = !DILocalVariable(name: "type", arg: 1, scope: !2742, file: !3, line: 307, type: !798)
!2745 = !DILocalVariable(name: "context", arg: 2, scope: !2742, file: !3, line: 307, type: !2479)
!2746 = !DILocation(line: 307, column: 25, scope: !2742)
!2747 = !DILocation(line: 307, column: 45, scope: !2742)
!2748 = !DILocation(line: 309, column: 15, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 309, column: 9)
!2750 = !DILocation(line: 310, column: 5, scope: !2749)
!2751 = !DILocation(line: 312, column: 49, scope: !2742)
!2752 = !DILocation(line: 312, column: 57, scope: !2742)
!2753 = !DILocation(line: 312, column: 5, scope: !2742)
!2754 = !DILocation(line: 313, column: 5, scope: !2742)
!2755 = !DILocation(line: 314, column: 1, scope: !2742)
!2756 = distinct !DISubprogram(name: "arg_list_or_blob", scope: !3, file: !3, line: 350, type: !2477, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2757)
!2757 = !{!2758, !2759}
!2758 = !DILocalVariable(name: "type", arg: 1, scope: !2756, file: !3, line: 350, type: !798)
!2759 = !DILocalVariable(name: "context", arg: 2, scope: !2756, file: !3, line: 350, type: !2479)
!2760 = !DILocation(line: 350, column: 26, scope: !2756)
!2761 = !DILocation(line: 350, column: 46, scope: !2756)
!2762 = !DILocation(line: 352, column: 15, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 352, column: 9)
!2764 = !DILocation(line: 353, column: 8, scope: !2763)
!2765 = !DILocation(line: 355, column: 51, scope: !2756)
!2766 = !DILocation(line: 355, column: 59, scope: !2756)
!2767 = !DILocation(line: 355, column: 5, scope: !2756)
!2768 = !DILocation(line: 356, column: 5, scope: !2756)
!2769 = !DILocation(line: 357, column: 1, scope: !2756)
!2770 = distinct !DISubprogram(name: "arg_item_of_prev", scope: !3, file: !3, line: 404, type: !2477, isLocal: true, isDefinition: true, scopeLine: 405, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2771)
!2771 = !{!2772, !2773, !2774, !2775}
!2772 = !DILocalVariable(name: "type", arg: 1, scope: !2770, file: !3, line: 404, type: !798)
!2773 = !DILocalVariable(name: "context", arg: 2, scope: !2770, file: !3, line: 404, type: !2479)
!2774 = !DILocalVariable(name: "prev_type", scope: !2770, file: !3, line: 406, type: !798)
!2775 = !DILocalVariable(name: "expected", scope: !2770, file: !3, line: 407, type: !798)
!2776 = !DILocation(line: 404, column: 26, scope: !2770)
!2777 = !DILocation(line: 404, column: 46, scope: !2770)
!2778 = !DILocation(line: 406, column: 34, scope: !2770)
!2779 = !{!2689, !2693, i64 8}
!2780 = !DILocation(line: 406, column: 53, scope: !2770)
!2781 = !DILocation(line: 406, column: 61, scope: !2770)
!2782 = !DILocation(line: 406, column: 25, scope: !2770)
!2783 = !{!2693, !2693, i64 0}
!2784 = !DILocation(line: 406, column: 13, scope: !2770)
!2785 = !DILocation(line: 409, column: 20, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 409, column: 9)
!2787 = !DILocation(line: 409, column: 9, scope: !2770)
!2788 = !DILocation(line: 410, column: 24, scope: !2786)
!2789 = !{!2728, !2693, i64 8}
!2790 = !DILocation(line: 407, column: 13, scope: !2770)
!2791 = !DILocation(line: 410, column: 2, scope: !2786)
!2792 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2793)
!2793 = distinct !DILocation(line: 417, column: 12, scope: !2770)
!2794 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2793)
!2795 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2793)
!2796 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2793)
!2797 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2793)
!2798 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2793)
!2799 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2793)
!2800 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2793)
!2801 = !DILocation(line: 417, column: 5, scope: !2770)
!2802 = !DILocation(line: 418, column: 1, scope: !2770)
!2803 = distinct !DISubprogram(name: "arg_list_or_dict", scope: !3, file: !3, line: 363, type: !2477, isLocal: true, isDefinition: true, scopeLine: 364, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2804)
!2804 = !{!2805, !2806}
!2805 = !DILocalVariable(name: "type", arg: 1, scope: !2803, file: !3, line: 363, type: !798)
!2806 = !DILocalVariable(name: "context", arg: 2, scope: !2803, file: !3, line: 363, type: !2479)
!2807 = !DILocation(line: 363, column: 26, scope: !2803)
!2808 = !DILocation(line: 363, column: 46, scope: !2803)
!2809 = !DILocation(line: 365, column: 15, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 365, column: 9)
!2811 = !DILocation(line: 366, column: 8, scope: !2810)
!2812 = !DILocation(line: 368, column: 51, scope: !2803)
!2813 = !DILocation(line: 368, column: 59, scope: !2803)
!2814 = !DILocation(line: 368, column: 5, scope: !2803)
!2815 = !DILocation(line: 369, column: 5, scope: !2803)
!2816 = !DILocation(line: 370, column: 1, scope: !2803)
!2817 = distinct !DISubprogram(name: "arg_same_as_prev", scope: !3, file: !3, line: 377, type: !2477, isLocal: true, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2818)
!2818 = !{!2819, !2820, !2821}
!2819 = !DILocalVariable(name: "type", arg: 1, scope: !2817, file: !3, line: 377, type: !798)
!2820 = !DILocalVariable(name: "context", arg: 2, scope: !2817, file: !3, line: 377, type: !2479)
!2821 = !DILocalVariable(name: "prev_type", scope: !2817, file: !3, line: 379, type: !798)
!2822 = !DILocation(line: 377, column: 26, scope: !2817)
!2823 = !DILocation(line: 377, column: 46, scope: !2817)
!2824 = !DILocation(line: 379, column: 34, scope: !2817)
!2825 = !DILocation(line: 379, column: 53, scope: !2817)
!2826 = !DILocation(line: 379, column: 61, scope: !2817)
!2827 = !DILocation(line: 379, column: 25, scope: !2817)
!2828 = !DILocation(line: 379, column: 13, scope: !2817)
!2829 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2830)
!2830 = distinct !DILocation(line: 381, column: 12, scope: !2817)
!2831 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2830)
!2832 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2830)
!2833 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2830)
!2834 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2830)
!2835 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2830)
!2836 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2830)
!2837 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2830)
!2838 = !DILocation(line: 381, column: 5, scope: !2817)
!2839 = distinct !DISubprogram(name: "arg_extend3", scope: !3, file: !3, line: 424, type: !2477, isLocal: true, isDefinition: true, scopeLine: 425, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2840)
!2840 = !{!2841, !2842, !2843}
!2841 = !DILocalVariable(name: "type", arg: 1, scope: !2839, file: !3, line: 424, type: !798)
!2842 = !DILocalVariable(name: "context", arg: 2, scope: !2839, file: !3, line: 424, type: !2479)
!2843 = !DILocalVariable(name: "first_type", scope: !2839, file: !3, line: 426, type: !798)
!2844 = !DILocation(line: 424, column: 21, scope: !2839)
!2845 = !DILocation(line: 424, column: 41, scope: !2839)
!2846 = !DILocation(line: 426, column: 35, scope: !2839)
!2847 = !DILocation(line: 426, column: 54, scope: !2839)
!2848 = !DILocation(line: 426, column: 62, scope: !2839)
!2849 = !DILocation(line: 426, column: 26, scope: !2839)
!2850 = !DILocation(line: 426, column: 13, scope: !2839)
!2851 = !DILocation(line: 428, column: 21, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 428, column: 9)
!2853 = !DILocation(line: 428, column: 9, scope: !2839)
!2854 = !DILocation(line: 329, column: 20, scope: !2670, inlinedAt: !2855)
!2855 = distinct !DILocation(line: 431, column: 9, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 430, column: 9)
!2857 = !DILocation(line: 329, column: 40, scope: !2670, inlinedAt: !2855)
!2858 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2859)
!2859 = distinct !DILocation(line: 331, column: 12, scope: !2670, inlinedAt: !2855)
!2860 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2859)
!2861 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2859)
!2862 = !DILocation(line: 431, column: 2, scope: !2856)
!2863 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2859)
!2864 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2859)
!2865 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2859)
!2866 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2859)
!2867 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2859)
!2868 = !DILocation(line: 433, column: 1, scope: !2839)
!2869 = distinct !DISubprogram(name: "arg_same_struct_as_prev", scope: !3, file: !3, line: 390, type: !2477, isLocal: true, isDefinition: true, scopeLine: 391, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2870)
!2870 = !{!2871, !2872, !2873}
!2871 = !DILocalVariable(name: "type", arg: 1, scope: !2869, file: !3, line: 390, type: !798)
!2872 = !DILocalVariable(name: "context", arg: 2, scope: !2869, file: !3, line: 390, type: !2479)
!2873 = !DILocalVariable(name: "prev_type", scope: !2869, file: !3, line: 392, type: !798)
!2874 = !DILocation(line: 390, column: 33, scope: !2869)
!2875 = !DILocation(line: 390, column: 53, scope: !2869)
!2876 = !DILocation(line: 392, column: 34, scope: !2869)
!2877 = !DILocation(line: 392, column: 53, scope: !2869)
!2878 = !DILocation(line: 392, column: 61, scope: !2869)
!2879 = !DILocation(line: 392, column: 25, scope: !2869)
!2880 = !DILocation(line: 392, column: 13, scope: !2869)
!2881 = !DILocation(line: 394, column: 20, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 394, column: 9)
!2883 = !DILocation(line: 394, column: 31, scope: !2882)
!2884 = !DILocation(line: 394, column: 69, scope: !2882)
!2885 = !DILocation(line: 394, column: 28, scope: !2882)
!2886 = !DILocation(line: 394, column: 9, scope: !2869)
!2887 = !DILocation(line: 292, column: 11, scope: !2677, inlinedAt: !2888)
!2888 = distinct !DILocation(line: 395, column: 9, scope: !2882)
!2889 = !DILocation(line: 293, column: 11, scope: !2677, inlinedAt: !2888)
!2890 = !DILocation(line: 294, column: 16, scope: !2677, inlinedAt: !2888)
!2891 = !DILocation(line: 299, column: 34, scope: !2677, inlinedAt: !2888)
!2892 = !DILocation(line: 299, column: 23, scope: !2677, inlinedAt: !2888)
!2893 = !DILocation(line: 299, column: 62, scope: !2677, inlinedAt: !2888)
!2894 = !DILocation(line: 300, column: 15, scope: !2677, inlinedAt: !2888)
!2895 = !DILocation(line: 298, column: 12, scope: !2677, inlinedAt: !2888)
!2896 = !DILocation(line: 395, column: 2, scope: !2882)
!2897 = !DILocation(line: 397, column: 1, scope: !2869)
!2898 = !DILocation(line: 1863, column: 29, scope: !2506)
!2899 = !DILocation(line: 1863, column: 37, scope: !2506)
!2900 = !DILocation(line: 1868, column: 13, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 1868, column: 9)
!2902 = !DILocation(line: 1868, column: 9, scope: !2506)
!2903 = !DILocation(line: 1869, column: 9, scope: !2901)
!2904 = !{!2690, !2690, i64 0}
!2905 = !DILocation(line: 1870, column: 9, scope: !2506)
!2906 = !DILocation(line: 1870, column: 9, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 1870, column: 9)
!2908 = !DILocation(line: 1870, column: 16, scope: !2907)
!2909 = !DILocation(line: 1872, column: 9, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 1871, column: 5)
!2911 = !DILocation(line: 1866, column: 13, scope: !2506)
!2912 = !DILocation(line: 1873, column: 11, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 1873, column: 6)
!2914 = !DILocation(line: 1873, column: 6, scope: !2910)
!2915 = !DILocation(line: 1875, column: 10, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 1875, column: 10)
!2917 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 1874, column: 2)
!2918 = !{!2691, !2691, i64 0}
!2919 = !DILocation(line: 1875, column: 16, scope: !2916)
!2920 = !DILocation(line: 1875, column: 23, scope: !2916)
!2921 = !DILocation(line: 1875, column: 26, scope: !2916)
!2922 = !{!2923, !2693, i64 0}
!2923 = !{!"expand", !2693, i64 0, !2690, i64 8, !2690, i64 12, !2693, i64 16, !2924, i64 24, !2690, i64 48, !2690, i64 52, !2690, i64 56, !2690, i64 60, !2693, i64 64, !2693, i64 72}
!2924 = !{!"", !2690, i64 0, !2690, i64 4, !2925, i64 8, !2690, i64 16}
!2925 = !{!"long", !2691, i64 0}
!2926 = !DILocation(line: 1875, column: 59, scope: !2916)
!2927 = !DILocation(line: 1875, column: 10, scope: !2917)
!2928 = !DILocation(line: 1876, column: 10, scope: !2916)
!2929 = !DILocation(line: 1876, column: 3, scope: !2916)
!2930 = !DILocation(line: 1880, column: 9, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 1880, column: 9)
!2932 = !DILocation(line: 1880, column: 18, scope: !2931)
!2933 = !DILocation(line: 1880, column: 9, scope: !2506)
!2934 = !DILocation(line: 1882, column: 2, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 1881, column: 5)
!2936 = !{!2937, !2693, i64 0}
!2937 = !{!"", !2693, i64 0, !2691, i64 8, !2691, i64 9, !2691, i64 10, !2693, i64 16, !2693, i64 24, !2693, i64 32}
!2938 = !DILocation(line: 1883, column: 2, scope: !2935)
!2939 = !DILocation(line: 1884, column: 23, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 1884, column: 6)
!2941 = !DILocation(line: 1884, column: 6, scope: !2940)
!2942 = !DILocation(line: 1884, column: 31, scope: !2940)
!2943 = !{!2937, !2691, i64 9}
!2944 = !DILocation(line: 1884, column: 42, scope: !2940)
!2945 = !DILocation(line: 1884, column: 6, scope: !2935)
!2946 = !DILocation(line: 1885, column: 6, scope: !2940)
!2947 = !DILocation(line: 1886, column: 9, scope: !2935)
!2948 = !DILocation(line: 1886, column: 2, scope: !2935)
!2949 = !DILocation(line: 1890, column: 1, scope: !2506)
!2950 = !DILocation(line: 1897, column: 25, scope: !2530)
!2951 = !DILocation(line: 1897, column: 33, scope: !2530)
!2952 = !DILocation(line: 1902, column: 13, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 1902, column: 9)
!2954 = !DILocation(line: 1902, column: 9, scope: !2530)
!2955 = !DILocation(line: 1903, column: 9, scope: !2953)
!2956 = !DILocation(line: 1904, column: 9, scope: !2530)
!2957 = !DILocation(line: 1904, column: 9, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 1904, column: 9)
!2959 = !DILocation(line: 1904, column: 16, scope: !2958)
!2960 = !DILocation(line: 1906, column: 9, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 1905, column: 5)
!2962 = !DILocation(line: 1900, column: 13, scope: !2530)
!2963 = !DILocation(line: 1907, column: 11, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 1907, column: 6)
!2965 = !DILocation(line: 1907, column: 6, scope: !2961)
!2966 = !DILocation(line: 1910, column: 34, scope: !2530)
!2967 = !DILocation(line: 1910, column: 12, scope: !2530)
!2968 = !DILocation(line: 1910, column: 5, scope: !2530)
!2969 = !DILocation(line: 1911, column: 1, scope: !2530)
!2970 = distinct !DISubprogram(name: "find_internal_func", scope: !3, file: !3, line: 1950, type: !2971, isLocal: false, isDefinition: true, scopeLine: 1951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2973)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!756, !759}
!2973 = !{!2974}
!2974 = !DILocalVariable(name: "name", arg: 1, scope: !2970, file: !3, line: 1950, type: !759)
!2975 = !DILocation(line: 1950, column: 28, scope: !2970)
!2976 = !DILocalVariable(name: "name", arg: 1, scope: !2977, file: !3, line: 1919, type: !759)
!2977 = distinct !DISubprogram(name: "find_internal_func_opt", scope: !3, file: !3, line: 1919, type: !2978, isLocal: true, isDefinition: true, scopeLine: 1920, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2980)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!756, !759, !756}
!2980 = !{!2976, !2981, !2982, !2983, !2984, !2985}
!2981 = !DILocalVariable(name: "implemented", arg: 2, scope: !2977, file: !3, line: 1919, type: !756)
!2982 = !DILocalVariable(name: "first", scope: !2977, file: !3, line: 1921, type: !756)
!2983 = !DILocalVariable(name: "last", scope: !2977, file: !3, line: 1922, type: !756)
!2984 = !DILocalVariable(name: "cmp", scope: !2977, file: !3, line: 1923, type: !756)
!2985 = !DILocalVariable(name: "x", scope: !2977, file: !3, line: 1924, type: !756)
!2986 = !DILocation(line: 1919, column: 32, scope: !2977, inlinedAt: !2987)
!2987 = distinct !DILocation(line: 1952, column: 12, scope: !2970)
!2988 = !DILocation(line: 1919, column: 42, scope: !2977, inlinedAt: !2987)
!2989 = !DILocation(line: 1921, column: 10, scope: !2977, inlinedAt: !2987)
!2990 = !DILocation(line: 1922, column: 10, scope: !2977, inlinedAt: !2987)
!2991 = !DILocation(line: 1929, column: 5, scope: !2977, inlinedAt: !2987)
!2992 = !DILocation(line: 1931, column: 31, scope: !2993, inlinedAt: !2987)
!2993 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 1930, column: 5)
!2994 = !DILocation(line: 1931, column: 40, scope: !2993, inlinedAt: !2987)
!2995 = !DILocation(line: 1931, column: 12, scope: !2993, inlinedAt: !2987)
!2996 = !DILocation(line: 1924, column: 10, scope: !2977, inlinedAt: !2987)
!2997 = !DILocation(line: 1932, column: 8, scope: !2993, inlinedAt: !2987)
!2998 = !DILocation(line: 1923, column: 10, scope: !2977, inlinedAt: !2987)
!2999 = !DILocation(line: 1933, column: 10, scope: !3000, inlinedAt: !2987)
!3000 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 1933, column: 6)
!3001 = !DILocation(line: 1933, column: 6, scope: !2993, inlinedAt: !2987)
!3002 = !DILocation(line: 1934, column: 15, scope: !3000, inlinedAt: !2987)
!3003 = !DILocation(line: 1934, column: 6, scope: !3000, inlinedAt: !2987)
!3004 = !DILocation(line: 1935, column: 15, scope: !3005, inlinedAt: !2987)
!3005 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 1935, column: 11)
!3006 = !DILocation(line: 1935, column: 11, scope: !3000, inlinedAt: !2987)
!3007 = !DILocation(line: 1936, column: 16, scope: !3005, inlinedAt: !2987)
!3008 = !DILocation(line: 1937, column: 46, scope: !3009, inlinedAt: !2987)
!3009 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1937, column: 11)
!3010 = !{!2937, !2693, i64 32}
!3011 = !DILocation(line: 1937, column: 53, scope: !3009, inlinedAt: !2987)
!3012 = !DILocation(line: 1937, column: 11, scope: !3005, inlinedAt: !2987)
!3013 = !DILocation(line: 1929, column: 18, scope: !2977, inlinedAt: !2987)
!3014 = distinct !{!3014, !3015, !3016}
!3015 = !DILocation(line: 1929, column: 5, scope: !2977)
!3016 = !DILocation(line: 1941, column: 5, scope: !2977)
!3017 = !DILocation(line: 1942, column: 5, scope: !2977, inlinedAt: !2987)
!3018 = !DILocation(line: 1952, column: 5, scope: !2970)
!3019 = distinct !DISubprogram(name: "has_internal_func", scope: !3, file: !3, line: 1956, type: !2971, isLocal: false, isDefinition: true, scopeLine: 1957, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3020)
!3020 = !{!3021}
!3021 = !DILocalVariable(name: "name", arg: 1, scope: !3019, file: !3, line: 1956, type: !759)
!3022 = !DILocation(line: 1956, column: 27, scope: !3019)
!3023 = !DILocation(line: 1919, column: 32, scope: !2977, inlinedAt: !3024)
!3024 = distinct !DILocation(line: 1958, column: 12, scope: !3019)
!3025 = !DILocation(line: 1919, column: 42, scope: !2977, inlinedAt: !3024)
!3026 = !DILocation(line: 1921, column: 10, scope: !2977, inlinedAt: !3024)
!3027 = !DILocation(line: 1922, column: 10, scope: !2977, inlinedAt: !3024)
!3028 = !DILocation(line: 1929, column: 5, scope: !2977, inlinedAt: !3024)
!3029 = !DILocation(line: 1931, column: 31, scope: !2993, inlinedAt: !3024)
!3030 = !DILocation(line: 1931, column: 40, scope: !2993, inlinedAt: !3024)
!3031 = !DILocation(line: 1931, column: 12, scope: !2993, inlinedAt: !3024)
!3032 = !DILocation(line: 1924, column: 10, scope: !2977, inlinedAt: !3024)
!3033 = !DILocation(line: 1932, column: 8, scope: !2993, inlinedAt: !3024)
!3034 = !DILocation(line: 1923, column: 10, scope: !2977, inlinedAt: !3024)
!3035 = !DILocation(line: 1933, column: 10, scope: !3000, inlinedAt: !3024)
!3036 = !DILocation(line: 1933, column: 6, scope: !2993, inlinedAt: !3024)
!3037 = !DILocation(line: 1934, column: 15, scope: !3000, inlinedAt: !3024)
!3038 = !DILocation(line: 1934, column: 6, scope: !3000, inlinedAt: !3024)
!3039 = !DILocation(line: 1935, column: 15, scope: !3005, inlinedAt: !3024)
!3040 = !DILocation(line: 1935, column: 11, scope: !3000, inlinedAt: !3024)
!3041 = !DILocation(line: 1936, column: 16, scope: !3005, inlinedAt: !3024)
!3042 = !DILocation(line: 1937, column: 46, scope: !3009, inlinedAt: !3024)
!3043 = !DILocation(line: 1937, column: 53, scope: !3009, inlinedAt: !3024)
!3044 = !DILocation(line: 1937, column: 11, scope: !3005, inlinedAt: !3024)
!3045 = !DILocation(line: 1929, column: 18, scope: !2977, inlinedAt: !3024)
!3046 = !DILocation(line: 1942, column: 5, scope: !2977, inlinedAt: !3024)
!3047 = !DILocation(line: 1958, column: 47, scope: !3019)
!3048 = !DILocation(line: 1958, column: 5, scope: !3019)
!3049 = distinct !DISubprogram(name: "internal_func_name", scope: !3, file: !3, line: 1968, type: !3050, isLocal: false, isDefinition: true, scopeLine: 1969, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3052)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!751, !756}
!3052 = !{!3053}
!3053 = !DILocalVariable(name: "idx", arg: 1, scope: !3049, file: !3, line: 1968, type: !756)
!3054 = !DILocation(line: 1968, column: 24, scope: !3049)
!3055 = !DILocation(line: 1970, column: 12, scope: !3049)
!3056 = !DILocation(line: 1970, column: 34, scope: !3049)
!3057 = !DILocation(line: 1970, column: 5, scope: !3049)
!3058 = distinct !DISubprogram(name: "internal_func_check_arg_types", scope: !3, file: !3, line: 1979, type: !3059, isLocal: false, isDefinition: true, scopeLine: 1984, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3061)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{!756, !797, !756, !756, !2487}
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067, !3068}
!3062 = !DILocalVariable(name: "types", arg: 1, scope: !3058, file: !3, line: 1980, type: !797)
!3063 = !DILocalVariable(name: "idx", arg: 2, scope: !3058, file: !3, line: 1981, type: !756)
!3064 = !DILocalVariable(name: "argcount", arg: 3, scope: !3058, file: !3, line: 1982, type: !756)
!3065 = !DILocalVariable(name: "cctx", arg: 4, scope: !3058, file: !3, line: 1983, type: !2487)
!3066 = !DILocalVariable(name: "argchecks", scope: !3058, file: !3, line: 1985, type: !2576)
!3067 = !DILocalVariable(name: "i", scope: !3058, file: !3, line: 1986, type: !756)
!3068 = !DILocalVariable(name: "context", scope: !3069, file: !3, line: 1990, type: !2480)
!3069 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1989, column: 5)
!3070 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 1988, column: 9)
!3071 = !DILocation(line: 1980, column: 11, scope: !3058)
!3072 = !DILocation(line: 1981, column: 6, scope: !3058)
!3073 = !DILocation(line: 1982, column: 6, scope: !3058)
!3074 = !DILocation(line: 1983, column: 10, scope: !3058)
!3075 = !DILocation(line: 1985, column: 29, scope: !3058)
!3076 = !DILocation(line: 1985, column: 51, scope: !3058)
!3077 = !{!2937, !2693, i64 16}
!3078 = !DILocation(line: 1985, column: 17, scope: !3058)
!3079 = !DILocation(line: 1988, column: 19, scope: !3070)
!3080 = !DILocation(line: 1988, column: 9, scope: !3058)
!3081 = !DILocation(line: 1990, column: 2, scope: !3069)
!3082 = !DILocation(line: 1992, column: 10, scope: !3069)
!3083 = !DILocation(line: 1992, column: 20, scope: !3069)
!3084 = !DILocation(line: 1993, column: 10, scope: !3069)
!3085 = !DILocation(line: 1993, column: 20, scope: !3069)
!3086 = !DILocation(line: 1994, column: 10, scope: !3069)
!3087 = !DILocation(line: 1994, column: 19, scope: !3069)
!3088 = !DILocation(line: 1986, column: 10, scope: !3058)
!3089 = !DILocation(line: 1995, column: 16, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1995, column: 2)
!3091 = distinct !DILexicalBlock(scope: !3069, file: !3, line: 1995, column: 2)
!3092 = !DILocation(line: 1995, column: 2, scope: !3091)
!3093 = !DILocation(line: 1996, column: 10, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 1996, column: 10)
!3095 = !DILocation(line: 1996, column: 23, scope: !3094)
!3096 = !DILocation(line: 1996, column: 10, scope: !3090)
!3097 = !DILocation(line: 1998, column: 19, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 1997, column: 6)
!3099 = !DILocation(line: 1999, column: 20, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 1999, column: 7)
!3101 = !DILocation(line: 1990, column: 15, scope: !3069)
!3102 = !DILocation(line: 1999, column: 7, scope: !3100)
!3103 = !DILocation(line: 1999, column: 40, scope: !3100)
!3104 = !DILocation(line: 1999, column: 7, scope: !3098)
!3105 = !DILocation(line: 1995, column: 28, scope: !3090)
!3106 = distinct !{!3106, !3092, !3107}
!3107 = !DILocation(line: 2001, column: 6, scope: !3091)
!3108 = !DILocation(line: 2002, column: 5, scope: !3070)
!3109 = !DILocation(line: 2004, column: 1, scope: !3058)
!3110 = distinct !DISubprogram(name: "internal_func_ret_type", scope: !3, file: !3, line: 2012, type: !3111, isLocal: false, isDefinition: true, scopeLine: 2013, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3113)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!798, !756, !756, !797}
!3113 = !{!3114, !3115, !3116}
!3114 = !DILocalVariable(name: "idx", arg: 1, scope: !3110, file: !3, line: 2012, type: !756)
!3115 = !DILocalVariable(name: "argcount", arg: 2, scope: !3110, file: !3, line: 2012, type: !756)
!3116 = !DILocalVariable(name: "argtypes", arg: 3, scope: !3110, file: !3, line: 2012, type: !797)
!3117 = !DILocation(line: 2012, column: 28, scope: !3110)
!3118 = !DILocation(line: 2012, column: 37, scope: !3110)
!3119 = !DILocation(line: 2012, column: 56, scope: !3110)
!3120 = !DILocation(line: 2014, column: 12, scope: !3110)
!3121 = !DILocation(line: 2014, column: 34, scope: !3110)
!3122 = !{!2937, !2693, i64 24}
!3123 = !DILocation(line: 2014, column: 5, scope: !3110)
!3124 = distinct !DISubprogram(name: "internal_func_is_map", scope: !3, file: !3, line: 2021, type: !3125, isLocal: false, isDefinition: true, scopeLine: 2022, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!756, !756}
!3127 = !{!3128}
!3128 = !DILocalVariable(name: "idx", arg: 1, scope: !3124, file: !3, line: 2021, type: !756)
!3129 = !DILocation(line: 2021, column: 26, scope: !3124)
!3130 = !DILocation(line: 2023, column: 41, scope: !3124)
!3131 = !DILocation(line: 2023, column: 5, scope: !3124)
!3132 = distinct !DISubprogram(name: "check_internal_func", scope: !3, file: !3, line: 2033, type: !3133, isLocal: false, isDefinition: true, scopeLine: 2034, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3135)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{!756, !756, !756}
!3135 = !{!3136, !3137, !3138, !3139}
!3136 = !DILocalVariable(name: "idx", arg: 1, scope: !3132, file: !3, line: 2033, type: !756)
!3137 = !DILocalVariable(name: "argcount", arg: 2, scope: !3132, file: !3, line: 2033, type: !756)
!3138 = !DILocalVariable(name: "res", scope: !3132, file: !3, line: 2035, type: !756)
!3139 = !DILocalVariable(name: "name", scope: !3132, file: !3, line: 2036, type: !751)
!3140 = !DILocation(line: 2033, column: 25, scope: !3132)
!3141 = !DILocation(line: 2033, column: 34, scope: !3132)
!3142 = !DILocation(line: 2038, column: 20, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 2038, column: 9)
!3144 = !DILocation(line: 2038, column: 42, scope: !3143)
!3145 = !{!2937, !2691, i64 8}
!3146 = !DILocation(line: 2038, column: 18, scope: !3143)
!3147 = !DILocation(line: 2038, column: 9, scope: !3132)
!3148 = !DILocation(line: 2040, column: 47, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 2040, column: 14)
!3150 = !DILocation(line: 2040, column: 25, scope: !3149)
!3151 = !DILocation(line: 2040, column: 23, scope: !3149)
!3152 = !DILocation(line: 2040, column: 14, scope: !3143)
!3153 = !DILocation(line: 2043, column: 31, scope: !3149)
!3154 = !{!2937, !2691, i64 10}
!3155 = !DILocation(line: 2043, column: 9, scope: !3149)
!3156 = !DILocation(line: 2043, column: 2, scope: !3149)
!3157 = !DILocation(line: 1968, column: 24, scope: !3049, inlinedAt: !3158)
!3158 = distinct !DILocation(line: 2045, column: 12, scope: !3132)
!3159 = !DILocation(line: 1970, column: 34, scope: !3049, inlinedAt: !3158)
!3160 = !DILocation(line: 2036, column: 14, scope: !3132)
!3161 = !DILocation(line: 2047, column: 8, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 2046, column: 9)
!3163 = !DILocation(line: 2047, column: 2, scope: !3162)
!3164 = !DILocation(line: 2049, column: 8, scope: !3162)
!3165 = !DILocation(line: 2049, column: 2, scope: !3162)
!3166 = !DILocation(line: 2051, column: 1, scope: !3132)
!3167 = distinct !DISubprogram(name: "call_internal_func", scope: !3, file: !3, line: 2054, type: !3168, isLocal: false, isDefinition: true, scopeLine: 2059, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3170)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!756, !759, !756, !2305, !2305}
!3170 = !{!3171, !3172, !3173, !3174, !3175}
!3171 = !DILocalVariable(name: "name", arg: 1, scope: !3167, file: !3, line: 2055, type: !759)
!3172 = !DILocalVariable(name: "argcount", arg: 2, scope: !3167, file: !3, line: 2056, type: !756)
!3173 = !DILocalVariable(name: "argvars", arg: 3, scope: !3167, file: !3, line: 2057, type: !2305)
!3174 = !DILocalVariable(name: "rettv", arg: 4, scope: !3167, file: !3, line: 2058, type: !2305)
!3175 = !DILocalVariable(name: "i", scope: !3167, file: !3, line: 2060, type: !756)
!3176 = !DILocation(line: 2055, column: 14, scope: !3167)
!3177 = !DILocation(line: 2056, column: 10, scope: !3167)
!3178 = !DILocation(line: 2057, column: 15, scope: !3167)
!3179 = !DILocation(line: 2058, column: 15, scope: !3167)
!3180 = !DILocation(line: 1950, column: 28, scope: !2970, inlinedAt: !3181)
!3181 = distinct !DILocation(line: 2062, column: 9, scope: !3167)
!3182 = !DILocation(line: 1919, column: 32, scope: !2977, inlinedAt: !3183)
!3183 = distinct !DILocation(line: 1952, column: 12, scope: !2970, inlinedAt: !3181)
!3184 = !DILocation(line: 1919, column: 42, scope: !2977, inlinedAt: !3183)
!3185 = !DILocation(line: 1921, column: 10, scope: !2977, inlinedAt: !3183)
!3186 = !DILocation(line: 1922, column: 10, scope: !2977, inlinedAt: !3183)
!3187 = !DILocation(line: 1929, column: 5, scope: !2977, inlinedAt: !3183)
!3188 = !DILocation(line: 1931, column: 31, scope: !2993, inlinedAt: !3183)
!3189 = !DILocation(line: 1931, column: 40, scope: !2993, inlinedAt: !3183)
!3190 = !DILocation(line: 1931, column: 12, scope: !2993, inlinedAt: !3183)
!3191 = !DILocation(line: 1924, column: 10, scope: !2977, inlinedAt: !3183)
!3192 = !DILocation(line: 1932, column: 8, scope: !2993, inlinedAt: !3183)
!3193 = !DILocation(line: 1923, column: 10, scope: !2977, inlinedAt: !3183)
!3194 = !DILocation(line: 1933, column: 10, scope: !3000, inlinedAt: !3183)
!3195 = !DILocation(line: 1933, column: 6, scope: !2993, inlinedAt: !3183)
!3196 = !DILocation(line: 1934, column: 15, scope: !3000, inlinedAt: !3183)
!3197 = !DILocation(line: 1934, column: 6, scope: !3000, inlinedAt: !3183)
!3198 = !DILocation(line: 1935, column: 15, scope: !3005, inlinedAt: !3183)
!3199 = !DILocation(line: 1935, column: 11, scope: !3000, inlinedAt: !3183)
!3200 = !DILocation(line: 1936, column: 16, scope: !3005, inlinedAt: !3183)
!3201 = !DILocation(line: 1937, column: 46, scope: !3009, inlinedAt: !3183)
!3202 = !DILocation(line: 1937, column: 53, scope: !3009, inlinedAt: !3183)
!3203 = !DILocation(line: 2063, column: 11, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 2063, column: 9)
!3205 = !DILocation(line: 1937, column: 11, scope: !3005, inlinedAt: !3183)
!3206 = !DILocation(line: 2060, column: 9, scope: !3167)
!3207 = !DILocation(line: 1929, column: 18, scope: !2977, inlinedAt: !3183)
!3208 = !DILocation(line: 2065, column: 40, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 2065, column: 9)
!3210 = !DILocation(line: 2065, column: 20, scope: !3209)
!3211 = !DILocation(line: 2065, column: 18, scope: !3209)
!3212 = !DILocation(line: 2065, column: 9, scope: !3167)
!3213 = !DILocation(line: 2067, column: 40, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 2067, column: 9)
!3215 = !DILocation(line: 2067, column: 20, scope: !3214)
!3216 = !DILocation(line: 2067, column: 18, scope: !3214)
!3217 = !DILocation(line: 2067, column: 9, scope: !3167)
!3218 = !DILocation(line: 2069, column: 5, scope: !3167)
!3219 = !DILocation(line: 2069, column: 23, scope: !3167)
!3220 = !DILocation(line: 2069, column: 30, scope: !3167)
!3221 = !{!3222, !2691, i64 0}
!3222 = !{!"", !2691, i64 0, !2691, i64 4, !2691, i64 8}
!3223 = !DILocation(line: 2070, column: 5, scope: !3167)
!3224 = !DILocation(line: 2071, column: 5, scope: !3167)
!3225 = !DILocation(line: 2072, column: 1, scope: !3167)
!3226 = distinct !DISubprogram(name: "call_internal_func_by_idx", scope: !3, file: !3, line: 2075, type: !3227, isLocal: false, isDefinition: true, scopeLine: 2079, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3229)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null, !756, !2305, !2305}
!3229 = !{!3230, !3231, !3232}
!3230 = !DILocalVariable(name: "idx", arg: 1, scope: !3226, file: !3, line: 2076, type: !756)
!3231 = !DILocalVariable(name: "argvars", arg: 2, scope: !3226, file: !3, line: 2077, type: !2305)
!3232 = !DILocalVariable(name: "rettv", arg: 3, scope: !3226, file: !3, line: 2078, type: !2305)
!3233 = !DILocation(line: 2076, column: 10, scope: !3226)
!3234 = !DILocation(line: 2077, column: 15, scope: !3226)
!3235 = !DILocation(line: 2078, column: 15, scope: !3226)
!3236 = !DILocation(line: 2080, column: 5, scope: !3226)
!3237 = !DILocation(line: 2080, column: 27, scope: !3226)
!3238 = !DILocation(line: 2081, column: 1, scope: !3226)
!3239 = distinct !DISubprogram(name: "call_internal_method", scope: !3, file: !3, line: 2087, type: !3240, isLocal: false, isDefinition: true, scopeLine: 2093, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3242)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!756, !759, !756, !2305, !2305, !2305}
!3242 = !{!3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250}
!3243 = !DILocalVariable(name: "name", arg: 1, scope: !3239, file: !3, line: 2088, type: !759)
!3244 = !DILocalVariable(name: "argcount", arg: 2, scope: !3239, file: !3, line: 2089, type: !756)
!3245 = !DILocalVariable(name: "argvars", arg: 3, scope: !3239, file: !3, line: 2090, type: !2305)
!3246 = !DILocalVariable(name: "rettv", arg: 4, scope: !3239, file: !3, line: 2091, type: !2305)
!3247 = !DILocalVariable(name: "basetv", arg: 5, scope: !3239, file: !3, line: 2092, type: !2305)
!3248 = !DILocalVariable(name: "i", scope: !3239, file: !3, line: 2094, type: !756)
!3249 = !DILocalVariable(name: "fi", scope: !3239, file: !3, line: 2095, type: !756)
!3250 = !DILocalVariable(name: "argv", scope: !3239, file: !3, line: 2096, type: !3251)
!3251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 2688, elements: !3252)
!3252 = !{!3253}
!3253 = !DISubrange(count: 21)
!3254 = !DILocation(line: 2088, column: 14, scope: !3239)
!3255 = !DILocation(line: 2089, column: 10, scope: !3239)
!3256 = !DILocation(line: 2090, column: 15, scope: !3239)
!3257 = !DILocation(line: 2091, column: 15, scope: !3239)
!3258 = !DILocation(line: 2092, column: 15, scope: !3239)
!3259 = !DILocation(line: 2096, column: 5, scope: !3239)
!3260 = !DILocation(line: 2096, column: 14, scope: !3239)
!3261 = !DILocation(line: 1950, column: 28, scope: !2970, inlinedAt: !3262)
!3262 = distinct !DILocation(line: 2098, column: 10, scope: !3239)
!3263 = !DILocation(line: 1919, column: 32, scope: !2977, inlinedAt: !3264)
!3264 = distinct !DILocation(line: 1952, column: 12, scope: !2970, inlinedAt: !3262)
!3265 = !DILocation(line: 1919, column: 42, scope: !2977, inlinedAt: !3264)
!3266 = !DILocation(line: 1921, column: 10, scope: !2977, inlinedAt: !3264)
!3267 = !DILocation(line: 1922, column: 10, scope: !2977, inlinedAt: !3264)
!3268 = !DILocation(line: 1929, column: 5, scope: !2977, inlinedAt: !3264)
!3269 = !DILocation(line: 1931, column: 31, scope: !2993, inlinedAt: !3264)
!3270 = !DILocation(line: 1931, column: 40, scope: !2993, inlinedAt: !3264)
!3271 = !DILocation(line: 1931, column: 12, scope: !2993, inlinedAt: !3264)
!3272 = !DILocation(line: 1924, column: 10, scope: !2977, inlinedAt: !3264)
!3273 = !DILocation(line: 1932, column: 8, scope: !2993, inlinedAt: !3264)
!3274 = !DILocation(line: 1923, column: 10, scope: !2977, inlinedAt: !3264)
!3275 = !DILocation(line: 1933, column: 10, scope: !3000, inlinedAt: !3264)
!3276 = !DILocation(line: 1933, column: 6, scope: !2993, inlinedAt: !3264)
!3277 = !DILocation(line: 1934, column: 15, scope: !3000, inlinedAt: !3264)
!3278 = !DILocation(line: 1934, column: 6, scope: !3000, inlinedAt: !3264)
!3279 = !DILocation(line: 1935, column: 15, scope: !3005, inlinedAt: !3264)
!3280 = !DILocation(line: 1935, column: 11, scope: !3000, inlinedAt: !3264)
!3281 = !DILocation(line: 1936, column: 16, scope: !3005, inlinedAt: !3264)
!3282 = !DILocation(line: 1937, column: 46, scope: !3009, inlinedAt: !3264)
!3283 = !DILocation(line: 1937, column: 53, scope: !3009, inlinedAt: !3264)
!3284 = !DILocation(line: 2099, column: 12, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2099, column: 9)
!3286 = !DILocation(line: 1937, column: 11, scope: !3005, inlinedAt: !3264)
!3287 = !DILocation(line: 2095, column: 10, scope: !3239)
!3288 = !DILocation(line: 1929, column: 18, scope: !2977, inlinedAt: !3264)
!3289 = !DILocation(line: 2101, column: 30, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2101, column: 9)
!3291 = !DILocation(line: 2101, column: 40, scope: !3290)
!3292 = !DILocation(line: 2101, column: 9, scope: !3239)
!3293 = !DILocation(line: 2103, column: 18, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2103, column: 9)
!3295 = !DILocation(line: 2103, column: 45, scope: !3294)
!3296 = !DILocation(line: 2103, column: 24, scope: !3294)
!3297 = !DILocation(line: 2103, column: 22, scope: !3294)
!3298 = !DILocation(line: 2103, column: 9, scope: !3239)
!3299 = !DILocation(line: 2105, column: 45, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2105, column: 9)
!3301 = !DILocation(line: 2105, column: 24, scope: !3300)
!3302 = !DILocation(line: 2105, column: 22, scope: !3300)
!3303 = !DILocation(line: 2105, column: 9, scope: !3239)
!3304 = !DILocation(line: 2115, column: 14, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2108, column: 9)
!3306 = !DILocation(line: 2118, column: 12, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2116, column: 5)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 2115, column: 14)
!3309 = !{i64 0, i64 4, !2918, i64 4, i64 1, !2918, i64 8, i64 8, !3310, i64 8, i64 8, !3312, i64 8, i64 8, !2783, i64 8, i64 8, !2783, i64 8, i64 8, !2783, i64 8, i64 8, !2783, i64 8, i64 8, !2783, i64 8, i64 8, !2783, i64 8, i64 8, !2783}
!3310 = !{!3311, !3311, i64 0}
!3311 = !{!"long long", !2691, i64 0}
!3312 = !{!3313, !3313, i64 0}
!3313 = !{!"double", !2691, i64 0}
!3314 = !DILocation(line: 2119, column: 2, scope: !3307)
!3315 = !DILocation(line: 2119, column: 12, scope: !3307)
!3316 = !DILocation(line: 2094, column: 10, scope: !3239)
!3317 = !DILocation(line: 2120, column: 16, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 2120, column: 2)
!3319 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 2120, column: 2)
!3320 = !DILocation(line: 2120, column: 2, scope: !3319)
!3321 = !DILocation(line: 2121, column: 13, scope: !3318)
!3322 = !DILocation(line: 2121, column: 6, scope: !3318)
!3323 = !DILocation(line: 2121, column: 20, scope: !3318)
!3324 = distinct !{!3324, !3320, !3325}
!3325 = !DILocation(line: 2121, column: 29, scope: !3319)
!3326 = !DILocation(line: 2126, column: 12, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 2124, column: 5)
!3328 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2123, column: 14)
!3329 = !DILocation(line: 2127, column: 2, scope: !3327)
!3330 = !DILocation(line: 2127, column: 12, scope: !3327)
!3331 = !DILocation(line: 2128, column: 2, scope: !3327)
!3332 = !DILocation(line: 2128, column: 12, scope: !3327)
!3333 = !DILocation(line: 2129, column: 16, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 2129, column: 2)
!3335 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 2129, column: 2)
!3336 = !DILocation(line: 2129, column: 2, scope: !3335)
!3337 = !DILocation(line: 2130, column: 13, scope: !3334)
!3338 = !DILocation(line: 2130, column: 6, scope: !3334)
!3339 = !DILocation(line: 2130, column: 20, scope: !3334)
!3340 = distinct !{!3340, !3336, !3341}
!3341 = !DILocation(line: 2130, column: 29, scope: !3335)
!3342 = !DILocation(line: 2132, column: 45, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 2132, column: 14)
!3344 = !DILocation(line: 2132, column: 14, scope: !3328)
!3345 = !DILocation(line: 2135, column: 12, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 2133, column: 5)
!3347 = !DILocation(line: 2136, column: 2, scope: !3346)
!3348 = !DILocation(line: 2136, column: 12, scope: !3346)
!3349 = !DILocation(line: 2137, column: 2, scope: !3346)
!3350 = !DILocation(line: 2137, column: 12, scope: !3346)
!3351 = !DILocation(line: 2138, column: 2, scope: !3346)
!3352 = !DILocation(line: 2138, column: 12, scope: !3346)
!3353 = !DILocation(line: 2139, column: 16, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 2139, column: 2)
!3355 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 2139, column: 2)
!3356 = !DILocation(line: 2139, column: 2, scope: !3355)
!3357 = !DILocation(line: 2140, column: 13, scope: !3354)
!3358 = !DILocation(line: 2140, column: 6, scope: !3354)
!3359 = !DILocation(line: 2140, column: 20, scope: !3354)
!3360 = distinct !{!3360, !3356, !3361}
!3361 = !DILocation(line: 2140, column: 29, scope: !3355)
!3362 = !DILocation(line: 2145, column: 12, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 2143, column: 5)
!3364 = !DILocation(line: 2146, column: 16, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 2146, column: 2)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 2146, column: 2)
!3367 = !DILocation(line: 2146, column: 2, scope: !3366)
!3368 = !DILocation(line: 2147, column: 13, scope: !3365)
!3369 = !DILocation(line: 2147, column: 6, scope: !3365)
!3370 = !DILocation(line: 2147, column: 20, scope: !3365)
!3371 = distinct !{!3371, !3367, !3372}
!3372 = !DILocation(line: 2147, column: 29, scope: !3366)
!3373 = distinct !{!3373, !3374}
!3374 = !{!"llvm.loop.unroll.disable"}
!3375 = distinct !{!3375, !3374}
!3376 = distinct !{!3376, !3374}
!3377 = distinct !{!3377, !3374}
!3378 = !DILocation(line: 2149, column: 5, scope: !3239)
!3379 = !DILocation(line: 2149, column: 24, scope: !3239)
!3380 = !DILocation(line: 2149, column: 31, scope: !3239)
!3381 = !DILocation(line: 2151, column: 33, scope: !3239)
!3382 = !DILocation(line: 2151, column: 5, scope: !3239)
!3383 = !DILocation(line: 2152, column: 5, scope: !3239)
!3384 = !DILocation(line: 2153, column: 1, scope: !3239)
!3385 = distinct !DISubprogram(name: "non_zero_arg", scope: !3, file: !3, line: 2159, type: !3386, isLocal: false, isDefinition: true, scopeLine: 2160, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!756, !2305}
!3388 = !{!3389}
!3389 = !DILocalVariable(name: "argvars", arg: 1, scope: !3385, file: !3, line: 2159, type: !2305)
!3390 = !DILocation(line: 2159, column: 24, scope: !3385)
!3391 = !DILocation(line: 2161, column: 25, scope: !3385)
!3392 = !DILocation(line: 2162, column: 3, scope: !3385)
!3393 = !DILocation(line: 2162, column: 22, scope: !3385)
!3394 = !DILocation(line: 2162, column: 31, scope: !3385)
!3395 = !DILocation(line: 2163, column: 6, scope: !3385)
!3396 = !DILocation(line: 2164, column: 22, scope: !3385)
!3397 = !DILocation(line: 2164, column: 31, scope: !3385)
!3398 = !DILocation(line: 2165, column: 6, scope: !3385)
!3399 = !DILocation(line: 2166, column: 3, scope: !3385)
!3400 = !DILocation(line: 2166, column: 17, scope: !3385)
!3401 = !DILocation(line: 2166, column: 22, scope: !3385)
!3402 = !DILocation(line: 2166, column: 31, scope: !3385)
!3403 = !DILocation(line: 2167, column: 3, scope: !3385)
!3404 = !DILocation(line: 2167, column: 6, scope: !3385)
!3405 = !DILocation(line: 2167, column: 32, scope: !3385)
!3406 = !DILocation(line: 2161, column: 5, scope: !3385)
!3407 = distinct !DISubprogram(name: "get_buf_arg", scope: !3, file: !3, line: 2375, type: !3408, isLocal: false, isDefinition: true, scopeLine: 2376, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!990, !2305}
!3410 = !{!3411, !3412}
!3411 = !DILocalVariable(name: "arg", arg: 1, scope: !3407, file: !3, line: 2375, type: !2305)
!3412 = !DILocalVariable(name: "buf", scope: !3407, file: !3, line: 2377, type: !990)
!3413 = !DILocation(line: 2375, column: 23, scope: !3407)
!3414 = !DILocation(line: 2379, column: 5, scope: !3407)
!3415 = !DILocation(line: 2380, column: 11, scope: !3407)
!3416 = !DILocation(line: 2377, column: 12, scope: !3407)
!3417 = !DILocation(line: 2381, column: 5, scope: !3407)
!3418 = !DILocation(line: 2382, column: 13, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 2382, column: 9)
!3420 = !DILocation(line: 2382, column: 9, scope: !3407)
!3421 = !DILocation(line: 2383, column: 8, scope: !3419)
!3422 = !DILocation(line: 2383, column: 44, scope: !3419)
!3423 = !DILocation(line: 2383, column: 2, scope: !3419)
!3424 = !DILocation(line: 2384, column: 5, scope: !3407)
!3425 = distinct !DISubprogram(name: "get_optional_window", scope: !3, file: !3, line: 2651, type: !3426, isLocal: false, isDefinition: true, scopeLine: 2652, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3428)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!1135, !2305, !756}
!3428 = !{!3429, !3430, !3431}
!3429 = !DILocalVariable(name: "argvars", arg: 1, scope: !3425, file: !3, line: 2651, type: !2305)
!3430 = !DILocalVariable(name: "idx", arg: 2, scope: !3425, file: !3, line: 2651, type: !756)
!3431 = !DILocalVariable(name: "win", scope: !3425, file: !3, line: 2653, type: !1135)
!3432 = !DILocation(line: 2651, column: 31, scope: !3425)
!3433 = !DILocation(line: 2651, column: 44, scope: !3425)
!3434 = !DILocation(line: 2653, column: 20, scope: !3425)
!3435 = !DILocation(line: 2653, column: 14, scope: !3425)
!3436 = !DILocation(line: 2655, column: 9, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 2655, column: 9)
!3438 = !DILocation(line: 2655, column: 22, scope: !3437)
!3439 = !DILocation(line: 2655, column: 29, scope: !3437)
!3440 = !DILocation(line: 2655, column: 9, scope: !3425)
!3441 = !DILocation(line: 2657, column: 8, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 2656, column: 5)
!3443 = !DILocation(line: 2658, column: 10, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 2658, column: 6)
!3445 = !DILocation(line: 2658, column: 6, scope: !3442)
!3446 = !DILocation(line: 2660, column: 11, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 2659, column: 2)
!3448 = !DILocation(line: 2660, column: 6, scope: !3447)
!3449 = !DILocation(line: 2661, column: 6, scope: !3447)
!3450 = !DILocation(line: 2665, column: 1, scope: !3425)
!3451 = distinct !DISubprogram(name: "execute_redir_str", scope: !3, file: !3, line: 3106, type: !3452, isLocal: false, isDefinition: true, scopeLine: 3107, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !759, !756}
!3454 = !{!3455, !3456, !3457}
!3455 = !DILocalVariable(name: "value", arg: 1, scope: !3451, file: !3, line: 3106, type: !759)
!3456 = !DILocalVariable(name: "value_len", arg: 2, scope: !3451, file: !3, line: 3106, type: !756)
!3457 = !DILocalVariable(name: "len", scope: !3451, file: !3, line: 3108, type: !756)
!3458 = !DILocation(line: 3106, column: 27, scope: !3451)
!3459 = !DILocation(line: 3106, column: 38, scope: !3451)
!3460 = !DILocation(line: 3110, column: 19, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 3110, column: 9)
!3462 = !DILocation(line: 3110, column: 9, scope: !3451)
!3463 = !DILocation(line: 3111, column: 13, scope: !3461)
!3464 = !DILocation(line: 3111, column: 8, scope: !3461)
!3465 = !DILocation(line: 3108, column: 10, scope: !3451)
!3466 = !DILocation(line: 3111, column: 2, scope: !3461)
!3467 = !DILocation(line: 3114, column: 9, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 3114, column: 9)
!3469 = !DILocation(line: 3114, column: 41, scope: !3468)
!3470 = !DILocation(line: 3114, column: 9, scope: !3451)
!3471 = !DILocation(line: 3116, column: 2, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 3115, column: 5)
!3473 = !{!3474, !2693, i64 16}
!3474 = !{!"growarray", !2690, i64 0, !2690, i64 4, !2690, i64 8, !2690, i64 12, !2693, i64 16}
!3475 = !{!3474, !2690, i64 0}
!3476 = !DILocation(line: 3118, column: 26, scope: !3472)
!3477 = !DILocation(line: 3119, column: 5, scope: !3472)
!3478 = !DILocation(line: 3120, column: 1, scope: !3451)
!3479 = distinct !DISubprogram(name: "execute_common", scope: !3, file: !3, line: 3150, type: !3480, isLocal: false, isDefinition: true, scopeLine: 3151, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3482)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{null, !2305, !2305, !756}
!3482 = !{!3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3502, !3503}
!3483 = !DILocalVariable(name: "argvars", arg: 1, scope: !3479, file: !3, line: 3150, type: !2305)
!3484 = !DILocalVariable(name: "rettv", arg: 2, scope: !3479, file: !3, line: 3150, type: !2305)
!3485 = !DILocalVariable(name: "arg_off", arg: 3, scope: !3479, file: !3, line: 3150, type: !756)
!3486 = !DILocalVariable(name: "cmd", scope: !3479, file: !3, line: 3152, type: !759)
!3487 = !DILocalVariable(name: "list", scope: !3479, file: !3, line: 3153, type: !885)
!3488 = !DILocalVariable(name: "save_msg_silent", scope: !3479, file: !3, line: 3154, type: !756)
!3489 = !DILocalVariable(name: "save_emsg_silent", scope: !3479, file: !3, line: 3155, type: !756)
!3490 = !DILocalVariable(name: "save_emsg_noredir", scope: !3479, file: !3, line: 3156, type: !756)
!3491 = !DILocalVariable(name: "save_redir_execute", scope: !3479, file: !3, line: 3157, type: !756)
!3492 = !DILocalVariable(name: "save_redir_off", scope: !3479, file: !3, line: 3158, type: !756)
!3493 = !DILocalVariable(name: "save_ga", scope: !3479, file: !3, line: 3159, type: !787)
!3494 = !DILocalVariable(name: "save_msg_col", scope: !3479, file: !3, line: 3160, type: !756)
!3495 = !DILocalVariable(name: "echo_output", scope: !3479, file: !3, line: 3161, type: !756)
!3496 = !DILocalVariable(name: "buf", scope: !3497, file: !3, line: 3189, type: !3499)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 3188, column: 5)
!3498 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3187, column: 9)
!3499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 520, elements: !3500)
!3500 = !{!3501}
!3501 = !DISubrange(count: 65)
!3502 = !DILocalVariable(name: "s", scope: !3497, file: !3, line: 3190, type: !759)
!3503 = !DILocalVariable(name: "item", scope: !3504, file: !3, line: 3219, type: !890)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 3218, column: 5)
!3505 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3215, column: 9)
!3506 = !DILocation(line: 3150, column: 26, scope: !3479)
!3507 = !DILocation(line: 3150, column: 45, scope: !3479)
!3508 = !DILocation(line: 3150, column: 56, scope: !3479)
!3509 = !DILocation(line: 3152, column: 13, scope: !3479)
!3510 = !DILocation(line: 3153, column: 13, scope: !3479)
!3511 = !DILocation(line: 3154, column: 28, scope: !3479)
!3512 = !DILocation(line: 3154, column: 10, scope: !3479)
!3513 = !DILocation(line: 3155, column: 29, scope: !3479)
!3514 = !DILocation(line: 3155, column: 10, scope: !3479)
!3515 = !DILocation(line: 3156, column: 30, scope: !3479)
!3516 = !DILocation(line: 3156, column: 10, scope: !3479)
!3517 = !DILocation(line: 3157, column: 31, scope: !3479)
!3518 = !DILocation(line: 3157, column: 10, scope: !3479)
!3519 = !DILocation(line: 3158, column: 27, scope: !3479)
!3520 = !DILocation(line: 3158, column: 10, scope: !3479)
!3521 = !DILocation(line: 3159, column: 5, scope: !3479)
!3522 = !DILocation(line: 3160, column: 25, scope: !3479)
!3523 = !DILocation(line: 3160, column: 10, scope: !3479)
!3524 = !DILocation(line: 3161, column: 10, scope: !3479)
!3525 = !DILocation(line: 3163, column: 12, scope: !3479)
!3526 = !DILocation(line: 3163, column: 17, scope: !3479)
!3527 = !DILocation(line: 3163, column: 26, scope: !3479)
!3528 = !DILocation(line: 3164, column: 12, scope: !3479)
!3529 = !DILocation(line: 3164, column: 19, scope: !3479)
!3530 = !DILocation(line: 3166, column: 9, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3166, column: 9)
!3532 = !DILocation(line: 3166, column: 26, scope: !3531)
!3533 = !DILocation(line: 3166, column: 9, scope: !3479)
!3534 = !DILocation(line: 3168, column: 26, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 3167, column: 5)
!3536 = !DILocation(line: 3168, column: 31, scope: !3535)
!3537 = !DILocation(line: 3169, column: 11, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 3169, column: 6)
!3539 = !DILocation(line: 3169, column: 19, scope: !3538)
!3540 = !DILocation(line: 3169, column: 28, scope: !3538)
!3541 = !{!3542, !2690, i64 76}
!3542 = !{!"listvar_S", !2693, i64 0, !2693, i64 8, !2691, i64 16, !2693, i64 40, !2693, i64 48, !2693, i64 56, !2693, i64 64, !2690, i64 72, !2690, i64 76, !2690, i64 80, !2690, i64 84, !2691, i64 88}
!3543 = !DILocation(line: 3169, column: 35, scope: !3538)
!3544 = !DILocation(line: 3169, column: 6, scope: !3535)
!3545 = !DILocation(line: 3172, column: 10, scope: !3535)
!3546 = !DILocation(line: 3172, column: 2, scope: !3535)
!3547 = !{!3542, !2690, i64 72}
!3548 = !DILocation(line: 3173, column: 5, scope: !3535)
!3549 = !DILocation(line: 3177, column: 7, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 3176, column: 5)
!3551 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 3174, column: 14)
!3552 = !DILocation(line: 3177, column: 2, scope: !3550)
!3553 = !DILocation(line: 3178, column: 2, scope: !3550)
!3554 = !DILocation(line: 3182, column: 8, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 3181, column: 5)
!3556 = !DILocation(line: 3183, column: 10, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 3183, column: 6)
!3558 = !DILocation(line: 3183, column: 6, scope: !3555)
!3559 = !DILocation(line: 3187, column: 25, scope: !3498)
!3560 = !DILocation(line: 3187, column: 9, scope: !3498)
!3561 = !DILocation(line: 3187, column: 30, scope: !3498)
!3562 = !DILocation(line: 3187, column: 37, scope: !3498)
!3563 = !DILocation(line: 3187, column: 9, scope: !3479)
!3564 = !DILocation(line: 3189, column: 2, scope: !3497)
!3565 = !DILocation(line: 3189, column: 9, scope: !3497)
!3566 = !DILocation(line: 3190, column: 15, scope: !3497)
!3567 = !DILocation(line: 3190, column: 11, scope: !3497)
!3568 = !DILocation(line: 3192, column: 8, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 3192, column: 6)
!3570 = !DILocation(line: 3192, column: 6, scope: !3497)
!3571 = !DILocation(line: 3194, column: 6, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 3194, column: 6)
!3573 = !DILocation(line: 3194, column: 9, scope: !3572)
!3574 = !DILocation(line: 3194, column: 6, scope: !3497)
!3575 = !DILocation(line: 3196, column: 6, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 3196, column: 6)
!3577 = !DILocation(line: 3196, column: 30, scope: !3576)
!3578 = !DILocation(line: 3196, column: 6, scope: !3497)
!3579 = !DILocation(line: 3197, column: 6, scope: !3576)
!3580 = !DILocation(line: 3198, column: 6, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 3198, column: 6)
!3582 = !DILocation(line: 3198, column: 27, scope: !3581)
!3583 = !DILocation(line: 3198, column: 6, scope: !3497)
!3584 = !DILocation(line: 3200, column: 18, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 3199, column: 2)
!3586 = !DILocation(line: 3201, column: 19, scope: !3585)
!3587 = !DILocation(line: 3202, column: 2, scope: !3585)
!3588 = !DILocation(line: 3203, column: 5, scope: !3498)
!3589 = !DILocation(line: 3205, column: 2, scope: !3498)
!3590 = !DILocation(line: 3207, column: 9, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3207, column: 9)
!3592 = !DILocation(line: 3207, column: 9, scope: !3479)
!3593 = !DILocation(line: 3208, column: 12, scope: !3591)
!3594 = !{i64 0, i64 4, !2904, i64 4, i64 4, !2904, i64 8, i64 4, !2904, i64 12, i64 4, !2904, i64 16, i64 8, !2783}
!3595 = !DILocation(line: 3208, column: 2, scope: !3591)
!3596 = !DILocation(line: 3209, column: 5, scope: !3479)
!3597 = !DILocation(line: 3210, column: 19, scope: !3479)
!3598 = !DILocation(line: 3211, column: 15, scope: !3479)
!3599 = !DILocation(line: 3212, column: 10, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3212, column: 9)
!3601 = !DILocation(line: 3212, column: 9, scope: !3479)
!3602 = !DILocation(line: 3213, column: 10, scope: !3600)
!3603 = !DILocation(line: 3213, column: 2, scope: !3600)
!3604 = !DILocation(line: 3215, column: 13, scope: !3505)
!3605 = !DILocation(line: 3215, column: 9, scope: !3479)
!3606 = !DILocation(line: 3216, column: 2, scope: !3505)
!3607 = !DILocation(line: 3219, column: 2, scope: !3504)
!3608 = !DILocation(line: 3221, column: 2, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 3221, column: 2)
!3610 = !{!3542, !2693, i64 0}
!3611 = !DILocation(line: 3221, column: 2, scope: !3504)
!3612 = !DILocalVariable(name: "list", arg: 1, scope: !3613, file: !3, line: 7369, type: !885)
!3613 = distinct !DISubprogram(name: "range_list_materialize", scope: !3, file: !3, line: 7369, type: !3614, isLocal: false, isDefinition: true, scopeLine: 7370, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3616)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{null, !885}
!3616 = !{!3612, !3617, !3618, !3619, !3620}
!3617 = !DILocalVariable(name: "start", scope: !3613, file: !3, line: 7371, type: !757)
!3618 = !DILocalVariable(name: "end", scope: !3613, file: !3, line: 7372, type: !757)
!3619 = !DILocalVariable(name: "stride", scope: !3613, file: !3, line: 7373, type: !756)
!3620 = !DILocalVariable(name: "i", scope: !3613, file: !3, line: 7374, type: !757)
!3621 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !3622)
!3622 = distinct !DILocation(line: 3221, column: 2, scope: !3609)
!3623 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !3622)
!3624 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !3622)
!3625 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !3622)
!3626 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !3622)
!3627 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !3622)
!3628 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !3622)
!3629 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !3622)
!3630 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !3622)
!3631 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !3622)
!3632 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !3622)
!3633 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !3622)
!3634 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !3622)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 7380, column: 5)
!3636 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 7380, column: 5)
!3637 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !3622)
!3638 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !3622)
!3639 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !3622)
!3640 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !3622)
!3641 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !3622)
!3642 = distinct !{!3642, !3643, !3644}
!3643 = !DILocation(line: 7380, column: 5, scope: !3636)
!3644 = !DILocation(line: 7382, column: 6, scope: !3636)
!3645 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !3622)
!3646 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 7381, column: 6)
!3647 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !3622)
!3648 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !3622)
!3649 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !3622)
!3650 = !DILocation(line: 3222, column: 15, scope: !3504)
!3651 = !DILocation(line: 3219, column: 14, scope: !3504)
!3652 = !DILocation(line: 3222, column: 7, scope: !3504)
!3653 = !DILocation(line: 3223, column: 2, scope: !3504)
!3654 = !DILocation(line: 3225, column: 10, scope: !3504)
!3655 = !DILocation(line: 3225, column: 2, scope: !3504)
!3656 = !DILocation(line: 3226, column: 5, scope: !3505)
!3657 = !DILocation(line: 3229, column: 9, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3229, column: 9)
!3659 = !DILocation(line: 3229, column: 39, scope: !3658)
!3660 = !DILocation(line: 3229, column: 9, scope: !3479)
!3661 = !DILocation(line: 3231, column: 28, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 3230, column: 5)
!3663 = !DILocation(line: 3231, column: 54, scope: !3662)
!3664 = !DILocation(line: 3231, column: 2, scope: !3662)
!3665 = !DILocation(line: 3231, column: 62, scope: !3662)
!3666 = !DILocation(line: 3232, column: 42, scope: !3662)
!3667 = !DILocation(line: 3233, column: 5, scope: !3662)
!3668 = !DILocation(line: 3236, column: 2, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 3235, column: 5)
!3670 = !DILocation(line: 3239, column: 16, scope: !3479)
!3671 = !DILocation(line: 3240, column: 17, scope: !3479)
!3672 = !DILocation(line: 3241, column: 18, scope: !3479)
!3673 = !DILocation(line: 3243, column: 19, scope: !3479)
!3674 = !DILocation(line: 3244, column: 9, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3244, column: 9)
!3676 = !DILocation(line: 3244, column: 9, scope: !3479)
!3677 = !DILocation(line: 3245, column: 21, scope: !3675)
!3678 = !DILocation(line: 3245, column: 2, scope: !3675)
!3679 = !DILocation(line: 3246, column: 15, scope: !3479)
!3680 = !DILocation(line: 3252, column: 2, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 3249, column: 9)
!3682 = !DILocation(line: 3257, column: 1, scope: !3479)
!3683 = !DILocation(line: 7369, column: 32, scope: !3613)
!3684 = !DILocation(line: 7371, column: 31, scope: !3613)
!3685 = !DILocation(line: 7371, column: 43, scope: !3613)
!3686 = !DILocation(line: 7371, column: 17, scope: !3613)
!3687 = !DILocation(line: 7372, column: 41, scope: !3613)
!3688 = !DILocation(line: 7372, column: 17, scope: !3613)
!3689 = !DILocation(line: 7373, column: 40, scope: !3613)
!3690 = !DILocation(line: 7373, column: 13, scope: !3613)
!3691 = !DILocation(line: 7376, column: 11, scope: !3613)
!3692 = !DILocation(line: 7376, column: 20, scope: !3613)
!3693 = !DILocation(line: 7378, column: 11, scope: !3613)
!3694 = !DILocation(line: 7378, column: 18, scope: !3613)
!3695 = !DILocation(line: 7374, column: 17, scope: !3613)
!3696 = !DILocation(line: 7380, column: 28, scope: !3635)
!3697 = !DILocation(line: 7380, column: 36, scope: !3635)
!3698 = !DILocation(line: 7380, column: 47, scope: !3635)
!3699 = !DILocation(line: 7380, column: 21, scope: !3635)
!3700 = !DILocation(line: 7377, column: 28, scope: !3613)
!3701 = !DILocation(line: 7381, column: 6, scope: !3646)
!3702 = !DILocation(line: 7381, column: 47, scope: !3646)
!3703 = !DILocation(line: 7380, column: 57, scope: !3635)
!3704 = !DILocation(line: 7381, column: 6, scope: !3635)
!3705 = !DILocation(line: 7383, column: 1, scope: !3613)
!3706 = distinct !DISubprogram(name: "get_list_line", scope: !3, file: !3, line: 3128, type: !3707, isLocal: true, isDefinition: true, scopeLine: 3133, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3710)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!759, !756, !750, !756, !3709}
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "getline_opt_T", file: !6, line: 1577, baseType: !684)
!3710 = !{!3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718}
!3711 = !DILocalVariable(name: "c", arg: 1, scope: !3706, file: !3, line: 3129, type: !756)
!3712 = !DILocalVariable(name: "cookie", arg: 2, scope: !3706, file: !3, line: 3130, type: !750)
!3713 = !DILocalVariable(name: "indent", arg: 3, scope: !3706, file: !3, line: 3131, type: !756)
!3714 = !DILocalVariable(name: "options", arg: 4, scope: !3706, file: !3, line: 3132, type: !3709)
!3715 = !DILocalVariable(name: "p", scope: !3706, file: !3, line: 3134, type: !2470)
!3716 = !DILocalVariable(name: "item", scope: !3706, file: !3, line: 3135, type: !890)
!3717 = !DILocalVariable(name: "buf", scope: !3706, file: !3, line: 3136, type: !3499)
!3718 = !DILocalVariable(name: "s", scope: !3706, file: !3, line: 3137, type: !759)
!3719 = !DILocation(line: 3129, column: 13, scope: !3706)
!3720 = !DILocation(line: 3130, column: 14, scope: !3706)
!3721 = !DILocation(line: 3131, column: 13, scope: !3706)
!3722 = !DILocation(line: 3132, column: 19, scope: !3706)
!3723 = !DILocation(line: 3134, column: 22, scope: !3706)
!3724 = !DILocation(line: 3134, column: 18, scope: !3706)
!3725 = !DILocation(line: 3135, column: 24, scope: !3706)
!3726 = !DILocation(line: 3135, column: 17, scope: !3706)
!3727 = !DILocation(line: 3136, column: 5, scope: !3706)
!3728 = !DILocation(line: 3136, column: 12, scope: !3706)
!3729 = !DILocation(line: 3139, column: 14, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 3139, column: 9)
!3731 = !DILocation(line: 3139, column: 9, scope: !3706)
!3732 = !DILocation(line: 3141, column: 38, scope: !3706)
!3733 = !DILocation(line: 3141, column: 9, scope: !3706)
!3734 = !DILocation(line: 3137, column: 13, scope: !3706)
!3735 = !DILocation(line: 3142, column: 16, scope: !3706)
!3736 = !{!3737, !2693, i64 0}
!3737 = !{!"listitem_S", !2693, i64 0, !2693, i64 8, !3222, i64 16}
!3738 = !DILocation(line: 3142, column: 8, scope: !3706)
!3739 = !DILocation(line: 3143, column: 14, scope: !3706)
!3740 = !DILocation(line: 3143, column: 12, scope: !3706)
!3741 = !DILocation(line: 3143, column: 31, scope: !3706)
!3742 = !DILocation(line: 3144, column: 1, scope: !3706)
!3743 = !DILocation(line: 4448, column: 17, scope: !2537)
!3744 = !DILocation(line: 4448, column: 36, scope: !2537)
!3745 = !DILocation(line: 4452, column: 10, scope: !2537)
!3746 = !DILocation(line: 4453, column: 10, scope: !2537)
!3747 = !DILocation(line: 5574, column: 12, scope: !2537)
!3748 = !DILocation(line: 4451, column: 13, scope: !2537)
!3749 = !DILocation(line: 4450, column: 10, scope: !2537)
!3750 = !DILocation(line: 5575, column: 5, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 5575, column: 5)
!3752 = !DILocation(line: 5575, column: 34, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 5575, column: 5)
!3754 = distinct !{!3754, !3750, !3755}
!3755 = !DILocation(line: 5581, column: 2, scope: !3751)
!3756 = !DILocation(line: 5575, column: 29, scope: !3753)
!3757 = !{!3758, !2693, i64 0}
!3758 = !{!"", !2693, i64 0, !3759, i64 8}
!3759 = !{!"short", !2691, i64 0}
!3760 = !DILocation(line: 5576, column: 6, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 5576, column: 6)
!3762 = !DILocation(line: 5576, column: 38, scope: !3761)
!3763 = !DILocation(line: 5575, column: 43, scope: !3753)
!3764 = !DILocation(line: 5576, column: 6, scope: !3753)
!3765 = !DILocation(line: 5579, column: 22, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 5577, column: 2)
!3767 = !{!3758, !3759, i64 8}
!3768 = !DILocation(line: 5579, column: 10, scope: !3766)
!3769 = !DILocation(line: 5654, column: 9, scope: !2537)
!3770 = !DILocation(line: 5656, column: 6, scope: !2551)
!3771 = !DILocation(line: 5656, column: 33, scope: !2551)
!3772 = !DILocation(line: 5656, column: 6, scope: !2552)
!3773 = !DILocation(line: 5659, column: 10, scope: !2549)
!3774 = !DILocation(line: 5659, column: 18, scope: !2549)
!3775 = !DILocation(line: 5660, column: 7, scope: !2549)
!3776 = !DILocation(line: 5660, column: 10, scope: !2549)
!3777 = !DILocation(line: 5660, column: 23, scope: !2549)
!3778 = !DILocation(line: 5661, column: 7, scope: !2549)
!3779 = !DILocation(line: 5661, column: 22, scope: !2549)
!3780 = !DILocation(line: 5661, column: 10, scope: !2549)
!3781 = !DILocation(line: 5662, column: 7, scope: !2549)
!3782 = !DILocation(line: 5662, column: 22, scope: !2549)
!3783 = !DILocation(line: 5662, column: 10, scope: !2549)
!3784 = !DILocation(line: 5663, column: 7, scope: !2549)
!3785 = !DILocation(line: 5663, column: 22, scope: !2549)
!3786 = !DILocation(line: 5663, column: 10, scope: !2549)
!3787 = !DILocation(line: 5659, column: 10, scope: !2550)
!3788 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3789, file: !3790, line: 361, type: !3793)
!3789 = distinct !DISubprogram(name: "atoi", scope: !3790, file: !3790, line: 361, type: !3791, isLocal: false, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3795)
!3790 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/sahil/vim/src")
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!756, !3793}
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!3795 = !{!3788}
!3796 = !DILocation(line: 361, column: 1, scope: !3789, inlinedAt: !3797)
!3797 = distinct !DILocation(line: 5665, column: 15, scope: !2548)
!3798 = !DILocation(line: 363, column: 16, scope: !3789, inlinedAt: !3797)
!3799 = !DILocation(line: 363, column: 10, scope: !3789, inlinedAt: !3797)
!3800 = !DILocation(line: 5665, column: 7, scope: !2548)
!3801 = !DILocation(line: 361, column: 1, scope: !3789, inlinedAt: !3802)
!3802 = distinct !DILocation(line: 5666, column: 15, scope: !2548)
!3803 = !DILocation(line: 363, column: 16, scope: !3789, inlinedAt: !3802)
!3804 = !DILocation(line: 363, column: 10, scope: !3789, inlinedAt: !3802)
!3805 = !DILocation(line: 5666, column: 7, scope: !2548)
!3806 = !DILocation(line: 5669, column: 14, scope: !2548)
!3807 = !DILocation(line: 5670, column: 8, scope: !2548)
!3808 = !DILocation(line: 5670, column: 18, scope: !2548)
!3809 = !DILocation(line: 5671, column: 5, scope: !2548)
!3810 = !DILocation(line: 5671, column: 15, scope: !2548)
!3811 = !DILocation(line: 5672, column: 9, scope: !2548)
!3812 = !DILocation(line: 5672, column: 19, scope: !2548)
!3813 = !DILocation(line: 5673, column: 6, scope: !2548)
!3814 = !DILocation(line: 361, column: 1, scope: !3789, inlinedAt: !3815)
!3815 = distinct !DILocation(line: 5673, column: 19, scope: !2548)
!3816 = !DILocation(line: 363, column: 16, scope: !3789, inlinedAt: !3815)
!3817 = !DILocation(line: 363, column: 10, scope: !3789, inlinedAt: !3815)
!3818 = !DILocation(line: 5673, column: 9, scope: !2548)
!3819 = !DILocation(line: 361, column: 1, scope: !3789, inlinedAt: !3820)
!3820 = distinct !DILocation(line: 5676, column: 17, scope: !2549)
!3821 = !DILocation(line: 363, column: 16, scope: !3789, inlinedAt: !3820)
!3822 = !DILocation(line: 363, column: 10, scope: !3789, inlinedAt: !3820)
!3823 = !DILocation(line: 5676, column: 7, scope: !2549)
!3824 = !DILocation(line: 5678, column: 11, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 5678, column: 11)
!3826 = !DILocation(line: 5678, column: 41, scope: !3825)
!3827 = !DILocation(line: 5678, column: 11, scope: !2551)
!3828 = !DILocation(line: 5681, column: 11, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 5679, column: 2)
!3830 = !DILocation(line: 5681, column: 20, scope: !3829)
!3831 = !DILocation(line: 5682, column: 2, scope: !3829)
!3832 = !DILocation(line: 5683, column: 11, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 5683, column: 11)
!3834 = !DILocation(line: 5683, column: 34, scope: !3833)
!3835 = !DILocation(line: 5683, column: 11, scope: !3825)
!3836 = !DILocation(line: 5686, column: 10, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 5684, column: 2)
!3838 = !DILocation(line: 5687, column: 2, scope: !3837)
!3839 = !DILocation(line: 5688, column: 11, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 5688, column: 11)
!3841 = !DILocation(line: 5688, column: 35, scope: !3840)
!3842 = !DILocation(line: 5688, column: 11, scope: !3833)
!3843 = !DILocation(line: 5691, column: 10, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 5689, column: 2)
!3845 = !DILocation(line: 5692, column: 2, scope: !3844)
!3846 = !DILocation(line: 5693, column: 11, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 5693, column: 11)
!3848 = !DILocation(line: 5693, column: 48, scope: !3847)
!3849 = !DILocation(line: 5693, column: 11, scope: !3840)
!3850 = !DILocation(line: 5696, column: 10, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 5694, column: 2)
!3852 = !DILocation(line: 5697, column: 2, scope: !3851)
!3853 = !DILocation(line: 5698, column: 11, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 5698, column: 11)
!3855 = !DILocation(line: 5698, column: 40, scope: !3854)
!3856 = !DILocation(line: 5698, column: 11, scope: !3847)
!3857 = !DILocation(line: 5702, column: 15, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 5699, column: 2)
!3859 = !{!3860, !2690, i64 4}
!3860 = !{!"Gui", !2690, i64 0, !2690, i64 4, !2690, i64 8, !2690, i64 12, !2690, i64 16, !2690, i64 20, !2690, i64 24, !2693, i64 32, !2690, i64 40, !2690, i64 44, !2690, i64 48, !2690, i64 52, !2690, i64 56, !2691, i64 60, !2690, i64 64, !2690, i64 68, !2690, i64 72, !2690, i64 76, !2690, i64 80, !2690, i64 84, !2690, i64 88, !2690, i64 92, !2690, i64 96, !2690, i64 100, !2690, i64 104, !2691, i64 108, !3861, i64 112, !2691, i64 192, !2690, i64 204, !2690, i64 208, !2690, i64 212, !2690, i64 216, !2690, i64 220, !2690, i64 224, !2693, i64 232, !2690, i64 240, !2693, i64 248, !2925, i64 256, !2925, i64 264, !2925, i64 272, !2925, i64 280, !2690, i64 288, !2693, i64 296, !2693, i64 304, !2693, i64 312, !2693, i64 320, !2693, i64 328, !2693, i64 336, !2693, i64 344, !2693, i64 352, !2693, i64 360, !2693, i64 368, !2693, i64 376, !2693, i64 384, !2693, i64 392, !2693, i64 400, !2693, i64 408, !2693, i64 416, !2693, i64 424, !2693, i64 432, !2690, i64 440, !2693, i64 448, !2693, i64 456}
!3861 = !{!"GuiScrollbar", !2925, i64 0, !2693, i64 8, !2690, i64 16, !2925, i64 24, !2925, i64 32, !2925, i64 40, !2690, i64 48, !2690, i64 52, !2690, i64 56, !2690, i64 60, !2693, i64 64, !2925, i64 72}
!3862 = !DILocation(line: 5702, column: 29, scope: !3858)
!3863 = !DILocation(line: 5702, column: 22, scope: !3858)
!3864 = !DILocation(line: 5704, column: 2, scope: !3858)
!3865 = !DILocation(line: 5705, column: 11, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 5705, column: 11)
!3867 = !DILocation(line: 5705, column: 35, scope: !3866)
!3868 = !DILocation(line: 5705, column: 11, scope: !3854)
!3869 = !DILocation(line: 5709, column: 14, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 5706, column: 2)
!3871 = !DILocation(line: 5711, column: 2, scope: !3870)
!3872 = !DILocation(line: 5712, column: 11, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 5712, column: 11)
!3874 = !DILocation(line: 5712, column: 41, scope: !3873)
!3875 = !DILocation(line: 5712, column: 11, scope: !3866)
!3876 = !DILocation(line: 5716, column: 25, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 5713, column: 2)
!3878 = !DILocation(line: 5716, column: 10, scope: !3877)
!3879 = !DILocation(line: 5718, column: 2, scope: !3877)
!3880 = !DILocation(line: 5719, column: 11, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 5719, column: 11)
!3882 = !DILocation(line: 5719, column: 33, scope: !3881)
!3883 = !DILocation(line: 5719, column: 11, scope: !3873)
!3884 = !DILocation(line: 5726, column: 11, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 5726, column: 11)
!3886 = !DILocation(line: 5726, column: 45, scope: !3885)
!3887 = !DILocation(line: 5726, column: 11, scope: !3881)
!3888 = !DILocation(line: 5730, column: 10, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 5727, column: 2)
!3890 = !DILocation(line: 5732, column: 2, scope: !3889)
!3891 = !DILocation(line: 5733, column: 11, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 5733, column: 11)
!3893 = !DILocation(line: 5733, column: 46, scope: !3892)
!3894 = !DILocation(line: 5733, column: 11, scope: !3885)
!3895 = !DILocation(line: 5740, column: 11, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 5740, column: 11)
!3897 = !DILocation(line: 5740, column: 35, scope: !3896)
!3898 = !DILocation(line: 5740, column: 11, scope: !3892)
!3899 = !DILocation(line: 5747, column: 11, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 5747, column: 11)
!3901 = !DILocation(line: 5747, column: 46, scope: !3900)
!3902 = !DILocation(line: 5751, column: 20, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 5748, column: 2)
!3904 = !DILocation(line: 5747, column: 11, scope: !3896)
!3905 = !DILocation(line: 5756, column: 9, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 5756, column: 9)
!3907 = !DILocation(line: 5756, column: 20, scope: !3906)
!3908 = !DILocation(line: 5756, column: 27, scope: !3906)
!3909 = !DILocation(line: 5756, column: 42, scope: !3906)
!3910 = !DILocation(line: 5756, column: 45, scope: !3906)
!3911 = !DILocation(line: 5756, column: 9, scope: !2537)
!3912 = !DILocation(line: 5761, column: 25, scope: !3906)
!3913 = !DILocation(line: 5762, column: 1, scope: !2537)
!3914 = distinct !DISubprogram(name: "dynamic_feature", scope: !3, file: !3, line: 5769, type: !2971, isLocal: false, isDefinition: true, scopeLine: 5770, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3915)
!3915 = !{!3916}
!3916 = !DILocalVariable(name: "feature", arg: 1, scope: !3914, file: !3, line: 5769, type: !759)
!3917 = !DILocation(line: 5769, column: 25, scope: !3914)
!3918 = !DILocation(line: 5771, column: 21, scope: !3914)
!3919 = !DILocation(line: 5776, column: 6, scope: !3914)
!3920 = !DILocation(line: 5776, column: 10, scope: !3914)
!3921 = !DILocation(line: 5776, column: 50, scope: !3914)
!3922 = !DILocation(line: 5776, column: 42, scope: !3914)
!3923 = !DILocation(line: 5784, column: 10, scope: !3914)
!3924 = !DILocation(line: 5784, column: 47, scope: !3914)
!3925 = !DILocation(line: 5799, column: 9, scope: !3914)
!3926 = !DILocation(line: 5799, column: 46, scope: !3914)
!3927 = !DILocation(line: 5817, column: 6, scope: !3914)
!3928 = !DILocation(line: 5817, column: 9, scope: !3914)
!3929 = !DILocation(line: 5817, column: 42, scope: !3914)
!3930 = !DILocation(line: 5823, column: 6, scope: !3914)
!3931 = !DILocation(line: 5823, column: 10, scope: !3914)
!3932 = !DILocation(line: 5823, column: 43, scope: !3914)
!3933 = !DILocation(line: 5823, column: 51, scope: !3914)
!3934 = !DILocation(line: 5823, column: 60, scope: !3914)
!3935 = !DILocation(line: 5823, column: 48, scope: !3914)
!3936 = !DILocation(line: 5824, column: 9, scope: !3914)
!3937 = !DILocation(line: 5824, column: 49, scope: !3914)
!3938 = !DILocation(line: 5824, column: 6, scope: !3914)
!3939 = !DILocation(line: 5771, column: 5, scope: !3914)
!3940 = distinct !DISubprogram(name: "vim_round", scope: !3, file: !3, line: 7759, type: !3941, isLocal: false, isDefinition: true, scopeLine: 7760, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3943)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!762, !762}
!3943 = !{!3944}
!3944 = !DILocalVariable(name: "f", arg: 1, scope: !3940, file: !3, line: 7759, type: !762)
!3945 = !DILocation(line: 7759, column: 19, scope: !3940)
!3946 = !DILocation(line: 7761, column: 14, scope: !3940)
!3947 = !DILocation(line: 7761, column: 28, scope: !3940)
!3948 = !DILocation(line: 7761, column: 20, scope: !3940)
!3949 = !DILocation(line: 7761, column: 44, scope: !3940)
!3950 = !DILocation(line: 7761, column: 37, scope: !3940)
!3951 = !DILocation(line: 7761, column: 12, scope: !3940)
!3952 = !DILocation(line: 7761, column: 5, scope: !3940)
!3953 = distinct !DISubprogram(name: "do_searchpair", scope: !3, file: !3, line: 8088, type: !3954, isLocal: false, isDefinition: true, scopeLine: 8098, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3957)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!765, !759, !759, !759, !756, !2305, !756, !3956, !764, !765}
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!3957 = !{!3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984}
!3958 = !DILocalVariable(name: "spat", arg: 1, scope: !3953, file: !3, line: 8089, type: !759)
!3959 = !DILocalVariable(name: "mpat", arg: 2, scope: !3953, file: !3, line: 8090, type: !759)
!3960 = !DILocalVariable(name: "epat", arg: 3, scope: !3953, file: !3, line: 8091, type: !759)
!3961 = !DILocalVariable(name: "dir", arg: 4, scope: !3953, file: !3, line: 8092, type: !756)
!3962 = !DILocalVariable(name: "skip", arg: 5, scope: !3953, file: !3, line: 8093, type: !2305)
!3963 = !DILocalVariable(name: "flags", arg: 6, scope: !3953, file: !3, line: 8094, type: !756)
!3964 = !DILocalVariable(name: "match_pos", arg: 7, scope: !3953, file: !3, line: 8095, type: !3956)
!3965 = !DILocalVariable(name: "lnum_stop", arg: 8, scope: !3953, file: !3, line: 8096, type: !764)
!3966 = !DILocalVariable(name: "time_limit", arg: 9, scope: !3953, file: !3, line: 8097, type: !765)
!3967 = !DILocalVariable(name: "save_cpo", scope: !3953, file: !3, line: 8099, type: !759)
!3968 = !DILocalVariable(name: "pat", scope: !3953, file: !3, line: 8100, type: !759)
!3969 = !DILocalVariable(name: "pat2", scope: !3953, file: !3, line: 8100, type: !759)
!3970 = !DILocalVariable(name: "pat3", scope: !3953, file: !3, line: 8100, type: !759)
!3971 = !DILocalVariable(name: "retval", scope: !3953, file: !3, line: 8101, type: !765)
!3972 = !DILocalVariable(name: "pos", scope: !3953, file: !3, line: 8102, type: !1315)
!3973 = !DILocalVariable(name: "firstpos", scope: !3953, file: !3, line: 8103, type: !1315)
!3974 = !DILocalVariable(name: "foundpos", scope: !3953, file: !3, line: 8104, type: !1315)
!3975 = !DILocalVariable(name: "save_cursor", scope: !3953, file: !3, line: 8105, type: !1315)
!3976 = !DILocalVariable(name: "save_pos", scope: !3953, file: !3, line: 8106, type: !1315)
!3977 = !DILocalVariable(name: "n", scope: !3953, file: !3, line: 8107, type: !756)
!3978 = !DILocalVariable(name: "r", scope: !3953, file: !3, line: 8108, type: !756)
!3979 = !DILocalVariable(name: "nest", scope: !3953, file: !3, line: 8109, type: !756)
!3980 = !DILocalVariable(name: "use_skip", scope: !3953, file: !3, line: 8110, type: !756)
!3981 = !DILocalVariable(name: "err", scope: !3953, file: !3, line: 8111, type: !756)
!3982 = !DILocalVariable(name: "options", scope: !3953, file: !3, line: 8112, type: !756)
!3983 = !DILocalVariable(name: "tm", scope: !3953, file: !3, line: 8114, type: !825)
!3984 = !DILocalVariable(name: "sia", scope: !3985, file: !3, line: 8151, type: !3988)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 8150, column: 5)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 8149, column: 5)
!3987 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8149, column: 5)
!3988 = !DIDerivedType(tag: DW_TAG_typedef, name: "searchit_arg_T", file: !6, line: 4343, baseType: !3989)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 4335, size: 192, elements: !3990)
!3990 = !{!3991, !3992, !3993, !3994}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "sa_stop_lnum", scope: !3989, file: !6, line: 4337, baseType: !764, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "sa_tm", scope: !3989, file: !6, line: 4339, baseType: !838, size: 64, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timed_out", scope: !3989, file: !6, line: 4340, baseType: !756, size: 32, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "sa_wrapped", scope: !3989, file: !6, line: 4342, baseType: !756, size: 32, offset: 160)
!3995 = !DILocation(line: 8089, column: 13, scope: !3953)
!3996 = !DILocation(line: 8090, column: 13, scope: !3953)
!3997 = !DILocation(line: 8091, column: 13, scope: !3953)
!3998 = !DILocation(line: 8092, column: 10, scope: !3953)
!3999 = !DILocation(line: 8093, column: 15, scope: !3953)
!4000 = !DILocation(line: 8094, column: 10, scope: !3953)
!4001 = !DILocation(line: 8095, column: 12, scope: !3953)
!4002 = !DILocation(line: 8096, column: 14, scope: !3953)
!4003 = !DILocation(line: 8097, column: 10, scope: !3953)
!4004 = !DILocation(line: 8100, column: 19, scope: !3953)
!4005 = !DILocation(line: 8100, column: 33, scope: !3953)
!4006 = !DILocation(line: 8101, column: 10, scope: !3953)
!4007 = !DILocation(line: 8102, column: 5, scope: !3953)
!4008 = !DILocation(line: 8105, column: 5, scope: !3953)
!4009 = !DILocation(line: 8106, column: 5, scope: !3953)
!4010 = !DILocation(line: 8109, column: 10, scope: !3953)
!4011 = !DILocation(line: 8110, column: 10, scope: !3953)
!4012 = !DILocation(line: 8111, column: 5, scope: !3953)
!4013 = !DILocation(line: 8112, column: 10, scope: !3953)
!4014 = !DILocation(line: 8114, column: 5, scope: !3953)
!4015 = !DILocation(line: 8118, column: 16, scope: !3953)
!4016 = !DILocation(line: 8099, column: 13, scope: !3953)
!4017 = !DILocation(line: 8119, column: 13, scope: !3953)
!4018 = !DILocation(line: 8119, column: 11, scope: !3953)
!4019 = !DILocation(line: 8114, column: 16, scope: !3953)
!4020 = !DILocation(line: 8123, column: 5, scope: !3953)
!4021 = !DILocation(line: 8128, column: 18, scope: !3953)
!4022 = !DILocation(line: 8128, column: 33, scope: !3953)
!4023 = !DILocation(line: 8128, column: 31, scope: !3953)
!4024 = !DILocation(line: 8128, column: 46, scope: !3953)
!4025 = !DILocation(line: 8128, column: 12, scope: !3953)
!4026 = !DILocation(line: 8129, column: 18, scope: !3953)
!4027 = !DILocation(line: 8129, column: 33, scope: !3953)
!4028 = !DILocation(line: 8129, column: 48, scope: !3953)
!4029 = !DILocation(line: 8129, column: 31, scope: !3953)
!4030 = !DILocation(line: 8129, column: 46, scope: !3953)
!4031 = !DILocation(line: 8129, column: 61, scope: !3953)
!4032 = !DILocation(line: 8129, column: 12, scope: !3953)
!4033 = !DILocation(line: 8130, column: 14, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8130, column: 9)
!4035 = !DILocation(line: 8130, column: 30, scope: !4034)
!4036 = !DILocation(line: 8130, column: 22, scope: !4034)
!4037 = !DILocation(line: 8132, column: 5, scope: !3953)
!4038 = !DILocation(line: 8133, column: 9, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8133, column: 9)
!4040 = !DILocation(line: 8133, column: 15, scope: !4039)
!4041 = !DILocation(line: 8133, column: 9, scope: !3953)
!4042 = !DILocation(line: 8134, column: 2, scope: !4039)
!4043 = !DILocation(line: 8136, column: 2, scope: !4039)
!4044 = !DILocation(line: 8138, column: 9, scope: !3953)
!4045 = !DILocation(line: 8141, column: 14, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8141, column: 9)
!4047 = !DILocation(line: 8141, column: 9, scope: !3953)
!4048 = !DILocation(line: 8142, column: 13, scope: !4046)
!4049 = !DILocation(line: 8142, column: 2, scope: !4046)
!4050 = !DILocation(line: 8144, column: 19, scope: !3953)
!4051 = !DILocation(line: 8144, column: 27, scope: !3953)
!4052 = !{i64 0, i64 8, !4053, i64 8, i64 4, !2904, i64 12, i64 4, !2904}
!4053 = !{!2925, !2925, i64 0}
!4054 = !DILocation(line: 8145, column: 19, scope: !3953)
!4055 = !DILocation(line: 8103, column: 11, scope: !3953)
!4056 = !DILocation(line: 8104, column: 11, scope: !3953)
!4057 = !DILocation(line: 8100, column: 13, scope: !3953)
!4058 = !DILocation(line: 8149, column: 5, scope: !3953)
!4059 = !DILocation(line: 8158, column: 15, scope: !3985)
!4060 = !DILocation(line: 8151, column: 2, scope: !3985)
!4061 = !DILocation(line: 8153, column: 2, scope: !3985)
!4062 = !DILocation(line: 8154, column: 19, scope: !3985)
!4063 = !{!4064, !2925, i64 0}
!4064 = !{!"", !2925, i64 0, !2693, i64 8, !2690, i64 16, !2690, i64 20}
!4065 = !DILocation(line: 8156, column: 12, scope: !3985)
!4066 = !{!4064, !2693, i64 8}
!4067 = !DILocation(line: 8158, column: 23, scope: !3985)
!4068 = !DILocation(line: 8102, column: 11, scope: !3953)
!4069 = !DILocation(line: 8151, column: 17, scope: !3985)
!4070 = !DILocation(line: 8158, column: 6, scope: !3985)
!4071 = !DILocation(line: 8107, column: 10, scope: !3953)
!4072 = !DILocation(line: 8160, column: 8, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8160, column: 6)
!4074 = !DILocation(line: 8160, column: 16, scope: !4073)
!4075 = !DILocation(line: 8160, column: 39, scope: !4073)
!4076 = !DILocation(line: 8160, column: 42, scope: !4073)
!4077 = !DILocation(line: 8165, column: 17, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8164, column: 6)
!4079 = !DILocation(line: 8165, column: 6, scope: !4078)
!4080 = !DILocation(line: 8166, column: 6, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8166, column: 6)
!4082 = !DILocation(line: 8171, column: 10, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 8167, column: 2)
!4084 = !DILocation(line: 8172, column: 3, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 8171, column: 10)
!4086 = !DILocation(line: 8174, column: 3, scope: !4085)
!4087 = !DILocation(line: 8176, column: 13, scope: !3985)
!4088 = !DILocation(line: 8179, column: 10, scope: !3985)
!4089 = !DILocation(line: 8182, column: 6, scope: !3985)
!4090 = !DILocation(line: 8184, column: 17, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 8183, column: 2)
!4092 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8182, column: 6)
!4093 = !DILocation(line: 8184, column: 25, scope: !4091)
!4094 = !DILocation(line: 8185, column: 25, scope: !4091)
!4095 = !DILocation(line: 8111, column: 10, scope: !3953)
!4096 = !DILocation(line: 8186, column: 10, scope: !4091)
!4097 = !DILocation(line: 8187, column: 10, scope: !4091)
!4098 = !DILocation(line: 8108, column: 10, scope: !3953)
!4099 = !DILocation(line: 8188, column: 6, scope: !4091)
!4100 = !DILocation(line: 8188, column: 14, scope: !4091)
!4101 = !DILocation(line: 8188, column: 25, scope: !4091)
!4102 = !DILocation(line: 8189, column: 10, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 8189, column: 10)
!4104 = !DILocation(line: 8189, column: 10, scope: !4091)
!4105 = !DILocation(line: 8192, column: 22, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 8190, column: 6)
!4107 = !DILocation(line: 8194, column: 3, scope: !4106)
!4108 = !DILocation(line: 8196, column: 10, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 8196, column: 10)
!4110 = !DILocation(line: 8196, column: 10, scope: !4091)
!4111 = distinct !{!4111, !4112, !4113}
!4112 = !DILocation(line: 8149, column: 5, scope: !3987)
!4113 = !DILocation(line: 8229, column: 5, scope: !3987)
!4114 = !DILocation(line: 8200, column: 28, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8200, column: 6)
!4116 = !DILocation(line: 8200, column: 23, scope: !4115)
!4117 = !DILocation(line: 8200, column: 58, scope: !4115)
!4118 = !DILocation(line: 8200, column: 53, scope: !4115)
!4119 = !DILocation(line: 8204, column: 6, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 8201, column: 2)
!4121 = !DILocation(line: 8206, column: 2, scope: !4120)
!4122 = !DILocation(line: 8211, column: 10, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 8211, column: 10)
!4124 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 8208, column: 2)
!4125 = !DILocation(line: 8211, column: 17, scope: !4123)
!4126 = !DILocation(line: 8211, column: 10, scope: !4124)
!4127 = !DILocation(line: 8215, column: 11, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 8215, column: 6)
!4129 = !DILocation(line: 8215, column: 6, scope: !3985)
!4130 = !DILocation(line: 8219, column: 3, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 8218, column: 10)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 8216, column: 2)
!4133 = !DILocation(line: 8221, column: 16, scope: !4131)
!4134 = !DILocation(line: 8218, column: 10, scope: !4132)
!4135 = !DILocation(line: 8222, column: 10, scope: !4132)
!4136 = !DILocation(line: 8223, column: 3, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 8222, column: 10)
!4138 = !DILocation(line: 8224, column: 6, scope: !4132)
!4139 = !DILocation(line: 8224, column: 14, scope: !4132)
!4140 = !DILocation(line: 8224, column: 25, scope: !4132)
!4141 = !DILocation(line: 8225, column: 10, scope: !4132)
!4142 = !DILocation(line: 8229, column: 5, scope: !3986)
!4143 = !DILocation(line: 8149, column: 5, scope: !3986)
!4144 = !DILocation(line: 8231, column: 19, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8231, column: 9)
!4146 = !DILocation(line: 8231, column: 9, scope: !3953)
!4147 = !DILocation(line: 8234, column: 20, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 8232, column: 5)
!4149 = !DILocation(line: 8234, column: 37, scope: !4148)
!4150 = !{!4151, !2925, i64 56}
!4151 = !{!"window_S", !2690, i64 0, !2693, i64 8, !2693, i64 16, !2693, i64 24, !2693, i64 32, !2690, i64 40, !2693, i64 48, !4152, i64 56, !2690, i64 72, !2690, i64 76, !2925, i64 80, !2691, i64 88, !2925, i64 96, !2690, i64 104, !2690, i64 108, !2925, i64 112, !2690, i64 120, !2690, i64 124, !4153, i64 128, !2925, i64 176, !2691, i64 184, !2925, i64 192, !2690, i64 200, !2690, i64 204, !2690, i64 208, !2690, i64 212, !2690, i64 216, !2690, i64 220, !2690, i64 224, !2690, i64 228, !2690, i64 232, !2690, i64 236, !2690, i64 240, !2690, i64 244, !2690, i64 248, !2690, i64 252, !4154, i64 256, !2690, i64 296, !2690, i64 300, !2693, i64 304, !2691, i64 312, !2690, i64 316, !2690, i64 320, !2693, i64 328, !2690, i64 336, !2690, i64 340, !2690, i64 344, !2690, i64 348, !2690, i64 352, !2690, i64 356, !2690, i64 360, !2690, i64 364, !2690, i64 368, !2690, i64 372, !2690, i64 376, !2690, i64 380, !2693, i64 384, !2693, i64 392, !2691, i64 400, !2691, i64 416, !2691, i64 432, !2691, i64 464, !2690, i64 496, !2690, i64 500, !3311, i64 504, !3311, i64 512, !2690, i64 520, !2925, i64 528, !4155, i64 536, !4155, i64 560, !2690, i64 584, !2690, i64 588, !2693, i64 592, !2925, i64 600, !2690, i64 608, !2690, i64 612, !2690, i64 616, !2690, i64 620, !2690, i64 624, !2691, i64 628, !2693, i64 632, !2693, i64 640, !2690, i64 648, !2690, i64 652, !2693, i64 656, !2690, i64 664, !2690, i64 668, !4152, i64 672, !2690, i64 688, !2690, i64 692, !2690, i64 696, !2690, i64 700, !2690, i64 704, !2690, i64 708, !2690, i64 712, !2690, i64 716, !2693, i64 720, !3474, i64 728, !2691, i64 752, !2691, i64 753, !2690, i64 756, !2690, i64 760, !2690, i64 764, !2925, i64 768, !2925, i64 776, !2690, i64 784, !4152, i64 792, !2690, i64 808, !2925, i64 816, !2925, i64 824, !2690, i64 832, !2691, i64 836, !2690, i64 840, !2693, i64 848, !2690, i64 856, !2690, i64 860, !2693, i64 864, !2693, i64 872, !2693, i64 880, !2693, i64 888, !2690, i64 896, !4156, i64 904, !4156, i64 2280, !2925, i64 3656, !2925, i64 3664, !2925, i64 3672, !2693, i64 3680, !2691, i64 3688, !2925, i64 3696, !2925, i64 3704, !2690, i64 3712, !2690, i64 3716, !2690, i64 3720, !2925, i64 3728, !4157, i64 3736, !2693, i64 3760, !4152, i64 3768, !4152, i64 3784, !2691, i64 3800, !2690, i64 7800, !2690, i64 7804, !2690, i64 7808, !2693, i64 7816, !2690, i64 7824, !2691, i64 7832, !2690, i64 8792, !2690, i64 8796, !2690, i64 8800, !2690, i64 8804, !2691, i64 8808, !2925, i64 8968, !2925, i64 8976, !2690, i64 8984, !2693, i64 8992, !2693, i64 9000}
!4152 = !{!"", !2925, i64 0, !2690, i64 8, !2690, i64 12}
!4153 = !{!"", !2690, i64 0, !2690, i64 4, !2690, i64 8, !2690, i64 12, !2690, i64 16, !2690, i64 20, !2690, i64 24, !2690, i64 28, !2690, i64 32, !2690, i64 36, !2690, i64 40}
!4154 = !{!"", !2690, i64 0, !2690, i64 4, !4152, i64 8, !4152, i64 24}
!4155 = !{!"", !2693, i64 0, !2693, i64 8, !2690, i64 16}
!4156 = !{!"", !2690, i64 0, !2690, i64 4, !2693, i64 8, !2693, i64 16, !2690, i64 24, !2925, i64 32, !2690, i64 40, !2690, i64 44, !2690, i64 48, !2693, i64 56, !2925, i64 64, !2690, i64 72, !2693, i64 80, !2693, i64 88, !2925, i64 96, !2925, i64 104, !2693, i64 112, !2693, i64 120, !2693, i64 128, !2690, i64 136, !2690, i64 140, !2693, i64 144, !2690, i64 152, !2690, i64 156, !2925, i64 160, !2690, i64 168, !2690, i64 172, !2690, i64 176, !2690, i64 180, !2693, i64 184, !2925, i64 192, !2690, i64 200, !2690, i64 204, !2690, i64 208, !2693, i64 216, !2693, i64 224, !2693, i64 232, !2693, i64 240, !2690, i64 248, !2690, i64 252, !2690, i64 256, !2690, i64 260, !2690, i64 264, !2693, i64 272, !2925, i64 280, !2690, i64 288, !2690, i64 292, !2693, i64 296, !2693, i64 304, !2693, i64 312, !2691, i64 320}
!4157 = !{!"dictitem_S", !3222, i64 0, !2691, i64 16, !2691, i64 17}
!4158 = !DILocation(line: 8234, column: 13, scope: !4148)
!4159 = !DILocation(line: 8234, column: 18, scope: !4148)
!4160 = !{!4152, !2925, i64 0}
!4161 = !DILocation(line: 8235, column: 36, scope: !4148)
!4162 = !{!4151, !2690, i64 64}
!4163 = !DILocation(line: 8235, column: 40, scope: !4148)
!4164 = !DILocation(line: 8235, column: 13, scope: !4148)
!4165 = !DILocation(line: 8235, column: 17, scope: !4148)
!4166 = !{!4152, !2690, i64 8}
!4167 = !DILocation(line: 8236, column: 5, scope: !4148)
!4168 = !DILocation(line: 8239, column: 16, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8239, column: 9)
!4170 = !DILocation(line: 8239, column: 39, scope: !4169)
!4171 = !DILocation(line: 8239, column: 29, scope: !4169)
!4172 = !DILocation(line: 8240, column: 2, scope: !4169)
!4173 = !DILocation(line: 8240, column: 10, scope: !4169)
!4174 = !DILocation(line: 8240, column: 21, scope: !4169)
!4175 = !DILocation(line: 8243, column: 5, scope: !3953)
!4176 = !DILocation(line: 8244, column: 5, scope: !3953)
!4177 = !DILocation(line: 8245, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 8245, column: 9)
!4179 = !DILocation(line: 8245, column: 18, scope: !4178)
!4180 = !DILocation(line: 8245, column: 15, scope: !4178)
!4181 = !DILocation(line: 8245, column: 9, scope: !3953)
!4182 = !DILocation(line: 8246, column: 8, scope: !4178)
!4183 = !DILocation(line: 8246, column: 2, scope: !4178)
!4184 = !DILocation(line: 8252, column: 6, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 8252, column: 6)
!4186 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 8248, column: 5)
!4187 = !DILocation(line: 8252, column: 13, scope: !4185)
!4188 = !DILocation(line: 8252, column: 6, scope: !4186)
!4189 = !DILocation(line: 8253, column: 6, scope: !4185)
!4190 = !DILocation(line: 8254, column: 2, scope: !4186)
!4191 = !DILocation(line: 8258, column: 1, scope: !3953)
!4192 = !DILocation(line: 8257, column: 5, scope: !3953)
!4193 = distinct !DISubprogram(name: "f_string", scope: !3, file: !3, line: 9237, type: !2538, isLocal: false, isDefinition: true, scopeLine: 9238, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4194)
!4194 = !{!4195, !4196, !4197, !4198}
!4195 = !DILocalVariable(name: "argvars", arg: 1, scope: !4193, file: !3, line: 9237, type: !2305)
!4196 = !DILocalVariable(name: "rettv", arg: 2, scope: !4193, file: !3, line: 9237, type: !2305)
!4197 = !DILocalVariable(name: "tofree", scope: !4193, file: !3, line: 9239, type: !759)
!4198 = !DILocalVariable(name: "numbuf", scope: !4193, file: !3, line: 9240, type: !3499)
!4199 = !DILocation(line: 9237, column: 20, scope: !4193)
!4200 = !DILocation(line: 9237, column: 39, scope: !4193)
!4201 = !DILocation(line: 9239, column: 5, scope: !4193)
!4202 = !DILocation(line: 9240, column: 5, scope: !4193)
!4203 = !DILocation(line: 9240, column: 12, scope: !4193)
!4204 = !DILocation(line: 9242, column: 12, scope: !4193)
!4205 = !DILocation(line: 9242, column: 19, scope: !4193)
!4206 = !DILocation(line: 9244, column: 9, scope: !4193)
!4207 = !DILocation(line: 9239, column: 13, scope: !4193)
!4208 = !DILocation(line: 9243, column: 28, scope: !4193)
!4209 = !DILocation(line: 9243, column: 12, scope: !4193)
!4210 = !DILocation(line: 9243, column: 17, scope: !4193)
!4211 = !DILocation(line: 9243, column: 26, scope: !4193)
!4212 = !DILocation(line: 9246, column: 30, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 9246, column: 9)
!4214 = !DILocation(line: 9246, column: 41, scope: !4213)
!4215 = !DILocation(line: 9246, column: 48, scope: !4213)
!4216 = !DILocation(line: 9246, column: 38, scope: !4213)
!4217 = !DILocation(line: 9247, column: 25, scope: !4213)
!4218 = !DILocation(line: 9247, column: 23, scope: !4213)
!4219 = !DILocation(line: 9247, column: 2, scope: !4213)
!4220 = !DILocation(line: 9248, column: 1, scope: !4193)
!4221 = distinct !DISubprogram(name: "ret_any", scope: !3, file: !3, line: 457, type: !2579, isLocal: true, isDefinition: true, scopeLine: 458, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4222)
!4222 = !{!4223, !4224}
!4223 = !DILocalVariable(name: "argcount", arg: 1, scope: !4221, file: !3, line: 457, type: !756)
!4224 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4221, file: !3, line: 457, type: !797)
!4225 = !DILocation(line: 457, column: 13, scope: !4221)
!4226 = !DILocation(line: 457, column: 39, scope: !4221)
!4227 = !DILocation(line: 459, column: 5, scope: !4221)
!4228 = distinct !DISubprogram(name: "f_abs", scope: !3, file: !3, line: 2196, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2197, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4229)
!4229 = !{!4230, !4231, !4232, !4235}
!4230 = !DILocalVariable(name: "argvars", arg: 1, scope: !4228, file: !3, line: 2196, type: !2305)
!4231 = !DILocalVariable(name: "rettv", arg: 2, scope: !4228, file: !3, line: 2196, type: !2305)
!4232 = !DILocalVariable(name: "n", scope: !4233, file: !3, line: 2205, type: !757)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 2204, column: 5)
!4234 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 2198, column: 9)
!4235 = !DILocalVariable(name: "error", scope: !4233, file: !3, line: 2206, type: !756)
!4236 = !DILocation(line: 2196, column: 17, scope: !4228)
!4237 = !DILocation(line: 2196, column: 36, scope: !4228)
!4238 = !DILocation(line: 2198, column: 20, scope: !4234)
!4239 = !DILocation(line: 2198, column: 27, scope: !4234)
!4240 = !DILocation(line: 2198, column: 9, scope: !4228)
!4241 = !DILocation(line: 2200, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 2199, column: 5)
!4243 = !DILocation(line: 2200, column: 16, scope: !4242)
!4244 = !DILocation(line: 2201, column: 40, scope: !4242)
!4245 = !DILocation(line: 2201, column: 45, scope: !4242)
!4246 = !DILocation(line: 2201, column: 24, scope: !4242)
!4247 = !DILocation(line: 2201, column: 9, scope: !4242)
!4248 = !DILocation(line: 2201, column: 14, scope: !4242)
!4249 = !DILocation(line: 2201, column: 22, scope: !4242)
!4250 = !DILocation(line: 2202, column: 5, scope: !4242)
!4251 = !DILocation(line: 2206, column: 2, scope: !4233)
!4252 = !DILocation(line: 2206, column: 7, scope: !4233)
!4253 = !DILocation(line: 2208, column: 6, scope: !4233)
!4254 = !DILocation(line: 2205, column: 14, scope: !4233)
!4255 = !DILocation(line: 2209, column: 6, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 2209, column: 6)
!4257 = !DILocation(line: 2209, column: 6, scope: !4233)
!4258 = !DILocation(line: 2211, column: 13, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 2211, column: 11)
!4260 = !DILocation(line: 2214, column: 29, scope: !4259)
!4261 = !DILocation(line: 2211, column: 11, scope: !4256)
!4262 = !DILocation(line: 2215, column: 5, scope: !4234)
!4263 = !DILocation(line: 2216, column: 1, scope: !4228)
!4264 = distinct !DISubprogram(name: "ret_float", scope: !3, file: !3, line: 477, type: !2579, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4265)
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "argcount", arg: 1, scope: !4264, file: !3, line: 477, type: !756)
!4267 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4264, file: !3, line: 477, type: !797)
!4268 = !DILocation(line: 477, column: 15, scope: !4264)
!4269 = !DILocation(line: 477, column: 41, scope: !4264)
!4270 = !DILocation(line: 479, column: 5, scope: !4264)
!4271 = distinct !DISubprogram(name: "f_acos", scope: !3, file: !3, line: 2222, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2223, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4272)
!4272 = !{!4273, !4274, !4275}
!4273 = !DILocalVariable(name: "argvars", arg: 1, scope: !4271, file: !3, line: 2222, type: !2305)
!4274 = !DILocalVariable(name: "rettv", arg: 2, scope: !4271, file: !3, line: 2222, type: !2305)
!4275 = !DILocalVariable(name: "f", scope: !4271, file: !3, line: 2224, type: !762)
!4276 = !DILocation(line: 2222, column: 18, scope: !4271)
!4277 = !DILocation(line: 2222, column: 37, scope: !4271)
!4278 = !DILocation(line: 2224, column: 13, scope: !4271)
!4279 = !DILocation(line: 2226, column: 12, scope: !4271)
!4280 = !DILocation(line: 2226, column: 19, scope: !4271)
!4281 = !DILocalVariable(name: "argvars", arg: 1, scope: !4282, file: !3, line: 2176, type: !2305)
!4282 = distinct !DISubprogram(name: "get_float_arg", scope: !3, file: !3, line: 2176, type: !4283, isLocal: true, isDefinition: true, scopeLine: 2177, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4286)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!756, !2305, !4285}
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!4286 = !{!4281, !4287}
!4287 = !DILocalVariable(name: "f", arg: 2, scope: !4282, file: !3, line: 2176, type: !4285)
!4288 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4289)
!4289 = distinct !DILocation(line: 2227, column: 9, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 2227, column: 9)
!4291 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4289)
!4292 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4289)
!4293 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 2178, column: 9)
!4294 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4289)
!4295 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4289)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 2179, column: 5)
!4297 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4289)
!4298 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4289)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 2184, column: 5)
!4300 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 2183, column: 9)
!4301 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4289)
!4302 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4289)
!4303 = !DILocation(line: 2228, column: 24, scope: !4290)
!4304 = !DILocation(line: 2228, column: 2, scope: !4290)
!4305 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4289)
!4306 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4289)
!4307 = !DILocation(line: 2231, column: 1, scope: !4271)
!4308 = distinct !DISubprogram(name: "ret_first_arg", scope: !3, file: !3, line: 549, type: !2579, isLocal: true, isDefinition: true, scopeLine: 550, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4309)
!4309 = !{!4310, !4311}
!4310 = !DILocalVariable(name: "argcount", arg: 1, scope: !4308, file: !3, line: 549, type: !756)
!4311 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4308, file: !3, line: 549, type: !797)
!4312 = !DILocation(line: 549, column: 19, scope: !4308)
!4313 = !DILocation(line: 549, column: 38, scope: !4308)
!4314 = !DILocation(line: 551, column: 18, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 551, column: 9)
!4316 = !DILocation(line: 551, column: 9, scope: !4308)
!4317 = !DILocation(line: 552, column: 9, scope: !4315)
!4318 = !DILocation(line: 552, column: 2, scope: !4315)
!4319 = !DILocation(line: 554, column: 1, scope: !4308)
!4320 = distinct !DISubprogram(name: "ret_number", scope: !3, file: !3, line: 472, type: !2579, isLocal: true, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4321)
!4321 = !{!4322, !4323}
!4322 = !DILocalVariable(name: "argcount", arg: 1, scope: !4320, file: !3, line: 472, type: !756)
!4323 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4320, file: !3, line: 472, type: !797)
!4324 = !DILocation(line: 472, column: 16, scope: !4320)
!4325 = !DILocation(line: 472, column: 42, scope: !4320)
!4326 = !DILocation(line: 474, column: 5, scope: !4320)
!4327 = distinct !DISubprogram(name: "f_and", scope: !3, file: !3, line: 2238, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2239, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4328)
!4328 = !{!4329, !4330}
!4329 = !DILocalVariable(name: "argvars", arg: 1, scope: !4327, file: !3, line: 2238, type: !2305)
!4330 = !DILocalVariable(name: "rettv", arg: 2, scope: !4327, file: !3, line: 2238, type: !2305)
!4331 = !DILocation(line: 2238, column: 17, scope: !4327)
!4332 = !DILocation(line: 2238, column: 36, scope: !4327)
!4333 = !DILocation(line: 2240, column: 28, scope: !4327)
!4334 = !DILocation(line: 2241, column: 27, scope: !4327)
!4335 = !DILocation(line: 2241, column: 8, scope: !4327)
!4336 = !DILocation(line: 2241, column: 6, scope: !4327)
!4337 = !DILocation(line: 2240, column: 17, scope: !4327)
!4338 = !DILocation(line: 2240, column: 26, scope: !4327)
!4339 = !DILocation(line: 2242, column: 1, scope: !4327)
!4340 = distinct !DISubprogram(name: "ret_number_bool", scope: !3, file: !3, line: 467, type: !2579, isLocal: true, isDefinition: true, scopeLine: 468, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4341)
!4341 = !{!4342, !4343}
!4342 = !DILocalVariable(name: "argcount", arg: 1, scope: !4340, file: !3, line: 467, type: !756)
!4343 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4340, file: !3, line: 467, type: !797)
!4344 = !DILocation(line: 467, column: 21, scope: !4340)
!4345 = !DILocation(line: 467, column: 47, scope: !4340)
!4346 = !DILocation(line: 469, column: 5, scope: !4340)
!4347 = distinct !DISubprogram(name: "ret_argv", scope: !3, file: !3, line: 593, type: !2579, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4348)
!4348 = !{!4349, !4350}
!4349 = !DILocalVariable(name: "argcount", arg: 1, scope: !4347, file: !3, line: 593, type: !756)
!4350 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4347, file: !3, line: 593, type: !797)
!4351 = !DILocation(line: 593, column: 14, scope: !4347)
!4352 = !DILocation(line: 593, column: 33, scope: !4347)
!4353 = !DILocation(line: 596, column: 18, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 596, column: 9)
!4355 = !DILocation(line: 597, column: 2, scope: !4354)
!4356 = !DILocation(line: 601, column: 1, scope: !4347)
!4357 = distinct !DISubprogram(name: "f_asin", scope: !3, file: !3, line: 2249, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2250, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4358)
!4358 = !{!4359, !4360, !4361}
!4359 = !DILocalVariable(name: "argvars", arg: 1, scope: !4357, file: !3, line: 2249, type: !2305)
!4360 = !DILocalVariable(name: "rettv", arg: 2, scope: !4357, file: !3, line: 2249, type: !2305)
!4361 = !DILocalVariable(name: "f", scope: !4357, file: !3, line: 2251, type: !762)
!4362 = !DILocation(line: 2249, column: 18, scope: !4357)
!4363 = !DILocation(line: 2249, column: 37, scope: !4357)
!4364 = !DILocation(line: 2251, column: 13, scope: !4357)
!4365 = !DILocation(line: 2253, column: 12, scope: !4357)
!4366 = !DILocation(line: 2253, column: 19, scope: !4357)
!4367 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4368)
!4368 = distinct !DILocation(line: 2254, column: 9, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2254, column: 9)
!4370 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4368)
!4371 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4368)
!4372 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4368)
!4373 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4368)
!4374 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4368)
!4375 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4368)
!4376 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4368)
!4377 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4368)
!4378 = !DILocation(line: 2255, column: 24, scope: !4369)
!4379 = !DILocation(line: 2255, column: 2, scope: !4369)
!4380 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4368)
!4381 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4368)
!4382 = !DILocation(line: 2258, column: 1, scope: !4357)
!4383 = distinct !DISubprogram(name: "f_atan", scope: !3, file: !3, line: 2264, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2265, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4384)
!4384 = !{!4385, !4386, !4387}
!4385 = !DILocalVariable(name: "argvars", arg: 1, scope: !4383, file: !3, line: 2264, type: !2305)
!4386 = !DILocalVariable(name: "rettv", arg: 2, scope: !4383, file: !3, line: 2264, type: !2305)
!4387 = !DILocalVariable(name: "f", scope: !4383, file: !3, line: 2266, type: !762)
!4388 = !DILocation(line: 2264, column: 18, scope: !4383)
!4389 = !DILocation(line: 2264, column: 37, scope: !4383)
!4390 = !DILocation(line: 2266, column: 13, scope: !4383)
!4391 = !DILocation(line: 2268, column: 12, scope: !4383)
!4392 = !DILocation(line: 2268, column: 19, scope: !4383)
!4393 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4394)
!4394 = distinct !DILocation(line: 2269, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 2269, column: 9)
!4396 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4394)
!4397 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4394)
!4398 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4394)
!4399 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4394)
!4400 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4394)
!4401 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4394)
!4402 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4394)
!4403 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4394)
!4404 = !DILocation(line: 2270, column: 24, scope: !4395)
!4405 = !DILocation(line: 2270, column: 2, scope: !4395)
!4406 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4394)
!4407 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4394)
!4408 = !DILocation(line: 2273, column: 1, scope: !4383)
!4409 = distinct !DISubprogram(name: "f_atan2", scope: !3, file: !3, line: 2279, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2280, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4410)
!4410 = !{!4411, !4412, !4413, !4414}
!4411 = !DILocalVariable(name: "argvars", arg: 1, scope: !4409, file: !3, line: 2279, type: !2305)
!4412 = !DILocalVariable(name: "rettv", arg: 2, scope: !4409, file: !3, line: 2279, type: !2305)
!4413 = !DILocalVariable(name: "fx", scope: !4409, file: !3, line: 2281, type: !762)
!4414 = !DILocalVariable(name: "fy", scope: !4409, file: !3, line: 2281, type: !762)
!4415 = !DILocation(line: 2279, column: 19, scope: !4409)
!4416 = !DILocation(line: 2279, column: 38, scope: !4409)
!4417 = !DILocation(line: 2281, column: 13, scope: !4409)
!4418 = !DILocation(line: 2281, column: 23, scope: !4409)
!4419 = !DILocation(line: 2283, column: 12, scope: !4409)
!4420 = !DILocation(line: 2283, column: 19, scope: !4409)
!4421 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4422)
!4422 = distinct !DILocation(line: 2284, column: 9, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2284, column: 9)
!4424 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4422)
!4425 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4422)
!4426 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4422)
!4427 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4422)
!4428 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4422)
!4429 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4422)
!4430 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4422)
!4431 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4422)
!4432 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4422)
!4433 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4422)
!4434 = !DILocation(line: 2285, column: 10, scope: !4423)
!4435 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4436)
!4436 = distinct !DILocation(line: 2285, column: 13, scope: !4423)
!4437 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4436)
!4438 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4436)
!4439 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4436)
!4440 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4436)
!4441 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4436)
!4442 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4436)
!4443 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4436)
!4444 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4436)
!4445 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4436)
!4446 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4436)
!4447 = !DILocation(line: 2284, column: 9, scope: !4409)
!4448 = !DILocation(line: 2286, column: 24, scope: !4423)
!4449 = !DILocation(line: 2286, column: 2, scope: !4423)
!4450 = !DILocation(line: 2289, column: 1, scope: !4409)
!4451 = distinct !DISubprogram(name: "ret_string", scope: !3, file: !3, line: 482, type: !2579, isLocal: true, isDefinition: true, scopeLine: 483, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4452)
!4452 = !{!4453, !4454}
!4453 = !DILocalVariable(name: "argcount", arg: 1, scope: !4451, file: !3, line: 482, type: !756)
!4454 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4451, file: !3, line: 482, type: !797)
!4455 = !DILocation(line: 482, column: 16, scope: !4451)
!4456 = !DILocation(line: 482, column: 42, scope: !4451)
!4457 = !DILocation(line: 484, column: 5, scope: !4451)
!4458 = distinct !DISubprogram(name: "f_balloon_gettext", scope: !3, file: !3, line: 2297, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2298, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4459)
!4459 = !{!4460, !4461}
!4460 = !DILocalVariable(name: "argvars", arg: 1, scope: !4458, file: !3, line: 2297, type: !2305)
!4461 = !DILocalVariable(name: "rettv", arg: 2, scope: !4458, file: !3, line: 2297, type: !2305)
!4462 = !DILocation(line: 2297, column: 29, scope: !4458)
!4463 = !DILocation(line: 2297, column: 55, scope: !4458)
!4464 = !DILocation(line: 2299, column: 12, scope: !4458)
!4465 = !DILocation(line: 2299, column: 19, scope: !4458)
!4466 = !DILocation(line: 2300, column: 9, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 2300, column: 9)
!4468 = !DILocation(line: 2300, column: 21, scope: !4467)
!4469 = !DILocation(line: 2300, column: 9, scope: !4458)
!4470 = !DILocation(line: 2302, column: 19, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2302, column: 6)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 2301, column: 5)
!4473 = !{!4474, !2693, i64 80}
!4474 = !{!"BalloonEvalStruct", !2693, i64 0, !2693, i64 8, !2693, i64 16, !2690, i64 24, !2691, i64 28, !2690, i64 32, !2690, i64 36, !2690, i64 40, !2693, i64 48, !2693, i64 56, !2690, i64 64, !2693, i64 72, !2693, i64 80}
!4475 = !DILocation(line: 2302, column: 23, scope: !4471)
!4476 = !DILocation(line: 2302, column: 6, scope: !4472)
!4477 = !DILocation(line: 2305, column: 29, scope: !4471)
!4478 = !DILocation(line: 2307, column: 1, scope: !4458)
!4479 = distinct !DISubprogram(name: "ret_void", scope: !3, file: !3, line: 452, type: !2579, isLocal: true, isDefinition: true, scopeLine: 453, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4480)
!4480 = !{!4481, !4482}
!4481 = !DILocalVariable(name: "argcount", arg: 1, scope: !4479, file: !3, line: 452, type: !756)
!4482 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4479, file: !3, line: 452, type: !797)
!4483 = !DILocation(line: 452, column: 14, scope: !4479)
!4484 = !DILocation(line: 452, column: 40, scope: !4479)
!4485 = !DILocation(line: 454, column: 5, scope: !4479)
!4486 = distinct !DISubprogram(name: "f_balloon_show", scope: !3, file: !3, line: 2310, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2311, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4487)
!4487 = !{!4488, !4489, !4490, !4495}
!4488 = !DILocalVariable(name: "argvars", arg: 1, scope: !4486, file: !3, line: 2310, type: !2305)
!4489 = !DILocalVariable(name: "rettv", arg: 2, scope: !4486, file: !3, line: 2310, type: !2305)
!4490 = !DILocalVariable(name: "l", scope: !4491, file: !3, line: 2320, type: !885)
!4491 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 2319, column: 2)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 2314, column: 6)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 2313, column: 5)
!4494 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 2312, column: 9)
!4495 = !DILocalVariable(name: "mesg", scope: !4496, file: !3, line: 2328, type: !759)
!4496 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 2327, column: 2)
!4497 = !DILocation(line: 2310, column: 26, scope: !4486)
!4498 = !DILocation(line: 2310, column: 45, scope: !4486)
!4499 = !DILocation(line: 2312, column: 9, scope: !4494)
!4500 = !DILocation(line: 2312, column: 21, scope: !4494)
!4501 = !DILocation(line: 2312, column: 9, scope: !4486)
!4502 = !DILocation(line: 2314, column: 17, scope: !4492)
!4503 = !DILocation(line: 2314, column: 24, scope: !4492)
!4504 = !DILocation(line: 2316, column: 11, scope: !4492)
!4505 = !DILocation(line: 2316, column: 7, scope: !4492)
!4506 = !DILocation(line: 2316, column: 3, scope: !4492)
!4507 = !DILocation(line: 2320, column: 29, scope: !4491)
!4508 = !DILocation(line: 2320, column: 34, scope: !4491)
!4509 = !DILocation(line: 2320, column: 14, scope: !4491)
!4510 = !DILocation(line: 2324, column: 14, scope: !4491)
!4511 = !DILocation(line: 2324, column: 22, scope: !4491)
!4512 = !DILocation(line: 2324, column: 28, scope: !4491)
!4513 = !DILocation(line: 2324, column: 35, scope: !4491)
!4514 = !DILocation(line: 2324, column: 12, scope: !4491)
!4515 = !DILocation(line: 2323, column: 6, scope: !4491)
!4516 = !DILocation(line: 2325, column: 2, scope: !4491)
!4517 = !DILocation(line: 2330, column: 10, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 2330, column: 10)
!4519 = !DILocation(line: 2330, column: 26, scope: !4518)
!4520 = !DILocation(line: 2330, column: 29, scope: !4518)
!4521 = !DILocation(line: 2330, column: 62, scope: !4518)
!4522 = !DILocation(line: 2330, column: 10, scope: !4496)
!4523 = !DILocation(line: 2333, column: 13, scope: !4496)
!4524 = !DILocation(line: 2328, column: 14, scope: !4496)
!4525 = !DILocation(line: 2334, column: 15, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 2334, column: 10)
!4527 = !DILocation(line: 2334, column: 10, scope: !4496)
!4528 = !DILocation(line: 2336, column: 16, scope: !4526)
!4529 = !DILocation(line: 2336, column: 29, scope: !4526)
!4530 = !DILocation(line: 2336, column: 35, scope: !4526)
!4531 = !DILocation(line: 2336, column: 3, scope: !4526)
!4532 = distinct !DISubprogram(name: "ret_list_string", scope: !3, file: !3, line: 497, type: !2579, isLocal: true, isDefinition: true, scopeLine: 498, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4533)
!4533 = !{!4534, !4535}
!4534 = !DILocalVariable(name: "argcount", arg: 1, scope: !4532, file: !3, line: 497, type: !756)
!4535 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4532, file: !3, line: 497, type: !797)
!4536 = !DILocation(line: 497, column: 21, scope: !4532)
!4537 = !DILocation(line: 497, column: 47, scope: !4532)
!4538 = !DILocation(line: 499, column: 5, scope: !4532)
!4539 = distinct !DISubprogram(name: "f_balloon_split", scope: !3, file: !3, line: 2343, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2344, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4540)
!4540 = !{!4541, !4542, !4543, !4546, !4557, !4558}
!4541 = !DILocalVariable(name: "argvars", arg: 1, scope: !4539, file: !3, line: 2343, type: !2305)
!4542 = !DILocalVariable(name: "rettv", arg: 2, scope: !4539, file: !3, line: 2343, type: !2305)
!4543 = !DILocalVariable(name: "msg", scope: !4544, file: !3, line: 2347, type: !759)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2346, column: 5)
!4545 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 2345, column: 9)
!4546 = !DILocalVariable(name: "array", scope: !4547, file: !3, line: 2354, type: !4549)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 2353, column: 2)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2352, column: 6)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "pumitem_T", file: !6, line: 4040, baseType: !4551)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 4034, size: 256, elements: !4552)
!4552 = !{!4553, !4554, !4555, !4556}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "pum_text", scope: !4551, file: !6, line: 4036, baseType: !759, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "pum_kind", scope: !4551, file: !6, line: 4037, baseType: !759, size: 64, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "pum_extra", scope: !4551, file: !6, line: 4038, baseType: !759, size: 64, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "pum_info", scope: !4551, file: !6, line: 4039, baseType: !759, size: 64, offset: 192)
!4557 = !DILocalVariable(name: "size", scope: !4547, file: !3, line: 2355, type: !756)
!4558 = !DILocalVariable(name: "i", scope: !4547, file: !3, line: 2356, type: !756)
!4559 = !DILocation(line: 2343, column: 27, scope: !4539)
!4560 = !DILocation(line: 2343, column: 46, scope: !4539)
!4561 = !DILocation(line: 2345, column: 9, scope: !4545)
!4562 = !DILocation(line: 2345, column: 33, scope: !4545)
!4563 = !DILocation(line: 2345, column: 9, scope: !4539)
!4564 = !DILocation(line: 2349, column: 6, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2349, column: 6)
!4566 = !DILocation(line: 2349, column: 22, scope: !4565)
!4567 = !DILocation(line: 2349, column: 25, scope: !4565)
!4568 = !DILocation(line: 2349, column: 58, scope: !4565)
!4569 = !DILocation(line: 2349, column: 6, scope: !4544)
!4570 = !DILocation(line: 2351, column: 8, scope: !4544)
!4571 = !DILocation(line: 2347, column: 10, scope: !4544)
!4572 = !DILocation(line: 2352, column: 10, scope: !4548)
!4573 = !DILocation(line: 2352, column: 6, scope: !4544)
!4574 = !DILocation(line: 2354, column: 6, scope: !4547)
!4575 = !DILocation(line: 2354, column: 17, scope: !4547)
!4576 = !DILocation(line: 2355, column: 18, scope: !4547)
!4577 = !DILocation(line: 2355, column: 11, scope: !4547)
!4578 = !DILocation(line: 2356, column: 11, scope: !4547)
!4579 = !DILocation(line: 2359, column: 20, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 2359, column: 6)
!4581 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 2359, column: 6)
!4582 = !DILocation(line: 2359, column: 6, scope: !4581)
!4583 = !DILocation(line: 2359, column: 27, scope: !4580)
!4584 = !DILocation(line: 2360, column: 34, scope: !4580)
!4585 = !DILocation(line: 2360, column: 42, scope: !4580)
!4586 = !DILocation(line: 2360, column: 51, scope: !4580)
!4587 = !{!4588, !2693, i64 0}
!4588 = !{!"", !2693, i64 0, !2693, i64 8, !2693, i64 16, !2693, i64 24}
!4589 = !DILocation(line: 2360, column: 3, scope: !4580)
!4590 = !DILocation(line: 2359, column: 32, scope: !4580)
!4591 = distinct !{!4591, !4582, !4592}
!4592 = !DILocation(line: 2360, column: 63, scope: !4581)
!4593 = !DILocation(line: 2361, column: 18, scope: !4547)
!4594 = !DILocation(line: 2361, column: 6, scope: !4547)
!4595 = !DILocation(line: 2362, column: 18, scope: !4547)
!4596 = !DILocation(line: 2362, column: 26, scope: !4547)
!4597 = !DILocation(line: 2362, column: 3, scope: !4547)
!4598 = distinct !{!4598, !4594, !4599}
!4599 = !DILocation(line: 2362, column: 34, scope: !4547)
!4600 = !DILocation(line: 2363, column: 15, scope: !4547)
!4601 = !DILocation(line: 2363, column: 6, scope: !4547)
!4602 = !DILocation(line: 2364, column: 2, scope: !4548)
!4603 = !DILocation(line: 2364, column: 2, scope: !4547)
!4604 = distinct !DISubprogram(name: "f_byte2line", scope: !3, file: !3, line: 2391, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2392, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4605)
!4605 = !{!4606, !4607, !4608}
!4606 = !DILocalVariable(name: "argvars", arg: 1, scope: !4604, file: !3, line: 2391, type: !2305)
!4607 = !DILocalVariable(name: "rettv", arg: 2, scope: !4604, file: !3, line: 2391, type: !2305)
!4608 = !DILocalVariable(name: "boff", scope: !4604, file: !3, line: 2396, type: !765)
!4609 = !DILocation(line: 2391, column: 23, scope: !4604)
!4610 = !DILocation(line: 2391, column: 49, scope: !4604)
!4611 = !DILocation(line: 2396, column: 5, scope: !4604)
!4612 = !DILocation(line: 2396, column: 10, scope: !4604)
!4613 = !DILocation(line: 2398, column: 12, scope: !4604)
!4614 = !DILocation(line: 2398, column: 39, scope: !4604)
!4615 = !DILocation(line: 2398, column: 10, scope: !4604)
!4616 = !DILocation(line: 2399, column: 14, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2399, column: 9)
!4618 = !DILocation(line: 2399, column: 9, scope: !4604)
!4619 = !DILocation(line: 2402, column: 48, scope: !4617)
!4620 = !DILocation(line: 2402, column: 25, scope: !4617)
!4621 = !DILocation(line: 2402, column: 14, scope: !4617)
!4622 = !DILocation(line: 2402, column: 23, scope: !4617)
!4623 = !DILocation(line: 2405, column: 1, scope: !4604)
!4624 = distinct !DISubprogram(name: "f_byteidx", scope: !3, file: !3, line: 2437, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2438, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4625)
!4625 = !{!4626, !4627}
!4626 = !DILocalVariable(name: "argvars", arg: 1, scope: !4624, file: !3, line: 2437, type: !2305)
!4627 = !DILocalVariable(name: "rettv", arg: 2, scope: !4624, file: !3, line: 2437, type: !2305)
!4628 = !DILocation(line: 2437, column: 21, scope: !4624)
!4629 = !DILocation(line: 2437, column: 40, scope: !4624)
!4630 = !DILocalVariable(name: "argvars", arg: 1, scope: !4631, file: !3, line: 2408, type: !2305)
!4631 = distinct !DISubprogram(name: "byteidx", scope: !3, file: !3, line: 2408, type: !3480, isLocal: true, isDefinition: true, scopeLine: 2409, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4632)
!4632 = !{!4630, !4633, !4634, !4635, !4636, !4637}
!4633 = !DILocalVariable(name: "rettv", arg: 2, scope: !4631, file: !3, line: 2408, type: !2305)
!4634 = !DILocalVariable(name: "comp", arg: 3, scope: !4631, file: !3, line: 2408, type: !756)
!4635 = !DILocalVariable(name: "t", scope: !4631, file: !3, line: 2410, type: !759)
!4636 = !DILocalVariable(name: "str", scope: !4631, file: !3, line: 2411, type: !759)
!4637 = !DILocalVariable(name: "idx", scope: !4631, file: !3, line: 2412, type: !757)
!4638 = !DILocation(line: 2408, column: 19, scope: !4631, inlinedAt: !4639)
!4639 = distinct !DILocation(line: 2439, column: 5, scope: !4624)
!4640 = !DILocation(line: 2408, column: 38, scope: !4631, inlinedAt: !4639)
!4641 = !DILocation(line: 2408, column: 49, scope: !4631, inlinedAt: !4639)
!4642 = !DILocation(line: 2414, column: 11, scope: !4631, inlinedAt: !4639)
!4643 = !DILocation(line: 2411, column: 13, scope: !4631, inlinedAt: !4639)
!4644 = !DILocation(line: 2415, column: 30, scope: !4631, inlinedAt: !4639)
!4645 = !DILocation(line: 2415, column: 11, scope: !4631, inlinedAt: !4639)
!4646 = !DILocation(line: 2412, column: 17, scope: !4631, inlinedAt: !4639)
!4647 = !DILocation(line: 2416, column: 17, scope: !4631, inlinedAt: !4639)
!4648 = !DILocation(line: 2416, column: 26, scope: !4631, inlinedAt: !4639)
!4649 = !DILocation(line: 2417, column: 13, scope: !4650, inlinedAt: !4639)
!4650 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 2417, column: 9)
!4651 = !DILocation(line: 2417, column: 28, scope: !4650, inlinedAt: !4639)
!4652 = !DILocation(line: 2417, column: 21, scope: !4650, inlinedAt: !4639)
!4653 = !DILocation(line: 2410, column: 13, scope: !4631, inlinedAt: !4639)
!4654 = !DILocation(line: 2421, column: 17, scope: !4655, inlinedAt: !4639)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 2421, column: 5)
!4656 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 2421, column: 5)
!4657 = !DILocation(line: 2421, column: 5, scope: !4656, inlinedAt: !4639)
!4658 = !DILocation(line: 2423, column: 6, scope: !4659, inlinedAt: !4639)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 2423, column: 6)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 2422, column: 5)
!4661 = !DILocation(line: 2423, column: 9, scope: !4659, inlinedAt: !4639)
!4662 = !DILocation(line: 2423, column: 6, scope: !4660, inlinedAt: !4639)
!4663 = !DILocation(line: 2428, column: 13, scope: !4664, inlinedAt: !4639)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 2425, column: 6)
!4665 = !DILocation(line: 2428, column: 11, scope: !4664, inlinedAt: !4639)
!4666 = !DILocation(line: 2421, column: 25, scope: !4655, inlinedAt: !4639)
!4667 = distinct !{!4667, !4668, !4669}
!4668 = !DILocation(line: 2421, column: 5, scope: !4656)
!4669 = !DILocation(line: 2429, column: 5, scope: !4656)
!4670 = !DILocation(line: 2430, column: 44, scope: !4631, inlinedAt: !4639)
!4671 = !DILocation(line: 2430, column: 26, scope: !4631, inlinedAt: !4639)
!4672 = !DILocation(line: 2431, column: 1, scope: !4631, inlinedAt: !4639)
!4673 = !DILocation(line: 2440, column: 1, scope: !4624)
!4674 = distinct !DISubprogram(name: "f_byteidxcomp", scope: !3, file: !3, line: 2446, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2447, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4675)
!4675 = !{!4676, !4677}
!4676 = !DILocalVariable(name: "argvars", arg: 1, scope: !4674, file: !3, line: 2446, type: !2305)
!4677 = !DILocalVariable(name: "rettv", arg: 2, scope: !4674, file: !3, line: 2446, type: !2305)
!4678 = !DILocation(line: 2446, column: 25, scope: !4674)
!4679 = !DILocation(line: 2446, column: 44, scope: !4674)
!4680 = !DILocation(line: 2408, column: 19, scope: !4631, inlinedAt: !4681)
!4681 = distinct !DILocation(line: 2448, column: 5, scope: !4674)
!4682 = !DILocation(line: 2408, column: 38, scope: !4631, inlinedAt: !4681)
!4683 = !DILocation(line: 2408, column: 49, scope: !4631, inlinedAt: !4681)
!4684 = !DILocation(line: 2414, column: 11, scope: !4631, inlinedAt: !4681)
!4685 = !DILocation(line: 2411, column: 13, scope: !4631, inlinedAt: !4681)
!4686 = !DILocation(line: 2415, column: 30, scope: !4631, inlinedAt: !4681)
!4687 = !DILocation(line: 2415, column: 11, scope: !4631, inlinedAt: !4681)
!4688 = !DILocation(line: 2412, column: 17, scope: !4631, inlinedAt: !4681)
!4689 = !DILocation(line: 2416, column: 17, scope: !4631, inlinedAt: !4681)
!4690 = !DILocation(line: 2416, column: 26, scope: !4631, inlinedAt: !4681)
!4691 = !DILocation(line: 2417, column: 13, scope: !4650, inlinedAt: !4681)
!4692 = !DILocation(line: 2417, column: 28, scope: !4650, inlinedAt: !4681)
!4693 = !DILocation(line: 2417, column: 21, scope: !4650, inlinedAt: !4681)
!4694 = !DILocation(line: 2410, column: 13, scope: !4631, inlinedAt: !4681)
!4695 = !DILocation(line: 2421, column: 17, scope: !4655, inlinedAt: !4681)
!4696 = !DILocation(line: 2421, column: 5, scope: !4656, inlinedAt: !4681)
!4697 = !DILocation(line: 2423, column: 6, scope: !4659, inlinedAt: !4681)
!4698 = !DILocation(line: 2423, column: 9, scope: !4659, inlinedAt: !4681)
!4699 = !DILocation(line: 2423, column: 6, scope: !4660, inlinedAt: !4681)
!4700 = !DILocation(line: 2425, column: 6, scope: !4664, inlinedAt: !4681)
!4701 = !DILocation(line: 2425, column: 15, scope: !4664, inlinedAt: !4681)
!4702 = !DILocation(line: 2426, column: 11, scope: !4664, inlinedAt: !4681)
!4703 = !DILocation(line: 2426, column: 6, scope: !4664, inlinedAt: !4681)
!4704 = !DILocation(line: 2428, column: 13, scope: !4664, inlinedAt: !4681)
!4705 = !DILocation(line: 2428, column: 11, scope: !4664, inlinedAt: !4681)
!4706 = !DILocation(line: 2421, column: 25, scope: !4655, inlinedAt: !4681)
!4707 = !DILocation(line: 2430, column: 44, scope: !4631, inlinedAt: !4681)
!4708 = !DILocation(line: 2430, column: 26, scope: !4631, inlinedAt: !4681)
!4709 = !DILocation(line: 2431, column: 1, scope: !4631, inlinedAt: !4681)
!4710 = !DILocation(line: 2449, column: 1, scope: !4674)
!4711 = distinct !DISubprogram(name: "f_call", scope: !3, file: !3, line: 2455, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2456, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4712)
!4712 = !{!4713, !4714, !4715, !4716, !4717}
!4713 = !DILocalVariable(name: "argvars", arg: 1, scope: !4711, file: !3, line: 2455, type: !2305)
!4714 = !DILocalVariable(name: "rettv", arg: 2, scope: !4711, file: !3, line: 2455, type: !2305)
!4715 = !DILocalVariable(name: "func", scope: !4711, file: !3, line: 2457, type: !759)
!4716 = !DILocalVariable(name: "partial", scope: !4711, file: !3, line: 2458, type: !768)
!4717 = !DILocalVariable(name: "selfdict", scope: !4711, file: !3, line: 2459, type: !929)
!4718 = !DILocation(line: 2455, column: 18, scope: !4711)
!4719 = !DILocation(line: 2455, column: 37, scope: !4711)
!4720 = !DILocation(line: 2458, column: 18, scope: !4711)
!4721 = !DILocation(line: 2459, column: 13, scope: !4711)
!4722 = !DILocation(line: 2461, column: 9, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2461, column: 9)
!4724 = !DILocation(line: 2461, column: 20, scope: !4723)
!4725 = !DILocation(line: 2461, column: 27, scope: !4723)
!4726 = !DILocation(line: 2461, column: 9, scope: !4711)
!4727 = !DILocation(line: 2463, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2462, column: 5)
!4729 = !DILocation(line: 2463, column: 2, scope: !4728)
!4730 = !DILocation(line: 2464, column: 2, scope: !4728)
!4731 = !DILocation(line: 2466, column: 20, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2466, column: 9)
!4733 = !DILocation(line: 2466, column: 25, scope: !4732)
!4734 = !DILocation(line: 2466, column: 32, scope: !4732)
!4735 = !DILocation(line: 2466, column: 9, scope: !4711)
!4736 = !DILocation(line: 2469, column: 20, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2469, column: 9)
!4738 = !DILocation(line: 2469, column: 9, scope: !4711)
!4739 = !DILocation(line: 2470, column: 20, scope: !4737)
!4740 = !DILocation(line: 2470, column: 25, scope: !4737)
!4741 = !DILocation(line: 2457, column: 13, scope: !4711)
!4742 = !DILocation(line: 2470, column: 2, scope: !4737)
!4743 = !DILocation(line: 2473, column: 23, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 2472, column: 5)
!4745 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 2471, column: 14)
!4746 = !DILocation(line: 2473, column: 28, scope: !4744)
!4747 = !DILocation(line: 2474, column: 9, scope: !4744)
!4748 = !DILocation(line: 2475, column: 5, scope: !4744)
!4749 = !DILocation(line: 2477, column: 9, scope: !4745)
!4750 = !DILocation(line: 2478, column: 9, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2478, column: 9)
!4752 = !DILocation(line: 2478, column: 15, scope: !4751)
!4753 = !DILocation(line: 2478, column: 9, scope: !4711)
!4754 = !DILocation(line: 2481, column: 20, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2481, column: 9)
!4756 = !DILocation(line: 2481, column: 9, scope: !4711)
!4757 = !DILocation(line: 2485, column: 11, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2484, column: 2)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 2483, column: 6)
!4760 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2482, column: 5)
!4761 = !DILocation(line: 2485, column: 6, scope: !4758)
!4762 = !DILocation(line: 2486, column: 6, scope: !4758)
!4763 = !DILocation(line: 2488, column: 24, scope: !4760)
!4764 = !DILocation(line: 2488, column: 29, scope: !4760)
!4765 = !DILocation(line: 2489, column: 5, scope: !4760)
!4766 = !DILocation(line: 2491, column: 11, scope: !4711)
!4767 = !DILocation(line: 2492, column: 1, scope: !4711)
!4768 = distinct !DISubprogram(name: "f_ceil", scope: !3, file: !3, line: 2499, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2500, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4769)
!4769 = !{!4770, !4771, !4772}
!4770 = !DILocalVariable(name: "argvars", arg: 1, scope: !4768, file: !3, line: 2499, type: !2305)
!4771 = !DILocalVariable(name: "rettv", arg: 2, scope: !4768, file: !3, line: 2499, type: !2305)
!4772 = !DILocalVariable(name: "f", scope: !4768, file: !3, line: 2501, type: !762)
!4773 = !DILocation(line: 2499, column: 18, scope: !4768)
!4774 = !DILocation(line: 2499, column: 37, scope: !4768)
!4775 = !DILocation(line: 2501, column: 13, scope: !4768)
!4776 = !DILocation(line: 2503, column: 12, scope: !4768)
!4777 = !DILocation(line: 2503, column: 19, scope: !4768)
!4778 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !4779)
!4779 = distinct !DILocation(line: 2504, column: 9, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2504, column: 9)
!4781 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !4779)
!4782 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !4779)
!4783 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !4779)
!4784 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !4779)
!4785 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !4779)
!4786 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !4779)
!4787 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !4779)
!4788 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !4779)
!4789 = !DILocation(line: 2505, column: 24, scope: !4780)
!4790 = !DILocation(line: 2505, column: 2, scope: !4780)
!4791 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !4779)
!4792 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !4779)
!4793 = !DILocation(line: 2508, column: 1, scope: !4768)
!4794 = distinct !DISubprogram(name: "ret_job", scope: !3, file: !3, line: 544, type: !2579, isLocal: true, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4795)
!4795 = !{!4796, !4797}
!4796 = !DILocalVariable(name: "argcount", arg: 1, scope: !4794, file: !3, line: 544, type: !756)
!4797 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4794, file: !3, line: 544, type: !797)
!4798 = !DILocation(line: 544, column: 13, scope: !4794)
!4799 = !DILocation(line: 544, column: 39, scope: !4794)
!4800 = !DILocation(line: 546, column: 5, scope: !4794)
!4801 = distinct !DISubprogram(name: "ret_dict_any", scope: !3, file: !3, line: 507, type: !2579, isLocal: true, isDefinition: true, scopeLine: 508, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4802)
!4802 = !{!4803, !4804}
!4803 = !DILocalVariable(name: "argcount", arg: 1, scope: !4801, file: !3, line: 507, type: !756)
!4804 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4801, file: !3, line: 507, type: !797)
!4805 = !DILocation(line: 507, column: 18, scope: !4801)
!4806 = !DILocation(line: 507, column: 44, scope: !4801)
!4807 = !DILocation(line: 509, column: 5, scope: !4801)
!4808 = distinct !DISubprogram(name: "ret_channel", scope: !3, file: !3, line: 539, type: !2579, isLocal: true, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4809)
!4809 = !{!4810, !4811}
!4810 = !DILocalVariable(name: "argcount", arg: 1, scope: !4808, file: !3, line: 539, type: !756)
!4811 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4808, file: !3, line: 539, type: !797)
!4812 = !DILocation(line: 539, column: 17, scope: !4808)
!4813 = !DILocation(line: 539, column: 43, scope: !4808)
!4814 = !DILocation(line: 541, column: 5, scope: !4808)
!4815 = distinct !DISubprogram(name: "ret_blob", scope: !3, file: !3, line: 529, type: !2579, isLocal: true, isDefinition: true, scopeLine: 530, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4816)
!4816 = !{!4817, !4818}
!4817 = !DILocalVariable(name: "argcount", arg: 1, scope: !4815, file: !3, line: 529, type: !756)
!4818 = !DILocalVariable(name: "argtypes", arg: 2, scope: !4815, file: !3, line: 529, type: !797)
!4819 = !DILocation(line: 529, column: 14, scope: !4815)
!4820 = !DILocation(line: 529, column: 40, scope: !4815)
!4821 = !DILocation(line: 531, column: 5, scope: !4815)
!4822 = distinct !DISubprogram(name: "f_changenr", scope: !3, file: !3, line: 2515, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2516, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4823)
!4823 = !{!4824, !4825}
!4824 = !DILocalVariable(name: "argvars", arg: 1, scope: !4822, file: !3, line: 2515, type: !2305)
!4825 = !DILocalVariable(name: "rettv", arg: 2, scope: !4822, file: !3, line: 2515, type: !2305)
!4826 = !DILocation(line: 2515, column: 22, scope: !4822)
!4827 = !DILocation(line: 2515, column: 48, scope: !4822)
!4828 = !DILocation(line: 2517, column: 28, scope: !4822)
!4829 = !DILocation(line: 2517, column: 36, scope: !4822)
!4830 = !{!4831, !2925, i64 4680}
!4831 = !{!"file_buffer", !4832, i64 0, !2693, i64 104, !2693, i64 112, !2690, i64 120, !2690, i64 124, !2690, i64 128, !2690, i64 132, !2693, i64 136, !2693, i64 144, !2693, i64 152, !2690, i64 160, !2925, i64 168, !2925, i64 176, !2690, i64 184, !2691, i64 188, !2690, i64 200, !4833, i64 208, !3311, i64 248, !3311, i64 256, !2690, i64 264, !2690, i64 268, !2925, i64 272, !2925, i64 280, !2925, i64 288, !2693, i64 296, !2925, i64 304, !2925, i64 312, !2925, i64 320, !2690, i64 328, !2925, i64 336, !2691, i64 344, !4834, i64 760, !2690, i64 800, !4152, i64 808, !4152, i64 824, !4152, i64 840, !2691, i64 856, !2690, i64 2456, !2690, i64 2460, !2691, i64 2464, !2691, i64 2496, !2693, i64 4544, !3474, i64 4552, !4152, i64 4576, !4152, i64 4592, !4152, i64 4608, !2690, i64 4624, !2693, i64 4632, !2693, i64 4640, !2693, i64 4648, !2690, i64 4656, !2690, i64 4660, !2925, i64 4664, !2925, i64 4672, !2925, i64 4680, !2925, i64 4688, !2925, i64 4696, !4835, i64 4704, !2925, i64 4720, !2690, i64 4728, !2690, i64 4732, !2925, i64 4736, !2925, i64 4744, !3759, i64 4752, !3474, i64 4760, !2690, i64 4784, !2691, i64 4792, !2690, i64 6808, !2690, i64 6812, !2693, i64 6816, !2690, i64 6824, !2690, i64 6828, !2690, i64 6832, !2690, i64 6836, !2693, i64 6840, !2693, i64 6848, !2690, i64 6856, !2690, i64 6860, !2690, i64 6864, !2693, i64 6872, !2693, i64 6880, !2693, i64 6888, !2693, i64 6896, !2693, i64 6904, !2693, i64 6912, !2693, i64 6920, !2693, i64 6928, !2693, i64 6936, !2690, i64 6944, !2690, i64 6948, !2690, i64 6952, !2690, i64 6956, !2690, i64 6960, !2693, i64 6968, !2693, i64 6976, !2693, i64 6984, !2693, i64 6992, !2693, i64 7000, !2690, i64 7008, !2693, i64 7016, !2693, i64 7024, !2693, i64 7032, !2693, i64 7040, !2925, i64 7048, !2693, i64 7056, !2925, i64 7064, !2693, i64 7072, !2693, i64 7080, !2693, i64 7088, !2925, i64 7096, !2693, i64 7104, !2693, i64 7112, !2690, i64 7120, !2693, i64 7128, !2693, i64 7136, !2690, i64 7144, !2690, i64 7148, !2690, i64 7152, !2693, i64 7160, !2690, i64 7168, !2693, i64 7176, !2690, i64 7184, !2925, i64 7192, !2690, i64 7200, !2690, i64 7204, !2925, i64 7208, !2925, i64 7216, !2693, i64 7224, !2690, i64 7232, !2925, i64 7240, !2693, i64 7248, !2925, i64 7256, !2690, i64 7264, !2925, i64 7272, !2925, i64 7280, !2925, i64 7288, !2925, i64 7296, !2925, i64 7304, !2925, i64 7312, !2693, i64 7320, !2693, i64 7328, !2693, i64 7336, !2693, i64 7344, !2693, i64 7352, !2693, i64 7360, !2693, i64 7368, !2693, i64 7376, !2693, i64 7384, !2693, i64 7392, !2693, i64 7400, !2690, i64 7408, !2693, i64 7416, !2693, i64 7424, !2690, i64 7432, !2693, i64 7440, !2693, i64 7448, !2925, i64 7456, !2690, i64 7464, !2693, i64 7472, !2925, i64 7480, !2690, i64 7488, !2690, i64 7492, !2690, i64 7496, !2690, i64 7500, !2690, i64 7504, !2690, i64 7508, !2690, i64 7512, !2690, i64 7516, !2690, i64 7520, !2690, i64 7524, !2690, i64 7528, !2690, i64 7532, !2690, i64 7536, !2690, i64 7540, !2690, i64 7544, !2690, i64 7548, !2690, i64 7552, !2690, i64 7556, !2690, i64 7560, !2690, i64 7564, !2690, i64 7568, !2690, i64 7572, !2690, i64 7576, !2690, i64 7580, !2690, i64 7584, !2690, i64 7588, !2690, i64 7592, !2690, i64 7596, !2690, i64 7600, !2690, i64 7604, !2690, i64 7608, !2690, i64 7612, !2690, i64 7616, !2690, i64 7620, !2690, i64 7624, !2690, i64 7628, !2690, i64 7632, !2925, i64 7640, !2690, i64 7648, !2690, i64 7652, !2693, i64 7656, !2690, i64 7664, !2690, i64 7668, !4157, i64 7672, !2693, i64 7696, !2693, i64 7704, !2693, i64 7712, !2690, i64 7720, !2693, i64 7728, !2693, i64 7736, !2925, i64 7744, !2693, i64 7752, !2690, i64 7760, !2690, i64 7764, !2690, i64 7768, !2690, i64 7772, !2690, i64 7776, !2693, i64 7784, !4155, i64 7792, !4155, i64 7816, !2690, i64 7840, !4836, i64 7848, !2693, i64 9088, !2690, i64 9096, !2690, i64 9100, !2690, i64 9104, !2690, i64 9108, !2693, i64 9112, !2690, i64 9120, !2693, i64 9128, !2690, i64 9136}
!4832 = !{!"memline", !2925, i64 0, !2693, i64 8, !2693, i64 16, !2690, i64 24, !2690, i64 28, !2690, i64 32, !2690, i64 36, !2925, i64 40, !2693, i64 48, !2693, i64 56, !2925, i64 64, !2925, i64 72, !2690, i64 80, !2693, i64 88, !2690, i64 96, !2690, i64 100}
!4833 = !{!"dictitem16_S", !3222, i64 0, !2691, i64 16, !2691, i64 17}
!4834 = !{!"", !4152, i64 0, !4152, i64 16, !2690, i64 32, !2690, i64 36}
!4835 = !{!"", !2693, i64 0, !2925, i64 8}
!4836 = !{!"", !4837, i64 0, !4837, i64 304, !2690, i64 608, !2690, i64 612, !2690, i64 616, !2690, i64 620, !2690, i64 624, !3474, i64 632, !3474, i64 656, !2690, i64 680, !2690, i64 684, !2690, i64 688, !2690, i64 692, !3759, i64 696, !2925, i64 704, !2925, i64 712, !2925, i64 720, !2693, i64 728, !2693, i64 736, !4838, i64 744, !2690, i64 792, !2690, i64 796, !2690, i64 800, !2690, i64 804, !2693, i64 808, !2690, i64 816, !2693, i64 824, !2693, i64 832, !2690, i64 840, !2925, i64 848, !3759, i64 856, !3474, i64 864, !2691, i64 888, !2693, i64 1144, !2693, i64 1152, !2693, i64 1160, !2693, i64 1168, !2693, i64 1176, !2693, i64 1184, !2690, i64 1192, !2691, i64 1196, !2693, i64 1232}
!4837 = !{!"hashtable_S", !2925, i64 0, !2925, i64 8, !2925, i64 16, !2690, i64 24, !2690, i64 28, !2690, i64 32, !2693, i64 40, !2691, i64 48}
!4838 = !{!"", !4839, i64 0, !4839, i64 16, !2925, i64 32, !2925, i64 40}
!4839 = !{!"timeval", !2925, i64 0, !2925, i64 8}
!4840 = !DILocation(line: 2517, column: 17, scope: !4822)
!4841 = !DILocation(line: 2517, column: 26, scope: !4822)
!4842 = !DILocation(line: 2518, column: 1, scope: !4822)
!4843 = distinct !DISubprogram(name: "f_char2nr", scope: !3, file: !3, line: 2524, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2525, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4844)
!4844 = !{!4845, !4846, !4847}
!4845 = !DILocalVariable(name: "argvars", arg: 1, scope: !4843, file: !3, line: 2524, type: !2305)
!4846 = !DILocalVariable(name: "rettv", arg: 2, scope: !4843, file: !3, line: 2524, type: !2305)
!4847 = !DILocalVariable(name: "utf8", scope: !4848, file: !3, line: 2530, type: !756)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2529, column: 5)
!4849 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 2528, column: 9)
!4850 = !DILocation(line: 2524, column: 21, scope: !4843)
!4851 = !DILocation(line: 2524, column: 40, scope: !4843)
!4852 = !DILocation(line: 2526, column: 9, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 2526, column: 9)
!4854 = !DILocation(line: 2526, column: 25, scope: !4853)
!4855 = !DILocation(line: 2526, column: 28, scope: !4853)
!4856 = !DILocation(line: 2526, column: 61, scope: !4853)
!4857 = !DILocation(line: 2526, column: 9, scope: !4843)
!4858 = !DILocation(line: 2528, column: 9, scope: !4849)
!4859 = !DILocation(line: 2528, column: 9, scope: !4843)
!4860 = !DILocation(line: 2530, column: 6, scope: !4848)
!4861 = !DILocation(line: 2532, column: 6, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2532, column: 6)
!4863 = !DILocation(line: 2532, column: 17, scope: !4862)
!4864 = !DILocation(line: 2532, column: 24, scope: !4862)
!4865 = !DILocation(line: 2532, column: 6, scope: !4848)
!4866 = !DILocation(line: 2533, column: 18, scope: !4862)
!4867 = !DILocation(line: 2533, column: 13, scope: !4862)
!4868 = !DILocation(line: 2533, column: 6, scope: !4862)
!4869 = !DILocation(line: 2535, column: 6, scope: !4848)
!4870 = !DILocation(line: 2536, column: 42, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2535, column: 6)
!4872 = !DILocation(line: 2536, column: 29, scope: !4871)
!4873 = !DILocation(line: 2536, column: 6, scope: !4871)
!4874 = !DILocation(line: 2538, column: 31, scope: !4871)
!4875 = !DILocation(line: 2538, column: 44, scope: !4871)
!4876 = !DILocation(line: 2538, column: 29, scope: !4871)
!4877 = !DILocation(line: 2541, column: 25, scope: !4849)
!4878 = !DILocation(line: 2542, column: 1, scope: !4843)
!4879 = distinct !DISubprogram(name: "f_charcol", scope: !3, file: !3, line: 2594, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2595, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4880)
!4880 = !{!4881, !4882}
!4881 = !DILocalVariable(name: "argvars", arg: 1, scope: !4879, file: !3, line: 2594, type: !2305)
!4882 = !DILocalVariable(name: "rettv", arg: 2, scope: !4879, file: !3, line: 2594, type: !2305)
!4883 = !DILocation(line: 2594, column: 21, scope: !4879)
!4884 = !DILocation(line: 2594, column: 40, scope: !4879)
!4885 = !DILocation(line: 2596, column: 5, scope: !4879)
!4886 = !DILocation(line: 2597, column: 1, scope: !4879)
!4887 = distinct !DISubprogram(name: "f_charidx", scope: !3, file: !3, line: 2603, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2604, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4888)
!4888 = !{!4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896}
!4889 = !DILocalVariable(name: "argvars", arg: 1, scope: !4887, file: !3, line: 2603, type: !2305)
!4890 = !DILocalVariable(name: "rettv", arg: 2, scope: !4887, file: !3, line: 2603, type: !2305)
!4891 = !DILocalVariable(name: "str", scope: !4887, file: !3, line: 2605, type: !759)
!4892 = !DILocalVariable(name: "idx", scope: !4887, file: !3, line: 2606, type: !757)
!4893 = !DILocalVariable(name: "countcc", scope: !4887, file: !3, line: 2607, type: !757)
!4894 = !DILocalVariable(name: "p", scope: !4887, file: !3, line: 2608, type: !759)
!4895 = !DILocalVariable(name: "len", scope: !4887, file: !3, line: 2609, type: !756)
!4896 = !DILocalVariable(name: "ptr2len", scope: !4887, file: !3, line: 2610, type: !4897)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!4898 = !DILocation(line: 2603, column: 21, scope: !4887)
!4899 = !DILocation(line: 2603, column: 40, scope: !4887)
!4900 = !DILocation(line: 2607, column: 17, scope: !4887)
!4901 = !DILocation(line: 2612, column: 17, scope: !4887)
!4902 = !DILocation(line: 2612, column: 26, scope: !4887)
!4903 = !DILocation(line: 2614, column: 20, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2614, column: 9)
!4905 = !DILocation(line: 2614, column: 27, scope: !4904)
!4906 = !DILocation(line: 2614, column: 41, scope: !4904)
!4907 = !DILocation(line: 2614, column: 44, scope: !4904)
!4908 = !DILocation(line: 2614, column: 55, scope: !4904)
!4909 = !DILocation(line: 2614, column: 62, scope: !4904)
!4910 = !DILocation(line: 2615, column: 6, scope: !4904)
!4911 = !DILocation(line: 2615, column: 10, scope: !4904)
!4912 = !DILocation(line: 2615, column: 21, scope: !4904)
!4913 = !DILocation(line: 2616, column: 9, scope: !4904)
!4914 = !DILocation(line: 2618, column: 7, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 2617, column: 5)
!4916 = !DILocation(line: 2618, column: 2, scope: !4915)
!4917 = !DILocation(line: 2619, column: 2, scope: !4915)
!4918 = !DILocation(line: 2622, column: 11, scope: !4887)
!4919 = !DILocation(line: 2605, column: 13, scope: !4887)
!4920 = !DILocation(line: 2623, column: 11, scope: !4887)
!4921 = !DILocation(line: 2606, column: 17, scope: !4887)
!4922 = !DILocation(line: 2624, column: 13, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2624, column: 9)
!4924 = !DILocation(line: 2624, column: 28, scope: !4923)
!4925 = !DILocation(line: 2624, column: 21, scope: !4923)
!4926 = !DILocation(line: 2627, column: 20, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2627, column: 9)
!4928 = !DILocation(line: 2627, column: 27, scope: !4927)
!4929 = !DILocation(line: 2627, column: 9, scope: !4887)
!4930 = !DILocation(line: 2628, column: 12, scope: !4927)
!4931 = !DILocation(line: 2629, column: 21, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2629, column: 9)
!4933 = !DILocation(line: 2631, column: 8, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2630, column: 5)
!4935 = !DILocation(line: 2631, column: 2, scope: !4934)
!4936 = !DILocation(line: 2632, column: 2, scope: !4934)
!4937 = !DILocation(line: 2635, column: 9, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2635, column: 9)
!4939 = !DILocation(line: 2635, column: 21, scope: !4938)
!4940 = !DILocation(line: 2635, column: 18, scope: !4938)
!4941 = !DILocation(line: 2638, column: 12, scope: !4938)
!4942 = !DILocation(line: 2610, column: 12, scope: !4887)
!4943 = !DILocation(line: 2608, column: 13, scope: !4887)
!4944 = !DILocation(line: 2609, column: 10, scope: !4887)
!4945 = !DILocation(line: 2640, column: 37, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 2640, column: 5)
!4947 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2640, column: 5)
!4948 = !DILocation(line: 2640, column: 5, scope: !4947)
!4949 = !DILocation(line: 2642, column: 6, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 2642, column: 6)
!4951 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 2641, column: 5)
!4952 = !DILocation(line: 2642, column: 9, scope: !4950)
!4953 = !DILocation(line: 2642, column: 6, scope: !4951)
!4954 = !DILocation(line: 2644, column: 7, scope: !4951)
!4955 = !DILocation(line: 2644, column: 4, scope: !4951)
!4956 = !DILocation(line: 2640, column: 47, scope: !4946)
!4957 = !DILocation(line: 2640, column: 30, scope: !4946)
!4958 = distinct !{!4958, !4948, !4959}
!4959 = !DILocation(line: 2645, column: 5, scope: !4947)
!4960 = !DILocation(line: 2647, column: 28, scope: !4887)
!4961 = !DILocation(line: 2647, column: 26, scope: !4887)
!4962 = !DILocation(line: 2648, column: 1, scope: !4887)
!4963 = distinct !DISubprogram(name: "f_col", scope: !3, file: !3, line: 2671, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2672, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4964)
!4964 = !{!4965, !4966}
!4965 = !DILocalVariable(name: "argvars", arg: 1, scope: !4963, file: !3, line: 2671, type: !2305)
!4966 = !DILocalVariable(name: "rettv", arg: 2, scope: !4963, file: !3, line: 2671, type: !2305)
!4967 = !DILocation(line: 2671, column: 17, scope: !4963)
!4968 = !DILocation(line: 2671, column: 36, scope: !4963)
!4969 = !DILocation(line: 2673, column: 5, scope: !4963)
!4970 = !DILocation(line: 2674, column: 1, scope: !4963)
!4971 = distinct !DISubprogram(name: "f_confirm", scope: !3, file: !3, line: 2680, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2681, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4972)
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982}
!4973 = !DILocalVariable(name: "argvars", arg: 1, scope: !4971, file: !3, line: 2680, type: !2305)
!4974 = !DILocalVariable(name: "rettv", arg: 2, scope: !4971, file: !3, line: 2680, type: !2305)
!4975 = !DILocalVariable(name: "message", scope: !4971, file: !3, line: 2683, type: !759)
!4976 = !DILocalVariable(name: "buttons", scope: !4971, file: !3, line: 2684, type: !759)
!4977 = !DILocalVariable(name: "buf", scope: !4971, file: !3, line: 2685, type: !3499)
!4978 = !DILocalVariable(name: "buf2", scope: !4971, file: !3, line: 2686, type: !3499)
!4979 = !DILocalVariable(name: "def", scope: !4971, file: !3, line: 2687, type: !756)
!4980 = !DILocalVariable(name: "type", scope: !4971, file: !3, line: 2688, type: !756)
!4981 = !DILocalVariable(name: "typestr", scope: !4971, file: !3, line: 2689, type: !759)
!4982 = !DILocalVariable(name: "error", scope: !4971, file: !3, line: 2690, type: !756)
!4983 = !DILocation(line: 2680, column: 21, scope: !4971)
!4984 = !DILocation(line: 2680, column: 47, scope: !4971)
!4985 = !DILocation(line: 2684, column: 13, scope: !4971)
!4986 = !DILocation(line: 2685, column: 5, scope: !4971)
!4987 = !DILocation(line: 2685, column: 12, scope: !4971)
!4988 = !DILocation(line: 2686, column: 5, scope: !4971)
!4989 = !DILocation(line: 2686, column: 12, scope: !4971)
!4990 = !DILocation(line: 2687, column: 10, scope: !4971)
!4991 = !DILocation(line: 2688, column: 10, scope: !4971)
!4992 = !DILocation(line: 2690, column: 5, scope: !4971)
!4993 = !DILocation(line: 2690, column: 10, scope: !4971)
!4994 = !DILocation(line: 2692, column: 9, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 2692, column: 9)
!4996 = !DILocation(line: 2692, column: 25, scope: !4995)
!4997 = !DILocation(line: 2692, column: 28, scope: !4995)
!4998 = !DILocation(line: 2692, column: 61, scope: !4995)
!4999 = !DILocation(line: 2692, column: 9, scope: !4971)
!5000 = !DILocation(line: 2695, column: 15, scope: !4971)
!5001 = !DILocation(line: 2683, column: 13, scope: !4971)
!5002 = !DILocation(line: 2696, column: 17, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 2696, column: 9)
!5004 = !DILocation(line: 2696, column: 9, scope: !4971)
!5005 = !DILocation(line: 2697, column: 8, scope: !5003)
!5006 = !DILocation(line: 2697, column: 2, scope: !5003)
!5007 = !DILocation(line: 2698, column: 9, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 2698, column: 9)
!5009 = !DILocation(line: 2698, column: 20, scope: !5008)
!5010 = !DILocation(line: 2698, column: 27, scope: !5008)
!5011 = !DILocation(line: 2698, column: 9, scope: !4971)
!5012 = !DILocation(line: 2700, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 2700, column: 6)
!5014 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 2699, column: 5)
!5015 = !DILocation(line: 2700, column: 22, scope: !5013)
!5016 = !DILocation(line: 2700, column: 25, scope: !5013)
!5017 = !DILocation(line: 2700, column: 58, scope: !5013)
!5018 = !DILocation(line: 2700, column: 6, scope: !5014)
!5019 = !DILocation(line: 2702, column: 12, scope: !5014)
!5020 = !DILocation(line: 2703, column: 14, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 2703, column: 6)
!5022 = !DILocation(line: 2703, column: 6, scope: !5014)
!5023 = !DILocation(line: 2704, column: 12, scope: !5021)
!5024 = !DILocation(line: 2704, column: 6, scope: !5021)
!5025 = !DILocation(line: 2705, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 2705, column: 6)
!5027 = !DILocation(line: 2705, column: 17, scope: !5026)
!5028 = !DILocation(line: 2705, column: 24, scope: !5026)
!5029 = !DILocation(line: 2705, column: 6, scope: !5014)
!5030 = !DILocation(line: 2707, column: 17, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 2706, column: 2)
!5032 = !DILocation(line: 2707, column: 12, scope: !5031)
!5033 = !DILocation(line: 2708, column: 10, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2708, column: 10)
!5035 = !DILocation(line: 2708, column: 21, scope: !5034)
!5036 = !DILocation(line: 2708, column: 28, scope: !5034)
!5037 = !DILocation(line: 2708, column: 10, scope: !5031)
!5038 = !DILocation(line: 2710, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2710, column: 7)
!5040 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2709, column: 6)
!5041 = !DILocation(line: 2710, column: 23, scope: !5039)
!5042 = !DILocation(line: 2710, column: 26, scope: !5039)
!5043 = !DILocation(line: 2710, column: 59, scope: !5039)
!5044 = !DILocation(line: 2710, column: 7, scope: !5040)
!5045 = !DILocation(line: 2712, column: 13, scope: !5040)
!5046 = !DILocation(line: 2689, column: 13, scope: !4971)
!5047 = !DILocation(line: 2713, column: 15, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2713, column: 7)
!5049 = !DILocation(line: 2713, column: 7, scope: !5040)
!5050 = !DILocation(line: 2714, column: 13, scope: !5048)
!5051 = !DILocation(line: 2714, column: 7, scope: !5048)
!5052 = !DILocation(line: 2717, column: 15, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2716, column: 3)
!5054 = !DILocation(line: 2717, column: 7, scope: !5053)
!5055 = !DILocation(line: 2719, column: 32, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 2718, column: 7)
!5057 = !DILocation(line: 2720, column: 35, scope: !5056)
!5058 = !DILocation(line: 2721, column: 31, scope: !5056)
!5059 = !DILocation(line: 2722, column: 34, scope: !5056)
!5060 = !DILocation(line: 2730, column: 25, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 2730, column: 9)
!5062 = !DILocation(line: 2730, column: 28, scope: !5061)
!5063 = !DILocation(line: 2730, column: 37, scope: !5061)
!5064 = !DILocation(line: 2730, column: 9, scope: !4971)
!5065 = !DILocation(line: 2731, column: 22, scope: !5061)
!5066 = !DILocation(line: 2731, column: 2, scope: !5061)
!5067 = !DILocation(line: 2733, column: 10, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 2733, column: 9)
!5069 = !DILocation(line: 2733, column: 9, scope: !4971)
!5070 = !DILocation(line: 2734, column: 25, scope: !5068)
!5071 = !DILocation(line: 2734, column: 14, scope: !5068)
!5072 = !DILocation(line: 2734, column: 23, scope: !5068)
!5073 = !DILocation(line: 2734, column: 2, scope: !5068)
!5074 = !DILocation(line: 2737, column: 1, scope: !4971)
!5075 = distinct !DISubprogram(name: "f_copy", scope: !3, file: !3, line: 2743, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5076)
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "argvars", arg: 1, scope: !5075, file: !3, line: 2743, type: !2305)
!5078 = !DILocalVariable(name: "rettv", arg: 2, scope: !5075, file: !3, line: 2743, type: !2305)
!5079 = !DILocation(line: 2743, column: 18, scope: !5075)
!5080 = !DILocation(line: 2743, column: 37, scope: !5075)
!5081 = !DILocation(line: 2745, column: 5, scope: !5075)
!5082 = !DILocation(line: 2746, column: 1, scope: !5075)
!5083 = distinct !DISubprogram(name: "f_cos", scope: !3, file: !3, line: 2753, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2754, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5084)
!5084 = !{!5085, !5086, !5087}
!5085 = !DILocalVariable(name: "argvars", arg: 1, scope: !5083, file: !3, line: 2753, type: !2305)
!5086 = !DILocalVariable(name: "rettv", arg: 2, scope: !5083, file: !3, line: 2753, type: !2305)
!5087 = !DILocalVariable(name: "f", scope: !5083, file: !3, line: 2755, type: !762)
!5088 = !DILocation(line: 2753, column: 17, scope: !5083)
!5089 = !DILocation(line: 2753, column: 36, scope: !5083)
!5090 = !DILocation(line: 2755, column: 13, scope: !5083)
!5091 = !DILocation(line: 2757, column: 12, scope: !5083)
!5092 = !DILocation(line: 2757, column: 19, scope: !5083)
!5093 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !5094)
!5094 = distinct !DILocation(line: 2758, column: 9, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 2758, column: 9)
!5096 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !5094)
!5097 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !5094)
!5098 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !5094)
!5099 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !5094)
!5100 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !5094)
!5101 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !5094)
!5102 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !5094)
!5103 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !5094)
!5104 = !DILocation(line: 2759, column: 24, scope: !5095)
!5105 = !DILocation(line: 2759, column: 2, scope: !5095)
!5106 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !5094)
!5107 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !5094)
!5108 = !DILocation(line: 2762, column: 1, scope: !5083)
!5109 = distinct !DISubprogram(name: "f_cosh", scope: !3, file: !3, line: 2768, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2769, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5110)
!5110 = !{!5111, !5112, !5113}
!5111 = !DILocalVariable(name: "argvars", arg: 1, scope: !5109, file: !3, line: 2768, type: !2305)
!5112 = !DILocalVariable(name: "rettv", arg: 2, scope: !5109, file: !3, line: 2768, type: !2305)
!5113 = !DILocalVariable(name: "f", scope: !5109, file: !3, line: 2770, type: !762)
!5114 = !DILocation(line: 2768, column: 18, scope: !5109)
!5115 = !DILocation(line: 2768, column: 37, scope: !5109)
!5116 = !DILocation(line: 2770, column: 13, scope: !5109)
!5117 = !DILocation(line: 2772, column: 12, scope: !5109)
!5118 = !DILocation(line: 2772, column: 19, scope: !5109)
!5119 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !5120)
!5120 = distinct !DILocation(line: 2773, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 2773, column: 9)
!5122 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !5120)
!5123 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !5120)
!5124 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !5120)
!5125 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !5120)
!5126 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !5120)
!5127 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !5120)
!5128 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !5120)
!5129 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !5120)
!5130 = !DILocation(line: 2774, column: 24, scope: !5121)
!5131 = !DILocation(line: 2774, column: 2, scope: !5121)
!5132 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !5120)
!5133 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !5120)
!5134 = !DILocation(line: 2777, column: 1, scope: !5109)
!5135 = distinct !DISubprogram(name: "f_cursor", scope: !3, file: !3, line: 2857, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2858, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5136)
!5136 = !{!5137, !5138}
!5137 = !DILocalVariable(name: "argvars", arg: 1, scope: !5135, file: !3, line: 2857, type: !2305)
!5138 = !DILocalVariable(name: "rettv", arg: 2, scope: !5135, file: !3, line: 2857, type: !2305)
!5139 = !DILocation(line: 2857, column: 20, scope: !5135)
!5140 = !DILocation(line: 2857, column: 39, scope: !5135)
!5141 = !DILocation(line: 2859, column: 5, scope: !5135)
!5142 = !DILocation(line: 2860, column: 1, scope: !5135)
!5143 = distinct !DISubprogram(name: "f_deepcopy", scope: !3, file: !3, line: 2893, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2894, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5144)
!5144 = !{!5145, !5146, !5147, !5148}
!5145 = !DILocalVariable(name: "argvars", arg: 1, scope: !5143, file: !3, line: 2893, type: !2305)
!5146 = !DILocalVariable(name: "rettv", arg: 2, scope: !5143, file: !3, line: 2893, type: !2305)
!5147 = !DILocalVariable(name: "noref", scope: !5143, file: !3, line: 2895, type: !757)
!5148 = !DILocalVariable(name: "copyID", scope: !5143, file: !3, line: 2896, type: !756)
!5149 = !DILocation(line: 2893, column: 22, scope: !5143)
!5150 = !DILocation(line: 2893, column: 41, scope: !5143)
!5151 = !DILocation(line: 2895, column: 17, scope: !5143)
!5152 = !DILocation(line: 2898, column: 9, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2898, column: 9)
!5154 = !DILocation(line: 2898, column: 20, scope: !5153)
!5155 = !DILocation(line: 2898, column: 27, scope: !5153)
!5156 = !DILocation(line: 2898, column: 9, scope: !5143)
!5157 = !DILocation(line: 2904, column: 11, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2903, column: 5)
!5159 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2900, column: 9)
!5160 = !DILocation(line: 2896, column: 10, scope: !5143)
!5161 = !DILocation(line: 2905, column: 38, scope: !5158)
!5162 = !DILocation(line: 2899, column: 10, scope: !5153)
!5163 = !DILocation(line: 2900, column: 19, scope: !5159)
!5164 = !DILocation(line: 2901, column: 8, scope: !5159)
!5165 = !DILocation(line: 2901, column: 2, scope: !5159)
!5166 = !DILocation(line: 2905, column: 44, scope: !5158)
!5167 = !DILocation(line: 2905, column: 2, scope: !5158)
!5168 = !DILocation(line: 2907, column: 1, scope: !5143)
!5169 = distinct !DISubprogram(name: "f_did_filetype", scope: !3, file: !3, line: 2913, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2914, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5170)
!5170 = !{!5171, !5172}
!5171 = !DILocalVariable(name: "argvars", arg: 1, scope: !5169, file: !3, line: 2913, type: !2305)
!5172 = !DILocalVariable(name: "rettv", arg: 2, scope: !5169, file: !3, line: 2913, type: !2305)
!5173 = !DILocation(line: 2913, column: 26, scope: !5169)
!5174 = !DILocation(line: 2913, column: 52, scope: !5169)
!5175 = !DILocation(line: 2915, column: 28, scope: !5169)
!5176 = !DILocation(line: 2915, column: 17, scope: !5169)
!5177 = !DILocation(line: 2915, column: 26, scope: !5169)
!5178 = !DILocation(line: 2916, column: 1, scope: !5169)
!5179 = distinct !DISubprogram(name: "f_echoraw", scope: !3, file: !3, line: 2922, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2923, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5180)
!5180 = !{!5181, !5182, !5183}
!5181 = !DILocalVariable(name: "argvars", arg: 1, scope: !5179, file: !3, line: 2922, type: !2305)
!5182 = !DILocalVariable(name: "rettv", arg: 2, scope: !5179, file: !3, line: 2922, type: !2305)
!5183 = !DILocalVariable(name: "str", scope: !5179, file: !3, line: 2924, type: !759)
!5184 = !DILocation(line: 2922, column: 21, scope: !5179)
!5185 = !DILocation(line: 2922, column: 40, scope: !5179)
!5186 = !DILocation(line: 2924, column: 19, scope: !5179)
!5187 = !DILocation(line: 2924, column: 13, scope: !5179)
!5188 = !DILocation(line: 2926, column: 13, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2926, column: 9)
!5190 = !DILocation(line: 2926, column: 21, scope: !5189)
!5191 = !DILocation(line: 2926, column: 24, scope: !5189)
!5192 = !DILocation(line: 2926, column: 29, scope: !5189)
!5193 = !DILocation(line: 2926, column: 9, scope: !5179)
!5194 = !DILocation(line: 2928, column: 2, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2927, column: 5)
!5196 = !DILocation(line: 2929, column: 2, scope: !5195)
!5197 = !DILocation(line: 2930, column: 5, scope: !5195)
!5198 = !DILocation(line: 2931, column: 1, scope: !5179)
!5199 = distinct !DISubprogram(name: "f_empty", scope: !3, file: !3, line: 2937, type: !2538, isLocal: true, isDefinition: true, scopeLine: 2938, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5200)
!5200 = !{!5201, !5202, !5203}
!5201 = !DILocalVariable(name: "argvars", arg: 1, scope: !5199, file: !3, line: 2937, type: !2305)
!5202 = !DILocalVariable(name: "rettv", arg: 2, scope: !5199, file: !3, line: 2937, type: !2305)
!5203 = !DILocalVariable(name: "n", scope: !5199, file: !3, line: 2939, type: !756)
!5204 = !DILocation(line: 2937, column: 19, scope: !5199)
!5205 = !DILocation(line: 2937, column: 38, scope: !5199)
!5206 = !DILocation(line: 2939, column: 10, scope: !5199)
!5207 = !DILocation(line: 2941, column: 24, scope: !5199)
!5208 = !DILocation(line: 2941, column: 5, scope: !5199)
!5209 = !DILocation(line: 2945, column: 21, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2942, column: 5)
!5211 = !DILocation(line: 2945, column: 26, scope: !5210)
!5212 = !DILocation(line: 2945, column: 35, scope: !5210)
!5213 = !DILocation(line: 2946, column: 8, scope: !5210)
!5214 = !DILocation(line: 2946, column: 11, scope: !5210)
!5215 = !DILocation(line: 2946, column: 37, scope: !5210)
!5216 = !DILocation(line: 2952, column: 26, scope: !5210)
!5217 = !DILocation(line: 2952, column: 35, scope: !5210)
!5218 = !DILocation(line: 2953, column: 6, scope: !5210)
!5219 = !DILocation(line: 2956, column: 21, scope: !5210)
!5220 = !DILocation(line: 2956, column: 26, scope: !5210)
!5221 = !DILocation(line: 2956, column: 34, scope: !5210)
!5222 = !DILocation(line: 2957, column: 6, scope: !5210)
!5223 = !DILocation(line: 2960, column: 21, scope: !5210)
!5224 = !DILocation(line: 2960, column: 26, scope: !5210)
!5225 = !DILocation(line: 2960, column: 33, scope: !5210)
!5226 = !DILocation(line: 2961, column: 6, scope: !5210)
!5227 = !DILocation(line: 2961, column: 33, scope: !5210)
!5228 = !DILocation(line: 2961, column: 40, scope: !5210)
!5229 = !DILocation(line: 2964, column: 21, scope: !5210)
!5230 = !DILocation(line: 2964, column: 26, scope: !5210)
!5231 = !DILocation(line: 2964, column: 33, scope: !5210)
!5232 = !DILocation(line: 2965, column: 4, scope: !5210)
!5233 = !DILocation(line: 2965, column: 42, scope: !5210)
!5234 = !{!5235, !2925, i64 24}
!5235 = !{!"dictvar_S", !2691, i64 0, !2691, i64 1, !2690, i64 4, !2690, i64 8, !4837, i64 16, !2693, i64 320, !2693, i64 328, !2693, i64 336, !2693, i64 344}
!5236 = !DILocation(line: 2965, column: 50, scope: !5210)
!5237 = !DILocation(line: 2969, column: 26, scope: !5210)
!5238 = !DILocation(line: 2969, column: 35, scope: !5210)
!5239 = !DILocation(line: 2970, column: 6, scope: !5210)
!5240 = !DILocation(line: 2973, column: 21, scope: !5210)
!5241 = !DILocation(line: 2973, column: 26, scope: !5210)
!5242 = !DILocation(line: 2973, column: 33, scope: !5210)
!5243 = !DILocation(line: 2974, column: 3, scope: !5210)
!5244 = !DILocation(line: 2974, column: 36, scope: !5210)
!5245 = !{!5246, !2690, i64 0}
!5246 = !{!"blobvar_S", !3474, i64 0, !2690, i64 24, !2691, i64 28}
!5247 = !DILocation(line: 2974, column: 43, scope: !5210)
!5248 = !DILocation(line: 2979, column: 21, scope: !5210)
!5249 = !DILocation(line: 2979, column: 26, scope: !5210)
!5250 = !DILocation(line: 2979, column: 32, scope: !5210)
!5251 = !DILocation(line: 2980, column: 7, scope: !5210)
!5252 = !DILocation(line: 2980, column: 33, scope: !5210)
!5253 = !{!5254, !2691, i64 40}
!5254 = !{!"jobvar_S", !2693, i64 0, !2693, i64 8, !2690, i64 16, !2693, i64 24, !2693, i64 32, !2691, i64 40, !2693, i64 48, !2693, i64 56, !2690, i64 64, !4155, i64 72, !2693, i64 96, !2690, i64 104, !2690, i64 108, !2693, i64 112, !2693, i64 120}
!5255 = !DILocation(line: 2980, column: 43, scope: !5210)
!5256 = !DILocation(line: 2985, column: 21, scope: !5210)
!5257 = !DILocation(line: 2985, column: 26, scope: !5210)
!5258 = !DILocation(line: 2985, column: 36, scope: !5210)
!5259 = !DILocation(line: 2986, column: 11, scope: !5210)
!5260 = !DILocation(line: 2986, column: 15, scope: !5210)
!5261 = !DILocation(line: 2986, column: 14, scope: !5210)
!5262 = !DILocation(line: 2992, column: 6, scope: !5210)
!5263 = !DILocation(line: 2994, column: 6, scope: !5210)
!5264 = !DILocation(line: 2997, column: 28, scope: !5199)
!5265 = !DILocation(line: 2997, column: 17, scope: !5199)
!5266 = !DILocation(line: 2997, column: 26, scope: !5199)
!5267 = !DILocation(line: 2998, column: 1, scope: !5199)
!5268 = distinct !DISubprogram(name: "ret_dict_string", scope: !3, file: !3, line: 524, type: !2579, isLocal: true, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5269)
!5269 = !{!5270, !5271}
!5270 = !DILocalVariable(name: "argcount", arg: 1, scope: !5268, file: !3, line: 524, type: !756)
!5271 = !DILocalVariable(name: "argtypes", arg: 2, scope: !5268, file: !3, line: 524, type: !797)
!5272 = !DILocation(line: 524, column: 21, scope: !5268)
!5273 = !DILocation(line: 524, column: 47, scope: !5268)
!5274 = !DILocation(line: 526, column: 5, scope: !5268)
!5275 = distinct !DISubprogram(name: "f_environ", scope: !3, file: !3, line: 3004, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3005, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5276)
!5276 = !{!5277, !5278, !5279, !5280, !5281}
!5277 = !DILocalVariable(name: "argvars", arg: 1, scope: !5275, file: !3, line: 3004, type: !2305)
!5278 = !DILocalVariable(name: "rettv", arg: 2, scope: !5275, file: !3, line: 3004, type: !2305)
!5279 = !DILocalVariable(name: "i", scope: !5275, file: !3, line: 3007, type: !756)
!5280 = !DILocalVariable(name: "entry", scope: !5275, file: !3, line: 3008, type: !759)
!5281 = !DILocalVariable(name: "value", scope: !5275, file: !3, line: 3008, type: !759)
!5282 = !DILocation(line: 3004, column: 21, scope: !5275)
!5283 = !DILocation(line: 3004, column: 47, scope: !5275)
!5284 = !DILocation(line: 3007, column: 11, scope: !5275)
!5285 = !DILocation(line: 3015, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 3015, column: 9)
!5287 = !DILocation(line: 3015, column: 33, scope: !5286)
!5288 = !DILocation(line: 3015, column: 9, scope: !5275)
!5289 = !DILocation(line: 3022, column: 10, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 3022, column: 9)
!5291 = !DILocation(line: 3022, column: 9, scope: !5290)
!5292 = !DILocation(line: 3022, column: 18, scope: !5290)
!5293 = !DILocation(line: 3022, column: 9, scope: !5275)
!5294 = !DILocation(line: 3008, column: 14, scope: !5275)
!5295 = !DILocation(line: 3035, column: 6, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 3027, column: 5)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 3026, column: 5)
!5298 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 3026, column: 5)
!5299 = !DILocation(line: 3037, column: 10, scope: !5296)
!5300 = !DILocation(line: 3039, column: 12, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 3039, column: 6)
!5302 = !DILocation(line: 3039, column: 6, scope: !5296)
!5303 = !DILocation(line: 3041, column: 15, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 3041, column: 6)
!5305 = !DILocation(line: 3008, column: 22, scope: !5275)
!5306 = !DILocation(line: 3041, column: 39, scope: !5304)
!5307 = !DILocation(line: 3041, column: 6, scope: !5296)
!5308 = !DILocation(line: 3043, column: 6, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 3042, column: 2)
!5310 = !DILocation(line: 3044, column: 6, scope: !5309)
!5311 = !DILocation(line: 3046, column: 8, scope: !5296)
!5312 = !DILocation(line: 3046, column: 11, scope: !5296)
!5313 = !DILocation(line: 3047, column: 30, scope: !5296)
!5314 = !DILocation(line: 3047, column: 2, scope: !5296)
!5315 = !DILocation(line: 3048, column: 2, scope: !5296)
!5316 = !DILocation(line: 3049, column: 5, scope: !5296)
!5317 = !DILocation(line: 3026, column: 19, scope: !5297)
!5318 = !DILocation(line: 3035, column: 25, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 3035, column: 6)
!5320 = !DILocation(line: 3035, column: 37, scope: !5319)
!5321 = distinct !{!5321, !5322, !5323}
!5322 = !DILocation(line: 3026, column: 5, scope: !5298)
!5323 = !DILocation(line: 3049, column: 5, scope: !5298)
!5324 = !DILocation(line: 3051, column: 1, scope: !5275)
!5325 = distinct !DISubprogram(name: "f_escape", scope: !3, file: !3, line: 3057, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3058, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5326)
!5326 = !{!5327, !5328, !5329}
!5327 = !DILocalVariable(name: "argvars", arg: 1, scope: !5325, file: !3, line: 3057, type: !2305)
!5328 = !DILocalVariable(name: "rettv", arg: 2, scope: !5325, file: !3, line: 3057, type: !2305)
!5329 = !DILocalVariable(name: "buf", scope: !5325, file: !3, line: 3059, type: !3499)
!5330 = !DILocation(line: 3057, column: 20, scope: !5325)
!5331 = !DILocation(line: 3057, column: 39, scope: !5325)
!5332 = !DILocation(line: 3059, column: 5, scope: !5325)
!5333 = !DILocation(line: 3059, column: 12, scope: !5325)
!5334 = !DILocation(line: 3061, column: 48, scope: !5325)
!5335 = !DILocation(line: 3062, column: 26, scope: !5325)
!5336 = !DILocation(line: 3062, column: 7, scope: !5325)
!5337 = !DILocation(line: 3061, column: 28, scope: !5325)
!5338 = !DILocation(line: 3061, column: 12, scope: !5325)
!5339 = !DILocation(line: 3061, column: 17, scope: !5325)
!5340 = !DILocation(line: 3061, column: 26, scope: !5325)
!5341 = !DILocation(line: 3063, column: 12, scope: !5325)
!5342 = !DILocation(line: 3063, column: 19, scope: !5325)
!5343 = !DILocation(line: 3064, column: 1, scope: !5325)
!5344 = distinct !DISubprogram(name: "f_eval", scope: !3, file: !3, line: 3070, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3071, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5345)
!5345 = !{!5346, !5347, !5348, !5349}
!5346 = !DILocalVariable(name: "argvars", arg: 1, scope: !5344, file: !3, line: 3070, type: !2305)
!5347 = !DILocalVariable(name: "rettv", arg: 2, scope: !5344, file: !3, line: 3070, type: !2305)
!5348 = !DILocalVariable(name: "s", scope: !5344, file: !3, line: 3072, type: !759)
!5349 = !DILocalVariable(name: "p", scope: !5344, file: !3, line: 3072, type: !759)
!5350 = !DILocation(line: 3070, column: 18, scope: !5344)
!5351 = !DILocation(line: 3070, column: 37, scope: !5344)
!5352 = !DILocation(line: 3072, column: 5, scope: !5344)
!5353 = !DILocation(line: 3074, column: 9, scope: !5344)
!5354 = !DILocation(line: 3072, column: 13, scope: !5344)
!5355 = !DILocation(line: 3074, column: 7, scope: !5344)
!5356 = !DILocation(line: 3075, column: 11, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 3075, column: 9)
!5358 = !DILocation(line: 3075, column: 9, scope: !5344)
!5359 = !DILocation(line: 3076, column: 6, scope: !5357)
!5360 = !DILocation(line: 3076, column: 4, scope: !5357)
!5361 = !DILocation(line: 3072, column: 17, scope: !5344)
!5362 = !DILocation(line: 3079, column: 19, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 3079, column: 9)
!5364 = !DILocation(line: 3079, column: 22, scope: !5363)
!5365 = !DILocation(line: 3079, column: 58, scope: !5363)
!5366 = !DILocation(line: 3079, column: 9, scope: !5344)
!5367 = !DILocation(line: 3081, column: 20, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 3081, column: 6)
!5369 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 3080, column: 5)
!5370 = !DILocation(line: 3081, column: 6, scope: !5369)
!5371 = !DILocation(line: 3082, column: 12, scope: !5368)
!5372 = !DILocation(line: 3082, column: 6, scope: !5368)
!5373 = !DILocation(line: 3083, column: 15, scope: !5369)
!5374 = !DILocation(line: 3084, column: 9, scope: !5369)
!5375 = !DILocation(line: 3084, column: 16, scope: !5369)
!5376 = !DILocation(line: 3085, column: 14, scope: !5369)
!5377 = !DILocation(line: 3085, column: 23, scope: !5369)
!5378 = !DILocation(line: 3086, column: 5, scope: !5369)
!5379 = !DILocation(line: 3087, column: 15, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 3087, column: 14)
!5381 = !DILocation(line: 3087, column: 14, scope: !5380)
!5382 = !DILocation(line: 3087, column: 17, scope: !5380)
!5383 = !DILocation(line: 3087, column: 14, scope: !5363)
!5384 = !DILocation(line: 3088, column: 8, scope: !5380)
!5385 = !DILocation(line: 3088, column: 27, scope: !5380)
!5386 = !DILocation(line: 3088, column: 2, scope: !5380)
!5387 = !DILocation(line: 3089, column: 1, scope: !5344)
!5388 = distinct !DISubprogram(name: "f_eventhandler", scope: !3, file: !3, line: 3095, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3096, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5389)
!5389 = !{!5390, !5391}
!5390 = !DILocalVariable(name: "argvars", arg: 1, scope: !5388, file: !3, line: 3095, type: !2305)
!5391 = !DILocalVariable(name: "rettv", arg: 2, scope: !5388, file: !3, line: 3095, type: !2305)
!5392 = !DILocation(line: 3095, column: 26, scope: !5388)
!5393 = !DILocation(line: 3095, column: 52, scope: !5388)
!5394 = !DILocation(line: 3097, column: 28, scope: !5388)
!5395 = !DILocation(line: 3097, column: 42, scope: !5388)
!5396 = !DILocation(line: 3097, column: 39, scope: !5388)
!5397 = !DILocation(line: 3097, column: 17, scope: !5388)
!5398 = !DILocation(line: 3097, column: 26, scope: !5388)
!5399 = !DILocation(line: 3098, column: 1, scope: !5388)
!5400 = distinct !DISubprogram(name: "f_execute", scope: !3, file: !3, line: 3263, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3264, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5401)
!5401 = !{!5402, !5403}
!5402 = !DILocalVariable(name: "argvars", arg: 1, scope: !5400, file: !3, line: 3263, type: !2305)
!5403 = !DILocalVariable(name: "rettv", arg: 2, scope: !5400, file: !3, line: 3263, type: !2305)
!5404 = !DILocation(line: 3263, column: 21, scope: !5400)
!5405 = !DILocation(line: 3263, column: 40, scope: !5400)
!5406 = !DILocation(line: 3265, column: 5, scope: !5400)
!5407 = !DILocation(line: 3266, column: 1, scope: !5400)
!5408 = distinct !DISubprogram(name: "f_exists", scope: !3, file: !3, line: 3272, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3273, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5409)
!5409 = !{!5410, !5411, !5412, !5413}
!5410 = !DILocalVariable(name: "argvars", arg: 1, scope: !5408, file: !3, line: 3272, type: !2305)
!5411 = !DILocalVariable(name: "rettv", arg: 2, scope: !5408, file: !3, line: 3272, type: !2305)
!5412 = !DILocalVariable(name: "p", scope: !5408, file: !3, line: 3274, type: !759)
!5413 = !DILocalVariable(name: "n", scope: !5408, file: !3, line: 3275, type: !756)
!5414 = !DILocation(line: 3272, column: 20, scope: !5408)
!5415 = !DILocation(line: 3272, column: 39, scope: !5408)
!5416 = !DILocation(line: 3274, column: 5, scope: !5408)
!5417 = !DILocation(line: 3275, column: 10, scope: !5408)
!5418 = !DILocation(line: 3277, column: 9, scope: !5408)
!5419 = !DILocation(line: 3274, column: 13, scope: !5408)
!5420 = !DILocation(line: 3277, column: 7, scope: !5408)
!5421 = !DILocation(line: 3278, column: 9, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 3278, column: 9)
!5423 = !DILocation(line: 3278, column: 9, scope: !5408)
!5424 = !DILocation(line: 3281, column: 6, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 3281, column: 6)
!5426 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3279, column: 5)
!5427 = !DILocation(line: 3281, column: 24, scope: !5425)
!5428 = !DILocation(line: 3281, column: 6, scope: !5426)
!5429 = !DILocation(line: 3286, column: 10, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 3284, column: 2)
!5431 = !DILocation(line: 3286, column: 8, scope: !5430)
!5432 = !DILocation(line: 3287, column: 12, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 3287, column: 10)
!5434 = !DILocation(line: 3287, column: 20, scope: !5433)
!5435 = !DILocation(line: 3287, column: 23, scope: !5433)
!5436 = !DILocation(line: 3287, column: 26, scope: !5433)
!5437 = !DILocation(line: 3287, column: 10, scope: !5430)
!5438 = !DILocation(line: 3289, column: 6, scope: !5430)
!5439 = !DILocation(line: 3294, column: 7, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 3293, column: 5)
!5441 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3292, column: 14)
!5442 = !DILocation(line: 3294, column: 35, scope: !5440)
!5443 = !DILocation(line: 3295, column: 17, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 3295, column: 6)
!5445 = !DILocation(line: 3295, column: 7, scope: !5444)
!5446 = !DILocation(line: 3295, column: 6, scope: !5444)
!5447 = !DILocation(line: 3295, column: 20, scope: !5444)
!5448 = !DILocation(line: 3295, column: 6, scope: !5440)
!5449 = !DILocation(line: 3300, column: 24, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 3299, column: 5)
!5451 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 3298, column: 14)
!5452 = !DILocation(line: 3300, column: 6, scope: !5450)
!5453 = !DILocation(line: 3301, column: 5, scope: !5450)
!5454 = !DILocation(line: 3304, column: 31, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3303, column: 5)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 3302, column: 14)
!5457 = !DILocalVariable(name: "name", arg: 1, scope: !5458, file: !3, line: 1962, type: !759)
!5458 = distinct !DISubprogram(name: "has_internal_func_name", scope: !3, file: !3, line: 1962, type: !2971, isLocal: true, isDefinition: true, scopeLine: 1963, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5459)
!5459 = !{!5457}
!5460 = !DILocation(line: 1962, column: 32, scope: !5458, inlinedAt: !5461)
!5461 = distinct !DILocation(line: 3304, column: 6, scope: !5455)
!5462 = !DILocation(line: 1919, column: 32, scope: !2977, inlinedAt: !5463)
!5463 = distinct !DILocation(line: 1964, column: 12, scope: !5458, inlinedAt: !5461)
!5464 = !DILocation(line: 1919, column: 42, scope: !2977, inlinedAt: !5463)
!5465 = !DILocation(line: 1921, column: 10, scope: !2977, inlinedAt: !5463)
!5466 = !DILocation(line: 1922, column: 10, scope: !2977, inlinedAt: !5463)
!5467 = !DILocation(line: 1929, column: 5, scope: !2977, inlinedAt: !5463)
!5468 = !DILocation(line: 1931, column: 31, scope: !2993, inlinedAt: !5463)
!5469 = !DILocation(line: 1931, column: 40, scope: !2993, inlinedAt: !5463)
!5470 = !DILocation(line: 1931, column: 12, scope: !2993, inlinedAt: !5463)
!5471 = !DILocation(line: 1924, column: 10, scope: !2977, inlinedAt: !5463)
!5472 = !DILocation(line: 1932, column: 8, scope: !2993, inlinedAt: !5463)
!5473 = !DILocation(line: 1923, column: 10, scope: !2977, inlinedAt: !5463)
!5474 = !DILocation(line: 1933, column: 10, scope: !3000, inlinedAt: !5463)
!5475 = !DILocation(line: 1933, column: 6, scope: !2993, inlinedAt: !5463)
!5476 = !DILocation(line: 1934, column: 15, scope: !3000, inlinedAt: !5463)
!5477 = !DILocation(line: 1934, column: 6, scope: !3000, inlinedAt: !5463)
!5478 = !DILocation(line: 1935, column: 15, scope: !3005, inlinedAt: !5463)
!5479 = !DILocation(line: 1935, column: 11, scope: !3000, inlinedAt: !5463)
!5480 = !DILocation(line: 1936, column: 16, scope: !3005, inlinedAt: !5463)
!5481 = !DILocation(line: 1929, column: 18, scope: !2977, inlinedAt: !5463)
!5482 = !DILocation(line: 1964, column: 48, scope: !5458, inlinedAt: !5461)
!5483 = !DILocation(line: 3305, column: 5, scope: !5455)
!5484 = !DILocation(line: 3308, column: 19, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 3307, column: 5)
!5486 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3306, column: 14)
!5487 = !DILocation(line: 3308, column: 6, scope: !5485)
!5488 = !DILocation(line: 3309, column: 5, scope: !5485)
!5489 = !DILocation(line: 3312, column: 6, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 3312, column: 6)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 3311, column: 5)
!5492 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 3310, column: 14)
!5493 = !DILocation(line: 3312, column: 11, scope: !5490)
!5494 = !DILocation(line: 3312, column: 6, scope: !5491)
!5495 = !DILocation(line: 3313, column: 30, scope: !5490)
!5496 = !DILocation(line: 3313, column: 10, scope: !5490)
!5497 = !DILocation(line: 3313, column: 6, scope: !5490)
!5498 = !DILocation(line: 3315, column: 10, scope: !5490)
!5499 = !DILocation(line: 3319, column: 6, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 3318, column: 5)
!5501 = !DILocation(line: 3322, column: 28, scope: !5408)
!5502 = !DILocation(line: 3322, column: 17, scope: !5408)
!5503 = !DILocation(line: 3322, column: 26, scope: !5408)
!5504 = !DILocation(line: 3323, column: 1, scope: !5408)
!5505 = distinct !DISubprogram(name: "f_exp", scope: !3, file: !3, line: 3330, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3331, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5506)
!5506 = !{!5507, !5508, !5509}
!5507 = !DILocalVariable(name: "argvars", arg: 1, scope: !5505, file: !3, line: 3330, type: !2305)
!5508 = !DILocalVariable(name: "rettv", arg: 2, scope: !5505, file: !3, line: 3330, type: !2305)
!5509 = !DILocalVariable(name: "f", scope: !5505, file: !3, line: 3332, type: !762)
!5510 = !DILocation(line: 3330, column: 17, scope: !5505)
!5511 = !DILocation(line: 3330, column: 36, scope: !5505)
!5512 = !DILocation(line: 3332, column: 13, scope: !5505)
!5513 = !DILocation(line: 3334, column: 12, scope: !5505)
!5514 = !DILocation(line: 3334, column: 19, scope: !5505)
!5515 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !5516)
!5516 = distinct !DILocation(line: 3335, column: 9, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3335, column: 9)
!5518 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !5516)
!5519 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !5516)
!5520 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !5516)
!5521 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !5516)
!5522 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !5516)
!5523 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !5516)
!5524 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !5516)
!5525 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !5516)
!5526 = !DILocation(line: 3336, column: 24, scope: !5517)
!5527 = !DILocation(line: 3336, column: 2, scope: !5517)
!5528 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !5516)
!5529 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !5516)
!5530 = !DILocation(line: 3339, column: 1, scope: !5505)
!5531 = distinct !DISubprogram(name: "f_expand", scope: !3, file: !3, line: 3346, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3347, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5532)
!5532 = !{!5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542}
!5533 = !DILocalVariable(name: "argvars", arg: 1, scope: !5531, file: !3, line: 3346, type: !2305)
!5534 = !DILocalVariable(name: "rettv", arg: 2, scope: !5531, file: !3, line: 3346, type: !2305)
!5535 = !DILocalVariable(name: "s", scope: !5531, file: !3, line: 3348, type: !759)
!5536 = !DILocalVariable(name: "len", scope: !5531, file: !3, line: 3349, type: !756)
!5537 = !DILocalVariable(name: "errormsg", scope: !5531, file: !3, line: 3350, type: !751)
!5538 = !DILocalVariable(name: "options", scope: !5531, file: !3, line: 3351, type: !756)
!5539 = !DILocalVariable(name: "xpc", scope: !5531, file: !3, line: 3352, type: !2510)
!5540 = !DILocalVariable(name: "error", scope: !5531, file: !3, line: 3353, type: !756)
!5541 = !DILocalVariable(name: "result", scope: !5531, file: !3, line: 3354, type: !759)
!5542 = !DILocalVariable(name: "i", scope: !5543, file: !3, line: 3402, type: !756)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 3401, column: 6)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 3400, column: 15)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3397, column: 10)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 3392, column: 2)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 3391, column: 6)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3385, column: 5)
!5549 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3370, column: 9)
!5550 = !DILocation(line: 3346, column: 20, scope: !5531)
!5551 = !DILocation(line: 3346, column: 39, scope: !5531)
!5552 = !DILocation(line: 3349, column: 5, scope: !5531)
!5553 = !DILocation(line: 3350, column: 5, scope: !5531)
!5554 = !DILocation(line: 3351, column: 10, scope: !5531)
!5555 = !DILocation(line: 3352, column: 5, scope: !5531)
!5556 = !DILocation(line: 3353, column: 5, scope: !5531)
!5557 = !DILocation(line: 3353, column: 10, scope: !5531)
!5558 = !DILocation(line: 3362, column: 12, scope: !5531)
!5559 = !DILocation(line: 3362, column: 19, scope: !5531)
!5560 = !DILocation(line: 3363, column: 9, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3363, column: 9)
!5562 = !DILocation(line: 3363, column: 20, scope: !5561)
!5563 = !DILocation(line: 3363, column: 27, scope: !5561)
!5564 = !DILocation(line: 3364, column: 6, scope: !5561)
!5565 = !DILocation(line: 3364, column: 9, scope: !5561)
!5566 = !DILocation(line: 3364, column: 20, scope: !5561)
!5567 = !DILocation(line: 3364, column: 27, scope: !5561)
!5568 = !DILocation(line: 3365, column: 6, scope: !5561)
!5569 = !DILocation(line: 3365, column: 9, scope: !5561)
!5570 = !DILocation(line: 3366, column: 10, scope: !5561)
!5571 = !DILocation(line: 3366, column: 6, scope: !5561)
!5572 = !DILocation(line: 3367, column: 2, scope: !5561)
!5573 = !DILocation(line: 3369, column: 9, scope: !5531)
!5574 = !DILocation(line: 3348, column: 13, scope: !5531)
!5575 = !DILocation(line: 3370, column: 9, scope: !5549)
!5576 = !DILocation(line: 3370, column: 19, scope: !5549)
!5577 = !DILocation(line: 3372, column: 2, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3371, column: 5)
!5579 = !DILocation(line: 3349, column: 10, scope: !5531)
!5580 = !DILocation(line: 3350, column: 11, scope: !5531)
!5581 = !DILocation(line: 3373, column: 11, scope: !5578)
!5582 = !DILocation(line: 3354, column: 13, scope: !5531)
!5583 = !DILocation(line: 3374, column: 2, scope: !5578)
!5584 = !DILocation(line: 3375, column: 13, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 3375, column: 6)
!5586 = !DILocation(line: 3375, column: 20, scope: !5585)
!5587 = !DILocation(line: 3375, column: 6, scope: !5578)
!5588 = !DILocation(line: 3377, column: 10, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 3377, column: 10)
!5590 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 3376, column: 2)
!5591 = !DILocation(line: 3377, column: 34, scope: !5589)
!5592 = !DILocation(line: 3377, column: 52, scope: !5589)
!5593 = !DILocation(line: 3377, column: 42, scope: !5589)
!5594 = !DILocation(line: 3378, column: 29, scope: !5589)
!5595 = !DILocation(line: 3378, column: 34, scope: !5589)
!5596 = !DILocation(line: 3378, column: 3, scope: !5589)
!5597 = !DILocation(line: 3379, column: 6, scope: !5590)
!5598 = !DILocation(line: 3380, column: 2, scope: !5590)
!5599 = !DILocation(line: 3382, column: 13, scope: !5585)
!5600 = !DILocation(line: 3382, column: 18, scope: !5585)
!5601 = !DILocation(line: 3382, column: 27, scope: !5585)
!5602 = !DILocation(line: 3388, column: 17, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 3388, column: 6)
!5604 = !DILocation(line: 3388, column: 24, scope: !5603)
!5605 = !DILocation(line: 3389, column: 9, scope: !5603)
!5606 = !DILocation(line: 3389, column: 12, scope: !5603)
!5607 = !DILocation(line: 3388, column: 6, scope: !5548)
!5608 = !DILocation(line: 3391, column: 7, scope: !5547)
!5609 = !DILocation(line: 3391, column: 6, scope: !5548)
!5610 = !DILocation(line: 3352, column: 14, scope: !5531)
!5611 = !DILocation(line: 3393, column: 6, scope: !5546)
!5612 = !DILocation(line: 3394, column: 10, scope: !5546)
!5613 = !DILocation(line: 3394, column: 21, scope: !5546)
!5614 = !{!2923, !2690, i64 8}
!5615 = !DILocation(line: 3395, column: 10, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3395, column: 10)
!5617 = !DILocation(line: 3396, column: 11, scope: !5616)
!5618 = !DILocation(line: 3395, column: 10, scope: !5546)
!5619 = !DILocation(line: 3397, column: 17, scope: !5545)
!5620 = !DILocation(line: 3397, column: 24, scope: !5545)
!5621 = !DILocation(line: 3397, column: 10, scope: !5546)
!5622 = !DILocation(line: 3398, column: 26, scope: !5545)
!5623 = !DILocation(line: 3398, column: 10, scope: !5545)
!5624 = !DILocation(line: 3398, column: 15, scope: !5545)
!5625 = !DILocation(line: 3398, column: 24, scope: !5545)
!5626 = !DILocation(line: 3398, column: 3, scope: !5545)
!5627 = !DILocation(line: 3400, column: 15, scope: !5544)
!5628 = !DILocation(line: 3400, column: 39, scope: !5544)
!5629 = !DILocation(line: 3400, column: 15, scope: !5545)
!5630 = !DILocation(line: 3404, column: 3, scope: !5543)
!5631 = !DILocation(line: 3402, column: 7, scope: !5543)
!5632 = !DILocation(line: 3405, column: 23, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 3405, column: 3)
!5634 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 3405, column: 3)
!5635 = !{!2923, !2690, i64 56}
!5636 = !DILocation(line: 3405, column: 17, scope: !5633)
!5637 = !DILocation(line: 3405, column: 3, scope: !5634)
!5638 = !DILocation(line: 3406, column: 38, scope: !5633)
!5639 = !DILocation(line: 3406, column: 50, scope: !5633)
!5640 = !{!2923, !2693, i64 64}
!5641 = !DILocation(line: 3406, column: 46, scope: !5633)
!5642 = !DILocation(line: 3406, column: 7, scope: !5633)
!5643 = !DILocation(line: 3405, column: 37, scope: !5633)
!5644 = distinct !{!5644, !5637, !5645}
!5645 = !DILocation(line: 3406, column: 65, scope: !5634)
!5646 = !DILocation(line: 3407, column: 3, scope: !5543)
!5647 = !DILocation(line: 3408, column: 6, scope: !5543)
!5648 = !DILocation(line: 3411, column: 13, scope: !5547)
!5649 = !DILocation(line: 3411, column: 18, scope: !5547)
!5650 = !DILocation(line: 3411, column: 27, scope: !5547)
!5651 = !DILocation(line: 3416, column: 1, scope: !5531)
!5652 = distinct !DISubprogram(name: "f_expandcmd", scope: !3, file: !3, line: 3423, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3424, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5653)
!5653 = !{!5654, !5655, !5656, !5725, !5726}
!5654 = !DILocalVariable(name: "argvars", arg: 1, scope: !5652, file: !3, line: 3423, type: !2305)
!5655 = !DILocalVariable(name: "rettv", arg: 2, scope: !5652, file: !3, line: 3423, type: !2305)
!5656 = !DILocalVariable(name: "eap", scope: !5652, file: !3, line: 3425, type: !5657)
!5657 = !DIDerivedType(tag: DW_TAG_typedef, name: "exarg_T", file: !89, line: 85, baseType: !5658)
!5658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exarg", file: !89, line: 1861, size: 1472, elements: !5659)
!5659 = !{!5660, !5661, !5662, !5663, !5664, !5665, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5691, !5692}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5658, file: !89, line: 1863, baseType: !759, size: 64)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "nextcmd", scope: !5658, file: !89, line: 1864, baseType: !759, size: 64, offset: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5658, file: !89, line: 1865, baseType: !759, size: 64, offset: 128)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "cmdlinep", scope: !5658, file: !89, line: 1866, baseType: !2469, size: 64, offset: 192)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "cmdline_tofree", scope: !5658, file: !89, line: 1868, baseType: !759, size: 64, offset: 256)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "cmdidx", scope: !5658, file: !89, line: 1870, baseType: !5666, size: 32, offset: 320)
!5666 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmdidx_T", file: !89, line: 1856, baseType: !88)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "argt", scope: !5658, file: !89, line: 1871, baseType: !765, size: 64, offset: 384)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5658, file: !89, line: 1872, baseType: !756, size: 32, offset: 448)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "forceit", scope: !5658, file: !89, line: 1873, baseType: !756, size: 32, offset: 480)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "addr_count", scope: !5658, file: !89, line: 1874, baseType: !756, size: 32, offset: 512)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "line1", scope: !5658, file: !89, line: 1875, baseType: !764, size: 64, offset: 576)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "line2", scope: !5658, file: !89, line: 1876, baseType: !764, size: 64, offset: 640)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "addr_type", scope: !5658, file: !89, line: 1877, baseType: !5674, size: 32, offset: 704)
!5674 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmd_addr_T", file: !89, line: 81, baseType: !670)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5658, file: !89, line: 1878, baseType: !756, size: 32, offset: 736)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "do_ecmd_cmd", scope: !5658, file: !89, line: 1879, baseType: !759, size: 64, offset: 768)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "do_ecmd_lnum", scope: !5658, file: !89, line: 1880, baseType: !764, size: 64, offset: 832)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "append", scope: !5658, file: !89, line: 1881, baseType: !756, size: 32, offset: 896)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "usefilter", scope: !5658, file: !89, line: 1882, baseType: !756, size: 32, offset: 928)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "amount", scope: !5658, file: !89, line: 1883, baseType: !756, size: 32, offset: 960)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "regname", scope: !5658, file: !89, line: 1884, baseType: !756, size: 32, offset: 992)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "force_bin", scope: !5658, file: !89, line: 1885, baseType: !756, size: 32, offset: 1024)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "read_edit", scope: !5658, file: !89, line: 1886, baseType: !756, size: 32, offset: 1056)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "force_ff", scope: !5658, file: !89, line: 1887, baseType: !756, size: 32, offset: 1088)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "force_enc", scope: !5658, file: !89, line: 1888, baseType: !756, size: 32, offset: 1120)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "bad_char", scope: !5658, file: !89, line: 1889, baseType: !756, size: 32, offset: 1152)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "useridx", scope: !5658, file: !89, line: 1890, baseType: !756, size: 32, offset: 1184)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "errmsg", scope: !5658, file: !89, line: 1891, baseType: !751, size: 64, offset: 1216)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "getline", scope: !5658, file: !89, line: 1892, baseType: !5690, size: 64, offset: 1280)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5658, file: !89, line: 1893, baseType: !750, size: 64, offset: 1344)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "cstack", scope: !5658, file: !89, line: 1895, baseType: !5693, size: 64, offset: 1408)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DIDerivedType(tag: DW_TAG_typedef, name: "cstack_T", file: !6, line: 921, baseType: !5695)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 904, size: 12672, elements: !5696)
!5696 = !{!5697, !5701, !5703, !5709, !5710, !5712, !5713, !5714, !5715, !5716, !5717, !5724}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "cs_flags", scope: !5695, file: !6, line: 905, baseType: !5698, size: 800)
!5698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 800, elements: !5699)
!5699 = !{!5700}
!5700 = !DISubrange(count: 50)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "cs_pending", scope: !5695, file: !6, line: 906, baseType: !5702, size: 400, offset: 800)
!5702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 400, elements: !5699)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "cs_pend", scope: !5695, file: !6, line: 910, baseType: !5704, size: 3200, offset: 1216)
!5704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5695, file: !6, line: 907, size: 3200, elements: !5705)
!5705 = !{!5706, !5708}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "csp_rv", scope: !5704, file: !6, line: 908, baseType: !5707, size: 3200)
!5707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 3200, elements: !5699)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "csp_ex", scope: !5704, file: !6, line: 909, baseType: !5707, size: 3200)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "cs_forinfo", scope: !5695, file: !6, line: 911, baseType: !5707, size: 3200, offset: 4416)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "cs_line", scope: !5695, file: !6, line: 912, baseType: !5711, size: 1600, offset: 7616)
!5711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 1600, elements: !5699)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "cs_block_id", scope: !5695, file: !6, line: 913, baseType: !5711, size: 1600, offset: 9216)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "cs_script_var_len", scope: !5695, file: !6, line: 914, baseType: !5711, size: 1600, offset: 10816)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "cs_idx", scope: !5695, file: !6, line: 916, baseType: !756, size: 32, offset: 12416)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "cs_looplevel", scope: !5695, file: !6, line: 917, baseType: !756, size: 32, offset: 12448)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "cs_trylevel", scope: !5695, file: !6, line: 918, baseType: !756, size: 32, offset: 12480)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "cs_emsg_silent_list", scope: !5695, file: !6, line: 919, baseType: !5718, size: 64, offset: 12544)
!5718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5719, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_typedef, name: "eslist_T", file: !6, line: 891, baseType: !5720)
!5720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eslist_elem", file: !6, line: 892, size: 128, elements: !5721)
!5721 = !{!5722, !5723}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "saved_emsg_silent", scope: !5720, file: !6, line: 894, baseType: !756, size: 32)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5720, file: !6, line: 895, baseType: !5718, size: 64, offset: 64)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "cs_lflags", scope: !5695, file: !6, line: 920, baseType: !752, size: 8, offset: 12608)
!5725 = !DILocalVariable(name: "cmdstr", scope: !5652, file: !3, line: 3426, type: !759)
!5726 = !DILocalVariable(name: "errormsg", scope: !5652, file: !3, line: 3427, type: !751)
!5727 = !DILocation(line: 3423, column: 23, scope: !5652)
!5728 = !DILocation(line: 3423, column: 42, scope: !5652)
!5729 = !DILocation(line: 3425, column: 5, scope: !5652)
!5730 = !DILocation(line: 3426, column: 5, scope: !5652)
!5731 = !DILocation(line: 3427, column: 5, scope: !5652)
!5732 = !DILocation(line: 3427, column: 11, scope: !5652)
!5733 = !DILocation(line: 3429, column: 12, scope: !5652)
!5734 = !DILocation(line: 3429, column: 19, scope: !5652)
!5735 = !DILocation(line: 3430, column: 26, scope: !5652)
!5736 = !DILocation(line: 3430, column: 14, scope: !5652)
!5737 = !DILocation(line: 3426, column: 13, scope: !5652)
!5738 = !DILocation(line: 3430, column: 12, scope: !5652)
!5739 = !DILocation(line: 3432, column: 5, scope: !5652)
!5740 = !DILocation(line: 3433, column: 15, scope: !5652)
!5741 = !DILocation(line: 3433, column: 9, scope: !5652)
!5742 = !DILocation(line: 3433, column: 13, scope: !5652)
!5743 = !{!5744, !2693, i64 16}
!5744 = !{!"exarg", !2693, i64 0, !2693, i64 8, !2693, i64 16, !2693, i64 24, !2693, i64 32, !2691, i64 40, !2925, i64 48, !2690, i64 56, !2690, i64 60, !2690, i64 64, !2925, i64 72, !2925, i64 80, !2691, i64 88, !2690, i64 92, !2693, i64 96, !2925, i64 104, !2690, i64 112, !2690, i64 116, !2690, i64 120, !2690, i64 124, !2690, i64 128, !2690, i64 132, !2690, i64 136, !2690, i64 140, !2690, i64 144, !2690, i64 148, !2693, i64 152, !2693, i64 160, !2693, i64 168, !2693, i64 176}
!5745 = !DILocation(line: 3434, column: 15, scope: !5652)
!5746 = !DILocation(line: 3434, column: 13, scope: !5652)
!5747 = !{!5744, !2693, i64 0}
!5748 = !DILocation(line: 3435, column: 9, scope: !5652)
!5749 = !DILocation(line: 3435, column: 14, scope: !5652)
!5750 = !{!5744, !2925, i64 48}
!5751 = !DILocation(line: 3436, column: 9, scope: !5652)
!5752 = !DILocation(line: 3436, column: 19, scope: !5652)
!5753 = !{!5744, !2690, i64 116}
!5754 = !DILocation(line: 3437, column: 9, scope: !5652)
!5755 = !DILocation(line: 3437, column: 17, scope: !5652)
!5756 = !{!5744, !2693, i64 8}
!5757 = !DILocation(line: 3438, column: 9, scope: !5652)
!5758 = !DILocation(line: 3438, column: 16, scope: !5652)
!5759 = !{!5744, !2691, i64 40}
!5760 = !DILocation(line: 3425, column: 13, scope: !5652)
!5761 = !DILocation(line: 3440, column: 5, scope: !5652)
!5762 = !DILocation(line: 3441, column: 9, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 3441, column: 9)
!5764 = !DILocation(line: 3441, column: 18, scope: !5763)
!5765 = !DILocation(line: 3441, column: 26, scope: !5763)
!5766 = !DILocation(line: 3441, column: 29, scope: !5763)
!5767 = !DILocation(line: 3441, column: 39, scope: !5763)
!5768 = !DILocation(line: 3441, column: 9, scope: !5652)
!5769 = !DILocation(line: 3442, column: 2, scope: !5763)
!5770 = !DILocation(line: 3444, column: 28, scope: !5652)
!5771 = !DILocation(line: 3444, column: 26, scope: !5652)
!5772 = !DILocation(line: 3445, column: 1, scope: !5652)
!5773 = distinct !DISubprogram(name: "ret_first_cont", scope: !3, file: !3, line: 557, type: !2579, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5774)
!5774 = !{!5775, !5776}
!5775 = !DILocalVariable(name: "argcount", arg: 1, scope: !5773, file: !3, line: 557, type: !756)
!5776 = !DILocalVariable(name: "argtypes", arg: 2, scope: !5773, file: !3, line: 557, type: !797)
!5777 = !DILocation(line: 557, column: 20, scope: !5773)
!5778 = !DILocation(line: 557, column: 46, scope: !5773)
!5779 = !DILocation(line: 559, column: 9, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 559, column: 9)
!5781 = !DILocation(line: 559, column: 22, scope: !5780)
!5782 = !DILocation(line: 559, column: 9, scope: !5773)
!5783 = !DILocation(line: 562, column: 2, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 561, column: 9)
!5785 = !DILocation(line: 564, column: 2, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 563, column: 9)
!5787 = !DILocation(line: 565, column: 5, scope: !5773)
!5788 = !DILocation(line: 566, column: 1, scope: !5773)
!5789 = distinct !DISubprogram(name: "f_feedkeys", scope: !3, file: !3, line: 3451, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3452, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5790)
!5790 = !{!5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5810, !5811}
!5791 = !DILocalVariable(name: "argvars", arg: 1, scope: !5789, file: !3, line: 3451, type: !2305)
!5792 = !DILocalVariable(name: "rettv", arg: 2, scope: !5789, file: !3, line: 3451, type: !2305)
!5793 = !DILocalVariable(name: "remap", scope: !5789, file: !3, line: 3453, type: !756)
!5794 = !DILocalVariable(name: "insert", scope: !5789, file: !3, line: 3454, type: !756)
!5795 = !DILocalVariable(name: "keys", scope: !5789, file: !3, line: 3455, type: !759)
!5796 = !DILocalVariable(name: "flags", scope: !5789, file: !3, line: 3455, type: !759)
!5797 = !DILocalVariable(name: "nbuf", scope: !5789, file: !3, line: 3456, type: !3499)
!5798 = !DILocalVariable(name: "typed", scope: !5789, file: !3, line: 3457, type: !756)
!5799 = !DILocalVariable(name: "execute", scope: !5789, file: !3, line: 3458, type: !756)
!5800 = !DILocalVariable(name: "dangerous", scope: !5789, file: !3, line: 3459, type: !756)
!5801 = !DILocalVariable(name: "lowlevel", scope: !5789, file: !3, line: 3460, type: !756)
!5802 = !DILocalVariable(name: "keys_esc", scope: !5789, file: !3, line: 3461, type: !759)
!5803 = !DILocalVariable(name: "idx", scope: !5804, file: !3, line: 3499, type: !756)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3497, column: 6)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3496, column: 10)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 3495, column: 2)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 3494, column: 6)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 3490, column: 5)
!5809 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 3489, column: 9)
!5810 = !DILocalVariable(name: "len", scope: !5804, file: !3, line: 3500, type: !756)
!5811 = !DILocalVariable(name: "save_msg_scroll", scope: !5812, file: !3, line: 3529, type: !756)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 3528, column: 6)
!5813 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3527, column: 10)
!5814 = !DILocation(line: 3451, column: 22, scope: !5789)
!5815 = !DILocation(line: 3451, column: 41, scope: !5789)
!5816 = !DILocation(line: 3453, column: 10, scope: !5789)
!5817 = !DILocation(line: 3454, column: 10, scope: !5789)
!5818 = !DILocation(line: 3456, column: 5, scope: !5789)
!5819 = !DILocation(line: 3456, column: 12, scope: !5789)
!5820 = !DILocation(line: 3457, column: 10, scope: !5789)
!5821 = !DILocation(line: 3458, column: 10, scope: !5789)
!5822 = !DILocation(line: 3459, column: 10, scope: !5789)
!5823 = !DILocation(line: 3460, column: 10, scope: !5789)
!5824 = !DILocation(line: 3466, column: 9, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 3466, column: 9)
!5826 = !DILocation(line: 3466, column: 9, scope: !5789)
!5827 = !DILocation(line: 3469, column: 12, scope: !5789)
!5828 = !DILocation(line: 3455, column: 13, scope: !5789)
!5829 = !DILocation(line: 3471, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 3471, column: 9)
!5831 = !DILocation(line: 3471, column: 20, scope: !5830)
!5832 = !DILocation(line: 3471, column: 27, scope: !5830)
!5833 = !DILocation(line: 3471, column: 9, scope: !5789)
!5834 = !DILocation(line: 3473, column: 10, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 3472, column: 5)
!5836 = !DILocation(line: 3455, column: 20, scope: !5789)
!5837 = !DILocation(line: 3474, column: 2, scope: !5835)
!5838 = !DILocation(line: 3474, column: 10, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3474, column: 2)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 3474, column: 2)
!5841 = !DILocation(line: 3474, column: 2, scope: !5840)
!5842 = !DILocation(line: 3478, column: 28, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 3477, column: 6)
!5844 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 3475, column: 2)
!5845 = !DILocation(line: 3479, column: 27, scope: !5843)
!5846 = !DILocation(line: 3480, column: 27, scope: !5843)
!5847 = !DILocation(line: 3481, column: 28, scope: !5843)
!5848 = !DILocation(line: 3482, column: 29, scope: !5843)
!5849 = !DILocation(line: 3483, column: 31, scope: !5843)
!5850 = !DILocation(line: 3484, column: 30, scope: !5843)
!5851 = !DILocation(line: 3474, column: 25, scope: !5839)
!5852 = !DILocation(line: 3474, column: 2, scope: !5839)
!5853 = distinct !{!5853, !5841, !5854}
!5854 = !DILocation(line: 3486, column: 2, scope: !5840)
!5855 = !DILocation(line: 3489, column: 9, scope: !5809)
!5856 = !DILocation(line: 3489, column: 15, scope: !5809)
!5857 = !DILocation(line: 3489, column: 25, scope: !5809)
!5858 = !DILocation(line: 3489, column: 22, scope: !5809)
!5859 = !DILocation(line: 3493, column: 13, scope: !5808)
!5860 = !DILocation(line: 3461, column: 13, scope: !5789)
!5861 = !DILocation(line: 3494, column: 15, scope: !5807)
!5862 = !DILocation(line: 3494, column: 6, scope: !5808)
!5863 = !DILocation(line: 3496, column: 10, scope: !5805)
!5864 = !DILocation(line: 3496, column: 10, scope: !5806)
!5865 = !DILocation(line: 3500, column: 18, scope: !5804)
!5866 = !DILocation(line: 3500, column: 13, scope: !5804)
!5867 = !DILocation(line: 3500, column: 7, scope: !5804)
!5868 = !DILocation(line: 3499, column: 7, scope: !5804)
!5869 = !DILocation(line: 3502, column: 21, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 3502, column: 3)
!5871 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 3502, column: 3)
!5872 = !DILocation(line: 3502, column: 3, scope: !5871)
!5873 = !DILocation(line: 3506, column: 11, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 3506, column: 11)
!5875 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 3503, column: 3)
!5876 = !DILocation(line: 3506, column: 21, scope: !5874)
!5877 = !DILocation(line: 3506, column: 29, scope: !5874)
!5878 = !DILocation(line: 3506, column: 26, scope: !5874)
!5879 = !DILocation(line: 3507, column: 12, scope: !5874)
!5880 = !DILocation(line: 3507, column: 4, scope: !5874)
!5881 = !DILocation(line: 3508, column: 7, scope: !5875)
!5882 = !DILocation(line: 3502, column: 28, scope: !5870)
!5883 = distinct !{!5883, !5872, !5884}
!5884 = !DILocation(line: 3509, column: 3, scope: !5871)
!5885 = !DILocation(line: 3516, column: 26, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3515, column: 6)
!5887 = !DILocation(line: 3517, column: 7, scope: !5886)
!5888 = !DILocation(line: 3517, column: 28, scope: !5886)
!5889 = !DILocation(line: 3517, column: 36, scope: !5886)
!5890 = !DILocation(line: 3516, column: 3, scope: !5886)
!5891 = !DILocation(line: 3518, column: 7, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 3518, column: 7)
!5893 = !DILocation(line: 3520, column: 7, scope: !5892)
!5894 = !DILocation(line: 3520, column: 4, scope: !5892)
!5895 = !DILocation(line: 3522, column: 7, scope: !5892)
!5896 = !DILocation(line: 3523, column: 26, scope: !5892)
!5897 = !DILocation(line: 3523, column: 7, scope: !5892)
!5898 = !DILocation(line: 3525, column: 6, scope: !5806)
!5899 = !DILocation(line: 3527, column: 10, scope: !5806)
!5900 = !DILocation(line: 3529, column: 25, scope: !5812)
!5901 = !DILocation(line: 3529, column: 7, scope: !5812)
!5902 = !DILocation(line: 3532, column: 14, scope: !5812)
!5903 = !DILocation(line: 3534, column: 8, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 3534, column: 7)
!5905 = !DILocation(line: 3534, column: 7, scope: !5812)
!5906 = !DILocation(line: 3536, column: 7, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 3535, column: 3)
!5908 = !DILocation(line: 3537, column: 7, scope: !5907)
!5909 = !DILocation(line: 3539, column: 3, scope: !5812)
!5910 = !DILocation(line: 3542, column: 7, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3541, column: 3)
!5912 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 3540, column: 7)
!5913 = !DILocation(line: 3543, column: 7, scope: !5911)
!5914 = !DILocation(line: 3544, column: 3, scope: !5911)
!5915 = !DILocation(line: 3546, column: 14, scope: !5812)
!5916 = !DILocation(line: 3547, column: 6, scope: !5812)
!5917 = !DILocation(line: 3550, column: 1, scope: !5789)
!5918 = distinct !DISubprogram(name: "ret_list_any", scope: !3, file: !3, line: 487, type: !2579, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5919)
!5919 = !{!5920, !5921}
!5920 = !DILocalVariable(name: "argcount", arg: 1, scope: !5918, file: !3, line: 487, type: !756)
!5921 = !DILocalVariable(name: "argtypes", arg: 2, scope: !5918, file: !3, line: 487, type: !797)
!5922 = !DILocation(line: 487, column: 18, scope: !5918)
!5923 = !DILocation(line: 487, column: 44, scope: !5918)
!5924 = !DILocation(line: 489, column: 5, scope: !5918)
!5925 = distinct !DISubprogram(name: "f_float2nr", scope: !3, file: !3, line: 3557, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3558, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5926)
!5926 = !{!5927, !5928, !5929}
!5927 = !DILocalVariable(name: "argvars", arg: 1, scope: !5925, file: !3, line: 3557, type: !2305)
!5928 = !DILocalVariable(name: "rettv", arg: 2, scope: !5925, file: !3, line: 3557, type: !2305)
!5929 = !DILocalVariable(name: "f", scope: !5925, file: !3, line: 3559, type: !762)
!5930 = !DILocation(line: 3557, column: 22, scope: !5925)
!5931 = !DILocation(line: 3557, column: 41, scope: !5925)
!5932 = !DILocation(line: 3559, column: 13, scope: !5925)
!5933 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !5934)
!5934 = distinct !DILocation(line: 3561, column: 9, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3561, column: 9)
!5936 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !5934)
!5937 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !5934)
!5938 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !5934)
!5939 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !5934)
!5940 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !5934)
!5941 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !5934)
!5942 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !5934)
!5943 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !5934)
!5944 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !5934)
!5945 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !5934)
!5946 = !DILocation(line: 3561, column: 9, scope: !5925)
!5947 = !DILocation(line: 3563, column: 8, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 3563, column: 6)
!5949 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 3562, column: 5)
!5950 = !DILocation(line: 3563, column: 6, scope: !5949)
!5951 = !DILocation(line: 3564, column: 18, scope: !5948)
!5952 = !DILocation(line: 3564, column: 27, scope: !5948)
!5953 = !DILocation(line: 3564, column: 6, scope: !5948)
!5954 = !DILocation(line: 3565, column: 13, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 3565, column: 11)
!5956 = !DILocation(line: 3565, column: 11, scope: !5948)
!5957 = !DILocation(line: 3566, column: 18, scope: !5955)
!5958 = !DILocation(line: 3566, column: 27, scope: !5955)
!5959 = !DILocation(line: 3566, column: 6, scope: !5955)
!5960 = !DILocation(line: 3568, column: 29, scope: !5955)
!5961 = !DILocation(line: 3568, column: 18, scope: !5955)
!5962 = !DILocation(line: 3568, column: 27, scope: !5955)
!5963 = !DILocation(line: 3570, column: 1, scope: !5925)
!5964 = distinct !DISubprogram(name: "f_floor", scope: !3, file: !3, line: 3576, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3577, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5965)
!5965 = !{!5966, !5967, !5968}
!5966 = !DILocalVariable(name: "argvars", arg: 1, scope: !5964, file: !3, line: 3576, type: !2305)
!5967 = !DILocalVariable(name: "rettv", arg: 2, scope: !5964, file: !3, line: 3576, type: !2305)
!5968 = !DILocalVariable(name: "f", scope: !5964, file: !3, line: 3578, type: !762)
!5969 = !DILocation(line: 3576, column: 19, scope: !5964)
!5970 = !DILocation(line: 3576, column: 38, scope: !5964)
!5971 = !DILocation(line: 3578, column: 13, scope: !5964)
!5972 = !DILocation(line: 3580, column: 12, scope: !5964)
!5973 = !DILocation(line: 3580, column: 19, scope: !5964)
!5974 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !5975)
!5975 = distinct !DILocation(line: 3581, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 3581, column: 9)
!5977 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !5975)
!5978 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !5975)
!5979 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !5975)
!5980 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !5975)
!5981 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !5975)
!5982 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !5975)
!5983 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !5975)
!5984 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !5975)
!5985 = !DILocation(line: 3582, column: 24, scope: !5976)
!5986 = !DILocation(line: 3582, column: 2, scope: !5976)
!5987 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !5975)
!5988 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !5975)
!5989 = !DILocation(line: 3585, column: 1, scope: !5964)
!5990 = distinct !DISubprogram(name: "f_fmod", scope: !3, file: !3, line: 3591, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3592, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5991)
!5991 = !{!5992, !5993, !5994, !5995}
!5992 = !DILocalVariable(name: "argvars", arg: 1, scope: !5990, file: !3, line: 3591, type: !2305)
!5993 = !DILocalVariable(name: "rettv", arg: 2, scope: !5990, file: !3, line: 3591, type: !2305)
!5994 = !DILocalVariable(name: "fx", scope: !5990, file: !3, line: 3593, type: !762)
!5995 = !DILocalVariable(name: "fy", scope: !5990, file: !3, line: 3593, type: !762)
!5996 = !DILocation(line: 3591, column: 18, scope: !5990)
!5997 = !DILocation(line: 3591, column: 37, scope: !5990)
!5998 = !DILocation(line: 3593, column: 13, scope: !5990)
!5999 = !DILocation(line: 3593, column: 23, scope: !5990)
!6000 = !DILocation(line: 3595, column: 12, scope: !5990)
!6001 = !DILocation(line: 3595, column: 19, scope: !5990)
!6002 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !6003)
!6003 = distinct !DILocation(line: 3596, column: 9, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 3596, column: 9)
!6005 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !6003)
!6006 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !6003)
!6007 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !6003)
!6008 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !6003)
!6009 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !6003)
!6010 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !6003)
!6011 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !6003)
!6012 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !6003)
!6013 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !6003)
!6014 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !6003)
!6015 = !DILocation(line: 3597, column: 10, scope: !6004)
!6016 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !6017)
!6017 = distinct !DILocation(line: 3597, column: 13, scope: !6004)
!6018 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !6017)
!6019 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !6017)
!6020 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !6017)
!6021 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !6017)
!6022 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !6017)
!6023 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !6017)
!6024 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !6017)
!6025 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !6017)
!6026 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !6017)
!6027 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !6017)
!6028 = !DILocation(line: 3596, column: 9, scope: !5990)
!6029 = !DILocation(line: 3598, column: 24, scope: !6004)
!6030 = !DILocation(line: 3598, column: 2, scope: !6004)
!6031 = !DILocation(line: 3601, column: 1, scope: !5990)
!6032 = distinct !DISubprogram(name: "f_fnameescape", scope: !3, file: !3, line: 3608, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3609, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6033)
!6033 = !{!6034, !6035}
!6034 = !DILocalVariable(name: "argvars", arg: 1, scope: !6032, file: !3, line: 3608, type: !2305)
!6035 = !DILocalVariable(name: "rettv", arg: 2, scope: !6032, file: !3, line: 3608, type: !2305)
!6036 = !DILocation(line: 3608, column: 25, scope: !6032)
!6037 = !DILocation(line: 3608, column: 44, scope: !6032)
!6038 = !DILocation(line: 3611, column: 9, scope: !6032)
!6039 = !DILocation(line: 3610, column: 28, scope: !6032)
!6040 = !DILocation(line: 3610, column: 12, scope: !6032)
!6041 = !DILocation(line: 3610, column: 17, scope: !6032)
!6042 = !DILocation(line: 3610, column: 26, scope: !6032)
!6043 = !DILocation(line: 3612, column: 12, scope: !6032)
!6044 = !DILocation(line: 3612, column: 19, scope: !6032)
!6045 = !DILocation(line: 3613, column: 1, scope: !6032)
!6046 = distinct !DISubprogram(name: "f_foreground", scope: !3, file: !3, line: 3619, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3620, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6047)
!6047 = !{!6048, !6049}
!6048 = !DILocalVariable(name: "argvars", arg: 1, scope: !6046, file: !3, line: 3619, type: !2305)
!6049 = !DILocalVariable(name: "rettv", arg: 2, scope: !6046, file: !3, line: 3619, type: !2305)
!6050 = !DILocation(line: 3619, column: 24, scope: !6046)
!6051 = !DILocation(line: 3619, column: 50, scope: !6046)
!6052 = !DILocation(line: 3622, column: 13, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 3622, column: 9)
!6054 = !DILocation(line: 3622, column: 9, scope: !6053)
!6055 = !DILocation(line: 3622, column: 9, scope: !6046)
!6056 = !DILocation(line: 3624, column: 2, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3623, column: 5)
!6058 = !DILocation(line: 3625, column: 2, scope: !6057)
!6059 = !DILocation(line: 3631, column: 1, scope: !6046)
!6060 = distinct !DISubprogram(name: "ret_func_any", scope: !3, file: !3, line: 534, type: !2579, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6061)
!6061 = !{!6062, !6063}
!6062 = !DILocalVariable(name: "argcount", arg: 1, scope: !6060, file: !3, line: 534, type: !756)
!6063 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6060, file: !3, line: 534, type: !797)
!6064 = !DILocation(line: 534, column: 18, scope: !6060)
!6065 = !DILocation(line: 534, column: 44, scope: !6060)
!6066 = !DILocation(line: 536, column: 5, scope: !6060)
!6067 = distinct !DISubprogram(name: "f_funcref", scope: !3, file: !3, line: 3844, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3845, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6068)
!6068 = !{!6069, !6070}
!6069 = !DILocalVariable(name: "argvars", arg: 1, scope: !6067, file: !3, line: 3844, type: !2305)
!6070 = !DILocalVariable(name: "rettv", arg: 2, scope: !6067, file: !3, line: 3844, type: !2305)
!6071 = !DILocation(line: 3844, column: 21, scope: !6067)
!6072 = !DILocation(line: 3844, column: 40, scope: !6067)
!6073 = !DILocation(line: 3846, column: 5, scope: !6067)
!6074 = !DILocation(line: 3847, column: 1, scope: !6067)
!6075 = distinct !DISubprogram(name: "ret_f_function", scope: !3, file: !3, line: 3850, type: !2579, isLocal: true, isDefinition: true, scopeLine: 3851, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6076)
!6076 = !{!6077, !6078}
!6077 = !DILocalVariable(name: "argcount", arg: 1, scope: !6075, file: !3, line: 3850, type: !756)
!6078 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6075, file: !3, line: 3850, type: !797)
!6079 = !DILocation(line: 3850, column: 20, scope: !6075)
!6080 = !DILocation(line: 3850, column: 39, scope: !6075)
!6081 = !DILocation(line: 3852, column: 18, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 3852, column: 9)
!6083 = !DILocation(line: 3852, column: 23, scope: !6082)
!6084 = !DILocation(line: 3852, column: 26, scope: !6082)
!6085 = !DILocation(line: 3852, column: 39, scope: !6082)
!6086 = !DILocation(line: 3852, column: 47, scope: !6082)
!6087 = !DILocation(line: 3852, column: 9, scope: !6075)
!6088 = !DILocation(line: 3854, column: 5, scope: !6075)
!6089 = !DILocation(line: 3855, column: 1, scope: !6075)
!6090 = distinct !DISubprogram(name: "f_function", scope: !3, file: !3, line: 3861, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3862, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6091)
!6091 = !{!6092, !6093}
!6092 = !DILocalVariable(name: "argvars", arg: 1, scope: !6090, file: !3, line: 3861, type: !2305)
!6093 = !DILocalVariable(name: "rettv", arg: 2, scope: !6090, file: !3, line: 3861, type: !2305)
!6094 = !DILocation(line: 3861, column: 22, scope: !6090)
!6095 = !DILocation(line: 3861, column: 41, scope: !6090)
!6096 = !DILocation(line: 3863, column: 5, scope: !6090)
!6097 = !DILocation(line: 3864, column: 1, scope: !6090)
!6098 = distinct !DISubprogram(name: "f_garbagecollect", scope: !3, file: !3, line: 3870, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3871, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6099)
!6099 = !{!6100, !6101}
!6100 = !DILocalVariable(name: "argvars", arg: 1, scope: !6098, file: !3, line: 3870, type: !2305)
!6101 = !DILocalVariable(name: "rettv", arg: 2, scope: !6098, file: !3, line: 3870, type: !2305)
!6102 = !DILocation(line: 3870, column: 28, scope: !6098)
!6103 = !DILocation(line: 3870, column: 47, scope: !6098)
!6104 = !DILocation(line: 3874, column: 26, scope: !6098)
!6105 = !DILocation(line: 3876, column: 20, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 3876, column: 9)
!6107 = !DILocation(line: 3876, column: 27, scope: !6106)
!6108 = !DILocation(line: 3876, column: 42, scope: !6106)
!6109 = !DILocation(line: 3876, column: 45, scope: !6106)
!6110 = !DILocation(line: 3876, column: 70, scope: !6106)
!6111 = !DILocation(line: 3876, column: 9, scope: !6098)
!6112 = !DILocation(line: 3877, column: 26, scope: !6106)
!6113 = !DILocation(line: 3877, column: 2, scope: !6106)
!6114 = !DILocation(line: 3878, column: 1, scope: !6098)
!6115 = distinct !DISubprogram(name: "f_get", scope: !3, file: !3, line: 3884, type: !2538, isLocal: true, isDefinition: true, scopeLine: 3885, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6116)
!6116 = !{!6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6128, !6129, !6134, !6138, !6139, !6142, !6143}
!6117 = !DILocalVariable(name: "argvars", arg: 1, scope: !6115, file: !3, line: 3884, type: !2305)
!6118 = !DILocalVariable(name: "rettv", arg: 2, scope: !6115, file: !3, line: 3884, type: !2305)
!6119 = !DILocalVariable(name: "li", scope: !6115, file: !3, line: 3886, type: !890)
!6120 = !DILocalVariable(name: "l", scope: !6115, file: !3, line: 3887, type: !885)
!6121 = !DILocalVariable(name: "di", scope: !6115, file: !3, line: 3888, type: !2464)
!6122 = !DILocalVariable(name: "d", scope: !6115, file: !3, line: 3889, type: !929)
!6123 = !DILocalVariable(name: "tv", scope: !6115, file: !3, line: 3890, type: !2305)
!6124 = !DILocalVariable(name: "what_is_dict", scope: !6115, file: !3, line: 3891, type: !756)
!6125 = !DILocalVariable(name: "error", scope: !6126, file: !3, line: 3895, type: !756)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 3894, column: 5)
!6127 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 3893, column: 9)
!6128 = !DILocalVariable(name: "idx", scope: !6126, file: !3, line: 3896, type: !756)
!6129 = !DILocalVariable(name: "error", scope: !6130, file: !3, line: 3916, type: !756)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 3915, column: 2)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3914, column: 6)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 3913, column: 5)
!6133 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 3912, column: 14)
!6134 = !DILocalVariable(name: "pt", scope: !6135, file: !3, line: 3934, type: !768)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 3933, column: 5)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 3932, column: 14)
!6137 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 3923, column: 14)
!6138 = !DILocalVariable(name: "fref_pt", scope: !6135, file: !3, line: 3935, type: !769)
!6139 = !DILocalVariable(name: "what", scope: !6140, file: !3, line: 3948, type: !759)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 3947, column: 2)
!6141 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 3946, column: 6)
!6142 = !DILocalVariable(name: "n", scope: !6140, file: !3, line: 3949, type: !759)
!6143 = !DILocalVariable(name: "i", scope: !6144, file: !3, line: 3975, type: !756)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 3974, column: 3)
!6145 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 3973, column: 7)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 3971, column: 6)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 3970, column: 15)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 3964, column: 15)
!6149 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 3951, column: 10)
!6150 = !DILocation(line: 3884, column: 17, scope: !6115)
!6151 = !DILocation(line: 3884, column: 36, scope: !6115)
!6152 = !DILocation(line: 3890, column: 15, scope: !6115)
!6153 = !DILocation(line: 3891, column: 10, scope: !6115)
!6154 = !DILocation(line: 3893, column: 20, scope: !6127)
!6155 = !DILocation(line: 3893, column: 9, scope: !6115)
!6156 = !DILocation(line: 3895, column: 2, scope: !6126)
!6157 = !DILocation(line: 3895, column: 6, scope: !6126)
!6158 = !DILocation(line: 3896, column: 31, scope: !6126)
!6159 = !DILocation(line: 3896, column: 12, scope: !6126)
!6160 = !DILocation(line: 3896, column: 6, scope: !6126)
!6161 = !DILocation(line: 3898, column: 7, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 3898, column: 6)
!6163 = !DILocation(line: 3898, column: 6, scope: !6126)
!6164 = !DILocation(line: 3900, column: 13, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 3899, column: 2)
!6166 = !DILocation(line: 3900, column: 20, scope: !6165)
!6167 = !DILocation(line: 3901, column: 14, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 3901, column: 10)
!6169 = !DILocation(line: 3901, column: 10, scope: !6165)
!6170 = !DILocation(line: 3902, column: 34, scope: !6168)
!6171 = !DILocation(line: 3902, column: 9, scope: !6168)
!6172 = !DILocation(line: 3902, column: 42, scope: !6168)
!6173 = !DILocation(line: 3903, column: 14, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 3903, column: 10)
!6175 = !DILocation(line: 3903, column: 18, scope: !6174)
!6176 = !DILocation(line: 3903, column: 21, scope: !6174)
!6177 = !DILocation(line: 3903, column: 53, scope: !6174)
!6178 = !DILocation(line: 3903, column: 28, scope: !6174)
!6179 = !DILocation(line: 3903, column: 25, scope: !6174)
!6180 = !DILocation(line: 3903, column: 10, scope: !6165)
!6181 = !DILocation(line: 3907, column: 51, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 3906, column: 6)
!6183 = !DILocation(line: 3907, column: 26, scope: !6182)
!6184 = !DILocation(line: 3911, column: 5, scope: !6127)
!6185 = !DILocation(line: 3911, column: 5, scope: !6126)
!6186 = !DILocation(line: 3914, column: 22, scope: !6131)
!6187 = !DILocation(line: 3914, column: 27, scope: !6131)
!6188 = !DILocation(line: 3887, column: 13, scope: !6115)
!6189 = !DILocation(line: 3914, column: 35, scope: !6131)
!6190 = !DILocation(line: 3914, column: 6, scope: !6132)
!6191 = !DILocation(line: 3916, column: 6, scope: !6130)
!6192 = !DILocation(line: 3916, column: 11, scope: !6130)
!6193 = !DILocation(line: 3918, column: 49, scope: !6130)
!6194 = !DILocation(line: 3918, column: 30, scope: !6130)
!6195 = !DILocation(line: 3918, column: 11, scope: !6130)
!6196 = !DILocation(line: 3886, column: 17, scope: !6115)
!6197 = !DILocation(line: 3919, column: 11, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 3919, column: 10)
!6199 = !DILocation(line: 3919, column: 23, scope: !6198)
!6200 = !DILocation(line: 3919, column: 17, scope: !6198)
!6201 = !DILocation(line: 3920, column: 13, scope: !6198)
!6202 = !DILocation(line: 3921, column: 2, scope: !6131)
!6203 = !DILocation(line: 3925, column: 22, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 3925, column: 6)
!6205 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 3924, column: 5)
!6206 = !DILocation(line: 3925, column: 27, scope: !6204)
!6207 = !DILocation(line: 3889, column: 13, scope: !6115)
!6208 = !DILocation(line: 3925, column: 35, scope: !6204)
!6209 = !DILocation(line: 3925, column: 6, scope: !6205)
!6210 = !DILocation(line: 3927, column: 39, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3926, column: 2)
!6212 = !DILocation(line: 3927, column: 24, scope: !6211)
!6213 = !DILocation(line: 3927, column: 11, scope: !6211)
!6214 = !DILocation(line: 3888, column: 17, scope: !6115)
!6215 = !DILocation(line: 3929, column: 13, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 3928, column: 10)
!6217 = !DILocation(line: 3928, column: 10, scope: !6211)
!6218 = !DILocation(line: 3935, column: 2, scope: !6135)
!6219 = !DILocation(line: 3937, column: 24, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 3937, column: 6)
!6221 = !DILocation(line: 3937, column: 6, scope: !6135)
!6222 = !DILocation(line: 3941, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3940, column: 2)
!6224 = !DILocation(line: 3942, column: 40, scope: !6223)
!6225 = !DILocation(line: 3942, column: 14, scope: !6223)
!6226 = !DILocation(line: 3942, column: 22, scope: !6223)
!6227 = !{!6228, !2693, i64 8}
!6228 = !{!"partial_S", !2690, i64 0, !2693, i64 8, !2693, i64 16, !2690, i64 24, !6229, i64 32, !2693, i64 64, !2690, i64 72, !2693, i64 80, !2693, i64 88, !2690, i64 96}
!6229 = !{!"outer_S", !2693, i64 0, !2690, i64 8, !2693, i64 16, !2690, i64 24}
!6230 = !DILocation(line: 3934, column: 13, scope: !6135)
!6231 = !DILocation(line: 3946, column: 6, scope: !6135)
!6232 = !DILocation(line: 3938, column: 22, scope: !6220)
!6233 = !DILocation(line: 3938, column: 27, scope: !6220)
!6234 = !DILocation(line: 3946, column: 9, scope: !6141)
!6235 = !DILocation(line: 3948, column: 36, scope: !6140)
!6236 = !DILocation(line: 3948, column: 21, scope: !6140)
!6237 = !DILocation(line: 3948, column: 14, scope: !6140)
!6238 = !DILocation(line: 3951, column: 10, scope: !6149)
!6239 = !DILocation(line: 3951, column: 31, scope: !6149)
!6240 = !DILocation(line: 3951, column: 36, scope: !6149)
!6241 = !DILocation(line: 3951, column: 39, scope: !6149)
!6242 = !DILocation(line: 3951, column: 60, scope: !6149)
!6243 = !DILocation(line: 3951, column: 10, scope: !6140)
!6244 = !DILocation(line: 3953, column: 20, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 3952, column: 6)
!6246 = !DILocation(line: 3953, column: 26, scope: !6245)
!6247 = !DILocation(line: 3953, column: 10, scope: !6245)
!6248 = !DILocation(line: 3953, column: 17, scope: !6245)
!6249 = !DILocation(line: 3954, column: 7, scope: !6245)
!6250 = !DILocation(line: 3949, column: 14, scope: !6140)
!6251 = !DILocation(line: 3955, column: 9, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 3955, column: 7)
!6253 = !DILocation(line: 3955, column: 7, scope: !6245)
!6254 = !DILocation(line: 3956, column: 14, scope: !6252)
!6255 = !DILocation(line: 3956, column: 19, scope: !6252)
!6256 = !DILocation(line: 3956, column: 28, scope: !6252)
!6257 = !DILocation(line: 3956, column: 7, scope: !6252)
!6258 = !DILocation(line: 3959, column: 30, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 3958, column: 3)
!6260 = !DILocation(line: 3959, column: 14, scope: !6259)
!6261 = !DILocation(line: 3959, column: 19, scope: !6259)
!6262 = !DILocation(line: 3959, column: 28, scope: !6259)
!6263 = !DILocation(line: 3960, column: 18, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 3960, column: 11)
!6265 = !DILocation(line: 3960, column: 25, scope: !6264)
!6266 = !DILocation(line: 3960, column: 11, scope: !6259)
!6267 = !DILocation(line: 3961, column: 4, scope: !6264)
!6268 = !DILocation(line: 3964, column: 15, scope: !6148)
!6269 = !DILocation(line: 3964, column: 36, scope: !6148)
!6270 = !DILocation(line: 3964, column: 15, scope: !6149)
!6271 = !DILocation(line: 3967, column: 11, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 3967, column: 7)
!6273 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 3965, column: 6)
!6274 = !{!6228, !2693, i64 88}
!6275 = !DILocation(line: 3967, column: 19, scope: !6272)
!6276 = !DILocation(line: 3967, column: 7, scope: !6273)
!6277 = !DILocation(line: 3968, column: 7, scope: !6272)
!6278 = !DILocation(line: 3970, column: 15, scope: !6147)
!6279 = !DILocation(line: 3970, column: 36, scope: !6147)
!6280 = !DILocation(line: 3970, column: 15, scope: !6148)
!6281 = !DILocation(line: 3972, column: 10, scope: !6146)
!6282 = !DILocation(line: 3972, column: 17, scope: !6146)
!6283 = !DILocation(line: 3973, column: 7, scope: !6145)
!6284 = !DILocation(line: 3973, column: 31, scope: !6145)
!6285 = !DILocation(line: 3973, column: 7, scope: !6146)
!6286 = !DILocation(line: 3975, column: 11, scope: !6144)
!6287 = !DILocation(line: 3977, column: 27, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 3977, column: 7)
!6289 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 3977, column: 7)
!6290 = !{!6228, !2690, i64 72}
!6291 = !DILocation(line: 3977, column: 21, scope: !6288)
!6292 = !DILocation(line: 3977, column: 7, scope: !6289)
!6293 = !DILocation(line: 3978, column: 31, scope: !6288)
!6294 = !DILocation(line: 3978, column: 44, scope: !6288)
!6295 = !{!6228, !2693, i64 80}
!6296 = !DILocation(line: 3978, column: 40, scope: !6288)
!6297 = !DILocation(line: 3978, column: 4, scope: !6288)
!6298 = !DILocation(line: 3977, column: 36, scope: !6288)
!6299 = distinct !{!6299, !6292, !6300}
!6300 = !DILocation(line: 3978, column: 54, scope: !6289)
!6301 = !DILocation(line: 3982, column: 9, scope: !6147)
!6302 = !DILocation(line: 3982, column: 3, scope: !6147)
!6303 = !DILocation(line: 3989, column: 5, scope: !6136)
!6304 = !DILocation(line: 3991, column: 8, scope: !6136)
!6305 = !DILocation(line: 3991, column: 2, scope: !6136)
!6306 = !DILocation(line: 3993, column: 12, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 3993, column: 9)
!6308 = !DILocation(line: 3993, column: 9, scope: !6115)
!6309 = !DILocation(line: 3995, column: 6, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 3995, column: 6)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 3994, column: 5)
!6312 = !DILocation(line: 3995, column: 17, scope: !6310)
!6313 = !DILocation(line: 3995, column: 24, scope: !6310)
!6314 = !DILocation(line: 3995, column: 6, scope: !6311)
!6315 = !DILocation(line: 3996, column: 6, scope: !6310)
!6316 = !DILocation(line: 3999, column: 2, scope: !6307)
!6317 = !DILocation(line: 4000, column: 1, scope: !6115)
!6318 = distinct !DISubprogram(name: "ret_list_dict_any", scope: !3, file: !3, line: 502, type: !2579, isLocal: true, isDefinition: true, scopeLine: 503, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6319)
!6319 = !{!6320, !6321}
!6320 = !DILocalVariable(name: "argcount", arg: 1, scope: !6318, file: !3, line: 502, type: !756)
!6321 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6318, file: !3, line: 502, type: !797)
!6322 = !DILocation(line: 502, column: 23, scope: !6318)
!6323 = !DILocation(line: 502, column: 49, scope: !6318)
!6324 = !DILocation(line: 504, column: 5, scope: !6318)
!6325 = distinct !DISubprogram(name: "f_getchangelist", scope: !3, file: !3, line: 4006, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4007, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6326)
!6326 = !{!6327, !6328, !6329, !6330, !6331, !6332}
!6327 = !DILocalVariable(name: "argvars", arg: 1, scope: !6325, file: !3, line: 4006, type: !2305)
!6328 = !DILocalVariable(name: "rettv", arg: 2, scope: !6325, file: !3, line: 4006, type: !2305)
!6329 = !DILocalVariable(name: "buf", scope: !6325, file: !3, line: 4009, type: !990)
!6330 = !DILocalVariable(name: "i", scope: !6325, file: !3, line: 4010, type: !756)
!6331 = !DILocalVariable(name: "l", scope: !6325, file: !3, line: 4011, type: !885)
!6332 = !DILocalVariable(name: "d", scope: !6325, file: !3, line: 4012, type: !929)
!6333 = !DILocation(line: 4006, column: 27, scope: !6325)
!6334 = !DILocation(line: 4006, column: 46, scope: !6325)
!6335 = !DILocation(line: 4015, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4015, column: 9)
!6337 = !DILocation(line: 4015, column: 33, scope: !6336)
!6338 = !DILocation(line: 4015, column: 9, scope: !6325)
!6339 = !DILocation(line: 4019, column: 20, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4019, column: 9)
!6341 = !DILocation(line: 4019, column: 27, scope: !6340)
!6342 = !DILocation(line: 4019, column: 9, scope: !6325)
!6343 = !DILocation(line: 4020, column: 8, scope: !6340)
!6344 = !DILocation(line: 4009, column: 12, scope: !6325)
!6345 = !DILocation(line: 4020, column: 2, scope: !6340)
!6346 = !DILocation(line: 4022, column: 8, scope: !6340)
!6347 = !DILocation(line: 4023, column: 13, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4023, column: 9)
!6349 = !DILocation(line: 4023, column: 9, scope: !6325)
!6350 = !DILocation(line: 4026, column: 9, scope: !6325)
!6351 = !DILocation(line: 4011, column: 13, scope: !6325)
!6352 = !DILocation(line: 4027, column: 11, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4027, column: 9)
!6354 = !DILocation(line: 4027, column: 9, scope: !6325)
!6355 = !DILocation(line: 4030, column: 33, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4030, column: 9)
!6357 = !DILocation(line: 4030, column: 38, scope: !6356)
!6358 = !DILocation(line: 4030, column: 9, scope: !6356)
!6359 = !DILocation(line: 4030, column: 49, scope: !6356)
!6360 = !DILocation(line: 4030, column: 9, scope: !6325)
!6361 = !DILocation(line: 4037, column: 36, scope: !6325)
!6362 = !DILocation(line: 4038, column: 28, scope: !6325)
!6363 = !DILocation(line: 4038, column: 36, scope: !6325)
!6364 = !{!4151, !2693, i64 8}
!6365 = !DILocation(line: 4038, column: 25, scope: !6325)
!6366 = !DILocation(line: 4039, column: 13, scope: !6325)
!6367 = !DILocation(line: 4039, column: 36, scope: !6325)
!6368 = !DILocation(line: 4038, column: 20, scope: !6325)
!6369 = !DILocation(line: 4038, column: 6, scope: !6325)
!6370 = !DILocation(line: 4037, column: 5, scope: !6325)
!6371 = !DILocation(line: 4010, column: 10, scope: !6325)
!6372 = !DILocation(line: 4041, column: 26, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 4041, column: 5)
!6374 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4041, column: 5)
!6375 = !{!4831, !2690, i64 2456}
!6376 = !DILocation(line: 4041, column: 19, scope: !6373)
!6377 = !DILocation(line: 4041, column: 5, scope: !6374)
!6378 = !DILocation(line: 4043, column: 27, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 4043, column: 6)
!6380 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 4042, column: 5)
!6381 = !DILocation(line: 4043, column: 32, scope: !6379)
!6382 = !DILocation(line: 4043, column: 6, scope: !6380)
!6383 = !DILocation(line: 4045, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 4045, column: 6)
!6385 = !DILocation(line: 4012, column: 13, scope: !6325)
!6386 = !DILocation(line: 4045, column: 25, scope: !6384)
!6387 = !DILocation(line: 4045, column: 6, scope: !6380)
!6388 = !DILocation(line: 4047, column: 6, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 4047, column: 6)
!6390 = !DILocation(line: 4047, column: 29, scope: !6389)
!6391 = !DILocation(line: 4047, column: 6, scope: !6380)
!6392 = !DILocation(line: 4049, column: 56, scope: !6380)
!6393 = !DILocation(line: 4049, column: 2, scope: !6380)
!6394 = !DILocation(line: 4050, column: 55, scope: !6380)
!6395 = !DILocation(line: 4050, column: 28, scope: !6380)
!6396 = !DILocation(line: 4050, column: 2, scope: !6380)
!6397 = !DILocation(line: 4051, column: 58, scope: !6380)
!6398 = !{!4152, !2690, i64 12}
!6399 = !DILocation(line: 4051, column: 31, scope: !6380)
!6400 = !DILocation(line: 4051, column: 2, scope: !6380)
!6401 = !DILocation(line: 4052, column: 5, scope: !6380)
!6402 = !DILocation(line: 4041, column: 43, scope: !6373)
!6403 = distinct !{!6403, !6377, !6404}
!6404 = !DILocation(line: 4052, column: 5, scope: !6374)
!6405 = !DILocation(line: 4054, column: 1, scope: !6325)
!6406 = distinct !DISubprogram(name: "ret_list_number", scope: !3, file: !3, line: 492, type: !2579, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6407)
!6407 = !{!6408, !6409}
!6408 = !DILocalVariable(name: "argcount", arg: 1, scope: !6406, file: !3, line: 492, type: !756)
!6409 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6406, file: !3, line: 492, type: !797)
!6410 = !DILocation(line: 492, column: 21, scope: !6406)
!6411 = !DILocation(line: 492, column: 47, scope: !6406)
!6412 = !DILocation(line: 494, column: 5, scope: !6406)
!6413 = distinct !DISubprogram(name: "f_getcharpos", scope: !3, file: !3, line: 4133, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4134, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6414)
!6414 = !{!6415, !6416}
!6415 = !DILocalVariable(name: "argvars", arg: 1, scope: !6413, file: !3, line: 4133, type: !2305)
!6416 = !DILocalVariable(name: "rettv", arg: 2, scope: !6413, file: !3, line: 4133, type: !2305)
!6417 = !DILocation(line: 4133, column: 24, scope: !6413)
!6418 = !DILocation(line: 4133, column: 50, scope: !6413)
!6419 = !DILocation(line: 4135, column: 5, scope: !6413)
!6420 = !DILocation(line: 4136, column: 1, scope: !6413)
!6421 = distinct !DISubprogram(name: "f_getcharsearch", scope: !3, file: !3, line: 4142, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4143, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6422)
!6422 = !{!6423, !6424, !6425}
!6423 = !DILocalVariable(name: "argvars", arg: 1, scope: !6421, file: !3, line: 4142, type: !2305)
!6424 = !DILocalVariable(name: "rettv", arg: 2, scope: !6421, file: !3, line: 4142, type: !2305)
!6425 = !DILocalVariable(name: "dict", scope: !6426, file: !3, line: 4146, type: !929)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 4145, column: 5)
!6427 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 4144, column: 9)
!6428 = !DILocation(line: 4142, column: 27, scope: !6421)
!6429 = !DILocation(line: 4142, column: 53, scope: !6421)
!6430 = !DILocation(line: 4144, column: 9, scope: !6427)
!6431 = !DILocation(line: 4144, column: 33, scope: !6427)
!6432 = !DILocation(line: 4144, column: 9, scope: !6421)
!6433 = !DILocation(line: 4146, column: 24, scope: !6426)
!6434 = !DILocation(line: 4146, column: 29, scope: !6426)
!6435 = !DILocation(line: 4146, column: 10, scope: !6426)
!6436 = !DILocation(line: 4148, column: 32, scope: !6426)
!6437 = !DILocation(line: 4148, column: 2, scope: !6426)
!6438 = !DILocation(line: 4149, column: 35, scope: !6426)
!6439 = !DILocation(line: 4149, column: 2, scope: !6426)
!6440 = !DILocation(line: 4150, column: 33, scope: !6426)
!6441 = !DILocation(line: 4150, column: 2, scope: !6426)
!6442 = !DILocation(line: 4151, column: 5, scope: !6426)
!6443 = !DILocation(line: 4152, column: 1, scope: !6421)
!6444 = distinct !DISubprogram(name: "f_getcurpos", scope: !3, file: !3, line: 4274, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4275, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6445)
!6445 = !{!6446, !6447}
!6446 = !DILocalVariable(name: "argvars", arg: 1, scope: !6444, file: !3, line: 4274, type: !2305)
!6447 = !DILocalVariable(name: "rettv", arg: 2, scope: !6444, file: !3, line: 4274, type: !2305)
!6448 = !DILocation(line: 4274, column: 23, scope: !6444)
!6449 = !DILocation(line: 4274, column: 42, scope: !6444)
!6450 = !DILocation(line: 4276, column: 5, scope: !6444)
!6451 = !DILocation(line: 4277, column: 1, scope: !6444)
!6452 = distinct !DISubprogram(name: "f_getcursorcharpos", scope: !3, file: !3, line: 4280, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4281, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6453)
!6453 = !{!6454, !6455}
!6454 = !DILocalVariable(name: "argvars", arg: 1, scope: !6452, file: !3, line: 4280, type: !2305)
!6455 = !DILocalVariable(name: "rettv", arg: 2, scope: !6452, file: !3, line: 4280, type: !2305)
!6456 = !DILocation(line: 4280, column: 30, scope: !6452)
!6457 = !DILocation(line: 4280, column: 49, scope: !6452)
!6458 = !DILocation(line: 4282, column: 5, scope: !6452)
!6459 = !DILocation(line: 4283, column: 1, scope: !6452)
!6460 = distinct !DISubprogram(name: "f_getenv", scope: !3, file: !3, line: 4158, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4159, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6461)
!6461 = !{!6462, !6463, !6464, !6465}
!6462 = !DILocalVariable(name: "argvars", arg: 1, scope: !6460, file: !3, line: 4158, type: !2305)
!6463 = !DILocalVariable(name: "rettv", arg: 2, scope: !6460, file: !3, line: 4158, type: !2305)
!6464 = !DILocalVariable(name: "mustfree", scope: !6460, file: !3, line: 4160, type: !756)
!6465 = !DILocalVariable(name: "p", scope: !6460, file: !3, line: 4161, type: !759)
!6466 = !DILocation(line: 4158, column: 20, scope: !6460)
!6467 = !DILocation(line: 4158, column: 39, scope: !6460)
!6468 = !DILocation(line: 4160, column: 5, scope: !6460)
!6469 = !DILocation(line: 4160, column: 13, scope: !6460)
!6470 = !DILocation(line: 4161, column: 29, scope: !6460)
!6471 = !DILocation(line: 4161, column: 18, scope: !6460)
!6472 = !DILocation(line: 4161, column: 14, scope: !6460)
!6473 = !DILocation(line: 4163, column: 11, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 4163, column: 9)
!6475 = !DILocation(line: 4163, column: 9, scope: !6460)
!6476 = !DILocation(line: 4165, column: 9, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 4164, column: 5)
!6478 = !DILocation(line: 4165, column: 16, scope: !6477)
!6479 = !DILocation(line: 4166, column: 14, scope: !6477)
!6480 = !DILocation(line: 4166, column: 23, scope: !6477)
!6481 = !DILocation(line: 4167, column: 2, scope: !6477)
!6482 = !DILocation(line: 4169, column: 10, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 4169, column: 9)
!6484 = !DILocation(line: 4169, column: 9, scope: !6460)
!6485 = !DILocation(line: 4170, column: 6, scope: !6483)
!6486 = !DILocation(line: 4170, column: 2, scope: !6483)
!6487 = !DILocation(line: 4171, column: 12, scope: !6460)
!6488 = !DILocation(line: 4171, column: 17, scope: !6460)
!6489 = !DILocation(line: 4171, column: 26, scope: !6460)
!6490 = !DILocation(line: 4172, column: 12, scope: !6460)
!6491 = !DILocation(line: 4172, column: 19, scope: !6460)
!6492 = !DILocation(line: 4173, column: 1, scope: !6460)
!6493 = distinct !DISubprogram(name: "f_getfontname", scope: !3, file: !3, line: 4179, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4180, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6494)
!6494 = !{!6495, !6496, !6497, !6500}
!6495 = !DILocalVariable(name: "argvars", arg: 1, scope: !6493, file: !3, line: 4179, type: !2305)
!6496 = !DILocalVariable(name: "rettv", arg: 2, scope: !6493, file: !3, line: 4179, type: !2305)
!6497 = !DILocalVariable(name: "font", scope: !6498, file: !3, line: 4186, type: !2427)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4185, column: 5)
!6499 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 4184, column: 9)
!6500 = !DILocalVariable(name: "name", scope: !6498, file: !3, line: 4187, type: !759)
!6501 = !DILocation(line: 4179, column: 25, scope: !6493)
!6502 = !DILocation(line: 4179, column: 51, scope: !6493)
!6503 = !DILocation(line: 4181, column: 12, scope: !6493)
!6504 = !DILocation(line: 4181, column: 19, scope: !6493)
!6505 = !DILocation(line: 4182, column: 12, scope: !6493)
!6506 = !DILocation(line: 4182, column: 17, scope: !6493)
!6507 = !DILocation(line: 4182, column: 26, scope: !6493)
!6508 = !DILocation(line: 4184, column: 13, scope: !6499)
!6509 = !DILocation(line: 4184, column: 9, scope: !6499)
!6510 = !DILocation(line: 4184, column: 9, scope: !6493)
!6511 = !DILocation(line: 4187, column: 10, scope: !6498)
!6512 = !DILocation(line: 4189, column: 17, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 4189, column: 6)
!6514 = !DILocation(line: 4189, column: 24, scope: !6513)
!6515 = !DILocation(line: 4189, column: 6, scope: !6498)
!6516 = !DILocation(line: 4193, column: 17, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 4190, column: 2)
!6518 = !{!3860, !2693, i64 232}
!6519 = !DILocation(line: 4186, column: 10, scope: !6498)
!6520 = !DILocation(line: 4194, column: 13, scope: !6517)
!6521 = !DILocation(line: 4195, column: 2, scope: !6517)
!6522 = !DILocation(line: 4198, column: 13, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 4197, column: 2)
!6524 = !DILocation(line: 4199, column: 10, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 4199, column: 10)
!6526 = !DILocation(line: 4199, column: 28, scope: !6525)
!6527 = !DILocation(line: 4199, column: 10, scope: !6523)
!6528 = !DILocation(line: 4201, column: 13, scope: !6523)
!6529 = !DILocation(line: 4202, column: 15, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 4202, column: 10)
!6531 = !DILocation(line: 4202, column: 10, scope: !6523)
!6532 = !DILocation(line: 4205, column: 25, scope: !6498)
!6533 = !DILocation(line: 4205, column: 23, scope: !6498)
!6534 = !DILocation(line: 4206, column: 17, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 4206, column: 6)
!6536 = !DILocation(line: 4206, column: 24, scope: !6535)
!6537 = !DILocation(line: 4206, column: 6, scope: !6498)
!6538 = !DILocation(line: 4207, column: 6, scope: !6535)
!6539 = distinct !DISubprogram(name: "f_getjumplist", scope: !3, file: !3, line: 4216, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4217, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6540)
!6540 = !{!6541, !6542, !6543, !6544, !6545, !6546}
!6541 = !DILocalVariable(name: "argvars", arg: 1, scope: !6539, file: !3, line: 4216, type: !2305)
!6542 = !DILocalVariable(name: "rettv", arg: 2, scope: !6539, file: !3, line: 4216, type: !2305)
!6543 = !DILocalVariable(name: "wp", scope: !6539, file: !3, line: 4219, type: !1135)
!6544 = !DILocalVariable(name: "i", scope: !6539, file: !3, line: 4220, type: !756)
!6545 = !DILocalVariable(name: "l", scope: !6539, file: !3, line: 4221, type: !885)
!6546 = !DILocalVariable(name: "d", scope: !6539, file: !3, line: 4222, type: !929)
!6547 = !DILocation(line: 4216, column: 25, scope: !6539)
!6548 = !DILocation(line: 4216, column: 44, scope: !6539)
!6549 = !DILocation(line: 4225, column: 9, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4225, column: 9)
!6551 = !DILocation(line: 4225, column: 33, scope: !6550)
!6552 = !DILocation(line: 4225, column: 9, scope: !6539)
!6553 = !DILocation(line: 4229, column: 36, scope: !6539)
!6554 = !DILocation(line: 4229, column: 10, scope: !6539)
!6555 = !DILocation(line: 4219, column: 12, scope: !6539)
!6556 = !DILocation(line: 4230, column: 12, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4230, column: 9)
!6558 = !DILocation(line: 4230, column: 9, scope: !6539)
!6559 = !DILocation(line: 4233, column: 5, scope: !6539)
!6560 = !DILocation(line: 4235, column: 9, scope: !6539)
!6561 = !DILocation(line: 4221, column: 13, scope: !6539)
!6562 = !DILocation(line: 4236, column: 11, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4236, column: 9)
!6564 = !DILocation(line: 4236, column: 9, scope: !6539)
!6565 = !DILocation(line: 4239, column: 33, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4239, column: 9)
!6567 = !DILocation(line: 4239, column: 38, scope: !6566)
!6568 = !DILocation(line: 4239, column: 9, scope: !6566)
!6569 = !DILocation(line: 4239, column: 49, scope: !6566)
!6570 = !DILocation(line: 4239, column: 9, scope: !6539)
!6571 = !DILocation(line: 4241, column: 36, scope: !6539)
!6572 = !DILocation(line: 4241, column: 61, scope: !6539)
!6573 = !{!4151, !2690, i64 7804}
!6574 = !DILocation(line: 4241, column: 44, scope: !6539)
!6575 = !DILocation(line: 4241, column: 5, scope: !6539)
!6576 = !DILocation(line: 4220, column: 10, scope: !6539)
!6577 = !DILocation(line: 4243, column: 25, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 4243, column: 5)
!6579 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4243, column: 5)
!6580 = !{!4151, !2690, i64 7800}
!6581 = !DILocation(line: 4243, column: 19, scope: !6578)
!6582 = !DILocation(line: 4243, column: 5, scope: !6579)
!6583 = !DILocation(line: 4245, column: 35, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 4245, column: 6)
!6585 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 4244, column: 5)
!6586 = !{!6587, !2925, i64 0}
!6587 = !{!"xfilemark", !6588, i64 0, !2693, i64 24, !2925, i64 32}
!6588 = !{!"filemark", !4152, i64 0, !2690, i64 16}
!6589 = !DILocation(line: 4245, column: 40, scope: !6584)
!6590 = !DILocation(line: 4245, column: 6, scope: !6585)
!6591 = !DILocation(line: 4247, column: 11, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 4247, column: 6)
!6593 = !DILocation(line: 4222, column: 13, scope: !6539)
!6594 = !DILocation(line: 4247, column: 25, scope: !6592)
!6595 = !DILocation(line: 4247, column: 6, scope: !6585)
!6596 = !DILocation(line: 4249, column: 6, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 4249, column: 6)
!6598 = !DILocation(line: 4249, column: 29, scope: !6597)
!6599 = !DILocation(line: 4249, column: 6, scope: !6585)
!6600 = !DILocation(line: 4251, column: 64, scope: !6585)
!6601 = !DILocation(line: 4251, column: 2, scope: !6585)
!6602 = !DILocation(line: 4252, column: 63, scope: !6585)
!6603 = !{!6587, !2690, i64 8}
!6604 = !DILocation(line: 4252, column: 28, scope: !6585)
!6605 = !DILocation(line: 4252, column: 2, scope: !6585)
!6606 = !DILocation(line: 4253, column: 66, scope: !6585)
!6607 = !{!6587, !2690, i64 12}
!6608 = !DILocation(line: 4253, column: 31, scope: !6585)
!6609 = !DILocation(line: 4253, column: 2, scope: !6585)
!6610 = !DILocation(line: 4254, column: 60, scope: !6585)
!6611 = !{!6587, !2690, i64 16}
!6612 = !DILocation(line: 4254, column: 30, scope: !6585)
!6613 = !DILocation(line: 4254, column: 2, scope: !6585)
!6614 = !DILocation(line: 4255, column: 24, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 4255, column: 6)
!6616 = !{!6587, !2693, i64 24}
!6617 = !DILocation(line: 4255, column: 30, scope: !6615)
!6618 = !DILocation(line: 4255, column: 6, scope: !6585)
!6619 = !DILocation(line: 4256, column: 6, scope: !6615)
!6620 = !DILocation(line: 4243, column: 40, scope: !6578)
!6621 = distinct !{!6621, !6582, !6622}
!6622 = !DILocation(line: 4257, column: 5, scope: !6579)
!6623 = !DILocation(line: 4259, column: 1, scope: !6539)
!6624 = distinct !DISubprogram(name: "ret_list_or_dict_1", scope: !3, file: !3, line: 585, type: !2579, isLocal: true, isDefinition: true, scopeLine: 586, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6625)
!6625 = !{!6626, !6627}
!6626 = !DILocalVariable(name: "argcount", arg: 1, scope: !6624, file: !3, line: 585, type: !756)
!6627 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6624, file: !3, line: 585, type: !797)
!6628 = !DILocation(line: 585, column: 24, scope: !6624)
!6629 = !DILocation(line: 585, column: 43, scope: !6624)
!6630 = !DILocation(line: 587, column: 18, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 587, column: 9)
!6632 = !DILocation(line: 588, column: 2, scope: !6631)
!6633 = !DILocation(line: 590, column: 1, scope: !6624)
!6634 = distinct !DISubprogram(name: "ret_dict_number", scope: !3, file: !3, line: 519, type: !2579, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6635)
!6635 = !{!6636, !6637}
!6636 = !DILocalVariable(name: "argcount", arg: 1, scope: !6634, file: !3, line: 519, type: !756)
!6637 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6634, file: !3, line: 519, type: !797)
!6638 = !DILocation(line: 519, column: 21, scope: !6634)
!6639 = !DILocation(line: 519, column: 47, scope: !6634)
!6640 = !DILocation(line: 521, column: 5, scope: !6634)
!6641 = distinct !DISubprogram(name: "f_getpid", scope: !3, file: !3, line: 4265, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4266, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6642)
!6642 = !{!6643, !6644}
!6643 = !DILocalVariable(name: "argvars", arg: 1, scope: !6641, file: !3, line: 4265, type: !2305)
!6644 = !DILocalVariable(name: "rettv", arg: 2, scope: !6641, file: !3, line: 4265, type: !2305)
!6645 = !DILocation(line: 4265, column: 20, scope: !6641)
!6646 = !DILocation(line: 4265, column: 46, scope: !6641)
!6647 = !DILocation(line: 4267, column: 28, scope: !6641)
!6648 = !DILocation(line: 4267, column: 17, scope: !6641)
!6649 = !DILocation(line: 4267, column: 26, scope: !6641)
!6650 = !DILocation(line: 4268, column: 1, scope: !6641)
!6651 = distinct !DISubprogram(name: "f_getpos", scope: !3, file: !3, line: 4289, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4290, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6652)
!6652 = !{!6653, !6654}
!6653 = !DILocalVariable(name: "argvars", arg: 1, scope: !6651, file: !3, line: 4289, type: !2305)
!6654 = !DILocalVariable(name: "rettv", arg: 2, scope: !6651, file: !3, line: 4289, type: !2305)
!6655 = !DILocation(line: 4289, column: 20, scope: !6651)
!6656 = !DILocation(line: 4289, column: 39, scope: !6651)
!6657 = !DILocation(line: 4291, column: 5, scope: !6651)
!6658 = !DILocation(line: 4292, column: 1, scope: !6651)
!6659 = distinct !DISubprogram(name: "ret_list_or_dict_0", scope: !3, file: !3, line: 573, type: !2579, isLocal: true, isDefinition: true, scopeLine: 574, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6660)
!6660 = !{!6661, !6662}
!6661 = !DILocalVariable(name: "argcount", arg: 1, scope: !6659, file: !3, line: 573, type: !756)
!6662 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6659, file: !3, line: 573, type: !797)
!6663 = !DILocation(line: 573, column: 24, scope: !6659)
!6664 = !DILocation(line: 573, column: 43, scope: !6659)
!6665 = !DILocation(line: 575, column: 18, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 575, column: 9)
!6667 = !DILocation(line: 576, column: 2, scope: !6666)
!6668 = !DILocation(line: 578, column: 1, scope: !6659)
!6669 = distinct !DISubprogram(name: "ret_getreg", scope: !3, file: !3, line: 618, type: !2579, isLocal: true, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6670)
!6670 = !{!6671, !6672}
!6671 = !DILocalVariable(name: "argcount", arg: 1, scope: !6669, file: !3, line: 618, type: !756)
!6672 = !DILocalVariable(name: "argtypes", arg: 2, scope: !6669, file: !3, line: 618, type: !797)
!6673 = !DILocation(line: 618, column: 16, scope: !6669)
!6674 = !DILocation(line: 618, column: 35, scope: !6669)
!6675 = !DILocation(line: 621, column: 18, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 621, column: 9)
!6677 = !DILocation(line: 622, column: 2, scope: !6676)
!6678 = !DILocation(line: 624, column: 1, scope: !6669)
!6679 = distinct !DISubprogram(name: "f_getreg", scope: !3, file: !3, line: 4298, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4299, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6680)
!6680 = !{!6681, !6682, !6683, !6684, !6685, !6686, !6687}
!6681 = !DILocalVariable(name: "argvars", arg: 1, scope: !6679, file: !3, line: 4298, type: !2305)
!6682 = !DILocalVariable(name: "rettv", arg: 2, scope: !6679, file: !3, line: 4298, type: !2305)
!6683 = !DILocalVariable(name: "strregname", scope: !6679, file: !3, line: 4300, type: !759)
!6684 = !DILocalVariable(name: "regname", scope: !6679, file: !3, line: 4301, type: !756)
!6685 = !DILocalVariable(name: "arg2", scope: !6679, file: !3, line: 4302, type: !756)
!6686 = !DILocalVariable(name: "return_list", scope: !6679, file: !3, line: 4303, type: !756)
!6687 = !DILocalVariable(name: "error", scope: !6679, file: !3, line: 4304, type: !756)
!6688 = !DILocation(line: 4298, column: 20, scope: !6679)
!6689 = !DILocation(line: 4298, column: 39, scope: !6679)
!6690 = !DILocation(line: 4302, column: 10, scope: !6679)
!6691 = !DILocation(line: 4303, column: 10, scope: !6679)
!6692 = !DILocation(line: 4304, column: 5, scope: !6679)
!6693 = !DILocation(line: 4304, column: 10, scope: !6679)
!6694 = !DILocation(line: 4306, column: 20, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 4306, column: 9)
!6696 = !DILocation(line: 4306, column: 27, scope: !6695)
!6697 = !DILocation(line: 4306, column: 9, scope: !6679)
!6698 = !DILocation(line: 4308, column: 15, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 4307, column: 5)
!6700 = !DILocation(line: 4300, column: 13, scope: !6679)
!6701 = !DILocation(line: 4309, column: 17, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 4309, column: 6)
!6703 = !DILocation(line: 4309, column: 6, scope: !6699)
!6704 = !DILocation(line: 4310, column: 12, scope: !6702)
!6705 = !DILocation(line: 4310, column: 6, scope: !6702)
!6706 = !DILocation(line: 4311, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 4311, column: 11)
!6708 = !DILocation(line: 4311, column: 27, scope: !6707)
!6709 = !DILocation(line: 4311, column: 30, scope: !6707)
!6710 = !DILocation(line: 4311, column: 49, scope: !6707)
!6711 = !DILocation(line: 4311, column: 11, scope: !6702)
!6712 = !DILocation(line: 4313, column: 12, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 4312, column: 2)
!6714 = !DILocation(line: 4313, column: 6, scope: !6713)
!6715 = !DILocation(line: 4314, column: 12, scope: !6713)
!6716 = !DILocation(line: 4315, column: 2, scope: !6713)
!6717 = !DILocation(line: 4316, column: 6, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 4316, column: 6)
!6719 = !DILocation(line: 4316, column: 17, scope: !6718)
!6720 = !DILocation(line: 4316, column: 24, scope: !6718)
!6721 = !DILocation(line: 4316, column: 6, scope: !6699)
!6722 = !DILocation(line: 4318, column: 18, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 4317, column: 2)
!6724 = !DILocation(line: 4318, column: 13, scope: !6723)
!6725 = !DILocation(line: 4319, column: 11, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 4319, column: 10)
!6727 = !DILocation(line: 4319, column: 17, scope: !6726)
!6728 = !DILocation(line: 4319, column: 20, scope: !6726)
!6729 = !DILocation(line: 4319, column: 31, scope: !6726)
!6730 = !DILocation(line: 4319, column: 38, scope: !6726)
!6731 = !DILocation(line: 4319, column: 10, scope: !6723)
!6732 = !DILocation(line: 4320, column: 22, scope: !6726)
!6733 = !DILocation(line: 4320, column: 17, scope: !6726)
!6734 = !DILocation(line: 4326, column: 9, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 4326, column: 9)
!6736 = !DILocation(line: 4320, column: 3, scope: !6726)
!6737 = !DILocation(line: 4324, column: 15, scope: !6695)
!6738 = !DILocation(line: 4326, column: 9, scope: !6679)
!6739 = !DILocation(line: 4329, column: 27, scope: !6679)
!6740 = !DILocation(line: 4329, column: 16, scope: !6679)
!6741 = !DILocation(line: 4329, column: 43, scope: !6679)
!6742 = !DILocation(line: 4301, column: 10, scope: !6679)
!6743 = !DILocation(line: 4330, column: 17, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 4330, column: 9)
!6745 = !DILocation(line: 4330, column: 9, scope: !6679)
!6746 = !DILocation(line: 4333, column: 9, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 4333, column: 9)
!6748 = !DILocation(line: 4333, column: 9, scope: !6679)
!6749 = !DILocation(line: 4335, column: 16, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 4334, column: 5)
!6751 = !DILocation(line: 4337, column: 12, scope: !6750)
!6752 = !DILocation(line: 4337, column: 38, scope: !6750)
!6753 = !DILocation(line: 4336, column: 33, scope: !6750)
!6754 = !DILocation(line: 4336, column: 9, scope: !6750)
!6755 = !DILocation(line: 4336, column: 21, scope: !6750)
!6756 = !DILocation(line: 4338, column: 25, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 4338, column: 6)
!6758 = !DILocation(line: 4338, column: 6, scope: !6750)
!6759 = !DILocation(line: 4339, column: 12, scope: !6757)
!6760 = !DILocation(line: 4339, column: 6, scope: !6757)
!6761 = !DILocation(line: 4341, column: 28, scope: !6757)
!6762 = !DILocation(line: 4341, column: 6, scope: !6757)
!6763 = !DILocation(line: 4345, column: 16, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 4344, column: 5)
!6765 = !DILocation(line: 4347, column: 11, scope: !6764)
!6766 = !DILocation(line: 4346, column: 25, scope: !6764)
!6767 = !DILocation(line: 4346, column: 9, scope: !6764)
!6768 = !DILocation(line: 4346, column: 14, scope: !6764)
!6769 = !DILocation(line: 4346, column: 23, scope: !6764)
!6770 = !DILocation(line: 4349, column: 1, scope: !6679)
!6771 = distinct !DISubprogram(name: "f_getreginfo", scope: !3, file: !3, line: 7389, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7390, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6772)
!6772 = !{!6773, !6774, !6775, !6776, !6777, !6781, !6782, !6783, !6784}
!6773 = !DILocalVariable(name: "argvars", arg: 1, scope: !6771, file: !3, line: 7389, type: !2305)
!6774 = !DILocalVariable(name: "rettv", arg: 2, scope: !6771, file: !3, line: 7389, type: !2305)
!6775 = !DILocalVariable(name: "strregname", scope: !6771, file: !3, line: 7391, type: !759)
!6776 = !DILocalVariable(name: "regname", scope: !6771, file: !3, line: 7392, type: !756)
!6777 = !DILocalVariable(name: "buf", scope: !6771, file: !3, line: 7393, type: !6778)
!6778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 536, elements: !6779)
!6779 = !{!6780}
!6780 = !DISubrange(count: 67)
!6781 = !DILocalVariable(name: "reglen", scope: !6771, file: !3, line: 7394, type: !765)
!6782 = !DILocalVariable(name: "dict", scope: !6771, file: !3, line: 7395, type: !929)
!6783 = !DILocalVariable(name: "list", scope: !6771, file: !3, line: 7396, type: !885)
!6784 = !DILocalVariable(name: "item", scope: !6785, file: !3, line: 7444, type: !2464)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 7443, column: 5)
!6786 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7440, column: 9)
!6787 = !DILocation(line: 7389, column: 24, scope: !6771)
!6788 = !DILocation(line: 7389, column: 43, scope: !6771)
!6789 = !DILocation(line: 7393, column: 5, scope: !6771)
!6790 = !DILocation(line: 7393, column: 12, scope: !6771)
!6791 = !DILocation(line: 7394, column: 5, scope: !6771)
!6792 = !DILocation(line: 7394, column: 10, scope: !6771)
!6793 = !DILocation(line: 7398, column: 20, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7398, column: 9)
!6795 = !DILocation(line: 7398, column: 27, scope: !6794)
!6796 = !DILocation(line: 7398, column: 9, scope: !6771)
!6797 = !DILocation(line: 7400, column: 15, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 7399, column: 5)
!6799 = !DILocation(line: 7391, column: 13, scope: !6771)
!6800 = !DILocation(line: 7401, column: 17, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 7401, column: 6)
!6802 = !DILocation(line: 7401, column: 6, scope: !6798)
!6803 = !DILocation(line: 7403, column: 6, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 7403, column: 6)
!6805 = !DILocation(line: 7403, column: 22, scope: !6804)
!6806 = !DILocation(line: 7403, column: 25, scope: !6804)
!6807 = !DILocation(line: 7403, column: 44, scope: !6804)
!6808 = !DILocation(line: 7403, column: 6, scope: !6798)
!6809 = !DILocation(line: 7405, column: 12, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 7404, column: 2)
!6811 = !DILocation(line: 7405, column: 6, scope: !6810)
!6812 = !DILocation(line: 7406, column: 6, scope: !6810)
!6813 = !DILocation(line: 7410, column: 15, scope: !6794)
!6814 = !DILocation(line: 7412, column: 27, scope: !6771)
!6815 = !DILocation(line: 7412, column: 16, scope: !6771)
!6816 = !DILocation(line: 7412, column: 43, scope: !6771)
!6817 = !DILocation(line: 7392, column: 10, scope: !6771)
!6818 = !DILocation(line: 7413, column: 22, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7413, column: 9)
!6820 = !DILocation(line: 7416, column: 9, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7416, column: 9)
!6822 = !DILocation(line: 7416, column: 33, scope: !6821)
!6823 = !DILocation(line: 7416, column: 9, scope: !6771)
!6824 = !DILocation(line: 7418, column: 19, scope: !6771)
!6825 = !DILocation(line: 7418, column: 24, scope: !6771)
!6826 = !DILocation(line: 7395, column: 13, scope: !6771)
!6827 = !DILocation(line: 7420, column: 22, scope: !6771)
!6828 = !DILocation(line: 7396, column: 13, scope: !6771)
!6829 = !DILocation(line: 7421, column: 14, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7421, column: 9)
!6831 = !DILocation(line: 7421, column: 9, scope: !6771)
!6832 = !DILocation(line: 7420, column: 12, scope: !6771)
!6833 = !DILocation(line: 7423, column: 11, scope: !6771)
!6834 = !DILocation(line: 7425, column: 12, scope: !6771)
!6835 = !DILocation(line: 7426, column: 5, scope: !6771)
!6836 = !DILocation(line: 7426, column: 12, scope: !6771)
!6837 = !DILocation(line: 7427, column: 13, scope: !6771)
!6838 = !DILocation(line: 7427, column: 5, scope: !6771)
!6839 = !DILocation(line: 7429, column: 21, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 7428, column: 5)
!6841 = !DILocation(line: 7429, column: 28, scope: !6840)
!6842 = !DILocation(line: 7430, column: 21, scope: !6840)
!6843 = !DILocation(line: 7430, column: 28, scope: !6840)
!6844 = !DILocation(line: 7433, column: 8, scope: !6840)
!6845 = !DILocation(line: 7433, column: 15, scope: !6840)
!6846 = !DILocation(line: 7432, column: 7, scope: !6840)
!6847 = !DILocation(line: 7434, column: 7, scope: !6840)
!6848 = !DILocation(line: 7436, column: 11, scope: !6771)
!6849 = !DILocation(line: 7438, column: 32, scope: !6771)
!6850 = !DILocation(line: 7438, column: 14, scope: !6771)
!6851 = !DILocation(line: 7438, column: 12, scope: !6771)
!6852 = !DILocation(line: 7439, column: 12, scope: !6771)
!6853 = !DILocation(line: 7440, column: 17, scope: !6786)
!6854 = !DILocation(line: 7440, column: 9, scope: !6771)
!6855 = !DILocation(line: 7441, column: 8, scope: !6786)
!6856 = !DILocation(line: 7441, column: 2, scope: !6786)
!6857 = !DILocation(line: 7444, column: 21, scope: !6785)
!6858 = !DILocation(line: 7444, column: 14, scope: !6785)
!6859 = !DILocation(line: 7446, column: 11, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 7446, column: 6)
!6861 = !DILocation(line: 7446, column: 6, scope: !6785)
!6862 = !DILocation(line: 7448, column: 18, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 7447, column: 2)
!6864 = !DILocation(line: 7448, column: 25, scope: !6863)
!6865 = !{!4157, !2691, i64 0}
!6866 = !DILocation(line: 7449, column: 45, scope: !6863)
!6867 = !DILocation(line: 7449, column: 42, scope: !6863)
!6868 = !DILocation(line: 7449, column: 34, scope: !6863)
!6869 = !DILocation(line: 7449, column: 23, scope: !6863)
!6870 = !DILocation(line: 7449, column: 32, scope: !6863)
!6871 = !DILocation(line: 7451, column: 12, scope: !6863)
!6872 = !DILocation(line: 7452, column: 2, scope: !6863)
!6873 = !DILocation(line: 7454, column: 1, scope: !6771)
!6874 = distinct !DISubprogram(name: "f_getregtype", scope: !3, file: !3, line: 4355, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4356, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6875)
!6875 = !{!6876, !6877, !6878, !6879, !6880, !6881}
!6876 = !DILocalVariable(name: "argvars", arg: 1, scope: !6874, file: !3, line: 4355, type: !2305)
!6877 = !DILocalVariable(name: "rettv", arg: 2, scope: !6874, file: !3, line: 4355, type: !2305)
!6878 = !DILocalVariable(name: "strregname", scope: !6874, file: !3, line: 4357, type: !759)
!6879 = !DILocalVariable(name: "regname", scope: !6874, file: !3, line: 4358, type: !756)
!6880 = !DILocalVariable(name: "buf", scope: !6874, file: !3, line: 4359, type: !6778)
!6881 = !DILocalVariable(name: "reglen", scope: !6874, file: !3, line: 4360, type: !765)
!6882 = !DILocation(line: 4355, column: 24, scope: !6874)
!6883 = !DILocation(line: 4355, column: 43, scope: !6874)
!6884 = !DILocation(line: 4359, column: 5, scope: !6874)
!6885 = !DILocation(line: 4359, column: 12, scope: !6874)
!6886 = !DILocation(line: 4360, column: 5, scope: !6874)
!6887 = !DILocation(line: 4360, column: 10, scope: !6874)
!6888 = !DILocation(line: 4362, column: 20, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 4362, column: 9)
!6890 = !DILocation(line: 4362, column: 27, scope: !6889)
!6891 = !DILocation(line: 4362, column: 9, scope: !6874)
!6892 = !DILocation(line: 4364, column: 15, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 4363, column: 5)
!6894 = !DILocation(line: 4357, column: 13, scope: !6874)
!6895 = !DILocation(line: 4365, column: 17, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 4365, column: 6)
!6897 = !DILocation(line: 4365, column: 25, scope: !6896)
!6898 = !DILocation(line: 4365, column: 28, scope: !6896)
!6899 = !DILocation(line: 4365, column: 44, scope: !6896)
!6900 = !DILocation(line: 4365, column: 47, scope: !6896)
!6901 = !DILocation(line: 4365, column: 66, scope: !6896)
!6902 = !DILocation(line: 4365, column: 6, scope: !6893)
!6903 = !DILocation(line: 4367, column: 12, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 4366, column: 2)
!6905 = !DILocation(line: 4367, column: 6, scope: !6904)
!6906 = !DILocation(line: 4369, column: 2, scope: !6904)
!6907 = !DILocation(line: 4372, column: 13, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4371, column: 2)
!6909 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 4370, column: 6)
!6910 = !DILocation(line: 4372, column: 20, scope: !6908)
!6911 = !DILocation(line: 4374, column: 6, scope: !6908)
!6912 = !DILocation(line: 4379, column: 15, scope: !6889)
!6913 = !DILocation(line: 4381, column: 27, scope: !6874)
!6914 = !DILocation(line: 4381, column: 16, scope: !6874)
!6915 = !DILocation(line: 4381, column: 43, scope: !6874)
!6916 = !DILocation(line: 4358, column: 10, scope: !6874)
!6917 = !DILocation(line: 4382, column: 17, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 4382, column: 9)
!6919 = !DILocation(line: 4382, column: 9, scope: !6874)
!6920 = !DILocation(line: 4385, column: 12, scope: !6874)
!6921 = !DILocation(line: 4386, column: 5, scope: !6874)
!6922 = !DILocation(line: 4386, column: 12, scope: !6874)
!6923 = !DILocation(line: 4387, column: 13, scope: !6874)
!6924 = !DILocation(line: 4387, column: 5, scope: !6874)
!6925 = !DILocation(line: 4389, column: 21, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 4388, column: 5)
!6927 = !DILocation(line: 4389, column: 28, scope: !6926)
!6928 = !DILocation(line: 4390, column: 21, scope: !6926)
!6929 = !DILocation(line: 4390, column: 28, scope: !6926)
!6930 = !DILocation(line: 4392, column: 10, scope: !6926)
!6931 = !DILocation(line: 4393, column: 35, scope: !6926)
!6932 = !DILocation(line: 4393, column: 42, scope: !6926)
!6933 = !DILocation(line: 4393, column: 3, scope: !6926)
!6934 = !DILocation(line: 4394, column: 3, scope: !6926)
!6935 = !DILocation(line: 4396, column: 12, scope: !6874)
!6936 = !DILocation(line: 4396, column: 19, scope: !6874)
!6937 = !DILocation(line: 4397, column: 28, scope: !6874)
!6938 = !DILocation(line: 4398, column: 1, scope: !6874)
!6939 = distinct !DISubprogram(name: "f_gettagstack", scope: !3, file: !3, line: 4404, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4405, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6940)
!6940 = !{!6941, !6942, !6943}
!6941 = !DILocalVariable(name: "argvars", arg: 1, scope: !6939, file: !3, line: 4404, type: !2305)
!6942 = !DILocalVariable(name: "rettv", arg: 2, scope: !6939, file: !3, line: 4404, type: !2305)
!6943 = !DILocalVariable(name: "wp", scope: !6939, file: !3, line: 4406, type: !1135)
!6944 = !DILocation(line: 4404, column: 25, scope: !6939)
!6945 = !DILocation(line: 4404, column: 44, scope: !6939)
!6946 = !DILocation(line: 4406, column: 17, scope: !6939)
!6947 = !DILocation(line: 4406, column: 12, scope: !6939)
!6948 = !DILocation(line: 4408, column: 9, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 4408, column: 9)
!6950 = !DILocation(line: 4408, column: 33, scope: !6949)
!6951 = !DILocation(line: 4408, column: 9, scope: !6939)
!6952 = !DILocation(line: 4411, column: 20, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 4411, column: 9)
!6954 = !DILocation(line: 4411, column: 27, scope: !6953)
!6955 = !DILocation(line: 4411, column: 9, scope: !6939)
!6956 = !DILocation(line: 4413, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 4412, column: 5)
!6958 = !DILocation(line: 4414, column: 9, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 4414, column: 6)
!6960 = !DILocation(line: 4414, column: 6, scope: !6957)
!6961 = !DILocation(line: 4418, column: 29, scope: !6939)
!6962 = !DILocation(line: 4418, column: 34, scope: !6939)
!6963 = !DILocation(line: 4418, column: 5, scope: !6939)
!6964 = !DILocation(line: 4419, column: 1, scope: !6939)
!6965 = distinct !DISubprogram(name: "f_gettext", scope: !3, file: !3, line: 4425, type: !2538, isLocal: true, isDefinition: true, scopeLine: 4426, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6966)
!6966 = !{!6967, !6968}
!6967 = !DILocalVariable(name: "argvars", arg: 1, scope: !6965, file: !3, line: 4425, type: !2305)
!6968 = !DILocalVariable(name: "rettv", arg: 2, scope: !6965, file: !3, line: 4425, type: !2305)
!6969 = !DILocation(line: 4425, column: 21, scope: !6965)
!6970 = !DILocation(line: 4425, column: 40, scope: !6965)
!6971 = !DILocation(line: 4427, column: 20, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 4427, column: 9)
!6973 = !DILocation(line: 4427, column: 27, scope: !6972)
!6974 = !DILocation(line: 4428, column: 6, scope: !6972)
!6975 = !DILocation(line: 4428, column: 20, scope: !6972)
!6976 = !DILocation(line: 4428, column: 25, scope: !6972)
!6977 = !DILocation(line: 4428, column: 34, scope: !6972)
!6978 = !DILocation(line: 4429, column: 6, scope: !6972)
!6979 = !DILocation(line: 4429, column: 9, scope: !6972)
!6980 = !DILocation(line: 4429, column: 35, scope: !6972)
!6981 = !DILocation(line: 4427, column: 9, scope: !6965)
!6982 = !DILocation(line: 4431, column: 8, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 4430, column: 5)
!6984 = !DILocation(line: 4431, column: 22, scope: !6983)
!6985 = !DILocation(line: 4431, column: 2, scope: !6983)
!6986 = !DILocation(line: 4432, column: 5, scope: !6983)
!6987 = !DILocation(line: 4435, column: 9, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 4434, column: 5)
!6989 = !DILocation(line: 4435, column: 16, scope: !6988)
!6990 = !DILocation(line: 4437, column: 16, scope: !6988)
!6991 = !DILocation(line: 4436, column: 25, scope: !6988)
!6992 = !DILocation(line: 4436, column: 9, scope: !6988)
!6993 = !DILocation(line: 4436, column: 14, scope: !6988)
!6994 = !DILocation(line: 4436, column: 23, scope: !6988)
!6995 = !DILocation(line: 4439, column: 1, scope: !6965)
!6996 = distinct !DISubprogram(name: "f_haslocaldir", scope: !3, file: !3, line: 5835, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5836, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6997)
!6997 = !{!6998, !6999, !7000, !7036}
!6998 = !DILocalVariable(name: "argvars", arg: 1, scope: !6996, file: !3, line: 5835, type: !2305)
!6999 = !DILocalVariable(name: "rettv", arg: 2, scope: !6996, file: !3, line: 5835, type: !2305)
!7000 = !DILocalVariable(name: "tp", scope: !6996, file: !3, line: 5837, type: !7001)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 64)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "tabpage_T", file: !6, line: 3158, baseType: !7003)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tabpage_S", file: !6, line: 3159, size: 1920, elements: !7004)
!7004 = !{!7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015, !7017, !7018, !7019, !7028, !7030, !7031, !7032, !7034, !7035}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "tp_next", scope: !7003, file: !6, line: 3161, baseType: !7001, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "tp_topframe", scope: !7003, file: !6, line: 3162, baseType: !1300, size: 64, offset: 64)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "tp_curwin", scope: !7003, file: !6, line: 3163, baseType: !1135, size: 64, offset: 128)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prevwin", scope: !7003, file: !6, line: 3164, baseType: !1135, size: 64, offset: 192)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "tp_firstwin", scope: !7003, file: !6, line: 3165, baseType: !1135, size: 64, offset: 256)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "tp_lastwin", scope: !7003, file: !6, line: 3166, baseType: !1135, size: 64, offset: 320)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "tp_first_popupwin", scope: !7003, file: !6, line: 3168, baseType: !1135, size: 64, offset: 384)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "tp_old_Rows", scope: !7003, file: !6, line: 3170, baseType: !765, size: 64, offset: 448)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "tp_old_Columns", scope: !7003, file: !6, line: 3171, baseType: !765, size: 64, offset: 512)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "tp_ch_used", scope: !7003, file: !6, line: 3172, baseType: !765, size: 64, offset: 576)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prev_which_scrollbars", scope: !7003, file: !6, line: 3175, baseType: !7016, size: 96, offset: 640)
!7016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 96, elements: !2490)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "tp_localdir", scope: !7003, file: !6, line: 3179, baseType: !759, size: 64, offset: 768)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prevdir", scope: !7003, file: !6, line: 3181, baseType: !759, size: 64, offset: 832)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "tp_first_diff", scope: !7003, file: !6, line: 3184, baseType: !7020, size: 64, offset: 896)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = !DIDerivedType(tag: DW_TAG_typedef, name: "diff_T", file: !6, line: 3139, baseType: !7022)
!7022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "diffblock_S", file: !6, line: 3140, size: 1088, elements: !7023)
!7023 = !{!7024, !7025, !7027}
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "df_next", scope: !7022, file: !6, line: 3142, baseType: !7020, size: 64)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "df_lnum", scope: !7022, file: !6, line: 3143, baseType: !7026, size: 512, offset: 64)
!7026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !764, size: 512, elements: !1055)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "df_count", scope: !7022, file: !6, line: 3144, baseType: !7026, size: 512, offset: 576)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diffbuf", scope: !7003, file: !6, line: 3185, baseType: !7029, size: 512, offset: 960)
!7029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 512, elements: !1055)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diff_invalid", scope: !7003, file: !6, line: 3186, baseType: !756, size: 32, offset: 1472)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diff_update", scope: !7003, file: !6, line: 3187, baseType: !756, size: 32, offset: 1504)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "tp_snapshot", scope: !7003, file: !6, line: 3189, baseType: !7033, size: 128, offset: 1536)
!7033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 128, elements: !1922)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "tp_winvar", scope: !7003, file: !6, line: 3191, baseType: !869, size: 192, offset: 1664)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vars", scope: !7003, file: !6, line: 3192, baseType: !929, size: 64, offset: 1856)
!7036 = !DILocalVariable(name: "wp", scope: !6996, file: !3, line: 5838, type: !1135)
!7037 = !DILocation(line: 5835, column: 25, scope: !6996)
!7038 = !DILocation(line: 5835, column: 44, scope: !6996)
!7039 = !DILocation(line: 5837, column: 5, scope: !6996)
!7040 = !DILocation(line: 5837, column: 16, scope: !6996)
!7041 = !DILocation(line: 5838, column: 12, scope: !6996)
!7042 = !DILocation(line: 5840, column: 36, scope: !6996)
!7043 = !DILocation(line: 5840, column: 10, scope: !6996)
!7044 = !DILocation(line: 5843, column: 12, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 5843, column: 9)
!7046 = !DILocation(line: 5843, column: 20, scope: !7045)
!7047 = !DILocation(line: 5843, column: 27, scope: !7045)
!7048 = !{!4151, !2693, i64 864}
!7049 = !DILocation(line: 5843, column: 38, scope: !7045)
!7050 = !DILocation(line: 5843, column: 9, scope: !6996)
!7051 = !DILocation(line: 5845, column: 14, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 5845, column: 14)
!7053 = !DILocation(line: 5845, column: 17, scope: !7052)
!7054 = !DILocation(line: 5845, column: 25, scope: !7052)
!7055 = !DILocation(line: 5845, column: 32, scope: !7052)
!7056 = !{!7057, !2693, i64 96}
!7057 = !{!"tabpage_S", !2693, i64 0, !2693, i64 8, !2693, i64 16, !2693, i64 24, !2693, i64 32, !2693, i64 40, !2693, i64 48, !2925, i64 56, !2925, i64 64, !2925, i64 72, !2691, i64 80, !2693, i64 96, !2693, i64 104, !2693, i64 112, !2691, i64 120, !2690, i64 184, !2690, i64 188, !2691, i64 192, !4157, i64 208, !2693, i64 232}
!7058 = !DILocation(line: 5845, column: 44, scope: !7052)
!7059 = !DILocation(line: 5845, column: 14, scope: !7045)
!7060 = !DILocation(line: 5849, column: 1, scope: !6996)
!7061 = distinct !DISubprogram(name: "f_hasmapto", scope: !3, file: !3, line: 5855, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5856, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7062)
!7062 = !{!7063, !7064, !7065, !7066, !7067, !7068}
!7063 = !DILocalVariable(name: "argvars", arg: 1, scope: !7061, file: !3, line: 5855, type: !2305)
!7064 = !DILocalVariable(name: "rettv", arg: 2, scope: !7061, file: !3, line: 5855, type: !2305)
!7065 = !DILocalVariable(name: "name", scope: !7061, file: !3, line: 5857, type: !759)
!7066 = !DILocalVariable(name: "mode", scope: !7061, file: !3, line: 5858, type: !759)
!7067 = !DILocalVariable(name: "buf", scope: !7061, file: !3, line: 5859, type: !3499)
!7068 = !DILocalVariable(name: "abbr", scope: !7061, file: !3, line: 5860, type: !756)
!7069 = !DILocation(line: 5855, column: 22, scope: !7061)
!7070 = !DILocation(line: 5855, column: 41, scope: !7061)
!7071 = !DILocation(line: 5859, column: 5, scope: !7061)
!7072 = !DILocation(line: 5859, column: 12, scope: !7061)
!7073 = !DILocation(line: 5860, column: 10, scope: !7061)
!7074 = !DILocation(line: 5862, column: 12, scope: !7061)
!7075 = !DILocation(line: 5857, column: 13, scope: !7061)
!7076 = !DILocation(line: 5863, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 5863, column: 9)
!7078 = !DILocation(line: 5863, column: 20, scope: !7077)
!7079 = !DILocation(line: 5863, column: 27, scope: !7077)
!7080 = !DILocation(line: 5863, column: 9, scope: !7061)
!7081 = !DILocation(line: 5867, column: 9, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 5866, column: 5)
!7083 = !DILocation(line: 5858, column: 13, scope: !7061)
!7084 = !DILocation(line: 5868, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 5868, column: 6)
!7086 = !DILocation(line: 5868, column: 17, scope: !7085)
!7087 = !DILocation(line: 5868, column: 24, scope: !7085)
!7088 = !DILocation(line: 5868, column: 6, scope: !7082)
!7089 = !DILocation(line: 5869, column: 18, scope: !7085)
!7090 = !DILocation(line: 5869, column: 13, scope: !7085)
!7091 = !DILocation(line: 5869, column: 6, scope: !7085)
!7092 = !DILocation(line: 5872, column: 9, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 5872, column: 9)
!7094 = !DILocation(line: 5876, column: 1, scope: !7061)
!7095 = distinct !DISubprogram(name: "f_hlID", scope: !3, file: !3, line: 5882, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5883, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7096)
!7096 = !{!7097, !7098}
!7097 = !DILocalVariable(name: "argvars", arg: 1, scope: !7095, file: !3, line: 5882, type: !2305)
!7098 = !DILocalVariable(name: "rettv", arg: 2, scope: !7095, file: !3, line: 5882, type: !2305)
!7099 = !DILocation(line: 5882, column: 18, scope: !7095)
!7100 = !DILocation(line: 5882, column: 37, scope: !7095)
!7101 = !DILocation(line: 5884, column: 40, scope: !7095)
!7102 = !DILocation(line: 5884, column: 28, scope: !7095)
!7103 = !DILocation(line: 5884, column: 17, scope: !7095)
!7104 = !DILocation(line: 5884, column: 26, scope: !7095)
!7105 = !DILocation(line: 5885, column: 1, scope: !7095)
!7106 = distinct !DISubprogram(name: "f_hlexists", scope: !3, file: !3, line: 5891, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5892, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7107)
!7107 = !{!7108, !7109}
!7108 = !DILocalVariable(name: "argvars", arg: 1, scope: !7106, file: !3, line: 5891, type: !2305)
!7109 = !DILocalVariable(name: "rettv", arg: 2, scope: !7106, file: !3, line: 5891, type: !2305)
!7110 = !DILocation(line: 5891, column: 22, scope: !7106)
!7111 = !DILocation(line: 5891, column: 41, scope: !7106)
!7112 = !DILocation(line: 5893, column: 45, scope: !7106)
!7113 = !DILocation(line: 5893, column: 28, scope: !7106)
!7114 = !DILocation(line: 5893, column: 17, scope: !7106)
!7115 = !DILocation(line: 5893, column: 26, scope: !7106)
!7116 = !DILocation(line: 5894, column: 1, scope: !7106)
!7117 = distinct !DISubprogram(name: "f_hostname", scope: !3, file: !3, line: 5900, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5901, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7118)
!7118 = !{!7119, !7120, !7121}
!7119 = !DILocalVariable(name: "argvars", arg: 1, scope: !7117, file: !3, line: 5900, type: !2305)
!7120 = !DILocalVariable(name: "rettv", arg: 2, scope: !7117, file: !3, line: 5900, type: !2305)
!7121 = !DILocalVariable(name: "hostname", scope: !7117, file: !3, line: 5902, type: !1283)
!7122 = !DILocation(line: 5900, column: 22, scope: !7117)
!7123 = !DILocation(line: 5900, column: 48, scope: !7117)
!7124 = !DILocation(line: 5902, column: 5, scope: !7117)
!7125 = !DILocation(line: 5902, column: 12, scope: !7117)
!7126 = !DILocation(line: 5904, column: 5, scope: !7117)
!7127 = !DILocation(line: 5905, column: 12, scope: !7117)
!7128 = !DILocation(line: 5905, column: 19, scope: !7117)
!7129 = !DILocation(line: 5906, column: 28, scope: !7117)
!7130 = !DILocation(line: 5906, column: 12, scope: !7117)
!7131 = !DILocation(line: 5906, column: 17, scope: !7117)
!7132 = !DILocation(line: 5906, column: 26, scope: !7117)
!7133 = !DILocation(line: 5907, column: 1, scope: !7117)
!7134 = distinct !DISubprogram(name: "f_iconv", scope: !3, file: !3, line: 5913, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5914, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7135)
!7135 = !{!7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143}
!7136 = !DILocalVariable(name: "argvars", arg: 1, scope: !7134, file: !3, line: 5913, type: !2305)
!7137 = !DILocalVariable(name: "rettv", arg: 2, scope: !7134, file: !3, line: 5913, type: !2305)
!7138 = !DILocalVariable(name: "buf1", scope: !7134, file: !3, line: 5915, type: !3499)
!7139 = !DILocalVariable(name: "buf2", scope: !7134, file: !3, line: 5916, type: !3499)
!7140 = !DILocalVariable(name: "from", scope: !7134, file: !3, line: 5917, type: !759)
!7141 = !DILocalVariable(name: "to", scope: !7134, file: !3, line: 5917, type: !759)
!7142 = !DILocalVariable(name: "str", scope: !7134, file: !3, line: 5917, type: !759)
!7143 = !DILocalVariable(name: "vimconv", scope: !7134, file: !3, line: 5918, type: !7144)
!7144 = !DIDerivedType(tag: DW_TAG_typedef, name: "vimconv_T", file: !6, line: 1186, baseType: !7145)
!7145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1174, size: 192, elements: !7146)
!7146 = !{!7147, !7148, !7149, !7152}
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "vc_type", scope: !7145, file: !6, line: 1176, baseType: !756, size: 32)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "vc_factor", scope: !7145, file: !6, line: 1177, baseType: !756, size: 32, offset: 32)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "vc_fd", scope: !7145, file: !6, line: 1183, baseType: !7150, size: 64, offset: 64)
!7150 = !DIDerivedType(tag: DW_TAG_typedef, name: "iconv_t", file: !7151, line: 29, baseType: !750)
!7151 = !DIFile(filename: "/usr/include/iconv.h", directory: "/home/sahil/vim/src")
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "vc_fail", scope: !7145, file: !6, line: 1185, baseType: !756, size: 32, offset: 128)
!7153 = !DILocation(line: 5913, column: 19, scope: !7134)
!7154 = !DILocation(line: 5913, column: 45, scope: !7134)
!7155 = !DILocation(line: 5915, column: 5, scope: !7134)
!7156 = !DILocation(line: 5915, column: 12, scope: !7134)
!7157 = !DILocation(line: 5916, column: 5, scope: !7134)
!7158 = !DILocation(line: 5916, column: 12, scope: !7134)
!7159 = !DILocation(line: 5918, column: 5, scope: !7134)
!7160 = !DILocation(line: 5920, column: 12, scope: !7134)
!7161 = !DILocation(line: 5920, column: 19, scope: !7134)
!7162 = !DILocation(line: 5921, column: 12, scope: !7134)
!7163 = !DILocation(line: 5921, column: 17, scope: !7134)
!7164 = !DILocation(line: 5921, column: 26, scope: !7134)
!7165 = !DILocation(line: 5923, column: 11, scope: !7134)
!7166 = !DILocation(line: 5917, column: 25, scope: !7134)
!7167 = !DILocation(line: 5924, column: 53, scope: !7134)
!7168 = !DILocation(line: 5924, column: 34, scope: !7134)
!7169 = !DILocation(line: 5924, column: 25, scope: !7134)
!7170 = !DILocation(line: 5924, column: 12, scope: !7134)
!7171 = !DILocation(line: 5917, column: 13, scope: !7134)
!7172 = !DILocation(line: 5925, column: 51, scope: !7134)
!7173 = !DILocation(line: 5925, column: 32, scope: !7134)
!7174 = !DILocation(line: 5925, column: 23, scope: !7134)
!7175 = !DILocation(line: 5925, column: 10, scope: !7134)
!7176 = !DILocation(line: 5917, column: 20, scope: !7134)
!7177 = !DILocation(line: 5926, column: 13, scope: !7134)
!7178 = !DILocation(line: 5926, column: 21, scope: !7134)
!7179 = !{!7180, !2690, i64 0}
!7180 = !{!"", !2690, i64 0, !2690, i64 4, !2693, i64 8, !2690, i64 16}
!7181 = !DILocation(line: 5918, column: 15, scope: !7134)
!7182 = !DILocation(line: 5927, column: 5, scope: !7134)
!7183 = !DILocation(line: 5930, column: 17, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 5930, column: 9)
!7185 = !DILocation(line: 5930, column: 25, scope: !7184)
!7186 = !DILocation(line: 5930, column: 9, scope: !7134)
!7187 = !DILocation(line: 5931, column: 25, scope: !7184)
!7188 = !DILocation(line: 5931, column: 2, scope: !7184)
!7189 = !DILocation(line: 5933, column: 25, scope: !7184)
!7190 = !DILocation(line: 5935, column: 5, scope: !7134)
!7191 = !DILocation(line: 5936, column: 5, scope: !7134)
!7192 = !DILocation(line: 5937, column: 5, scope: !7134)
!7193 = !DILocation(line: 5938, column: 1, scope: !7134)
!7194 = distinct !DISubprogram(name: "f_index", scope: !3, file: !3, line: 5944, type: !2538, isLocal: true, isDefinition: true, scopeLine: 5945, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7195)
!7195 = !{!7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7207}
!7196 = !DILocalVariable(name: "argvars", arg: 1, scope: !7194, file: !3, line: 5944, type: !2305)
!7197 = !DILocalVariable(name: "rettv", arg: 2, scope: !7194, file: !3, line: 5944, type: !2305)
!7198 = !DILocalVariable(name: "l", scope: !7194, file: !3, line: 5946, type: !885)
!7199 = !DILocalVariable(name: "item", scope: !7194, file: !3, line: 5947, type: !890)
!7200 = !DILocalVariable(name: "b", scope: !7194, file: !3, line: 5948, type: !2370)
!7201 = !DILocalVariable(name: "idx", scope: !7194, file: !3, line: 5949, type: !765)
!7202 = !DILocalVariable(name: "ic", scope: !7194, file: !3, line: 5950, type: !756)
!7203 = !DILocalVariable(name: "error", scope: !7194, file: !3, line: 5951, type: !756)
!7204 = !DILocalVariable(name: "tv", scope: !7205, file: !3, line: 5956, type: !873)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 5955, column: 5)
!7206 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 5954, column: 9)
!7207 = !DILocalVariable(name: "start", scope: !7205, file: !3, line: 5957, type: !756)
!7208 = !DILocation(line: 5944, column: 19, scope: !7194)
!7209 = !DILocation(line: 5944, column: 38, scope: !7194)
!7210 = !DILocation(line: 5949, column: 10, scope: !7194)
!7211 = !DILocation(line: 5950, column: 10, scope: !7194)
!7212 = !DILocation(line: 5951, column: 5, scope: !7194)
!7213 = !DILocation(line: 5951, column: 10, scope: !7194)
!7214 = !DILocation(line: 5953, column: 17, scope: !7194)
!7215 = !DILocation(line: 5953, column: 26, scope: !7194)
!7216 = !DILocation(line: 5954, column: 20, scope: !7206)
!7217 = !DILocation(line: 5954, column: 9, scope: !7194)
!7218 = !DILocation(line: 5956, column: 2, scope: !7205)
!7219 = !DILocation(line: 5957, column: 7, scope: !7205)
!7220 = !DILocation(line: 5959, column: 6, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 5959, column: 6)
!7222 = !DILocation(line: 5959, column: 17, scope: !7221)
!7223 = !DILocation(line: 5959, column: 24, scope: !7221)
!7224 = !DILocation(line: 5959, column: 6, scope: !7205)
!7225 = !DILocation(line: 5961, column: 14, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 5960, column: 2)
!7227 = !DILocation(line: 5962, column: 10, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 5962, column: 10)
!7229 = !DILocation(line: 5962, column: 10, scope: !7226)
!7230 = !DILocation(line: 5965, column: 17, scope: !7205)
!7231 = !DILocation(line: 5965, column: 22, scope: !7205)
!7232 = !DILocation(line: 5948, column: 13, scope: !7194)
!7233 = !DILocation(line: 5966, column: 8, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 5966, column: 6)
!7235 = !DILocation(line: 5966, column: 6, scope: !7205)
!7236 = !DILocation(line: 5968, column: 12, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 5968, column: 6)
!7238 = !DILocation(line: 5968, column: 6, scope: !7205)
!7239 = !DILocation(line: 5970, column: 14, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 5969, column: 2)
!7241 = !DILocation(line: 5971, column: 10, scope: !7240)
!7242 = !DILocation(line: 5973, column: 2, scope: !7240)
!7243 = !DILocation(line: 5975, column: 13, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 5975, column: 2)
!7245 = !DILocation(line: 5975, column: 26, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 5975, column: 2)
!7247 = !DILocation(line: 5975, column: 24, scope: !7246)
!7248 = !DILocation(line: 5975, column: 2, scope: !7244)
!7249 = !DILocation(line: 5977, column: 16, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 5976, column: 2)
!7251 = !DILocation(line: 5978, column: 37, scope: !7250)
!7252 = !DILocation(line: 5978, column: 25, scope: !7250)
!7253 = !DILocation(line: 5978, column: 23, scope: !7250)
!7254 = !DILocation(line: 5956, column: 11, scope: !7205)
!7255 = !DILocation(line: 5979, column: 10, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 5979, column: 10)
!7257 = !DILocation(line: 5979, column: 10, scope: !7250)
!7258 = !DILocation(line: 5981, column: 24, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 5980, column: 6)
!7260 = !DILocation(line: 5982, column: 3, scope: !7259)
!7261 = !DILocation(line: 5975, column: 39, scope: !7246)
!7262 = distinct !{!7262, !7248, !7263}
!7263 = !DILocation(line: 5984, column: 2, scope: !7244)
!7264 = !DILocation(line: 5986, column: 5, scope: !7206)
!7265 = !DILocation(line: 5989, column: 7, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 5988, column: 5)
!7267 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 5987, column: 14)
!7268 = !DILocation(line: 5989, column: 2, scope: !7266)
!7269 = !DILocation(line: 5990, column: 2, scope: !7266)
!7270 = !DILocation(line: 5993, column: 20, scope: !7194)
!7271 = !DILocation(line: 5993, column: 25, scope: !7194)
!7272 = !DILocation(line: 5946, column: 13, scope: !7194)
!7273 = !DILocation(line: 5994, column: 11, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 5994, column: 9)
!7275 = !DILocation(line: 5994, column: 9, scope: !7194)
!7276 = !DILocation(line: 5996, column: 2, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 5996, column: 2)
!7278 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 5995, column: 5)
!7279 = !DILocation(line: 5996, column: 2, scope: !7278)
!7280 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !7281)
!7281 = distinct !DILocation(line: 5996, column: 2, scope: !7277)
!7282 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !7281)
!7283 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !7281)
!7284 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !7281)
!7285 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !7281)
!7286 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !7281)
!7287 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !7281)
!7288 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !7281)
!7289 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !7281)
!7290 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !7281)
!7291 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !7281)
!7292 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !7281)
!7293 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !7281)
!7294 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !7281)
!7295 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !7281)
!7296 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !7281)
!7297 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !7281)
!7298 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !7281)
!7299 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !7281)
!7300 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !7281)
!7301 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !7281)
!7302 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !7281)
!7303 = !DILocation(line: 5997, column: 12, scope: !7278)
!7304 = !DILocation(line: 5947, column: 17, scope: !7194)
!7305 = !DILocation(line: 5998, column: 6, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 5998, column: 6)
!7307 = !DILocation(line: 5998, column: 17, scope: !7306)
!7308 = !DILocation(line: 5998, column: 24, scope: !7306)
!7309 = !DILocation(line: 5998, column: 6, scope: !7278)
!7310 = !DILocation(line: 6002, column: 32, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 5999, column: 2)
!7312 = !DILocation(line: 6002, column: 13, scope: !7311)
!7313 = !DILocation(line: 6003, column: 24, scope: !7311)
!7314 = !DILocation(line: 6003, column: 12, scope: !7311)
!7315 = !DILocation(line: 6004, column: 10, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 6004, column: 10)
!7317 = !DILocation(line: 6004, column: 21, scope: !7316)
!7318 = !DILocation(line: 6004, column: 28, scope: !7316)
!7319 = !DILocation(line: 6004, column: 10, scope: !7311)
!7320 = !DILocation(line: 6005, column: 13, scope: !7316)
!7321 = !DILocation(line: 6005, column: 8, scope: !7316)
!7322 = !DILocation(line: 6005, column: 3, scope: !7316)
!7323 = !DILocation(line: 6006, column: 10, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 6006, column: 10)
!7325 = !DILocation(line: 6010, column: 15, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 6010, column: 2)
!7327 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 6010, column: 2)
!7328 = !DILocation(line: 6010, column: 2, scope: !7327)
!7329 = !DILocation(line: 6011, column: 26, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 6011, column: 10)
!7331 = !DILocation(line: 6011, column: 10, scope: !7330)
!7332 = !DILocation(line: 6011, column: 10, scope: !7326)
!7333 = !DILocation(line: 6013, column: 24, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 6012, column: 6)
!7335 = !DILocation(line: 6014, column: 3, scope: !7334)
!7336 = !DILocation(line: 6010, column: 37, scope: !7326)
!7337 = !DILocation(line: 6010, column: 46, scope: !7326)
!7338 = distinct !{!7338, !7328, !7339}
!7339 = !DILocation(line: 6015, column: 6, scope: !7327)
!7340 = !DILocation(line: 6017, column: 1, scope: !7194)
!7341 = distinct !DISubprogram(name: "f_input", scope: !3, file: !3, line: 6026, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6027, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7342)
!7342 = !{!7343, !7344}
!7343 = !DILocalVariable(name: "argvars", arg: 1, scope: !7341, file: !3, line: 6026, type: !2305)
!7344 = !DILocalVariable(name: "rettv", arg: 2, scope: !7341, file: !3, line: 6026, type: !2305)
!7345 = !DILocation(line: 6026, column: 19, scope: !7341)
!7346 = !DILocation(line: 6026, column: 38, scope: !7341)
!7347 = !DILocation(line: 6028, column: 43, scope: !7341)
!7348 = !DILocation(line: 6028, column: 5, scope: !7341)
!7349 = !DILocation(line: 6029, column: 1, scope: !7341)
!7350 = distinct !DISubprogram(name: "f_inputdialog", scope: !3, file: !3, line: 6035, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6036, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7351)
!7351 = !{!7352, !7353, !7354, !7357, !7358}
!7352 = !DILocalVariable(name: "argvars", arg: 1, scope: !7350, file: !3, line: 6035, type: !2305)
!7353 = !DILocalVariable(name: "rettv", arg: 2, scope: !7350, file: !3, line: 6035, type: !2305)
!7354 = !DILocalVariable(name: "message", scope: !7355, file: !3, line: 6041, type: !759)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 6040, column: 5)
!7356 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 6039, column: 9)
!7357 = !DILocalVariable(name: "buf", scope: !7355, file: !3, line: 6042, type: !3499)
!7358 = !DILocalVariable(name: "defstr", scope: !7355, file: !3, line: 6043, type: !759)
!7359 = !DILocation(line: 6035, column: 25, scope: !7350)
!7360 = !DILocation(line: 6035, column: 44, scope: !7350)
!7361 = !DILocation(line: 6039, column: 13, scope: !7356)
!7362 = !DILocation(line: 6039, column: 9, scope: !7356)
!7363 = !DILocation(line: 6039, column: 20, scope: !7356)
!7364 = !DILocation(line: 6039, column: 34, scope: !7356)
!7365 = !DILocation(line: 6039, column: 23, scope: !7356)
!7366 = !DILocation(line: 6039, column: 54, scope: !7356)
!7367 = !DILocation(line: 6039, column: 9, scope: !7350)
!7368 = !DILocation(line: 6042, column: 2, scope: !7355)
!7369 = !DILocation(line: 6042, column: 9, scope: !7355)
!7370 = !DILocation(line: 6045, column: 12, scope: !7355)
!7371 = !DILocation(line: 6041, column: 10, scope: !7355)
!7372 = !DILocation(line: 6046, column: 6, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 6046, column: 6)
!7374 = !DILocation(line: 6046, column: 17, scope: !7373)
!7375 = !DILocation(line: 6046, column: 24, scope: !7373)
!7376 = !DILocation(line: 6047, column: 3, scope: !7373)
!7377 = !DILocation(line: 6047, column: 16, scope: !7373)
!7378 = !DILocation(line: 6043, column: 10, scope: !7355)
!7379 = !DILocation(line: 6047, column: 57, scope: !7373)
!7380 = !DILocation(line: 6046, column: 6, scope: !7355)
!7381 = !DILocation(line: 6048, column: 18, scope: !7373)
!7382 = !DILocation(line: 6048, column: 6, scope: !7373)
!7383 = !DILocation(line: 6050, column: 6, scope: !7373)
!7384 = !DILocation(line: 6050, column: 16, scope: !7373)
!7385 = !DILocation(line: 6051, column: 14, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 6051, column: 6)
!7387 = !DILocation(line: 6051, column: 32, scope: !7386)
!7388 = !DILocation(line: 6051, column: 22, scope: !7386)
!7389 = !DILocation(line: 6053, column: 16, scope: !7386)
!7390 = !DILocation(line: 6053, column: 38, scope: !7386)
!7391 = !DILocation(line: 6052, column: 6, scope: !7386)
!7392 = !DILocation(line: 6053, column: 53, scope: !7386)
!7393 = !DILocation(line: 6051, column: 6, scope: !7355)
!7394 = !DILocation(line: 6054, column: 41, scope: !7386)
!7395 = !DILocation(line: 6054, column: 29, scope: !7386)
!7396 = !DILocation(line: 6054, column: 6, scope: !7386)
!7397 = !DILocation(line: 6058, column: 20, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 6057, column: 10)
!7399 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 6056, column: 2)
!7400 = !DILocation(line: 6058, column: 27, scope: !7398)
!7401 = !DILocation(line: 6059, column: 6, scope: !7398)
!7402 = !DILocation(line: 6059, column: 9, scope: !7398)
!7403 = !DILocation(line: 6059, column: 20, scope: !7398)
!7404 = !DILocation(line: 6059, column: 27, scope: !7398)
!7405 = !DILocation(line: 6057, column: 10, scope: !7399)
!7406 = !DILocation(line: 6061, column: 11, scope: !7398)
!7407 = !DILocation(line: 6060, column: 26, scope: !7398)
!7408 = !DILocation(line: 6060, column: 3, scope: !7398)
!7409 = !DILocation(line: 6065, column: 9, scope: !7355)
!7410 = !DILocation(line: 6065, column: 16, scope: !7355)
!7411 = !DILocation(line: 6066, column: 5, scope: !7356)
!7412 = !DILocation(line: 6066, column: 5, scope: !7355)
!7413 = !DILocation(line: 6069, column: 39, scope: !7356)
!7414 = !DILocation(line: 6069, column: 2, scope: !7356)
!7415 = !DILocation(line: 6070, column: 1, scope: !7350)
!7416 = distinct !DISubprogram(name: "f_inputlist", scope: !3, file: !3, line: 6076, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6077, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7417)
!7417 = !{!7418, !7419, !7420, !7421, !7422, !7423}
!7418 = !DILocalVariable(name: "argvars", arg: 1, scope: !7416, file: !3, line: 6076, type: !2305)
!7419 = !DILocalVariable(name: "rettv", arg: 2, scope: !7416, file: !3, line: 6076, type: !2305)
!7420 = !DILocalVariable(name: "l", scope: !7416, file: !3, line: 6078, type: !885)
!7421 = !DILocalVariable(name: "li", scope: !7416, file: !3, line: 6079, type: !890)
!7422 = !DILocalVariable(name: "selected", scope: !7416, file: !3, line: 6080, type: !756)
!7423 = !DILocalVariable(name: "mouse_used", scope: !7416, file: !3, line: 6081, type: !756)
!7424 = !DILocation(line: 6076, column: 23, scope: !7416)
!7425 = !DILocation(line: 6076, column: 42, scope: !7416)
!7426 = !DILocation(line: 6081, column: 5, scope: !7416)
!7427 = !DILocation(line: 6086, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6086, column: 9)
!7429 = !DILocation(line: 6086, column: 28, scope: !7428)
!7430 = !DILocation(line: 6086, column: 32, scope: !7428)
!7431 = !DILocation(line: 6086, column: 9, scope: !7416)
!7432 = !DILocation(line: 6089, column: 20, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6089, column: 9)
!7434 = !DILocation(line: 6089, column: 27, scope: !7433)
!7435 = !DILocation(line: 6089, column: 39, scope: !7433)
!7436 = !DILocation(line: 6089, column: 53, scope: !7433)
!7437 = !DILocation(line: 6089, column: 58, scope: !7433)
!7438 = !DILocation(line: 6089, column: 65, scope: !7433)
!7439 = !DILocation(line: 6089, column: 9, scope: !7416)
!7440 = !DILocation(line: 6091, column: 8, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 6090, column: 5)
!7442 = !DILocation(line: 6091, column: 2, scope: !7441)
!7443 = !DILocation(line: 6092, column: 2, scope: !7441)
!7444 = !DILocation(line: 6095, column: 5, scope: !7416)
!7445 = !DILocation(line: 6096, column: 15, scope: !7416)
!7446 = !DILocation(line: 6096, column: 13, scope: !7416)
!7447 = !DILocation(line: 6097, column: 16, scope: !7416)
!7448 = !DILocation(line: 6098, column: 16, scope: !7416)
!7449 = !DILocation(line: 6099, column: 5, scope: !7416)
!7450 = !DILocation(line: 6101, column: 25, scope: !7416)
!7451 = !DILocation(line: 6078, column: 13, scope: !7416)
!7452 = !DILocation(line: 6102, column: 5, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6102, column: 5)
!7454 = !DILocation(line: 6102, column: 5, scope: !7416)
!7455 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !7456)
!7456 = distinct !DILocation(line: 6102, column: 5, scope: !7453)
!7457 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !7456)
!7458 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !7456)
!7459 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !7456)
!7460 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !7456)
!7461 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !7456)
!7462 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !7456)
!7463 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !7456)
!7464 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !7456)
!7465 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !7456)
!7466 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !7456)
!7467 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !7456)
!7468 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !7456)
!7469 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !7456)
!7470 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !7456)
!7471 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !7456)
!7472 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !7456)
!7473 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !7456)
!7474 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !7456)
!7475 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !7456)
!7476 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !7456)
!7477 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !7456)
!7478 = !DILocation(line: 6103, column: 5, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6103, column: 5)
!7480 = !DILocation(line: 6079, column: 17, scope: !7416)
!7481 = !DILocation(line: 6103, column: 5, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 6103, column: 5)
!7483 = !DILocation(line: 6105, column: 38, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 6104, column: 5)
!7485 = !DILocation(line: 6105, column: 19, scope: !7484)
!7486 = !DILocation(line: 6105, column: 2, scope: !7484)
!7487 = !DILocation(line: 6106, column: 2, scope: !7484)
!7488 = distinct !{!7488, !7478, !7489}
!7489 = !DILocation(line: 6107, column: 5, scope: !7479)
!7490 = !DILocation(line: 6081, column: 10, scope: !7416)
!7491 = !DILocation(line: 6110, column: 16, scope: !7416)
!7492 = !DILocation(line: 6080, column: 10, scope: !7416)
!7493 = !DILocation(line: 6111, column: 9, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 6111, column: 9)
!7495 = !DILocation(line: 6112, column: 14, scope: !7494)
!7496 = !DILocation(line: 6111, column: 9, scope: !7416)
!7497 = !DILocation(line: 6114, column: 28, scope: !7416)
!7498 = !DILocation(line: 6114, column: 17, scope: !7416)
!7499 = !DILocation(line: 6114, column: 26, scope: !7416)
!7500 = !DILocation(line: 6115, column: 1, scope: !7416)
!7501 = distinct !DISubprogram(name: "f_inputrestore", scope: !3, file: !3, line: 6123, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6124, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7502)
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "argvars", arg: 1, scope: !7501, file: !3, line: 6123, type: !2305)
!7504 = !DILocalVariable(name: "rettv", arg: 2, scope: !7501, file: !3, line: 6123, type: !2305)
!7505 = !DILocation(line: 6123, column: 26, scope: !7501)
!7506 = !DILocation(line: 6123, column: 52, scope: !7501)
!7507 = !DILocation(line: 6125, column: 22, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 6125, column: 9)
!7509 = !DILocation(line: 6125, column: 29, scope: !7508)
!7510 = !DILocation(line: 6125, column: 9, scope: !7501)
!7511 = !DILocation(line: 6127, column: 2, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 6126, column: 5)
!7513 = !DILocation(line: 6128, column: 46, scope: !7512)
!7514 = !DILocation(line: 6129, column: 14, scope: !7512)
!7515 = !DILocation(line: 6128, column: 2, scope: !7512)
!7516 = !DILocation(line: 6131, column: 5, scope: !7512)
!7517 = !DILocation(line: 6132, column: 14, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 6132, column: 14)
!7519 = !DILocation(line: 6132, column: 24, scope: !7518)
!7520 = !DILocation(line: 6132, column: 14, scope: !7508)
!7521 = !DILocation(line: 6134, column: 11, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 6133, column: 5)
!7523 = !DILocation(line: 6134, column: 2, scope: !7522)
!7524 = !DILocation(line: 6135, column: 14, scope: !7522)
!7525 = !DILocation(line: 6135, column: 23, scope: !7522)
!7526 = !DILocation(line: 6136, column: 5, scope: !7522)
!7527 = !DILocation(line: 6137, column: 1, scope: !7501)
!7528 = distinct !DISubprogram(name: "f_inputsave", scope: !3, file: !3, line: 6143, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6144, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7529)
!7529 = !{!7530, !7531}
!7530 = !DILocalVariable(name: "argvars", arg: 1, scope: !7528, file: !3, line: 6143, type: !2305)
!7531 = !DILocalVariable(name: "rettv", arg: 2, scope: !7528, file: !3, line: 6143, type: !2305)
!7532 = !DILocation(line: 6143, column: 23, scope: !7528)
!7533 = !DILocation(line: 6143, column: 49, scope: !7528)
!7534 = !DILocation(line: 6146, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 6146, column: 9)
!7536 = !DILocation(line: 6146, column: 35, scope: !7535)
!7537 = !DILocation(line: 6146, column: 9, scope: !7528)
!7538 = !DILocation(line: 6148, column: 43, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 6147, column: 5)
!7540 = !DILocation(line: 6149, column: 29, scope: !7539)
!7541 = !DILocation(line: 6149, column: 14, scope: !7539)
!7542 = !DILocation(line: 6148, column: 2, scope: !7539)
!7543 = !DILocation(line: 6150, column: 2, scope: !7539)
!7544 = !DILocation(line: 6152, column: 5, scope: !7539)
!7545 = !DILocation(line: 6154, column: 14, scope: !7535)
!7546 = !DILocation(line: 6154, column: 23, scope: !7535)
!7547 = !DILocation(line: 6155, column: 1, scope: !7528)
!7548 = distinct !DISubprogram(name: "f_inputsecret", scope: !3, file: !3, line: 6161, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6162, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7549)
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "argvars", arg: 1, scope: !7548, file: !3, line: 6161, type: !2305)
!7551 = !DILocalVariable(name: "rettv", arg: 2, scope: !7548, file: !3, line: 6161, type: !2305)
!7552 = !DILocation(line: 6161, column: 25, scope: !7548)
!7553 = !DILocation(line: 6161, column: 44, scope: !7548)
!7554 = !DILocation(line: 6163, column: 5, scope: !7548)
!7555 = !DILocation(line: 6164, column: 5, scope: !7548)
!7556 = !DILocation(line: 6026, column: 19, scope: !7341, inlinedAt: !7557)
!7557 = distinct !DILocation(line: 6165, column: 5, scope: !7548)
!7558 = !DILocation(line: 6026, column: 38, scope: !7341, inlinedAt: !7557)
!7559 = !DILocation(line: 6028, column: 5, scope: !7341, inlinedAt: !7557)
!7560 = !DILocation(line: 6166, column: 5, scope: !7548)
!7561 = !DILocation(line: 6167, column: 5, scope: !7548)
!7562 = !DILocation(line: 6168, column: 1, scope: !7548)
!7563 = distinct !DISubprogram(name: "f_interrupt", scope: !3, file: !3, line: 6174, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6175, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7564)
!7564 = !{!7565, !7566}
!7565 = !DILocalVariable(name: "argvars", arg: 1, scope: !7563, file: !3, line: 6174, type: !2305)
!7566 = !DILocalVariable(name: "rettv", arg: 2, scope: !7563, file: !3, line: 6174, type: !2305)
!7567 = !DILocation(line: 6174, column: 23, scope: !7563)
!7568 = !DILocation(line: 6174, column: 49, scope: !7563)
!7569 = !DILocation(line: 6176, column: 13, scope: !7563)
!7570 = !DILocation(line: 6177, column: 1, scope: !7563)
!7571 = distinct !DISubprogram(name: "f_invert", scope: !3, file: !3, line: 6183, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6184, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7572)
!7572 = !{!7573, !7574}
!7573 = !DILocalVariable(name: "argvars", arg: 1, scope: !7571, file: !3, line: 6183, type: !2305)
!7574 = !DILocalVariable(name: "rettv", arg: 2, scope: !7571, file: !3, line: 6183, type: !2305)
!7575 = !DILocation(line: 6183, column: 20, scope: !7571)
!7576 = !DILocation(line: 6183, column: 39, scope: !7571)
!7577 = !DILocation(line: 6185, column: 29, scope: !7571)
!7578 = !DILocation(line: 6185, column: 28, scope: !7571)
!7579 = !DILocation(line: 6185, column: 17, scope: !7571)
!7580 = !DILocation(line: 6185, column: 26, scope: !7571)
!7581 = !DILocation(line: 6186, column: 1, scope: !7571)
!7582 = distinct !DISubprogram(name: "f_isinf", scope: !3, file: !3, line: 6241, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6242, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7583)
!7583 = !{!7584, !7585}
!7584 = !DILocalVariable(name: "argvars", arg: 1, scope: !7582, file: !3, line: 6241, type: !2305)
!7585 = !DILocalVariable(name: "rettv", arg: 2, scope: !7582, file: !3, line: 6241, type: !2305)
!7586 = !DILocation(line: 6241, column: 19, scope: !7582)
!7587 = !DILocation(line: 6241, column: 38, scope: !7582)
!7588 = !DILocation(line: 6243, column: 20, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 6243, column: 9)
!7590 = !DILocation(line: 6243, column: 27, scope: !7589)
!7591 = !DILocation(line: 6243, column: 40, scope: !7589)
!7592 = !DILocation(line: 6243, column: 43, scope: !7589)
!7593 = !DILocation(line: 6243, column: 9, scope: !7582)
!7594 = !DILocation(line: 6244, column: 49, scope: !7589)
!7595 = !DILocation(line: 6244, column: 25, scope: !7589)
!7596 = !DILocation(line: 6244, column: 14, scope: !7589)
!7597 = !DILocation(line: 6244, column: 23, scope: !7589)
!7598 = !DILocation(line: 6244, column: 2, scope: !7589)
!7599 = !DILocation(line: 6245, column: 1, scope: !7582)
!7600 = distinct !DISubprogram(name: "f_islocked", scope: !3, file: !3, line: 6192, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6193, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7601)
!7601 = !{!7602, !7603, !7604, !7624, !7625}
!7602 = !DILocalVariable(name: "argvars", arg: 1, scope: !7600, file: !3, line: 6192, type: !2305)
!7603 = !DILocalVariable(name: "rettv", arg: 2, scope: !7600, file: !3, line: 6192, type: !2305)
!7604 = !DILocalVariable(name: "lv", scope: !7600, file: !3, line: 6194, type: !7605)
!7605 = !DIDerivedType(tag: DW_TAG_typedef, name: "lval_T", file: !6, line: 4212, baseType: !7606)
!7606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lval_S", file: !6, line: 4192, size: 960, elements: !7607)
!7607 = !{!7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623}
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "ll_name", scope: !7606, file: !6, line: 4194, baseType: !759, size: 64)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "ll_name_end", scope: !7606, file: !6, line: 4195, baseType: !759, size: 64, offset: 64)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "ll_type", scope: !7606, file: !6, line: 4196, baseType: !798, size: 64, offset: 128)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "ll_exp_name", scope: !7606, file: !6, line: 4197, baseType: !759, size: 64, offset: 192)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "ll_tv", scope: !7606, file: !6, line: 4198, baseType: !2305, size: 64, offset: 256)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "ll_li", scope: !7606, file: !6, line: 4201, baseType: !890, size: 64, offset: 320)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "ll_list", scope: !7606, file: !6, line: 4202, baseType: !885, size: 64, offset: 384)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "ll_range", scope: !7606, file: !6, line: 4203, baseType: !756, size: 32, offset: 448)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "ll_empty2", scope: !7606, file: !6, line: 4204, baseType: !756, size: 32, offset: 480)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "ll_n1", scope: !7606, file: !6, line: 4205, baseType: !765, size: 64, offset: 512)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "ll_n2", scope: !7606, file: !6, line: 4206, baseType: !765, size: 64, offset: 576)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "ll_dict", scope: !7606, file: !6, line: 4207, baseType: !929, size: 64, offset: 640)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "ll_di", scope: !7606, file: !6, line: 4208, baseType: !2464, size: 64, offset: 704)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "ll_newkey", scope: !7606, file: !6, line: 4209, baseType: !759, size: 64, offset: 768)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "ll_valtype", scope: !7606, file: !6, line: 4210, baseType: !798, size: 64, offset: 832)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "ll_blob", scope: !7606, file: !6, line: 4211, baseType: !2370, size: 64, offset: 896)
!7624 = !DILocalVariable(name: "end", scope: !7600, file: !3, line: 6195, type: !759)
!7625 = !DILocalVariable(name: "di", scope: !7600, file: !3, line: 6196, type: !2464)
!7626 = !DILocation(line: 6192, column: 22, scope: !7600)
!7627 = !DILocation(line: 6192, column: 41, scope: !7600)
!7628 = !DILocation(line: 6194, column: 5, scope: !7600)
!7629 = !DILocation(line: 6198, column: 17, scope: !7600)
!7630 = !DILocation(line: 6198, column: 26, scope: !7600)
!7631 = !DILocation(line: 6199, column: 20, scope: !7600)
!7632 = !DILocation(line: 6194, column: 12, scope: !7600)
!7633 = !DILocation(line: 6199, column: 11, scope: !7600)
!7634 = !DILocation(line: 6195, column: 13, scope: !7600)
!7635 = !DILocation(line: 6201, column: 13, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 6201, column: 9)
!7637 = !DILocation(line: 6201, column: 21, scope: !7636)
!7638 = !DILocation(line: 6201, column: 27, scope: !7636)
!7639 = !{!7640, !2693, i64 0}
!7640 = !{!"lval_S", !2693, i64 0, !2693, i64 8, !2693, i64 16, !2693, i64 24, !2693, i64 32, !2693, i64 40, !2693, i64 48, !2690, i64 56, !2690, i64 60, !2925, i64 64, !2925, i64 72, !2693, i64 80, !2693, i64 88, !2693, i64 96, !2693, i64 104, !2693, i64 112}
!7641 = !DILocation(line: 6201, column: 35, scope: !7636)
!7642 = !DILocation(line: 6201, column: 9, scope: !7600)
!7643 = !DILocation(line: 6203, column: 6, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 6203, column: 6)
!7645 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 6202, column: 5)
!7646 = !DILocation(line: 6203, column: 11, scope: !7644)
!7647 = !DILocation(line: 6203, column: 6, scope: !7645)
!7648 = !DILocation(line: 6204, column: 12, scope: !7644)
!7649 = !DILocation(line: 6204, column: 6, scope: !7644)
!7650 = !DILocation(line: 6207, column: 13, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 6207, column: 10)
!7652 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 6206, column: 2)
!7653 = !{!7640, !2693, i64 32}
!7654 = !DILocation(line: 6207, column: 19, scope: !7651)
!7655 = !DILocation(line: 6207, column: 10, scope: !7652)
!7656 = !DILocation(line: 6209, column: 8, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 6208, column: 6)
!7658 = !DILocation(line: 6196, column: 17, scope: !7600)
!7659 = !DILocation(line: 6210, column: 10, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 6210, column: 7)
!7661 = !DILocation(line: 6210, column: 7, scope: !7657)
!7662 = !DILocation(line: 6216, column: 36, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 6211, column: 3)
!7664 = !{!4157, !2691, i64 16}
!7665 = !DILocation(line: 6216, column: 45, scope: !7663)
!7666 = !DILocation(line: 6217, column: 10, scope: !7663)
!7667 = !DILocation(line: 6217, column: 30, scope: !7663)
!7668 = !DILocation(line: 6217, column: 13, scope: !7663)
!7669 = !DILocation(line: 6216, column: 28, scope: !7663)
!7670 = !DILocation(line: 6218, column: 3, scope: !7663)
!7671 = !DILocation(line: 6220, column: 18, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 6220, column: 15)
!7673 = !{!7640, !2690, i64 56}
!7674 = !DILocation(line: 6220, column: 15, scope: !7672)
!7675 = !DILocation(line: 6220, column: 15, scope: !7651)
!7676 = !DILocation(line: 6221, column: 8, scope: !7672)
!7677 = !DILocation(line: 6221, column: 3, scope: !7672)
!7678 = !DILocation(line: 6222, column: 18, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 6222, column: 15)
!7680 = !{!7640, !2693, i64 96}
!7681 = !DILocation(line: 6222, column: 28, scope: !7679)
!7682 = !DILocation(line: 6222, column: 15, scope: !7672)
!7683 = !DILocation(line: 6223, column: 9, scope: !7679)
!7684 = !DILocation(line: 6223, column: 26, scope: !7679)
!7685 = !DILocation(line: 6223, column: 3, scope: !7679)
!7686 = !DILocation(line: 6224, column: 18, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6224, column: 15)
!7688 = !{!7640, !2693, i64 48}
!7689 = !DILocation(line: 6224, column: 26, scope: !7687)
!7690 = !DILocation(line: 6224, column: 15, scope: !7679)
!7691 = !DILocation(line: 6226, column: 42, scope: !7687)
!7692 = !{!7640, !2693, i64 40}
!7693 = !DILocation(line: 6226, column: 49, scope: !7687)
!7694 = !DILocation(line: 6226, column: 26, scope: !7687)
!7695 = !DILocation(line: 6226, column: 24, scope: !7687)
!7696 = !DILocation(line: 6226, column: 3, scope: !7687)
!7697 = !DILocation(line: 6229, column: 42, scope: !7687)
!7698 = !{!7640, !2693, i64 88}
!7699 = !DILocation(line: 6229, column: 49, scope: !7687)
!7700 = !DILocation(line: 6229, column: 26, scope: !7687)
!7701 = !DILocation(line: 6229, column: 24, scope: !7687)
!7702 = !DILocation(line: 6233, column: 5, scope: !7600)
!7703 = !DILocation(line: 6234, column: 1, scope: !7600)
!7704 = distinct !DISubprogram(name: "f_isnan", scope: !3, file: !3, line: 6251, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6252, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7705)
!7705 = !{!7706, !7707}
!7706 = !DILocalVariable(name: "argvars", arg: 1, scope: !7704, file: !3, line: 6251, type: !2305)
!7707 = !DILocalVariable(name: "rettv", arg: 2, scope: !7704, file: !3, line: 6251, type: !2305)
!7708 = !DILocation(line: 6251, column: 19, scope: !7704)
!7709 = !DILocation(line: 6251, column: 38, scope: !7704)
!7710 = !DILocation(line: 6253, column: 39, scope: !7704)
!7711 = !DILocation(line: 6253, column: 46, scope: !7704)
!7712 = !DILocation(line: 6254, column: 10, scope: !7704)
!7713 = !DILocation(line: 6254, column: 13, scope: !7704)
!7714 = !DILocation(line: 6253, column: 17, scope: !7704)
!7715 = !DILocation(line: 6253, column: 26, scope: !7704)
!7716 = !DILocation(line: 6255, column: 1, scope: !7704)
!7717 = distinct !DISubprogram(name: "ret_job_info", scope: !3, file: !3, line: 512, type: !2579, isLocal: true, isDefinition: true, scopeLine: 513, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7718)
!7718 = !{!7719, !7720}
!7719 = !DILocalVariable(name: "argcount", arg: 1, scope: !7717, file: !3, line: 512, type: !756)
!7720 = !DILocalVariable(name: "argtypes", arg: 2, scope: !7717, file: !3, line: 512, type: !797)
!7721 = !DILocation(line: 512, column: 18, scope: !7717)
!7722 = !DILocation(line: 512, column: 37, scope: !7717)
!7723 = !DILocation(line: 514, column: 18, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 514, column: 9)
!7725 = !DILocation(line: 515, column: 2, scope: !7724)
!7726 = !DILocation(line: 517, column: 1, scope: !7717)
!7727 = distinct !DISubprogram(name: "f_last_buffer_nr", scope: !3, file: !3, line: 6262, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6263, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7728)
!7728 = !{!7729, !7730, !7731, !7732}
!7729 = !DILocalVariable(name: "argvars", arg: 1, scope: !7727, file: !3, line: 6262, type: !2305)
!7730 = !DILocalVariable(name: "rettv", arg: 2, scope: !7727, file: !3, line: 6262, type: !2305)
!7731 = !DILocalVariable(name: "n", scope: !7727, file: !3, line: 6264, type: !756)
!7732 = !DILocalVariable(name: "buf", scope: !7727, file: !3, line: 6265, type: !990)
!7733 = !DILocation(line: 6262, column: 28, scope: !7727)
!7734 = !DILocation(line: 6262, column: 54, scope: !7727)
!7735 = !DILocation(line: 6264, column: 10, scope: !7727)
!7736 = !DILocation(line: 6265, column: 12, scope: !7727)
!7737 = !DILocation(line: 6267, column: 5, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 6267, column: 5)
!7739 = !DILocation(line: 6267, column: 5, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 6267, column: 5)
!7741 = !DILocation(line: 6268, column: 15, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 6268, column: 6)
!7743 = !{!4831, !2690, i64 184}
!7744 = !DILocation(line: 6268, column: 8, scope: !7742)
!7745 = !DILocation(line: 6268, column: 6, scope: !7740)
!7746 = distinct !{!7746, !7737, !7747}
!7747 = !DILocation(line: 6269, column: 15, scope: !7738)
!7748 = !DILocation(line: 6271, column: 28, scope: !7727)
!7749 = !DILocation(line: 6271, column: 17, scope: !7727)
!7750 = !DILocation(line: 6271, column: 26, scope: !7727)
!7751 = !DILocation(line: 6272, column: 1, scope: !7727)
!7752 = distinct !DISubprogram(name: "f_len", scope: !3, file: !3, line: 6278, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6279, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7753)
!7753 = !{!7754, !7755}
!7754 = !DILocalVariable(name: "argvars", arg: 1, scope: !7752, file: !3, line: 6278, type: !2305)
!7755 = !DILocalVariable(name: "rettv", arg: 2, scope: !7752, file: !3, line: 6278, type: !2305)
!7756 = !DILocation(line: 6278, column: 17, scope: !7752)
!7757 = !DILocation(line: 6278, column: 36, scope: !7752)
!7758 = !DILocation(line: 6280, column: 24, scope: !7752)
!7759 = !DILocation(line: 6280, column: 5, scope: !7752)
!7760 = !DILocation(line: 6284, column: 42, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 6281, column: 5)
!7762 = !DILocation(line: 6284, column: 18, scope: !7761)
!7763 = !DILocation(line: 6284, column: 27, scope: !7761)
!7764 = !DILocation(line: 6286, column: 6, scope: !7761)
!7765 = !DILocation(line: 6288, column: 49, scope: !7761)
!7766 = !DILocation(line: 6288, column: 54, scope: !7761)
!7767 = !DILocation(line: 6288, column: 29, scope: !7761)
!7768 = !DILocation(line: 6288, column: 18, scope: !7761)
!7769 = !DILocation(line: 6288, column: 27, scope: !7761)
!7770 = !DILocation(line: 6289, column: 6, scope: !7761)
!7771 = !DILocation(line: 6291, column: 49, scope: !7761)
!7772 = !DILocation(line: 6291, column: 54, scope: !7761)
!7773 = !DILocation(line: 6291, column: 29, scope: !7761)
!7774 = !DILocation(line: 6291, column: 18, scope: !7761)
!7775 = !DILocation(line: 6291, column: 27, scope: !7761)
!7776 = !DILocation(line: 6292, column: 6, scope: !7761)
!7777 = !DILocation(line: 6294, column: 49, scope: !7761)
!7778 = !DILocation(line: 6294, column: 54, scope: !7761)
!7779 = !DILocation(line: 6294, column: 29, scope: !7761)
!7780 = !DILocation(line: 6294, column: 18, scope: !7761)
!7781 = !DILocation(line: 6294, column: 27, scope: !7761)
!7782 = !DILocation(line: 6295, column: 6, scope: !7761)
!7783 = !DILocation(line: 6306, column: 11, scope: !7761)
!7784 = !DILocation(line: 6306, column: 6, scope: !7761)
!7785 = !DILocation(line: 6307, column: 6, scope: !7761)
!7786 = !DILocation(line: 6309, column: 1, scope: !7752)
!7787 = distinct !DISubprogram(name: "f_libcall", scope: !3, file: !3, line: 6354, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6355, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7788)
!7788 = !{!7789, !7790}
!7789 = !DILocalVariable(name: "argvars", arg: 1, scope: !7787, file: !3, line: 6354, type: !2305)
!7790 = !DILocalVariable(name: "rettv", arg: 2, scope: !7787, file: !3, line: 6354, type: !2305)
!7791 = !DILocation(line: 6354, column: 21, scope: !7787)
!7792 = !DILocation(line: 6354, column: 40, scope: !7787)
!7793 = !DILocalVariable(name: "argvars", arg: 1, scope: !7794, file: !3, line: 6312, type: !2305)
!7794 = distinct !DISubprogram(name: "libcall_common", scope: !3, file: !3, line: 6312, type: !3480, isLocal: true, isDefinition: true, scopeLine: 6313, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7795)
!7795 = !{!7793, !7796, !7797, !7798, !7799, !7800}
!7796 = !DILocalVariable(name: "rettv", arg: 2, scope: !7794, file: !3, line: 6312, type: !2305)
!7797 = !DILocalVariable(name: "type", arg: 3, scope: !7794, file: !3, line: 6312, type: !756)
!7798 = !DILocalVariable(name: "string_in", scope: !7794, file: !3, line: 6315, type: !759)
!7799 = !DILocalVariable(name: "string_result", scope: !7794, file: !3, line: 6316, type: !2469)
!7800 = !DILocalVariable(name: "nr_result", scope: !7794, file: !3, line: 6317, type: !756)
!7801 = !DILocation(line: 6312, column: 26, scope: !7794, inlinedAt: !7802)
!7802 = distinct !DILocation(line: 6356, column: 5, scope: !7787)
!7803 = !DILocation(line: 6312, column: 52, scope: !7794, inlinedAt: !7802)
!7804 = !DILocation(line: 6312, column: 63, scope: !7794, inlinedAt: !7802)
!7805 = !DILocation(line: 6317, column: 5, scope: !7794, inlinedAt: !7802)
!7806 = !DILocation(line: 6320, column: 12, scope: !7794, inlinedAt: !7802)
!7807 = !DILocation(line: 6320, column: 19, scope: !7794, inlinedAt: !7802)
!7808 = !DILocation(line: 6322, column: 9, scope: !7809, inlinedAt: !7802)
!7809 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 6321, column: 9)
!7810 = !DILocation(line: 6322, column: 14, scope: !7809, inlinedAt: !7802)
!7811 = !DILocation(line: 6322, column: 23, scope: !7809, inlinedAt: !7802)
!7812 = !DILocation(line: 6324, column: 9, scope: !7813, inlinedAt: !7802)
!7813 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 6324, column: 9)
!7814 = !DILocation(line: 6324, column: 28, scope: !7813, inlinedAt: !7802)
!7815 = !DILocation(line: 6324, column: 31, scope: !7813, inlinedAt: !7802)
!7816 = !DILocation(line: 6324, column: 9, scope: !7794, inlinedAt: !7802)
!7817 = !DILocation(line: 6329, column: 20, scope: !7818, inlinedAt: !7802)
!7818 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 6329, column: 9)
!7819 = !DILocation(line: 6329, column: 27, scope: !7818, inlinedAt: !7802)
!7820 = !DILocation(line: 6329, column: 41, scope: !7818, inlinedAt: !7802)
!7821 = !DILocation(line: 6329, column: 55, scope: !7818, inlinedAt: !7802)
!7822 = !DILocation(line: 6329, column: 62, scope: !7818, inlinedAt: !7802)
!7823 = !DILocation(line: 6329, column: 9, scope: !7794, inlinedAt: !7802)
!7824 = !DILocation(line: 6315, column: 14, scope: !7794, inlinedAt: !7802)
!7825 = !DILocation(line: 6332, column: 17, scope: !7826, inlinedAt: !7802)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 6332, column: 6)
!7827 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 6330, column: 5)
!7828 = !DILocation(line: 6332, column: 24, scope: !7826, inlinedAt: !7802)
!7829 = !DILocation(line: 6332, column: 6, scope: !7827, inlinedAt: !7802)
!7830 = !DILocation(line: 6341, column: 25, scope: !7831, inlinedAt: !7802)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 6338, column: 6)
!7832 = !DILocation(line: 6333, column: 29, scope: !7826, inlinedAt: !7802)
!7833 = !DILocation(line: 6333, column: 34, scope: !7826, inlinedAt: !7802)
!7834 = !DILocation(line: 6333, column: 6, scope: !7826, inlinedAt: !7802)
!7835 = !DILocation(line: 6316, column: 15, scope: !7794, inlinedAt: !7802)
!7836 = !DILocation(line: 6338, column: 29, scope: !7831, inlinedAt: !7802)
!7837 = !DILocation(line: 6338, column: 34, scope: !7831, inlinedAt: !7802)
!7838 = !DILocation(line: 6339, column: 20, scope: !7831, inlinedAt: !7802)
!7839 = !DILocation(line: 6339, column: 25, scope: !7831, inlinedAt: !7802)
!7840 = !DILocation(line: 6341, column: 9, scope: !7831, inlinedAt: !7802)
!7841 = !DILocation(line: 6317, column: 11, scope: !7794, inlinedAt: !7802)
!7842 = !DILocation(line: 6338, column: 6, scope: !7831, inlinedAt: !7802)
!7843 = !DILocation(line: 6348, column: 1, scope: !7794, inlinedAt: !7802)
!7844 = !DILocation(line: 6357, column: 1, scope: !7787)
!7845 = distinct !DISubprogram(name: "f_libcallnr", scope: !3, file: !3, line: 6363, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6364, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7846)
!7846 = !{!7847, !7848}
!7847 = !DILocalVariable(name: "argvars", arg: 1, scope: !7845, file: !3, line: 6363, type: !2305)
!7848 = !DILocalVariable(name: "rettv", arg: 2, scope: !7845, file: !3, line: 6363, type: !2305)
!7849 = !DILocation(line: 6363, column: 23, scope: !7845)
!7850 = !DILocation(line: 6363, column: 42, scope: !7845)
!7851 = !DILocation(line: 6312, column: 26, scope: !7794, inlinedAt: !7852)
!7852 = distinct !DILocation(line: 6365, column: 5, scope: !7845)
!7853 = !DILocation(line: 6312, column: 52, scope: !7794, inlinedAt: !7852)
!7854 = !DILocation(line: 6312, column: 63, scope: !7794, inlinedAt: !7852)
!7855 = !DILocation(line: 6317, column: 5, scope: !7794, inlinedAt: !7852)
!7856 = !DILocation(line: 6320, column: 12, scope: !7794, inlinedAt: !7852)
!7857 = !DILocation(line: 6320, column: 19, scope: !7794, inlinedAt: !7852)
!7858 = !DILocation(line: 6324, column: 9, scope: !7813, inlinedAt: !7852)
!7859 = !DILocation(line: 6324, column: 28, scope: !7813, inlinedAt: !7852)
!7860 = !DILocation(line: 6324, column: 31, scope: !7813, inlinedAt: !7852)
!7861 = !DILocation(line: 6324, column: 9, scope: !7794, inlinedAt: !7852)
!7862 = !DILocation(line: 6329, column: 20, scope: !7818, inlinedAt: !7852)
!7863 = !DILocation(line: 6329, column: 27, scope: !7818, inlinedAt: !7852)
!7864 = !DILocation(line: 6329, column: 41, scope: !7818, inlinedAt: !7852)
!7865 = !DILocation(line: 6329, column: 55, scope: !7818, inlinedAt: !7852)
!7866 = !DILocation(line: 6329, column: 62, scope: !7818, inlinedAt: !7852)
!7867 = !DILocation(line: 6329, column: 9, scope: !7794, inlinedAt: !7852)
!7868 = !DILocation(line: 6315, column: 14, scope: !7794, inlinedAt: !7852)
!7869 = !DILocation(line: 6332, column: 17, scope: !7826, inlinedAt: !7852)
!7870 = !DILocation(line: 6332, column: 24, scope: !7826, inlinedAt: !7852)
!7871 = !DILocation(line: 6332, column: 6, scope: !7827, inlinedAt: !7852)
!7872 = !DILocation(line: 6341, column: 25, scope: !7831, inlinedAt: !7852)
!7873 = !DILocation(line: 6333, column: 29, scope: !7826, inlinedAt: !7852)
!7874 = !DILocation(line: 6333, column: 34, scope: !7826, inlinedAt: !7852)
!7875 = !DILocation(line: 6333, column: 6, scope: !7826, inlinedAt: !7852)
!7876 = !DILocation(line: 6316, column: 15, scope: !7794, inlinedAt: !7852)
!7877 = !DILocation(line: 6338, column: 29, scope: !7831, inlinedAt: !7852)
!7878 = !DILocation(line: 6338, column: 34, scope: !7831, inlinedAt: !7852)
!7879 = !DILocation(line: 6339, column: 20, scope: !7831, inlinedAt: !7852)
!7880 = !DILocation(line: 6339, column: 25, scope: !7831, inlinedAt: !7852)
!7881 = !DILocation(line: 6341, column: 9, scope: !7831, inlinedAt: !7852)
!7882 = !DILocation(line: 6317, column: 11, scope: !7794, inlinedAt: !7852)
!7883 = !DILocation(line: 6338, column: 6, scope: !7831, inlinedAt: !7852)
!7884 = !DILocation(line: 6343, column: 21, scope: !7831, inlinedAt: !7852)
!7885 = !DILocation(line: 6344, column: 3, scope: !7831, inlinedAt: !7852)
!7886 = !DILocation(line: 6345, column: 29, scope: !7831, inlinedAt: !7852)
!7887 = !DILocation(line: 6345, column: 18, scope: !7831, inlinedAt: !7852)
!7888 = !DILocation(line: 6345, column: 27, scope: !7831, inlinedAt: !7852)
!7889 = !DILocation(line: 6345, column: 6, scope: !7831, inlinedAt: !7852)
!7890 = !DILocation(line: 6348, column: 1, scope: !7794, inlinedAt: !7852)
!7891 = !DILocation(line: 6366, column: 1, scope: !7845)
!7892 = distinct !DISubprogram(name: "f_line", scope: !3, file: !3, line: 6372, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6373, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7893)
!7893 = !{!7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903}
!7894 = !DILocalVariable(name: "argvars", arg: 1, scope: !7892, file: !3, line: 6372, type: !2305)
!7895 = !DILocalVariable(name: "rettv", arg: 2, scope: !7892, file: !3, line: 6372, type: !2305)
!7896 = !DILocalVariable(name: "lnum", scope: !7892, file: !3, line: 6374, type: !764)
!7897 = !DILocalVariable(name: "fp", scope: !7892, file: !3, line: 6375, type: !3956)
!7898 = !DILocalVariable(name: "fnum", scope: !7892, file: !3, line: 6376, type: !756)
!7899 = !DILocalVariable(name: "id", scope: !7892, file: !3, line: 6377, type: !756)
!7900 = !DILocalVariable(name: "tp", scope: !7892, file: !3, line: 6378, type: !7001)
!7901 = !DILocalVariable(name: "wp", scope: !7892, file: !3, line: 6379, type: !1135)
!7902 = !DILocalVariable(name: "save_curwin", scope: !7892, file: !3, line: 6380, type: !1135)
!7903 = !DILocalVariable(name: "save_curtab", scope: !7892, file: !3, line: 6381, type: !7001)
!7904 = !DILocation(line: 6372, column: 18, scope: !7892)
!7905 = !DILocation(line: 6372, column: 37, scope: !7892)
!7906 = !DILocation(line: 6374, column: 14, scope: !7892)
!7907 = !DILocation(line: 6375, column: 12, scope: !7892)
!7908 = !DILocation(line: 6376, column: 5, scope: !7892)
!7909 = !DILocation(line: 6378, column: 5, scope: !7892)
!7910 = !DILocation(line: 6380, column: 5, scope: !7892)
!7911 = !DILocation(line: 6381, column: 5, scope: !7892)
!7912 = !DILocation(line: 6383, column: 9, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 6383, column: 9)
!7914 = !DILocation(line: 6383, column: 20, scope: !7913)
!7915 = !DILocation(line: 6383, column: 27, scope: !7913)
!7916 = !DILocation(line: 6383, column: 9, scope: !7892)
!7917 = !DILocation(line: 6386, column: 12, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 6384, column: 5)
!7919 = !DILocation(line: 6386, column: 7, scope: !7918)
!7920 = !DILocation(line: 6377, column: 10, scope: !7892)
!7921 = !DILocation(line: 6378, column: 16, scope: !7892)
!7922 = !DILocation(line: 6387, column: 7, scope: !7918)
!7923 = !DILocation(line: 6379, column: 12, scope: !7892)
!7924 = !DILocation(line: 6388, column: 9, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 6388, column: 6)
!7926 = !DILocation(line: 6388, column: 20, scope: !7925)
!7927 = !DILocation(line: 6388, column: 23, scope: !7925)
!7928 = !DILocation(line: 6388, column: 17, scope: !7925)
!7929 = !DILocation(line: 6380, column: 12, scope: !7892)
!7930 = !DILocation(line: 6381, column: 16, scope: !7892)
!7931 = !DILocation(line: 6390, column: 10, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 6390, column: 10)
!7933 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 6389, column: 2)
!7934 = !DILocation(line: 6391, column: 11, scope: !7932)
!7935 = !DILocation(line: 6390, column: 10, scope: !7933)
!7936 = !DILocation(line: 6393, column: 3, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 6392, column: 6)
!7938 = !DILocation(line: 6376, column: 10, scope: !7892)
!7939 = !DILocation(line: 6394, column: 8, scope: !7937)
!7940 = !DILocation(line: 6395, column: 6, scope: !7937)
!7941 = !DILocation(line: 6396, column: 26, scope: !7933)
!7942 = !DILocation(line: 6396, column: 39, scope: !7933)
!7943 = !DILocation(line: 6396, column: 6, scope: !7933)
!7944 = !DILocation(line: 6397, column: 2, scope: !7933)
!7945 = !DILocation(line: 6401, column: 7, scope: !7913)
!7946 = !DILocation(line: 6403, column: 12, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 6403, column: 9)
!7948 = !DILocation(line: 6403, column: 9, scope: !7892)
!7949 = !DILocation(line: 6404, column: 13, scope: !7947)
!7950 = !DILocation(line: 6404, column: 2, scope: !7947)
!7951 = !DILocation(line: 6405, column: 17, scope: !7892)
!7952 = !DILocation(line: 6405, column: 26, scope: !7892)
!7953 = !DILocation(line: 6406, column: 1, scope: !7892)
!7954 = distinct !DISubprogram(name: "f_line2byte", scope: !3, file: !3, line: 6412, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6413, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7955)
!7955 = !{!7956, !7957, !7958}
!7956 = !DILocalVariable(name: "argvars", arg: 1, scope: !7954, file: !3, line: 6412, type: !2305)
!7957 = !DILocalVariable(name: "rettv", arg: 2, scope: !7954, file: !3, line: 6412, type: !2305)
!7958 = !DILocalVariable(name: "lnum", scope: !7954, file: !3, line: 6417, type: !764)
!7959 = !DILocation(line: 6412, column: 23, scope: !7954)
!7960 = !DILocation(line: 6412, column: 49, scope: !7954)
!7961 = !DILocation(line: 6419, column: 12, scope: !7954)
!7962 = !DILocation(line: 6417, column: 14, scope: !7954)
!7963 = !DILocation(line: 6420, column: 14, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 6420, column: 9)
!7965 = !DILocation(line: 6420, column: 18, scope: !7964)
!7966 = !DILocation(line: 6420, column: 28, scope: !7964)
!7967 = !DILocation(line: 6420, column: 41, scope: !7964)
!7968 = !{!4831, !2925, i64 0}
!7969 = !DILocation(line: 6420, column: 55, scope: !7964)
!7970 = !DILocation(line: 6420, column: 26, scope: !7964)
!7971 = !DILocation(line: 6420, column: 9, scope: !7954)
!7972 = !DILocation(line: 6421, column: 14, scope: !7964)
!7973 = !DILocation(line: 6421, column: 23, scope: !7964)
!7974 = !DILocation(line: 6424, column: 9, scope: !7954)
!7975 = !DILocation(line: 6423, column: 25, scope: !7964)
!7976 = !DILocation(line: 6423, column: 14, scope: !7964)
!7977 = !DILocation(line: 6423, column: 23, scope: !7964)
!7978 = !DILocation(line: 6424, column: 30, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 6424, column: 9)
!7980 = !DILocation(line: 6425, column: 2, scope: !7979)
!7981 = !DILocation(line: 6427, column: 1, scope: !7954)
!7982 = distinct !DISubprogram(name: "f_log", scope: !3, file: !3, line: 6434, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6435, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7983)
!7983 = !{!7984, !7985, !7986}
!7984 = !DILocalVariable(name: "argvars", arg: 1, scope: !7982, file: !3, line: 6434, type: !2305)
!7985 = !DILocalVariable(name: "rettv", arg: 2, scope: !7982, file: !3, line: 6434, type: !2305)
!7986 = !DILocalVariable(name: "f", scope: !7982, file: !3, line: 6436, type: !762)
!7987 = !DILocation(line: 6434, column: 17, scope: !7982)
!7988 = !DILocation(line: 6434, column: 36, scope: !7982)
!7989 = !DILocation(line: 6436, column: 13, scope: !7982)
!7990 = !DILocation(line: 6438, column: 12, scope: !7982)
!7991 = !DILocation(line: 6438, column: 19, scope: !7982)
!7992 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !7993)
!7993 = distinct !DILocation(line: 6439, column: 9, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 6439, column: 9)
!7995 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !7993)
!7996 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !7993)
!7997 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !7993)
!7998 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !7993)
!7999 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !7993)
!8000 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !7993)
!8001 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !7993)
!8002 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !7993)
!8003 = !DILocation(line: 6440, column: 24, scope: !7994)
!8004 = !DILocation(line: 6440, column: 2, scope: !7994)
!8005 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !7993)
!8006 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !7993)
!8007 = !DILocation(line: 6443, column: 1, scope: !7982)
!8008 = distinct !DISubprogram(name: "f_log10", scope: !3, file: !3, line: 6449, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6450, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8009)
!8009 = !{!8010, !8011, !8012}
!8010 = !DILocalVariable(name: "argvars", arg: 1, scope: !8008, file: !3, line: 6449, type: !2305)
!8011 = !DILocalVariable(name: "rettv", arg: 2, scope: !8008, file: !3, line: 6449, type: !2305)
!8012 = !DILocalVariable(name: "f", scope: !8008, file: !3, line: 6451, type: !762)
!8013 = !DILocation(line: 6449, column: 19, scope: !8008)
!8014 = !DILocation(line: 6449, column: 38, scope: !8008)
!8015 = !DILocation(line: 6451, column: 13, scope: !8008)
!8016 = !DILocation(line: 6453, column: 12, scope: !8008)
!8017 = !DILocation(line: 6453, column: 19, scope: !8008)
!8018 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !8019)
!8019 = distinct !DILocation(line: 6454, column: 9, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 6454, column: 9)
!8021 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !8019)
!8022 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !8019)
!8023 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !8019)
!8024 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !8019)
!8025 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !8019)
!8026 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !8019)
!8027 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !8019)
!8028 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !8019)
!8029 = !DILocation(line: 6455, column: 24, scope: !8020)
!8030 = !DILocation(line: 6455, column: 2, scope: !8020)
!8031 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !8019)
!8032 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !8019)
!8033 = !DILocation(line: 6458, column: 1, scope: !8008)
!8034 = distinct !DISubprogram(name: "ret_maparg", scope: !3, file: !3, line: 627, type: !2579, isLocal: true, isDefinition: true, scopeLine: 628, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8035)
!8035 = !{!8036, !8037}
!8036 = !DILocalVariable(name: "argcount", arg: 1, scope: !8034, file: !3, line: 627, type: !756)
!8037 = !DILocalVariable(name: "argtypes", arg: 2, scope: !8034, file: !3, line: 627, type: !797)
!8038 = !DILocation(line: 627, column: 16, scope: !8034)
!8039 = !DILocation(line: 627, column: 35, scope: !8034)
!8040 = !DILocation(line: 630, column: 18, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 630, column: 9)
!8042 = !DILocation(line: 631, column: 2, scope: !8041)
!8043 = !DILocation(line: 633, column: 1, scope: !8034)
!8044 = distinct !DISubprogram(name: "f_maparg", scope: !3, file: !3, line: 6483, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6484, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8045)
!8045 = !{!8046, !8047}
!8046 = !DILocalVariable(name: "argvars", arg: 1, scope: !8044, file: !3, line: 6483, type: !2305)
!8047 = !DILocalVariable(name: "rettv", arg: 2, scope: !8044, file: !3, line: 6483, type: !2305)
!8048 = !DILocation(line: 6483, column: 20, scope: !8044)
!8049 = !DILocation(line: 6483, column: 39, scope: !8044)
!8050 = !DILocation(line: 6485, column: 5, scope: !8044)
!8051 = !DILocation(line: 6486, column: 1, scope: !8044)
!8052 = distinct !DISubprogram(name: "f_mapcheck", scope: !3, file: !3, line: 6492, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6493, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8053)
!8053 = !{!8054, !8055}
!8054 = !DILocalVariable(name: "argvars", arg: 1, scope: !8052, file: !3, line: 6492, type: !2305)
!8055 = !DILocalVariable(name: "rettv", arg: 2, scope: !8052, file: !3, line: 6492, type: !2305)
!8056 = !DILocation(line: 6492, column: 22, scope: !8052)
!8057 = !DILocation(line: 6492, column: 41, scope: !8052)
!8058 = !DILocation(line: 6494, column: 5, scope: !8052)
!8059 = !DILocation(line: 6495, column: 1, scope: !8052)
!8060 = distinct !DISubprogram(name: "f_match", scope: !3, file: !3, line: 6736, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6737, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8061)
!8061 = !{!8062, !8063}
!8062 = !DILocalVariable(name: "argvars", arg: 1, scope: !8060, file: !3, line: 6736, type: !2305)
!8063 = !DILocalVariable(name: "rettv", arg: 2, scope: !8060, file: !3, line: 6736, type: !2305)
!8064 = !DILocation(line: 6736, column: 19, scope: !8060)
!8065 = !DILocation(line: 6736, column: 38, scope: !8060)
!8066 = !DILocation(line: 6738, column: 5, scope: !8060)
!8067 = !DILocation(line: 6739, column: 1, scope: !8060)
!8068 = distinct !DISubprogram(name: "f_matchend", scope: !3, file: !3, line: 6745, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6746, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8069)
!8069 = !{!8070, !8071}
!8070 = !DILocalVariable(name: "argvars", arg: 1, scope: !8068, file: !3, line: 6745, type: !2305)
!8071 = !DILocalVariable(name: "rettv", arg: 2, scope: !8068, file: !3, line: 6745, type: !2305)
!8072 = !DILocation(line: 6745, column: 22, scope: !8068)
!8073 = !DILocation(line: 6745, column: 41, scope: !8068)
!8074 = !DILocation(line: 6747, column: 5, scope: !8068)
!8075 = !DILocation(line: 6748, column: 1, scope: !8068)
!8076 = distinct !DISubprogram(name: "f_matchlist", scope: !3, file: !3, line: 6754, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6755, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8077)
!8077 = !{!8078, !8079}
!8078 = !DILocalVariable(name: "argvars", arg: 1, scope: !8076, file: !3, line: 6754, type: !2305)
!8079 = !DILocalVariable(name: "rettv", arg: 2, scope: !8076, file: !3, line: 6754, type: !2305)
!8080 = !DILocation(line: 6754, column: 23, scope: !8076)
!8081 = !DILocation(line: 6754, column: 42, scope: !8076)
!8082 = !DILocation(line: 6756, column: 5, scope: !8076)
!8083 = !DILocation(line: 6757, column: 1, scope: !8076)
!8084 = distinct !DISubprogram(name: "f_matchstr", scope: !3, file: !3, line: 6763, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6764, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8085)
!8085 = !{!8086, !8087}
!8086 = !DILocalVariable(name: "argvars", arg: 1, scope: !8084, file: !3, line: 6763, type: !2305)
!8087 = !DILocalVariable(name: "rettv", arg: 2, scope: !8084, file: !3, line: 6763, type: !2305)
!8088 = !DILocation(line: 6763, column: 22, scope: !8084)
!8089 = !DILocation(line: 6763, column: 41, scope: !8084)
!8090 = !DILocation(line: 6765, column: 5, scope: !8084)
!8091 = !DILocation(line: 6766, column: 1, scope: !8084)
!8092 = distinct !DISubprogram(name: "f_matchstrpos", scope: !3, file: !3, line: 6772, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6773, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8093)
!8093 = !{!8094, !8095}
!8094 = !DILocalVariable(name: "argvars", arg: 1, scope: !8092, file: !3, line: 6772, type: !2305)
!8095 = !DILocalVariable(name: "rettv", arg: 2, scope: !8092, file: !3, line: 6772, type: !2305)
!8096 = !DILocation(line: 6772, column: 25, scope: !8092)
!8097 = !DILocation(line: 6772, column: 44, scope: !8092)
!8098 = !DILocation(line: 6774, column: 5, scope: !8092)
!8099 = !DILocation(line: 6775, column: 1, scope: !8092)
!8100 = distinct !DISubprogram(name: "f_max", scope: !3, file: !3, line: 6863, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6864, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8101)
!8101 = !{!8102, !8103}
!8102 = !DILocalVariable(name: "argvars", arg: 1, scope: !8100, file: !3, line: 6863, type: !2305)
!8103 = !DILocalVariable(name: "rettv", arg: 2, scope: !8100, file: !3, line: 6863, type: !2305)
!8104 = !DILocation(line: 6863, column: 17, scope: !8100)
!8105 = !DILocation(line: 6863, column: 36, scope: !8100)
!8106 = !DILocation(line: 6865, column: 5, scope: !8100)
!8107 = !DILocation(line: 6866, column: 1, scope: !8100)
!8108 = distinct !DISubprogram(name: "f_min", scope: !3, file: !3, line: 6872, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6873, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8109)
!8109 = !{!8110, !8111}
!8110 = !DILocalVariable(name: "argvars", arg: 1, scope: !8108, file: !3, line: 6872, type: !2305)
!8111 = !DILocalVariable(name: "rettv", arg: 2, scope: !8108, file: !3, line: 6872, type: !2305)
!8112 = !DILocation(line: 6872, column: 17, scope: !8108)
!8113 = !DILocation(line: 6872, column: 36, scope: !8108)
!8114 = !DILocation(line: 6874, column: 5, scope: !8108)
!8115 = !DILocation(line: 6875, column: 1, scope: !8108)
!8116 = distinct !DISubprogram(name: "f_nextnonblank", scope: !3, file: !3, line: 6911, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6912, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8117)
!8117 = !{!8118, !8119, !8120}
!8118 = !DILocalVariable(name: "argvars", arg: 1, scope: !8116, file: !3, line: 6911, type: !2305)
!8119 = !DILocalVariable(name: "rettv", arg: 2, scope: !8116, file: !3, line: 6911, type: !2305)
!8120 = !DILocalVariable(name: "lnum", scope: !8116, file: !3, line: 6913, type: !764)
!8121 = !DILocation(line: 6911, column: 26, scope: !8116)
!8122 = !DILocation(line: 6911, column: 45, scope: !8116)
!8123 = !DILocation(line: 6915, column: 17, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 6915, column: 5)
!8125 = !DILocation(line: 6913, column: 14, scope: !8116)
!8126 = !DILocation(line: 6917, column: 11, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 6917, column: 6)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 6916, column: 5)
!8129 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 6915, column: 5)
!8130 = !DILocation(line: 6917, column: 15, scope: !8127)
!8131 = !DILocation(line: 6917, column: 25, scope: !8127)
!8132 = !DILocation(line: 6917, column: 38, scope: !8127)
!8133 = !DILocation(line: 6917, column: 23, scope: !8127)
!8134 = !DILocation(line: 6917, column: 6, scope: !8128)
!8135 = !DILocation(line: 6922, column: 17, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 6922, column: 6)
!8137 = !DILocation(line: 6922, column: 7, scope: !8136)
!8138 = !DILocation(line: 6922, column: 6, scope: !8136)
!8139 = !DILocation(line: 6922, column: 31, scope: !8136)
!8140 = !DILocation(line: 6922, column: 6, scope: !8128)
!8141 = !DILocation(line: 6915, column: 41, scope: !8129)
!8142 = !DILocation(line: 6925, column: 17, scope: !8116)
!8143 = !DILocation(line: 6925, column: 26, scope: !8116)
!8144 = !DILocation(line: 6926, column: 1, scope: !8116)
!8145 = distinct !DISubprogram(name: "f_nr2char", scope: !3, file: !3, line: 6932, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6933, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8146)
!8146 = !{!8147, !8148, !8149, !8150}
!8147 = !DILocalVariable(name: "argvars", arg: 1, scope: !8145, file: !3, line: 6932, type: !2305)
!8148 = !DILocalVariable(name: "rettv", arg: 2, scope: !8145, file: !3, line: 6932, type: !2305)
!8149 = !DILocalVariable(name: "buf", scope: !8145, file: !3, line: 6934, type: !3499)
!8150 = !DILocalVariable(name: "utf8", scope: !8151, file: !3, line: 6938, type: !756)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 6937, column: 5)
!8152 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 6936, column: 9)
!8153 = !DILocation(line: 6932, column: 21, scope: !8145)
!8154 = !DILocation(line: 6932, column: 40, scope: !8145)
!8155 = !DILocation(line: 6934, column: 5, scope: !8145)
!8156 = !DILocation(line: 6934, column: 12, scope: !8145)
!8157 = !DILocation(line: 6936, column: 9, scope: !8152)
!8158 = !DILocation(line: 6936, column: 9, scope: !8145)
!8159 = !DILocation(line: 6938, column: 6, scope: !8151)
!8160 = !DILocation(line: 6940, column: 6, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 6940, column: 6)
!8162 = !DILocation(line: 6940, column: 17, scope: !8161)
!8163 = !DILocation(line: 6940, column: 24, scope: !8161)
!8164 = !DILocation(line: 6940, column: 6, scope: !8151)
!8165 = !DILocation(line: 6941, column: 18, scope: !8161)
!8166 = !DILocation(line: 6941, column: 13, scope: !8161)
!8167 = !DILocation(line: 6941, column: 6, scope: !8161)
!8168 = !DILocation(line: 6942, column: 6, scope: !8151)
!8169 = !DILocation(line: 6943, column: 30, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 6942, column: 6)
!8171 = !DILocation(line: 6943, column: 25, scope: !8170)
!8172 = !DILocation(line: 6943, column: 10, scope: !8170)
!8173 = !DILocation(line: 6943, column: 6, scope: !8170)
!8174 = !DILocation(line: 6945, column: 12, scope: !8170)
!8175 = !DILocation(line: 6945, column: 32, scope: !8170)
!8176 = !DILocation(line: 6945, column: 27, scope: !8170)
!8177 = !DILocation(line: 6945, column: 10, scope: !8170)
!8178 = !DILocation(line: 6945, column: 6, scope: !8170)
!8179 = !DILocation(line: 6949, column: 19, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 6948, column: 5)
!8181 = !DILocation(line: 6949, column: 11, scope: !8180)
!8182 = !DILocation(line: 6949, column: 9, scope: !8180)
!8183 = !DILocation(line: 6952, column: 12, scope: !8145)
!8184 = !DILocation(line: 6952, column: 19, scope: !8145)
!8185 = !DILocation(line: 6953, column: 28, scope: !8145)
!8186 = !DILocation(line: 6953, column: 12, scope: !8145)
!8187 = !DILocation(line: 6953, column: 17, scope: !8145)
!8188 = !DILocation(line: 6953, column: 26, scope: !8145)
!8189 = !DILocation(line: 6954, column: 1, scope: !8145)
!8190 = distinct !DISubprogram(name: "f_or", scope: !3, file: !3, line: 6960, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6961, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8191)
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "argvars", arg: 1, scope: !8190, file: !3, line: 6960, type: !2305)
!8193 = !DILocalVariable(name: "rettv", arg: 2, scope: !8190, file: !3, line: 6960, type: !2305)
!8194 = !DILocation(line: 6960, column: 16, scope: !8190)
!8195 = !DILocation(line: 6960, column: 35, scope: !8190)
!8196 = !DILocation(line: 6962, column: 28, scope: !8190)
!8197 = !DILocation(line: 6963, column: 27, scope: !8190)
!8198 = !DILocation(line: 6963, column: 8, scope: !8190)
!8199 = !DILocation(line: 6963, column: 6, scope: !8190)
!8200 = !DILocation(line: 6962, column: 17, scope: !8190)
!8201 = !DILocation(line: 6962, column: 26, scope: !8190)
!8202 = !DILocation(line: 6964, column: 1, scope: !8190)
!8203 = distinct !DISubprogram(name: "ret_bool", scope: !3, file: !3, line: 462, type: !2579, isLocal: true, isDefinition: true, scopeLine: 463, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8204)
!8204 = !{!8205, !8206}
!8205 = !DILocalVariable(name: "argcount", arg: 1, scope: !8203, file: !3, line: 462, type: !756)
!8206 = !DILocalVariable(name: "argtypes", arg: 2, scope: !8203, file: !3, line: 462, type: !797)
!8207 = !DILocation(line: 462, column: 14, scope: !8203)
!8208 = !DILocation(line: 462, column: 40, scope: !8203)
!8209 = !DILocation(line: 464, column: 5, scope: !8203)
!8210 = distinct !DISubprogram(name: "f_pow", scope: !3, file: !3, line: 6986, type: !2538, isLocal: true, isDefinition: true, scopeLine: 6987, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8211)
!8211 = !{!8212, !8213, !8214, !8215}
!8212 = !DILocalVariable(name: "argvars", arg: 1, scope: !8210, file: !3, line: 6986, type: !2305)
!8213 = !DILocalVariable(name: "rettv", arg: 2, scope: !8210, file: !3, line: 6986, type: !2305)
!8214 = !DILocalVariable(name: "fx", scope: !8210, file: !3, line: 6988, type: !762)
!8215 = !DILocalVariable(name: "fy", scope: !8210, file: !3, line: 6988, type: !762)
!8216 = !DILocation(line: 6986, column: 17, scope: !8210)
!8217 = !DILocation(line: 6986, column: 36, scope: !8210)
!8218 = !DILocation(line: 6988, column: 13, scope: !8210)
!8219 = !DILocation(line: 6988, column: 23, scope: !8210)
!8220 = !DILocation(line: 6990, column: 12, scope: !8210)
!8221 = !DILocation(line: 6990, column: 19, scope: !8210)
!8222 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !8223)
!8223 = distinct !DILocation(line: 6991, column: 9, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 6991, column: 9)
!8225 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !8223)
!8226 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !8223)
!8227 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !8223)
!8228 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !8223)
!8229 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !8223)
!8230 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !8223)
!8231 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !8223)
!8232 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !8223)
!8233 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !8223)
!8234 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !8223)
!8235 = !DILocation(line: 6992, column: 10, scope: !8224)
!8236 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !8237)
!8237 = distinct !DILocation(line: 6992, column: 13, scope: !8224)
!8238 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !8237)
!8239 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !8237)
!8240 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !8237)
!8241 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !8237)
!8242 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !8237)
!8243 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !8237)
!8244 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !8237)
!8245 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !8237)
!8246 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !8237)
!8247 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !8237)
!8248 = !DILocation(line: 6991, column: 9, scope: !8210)
!8249 = !DILocation(line: 6993, column: 24, scope: !8224)
!8250 = !DILocation(line: 6993, column: 2, scope: !8224)
!8251 = !DILocation(line: 6996, column: 1, scope: !8210)
!8252 = distinct !DISubprogram(name: "f_prevnonblank", scope: !3, file: !3, line: 7003, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7004, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8253)
!8253 = !{!8254, !8255, !8256}
!8254 = !DILocalVariable(name: "argvars", arg: 1, scope: !8252, file: !3, line: 7003, type: !2305)
!8255 = !DILocalVariable(name: "rettv", arg: 2, scope: !8252, file: !3, line: 7003, type: !2305)
!8256 = !DILocalVariable(name: "lnum", scope: !8252, file: !3, line: 7005, type: !764)
!8257 = !DILocation(line: 7003, column: 26, scope: !8252)
!8258 = !DILocation(line: 7003, column: 45, scope: !8252)
!8259 = !DILocation(line: 7007, column: 12, scope: !8252)
!8260 = !DILocation(line: 7005, column: 14, scope: !8252)
!8261 = !DILocation(line: 7008, column: 14, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 7008, column: 9)
!8263 = !DILocation(line: 7008, column: 18, scope: !8262)
!8264 = !DILocation(line: 7008, column: 28, scope: !8262)
!8265 = !DILocation(line: 7008, column: 41, scope: !8262)
!8266 = !DILocation(line: 7008, column: 26, scope: !8262)
!8267 = !DILocation(line: 7008, column: 9, scope: !8252)
!8268 = !DILocation(line: 7011, column: 33, scope: !8262)
!8269 = !DILocation(line: 7011, column: 23, scope: !8262)
!8270 = !DILocation(line: 7011, column: 22, scope: !8262)
!8271 = !DILocation(line: 7011, column: 47, scope: !8262)
!8272 = !DILocation(line: 7011, column: 2, scope: !8262)
!8273 = !DILocation(line: 7012, column: 6, scope: !8262)
!8274 = !DILocation(line: 7011, column: 14, scope: !8262)
!8275 = !DILocation(line: 7011, column: 19, scope: !8262)
!8276 = distinct !{!8276, !8272, !8277}
!8277 = !DILocation(line: 7012, column: 8, scope: !8262)
!8278 = !DILocation(line: 7013, column: 17, scope: !8252)
!8279 = !DILocation(line: 7013, column: 26, scope: !8252)
!8280 = !DILocation(line: 7014, column: 1, scope: !8252)
!8281 = distinct !DISubprogram(name: "f_printf", scope: !3, file: !3, line: 7026, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7027, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8282)
!8282 = !{!8283, !8284, !8285, !8286, !8287, !8288, !8289}
!8283 = !DILocalVariable(name: "argvars", arg: 1, scope: !8281, file: !3, line: 7026, type: !2305)
!8284 = !DILocalVariable(name: "rettv", arg: 2, scope: !8281, file: !3, line: 7026, type: !2305)
!8285 = !DILocalVariable(name: "buf", scope: !8281, file: !3, line: 7028, type: !3499)
!8286 = !DILocalVariable(name: "len", scope: !8281, file: !3, line: 7029, type: !756)
!8287 = !DILocalVariable(name: "s", scope: !8281, file: !3, line: 7030, type: !759)
!8288 = !DILocalVariable(name: "saved_did_emsg", scope: !8281, file: !3, line: 7031, type: !756)
!8289 = !DILocalVariable(name: "fmt", scope: !8281, file: !3, line: 7032, type: !751)
!8290 = !DILocation(line: 7026, column: 20, scope: !8281)
!8291 = !DILocation(line: 7026, column: 39, scope: !8281)
!8292 = !DILocation(line: 7028, column: 5, scope: !8281)
!8293 = !DILocation(line: 7028, column: 12, scope: !8281)
!8294 = !DILocation(line: 7031, column: 27, scope: !8281)
!8295 = !DILocation(line: 7031, column: 10, scope: !8281)
!8296 = !DILocation(line: 7034, column: 12, scope: !8281)
!8297 = !DILocation(line: 7034, column: 19, scope: !8281)
!8298 = !DILocation(line: 7035, column: 12, scope: !8281)
!8299 = !DILocation(line: 7035, column: 17, scope: !8281)
!8300 = !DILocation(line: 7035, column: 26, scope: !8281)
!8301 = !DILocation(line: 7038, column: 14, scope: !8281)
!8302 = !DILocation(line: 7039, column: 19, scope: !8281)
!8303 = !DILocation(line: 7032, column: 11, scope: !8281)
!8304 = !DILocation(line: 7040, column: 58, scope: !8281)
!8305 = !DILocation(line: 7040, column: 11, scope: !8281)
!8306 = !DILocation(line: 7029, column: 10, scope: !8281)
!8307 = !DILocation(line: 7041, column: 10, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 7041, column: 9)
!8309 = !DILocation(line: 7041, column: 9, scope: !8281)
!8310 = !DILocation(line: 7043, column: 16, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 7042, column: 5)
!8312 = !DILocation(line: 7043, column: 12, scope: !8311)
!8313 = !DILocation(line: 7043, column: 6, scope: !8311)
!8314 = !DILocation(line: 7030, column: 13, scope: !8281)
!8315 = !DILocation(line: 7044, column: 8, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 7044, column: 6)
!8317 = !DILocation(line: 7044, column: 6, scope: !8311)
!8318 = !DILocation(line: 7046, column: 27, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 7045, column: 2)
!8320 = !DILocation(line: 7047, column: 12, scope: !8319)
!8321 = !DILocation(line: 7049, column: 2, scope: !8319)
!8322 = !DILocation(line: 7051, column: 14, scope: !8281)
!8323 = !DILocation(line: 7052, column: 1, scope: !8281)
!8324 = distinct !DISubprogram(name: "f_pum_getpos", scope: !3, file: !3, line: 7058, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7059, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8325)
!8325 = !{!8326, !8327}
!8326 = !DILocalVariable(name: "argvars", arg: 1, scope: !8324, file: !3, line: 7058, type: !2305)
!8327 = !DILocalVariable(name: "rettv", arg: 2, scope: !8324, file: !3, line: 7058, type: !2305)
!8328 = !DILocation(line: 7058, column: 24, scope: !8324)
!8329 = !DILocation(line: 7058, column: 50, scope: !8324)
!8330 = !DILocation(line: 7060, column: 9, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 7060, column: 9)
!8332 = !DILocation(line: 7060, column: 33, scope: !8331)
!8333 = !DILocation(line: 7060, column: 9, scope: !8324)
!8334 = !DILocation(line: 7062, column: 31, scope: !8324)
!8335 = !DILocation(line: 7062, column: 36, scope: !8324)
!8336 = !DILocation(line: 7062, column: 5, scope: !8324)
!8337 = !DILocation(line: 7063, column: 1, scope: !8324)
!8338 = distinct !DISubprogram(name: "f_pumvisible", scope: !3, file: !3, line: 7069, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7070, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8339)
!8339 = !{!8340, !8341}
!8340 = !DILocalVariable(name: "argvars", arg: 1, scope: !8338, file: !3, line: 7069, type: !2305)
!8341 = !DILocalVariable(name: "rettv", arg: 2, scope: !8338, file: !3, line: 7069, type: !2305)
!8342 = !DILocation(line: 7069, column: 24, scope: !8338)
!8343 = !DILocation(line: 7069, column: 50, scope: !8338)
!8344 = !DILocation(line: 7071, column: 9, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 7071, column: 9)
!8346 = !DILocation(line: 7071, column: 9, scope: !8338)
!8347 = !DILocation(line: 7072, column: 14, scope: !8345)
!8348 = !DILocation(line: 7072, column: 23, scope: !8345)
!8349 = !DILocation(line: 7072, column: 2, scope: !8345)
!8350 = !DILocation(line: 7073, column: 1, scope: !8338)
!8351 = !DILocation(line: 7222, column: 18, scope: !2604)
!8352 = !DILocation(line: 7222, column: 37, scope: !2604)
!8353 = !DILocation(line: 7224, column: 13, scope: !2604)
!8354 = !DILocation(line: 7228, column: 14, scope: !2604)
!8355 = !DILocation(line: 7230, column: 20, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 7230, column: 9)
!8357 = !DILocation(line: 7230, column: 9, scope: !2604)
!8358 = !DILocation(line: 7233, column: 6, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 7231, column: 5)
!8360 = !DILocation(line: 7245, column: 2, scope: !8359)
!8361 = !DILocation(line: 7163, column: 9, scope: !2629, inlinedAt: !8362)
!8362 = distinct !DILocation(line: 7236, column: 6, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 7234, column: 2)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 7233, column: 6)
!8365 = !DILocation(line: 7165, column: 7, scope: !8366, inlinedAt: !8362)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 7164, column: 5)
!8367 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 7163, column: 9)
!8368 = !DILocation(line: 7166, column: 2, scope: !8366, inlinedAt: !8362)
!8369 = !DILocation(line: 7169, column: 9, scope: !2637, inlinedAt: !8362)
!8370 = !DILocation(line: 7169, column: 27, scope: !2637, inlinedAt: !8362)
!8371 = !DILocation(line: 7169, column: 9, scope: !2629, inlinedAt: !8362)
!8372 = !DILocation(line: 7171, column: 12, scope: !2636, inlinedAt: !8362)
!8373 = !DILocation(line: 7171, column: 7, scope: !2636, inlinedAt: !8362)
!8374 = !DILocation(line: 7172, column: 2, scope: !2636, inlinedAt: !8362)
!8375 = !DILocation(line: 7180, column: 9, scope: !8376, inlinedAt: !8362)
!8376 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 7180, column: 6)
!8377 = !DILocation(line: 7180, column: 6, scope: !2636, inlinedAt: !8362)
!8378 = !DILocation(line: 7181, column: 24, scope: !8376, inlinedAt: !8362)
!8379 = !DILocation(line: 7195, column: 5, scope: !2637, inlinedAt: !8362)
!8380 = !DILocation(line: 7196, column: 9, scope: !2629, inlinedAt: !8362)
!8381 = !DILocation(line: 7184, column: 19, scope: !8382, inlinedAt: !8362)
!8382 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 7183, column: 2)
!8383 = !DILocation(line: 7184, column: 26, scope: !8382, inlinedAt: !8362)
!8384 = !DILocation(line: 7185, column: 10, scope: !8385, inlinedAt: !8362)
!8385 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 7185, column: 10)
!8386 = !DILocation(line: 7186, column: 11, scope: !8385, inlinedAt: !8362)
!8387 = !DILocation(line: 7185, column: 10, scope: !8382, inlinedAt: !8362)
!8388 = !DILocation(line: 7187, column: 21, scope: !8385, inlinedAt: !8362)
!8389 = !DILocation(line: 7187, column: 3, scope: !8385, inlinedAt: !8362)
!8390 = !DILocation(line: 7190, column: 21, scope: !8391, inlinedAt: !8362)
!8391 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 7189, column: 6)
!8392 = !DILocation(line: 7191, column: 21, scope: !8391, inlinedAt: !8362)
!8393 = !DILocation(line: 7193, column: 6, scope: !8382, inlinedAt: !8362)
!8394 = !DILocation(line: 7196, column: 9, scope: !8395, inlinedAt: !8362)
!8395 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 7196, column: 9)
!8396 = !DILocation(line: 7196, column: 27, scope: !8395, inlinedAt: !8362)
!8397 = !DILocation(line: 7199, column: 7, scope: !8395, inlinedAt: !8362)
!8398 = !DILocation(line: 7199, column: 2, scope: !8395, inlinedAt: !8362)
!8399 = !DILocation(line: 7228, column: 24, scope: !2604)
!8400 = !DILocation(line: 7241, column: 11, scope: !8363)
!8401 = !DILocation(line: 7238, column: 9, scope: !8363)
!8402 = !DILocation(line: 7239, column: 9, scope: !8363)
!8403 = !DILocation(line: 7240, column: 9, scope: !8363)
!8404 = !DILocation(line: 7241, column: 9, scope: !8363)
!8405 = !DILocation(line: 7243, column: 2, scope: !8363)
!8406 = !DILocation(line: 7228, column: 30, scope: !2604)
!8407 = !DILocation(line: 7246, column: 5, scope: !8359)
!8408 = !DILocation(line: 7249, column: 17, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 7248, column: 5)
!8410 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 7247, column: 14)
!8411 = !DILocation(line: 7249, column: 22, scope: !8409)
!8412 = !DILocation(line: 7250, column: 8, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 7250, column: 6)
!8414 = !DILocation(line: 7250, column: 16, scope: !8413)
!8415 = !DILocation(line: 7250, column: 19, scope: !8413)
!8416 = !DILocation(line: 7250, column: 31, scope: !8413)
!8417 = !DILocation(line: 7250, column: 6, scope: !8409)
!8418 = !DILocation(line: 7253, column: 7, scope: !8409)
!8419 = !DILocation(line: 7227, column: 17, scope: !2604)
!8420 = !DILocation(line: 7254, column: 7, scope: !8409)
!8421 = !DILocation(line: 7227, column: 22, scope: !2604)
!8422 = !DILocation(line: 7255, column: 7, scope: !8409)
!8423 = !DILocation(line: 7227, column: 27, scope: !2604)
!8424 = !DILocation(line: 7256, column: 7, scope: !8409)
!8425 = !DILocation(line: 7227, column: 32, scope: !2604)
!8426 = !DILocation(line: 7257, column: 16, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 7257, column: 6)
!8428 = !{!3737, !2691, i64 16}
!8429 = !DILocation(line: 7257, column: 23, scope: !8427)
!8430 = !DILocation(line: 7257, column: 6, scope: !8409)
!8431 = !DILocation(line: 7258, column: 16, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 7258, column: 6)
!8433 = !DILocation(line: 7258, column: 23, scope: !8432)
!8434 = !DILocation(line: 7258, column: 6, scope: !8409)
!8435 = !DILocation(line: 7259, column: 16, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 7259, column: 6)
!8437 = !DILocation(line: 7259, column: 23, scope: !8436)
!8438 = !DILocation(line: 7259, column: 6, scope: !8409)
!8439 = !DILocation(line: 7260, column: 16, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 7260, column: 6)
!8441 = !DILocation(line: 7260, column: 23, scope: !8440)
!8442 = !DILocation(line: 7260, column: 6, scope: !8409)
!8443 = !DILocation(line: 7261, column: 31, scope: !8409)
!8444 = !DILocation(line: 7262, column: 31, scope: !8409)
!8445 = !DILocation(line: 7262, column: 6, scope: !8409)
!8446 = !DILocation(line: 7228, column: 21, scope: !2604)
!8447 = !DILocation(line: 7263, column: 31, scope: !8409)
!8448 = !DILocation(line: 7264, column: 31, scope: !8409)
!8449 = !DILocation(line: 7266, column: 2, scope: !8409)
!8450 = !DILocation(line: 7228, column: 27, scope: !2604)
!8451 = !DILocation(line: 7268, column: 28, scope: !8409)
!8452 = !DILocation(line: 7268, column: 26, scope: !8409)
!8453 = !DILocation(line: 7269, column: 28, scope: !8409)
!8454 = !DILocation(line: 7269, column: 26, scope: !8409)
!8455 = !DILocation(line: 7270, column: 28, scope: !8409)
!8456 = !DILocation(line: 7270, column: 26, scope: !8409)
!8457 = !DILocation(line: 7271, column: 28, scope: !8409)
!8458 = !DILocation(line: 7271, column: 26, scope: !8409)
!8459 = !DILocation(line: 7228, column: 33, scope: !2604)
!8460 = !DILocation(line: 7276, column: 12, scope: !2604)
!8461 = !DILocation(line: 7276, column: 19, scope: !2604)
!8462 = !DILocation(line: 7277, column: 28, scope: !2604)
!8463 = !DILocation(line: 7278, column: 5, scope: !2604)
!8464 = !DILocation(line: 7281, column: 11, scope: !2604)
!8465 = !DILocation(line: 7281, column: 25, scope: !2604)
!8466 = !DILocation(line: 7281, column: 5, scope: !2604)
!8467 = !DILocation(line: 7282, column: 12, scope: !2604)
!8468 = !DILocation(line: 7282, column: 19, scope: !2604)
!8469 = !DILocation(line: 7284, column: 1, scope: !2604)
!8470 = distinct !DISubprogram(name: "f_range", scope: !3, file: !3, line: 7323, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7324, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8471)
!8471 = !{!8472, !8473, !8474, !8475, !8476, !8477, !8478}
!8472 = !DILocalVariable(name: "argvars", arg: 1, scope: !8470, file: !3, line: 7323, type: !2305)
!8473 = !DILocalVariable(name: "rettv", arg: 2, scope: !8470, file: !3, line: 7323, type: !2305)
!8474 = !DILocalVariable(name: "start", scope: !8470, file: !3, line: 7325, type: !757)
!8475 = !DILocalVariable(name: "end", scope: !8470, file: !3, line: 7326, type: !757)
!8476 = !DILocalVariable(name: "stride", scope: !8470, file: !3, line: 7327, type: !757)
!8477 = !DILocalVariable(name: "error", scope: !8470, file: !3, line: 7328, type: !756)
!8478 = !DILocalVariable(name: "list", scope: !8479, file: !3, line: 7351, type: !885)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 7350, column: 5)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 7349, column: 14)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 7347, column: 14)
!8482 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 7345, column: 9)
!8483 = !DILocation(line: 7323, column: 19, scope: !8470)
!8484 = !DILocation(line: 7323, column: 38, scope: !8470)
!8485 = !DILocation(line: 7327, column: 17, scope: !8470)
!8486 = !DILocation(line: 7328, column: 5, scope: !8470)
!8487 = !DILocation(line: 7328, column: 10, scope: !8470)
!8488 = !DILocation(line: 7330, column: 13, scope: !8470)
!8489 = !DILocation(line: 7325, column: 17, scope: !8470)
!8490 = !DILocation(line: 7331, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 7331, column: 9)
!8492 = !DILocation(line: 7331, column: 20, scope: !8491)
!8493 = !DILocation(line: 7331, column: 27, scope: !8491)
!8494 = !DILocation(line: 7331, column: 9, scope: !8470)
!8495 = !DILocation(line: 7333, column: 14, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 7332, column: 5)
!8497 = !DILocation(line: 7326, column: 17, scope: !8470)
!8498 = !DILocation(line: 7335, column: 5, scope: !8496)
!8499 = !DILocation(line: 7338, column: 8, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 7337, column: 5)
!8501 = !DILocation(line: 7339, column: 6, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 7339, column: 6)
!8503 = !DILocation(line: 7339, column: 17, scope: !8502)
!8504 = !DILocation(line: 7339, column: 24, scope: !8502)
!8505 = !DILocation(line: 7339, column: 6, scope: !8500)
!8506 = !DILocation(line: 7340, column: 15, scope: !8502)
!8507 = !DILocation(line: 7340, column: 6, scope: !8502)
!8508 = !DILocation(line: 7343, column: 9, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 7343, column: 9)
!8510 = !DILocation(line: 7343, column: 9, scope: !8470)
!8511 = !DILocation(line: 7345, column: 16, scope: !8482)
!8512 = !DILocation(line: 7345, column: 9, scope: !8470)
!8513 = !DILocation(line: 7346, column: 7, scope: !8482)
!8514 = !DILocation(line: 7346, column: 2, scope: !8482)
!8515 = !DILocation(line: 7347, column: 21, scope: !8481)
!8516 = !DILocation(line: 7347, column: 14, scope: !8482)
!8517 = !DILocation(line: 7347, column: 31, scope: !8481)
!8518 = !DILocation(line: 7347, column: 35, scope: !8481)
!8519 = !DILocation(line: 7347, column: 14, scope: !8481)
!8520 = !DILocation(line: 7347, column: 49, scope: !8481)
!8521 = !DILocation(line: 7347, column: 53, scope: !8481)
!8522 = !DILocation(line: 7348, column: 7, scope: !8481)
!8523 = !DILocation(line: 7348, column: 2, scope: !8481)
!8524 = !DILocation(line: 7349, column: 14, scope: !8480)
!8525 = !DILocation(line: 7349, column: 38, scope: !8480)
!8526 = !DILocation(line: 7349, column: 14, scope: !8481)
!8527 = !DILocation(line: 7351, column: 24, scope: !8479)
!8528 = !DILocation(line: 7351, column: 29, scope: !8479)
!8529 = !DILocation(line: 7351, column: 10, scope: !8479)
!8530 = !DILocation(line: 7356, column: 8, scope: !8479)
!8531 = !DILocation(line: 7356, column: 17, scope: !8479)
!8532 = !DILocation(line: 7357, column: 20, scope: !8479)
!8533 = !DILocation(line: 7357, column: 29, scope: !8479)
!8534 = !DILocation(line: 7358, column: 20, scope: !8479)
!8535 = !DILocation(line: 7358, column: 27, scope: !8479)
!8536 = !DILocation(line: 7359, column: 32, scope: !8479)
!8537 = !DILocation(line: 7359, column: 20, scope: !8479)
!8538 = !DILocation(line: 7359, column: 30, scope: !8479)
!8539 = !DILocation(line: 7360, column: 22, scope: !8479)
!8540 = !DILocation(line: 7360, column: 31, scope: !8479)
!8541 = !DILocation(line: 7360, column: 17, scope: !8479)
!8542 = !DILocation(line: 7360, column: 8, scope: !8479)
!8543 = !DILocation(line: 7360, column: 15, scope: !8479)
!8544 = !DILocation(line: 7361, column: 5, scope: !8479)
!8545 = !DILocation(line: 7362, column: 1, scope: !8470)
!8546 = distinct !DISubprogram(name: "f_reg_executing", scope: !3, file: !3, line: 7470, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7471, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8547)
!8547 = !{!8548, !8549}
!8548 = !DILocalVariable(name: "argvars", arg: 1, scope: !8546, file: !3, line: 7470, type: !2305)
!8549 = !DILocalVariable(name: "rettv", arg: 2, scope: !8546, file: !3, line: 7470, type: !2305)
!8550 = !DILocation(line: 7470, column: 27, scope: !8546)
!8551 = !DILocation(line: 7470, column: 53, scope: !8546)
!8552 = !DILocation(line: 7472, column: 21, scope: !8546)
!8553 = !DILocalVariable(name: "regname", arg: 1, scope: !8554, file: !3, line: 7457, type: !756)
!8554 = distinct !DISubprogram(name: "return_register", scope: !3, file: !3, line: 7457, type: !8555, isLocal: true, isDefinition: true, scopeLine: 7458, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8557)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{null, !756, !2305}
!8557 = !{!8553, !8558, !8559}
!8558 = !DILocalVariable(name: "rettv", arg: 2, scope: !8554, file: !3, line: 7457, type: !2305)
!8559 = !DILocalVariable(name: "buf", scope: !8554, file: !3, line: 7459, type: !8560)
!8560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 16, elements: !1922)
!8561 = !DILocation(line: 7457, column: 21, scope: !8554, inlinedAt: !8562)
!8562 = distinct !DILocation(line: 7472, column: 5, scope: !8546)
!8563 = !DILocation(line: 7457, column: 40, scope: !8554, inlinedAt: !8562)
!8564 = !DILocation(line: 7459, column: 5, scope: !8554, inlinedAt: !8562)
!8565 = !DILocation(line: 7459, column: 12, scope: !8554, inlinedAt: !8562)
!8566 = !DILocation(line: 7461, column: 14, scope: !8554, inlinedAt: !8562)
!8567 = !DILocation(line: 7461, column: 12, scope: !8554, inlinedAt: !8562)
!8568 = !DILocation(line: 7462, column: 12, scope: !8554, inlinedAt: !8562)
!8569 = !DILocation(line: 7462, column: 19, scope: !8554, inlinedAt: !8562)
!8570 = !DILocation(line: 7463, column: 28, scope: !8554, inlinedAt: !8562)
!8571 = !DILocation(line: 7463, column: 12, scope: !8554, inlinedAt: !8562)
!8572 = !DILocation(line: 7463, column: 17, scope: !8554, inlinedAt: !8562)
!8573 = !DILocation(line: 7463, column: 26, scope: !8554, inlinedAt: !8562)
!8574 = !DILocation(line: 7464, column: 1, scope: !8554, inlinedAt: !8562)
!8575 = !DILocation(line: 7473, column: 1, scope: !8546)
!8576 = distinct !DISubprogram(name: "f_reg_recording", scope: !3, file: !3, line: 7479, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7480, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8577)
!8577 = !{!8578, !8579}
!8578 = !DILocalVariable(name: "argvars", arg: 1, scope: !8576, file: !3, line: 7479, type: !2305)
!8579 = !DILocalVariable(name: "rettv", arg: 2, scope: !8576, file: !3, line: 7479, type: !2305)
!8580 = !DILocation(line: 7479, column: 27, scope: !8576)
!8581 = !DILocation(line: 7479, column: 53, scope: !8576)
!8582 = !DILocation(line: 7481, column: 21, scope: !8576)
!8583 = !DILocation(line: 7457, column: 21, scope: !8554, inlinedAt: !8584)
!8584 = distinct !DILocation(line: 7481, column: 5, scope: !8576)
!8585 = !DILocation(line: 7457, column: 40, scope: !8554, inlinedAt: !8584)
!8586 = !DILocation(line: 7459, column: 5, scope: !8554, inlinedAt: !8584)
!8587 = !DILocation(line: 7459, column: 12, scope: !8554, inlinedAt: !8584)
!8588 = !DILocation(line: 7461, column: 14, scope: !8554, inlinedAt: !8584)
!8589 = !DILocation(line: 7461, column: 12, scope: !8554, inlinedAt: !8584)
!8590 = !DILocation(line: 7462, column: 12, scope: !8554, inlinedAt: !8584)
!8591 = !DILocation(line: 7462, column: 19, scope: !8554, inlinedAt: !8584)
!8592 = !DILocation(line: 7463, column: 28, scope: !8554, inlinedAt: !8584)
!8593 = !DILocation(line: 7463, column: 12, scope: !8554, inlinedAt: !8584)
!8594 = !DILocation(line: 7463, column: 17, scope: !8554, inlinedAt: !8584)
!8595 = !DILocation(line: 7463, column: 26, scope: !8554, inlinedAt: !8584)
!8596 = !DILocation(line: 7464, column: 1, scope: !8554, inlinedAt: !8584)
!8597 = !DILocation(line: 7482, column: 1, scope: !8576)
!8598 = distinct !DISubprogram(name: "ret_remove", scope: !3, file: !3, line: 604, type: !2579, isLocal: true, isDefinition: true, scopeLine: 605, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8599)
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "argcount", arg: 1, scope: !8598, file: !3, line: 604, type: !756)
!8601 = !DILocalVariable(name: "argtypes", arg: 2, scope: !8598, file: !3, line: 604, type: !797)
!8602 = !DILocation(line: 604, column: 16, scope: !8598)
!8603 = !DILocation(line: 604, column: 42, scope: !8598)
!8604 = !DILocation(line: 606, column: 18, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 606, column: 9)
!8606 = !DILocation(line: 606, column: 9, scope: !8598)
!8607 = !DILocation(line: 608, column: 6, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 608, column: 6)
!8609 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 607, column: 5)
!8610 = !DILocation(line: 608, column: 19, scope: !8608)
!8611 = !DILocation(line: 609, column: 3, scope: !8608)
!8612 = !DILocation(line: 610, column: 26, scope: !8608)
!8613 = !DILocation(line: 610, column: 6, scope: !8608)
!8614 = !DILocation(line: 614, column: 5, scope: !8598)
!8615 = !DILocation(line: 615, column: 1, scope: !8598)
!8616 = distinct !DISubprogram(name: "f_rename", scope: !3, file: !3, line: 7488, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7489, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8617)
!8617 = !{!8618, !8619, !8620}
!8618 = !DILocalVariable(name: "argvars", arg: 1, scope: !8616, file: !3, line: 7488, type: !2305)
!8619 = !DILocalVariable(name: "rettv", arg: 2, scope: !8616, file: !3, line: 7488, type: !2305)
!8620 = !DILocalVariable(name: "buf", scope: !8616, file: !3, line: 7490, type: !3499)
!8621 = !DILocation(line: 7488, column: 20, scope: !8616)
!8622 = !DILocation(line: 7488, column: 39, scope: !8616)
!8623 = !DILocation(line: 7490, column: 5, scope: !8616)
!8624 = !DILocation(line: 7490, column: 12, scope: !8616)
!8625 = !DILocation(line: 7492, column: 9, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 7492, column: 9)
!8627 = !DILocation(line: 7492, column: 28, scope: !8626)
!8628 = !DILocation(line: 7492, column: 31, scope: !8626)
!8629 = !DILocation(line: 7492, column: 9, scope: !8616)
!8630 = !DILocation(line: 7495, column: 36, scope: !8626)
!8631 = !DILocation(line: 7496, column: 30, scope: !8626)
!8632 = !DILocation(line: 7496, column: 11, scope: !8626)
!8633 = !DILocation(line: 7495, column: 25, scope: !8626)
!8634 = !DILocation(line: 7497, column: 1, scope: !8616)
!8635 = distinct !DISubprogram(name: "f_repeat", scope: !3, file: !3, line: 7503, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7504, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8636)
!8636 = !{!8637, !8638, !8639, !8640, !8641, !8642, !8643, !8644}
!8637 = !DILocalVariable(name: "argvars", arg: 1, scope: !8635, file: !3, line: 7503, type: !2305)
!8638 = !DILocalVariable(name: "rettv", arg: 2, scope: !8635, file: !3, line: 7503, type: !2305)
!8639 = !DILocalVariable(name: "p", scope: !8635, file: !3, line: 7505, type: !759)
!8640 = !DILocalVariable(name: "n", scope: !8635, file: !3, line: 7506, type: !756)
!8641 = !DILocalVariable(name: "slen", scope: !8635, file: !3, line: 7507, type: !756)
!8642 = !DILocalVariable(name: "len", scope: !8635, file: !3, line: 7508, type: !756)
!8643 = !DILocalVariable(name: "r", scope: !8635, file: !3, line: 7509, type: !759)
!8644 = !DILocalVariable(name: "i", scope: !8635, file: !3, line: 7510, type: !756)
!8645 = !DILocation(line: 7503, column: 20, scope: !8635)
!8646 = !DILocation(line: 7503, column: 39, scope: !8635)
!8647 = !DILocation(line: 7512, column: 29, scope: !8635)
!8648 = !DILocation(line: 7512, column: 14, scope: !8635)
!8649 = !DILocation(line: 7512, column: 9, scope: !8635)
!8650 = !DILocation(line: 7506, column: 10, scope: !8635)
!8651 = !DILocation(line: 7513, column: 20, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 7513, column: 9)
!8653 = !DILocation(line: 7513, column: 27, scope: !8652)
!8654 = !DILocation(line: 7513, column: 9, scope: !8635)
!8655 = !DILocation(line: 7515, column: 6, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 7515, column: 6)
!8657 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 7514, column: 5)
!8658 = !DILocation(line: 7515, column: 30, scope: !8656)
!8659 = !DILocation(line: 7515, column: 36, scope: !8656)
!8660 = !DILocation(line: 7515, column: 50, scope: !8656)
!8661 = !DILocation(line: 7515, column: 55, scope: !8656)
!8662 = !DILocation(line: 7515, column: 62, scope: !8656)
!8663 = !DILocation(line: 7515, column: 6, scope: !8657)
!8664 = !DILocation(line: 7517, column: 26, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 7517, column: 7)
!8666 = !DILocation(line: 7517, column: 31, scope: !8665)
!8667 = !DILocation(line: 7516, column: 17, scope: !8656)
!8668 = !DILocation(line: 7516, column: 6, scope: !8656)
!8669 = !DILocation(line: 7517, column: 7, scope: !8665)
!8670 = !DILocation(line: 7518, column: 36, scope: !8665)
!8671 = !DILocation(line: 7517, column: 7, scope: !8656)
!8672 = distinct !{!8672, !8668, !8673}
!8673 = !DILocation(line: 7519, column: 7, scope: !8656)
!8674 = !DILocation(line: 7516, column: 14, scope: !8656)
!8675 = !DILocation(line: 7518, column: 22, scope: !8665)
!8676 = !DILocation(line: 7523, column: 6, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 7522, column: 5)
!8678 = !DILocation(line: 7505, column: 13, scope: !8635)
!8679 = !DILocation(line: 7524, column: 9, scope: !8677)
!8680 = !DILocation(line: 7524, column: 16, scope: !8677)
!8681 = !DILocation(line: 7525, column: 9, scope: !8677)
!8682 = !DILocation(line: 7525, column: 14, scope: !8677)
!8683 = !DILocation(line: 7525, column: 23, scope: !8677)
!8684 = !DILocation(line: 7527, column: 14, scope: !8677)
!8685 = !DILocation(line: 7527, column: 9, scope: !8677)
!8686 = !DILocation(line: 7507, column: 10, scope: !8635)
!8687 = !DILocation(line: 7528, column: 13, scope: !8677)
!8688 = !DILocation(line: 7508, column: 10, scope: !8635)
!8689 = !DILocation(line: 7529, column: 10, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 7529, column: 6)
!8691 = !DILocation(line: 7529, column: 6, scope: !8677)
!8692 = !DILocation(line: 7532, column: 16, scope: !8677)
!8693 = !DILocation(line: 7532, column: 12, scope: !8677)
!8694 = !DILocation(line: 7532, column: 6, scope: !8677)
!8695 = !DILocation(line: 7509, column: 13, scope: !8635)
!8696 = !DILocation(line: 7533, column: 8, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 7533, column: 6)
!8698 = !DILocation(line: 7533, column: 6, scope: !8677)
!8699 = !DILocation(line: 7510, column: 10, scope: !8635)
!8700 = !DILocation(line: 7535, column: 20, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 7535, column: 6)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 7535, column: 6)
!8703 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 7534, column: 2)
!8704 = !DILocation(line: 7535, column: 6, scope: !8702)
!8705 = !DILocation(line: 7536, column: 3, scope: !8701)
!8706 = !DILocation(line: 7535, column: 26, scope: !8701)
!8707 = distinct !{!8707, !8704, !8708}
!8708 = !DILocation(line: 7536, column: 3, scope: !8702)
!8709 = distinct !{!8709, !3374}
!8710 = !DILocation(line: 7537, column: 6, scope: !8703)
!8711 = !DILocation(line: 7537, column: 13, scope: !8703)
!8712 = !DILocation(line: 7538, column: 2, scope: !8703)
!8713 = !DILocation(line: 7540, column: 23, scope: !8677)
!8714 = !DILocation(line: 7542, column: 1, scope: !8635)
!8715 = distinct !DISubprogram(name: "f_round", scope: !3, file: !3, line: 7768, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7769, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8716)
!8716 = !{!8717, !8718, !8719}
!8717 = !DILocalVariable(name: "argvars", arg: 1, scope: !8715, file: !3, line: 7768, type: !2305)
!8718 = !DILocalVariable(name: "rettv", arg: 2, scope: !8715, file: !3, line: 7768, type: !2305)
!8719 = !DILocalVariable(name: "f", scope: !8715, file: !3, line: 7770, type: !762)
!8720 = !DILocation(line: 7768, column: 19, scope: !8715)
!8721 = !DILocation(line: 7768, column: 38, scope: !8715)
!8722 = !DILocation(line: 7770, column: 13, scope: !8715)
!8723 = !DILocation(line: 7772, column: 12, scope: !8715)
!8724 = !DILocation(line: 7772, column: 19, scope: !8715)
!8725 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !8726)
!8726 = distinct !DILocation(line: 7773, column: 9, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 7773, column: 9)
!8728 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !8726)
!8729 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !8726)
!8730 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !8726)
!8731 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !8726)
!8732 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !8726)
!8733 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !8726)
!8734 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !8726)
!8735 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !8726)
!8736 = !DILocation(line: 7759, column: 19, scope: !3940, inlinedAt: !8737)
!8737 = distinct !DILocation(line: 7774, column: 24, scope: !8727)
!8738 = !DILocation(line: 7761, column: 14, scope: !3940, inlinedAt: !8737)
!8739 = !DILocation(line: 7761, column: 28, scope: !3940, inlinedAt: !8737)
!8740 = !DILocation(line: 7761, column: 20, scope: !3940, inlinedAt: !8737)
!8741 = !DILocation(line: 7761, column: 44, scope: !3940, inlinedAt: !8737)
!8742 = !DILocation(line: 7761, column: 37, scope: !3940, inlinedAt: !8737)
!8743 = !DILocation(line: 7761, column: 12, scope: !3940, inlinedAt: !8737)
!8744 = !DILocation(line: 7774, column: 2, scope: !8727)
!8745 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !8726)
!8746 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !8726)
!8747 = !DILocation(line: 7777, column: 1, scope: !8715)
!8748 = distinct !DISubprogram(name: "f_screenattr", scope: !3, file: !3, line: 7799, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7800, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8749)
!8749 = !{!8750, !8751, !8752, !8753, !8754}
!8750 = !DILocalVariable(name: "argvars", arg: 1, scope: !8748, file: !3, line: 7799, type: !2305)
!8751 = !DILocalVariable(name: "rettv", arg: 2, scope: !8748, file: !3, line: 7799, type: !2305)
!8752 = !DILocalVariable(name: "row", scope: !8748, file: !3, line: 7801, type: !756)
!8753 = !DILocalVariable(name: "col", scope: !8748, file: !3, line: 7802, type: !756)
!8754 = !DILocalVariable(name: "c", scope: !8748, file: !3, line: 7803, type: !756)
!8755 = !DILocation(line: 7799, column: 24, scope: !8748)
!8756 = !DILocation(line: 7799, column: 43, scope: !8748)
!8757 = !DILocation(line: 7805, column: 16, scope: !8748)
!8758 = !DILocation(line: 7805, column: 11, scope: !8748)
!8759 = !DILocation(line: 7801, column: 10, scope: !8748)
!8760 = !DILocation(line: 7806, column: 35, scope: !8748)
!8761 = !DILocation(line: 7806, column: 16, scope: !8748)
!8762 = !DILocation(line: 7806, column: 11, scope: !8748)
!8763 = !DILocation(line: 7806, column: 53, scope: !8748)
!8764 = !DILocation(line: 7802, column: 10, scope: !8748)
!8765 = !DILocation(line: 7807, column: 13, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 7807, column: 9)
!8767 = !DILocation(line: 7807, column: 17, scope: !8766)
!8768 = !DILocation(line: 7807, column: 27, scope: !8766)
!8769 = !DILocation(line: 7807, column: 24, scope: !8766)
!8770 = !DILocation(line: 7808, column: 13, scope: !8766)
!8771 = !DILocation(line: 7808, column: 6, scope: !8766)
!8772 = !DILocation(line: 7808, column: 27, scope: !8766)
!8773 = !DILocation(line: 7808, column: 24, scope: !8766)
!8774 = !DILocation(line: 7811, column: 6, scope: !8766)
!8775 = !DILocation(line: 7811, column: 18, scope: !8766)
!8776 = !DILocation(line: 7811, column: 34, scope: !8766)
!8777 = !{!3759, !3759, i64 0}
!8778 = !DILocation(line: 7812, column: 17, scope: !8748)
!8779 = !DILocation(line: 7812, column: 26, scope: !8748)
!8780 = !DILocation(line: 7813, column: 1, scope: !8748)
!8781 = distinct !DISubprogram(name: "f_screenchar", scope: !3, file: !3, line: 7819, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7820, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8782)
!8782 = !{!8783, !8784, !8785, !8786, !8787, !8788}
!8783 = !DILocalVariable(name: "argvars", arg: 1, scope: !8781, file: !3, line: 7819, type: !2305)
!8784 = !DILocalVariable(name: "rettv", arg: 2, scope: !8781, file: !3, line: 7819, type: !2305)
!8785 = !DILocalVariable(name: "row", scope: !8781, file: !3, line: 7821, type: !756)
!8786 = !DILocalVariable(name: "col", scope: !8781, file: !3, line: 7822, type: !756)
!8787 = !DILocalVariable(name: "off", scope: !8781, file: !3, line: 7823, type: !756)
!8788 = !DILocalVariable(name: "c", scope: !8781, file: !3, line: 7824, type: !756)
!8789 = !DILocation(line: 7819, column: 24, scope: !8781)
!8790 = !DILocation(line: 7819, column: 43, scope: !8781)
!8791 = !DILocation(line: 7826, column: 16, scope: !8781)
!8792 = !DILocation(line: 7826, column: 11, scope: !8781)
!8793 = !DILocation(line: 7821, column: 10, scope: !8781)
!8794 = !DILocation(line: 7827, column: 35, scope: !8781)
!8795 = !DILocation(line: 7827, column: 16, scope: !8781)
!8796 = !DILocation(line: 7827, column: 11, scope: !8781)
!8797 = !DILocation(line: 7827, column: 53, scope: !8781)
!8798 = !DILocation(line: 7822, column: 10, scope: !8781)
!8799 = !DILocation(line: 7828, column: 13, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 7828, column: 9)
!8801 = !DILocation(line: 7828, column: 17, scope: !8800)
!8802 = !DILocation(line: 7828, column: 27, scope: !8800)
!8803 = !DILocation(line: 7828, column: 24, scope: !8800)
!8804 = !DILocation(line: 7828, column: 46, scope: !8800)
!8805 = !DILocation(line: 7828, column: 39, scope: !8800)
!8806 = !DILocation(line: 7828, column: 60, scope: !8800)
!8807 = !DILocation(line: 7828, column: 57, scope: !8800)
!8808 = !DILocation(line: 7832, column: 8, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 7831, column: 5)
!8810 = !DILocation(line: 7832, column: 24, scope: !8809)
!8811 = !DILocation(line: 7823, column: 10, scope: !8781)
!8812 = !DILocation(line: 7833, column: 6, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 7833, column: 6)
!8814 = !DILocation(line: 7833, column: 15, scope: !8813)
!8815 = !DILocation(line: 7836, column: 10, scope: !8813)
!8816 = !DILocation(line: 7833, column: 18, scope: !8813)
!8817 = !DILocation(line: 7833, column: 37, scope: !8813)
!8818 = !DILocation(line: 7833, column: 6, scope: !8809)
!8819 = !DILocation(line: 7824, column: 10, scope: !8781)
!8820 = !DILocation(line: 7838, column: 28, scope: !8781)
!8821 = !DILocation(line: 7838, column: 17, scope: !8781)
!8822 = !DILocation(line: 7838, column: 26, scope: !8781)
!8823 = !DILocation(line: 7839, column: 1, scope: !8781)
!8824 = distinct !DISubprogram(name: "f_screenchars", scope: !3, file: !3, line: 7845, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7846, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8825)
!8825 = !{!8826, !8827, !8828, !8829, !8830, !8831, !8832}
!8826 = !DILocalVariable(name: "argvars", arg: 1, scope: !8824, file: !3, line: 7845, type: !2305)
!8827 = !DILocalVariable(name: "rettv", arg: 2, scope: !8824, file: !3, line: 7845, type: !2305)
!8828 = !DILocalVariable(name: "row", scope: !8824, file: !3, line: 7847, type: !756)
!8829 = !DILocalVariable(name: "col", scope: !8824, file: !3, line: 7848, type: !756)
!8830 = !DILocalVariable(name: "off", scope: !8824, file: !3, line: 7849, type: !756)
!8831 = !DILocalVariable(name: "c", scope: !8824, file: !3, line: 7850, type: !756)
!8832 = !DILocalVariable(name: "i", scope: !8824, file: !3, line: 7851, type: !756)
!8833 = !DILocation(line: 7845, column: 25, scope: !8824)
!8834 = !DILocation(line: 7845, column: 44, scope: !8824)
!8835 = !DILocation(line: 7853, column: 9, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 7853, column: 9)
!8837 = !DILocation(line: 7853, column: 33, scope: !8836)
!8838 = !DILocation(line: 7853, column: 9, scope: !8824)
!8839 = !DILocation(line: 7855, column: 16, scope: !8824)
!8840 = !DILocation(line: 7855, column: 11, scope: !8824)
!8841 = !DILocation(line: 7847, column: 10, scope: !8824)
!8842 = !DILocation(line: 7856, column: 35, scope: !8824)
!8843 = !DILocation(line: 7856, column: 16, scope: !8824)
!8844 = !DILocation(line: 7856, column: 11, scope: !8824)
!8845 = !DILocation(line: 7856, column: 53, scope: !8824)
!8846 = !DILocation(line: 7848, column: 10, scope: !8824)
!8847 = !DILocation(line: 7857, column: 13, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 7857, column: 9)
!8849 = !DILocation(line: 7857, column: 17, scope: !8848)
!8850 = !DILocation(line: 7857, column: 27, scope: !8848)
!8851 = !DILocation(line: 7857, column: 24, scope: !8848)
!8852 = !DILocation(line: 7857, column: 46, scope: !8848)
!8853 = !DILocation(line: 7857, column: 39, scope: !8848)
!8854 = !DILocation(line: 7857, column: 60, scope: !8848)
!8855 = !DILocation(line: 7857, column: 57, scope: !8848)
!8856 = !DILocation(line: 7860, column: 11, scope: !8824)
!8857 = !DILocation(line: 7860, column: 27, scope: !8824)
!8858 = !DILocation(line: 7849, column: 10, scope: !8824)
!8859 = !DILocation(line: 7861, column: 9, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 7861, column: 9)
!8861 = !DILocation(line: 7861, column: 18, scope: !8860)
!8862 = !DILocation(line: 7864, column: 6, scope: !8860)
!8863 = !DILocation(line: 7861, column: 21, scope: !8860)
!8864 = !DILocation(line: 7861, column: 40, scope: !8860)
!8865 = !DILocation(line: 7861, column: 9, scope: !8824)
!8866 = !DILocation(line: 7850, column: 10, scope: !8824)
!8867 = !DILocation(line: 7865, column: 31, scope: !8824)
!8868 = !DILocation(line: 7865, column: 36, scope: !8824)
!8869 = !DILocation(line: 7865, column: 44, scope: !8824)
!8870 = !DILocation(line: 7865, column: 5, scope: !8824)
!8871 = !DILocation(line: 7867, column: 9, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 7867, column: 9)
!8873 = !DILocation(line: 7869, column: 18, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 7869, column: 2)
!8875 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 7869, column: 2)
!8876 = !DILocation(line: 7869, column: 16, scope: !8874)
!8877 = !DILocation(line: 7867, column: 9, scope: !8824)
!8878 = !DILocation(line: 7851, column: 10, scope: !8824)
!8879 = !DILocation(line: 7869, column: 29, scope: !8874)
!8880 = !DILocation(line: 7869, column: 32, scope: !8874)
!8881 = !DILocation(line: 7869, column: 53, scope: !8874)
!8882 = !DILocation(line: 7869, column: 2, scope: !8875)
!8883 = !DILocation(line: 7870, column: 37, scope: !8874)
!8884 = !DILocation(line: 7871, column: 12, scope: !8874)
!8885 = !DILocation(line: 7870, column: 6, scope: !8874)
!8886 = !DILocation(line: 7869, column: 59, scope: !8874)
!8887 = distinct !{!8887, !8882, !8888}
!8888 = !DILocation(line: 7871, column: 45, scope: !8875)
!8889 = !DILocation(line: 7872, column: 1, scope: !8824)
!8890 = distinct !DISubprogram(name: "f_screencol", scope: !3, file: !3, line: 7880, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7881, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8891)
!8891 = !{!8892, !8893}
!8892 = !DILocalVariable(name: "argvars", arg: 1, scope: !8890, file: !3, line: 7880, type: !2305)
!8893 = !DILocalVariable(name: "rettv", arg: 2, scope: !8890, file: !3, line: 7880, type: !2305)
!8894 = !DILocation(line: 7880, column: 23, scope: !8890)
!8895 = !DILocation(line: 7880, column: 49, scope: !8890)
!8896 = !DILocation(line: 7882, column: 28, scope: !8890)
!8897 = !DILocation(line: 7882, column: 47, scope: !8890)
!8898 = !DILocation(line: 7882, column: 17, scope: !8890)
!8899 = !DILocation(line: 7882, column: 26, scope: !8890)
!8900 = !DILocation(line: 7883, column: 1, scope: !8890)
!8901 = distinct !DISubprogram(name: "f_screenrow", scope: !3, file: !3, line: 7889, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7890, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8902)
!8902 = !{!8903, !8904}
!8903 = !DILocalVariable(name: "argvars", arg: 1, scope: !8901, file: !3, line: 7889, type: !2305)
!8904 = !DILocalVariable(name: "rettv", arg: 2, scope: !8901, file: !3, line: 7889, type: !2305)
!8905 = !DILocation(line: 7889, column: 23, scope: !8901)
!8906 = !DILocation(line: 7889, column: 49, scope: !8901)
!8907 = !DILocation(line: 7891, column: 28, scope: !8901)
!8908 = !DILocation(line: 7891, column: 47, scope: !8901)
!8909 = !DILocation(line: 7891, column: 17, scope: !8901)
!8910 = !DILocation(line: 7891, column: 26, scope: !8901)
!8911 = !DILocation(line: 7892, column: 1, scope: !8901)
!8912 = distinct !DISubprogram(name: "f_screenstring", scope: !3, file: !3, line: 7898, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7899, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8913)
!8913 = !{!8914, !8915, !8916, !8917, !8918, !8919, !8920, !8921, !8925}
!8914 = !DILocalVariable(name: "argvars", arg: 1, scope: !8912, file: !3, line: 7898, type: !2305)
!8915 = !DILocalVariable(name: "rettv", arg: 2, scope: !8912, file: !3, line: 7898, type: !2305)
!8916 = !DILocalVariable(name: "row", scope: !8912, file: !3, line: 7900, type: !756)
!8917 = !DILocalVariable(name: "col", scope: !8912, file: !3, line: 7901, type: !756)
!8918 = !DILocalVariable(name: "off", scope: !8912, file: !3, line: 7902, type: !756)
!8919 = !DILocalVariable(name: "c", scope: !8912, file: !3, line: 7903, type: !756)
!8920 = !DILocalVariable(name: "i", scope: !8912, file: !3, line: 7904, type: !756)
!8921 = !DILocalVariable(name: "buf", scope: !8912, file: !3, line: 7905, type: !8922)
!8922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 176, elements: !8923)
!8923 = !{!8924}
!8924 = !DISubrange(count: 22)
!8925 = !DILocalVariable(name: "buflen", scope: !8912, file: !3, line: 7906, type: !756)
!8926 = !DILocation(line: 7898, column: 26, scope: !8912)
!8927 = !DILocation(line: 7898, column: 45, scope: !8912)
!8928 = !DILocation(line: 7905, column: 5, scope: !8912)
!8929 = !DILocation(line: 7905, column: 12, scope: !8912)
!8930 = !DILocation(line: 7906, column: 10, scope: !8912)
!8931 = !DILocation(line: 7908, column: 12, scope: !8912)
!8932 = !DILocation(line: 7908, column: 17, scope: !8912)
!8933 = !DILocation(line: 7908, column: 26, scope: !8912)
!8934 = !DILocation(line: 7909, column: 12, scope: !8912)
!8935 = !DILocation(line: 7909, column: 19, scope: !8912)
!8936 = !DILocation(line: 7911, column: 16, scope: !8912)
!8937 = !DILocation(line: 7911, column: 11, scope: !8912)
!8938 = !DILocation(line: 7900, column: 10, scope: !8912)
!8939 = !DILocation(line: 7912, column: 35, scope: !8912)
!8940 = !DILocation(line: 7912, column: 16, scope: !8912)
!8941 = !DILocation(line: 7912, column: 11, scope: !8912)
!8942 = !DILocation(line: 7912, column: 53, scope: !8912)
!8943 = !DILocation(line: 7901, column: 10, scope: !8912)
!8944 = !DILocation(line: 7913, column: 13, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 7913, column: 9)
!8946 = !DILocation(line: 7913, column: 17, scope: !8945)
!8947 = !DILocation(line: 7913, column: 27, scope: !8945)
!8948 = !DILocation(line: 7913, column: 24, scope: !8945)
!8949 = !DILocation(line: 7913, column: 46, scope: !8945)
!8950 = !DILocation(line: 7913, column: 39, scope: !8945)
!8951 = !DILocation(line: 7913, column: 60, scope: !8945)
!8952 = !DILocation(line: 7913, column: 57, scope: !8945)
!8953 = !DILocation(line: 7916, column: 11, scope: !8912)
!8954 = !DILocation(line: 7916, column: 27, scope: !8912)
!8955 = !DILocation(line: 7902, column: 10, scope: !8912)
!8956 = !DILocation(line: 7917, column: 9, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 7917, column: 9)
!8958 = !DILocation(line: 7917, column: 18, scope: !8957)
!8959 = !DILocation(line: 7920, column: 6, scope: !8957)
!8960 = !DILocation(line: 7917, column: 21, scope: !8957)
!8961 = !DILocation(line: 7917, column: 40, scope: !8957)
!8962 = !DILocation(line: 7917, column: 9, scope: !8912)
!8963 = !DILocation(line: 7903, column: 10, scope: !8912)
!8964 = !DILocation(line: 7921, column: 15, scope: !8912)
!8965 = !DILocation(line: 7923, column: 9, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 7923, column: 9)
!8967 = !DILocation(line: 7923, column: 18, scope: !8966)
!8968 = !DILocation(line: 7923, column: 21, scope: !8966)
!8969 = !DILocation(line: 7923, column: 40, scope: !8966)
!8970 = !DILocation(line: 7924, column: 18, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 7924, column: 2)
!8972 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 7924, column: 2)
!8973 = !DILocation(line: 7924, column: 16, scope: !8971)
!8974 = !DILocation(line: 7923, column: 9, scope: !8912)
!8975 = !DILocation(line: 7904, column: 10, scope: !8912)
!8976 = !DILocation(line: 7924, column: 32, scope: !8971)
!8977 = !DILocation(line: 7924, column: 53, scope: !8971)
!8978 = !DILocation(line: 7924, column: 2, scope: !8972)
!8979 = !DILocation(line: 7925, column: 16, scope: !8971)
!8980 = !DILocation(line: 7925, column: 56, scope: !8971)
!8981 = !DILocation(line: 7925, column: 13, scope: !8971)
!8982 = !DILocation(line: 7924, column: 59, scope: !8971)
!8983 = !DILocation(line: 7924, column: 29, scope: !8971)
!8984 = distinct !{!8984, !8978, !8985}
!8985 = !DILocation(line: 7925, column: 64, scope: !8972)
!8986 = !DILocation(line: 7927, column: 5, scope: !8912)
!8987 = !DILocation(line: 7927, column: 17, scope: !8912)
!8988 = !DILocation(line: 7928, column: 28, scope: !8912)
!8989 = !DILocation(line: 7928, column: 26, scope: !8912)
!8990 = !DILocation(line: 7929, column: 1, scope: !8912)
!8991 = distinct !DISubprogram(name: "f_search", scope: !3, file: !3, line: 7935, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7936, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8992)
!8992 = !{!8993, !8994, !8995}
!8993 = !DILocalVariable(name: "argvars", arg: 1, scope: !8991, file: !3, line: 7935, type: !2305)
!8994 = !DILocalVariable(name: "rettv", arg: 2, scope: !8991, file: !3, line: 7935, type: !2305)
!8995 = !DILocalVariable(name: "flags", scope: !8991, file: !3, line: 7937, type: !756)
!8996 = !DILocation(line: 7935, column: 20, scope: !8991)
!8997 = !DILocation(line: 7935, column: 39, scope: !8991)
!8998 = !DILocation(line: 7937, column: 5, scope: !8991)
!8999 = !DILocation(line: 7937, column: 10, scope: !8991)
!9000 = !DILocation(line: 7939, column: 28, scope: !8991)
!9001 = !DILocation(line: 7939, column: 17, scope: !8991)
!9002 = !DILocation(line: 7939, column: 26, scope: !8991)
!9003 = !DILocation(line: 7940, column: 1, scope: !8991)
!9004 = distinct !DISubprogram(name: "f_searchdecl", scope: !3, file: !3, line: 7946, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7947, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9005)
!9005 = !{!9006, !9007, !9008, !9009, !9010, !9011}
!9006 = !DILocalVariable(name: "argvars", arg: 1, scope: !9004, file: !3, line: 7946, type: !2305)
!9007 = !DILocalVariable(name: "rettv", arg: 2, scope: !9004, file: !3, line: 7946, type: !2305)
!9008 = !DILocalVariable(name: "locally", scope: !9004, file: !3, line: 7948, type: !756)
!9009 = !DILocalVariable(name: "thisblock", scope: !9004, file: !3, line: 7949, type: !756)
!9010 = !DILocalVariable(name: "error", scope: !9004, file: !3, line: 7950, type: !756)
!9011 = !DILocalVariable(name: "name", scope: !9004, file: !3, line: 7951, type: !759)
!9012 = !DILocation(line: 7946, column: 24, scope: !9004)
!9013 = !DILocation(line: 7946, column: 43, scope: !9004)
!9014 = !DILocation(line: 7948, column: 10, scope: !9004)
!9015 = !DILocation(line: 7949, column: 10, scope: !9004)
!9016 = !DILocation(line: 7950, column: 5, scope: !9004)
!9017 = !DILocation(line: 7950, column: 10, scope: !9004)
!9018 = !DILocation(line: 7953, column: 17, scope: !9004)
!9019 = !DILocation(line: 7953, column: 26, scope: !9004)
!9020 = !DILocation(line: 7955, column: 12, scope: !9004)
!9021 = !DILocation(line: 7951, column: 13, scope: !9004)
!9022 = !DILocation(line: 7956, column: 9, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 7956, column: 9)
!9024 = !DILocation(line: 7956, column: 20, scope: !9023)
!9025 = !DILocation(line: 7956, column: 27, scope: !9023)
!9026 = !DILocation(line: 7956, column: 9, scope: !9004)
!9027 = !DILocation(line: 7958, column: 18, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 7957, column: 5)
!9029 = !DILocation(line: 7958, column: 13, scope: !9028)
!9030 = !DILocation(line: 7958, column: 12, scope: !9028)
!9031 = !DILocation(line: 7959, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 7959, column: 6)
!9033 = !DILocation(line: 7959, column: 13, scope: !9032)
!9034 = !DILocation(line: 7959, column: 16, scope: !9032)
!9035 = !DILocation(line: 7959, column: 27, scope: !9032)
!9036 = !DILocation(line: 7959, column: 34, scope: !9032)
!9037 = !DILocation(line: 7959, column: 6, scope: !9028)
!9038 = !DILocation(line: 7960, column: 23, scope: !9032)
!9039 = !DILocation(line: 7960, column: 18, scope: !9032)
!9040 = !DILocation(line: 7962, column: 10, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 7962, column: 9)
!9042 = !DILocation(line: 7960, column: 6, scope: !9032)
!9043 = !DILocation(line: 7962, column: 24, scope: !9041)
!9044 = !DILocation(line: 7962, column: 16, scope: !9041)
!9045 = !DILocation(line: 7963, column: 46, scope: !9041)
!9046 = !DILocation(line: 7963, column: 41, scope: !9041)
!9047 = !DILocation(line: 7963, column: 25, scope: !9041)
!9048 = !DILocation(line: 7964, column: 43, scope: !9041)
!9049 = !DILocation(line: 7963, column: 23, scope: !9041)
!9050 = !DILocation(line: 7963, column: 2, scope: !9041)
!9051 = !DILocation(line: 7965, column: 1, scope: !9004)
!9052 = distinct !DISubprogram(name: "f_searchpair", scope: !3, file: !3, line: 8054, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8055, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9053)
!9053 = !{!9054, !9055}
!9054 = !DILocalVariable(name: "argvars", arg: 1, scope: !9052, file: !3, line: 8054, type: !2305)
!9055 = !DILocalVariable(name: "rettv", arg: 2, scope: !9052, file: !3, line: 8054, type: !2305)
!9056 = !DILocation(line: 8054, column: 24, scope: !9052)
!9057 = !DILocation(line: 8054, column: 43, scope: !9052)
!9058 = !DILocation(line: 8056, column: 28, scope: !9052)
!9059 = !DILocation(line: 8056, column: 17, scope: !9052)
!9060 = !DILocation(line: 8056, column: 26, scope: !9052)
!9061 = !DILocation(line: 8057, column: 1, scope: !9052)
!9062 = distinct !DISubprogram(name: "f_searchpairpos", scope: !3, file: !3, line: 8063, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8064, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9063)
!9063 = !{!9064, !9065, !9066, !9067, !9068}
!9064 = !DILocalVariable(name: "argvars", arg: 1, scope: !9062, file: !3, line: 8063, type: !2305)
!9065 = !DILocalVariable(name: "rettv", arg: 2, scope: !9062, file: !3, line: 8063, type: !2305)
!9066 = !DILocalVariable(name: "match_pos", scope: !9062, file: !3, line: 8065, type: !1315)
!9067 = !DILocalVariable(name: "lnum", scope: !9062, file: !3, line: 8066, type: !756)
!9068 = !DILocalVariable(name: "col", scope: !9062, file: !3, line: 8067, type: !756)
!9069 = !DILocation(line: 8063, column: 27, scope: !9062)
!9070 = !DILocation(line: 8063, column: 46, scope: !9062)
!9071 = !DILocation(line: 8065, column: 5, scope: !9062)
!9072 = !DILocation(line: 8066, column: 10, scope: !9062)
!9073 = !DILocation(line: 8067, column: 10, scope: !9062)
!9074 = !DILocation(line: 8069, column: 9, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 8069, column: 9)
!9076 = !DILocation(line: 8069, column: 33, scope: !9075)
!9077 = !DILocation(line: 8069, column: 9, scope: !9062)
!9078 = !DILocation(line: 8065, column: 11, scope: !9062)
!9079 = !DILocation(line: 8072, column: 9, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 8072, column: 9)
!9081 = !DILocation(line: 8072, column: 45, scope: !9080)
!9082 = !DILocation(line: 8072, column: 9, scope: !9062)
!9083 = !DILocation(line: 8074, column: 19, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 8073, column: 5)
!9085 = !DILocation(line: 8075, column: 18, scope: !9084)
!9086 = !DILocation(line: 8076, column: 5, scope: !9084)
!9087 = !DILocation(line: 8078, column: 31, scope: !9062)
!9088 = !DILocation(line: 8078, column: 36, scope: !9062)
!9089 = !DILocation(line: 8078, column: 5, scope: !9062)
!9090 = !DILocation(line: 8079, column: 36, scope: !9062)
!9091 = !DILocation(line: 8079, column: 5, scope: !9062)
!9092 = !DILocation(line: 8080, column: 1, scope: !9062)
!9093 = distinct !DISubprogram(name: "f_searchpos", scope: !3, file: !3, line: 8264, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8265, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9094)
!9094 = !{!9095, !9096, !9097, !9098, !9099, !9100, !9101}
!9095 = !DILocalVariable(name: "argvars", arg: 1, scope: !9093, file: !3, line: 8264, type: !2305)
!9096 = !DILocalVariable(name: "rettv", arg: 2, scope: !9093, file: !3, line: 8264, type: !2305)
!9097 = !DILocalVariable(name: "match_pos", scope: !9093, file: !3, line: 8266, type: !1315)
!9098 = !DILocalVariable(name: "lnum", scope: !9093, file: !3, line: 8267, type: !756)
!9099 = !DILocalVariable(name: "col", scope: !9093, file: !3, line: 8268, type: !756)
!9100 = !DILocalVariable(name: "n", scope: !9093, file: !3, line: 8269, type: !756)
!9101 = !DILocalVariable(name: "flags", scope: !9093, file: !3, line: 8270, type: !756)
!9102 = !DILocation(line: 8264, column: 23, scope: !9093)
!9103 = !DILocation(line: 8264, column: 42, scope: !9093)
!9104 = !DILocation(line: 8266, column: 5, scope: !9093)
!9105 = !DILocation(line: 8267, column: 10, scope: !9093)
!9106 = !DILocation(line: 8268, column: 10, scope: !9093)
!9107 = !DILocation(line: 8270, column: 5, scope: !9093)
!9108 = !DILocation(line: 8270, column: 10, scope: !9093)
!9109 = !DILocation(line: 8272, column: 9, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 8272, column: 9)
!9111 = !DILocation(line: 8272, column: 33, scope: !9110)
!9112 = !DILocation(line: 8272, column: 9, scope: !9093)
!9113 = !DILocation(line: 8266, column: 11, scope: !9093)
!9114 = !DILocation(line: 8275, column: 9, scope: !9093)
!9115 = !DILocation(line: 8269, column: 10, scope: !9093)
!9116 = !DILocation(line: 8276, column: 11, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 8276, column: 9)
!9118 = !DILocation(line: 8276, column: 9, scope: !9093)
!9119 = !DILocation(line: 8278, column: 19, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 8277, column: 5)
!9121 = !DILocation(line: 8279, column: 18, scope: !9120)
!9122 = !DILocation(line: 8280, column: 5, scope: !9120)
!9123 = !DILocation(line: 8282, column: 31, scope: !9093)
!9124 = !DILocation(line: 8282, column: 36, scope: !9093)
!9125 = !DILocation(line: 8282, column: 5, scope: !9093)
!9126 = !DILocation(line: 8283, column: 36, scope: !9093)
!9127 = !DILocation(line: 8283, column: 5, scope: !9093)
!9128 = !DILocation(line: 8284, column: 9, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 8284, column: 9)
!9130 = !DILocation(line: 8284, column: 15, scope: !9129)
!9131 = !DILocation(line: 8284, column: 9, scope: !9093)
!9132 = !DILocation(line: 8285, column: 33, scope: !9129)
!9133 = !DILocation(line: 8285, column: 41, scope: !9129)
!9134 = !DILocation(line: 8285, column: 2, scope: !9129)
!9135 = !DILocation(line: 8286, column: 1, scope: !9093)
!9136 = distinct !DISubprogram(name: "f_setcharpos", scope: !3, file: !3, line: 8337, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8338, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9137)
!9137 = !{!9138, !9139}
!9138 = !DILocalVariable(name: "argvars", arg: 1, scope: !9136, file: !3, line: 8337, type: !2305)
!9139 = !DILocalVariable(name: "rettv", arg: 2, scope: !9136, file: !3, line: 8337, type: !2305)
!9140 = !DILocation(line: 8337, column: 24, scope: !9136)
!9141 = !DILocation(line: 8337, column: 43, scope: !9136)
!9142 = !DILocation(line: 8339, column: 5, scope: !9136)
!9143 = !DILocation(line: 8340, column: 1, scope: !9136)
!9144 = distinct !DISubprogram(name: "f_setcharsearch", scope: !3, file: !3, line: 8343, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8344, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9145)
!9145 = !{!9146, !9147, !9148, !9149, !9150, !9151, !9161}
!9146 = !DILocalVariable(name: "argvars", arg: 1, scope: !9144, file: !3, line: 8343, type: !2305)
!9147 = !DILocalVariable(name: "rettv", arg: 2, scope: !9144, file: !3, line: 8343, type: !2305)
!9148 = !DILocalVariable(name: "d", scope: !9144, file: !3, line: 8345, type: !929)
!9149 = !DILocalVariable(name: "di", scope: !9144, file: !3, line: 8346, type: !2464)
!9150 = !DILocalVariable(name: "csearch", scope: !9144, file: !3, line: 8347, type: !759)
!9151 = !DILocalVariable(name: "pcc", scope: !9152, file: !3, line: 8362, type: !9158)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 8361, column: 6)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 8360, column: 10)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 8359, column: 2)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 8358, column: 6)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 8356, column: 5)
!9157 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 8355, column: 9)
!9158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 192, elements: !9159)
!9159 = !{!9160}
!9160 = !DISubrange(count: 6)
!9161 = !DILocalVariable(name: "c", scope: !9152, file: !3, line: 8363, type: !756)
!9162 = !DILocation(line: 8343, column: 27, scope: !9144)
!9163 = !DILocation(line: 8343, column: 46, scope: !9144)
!9164 = !DILocation(line: 8349, column: 20, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 8349, column: 9)
!9166 = !DILocation(line: 8349, column: 27, scope: !9165)
!9167 = !DILocation(line: 8349, column: 9, scope: !9144)
!9168 = !DILocation(line: 8351, column: 7, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 8350, column: 5)
!9170 = !DILocation(line: 8351, column: 2, scope: !9169)
!9171 = !DILocation(line: 8352, column: 2, scope: !9169)
!9172 = !DILocation(line: 8355, column: 25, scope: !9157)
!9173 = !DILocation(line: 8355, column: 30, scope: !9157)
!9174 = !DILocation(line: 8345, column: 13, scope: !9144)
!9175 = !DILocation(line: 8355, column: 38, scope: !9157)
!9176 = !DILocation(line: 8355, column: 9, scope: !9144)
!9177 = !DILocation(line: 8357, column: 12, scope: !9156)
!9178 = !DILocation(line: 8347, column: 13, scope: !9144)
!9179 = !DILocation(line: 8358, column: 14, scope: !9155)
!9180 = !DILocation(line: 8358, column: 6, scope: !9156)
!9181 = !DILocation(line: 8360, column: 10, scope: !9153)
!9182 = !DILocation(line: 8360, column: 10, scope: !9154)
!9183 = !DILocation(line: 8362, column: 3, scope: !9152)
!9184 = !DILocation(line: 8362, column: 7, scope: !9152)
!9185 = !DILocation(line: 8363, column: 34, scope: !9152)
!9186 = !DILocation(line: 8363, column: 11, scope: !9152)
!9187 = !DILocation(line: 8363, column: 7, scope: !9152)
!9188 = !DILocation(line: 8365, column: 32, scope: !9152)
!9189 = !DILocation(line: 8365, column: 3, scope: !9152)
!9190 = !DILocation(line: 8366, column: 6, scope: !9153)
!9191 = !DILocation(line: 8366, column: 6, scope: !9152)
!9192 = !DILocation(line: 8368, column: 20, scope: !9153)
!9193 = !DILocation(line: 8369, column: 16, scope: !9153)
!9194 = !DILocation(line: 8368, column: 3, scope: !9153)
!9195 = !DILocation(line: 8372, column: 7, scope: !9156)
!9196 = !DILocation(line: 8346, column: 17, scope: !9144)
!9197 = !DILocation(line: 8373, column: 9, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 8373, column: 6)
!9199 = !DILocation(line: 8373, column: 6, scope: !9156)
!9200 = !DILocation(line: 8374, column: 52, scope: !9198)
!9201 = !DILocation(line: 8374, column: 33, scope: !9198)
!9202 = !DILocation(line: 8374, column: 28, scope: !9198)
!9203 = !DILocation(line: 8374, column: 6, scope: !9198)
!9204 = !DILocation(line: 8377, column: 7, scope: !9156)
!9205 = !DILocation(line: 8378, column: 9, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 8378, column: 6)
!9207 = !DILocation(line: 8378, column: 6, scope: !9156)
!9208 = !DILocation(line: 8379, column: 45, scope: !9206)
!9209 = !DILocation(line: 8379, column: 26, scope: !9206)
!9210 = !DILocation(line: 8379, column: 25, scope: !9206)
!9211 = !DILocation(line: 8379, column: 24, scope: !9206)
!9212 = !DILocation(line: 8379, column: 6, scope: !9206)
!9213 = !DILocation(line: 8381, column: 1, scope: !9144)
!9214 = distinct !DISubprogram(name: "f_setcursorcharpos", scope: !3, file: !3, line: 8387, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8388, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9215)
!9215 = !{!9216, !9217}
!9216 = !DILocalVariable(name: "argvars", arg: 1, scope: !9214, file: !3, line: 8387, type: !2305)
!9217 = !DILocalVariable(name: "rettv", arg: 2, scope: !9214, file: !3, line: 8387, type: !2305)
!9218 = !DILocation(line: 8387, column: 30, scope: !9214)
!9219 = !DILocation(line: 8387, column: 49, scope: !9214)
!9220 = !DILocation(line: 8389, column: 5, scope: !9214)
!9221 = !DILocation(line: 8390, column: 1, scope: !9214)
!9222 = distinct !DISubprogram(name: "f_setenv", scope: !3, file: !3, line: 8396, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8397, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9223)
!9223 = !{!9224, !9225, !9226, !9227, !9228}
!9224 = !DILocalVariable(name: "argvars", arg: 1, scope: !9222, file: !3, line: 8396, type: !2305)
!9225 = !DILocalVariable(name: "rettv", arg: 2, scope: !9222, file: !3, line: 8396, type: !2305)
!9226 = !DILocalVariable(name: "namebuf", scope: !9222, file: !3, line: 8398, type: !3499)
!9227 = !DILocalVariable(name: "valbuf", scope: !9222, file: !3, line: 8399, type: !3499)
!9228 = !DILocalVariable(name: "name", scope: !9222, file: !3, line: 8400, type: !759)
!9229 = !DILocation(line: 8396, column: 20, scope: !9222)
!9230 = !DILocation(line: 8396, column: 39, scope: !9222)
!9231 = !DILocation(line: 8398, column: 5, scope: !9222)
!9232 = !DILocation(line: 8398, column: 14, scope: !9222)
!9233 = !DILocation(line: 8399, column: 5, scope: !9222)
!9234 = !DILocation(line: 8399, column: 14, scope: !9222)
!9235 = !DILocation(line: 8400, column: 21, scope: !9222)
!9236 = !DILocation(line: 8400, column: 14, scope: !9222)
!9237 = !DILocation(line: 8402, column: 9, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 8402, column: 9)
!9239 = !DILocation(line: 8402, column: 20, scope: !9238)
!9240 = !DILocation(line: 8402, column: 27, scope: !9238)
!9241 = !DILocation(line: 8403, column: 11, scope: !9238)
!9242 = !DILocation(line: 8403, column: 30, scope: !9238)
!9243 = !DILocation(line: 8403, column: 39, scope: !9238)
!9244 = !DILocation(line: 8402, column: 9, scope: !9222)
!9245 = !DILocation(line: 8404, column: 2, scope: !9238)
!9246 = !DILocation(line: 8406, column: 19, scope: !9238)
!9247 = !DILocation(line: 8406, column: 2, scope: !9238)
!9248 = !DILocation(line: 8407, column: 1, scope: !9222)
!9249 = distinct !DISubprogram(name: "f_setfperm", scope: !3, file: !3, line: 8413, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8414, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9250)
!9250 = !{!9251, !9252, !9253, !9254, !9255, !9256, !9257, !9258}
!9251 = !DILocalVariable(name: "argvars", arg: 1, scope: !9249, file: !3, line: 8413, type: !2305)
!9252 = !DILocalVariable(name: "rettv", arg: 2, scope: !9249, file: !3, line: 8413, type: !2305)
!9253 = !DILocalVariable(name: "fname", scope: !9249, file: !3, line: 8415, type: !759)
!9254 = !DILocalVariable(name: "modebuf", scope: !9249, file: !3, line: 8416, type: !3499)
!9255 = !DILocalVariable(name: "mode_str", scope: !9249, file: !3, line: 8417, type: !759)
!9256 = !DILocalVariable(name: "i", scope: !9249, file: !3, line: 8418, type: !756)
!9257 = !DILocalVariable(name: "mask", scope: !9249, file: !3, line: 8419, type: !756)
!9258 = !DILocalVariable(name: "mode", scope: !9249, file: !3, line: 8420, type: !756)
!9259 = !DILocation(line: 8413, column: 22, scope: !9249)
!9260 = !DILocation(line: 8413, column: 41, scope: !9249)
!9261 = !DILocation(line: 8416, column: 5, scope: !9249)
!9262 = !DILocation(line: 8416, column: 12, scope: !9249)
!9263 = !DILocation(line: 8420, column: 10, scope: !9249)
!9264 = !DILocation(line: 8422, column: 17, scope: !9249)
!9265 = !DILocation(line: 8422, column: 26, scope: !9249)
!9266 = !DILocation(line: 8423, column: 13, scope: !9249)
!9267 = !DILocation(line: 8415, column: 13, scope: !9249)
!9268 = !DILocation(line: 8424, column: 15, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 8424, column: 9)
!9270 = !DILocation(line: 8424, column: 9, scope: !9249)
!9271 = !DILocation(line: 8426, column: 39, scope: !9249)
!9272 = !DILocation(line: 8426, column: 16, scope: !9249)
!9273 = !DILocation(line: 8417, column: 13, scope: !9249)
!9274 = !DILocation(line: 8427, column: 18, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 8427, column: 9)
!9276 = !DILocation(line: 8427, column: 9, scope: !9249)
!9277 = !DILocation(line: 8429, column: 9, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 8429, column: 9)
!9279 = !DILocation(line: 8429, column: 26, scope: !9278)
!9280 = !DILocation(line: 8429, column: 9, scope: !9249)
!9281 = !DILocation(line: 8431, column: 8, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 8430, column: 5)
!9283 = !DILocation(line: 8431, column: 2, scope: !9282)
!9284 = !DILocation(line: 8432, column: 2, scope: !9282)
!9285 = !DILocation(line: 8419, column: 10, scope: !9249)
!9286 = !DILocation(line: 8418, column: 10, scope: !9249)
!9287 = !DILocation(line: 8438, column: 6, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 8438, column: 6)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 8437, column: 5)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 8436, column: 5)
!9291 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 8436, column: 5)
!9292 = !DILocation(line: 8438, column: 18, scope: !9288)
!9293 = !DILocation(line: 8438, column: 6, scope: !9289)
!9294 = !DILocation(line: 8442, column: 47, scope: !9249)
!9295 = !DILocation(line: 8442, column: 28, scope: !9249)
!9296 = !DILocation(line: 8442, column: 53, scope: !9249)
!9297 = !DILocation(line: 8442, column: 26, scope: !9249)
!9298 = !DILocation(line: 8443, column: 1, scope: !9249)
!9299 = distinct !DISubprogram(name: "f_setpos", scope: !3, file: !3, line: 8449, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8450, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9300)
!9300 = !{!9301, !9302}
!9301 = !DILocalVariable(name: "argvars", arg: 1, scope: !9299, file: !3, line: 8449, type: !2305)
!9302 = !DILocalVariable(name: "rettv", arg: 2, scope: !9299, file: !3, line: 8449, type: !2305)
!9303 = !DILocation(line: 8449, column: 20, scope: !9299)
!9304 = !DILocation(line: 8449, column: 39, scope: !9299)
!9305 = !DILocation(line: 8451, column: 5, scope: !9299)
!9306 = !DILocation(line: 8452, column: 1, scope: !9299)
!9307 = distinct !DISubprogram(name: "f_setreg", scope: !3, file: !3, line: 8489, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8490, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9308)
!9308 = !{!9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9323, !9324, !9328, !9331, !9334, !9335, !9336, !9337, !9338, !9339, !9340}
!9309 = !DILocalVariable(name: "argvars", arg: 1, scope: !9307, file: !3, line: 8489, type: !2305)
!9310 = !DILocalVariable(name: "rettv", arg: 2, scope: !9307, file: !3, line: 8489, type: !2305)
!9311 = !DILocalVariable(name: "regname", scope: !9307, file: !3, line: 8491, type: !756)
!9312 = !DILocalVariable(name: "strregname", scope: !9307, file: !3, line: 8492, type: !759)
!9313 = !DILocalVariable(name: "stropt", scope: !9307, file: !3, line: 8493, type: !759)
!9314 = !DILocalVariable(name: "strval", scope: !9307, file: !3, line: 8494, type: !759)
!9315 = !DILocalVariable(name: "append", scope: !9307, file: !3, line: 8495, type: !756)
!9316 = !DILocalVariable(name: "yank_type", scope: !9307, file: !3, line: 8496, type: !760)
!9317 = !DILocalVariable(name: "block_len", scope: !9307, file: !3, line: 8497, type: !765)
!9318 = !DILocalVariable(name: "regcontents", scope: !9307, file: !3, line: 8498, type: !2305)
!9319 = !DILocalVariable(name: "pointreg", scope: !9307, file: !3, line: 8499, type: !756)
!9320 = !DILocalVariable(name: "d", scope: !9321, file: !3, line: 8523, type: !929)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 8522, column: 5)
!9322 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8521, column: 9)
!9323 = !DILocalVariable(name: "di", scope: !9321, file: !3, line: 8524, type: !2464)
!9324 = !DILocalVariable(name: "lstval", scope: !9325, file: !3, line: 8529, type: !9327)
!9325 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 8527, column: 2)
!9326 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 8526, column: 6)
!9327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 128, elements: !1922)
!9328 = !DILocalVariable(name: "ret", scope: !9329, file: !3, line: 8541, type: !756)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 8540, column: 2)
!9330 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 8539, column: 6)
!9331 = !DILocalVariable(name: "lstval", scope: !9332, file: !3, line: 8589, type: !2469)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 8588, column: 5)
!9333 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8587, column: 9)
!9334 = !DILocalVariable(name: "allocval", scope: !9332, file: !3, line: 8590, type: !2469)
!9335 = !DILocalVariable(name: "buf", scope: !9332, file: !3, line: 8591, type: !3499)
!9336 = !DILocalVariable(name: "curval", scope: !9332, file: !3, line: 8592, type: !2469)
!9337 = !DILocalVariable(name: "curallocval", scope: !9332, file: !3, line: 8593, type: !2469)
!9338 = !DILocalVariable(name: "ll", scope: !9332, file: !3, line: 8594, type: !885)
!9339 = !DILocalVariable(name: "li", scope: !9332, file: !3, line: 8595, type: !890)
!9340 = !DILocalVariable(name: "len", scope: !9332, file: !3, line: 8596, type: !756)
!9341 = !DILocation(line: 8489, column: 20, scope: !9307)
!9342 = !DILocation(line: 8489, column: 39, scope: !9307)
!9343 = !DILocation(line: 8499, column: 10, scope: !9307)
!9344 = !DILocation(line: 8498, column: 15, scope: !9307)
!9345 = !DILocation(line: 8497, column: 10, scope: !9307)
!9346 = !DILocation(line: 8496, column: 12, scope: !9307)
!9347 = !DILocation(line: 8495, column: 10, scope: !9307)
!9348 = !DILocation(line: 8507, column: 18, scope: !9307)
!9349 = !DILocation(line: 8492, column: 13, scope: !9307)
!9350 = !DILocation(line: 8508, column: 17, scope: !9307)
!9351 = !DILocation(line: 8508, column: 26, scope: !9307)
!9352 = !DILocation(line: 8510, column: 20, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8510, column: 9)
!9354 = !DILocation(line: 8510, column: 9, scope: !9307)
!9355 = !DILocation(line: 8512, column: 9, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8512, column: 9)
!9357 = !DILocation(line: 8512, column: 25, scope: !9356)
!9358 = !DILocation(line: 8512, column: 28, scope: !9356)
!9359 = !DILocation(line: 8512, column: 47, scope: !9356)
!9360 = !DILocation(line: 8512, column: 9, scope: !9307)
!9361 = !DILocation(line: 8514, column: 8, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 8513, column: 5)
!9363 = !DILocation(line: 8514, column: 2, scope: !9362)
!9364 = !DILocation(line: 8515, column: 2, scope: !9362)
!9365 = !DILocation(line: 8517, column: 15, scope: !9307)
!9366 = !DILocation(line: 8491, column: 10, scope: !9307)
!9367 = !DILocation(line: 8518, column: 22, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8518, column: 9)
!9369 = !DILocation(line: 8521, column: 9, scope: !9322)
!9370 = !DILocation(line: 8521, column: 20, scope: !9322)
!9371 = !DILocation(line: 8521, column: 27, scope: !9322)
!9372 = !DILocation(line: 8521, column: 9, scope: !9307)
!9373 = !DILocation(line: 8523, column: 29, scope: !9321)
!9374 = !DILocation(line: 8523, column: 34, scope: !9321)
!9375 = !DILocation(line: 8523, column: 14, scope: !9321)
!9376 = !DILocation(line: 8526, column: 8, scope: !9326)
!9377 = !DILocation(line: 8526, column: 16, scope: !9326)
!9378 = !DILocation(line: 8526, column: 33, scope: !9326)
!9379 = !DILocation(line: 8526, column: 41, scope: !9326)
!9380 = !DILocation(line: 8526, column: 6, scope: !9321)
!9381 = !DILocation(line: 8529, column: 6, scope: !9325)
!9382 = !DILocation(line: 8529, column: 14, scope: !9325)
!9383 = !DILocation(line: 8530, column: 38, scope: !9325)
!9384 = !DILocation(line: 8530, column: 6, scope: !9325)
!9385 = !DILocation(line: 8532, column: 2, scope: !9326)
!9386 = !DILocation(line: 8534, column: 7, scope: !9321)
!9387 = !DILocation(line: 8524, column: 15, scope: !9321)
!9388 = !DILocation(line: 8536, column: 25, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 8535, column: 6)
!9390 = !DILocation(line: 8538, column: 11, scope: !9321)
!9391 = !DILocation(line: 8493, column: 13, scope: !9307)
!9392 = !DILocation(line: 8539, column: 13, scope: !9330)
!9393 = !DILocation(line: 8539, column: 6, scope: !9321)
!9394 = !DILocalVariable(name: "pp", arg: 1, scope: !9395, file: !3, line: 8458, type: !2469)
!9395 = distinct !DISubprogram(name: "get_yank_type", scope: !3, file: !3, line: 8458, type: !9396, isLocal: true, isDefinition: true, scopeLine: 8459, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9399)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{!756, !2469, !759, !9398}
!9398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!9399 = !{!9394, !9400, !9401, !9402}
!9400 = !DILocalVariable(name: "yank_type", arg: 2, scope: !9395, file: !3, line: 8458, type: !759)
!9401 = !DILocalVariable(name: "block_len", arg: 3, scope: !9395, file: !3, line: 8458, type: !9398)
!9402 = !DILocalVariable(name: "stropt", scope: !9395, file: !3, line: 8460, type: !759)
!9403 = !DILocation(line: 8458, column: 24, scope: !9395, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 8541, column: 16, scope: !9329)
!9405 = !DILocation(line: 8460, column: 5, scope: !9395, inlinedAt: !9404)
!9406 = !DILocation(line: 8460, column: 13, scope: !9395, inlinedAt: !9404)
!9407 = !DILocation(line: 8461, column: 13, scope: !9395, inlinedAt: !9404)
!9408 = !DILocation(line: 8461, column: 5, scope: !9395, inlinedAt: !9404)
!9409 = !DILocation(line: 8483, column: 1, scope: !9395, inlinedAt: !9404)
!9410 = !DILocation(line: 8541, column: 10, scope: !9329)
!9411 = !DILocation(line: 8543, column: 22, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 8543, column: 10)
!9413 = !DILocation(line: 8468, column: 6, scope: !9414, inlinedAt: !9404)
!9414 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 8462, column: 5)
!9415 = !DILocation(line: 8471, column: 10, scope: !9416, inlinedAt: !9404)
!9416 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 8471, column: 10)
!9417 = !DILocation(line: 8471, column: 10, scope: !9414, inlinedAt: !9404)
!9418 = !DILocation(line: 8473, column: 3, scope: !9419, inlinedAt: !9404)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 8472, column: 6)
!9420 = !DILocation(line: 8474, column: 16, scope: !9419, inlinedAt: !9404)
!9421 = !DILocation(line: 8474, column: 35, scope: !9419, inlinedAt: !9404)
!9422 = !DILocation(line: 8475, column: 3, scope: !9419, inlinedAt: !9404)
!9423 = !DILocation(line: 8476, column: 6, scope: !9419, inlinedAt: !9404)
!9424 = !DILocation(line: 8543, column: 26, scope: !9412)
!9425 = !DILocation(line: 8543, column: 25, scope: !9412)
!9426 = !DILocation(line: 8543, column: 35, scope: !9412)
!9427 = !DILocation(line: 8543, column: 10, scope: !9329)
!9428 = !DILocation(line: 8545, column: 9, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 8544, column: 6)
!9430 = !DILocation(line: 8545, column: 3, scope: !9429)
!9431 = !DILocation(line: 8550, column: 14, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 8550, column: 6)
!9433 = !DILocation(line: 8550, column: 6, scope: !9321)
!9434 = !DILocation(line: 8552, column: 15, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 8551, column: 2)
!9436 = !DILocation(line: 8553, column: 17, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 8553, column: 10)
!9438 = !DILocation(line: 8553, column: 10, scope: !9435)
!9439 = !DILocation(line: 8555, column: 14, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 8554, column: 6)
!9441 = !DILocation(line: 8557, column: 6, scope: !9440)
!9442 = !DILocation(line: 8559, column: 11, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 8559, column: 11)
!9444 = !DILocation(line: 8559, column: 55, scope: !9443)
!9445 = !DILocation(line: 8559, column: 11, scope: !9432)
!9446 = !DILocation(line: 8565, column: 9, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8565, column: 9)
!9448 = !DILocation(line: 8565, column: 20, scope: !9447)
!9449 = !DILocation(line: 8565, column: 27, scope: !9447)
!9450 = !DILocation(line: 8565, column: 9, scope: !9307)
!9451 = !DILocation(line: 8567, column: 16, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 8567, column: 6)
!9453 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 8566, column: 5)
!9454 = !DILocation(line: 8567, column: 6, scope: !9453)
!9455 = !DILocation(line: 8569, column: 12, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 8568, column: 2)
!9457 = !DILocation(line: 8569, column: 6, scope: !9456)
!9458 = !DILocation(line: 8570, column: 6, scope: !9456)
!9459 = !DILocation(line: 8573, column: 11, scope: !9453)
!9460 = !DILocation(line: 8574, column: 13, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 8574, column: 6)
!9462 = !DILocation(line: 8574, column: 6, scope: !9453)
!9463 = !DILocation(line: 8576, column: 2, scope: !9453)
!9464 = !DILocation(line: 8576, column: 9, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 8576, column: 2)
!9466 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 8576, column: 2)
!9467 = !DILocation(line: 8576, column: 2, scope: !9466)
!9468 = !DILocation(line: 8458, column: 24, scope: !9395, inlinedAt: !9469)
!9469 = distinct !DILocation(line: 8583, column: 7, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 8578, column: 6)
!9471 = !DILocation(line: 8460, column: 5, scope: !9395, inlinedAt: !9469)
!9472 = !DILocation(line: 8460, column: 13, scope: !9395, inlinedAt: !9469)
!9473 = !DILocation(line: 8461, column: 13, scope: !9395, inlinedAt: !9469)
!9474 = !DILocation(line: 8461, column: 5, scope: !9395, inlinedAt: !9469)
!9475 = !DILocation(line: 8468, column: 6, scope: !9414, inlinedAt: !9469)
!9476 = !DILocation(line: 8471, column: 10, scope: !9416, inlinedAt: !9469)
!9477 = !DILocation(line: 8471, column: 10, scope: !9414, inlinedAt: !9469)
!9478 = !DILocation(line: 8473, column: 3, scope: !9419, inlinedAt: !9469)
!9479 = !DILocation(line: 8474, column: 16, scope: !9419, inlinedAt: !9469)
!9480 = !DILocation(line: 8474, column: 35, scope: !9419, inlinedAt: !9469)
!9481 = !DILocation(line: 8475, column: 3, scope: !9419, inlinedAt: !9469)
!9482 = !DILocation(line: 8476, column: 6, scope: !9419, inlinedAt: !9469)
!9483 = !DILocation(line: 8481, column: 11, scope: !9395, inlinedAt: !9469)
!9484 = !DILocation(line: 8482, column: 5, scope: !9395, inlinedAt: !9469)
!9485 = !DILocation(line: 8483, column: 1, scope: !9395, inlinedAt: !9469)
!9486 = !DILocation(line: 8584, column: 6, scope: !9470)
!9487 = !DILocation(line: 8576, column: 25, scope: !9465)
!9488 = !DILocation(line: 8576, column: 2, scope: !9465)
!9489 = distinct !{!9489, !9467, !9490}
!9490 = !DILocation(line: 8584, column: 6, scope: !9466)
!9491 = !DILocation(line: 8587, column: 9, scope: !9333)
!9492 = !DILocation(line: 8587, column: 21, scope: !9333)
!9493 = !DILocation(line: 8587, column: 37, scope: !9333)
!9494 = !DILocation(line: 8587, column: 44, scope: !9333)
!9495 = !DILocation(line: 8587, column: 9, scope: !9307)
!9496 = !DILocation(line: 8591, column: 2, scope: !9332)
!9497 = !DILocation(line: 8591, column: 10, scope: !9332)
!9498 = !DILocation(line: 8594, column: 29, scope: !9332)
!9499 = !DILocation(line: 8594, column: 34, scope: !9332)
!9500 = !DILocation(line: 8594, column: 11, scope: !9332)
!9501 = !DILocation(line: 8599, column: 11, scope: !9332)
!9502 = !DILocation(line: 8599, column: 8, scope: !9332)
!9503 = !DILocation(line: 8599, column: 29, scope: !9332)
!9504 = !DILocation(line: 8596, column: 7, scope: !9332)
!9505 = !DILocation(line: 8603, column: 11, scope: !9332)
!9506 = !DILocation(line: 8589, column: 12, scope: !9332)
!9507 = !DILocation(line: 8604, column: 13, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9332, file: !3, line: 8604, column: 6)
!9509 = !DILocation(line: 8604, column: 6, scope: !9332)
!9510 = !DILocation(line: 8592, column: 12, scope: !9332)
!9511 = !DILocation(line: 8607, column: 20, scope: !9332)
!9512 = !DILocation(line: 8590, column: 12, scope: !9332)
!9513 = !DILocation(line: 8593, column: 12, scope: !9332)
!9514 = !DILocation(line: 8610, column: 6, scope: !9332)
!9515 = !DILocation(line: 8612, column: 6, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 8612, column: 6)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 8611, column: 2)
!9518 = distinct !DILexicalBlock(scope: !9332, file: !3, line: 8610, column: 6)
!9519 = !DILocation(line: 8612, column: 6, scope: !9517)
!9520 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !9521)
!9521 = distinct !DILocation(line: 8612, column: 6, scope: !9516)
!9522 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !9521)
!9523 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !9521)
!9524 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !9521)
!9525 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !9521)
!9526 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !9521)
!9527 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !9521)
!9528 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !9521)
!9529 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !9521)
!9530 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !9521)
!9531 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !9521)
!9532 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !9521)
!9533 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !9521)
!9534 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !9521)
!9535 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !9521)
!9536 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !9521)
!9537 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !9521)
!9538 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !9521)
!9539 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !9521)
!9540 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !9521)
!9541 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !9521)
!9542 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !9521)
!9543 = !DILocation(line: 8613, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 8613, column: 6)
!9545 = !DILocation(line: 8595, column: 14, scope: !9332)
!9546 = !DILocation(line: 8613, column: 6, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 8613, column: 6)
!9548 = !DILocation(line: 8615, column: 39, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 8614, column: 6)
!9550 = !DILocation(line: 8615, column: 12, scope: !9549)
!9551 = !DILocation(line: 8494, column: 13, scope: !9307)
!9552 = !DILocation(line: 8616, column: 14, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 8616, column: 7)
!9554 = !DILocation(line: 8616, column: 7, scope: !9549)
!9555 = !DILocation(line: 8618, column: 14, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 8618, column: 7)
!9557 = !DILocation(line: 8618, column: 7, scope: !9549)
!9558 = !DILocation(line: 8622, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 8619, column: 3)
!9560 = !DILocation(line: 8623, column: 18, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 8623, column: 11)
!9562 = !DILocation(line: 8623, column: 11, scope: !9559)
!9563 = !DILocation(line: 8625, column: 19, scope: !9559)
!9564 = !DILocation(line: 8625, column: 22, scope: !9559)
!9565 = !DILocation(line: 8626, column: 3, scope: !9559)
!9566 = !DILocation(line: 8627, column: 10, scope: !9549)
!9567 = !DILocation(line: 8627, column: 13, scope: !9549)
!9568 = distinct !{!9568, !9543, !9569}
!9569 = !DILocation(line: 8628, column: 6, scope: !9544)
!9570 = !DILocation(line: 8630, column: 12, scope: !9332)
!9571 = !DILocation(line: 8633, column: 15, scope: !9332)
!9572 = !DILocation(line: 8632, column: 2, scope: !9332)
!9573 = !DILocation(line: 8635, column: 21, scope: !9332)
!9574 = !DILocation(line: 8635, column: 2, scope: !9332)
!9575 = !DILocation(line: 8636, column: 16, scope: !9332)
!9576 = !DILocation(line: 8636, column: 15, scope: !9332)
!9577 = !DILocation(line: 8636, column: 6, scope: !9332)
!9578 = distinct !{!9578, !9574, !9579}
!9579 = !DILocation(line: 8636, column: 29, scope: !9332)
!9580 = !DILocation(line: 8637, column: 2, scope: !9332)
!9581 = !DILocation(line: 8638, column: 5, scope: !9333)
!9582 = !DILocation(line: 8641, column: 11, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 8640, column: 5)
!9584 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 8639, column: 14)
!9585 = !DILocation(line: 8642, column: 13, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 8642, column: 6)
!9587 = !DILocation(line: 8642, column: 6, scope: !9583)
!9588 = !DILocation(line: 8645, column: 15, scope: !9583)
!9589 = !DILocation(line: 8644, column: 2, scope: !9583)
!9590 = !DILocation(line: 8646, column: 5, scope: !9583)
!9591 = !DILocation(line: 8647, column: 18, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 8647, column: 9)
!9593 = !DILocation(line: 8647, column: 9, scope: !9307)
!9594 = !DILocation(line: 8648, column: 2, scope: !9592)
!9595 = !DILocation(line: 8650, column: 26, scope: !9307)
!9596 = !DILocation(line: 8651, column: 1, scope: !9307)
!9597 = !DILocation(line: 8657, column: 25, scope: !2653)
!9598 = !DILocation(line: 8657, column: 44, scope: !2653)
!9599 = !DILocation(line: 8662, column: 10, scope: !2653)
!9600 = !DILocation(line: 8664, column: 17, scope: !2653)
!9601 = !DILocation(line: 8664, column: 26, scope: !2653)
!9602 = !DILocation(line: 8667, column: 10, scope: !2653)
!9603 = !DILocation(line: 8660, column: 12, scope: !2653)
!9604 = !DILocation(line: 8668, column: 12, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 8668, column: 9)
!9606 = !DILocation(line: 8668, column: 9, scope: !2653)
!9607 = !DILocation(line: 8672, column: 20, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 8672, column: 9)
!9609 = !DILocation(line: 8672, column: 27, scope: !9608)
!9610 = !DILocation(line: 8672, column: 9, scope: !2653)
!9611 = !DILocation(line: 8674, column: 7, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 8673, column: 5)
!9613 = !DILocation(line: 8674, column: 2, scope: !9612)
!9614 = !DILocation(line: 8675, column: 2, scope: !9612)
!9615 = !DILocation(line: 8677, column: 20, scope: !2653)
!9616 = !DILocation(line: 8677, column: 25, scope: !2653)
!9617 = !DILocation(line: 8661, column: 13, scope: !2653)
!9618 = !DILocation(line: 8678, column: 11, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 8678, column: 9)
!9620 = !DILocation(line: 8678, column: 9, scope: !2653)
!9621 = !DILocation(line: 8683, column: 9, scope: !2663)
!9622 = !DILocation(line: 8683, column: 20, scope: !2663)
!9623 = !DILocation(line: 8683, column: 9, scope: !2653)
!9624 = !DILocation(line: 8688, column: 11, scope: !2661)
!9625 = !DILocation(line: 8687, column: 10, scope: !2661)
!9626 = !DILocation(line: 8689, column: 13, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 8689, column: 6)
!9628 = !DILocation(line: 8689, column: 6, scope: !2661)
!9629 = !DILocation(line: 8691, column: 7, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 8691, column: 6)
!9631 = !DILocation(line: 8691, column: 22, scope: !9630)
!9632 = !DILocation(line: 8692, column: 6, scope: !9630)
!9633 = !DILocation(line: 8692, column: 16, scope: !9630)
!9634 = !DILocation(line: 8691, column: 6, scope: !2661)
!9635 = !DILocation(line: 8696, column: 12, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 8695, column: 2)
!9637 = !DILocation(line: 8696, column: 6, scope: !9636)
!9638 = !DILocation(line: 8697, column: 6, scope: !9636)
!9639 = !DILocation(line: 8693, column: 15, scope: !9630)
!9640 = !DILocation(line: 8702, column: 7, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 8701, column: 5)
!9642 = !DILocation(line: 8702, column: 2, scope: !9641)
!9643 = !DILocation(line: 8703, column: 2, scope: !9641)
!9644 = !DILocation(line: 8706, column: 9, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 8706, column: 9)
!9646 = !DILocation(line: 8706, column: 37, scope: !9645)
!9647 = !DILocation(line: 8706, column: 9, scope: !2653)
!9648 = !DILocation(line: 8707, column: 23, scope: !9645)
!9649 = !DILocation(line: 8707, column: 2, scope: !9645)
!9650 = !DILocation(line: 8708, column: 1, scope: !2653)
!9651 = distinct !DISubprogram(name: "f_sha256", scope: !3, file: !3, line: 8715, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8716, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9652)
!9652 = !{!9653, !9654, !9655}
!9653 = !DILocalVariable(name: "argvars", arg: 1, scope: !9651, file: !3, line: 8715, type: !2305)
!9654 = !DILocalVariable(name: "rettv", arg: 2, scope: !9651, file: !3, line: 8715, type: !2305)
!9655 = !DILocalVariable(name: "p", scope: !9651, file: !3, line: 8717, type: !759)
!9656 = !DILocation(line: 8715, column: 20, scope: !9651)
!9657 = !DILocation(line: 8715, column: 39, scope: !9651)
!9658 = !DILocation(line: 8719, column: 9, scope: !9651)
!9659 = !DILocation(line: 8717, column: 13, scope: !9651)
!9660 = !DILocation(line: 8721, column: 30, scope: !9651)
!9661 = !DILocation(line: 8721, column: 25, scope: !9651)
!9662 = !DILocation(line: 8721, column: 9, scope: !9651)
!9663 = !DILocation(line: 8720, column: 28, scope: !9651)
!9664 = !DILocation(line: 8720, column: 12, scope: !9651)
!9665 = !DILocation(line: 8720, column: 17, scope: !9651)
!9666 = !DILocation(line: 8720, column: 26, scope: !9651)
!9667 = !DILocation(line: 8722, column: 12, scope: !9651)
!9668 = !DILocation(line: 8722, column: 19, scope: !9651)
!9669 = !DILocation(line: 8723, column: 1, scope: !9651)
!9670 = distinct !DISubprogram(name: "f_shellescape", scope: !3, file: !3, line: 8730, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8731, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9671)
!9671 = !{!9672, !9673, !9674}
!9672 = !DILocalVariable(name: "argvars", arg: 1, scope: !9670, file: !3, line: 8730, type: !2305)
!9673 = !DILocalVariable(name: "rettv", arg: 2, scope: !9670, file: !3, line: 8730, type: !2305)
!9674 = !DILocalVariable(name: "do_special", scope: !9670, file: !3, line: 8732, type: !756)
!9675 = !DILocation(line: 8730, column: 25, scope: !9670)
!9676 = !DILocation(line: 8730, column: 44, scope: !9670)
!9677 = !DILocation(line: 2159, column: 24, scope: !3385, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 8732, column: 22, scope: !9670)
!9679 = !DILocation(line: 2161, column: 25, scope: !3385, inlinedAt: !9678)
!9680 = !DILocation(line: 2162, column: 3, scope: !3385, inlinedAt: !9678)
!9681 = !DILocation(line: 2162, column: 22, scope: !3385, inlinedAt: !9678)
!9682 = !DILocation(line: 2162, column: 31, scope: !3385, inlinedAt: !9678)
!9683 = !DILocation(line: 2163, column: 6, scope: !3385, inlinedAt: !9678)
!9684 = !DILocation(line: 2164, column: 22, scope: !3385, inlinedAt: !9678)
!9685 = !DILocation(line: 2164, column: 31, scope: !3385, inlinedAt: !9678)
!9686 = !DILocation(line: 2165, column: 6, scope: !3385, inlinedAt: !9678)
!9687 = !DILocation(line: 2166, column: 3, scope: !3385, inlinedAt: !9678)
!9688 = !DILocation(line: 2166, column: 17, scope: !3385, inlinedAt: !9678)
!9689 = !DILocation(line: 2166, column: 22, scope: !3385, inlinedAt: !9678)
!9690 = !DILocation(line: 2166, column: 31, scope: !3385, inlinedAt: !9678)
!9691 = !DILocation(line: 2167, column: 3, scope: !3385, inlinedAt: !9678)
!9692 = !DILocation(line: 2167, column: 6, scope: !3385, inlinedAt: !9678)
!9693 = !DILocation(line: 2167, column: 32, scope: !3385, inlinedAt: !9678)
!9694 = !DILocation(line: 8732, column: 9, scope: !9670)
!9695 = !DILocation(line: 8735, column: 7, scope: !9670)
!9696 = !DILocation(line: 8734, column: 28, scope: !9670)
!9697 = !DILocation(line: 8734, column: 12, scope: !9670)
!9698 = !DILocation(line: 8734, column: 17, scope: !9670)
!9699 = !DILocation(line: 8734, column: 26, scope: !9670)
!9700 = !DILocation(line: 8736, column: 12, scope: !9670)
!9701 = !DILocation(line: 8736, column: 19, scope: !9670)
!9702 = !DILocation(line: 8737, column: 1, scope: !9670)
!9703 = distinct !DISubprogram(name: "f_shiftwidth", scope: !3, file: !3, line: 8743, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9704)
!9704 = !{!9705, !9706, !9707}
!9705 = !DILocalVariable(name: "argvars", arg: 1, scope: !9703, file: !3, line: 8743, type: !2305)
!9706 = !DILocalVariable(name: "rettv", arg: 2, scope: !9703, file: !3, line: 8743, type: !2305)
!9707 = !DILocalVariable(name: "col", scope: !9708, file: !3, line: 8749, type: !765)
!9708 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 8748, column: 5)
!9709 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 8747, column: 9)
!9710 = !DILocation(line: 8743, column: 24, scope: !9703)
!9711 = !DILocation(line: 8743, column: 50, scope: !9703)
!9712 = !DILocation(line: 8745, column: 17, scope: !9703)
!9713 = !DILocation(line: 8745, column: 26, scope: !9703)
!9714 = !DILocation(line: 8747, column: 20, scope: !9709)
!9715 = !DILocation(line: 8747, column: 27, scope: !9709)
!9716 = !DILocation(line: 8747, column: 9, scope: !9703)
!9717 = !DILocation(line: 8751, column: 14, scope: !9708)
!9718 = !DILocation(line: 8749, column: 7, scope: !9708)
!9719 = !DILocation(line: 8752, column: 10, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 8752, column: 6)
!9721 = !DILocation(line: 8752, column: 6, scope: !9708)
!9722 = !DILocation(line: 8755, column: 42, scope: !9708)
!9723 = !DILocation(line: 8755, column: 50, scope: !9708)
!9724 = !DILocation(line: 8755, column: 25, scope: !9708)
!9725 = !DILocation(line: 8756, column: 2, scope: !9708)
!9726 = !DILocation(line: 8760, column: 41, scope: !9703)
!9727 = !DILocation(line: 8760, column: 28, scope: !9703)
!9728 = !DILocation(line: 8761, column: 1, scope: !9703)
!9729 = distinct !DISubprogram(name: "f_sin", scope: !3, file: !3, line: 8768, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8769, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9730)
!9730 = !{!9731, !9732, !9733}
!9731 = !DILocalVariable(name: "argvars", arg: 1, scope: !9729, file: !3, line: 8768, type: !2305)
!9732 = !DILocalVariable(name: "rettv", arg: 2, scope: !9729, file: !3, line: 8768, type: !2305)
!9733 = !DILocalVariable(name: "f", scope: !9729, file: !3, line: 8770, type: !762)
!9734 = !DILocation(line: 8768, column: 17, scope: !9729)
!9735 = !DILocation(line: 8768, column: 36, scope: !9729)
!9736 = !DILocation(line: 8770, column: 13, scope: !9729)
!9737 = !DILocation(line: 8772, column: 12, scope: !9729)
!9738 = !DILocation(line: 8772, column: 19, scope: !9729)
!9739 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 8773, column: 9, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 8773, column: 9)
!9742 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !9740)
!9743 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !9740)
!9744 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !9740)
!9745 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !9740)
!9746 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !9740)
!9747 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !9740)
!9748 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !9740)
!9749 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !9740)
!9750 = !DILocation(line: 8774, column: 24, scope: !9741)
!9751 = !DILocation(line: 8774, column: 2, scope: !9741)
!9752 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !9740)
!9753 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !9740)
!9754 = !DILocation(line: 8777, column: 1, scope: !9729)
!9755 = distinct !DISubprogram(name: "f_sinh", scope: !3, file: !3, line: 8783, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8784, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9756)
!9756 = !{!9757, !9758, !9759}
!9757 = !DILocalVariable(name: "argvars", arg: 1, scope: !9755, file: !3, line: 8783, type: !2305)
!9758 = !DILocalVariable(name: "rettv", arg: 2, scope: !9755, file: !3, line: 8783, type: !2305)
!9759 = !DILocalVariable(name: "f", scope: !9755, file: !3, line: 8785, type: !762)
!9760 = !DILocation(line: 8783, column: 18, scope: !9755)
!9761 = !DILocation(line: 8783, column: 37, scope: !9755)
!9762 = !DILocation(line: 8785, column: 13, scope: !9755)
!9763 = !DILocation(line: 8787, column: 12, scope: !9755)
!9764 = !DILocation(line: 8787, column: 19, scope: !9755)
!9765 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !9766)
!9766 = distinct !DILocation(line: 8788, column: 9, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 8788, column: 9)
!9768 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !9766)
!9769 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !9766)
!9770 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !9766)
!9771 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !9766)
!9772 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !9766)
!9773 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !9766)
!9774 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !9766)
!9775 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !9766)
!9776 = !DILocation(line: 8789, column: 24, scope: !9767)
!9777 = !DILocation(line: 8789, column: 2, scope: !9767)
!9778 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !9766)
!9779 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !9766)
!9780 = !DILocation(line: 8792, column: 1, scope: !9755)
!9781 = distinct !DISubprogram(name: "f_soundfold", scope: !3, file: !3, line: 8799, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8800, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "argvars", arg: 1, scope: !9781, file: !3, line: 8799, type: !2305)
!9784 = !DILocalVariable(name: "rettv", arg: 2, scope: !9781, file: !3, line: 8799, type: !2305)
!9785 = !DILocalVariable(name: "s", scope: !9781, file: !3, line: 8801, type: !759)
!9786 = !DILocation(line: 8799, column: 23, scope: !9781)
!9787 = !DILocation(line: 8799, column: 42, scope: !9781)
!9788 = !DILocation(line: 8803, column: 12, scope: !9781)
!9789 = !DILocation(line: 8803, column: 19, scope: !9781)
!9790 = !DILocation(line: 8804, column: 9, scope: !9781)
!9791 = !DILocation(line: 8801, column: 13, scope: !9781)
!9792 = !DILocation(line: 8806, column: 28, scope: !9781)
!9793 = !DILocation(line: 8806, column: 12, scope: !9781)
!9794 = !DILocation(line: 8806, column: 17, scope: !9781)
!9795 = !DILocation(line: 8806, column: 26, scope: !9781)
!9796 = !DILocation(line: 8810, column: 1, scope: !9781)
!9797 = distinct !DISubprogram(name: "f_spellbadword", scope: !3, file: !3, line: 8816, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8817, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9798)
!9798 = !{!9799, !9800, !9801, !9802, !9804, !9805, !9806, !9810}
!9799 = !DILocalVariable(name: "argvars", arg: 1, scope: !9797, file: !3, line: 8816, type: !2305)
!9800 = !DILocalVariable(name: "rettv", arg: 2, scope: !9797, file: !3, line: 8816, type: !2305)
!9801 = !DILocalVariable(name: "word", scope: !9797, file: !3, line: 8818, type: !759)
!9802 = !DILocalVariable(name: "attr", scope: !9797, file: !3, line: 8819, type: !9803)
!9803 = !DIDerivedType(tag: DW_TAG_typedef, name: "hlf_T", file: !698, line: 1416, baseType: !697)
!9804 = !DILocalVariable(name: "len", scope: !9797, file: !3, line: 8820, type: !756)
!9805 = !DILocalVariable(name: "wo_spell_save", scope: !9797, file: !3, line: 8822, type: !756)
!9806 = !DILocalVariable(name: "str", scope: !9807, file: !3, line: 8859, type: !759)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 8858, column: 5)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 8857, column: 14)
!9809 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 8847, column: 9)
!9810 = !DILocalVariable(name: "capcol", scope: !9807, file: !3, line: 8860, type: !756)
!9811 = !DILocation(line: 8816, column: 26, scope: !9797)
!9812 = !DILocation(line: 8816, column: 52, scope: !9797)
!9813 = !DILocation(line: 8819, column: 5, scope: !9797)
!9814 = !DILocation(line: 8819, column: 11, scope: !9797)
!9815 = !DILocation(line: 8820, column: 10, scope: !9797)
!9816 = !DILocation(line: 8822, column: 26, scope: !9797)
!9817 = !DILocation(line: 8822, column: 34, scope: !9797)
!9818 = !{!4151, !2690, i64 1104}
!9819 = !DILocation(line: 8822, column: 10, scope: !9797)
!9820 = !DILocation(line: 8824, column: 10, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 8824, column: 9)
!9822 = !DILocation(line: 8824, column: 9, scope: !9797)
!9823 = !DILocation(line: 8826, column: 2, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 8825, column: 5)
!9825 = !DILocation(line: 8827, column: 2, scope: !9824)
!9826 = !DILocation(line: 8827, column: 10, scope: !9824)
!9827 = !DILocation(line: 8827, column: 20, scope: !9824)
!9828 = !DILocation(line: 8828, column: 5, scope: !9824)
!9829 = !DILocation(line: 8830, column: 10, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 8830, column: 9)
!9831 = !DILocation(line: 8830, column: 18, scope: !9830)
!9832 = !{!4151, !2693, i64 32}
!9833 = !DILocation(line: 8830, column: 23, scope: !9830)
!9834 = !{!4836, !2693, i64 1176}
!9835 = !DILocation(line: 8830, column: 9, scope: !9830)
!9836 = !DILocation(line: 8830, column: 31, scope: !9830)
!9837 = !DILocation(line: 8830, column: 9, scope: !9797)
!9838 = !DILocation(line: 8832, column: 7, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 8831, column: 5)
!9840 = !DILocation(line: 8832, column: 2, scope: !9839)
!9841 = !DILocation(line: 8833, column: 2, scope: !9839)
!9842 = !DILocation(line: 8833, column: 10, scope: !9839)
!9843 = !DILocation(line: 8833, column: 20, scope: !9839)
!9844 = !DILocation(line: 8834, column: 2, scope: !9839)
!9845 = !DILocation(line: 8838, column: 9, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 8838, column: 9)
!9847 = !DILocation(line: 8838, column: 33, scope: !9846)
!9848 = !DILocation(line: 8838, column: 9, scope: !9797)
!9849 = !DILocation(line: 8841, column: 2, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 8839, column: 5)
!9851 = !DILocation(line: 8841, column: 10, scope: !9850)
!9852 = !DILocation(line: 8841, column: 20, scope: !9850)
!9853 = !DILocation(line: 8843, column: 2, scope: !9850)
!9854 = !DILocation(line: 8847, column: 20, scope: !9809)
!9855 = !DILocation(line: 8847, column: 27, scope: !9809)
!9856 = !DILocation(line: 8847, column: 9, scope: !9797)
!9857 = !DILocation(line: 8850, column: 22, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 8848, column: 5)
!9859 = !DILocation(line: 8850, column: 8, scope: !9858)
!9860 = !DILocation(line: 8851, column: 10, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 8851, column: 6)
!9862 = !DILocation(line: 8851, column: 6, scope: !9858)
!9863 = !DILocation(line: 8853, column: 13, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9861, file: !3, line: 8852, column: 2)
!9865 = !DILocation(line: 8818, column: 13, scope: !9797)
!9866 = !DILocation(line: 8854, column: 6, scope: !9864)
!9867 = !DILocation(line: 8854, column: 14, scope: !9864)
!9868 = !DILocation(line: 8854, column: 29, scope: !9864)
!9869 = !{!4151, !2690, i64 76}
!9870 = !DILocation(line: 8855, column: 2, scope: !9864)
!9871 = !DILocation(line: 8857, column: 15, scope: !9808)
!9872 = !DILocation(line: 8857, column: 27, scope: !9808)
!9873 = !{!4831, !2693, i64 9024}
!9874 = !DILocation(line: 8857, column: 14, scope: !9808)
!9875 = !DILocation(line: 8857, column: 35, scope: !9808)
!9876 = !DILocation(line: 8857, column: 14, scope: !9809)
!9877 = !DILocation(line: 8859, column: 16, scope: !9807)
!9878 = !DILocation(line: 8859, column: 10, scope: !9807)
!9879 = !DILocation(line: 8860, column: 2, scope: !9807)
!9880 = !DILocation(line: 8860, column: 6, scope: !9807)
!9881 = !DILocation(line: 8862, column: 10, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 8862, column: 6)
!9883 = !DILocation(line: 8862, column: 6, scope: !9807)
!9884 = !DILocation(line: 8865, column: 13, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 8863, column: 2)
!9886 = !DILocation(line: 8865, column: 18, scope: !9885)
!9887 = !DILocation(line: 8865, column: 6, scope: !9885)
!9888 = !DILocation(line: 8867, column: 21, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 8866, column: 6)
!9890 = !DILocation(line: 8867, column: 9, scope: !9889)
!9891 = !DILocation(line: 8868, column: 7, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 8868, column: 7)
!9893 = !DILocation(line: 8868, column: 12, scope: !9892)
!9894 = !DILocation(line: 8868, column: 7, scope: !9889)
!9895 = !DILocation(line: 8873, column: 7, scope: !9889)
!9896 = !DILocation(line: 8874, column: 10, scope: !9889)
!9897 = distinct !{!9897, !9887, !9898}
!9898 = !DILocation(line: 8876, column: 6, scope: !9885)
!9899 = !DILocation(line: 8878, column: 5, scope: !9808)
!9900 = !DILocation(line: 8878, column: 5, scope: !9807)
!9901 = !DILocation(line: 8879, column: 5, scope: !9797)
!9902 = !DILocation(line: 8879, column: 13, scope: !9797)
!9903 = !DILocation(line: 8879, column: 23, scope: !9797)
!9904 = !DILocation(line: 8882, column: 31, scope: !9797)
!9905 = !DILocation(line: 8882, column: 36, scope: !9797)
!9906 = !DILocation(line: 8882, column: 5, scope: !9797)
!9907 = !DILocation(line: 8883, column: 36, scope: !9797)
!9908 = !DILocation(line: 8884, column: 4, scope: !9797)
!9909 = !DILocation(line: 8887, column: 9, scope: !9797)
!9910 = !DILocation(line: 8887, column: 4, scope: !9797)
!9911 = !DILocation(line: 8886, column: 4, scope: !9797)
!9912 = !DILocation(line: 8883, column: 5, scope: !9797)
!9913 = !DILocation(line: 8889, column: 1, scope: !9797)
!9914 = distinct !DISubprogram(name: "f_spellsuggest", scope: !3, file: !3, line: 8895, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8896, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9915)
!9915 = !{!9916, !9917, !9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925}
!9916 = !DILocalVariable(name: "argvars", arg: 1, scope: !9914, file: !3, line: 8895, type: !2305)
!9917 = !DILocalVariable(name: "rettv", arg: 2, scope: !9914, file: !3, line: 8895, type: !2305)
!9918 = !DILocalVariable(name: "str", scope: !9914, file: !3, line: 8898, type: !759)
!9919 = !DILocalVariable(name: "typeerr", scope: !9914, file: !3, line: 8899, type: !756)
!9920 = !DILocalVariable(name: "maxcount", scope: !9914, file: !3, line: 8900, type: !756)
!9921 = !DILocalVariable(name: "ga", scope: !9914, file: !3, line: 8901, type: !787)
!9922 = !DILocalVariable(name: "i", scope: !9914, file: !3, line: 8902, type: !756)
!9923 = !DILocalVariable(name: "li", scope: !9914, file: !3, line: 8903, type: !890)
!9924 = !DILocalVariable(name: "need_capital", scope: !9914, file: !3, line: 8904, type: !756)
!9925 = !DILocalVariable(name: "wo_spell_save", scope: !9914, file: !3, line: 8905, type: !756)
!9926 = !DILocation(line: 8895, column: 26, scope: !9914)
!9927 = !DILocation(line: 8895, column: 52, scope: !9914)
!9928 = !DILocation(line: 8899, column: 5, scope: !9914)
!9929 = !DILocation(line: 8899, column: 10, scope: !9914)
!9930 = !DILocation(line: 8901, column: 5, scope: !9914)
!9931 = !DILocation(line: 8904, column: 10, scope: !9914)
!9932 = !DILocation(line: 8905, column: 26, scope: !9914)
!9933 = !DILocation(line: 8905, column: 34, scope: !9914)
!9934 = !DILocation(line: 8905, column: 10, scope: !9914)
!9935 = !DILocation(line: 8907, column: 10, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 8907, column: 9)
!9937 = !DILocation(line: 8907, column: 9, scope: !9914)
!9938 = !DILocation(line: 8909, column: 2, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 8908, column: 5)
!9940 = !DILocation(line: 8910, column: 2, scope: !9939)
!9941 = !DILocation(line: 8910, column: 10, scope: !9939)
!9942 = !DILocation(line: 8910, column: 20, scope: !9939)
!9943 = !DILocation(line: 8911, column: 5, scope: !9939)
!9944 = !DILocation(line: 8913, column: 10, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 8913, column: 9)
!9946 = !DILocation(line: 8913, column: 18, scope: !9945)
!9947 = !DILocation(line: 8913, column: 23, scope: !9945)
!9948 = !DILocation(line: 8913, column: 9, scope: !9945)
!9949 = !DILocation(line: 8913, column: 31, scope: !9945)
!9950 = !DILocation(line: 8913, column: 9, scope: !9914)
!9951 = !DILocation(line: 8915, column: 7, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 8914, column: 5)
!9953 = !DILocation(line: 8915, column: 2, scope: !9952)
!9954 = !DILocation(line: 8916, column: 2, scope: !9952)
!9955 = !DILocation(line: 8916, column: 10, scope: !9952)
!9956 = !DILocation(line: 8916, column: 20, scope: !9952)
!9957 = !DILocation(line: 8917, column: 2, scope: !9952)
!9958 = !DILocation(line: 8921, column: 9, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 8921, column: 9)
!9960 = !DILocation(line: 8921, column: 33, scope: !9959)
!9961 = !DILocation(line: 8921, column: 9, scope: !9914)
!9962 = !DILocation(line: 8924, column: 10, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 8922, column: 5)
!9964 = !DILocation(line: 8924, column: 20, scope: !9963)
!9965 = !DILocation(line: 8926, column: 2, scope: !9963)
!9966 = !DILocation(line: 8930, column: 18, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 8930, column: 9)
!9968 = !DILocation(line: 8930, column: 23, scope: !9967)
!9969 = !DILocation(line: 8930, column: 9, scope: !9967)
!9970 = !DILocation(line: 8930, column: 31, scope: !9967)
!9971 = !DILocation(line: 8930, column: 9, scope: !9914)
!9972 = !DILocation(line: 8932, column: 8, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 8931, column: 5)
!9974 = !DILocation(line: 8898, column: 13, scope: !9914)
!9975 = !DILocation(line: 8933, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 8933, column: 6)
!9977 = !DILocation(line: 8933, column: 17, scope: !9976)
!9978 = !DILocation(line: 8933, column: 24, scope: !9976)
!9979 = !DILocation(line: 8933, column: 6, scope: !9973)
!9980 = !DILocation(line: 8935, column: 22, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 8934, column: 2)
!9982 = !DILocation(line: 8935, column: 17, scope: !9981)
!9983 = !DILocation(line: 8900, column: 10, scope: !9914)
!9984 = !DILocation(line: 8936, column: 19, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 8936, column: 10)
!9986 = !DILocation(line: 8936, column: 10, scope: !9981)
!9987 = !DILocation(line: 8938, column: 10, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 8938, column: 10)
!9989 = !DILocation(line: 8938, column: 21, scope: !9988)
!9990 = !DILocation(line: 8938, column: 28, scope: !9988)
!9991 = !DILocation(line: 8938, column: 10, scope: !9981)
!9992 = !DILocation(line: 8940, column: 23, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 8939, column: 6)
!9994 = !DILocation(line: 8940, column: 18, scope: !9993)
!9995 = !DILocation(line: 8941, column: 7, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 8941, column: 7)
!9997 = !DILocation(line: 8941, column: 7, scope: !9993)
!9998 = !DILocation(line: 8901, column: 14, scope: !9914)
!9999 = !DILocation(line: 8948, column: 2, scope: !9973)
!10000 = !DILocation(line: 8902, column: 10, scope: !9914)
!10001 = !DILocation(line: 8950, column: 21, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 8950, column: 2)
!10003 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 8950, column: 2)
!10004 = !DILocation(line: 8950, column: 16, scope: !10002)
!10005 = !DILocation(line: 8950, column: 2, scope: !10003)
!10006 = !DILocation(line: 8952, column: 27, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 8951, column: 2)
!10008 = !DILocation(line: 8952, column: 12, scope: !10007)
!10009 = !DILocation(line: 8954, column: 11, scope: !10007)
!10010 = !DILocation(line: 8903, column: 17, scope: !9914)
!10011 = !DILocation(line: 8955, column: 13, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 8955, column: 10)
!10013 = !DILocation(line: 8955, column: 10, scope: !10007)
!10014 = !DILocation(line: 8956, column: 3, scope: !10012)
!10015 = !DILocation(line: 8959, column: 13, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 8958, column: 6)
!10017 = !DILocation(line: 8959, column: 20, scope: !10016)
!10018 = !DILocation(line: 8960, column: 13, scope: !10016)
!10019 = !DILocation(line: 8960, column: 20, scope: !10016)
!10020 = !{!3737, !2691, i64 20}
!10021 = !DILocation(line: 8961, column: 13, scope: !10016)
!10022 = !DILocation(line: 8961, column: 18, scope: !10016)
!10023 = !DILocation(line: 8961, column: 27, scope: !10016)
!10024 = !DILocation(line: 8962, column: 27, scope: !10016)
!10025 = !DILocation(line: 8962, column: 3, scope: !10016)
!10026 = !DILocation(line: 8950, column: 29, scope: !10002)
!10027 = distinct !{!10027, !10005, !10028}
!10028 = !DILocation(line: 8964, column: 2, scope: !10003)
!10029 = !DILocation(line: 8965, column: 2, scope: !9973)
!10030 = !DILocation(line: 8967, column: 5, scope: !9914)
!10031 = !DILocation(line: 8966, column: 5, scope: !9973)
!10032 = !DILocation(line: 8967, column: 13, scope: !9914)
!10033 = !DILocation(line: 8967, column: 23, scope: !9914)
!10034 = !DILocation(line: 8969, column: 1, scope: !9914)
!10035 = distinct !DISubprogram(name: "f_split", scope: !3, file: !3, line: 8972, type: !2538, isLocal: true, isDefinition: true, scopeLine: 8973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10036)
!10036 = !{!10037, !10038, !10039, !10040, !10041, !10042, !10043, !10044, !10045, !10046, !10047, !10048}
!10037 = !DILocalVariable(name: "argvars", arg: 1, scope: !10035, file: !3, line: 8972, type: !2305)
!10038 = !DILocalVariable(name: "rettv", arg: 2, scope: !10035, file: !3, line: 8972, type: !2305)
!10039 = !DILocalVariable(name: "str", scope: !10035, file: !3, line: 8974, type: !759)
!10040 = !DILocalVariable(name: "end", scope: !10035, file: !3, line: 8975, type: !759)
!10041 = !DILocalVariable(name: "pat", scope: !10035, file: !3, line: 8976, type: !759)
!10042 = !DILocalVariable(name: "regmatch", scope: !10035, file: !3, line: 8977, type: !1191)
!10043 = !DILocalVariable(name: "patbuf", scope: !10035, file: !3, line: 8978, type: !3499)
!10044 = !DILocalVariable(name: "save_cpo", scope: !10035, file: !3, line: 8979, type: !759)
!10045 = !DILocalVariable(name: "match", scope: !10035, file: !3, line: 8980, type: !756)
!10046 = !DILocalVariable(name: "col", scope: !10035, file: !3, line: 8981, type: !766)
!10047 = !DILocalVariable(name: "keepempty", scope: !10035, file: !3, line: 8982, type: !756)
!10048 = !DILocalVariable(name: "typeerr", scope: !10035, file: !3, line: 8983, type: !756)
!10049 = !DILocation(line: 8972, column: 19, scope: !10035)
!10050 = !DILocation(line: 8972, column: 38, scope: !10035)
!10051 = !DILocation(line: 8976, column: 13, scope: !10035)
!10052 = !DILocation(line: 8977, column: 5, scope: !10035)
!10053 = !DILocation(line: 8978, column: 5, scope: !10035)
!10054 = !DILocation(line: 8978, column: 12, scope: !10035)
!10055 = !DILocation(line: 8981, column: 13, scope: !10035)
!10056 = !DILocation(line: 8982, column: 10, scope: !10035)
!10057 = !DILocation(line: 8983, column: 5, scope: !10035)
!10058 = !DILocation(line: 8983, column: 10, scope: !10035)
!10059 = !DILocation(line: 8986, column: 16, scope: !10035)
!10060 = !DILocation(line: 8979, column: 13, scope: !10035)
!10061 = !DILocation(line: 8987, column: 13, scope: !10035)
!10062 = !DILocation(line: 8987, column: 11, scope: !10035)
!10063 = !DILocation(line: 8989, column: 11, scope: !10035)
!10064 = !DILocation(line: 8974, column: 13, scope: !10035)
!10065 = !DILocation(line: 8990, column: 9, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 8990, column: 9)
!10067 = !DILocation(line: 8990, column: 20, scope: !10066)
!10068 = !DILocation(line: 8990, column: 27, scope: !10066)
!10069 = !DILocation(line: 8990, column: 9, scope: !10035)
!10070 = !DILocation(line: 8992, column: 8, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 8991, column: 5)
!10072 = !DILocation(line: 8993, column: 10, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 8993, column: 6)
!10074 = !DILocation(line: 8993, column: 6, scope: !10071)
!10075 = !DILocation(line: 8994, column: 14, scope: !10073)
!10076 = !DILocation(line: 8994, column: 6, scope: !10073)
!10077 = !DILocation(line: 8995, column: 6, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 8995, column: 6)
!10079 = !DILocation(line: 8995, column: 17, scope: !10078)
!10080 = !DILocation(line: 8995, column: 24, scope: !10078)
!10081 = !DILocation(line: 8995, column: 6, scope: !10071)
!10082 = !DILocation(line: 8996, column: 23, scope: !10078)
!10083 = !DILocation(line: 8996, column: 18, scope: !10078)
!10084 = !DILocation(line: 8996, column: 6, scope: !10078)
!10085 = !DILocation(line: 8998, column: 21, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 8998, column: 9)
!10087 = !DILocation(line: 8998, column: 24, scope: !10086)
!10088 = !DILocation(line: 8998, column: 29, scope: !10086)
!10089 = !DILocation(line: 8998, column: 9, scope: !10035)
!10090 = !DILocation(line: 8999, column: 2, scope: !10086)
!10091 = !DILocation(line: 9001, column: 9, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 9001, column: 9)
!10093 = !DILocation(line: 9001, column: 33, scope: !10092)
!10094 = !DILocation(line: 9003, column: 9, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 9003, column: 9)
!10096 = !DILocation(line: 9001, column: 9, scope: !10035)
!10097 = !DILocation(line: 9006, column: 24, scope: !10035)
!10098 = !DILocation(line: 9006, column: 14, scope: !10035)
!10099 = !DILocation(line: 9006, column: 22, scope: !10035)
!10100 = !{!10101, !2693, i64 0}
!10101 = !{!"", !2693, i64 0, !2691, i64 8, !2691, i64 88, !2690, i64 168}
!10102 = !DILocation(line: 9007, column: 26, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 9007, column: 9)
!10104 = !DILocation(line: 9007, column: 9, scope: !10035)
!10105 = !DILocation(line: 9009, column: 11, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 9008, column: 5)
!10107 = !DILocation(line: 9009, column: 17, scope: !10106)
!10108 = !{!10101, !2690, i64 168}
!10109 = !DILocation(line: 9010, column: 9, scope: !10106)
!10110 = !DILocation(line: 9010, column: 14, scope: !10106)
!10111 = !DILocation(line: 9010, column: 21, scope: !10106)
!10112 = !DILocation(line: 9010, column: 2, scope: !10106)
!10113 = !DILocation(line: 9012, column: 15, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 9012, column: 10)
!10115 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 9011, column: 2)
!10116 = !DILocation(line: 9012, column: 10, scope: !10115)
!10117 = !DILocation(line: 8977, column: 16, scope: !10035)
!10118 = !DILocation(line: 9015, column: 11, scope: !10114)
!10119 = !DILocation(line: 8980, column: 10, scope: !10035)
!10120 = !DILocation(line: 9016, column: 10, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 9016, column: 10)
!10122 = !DILocation(line: 9016, column: 10, scope: !10115)
!10123 = !DILocation(line: 9017, column: 9, scope: !10121)
!10124 = !DILocation(line: 8975, column: 13, scope: !10035)
!10125 = !DILocation(line: 9017, column: 3, scope: !10121)
!10126 = !DILocation(line: 9019, column: 15, scope: !10121)
!10127 = !DILocation(line: 9019, column: 13, scope: !10121)
!10128 = !DILocation(line: 9020, column: 27, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 9020, column: 10)
!10130 = !DILocation(line: 9020, column: 20, scope: !10129)
!10131 = !DILocation(line: 9020, column: 57, scope: !10129)
!10132 = !DILocation(line: 9020, column: 64, scope: !10129)
!10133 = !DILocation(line: 9021, column: 7, scope: !10129)
!10134 = !DILocation(line: 9021, column: 10, scope: !10129)
!10135 = !DILocation(line: 9021, column: 15, scope: !10129)
!10136 = !DILocation(line: 9021, column: 22, scope: !10129)
!10137 = !DILocation(line: 9021, column: 40, scope: !10129)
!10138 = !DILocation(line: 9021, column: 38, scope: !10129)
!10139 = !DILocation(line: 9024, column: 21, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 9023, column: 7)
!10141 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 9022, column: 6)
!10142 = !DILocation(line: 9024, column: 11, scope: !10140)
!10143 = !DILocation(line: 9023, column: 7, scope: !10140)
!10144 = !DILocation(line: 9024, column: 29, scope: !10140)
!10145 = !DILocation(line: 9023, column: 7, scope: !10141)
!10146 = !DILocation(line: 9027, column: 10, scope: !10115)
!10147 = !DILocation(line: 9030, column: 10, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 9030, column: 10)
!10149 = !DILocation(line: 9030, column: 27, scope: !10148)
!10150 = !DILocation(line: 9030, column: 10, scope: !10115)
!10151 = !DILocation(line: 9034, column: 11, scope: !10148)
!10152 = !DILocation(line: 9034, column: 9, scope: !10148)
!10153 = !DILocation(line: 9035, column: 12, scope: !10115)
!10154 = distinct !{!10154, !10112, !10155}
!10155 = !DILocation(line: 9036, column: 2, scope: !10106)
!10156 = !DILocation(line: 9038, column: 23, scope: !10106)
!10157 = !DILocation(line: 9038, column: 2, scope: !10106)
!10158 = !DILocation(line: 9039, column: 5, scope: !10106)
!10159 = !DILocation(line: 9042, column: 11, scope: !10035)
!10160 = !DILocation(line: 9043, column: 1, scope: !10035)
!10161 = distinct !DISubprogram(name: "f_sqrt", scope: !3, file: !3, line: 9050, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9051, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10162)
!10162 = !{!10163, !10164, !10165}
!10163 = !DILocalVariable(name: "argvars", arg: 1, scope: !10161, file: !3, line: 9050, type: !2305)
!10164 = !DILocalVariable(name: "rettv", arg: 2, scope: !10161, file: !3, line: 9050, type: !2305)
!10165 = !DILocalVariable(name: "f", scope: !10161, file: !3, line: 9052, type: !762)
!10166 = !DILocation(line: 9050, column: 18, scope: !10161)
!10167 = !DILocation(line: 9050, column: 37, scope: !10161)
!10168 = !DILocation(line: 9052, column: 13, scope: !10161)
!10169 = !DILocation(line: 9054, column: 12, scope: !10161)
!10170 = !DILocation(line: 9054, column: 19, scope: !10161)
!10171 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !10172)
!10172 = distinct !DILocation(line: 9055, column: 9, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 9055, column: 9)
!10174 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !10172)
!10175 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !10172)
!10176 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !10172)
!10177 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !10172)
!10178 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !10172)
!10179 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !10172)
!10180 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !10172)
!10181 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !10172)
!10182 = !DILocation(line: 9056, column: 24, scope: !10173)
!10183 = !DILocation(line: 9056, column: 2, scope: !10173)
!10184 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !10172)
!10185 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !10172)
!10186 = !DILocation(line: 9059, column: 1, scope: !10161)
!10187 = distinct !DISubprogram(name: "f_srand", scope: !3, file: !3, line: 7290, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7291, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10188)
!10188 = !{!10189, !10190, !10191, !10192, !10193}
!10189 = !DILocalVariable(name: "argvars", arg: 1, scope: !10187, file: !3, line: 7290, type: !2305)
!10190 = !DILocalVariable(name: "rettv", arg: 2, scope: !10187, file: !3, line: 7290, type: !2305)
!10191 = !DILocalVariable(name: "x", scope: !10187, file: !3, line: 7292, type: !2465)
!10192 = !DILocalVariable(name: "z", scope: !10187, file: !3, line: 7292, type: !2465)
!10193 = !DILocalVariable(name: "error", scope: !10194, file: !3, line: 7302, type: !756)
!10194 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 7301, column: 5)
!10195 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 7296, column: 9)
!10196 = !DILocation(line: 7290, column: 19, scope: !10187)
!10197 = !DILocation(line: 7290, column: 38, scope: !10187)
!10198 = !DILocation(line: 7292, column: 14, scope: !10187)
!10199 = !DILocation(line: 7294, column: 9, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 7294, column: 9)
!10201 = !DILocation(line: 7294, column: 33, scope: !10200)
!10202 = !DILocation(line: 7294, column: 9, scope: !10187)
!10203 = !DILocation(line: 7296, column: 20, scope: !10195)
!10204 = !DILocation(line: 7296, column: 27, scope: !10195)
!10205 = !DILocation(line: 7296, column: 9, scope: !10187)
!10206 = !DILocation(line: 7163, column: 9, scope: !2629, inlinedAt: !10207)
!10207 = distinct !DILocation(line: 7298, column: 2, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 7297, column: 5)
!10209 = !DILocation(line: 7165, column: 7, scope: !8366, inlinedAt: !10207)
!10210 = !DILocation(line: 7166, column: 2, scope: !8366, inlinedAt: !10207)
!10211 = !DILocation(line: 7169, column: 9, scope: !2637, inlinedAt: !10207)
!10212 = !DILocation(line: 7169, column: 27, scope: !2637, inlinedAt: !10207)
!10213 = !DILocation(line: 7169, column: 9, scope: !2629, inlinedAt: !10207)
!10214 = !DILocation(line: 7171, column: 12, scope: !2636, inlinedAt: !10207)
!10215 = !DILocation(line: 7171, column: 7, scope: !2636, inlinedAt: !10207)
!10216 = !DILocation(line: 7172, column: 2, scope: !2636, inlinedAt: !10207)
!10217 = !DILocation(line: 7180, column: 9, scope: !8376, inlinedAt: !10207)
!10218 = !DILocation(line: 7180, column: 6, scope: !2636, inlinedAt: !10207)
!10219 = !DILocation(line: 7181, column: 24, scope: !8376, inlinedAt: !10207)
!10220 = !DILocation(line: 7195, column: 5, scope: !2637, inlinedAt: !10207)
!10221 = !DILocation(line: 7196, column: 9, scope: !2629, inlinedAt: !10207)
!10222 = !DILocation(line: 7184, column: 19, scope: !8382, inlinedAt: !10207)
!10223 = !DILocation(line: 7184, column: 26, scope: !8382, inlinedAt: !10207)
!10224 = !DILocation(line: 7185, column: 10, scope: !8385, inlinedAt: !10207)
!10225 = !DILocation(line: 7186, column: 11, scope: !8385, inlinedAt: !10207)
!10226 = !DILocation(line: 7185, column: 10, scope: !8382, inlinedAt: !10207)
!10227 = !DILocation(line: 7187, column: 21, scope: !8385, inlinedAt: !10207)
!10228 = !DILocation(line: 7187, column: 3, scope: !8385, inlinedAt: !10207)
!10229 = !DILocation(line: 7190, column: 21, scope: !8391, inlinedAt: !10207)
!10230 = !DILocation(line: 7191, column: 21, scope: !8391, inlinedAt: !10207)
!10231 = !DILocation(line: 7193, column: 6, scope: !8382, inlinedAt: !10207)
!10232 = !DILocation(line: 7196, column: 9, scope: !8395, inlinedAt: !10207)
!10233 = !DILocation(line: 7196, column: 27, scope: !8395, inlinedAt: !10207)
!10234 = !DILocation(line: 7199, column: 7, scope: !8395, inlinedAt: !10207)
!10235 = !DILocation(line: 7199, column: 2, scope: !8395, inlinedAt: !10207)
!10236 = !DILocation(line: 7302, column: 2, scope: !10194)
!10237 = !DILocation(line: 7302, column: 10, scope: !10194)
!10238 = !DILocation(line: 7304, column: 16, scope: !10194)
!10239 = !DILocation(line: 7304, column: 6, scope: !10194)
!10240 = !DILocation(line: 7305, column: 6, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 7305, column: 6)
!10242 = !DILocation(line: 7307, column: 5, scope: !10195)
!10243 = !DILocation(line: 7309, column: 31, scope: !10187)
!10244 = !DILocation(line: 7309, column: 36, scope: !10187)
!10245 = !DILocation(line: 7309, column: 57, scope: !10187)
!10246 = !DILocation(line: 7292, column: 21, scope: !10187)
!10247 = !DILocation(line: 7309, column: 44, scope: !10187)
!10248 = !DILocation(line: 7309, column: 5, scope: !10187)
!10249 = !DILocation(line: 7310, column: 36, scope: !10187)
!10250 = !DILocation(line: 7310, column: 57, scope: !10187)
!10251 = !DILocation(line: 7310, column: 44, scope: !10187)
!10252 = !DILocation(line: 7310, column: 5, scope: !10187)
!10253 = !DILocation(line: 7311, column: 36, scope: !10187)
!10254 = !DILocation(line: 7311, column: 57, scope: !10187)
!10255 = !DILocation(line: 7311, column: 44, scope: !10187)
!10256 = !DILocation(line: 7311, column: 5, scope: !10187)
!10257 = !DILocation(line: 7312, column: 36, scope: !10187)
!10258 = !DILocation(line: 7312, column: 57, scope: !10187)
!10259 = !DILocation(line: 7312, column: 44, scope: !10187)
!10260 = !DILocation(line: 7312, column: 5, scope: !10187)
!10261 = !DILocation(line: 7313, column: 1, scope: !10187)
!10262 = distinct !DISubprogram(name: "f_str2float", scope: !3, file: !3, line: 9067, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9068, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10263)
!10263 = !{!10264, !10265, !10266, !10267}
!10264 = !DILocalVariable(name: "argvars", arg: 1, scope: !10262, file: !3, line: 9067, type: !2305)
!10265 = !DILocalVariable(name: "rettv", arg: 2, scope: !10262, file: !3, line: 9067, type: !2305)
!10266 = !DILocalVariable(name: "p", scope: !10262, file: !3, line: 9069, type: !759)
!10267 = !DILocalVariable(name: "isneg", scope: !10262, file: !3, line: 9070, type: !756)
!10268 = !DILocation(line: 9067, column: 23, scope: !10262)
!10269 = !DILocation(line: 9067, column: 42, scope: !10262)
!10270 = !DILocation(line: 9069, column: 27, scope: !10262)
!10271 = !DILocation(line: 9069, column: 17, scope: !10262)
!10272 = !DILocation(line: 9069, column: 13, scope: !10262)
!10273 = !DILocation(line: 9070, column: 22, scope: !10262)
!10274 = !DILocation(line: 9070, column: 25, scope: !10262)
!10275 = !DILocation(line: 9072, column: 19, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 9072, column: 9)
!10277 = !DILocation(line: 9073, column: 18, scope: !10276)
!10278 = !DILocation(line: 9073, column: 6, scope: !10276)
!10279 = !DILocation(line: 9073, column: 2, scope: !10276)
!10280 = !DILocation(line: 9074, column: 35, scope: !10262)
!10281 = !DILocation(line: 9074, column: 40, scope: !10262)
!10282 = !DILocation(line: 9074, column: 11, scope: !10262)
!10283 = !DILocation(line: 9075, column: 9, scope: !10262)
!10284 = !DILocation(line: 9076, column: 22, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 9075, column: 9)
!10286 = !DILocation(line: 9076, column: 2, scope: !10285)
!10287 = !DILocation(line: 9077, column: 12, scope: !10262)
!10288 = !DILocation(line: 9077, column: 19, scope: !10262)
!10289 = !DILocation(line: 9078, column: 1, scope: !10262)
!10290 = distinct !DISubprogram(name: "f_str2list", scope: !3, file: !3, line: 9085, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9086, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10291)
!10291 = !{!10292, !10293, !10294, !10295, !10296, !10299}
!10292 = !DILocalVariable(name: "argvars", arg: 1, scope: !10290, file: !3, line: 9085, type: !2305)
!10293 = !DILocalVariable(name: "rettv", arg: 2, scope: !10290, file: !3, line: 9085, type: !2305)
!10294 = !DILocalVariable(name: "p", scope: !10290, file: !3, line: 9087, type: !759)
!10295 = !DILocalVariable(name: "utf8", scope: !10290, file: !3, line: 9088, type: !756)
!10296 = !DILocalVariable(name: "ptr2len", scope: !10297, file: !3, line: 9100, type: !4897)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 9099, column: 5)
!10298 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 9098, column: 9)
!10299 = !DILocalVariable(name: "ptr2char", scope: !10297, file: !3, line: 9101, type: !4897)
!10300 = !DILocation(line: 9085, column: 22, scope: !10290)
!10301 = !DILocation(line: 9085, column: 41, scope: !10290)
!10302 = !DILocation(line: 9088, column: 10, scope: !10290)
!10303 = !DILocation(line: 9090, column: 9, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 9090, column: 9)
!10305 = !DILocation(line: 9090, column: 33, scope: !10304)
!10306 = !DILocation(line: 9090, column: 9, scope: !10290)
!10307 = !DILocation(line: 9093, column: 9, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 9093, column: 9)
!10309 = !DILocation(line: 9093, column: 20, scope: !10308)
!10310 = !DILocation(line: 9093, column: 27, scope: !10308)
!10311 = !DILocation(line: 9093, column: 9, scope: !10290)
!10312 = !DILocation(line: 9094, column: 14, scope: !10308)
!10313 = !DILocation(line: 9094, column: 9, scope: !10308)
!10314 = !DILocation(line: 9094, column: 2, scope: !10308)
!10315 = !DILocation(line: 9096, column: 9, scope: !10290)
!10316 = !DILocation(line: 9087, column: 13, scope: !10290)
!10317 = !DILocation(line: 9098, column: 9, scope: !10298)
!10318 = !DILocation(line: 9098, column: 19, scope: !10298)
!10319 = !DILocation(line: 9103, column: 14, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 9103, column: 6)
!10321 = !DILocation(line: 9103, column: 11, scope: !10320)
!10322 = !DILocation(line: 9110, column: 16, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 9109, column: 2)
!10324 = !DILocation(line: 9100, column: 8, scope: !10297)
!10325 = !DILocation(line: 9111, column: 17, scope: !10323)
!10326 = !DILocation(line: 9101, column: 8, scope: !10297)
!10327 = !DILocation(line: 9114, column: 10, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 9114, column: 2)
!10329 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 9114, column: 2)
!10330 = !DILocation(line: 9114, column: 13, scope: !10328)
!10331 = !DILocation(line: 9114, column: 2, scope: !10329)
!10332 = !DILocation(line: 9115, column: 37, scope: !10328)
!10333 = !DILocation(line: 9115, column: 45, scope: !10328)
!10334 = !DILocation(line: 9115, column: 6, scope: !10328)
!10335 = !DILocation(line: 9114, column: 26, scope: !10328)
!10336 = !DILocation(line: 9114, column: 23, scope: !10328)
!10337 = distinct !{!10337, !10331, !10338}
!10338 = !DILocation(line: 9115, column: 59, scope: !10329)
!10339 = !DILocation(line: 9118, column: 10, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 9118, column: 2)
!10341 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 9118, column: 2)
!10342 = !DILocation(line: 9118, column: 13, scope: !10340)
!10343 = !DILocation(line: 9118, column: 2, scope: !10341)
!10344 = !DILocation(line: 9119, column: 37, scope: !10340)
!10345 = !DILocation(line: 9119, column: 45, scope: !10340)
!10346 = !DILocation(line: 9119, column: 6, scope: !10340)
!10347 = !DILocation(line: 9118, column: 21, scope: !10340)
!10348 = distinct !{!10348, !10343, !10349}
!10349 = !DILocation(line: 9119, column: 47, scope: !10341)
!10350 = !DILocation(line: 9120, column: 1, scope: !10290)
!10351 = distinct !DISubprogram(name: "f_str2nr", scope: !3, file: !3, line: 9126, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9127, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10352)
!10352 = !{!10353, !10354, !10355, !10356, !10357, !10358, !10359}
!10353 = !DILocalVariable(name: "argvars", arg: 1, scope: !10351, file: !3, line: 9126, type: !2305)
!10354 = !DILocalVariable(name: "rettv", arg: 2, scope: !10351, file: !3, line: 9126, type: !2305)
!10355 = !DILocalVariable(name: "base", scope: !10351, file: !3, line: 9128, type: !756)
!10356 = !DILocalVariable(name: "p", scope: !10351, file: !3, line: 9129, type: !759)
!10357 = !DILocalVariable(name: "n", scope: !10351, file: !3, line: 9130, type: !757)
!10358 = !DILocalVariable(name: "what", scope: !10351, file: !3, line: 9131, type: !756)
!10359 = !DILocalVariable(name: "isneg", scope: !10351, file: !3, line: 9132, type: !756)
!10360 = !DILocation(line: 9126, column: 20, scope: !10351)
!10361 = !DILocation(line: 9126, column: 39, scope: !10351)
!10362 = !DILocation(line: 9128, column: 10, scope: !10351)
!10363 = !DILocation(line: 9130, column: 5, scope: !10351)
!10364 = !DILocation(line: 9131, column: 10, scope: !10351)
!10365 = !DILocation(line: 9134, column: 9, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 9134, column: 9)
!10367 = !DILocation(line: 9134, column: 20, scope: !10366)
!10368 = !DILocation(line: 9134, column: 27, scope: !10366)
!10369 = !DILocation(line: 9134, column: 9, scope: !10351)
!10370 = !DILocation(line: 9136, column: 14, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 9135, column: 5)
!10372 = !DILocation(line: 9136, column: 9, scope: !10371)
!10373 = !DILocation(line: 9137, column: 16, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 9137, column: 6)
!10375 = !DILocation(line: 9139, column: 11, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 9138, column: 2)
!10377 = !DILocation(line: 9139, column: 6, scope: !10376)
!10378 = !DILocation(line: 9140, column: 6, scope: !10376)
!10379 = !DILocation(line: 9142, column: 6, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 9142, column: 6)
!10381 = !DILocation(line: 9142, column: 17, scope: !10380)
!10382 = !DILocation(line: 9142, column: 24, scope: !10380)
!10383 = !DILocation(line: 9142, column: 39, scope: !10380)
!10384 = !DILocation(line: 9142, column: 42, scope: !10380)
!10385 = !DILocation(line: 9142, column: 6, scope: !10371)
!10386 = !DILocation(line: 9146, column: 19, scope: !10351)
!10387 = !DILocation(line: 9146, column: 9, scope: !10351)
!10388 = !DILocation(line: 9129, column: 13, scope: !10351)
!10389 = !DILocation(line: 9147, column: 14, scope: !10351)
!10390 = !DILocation(line: 9147, column: 17, scope: !10351)
!10391 = !DILocation(line: 9148, column: 19, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 9148, column: 9)
!10393 = !DILocation(line: 9149, column: 18, scope: !10392)
!10394 = !DILocation(line: 9149, column: 6, scope: !10392)
!10395 = !DILocation(line: 9149, column: 2, scope: !10392)
!10396 = !DILocation(line: 9150, column: 5, scope: !10351)
!10397 = !DILocation(line: 9152, column: 15, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 9151, column: 5)
!10399 = !DILocation(line: 9152, column: 45, scope: !10398)
!10400 = !DILocation(line: 9153, column: 15, scope: !10398)
!10401 = !DILocation(line: 9153, column: 59, scope: !10398)
!10402 = !DILocation(line: 9154, column: 16, scope: !10398)
!10403 = !DILocation(line: 9154, column: 46, scope: !10398)
!10404 = !DILocation(line: 9130, column: 17, scope: !10351)
!10405 = !DILocation(line: 9156, column: 5, scope: !10351)
!10406 = !DILocation(line: 9158, column: 9, scope: !10351)
!10407 = !DILocation(line: 9159, column: 25, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 9158, column: 9)
!10409 = !DILocation(line: 9159, column: 14, scope: !10408)
!10410 = !DILocation(line: 9159, column: 23, scope: !10408)
!10411 = !DILocation(line: 9159, column: 2, scope: !10408)
!10412 = !DILocation(line: 9161, column: 14, scope: !10408)
!10413 = !DILocation(line: 9161, column: 23, scope: !10408)
!10414 = !DILocation(line: 9163, column: 1, scope: !10351)
!10415 = distinct !DISubprogram(name: "f_strcharlen", scope: !3, file: !3, line: 9280, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9281, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10416)
!10416 = !{!10417, !10418}
!10417 = !DILocalVariable(name: "argvars", arg: 1, scope: !10415, file: !3, line: 9280, type: !2305)
!10418 = !DILocalVariable(name: "rettv", arg: 2, scope: !10415, file: !3, line: 9280, type: !2305)
!10419 = !DILocation(line: 9280, column: 24, scope: !10415)
!10420 = !DILocation(line: 9280, column: 43, scope: !10415)
!10421 = !DILocalVariable(name: "argvars", arg: 1, scope: !10422, file: !3, line: 9261, type: !2305)
!10422 = distinct !DISubprogram(name: "strchar_common", scope: !3, file: !3, line: 9261, type: !3480, isLocal: true, isDefinition: true, scopeLine: 9262, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10423)
!10423 = !{!10421, !10424, !10425, !10426, !10427, !10428}
!10424 = !DILocalVariable(name: "rettv", arg: 2, scope: !10422, file: !3, line: 9261, type: !2305)
!10425 = !DILocalVariable(name: "skipcc", arg: 3, scope: !10422, file: !3, line: 9261, type: !756)
!10426 = !DILocalVariable(name: "s", scope: !10422, file: !3, line: 9263, type: !759)
!10427 = !DILocalVariable(name: "len", scope: !10422, file: !3, line: 9264, type: !757)
!10428 = !DILocalVariable(name: "func_mb_ptr2char_adv", scope: !10422, file: !3, line: 9265, type: !10429)
!10429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10430, size: 64)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!756, !2469}
!10432 = !DILocation(line: 9261, column: 26, scope: !10422, inlinedAt: !10433)
!10433 = distinct !DILocation(line: 9282, column: 5, scope: !10415)
!10434 = !DILocation(line: 9261, column: 45, scope: !10422, inlinedAt: !10433)
!10435 = !DILocation(line: 9261, column: 56, scope: !10422, inlinedAt: !10433)
!10436 = !DILocation(line: 9263, column: 5, scope: !10422, inlinedAt: !10433)
!10437 = !DILocation(line: 9263, column: 18, scope: !10422, inlinedAt: !10433)
!10438 = !DILocation(line: 9263, column: 14, scope: !10422, inlinedAt: !10433)
!10439 = !DILocation(line: 9264, column: 18, scope: !10422, inlinedAt: !10433)
!10440 = !DILocation(line: 9265, column: 13, scope: !10422, inlinedAt: !10433)
!10441 = !DILocation(line: 9268, column: 12, scope: !10422, inlinedAt: !10433)
!10442 = !DILocation(line: 9268, column: 15, scope: !10422, inlinedAt: !10433)
!10443 = !DILocation(line: 9268, column: 5, scope: !10422, inlinedAt: !10433)
!10444 = !DILocation(line: 9270, column: 2, scope: !10445, inlinedAt: !10433)
!10445 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 9269, column: 5)
!10446 = !{i32 (i8**)* @mb_cptr2char_adv, i32 (i8**)* @mb_ptr2char_adv}
!10447 = !DILocation(line: 9271, column: 2, scope: !10445, inlinedAt: !10433)
!10448 = !DILocation(line: 9268, column: 13, scope: !10422, inlinedAt: !10433)
!10449 = distinct !{!10449, !10450, !10451}
!10450 = !DILocation(line: 9268, column: 5, scope: !10422)
!10451 = !DILocation(line: 9272, column: 5, scope: !10422)
!10452 = !DILocation(line: 9273, column: 17, scope: !10422, inlinedAt: !10433)
!10453 = !DILocation(line: 9273, column: 26, scope: !10422, inlinedAt: !10433)
!10454 = !DILocation(line: 9274, column: 1, scope: !10422, inlinedAt: !10433)
!10455 = !DILocation(line: 9283, column: 1, scope: !10415)
!10456 = distinct !DISubprogram(name: "f_strcharpart", scope: !3, file: !3, line: 9331, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9332, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10457)
!10457 = !{!10458, !10459, !10460, !10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468}
!10458 = !DILocalVariable(name: "argvars", arg: 1, scope: !10456, file: !3, line: 9331, type: !2305)
!10459 = !DILocalVariable(name: "rettv", arg: 2, scope: !10456, file: !3, line: 9331, type: !2305)
!10460 = !DILocalVariable(name: "p", scope: !10456, file: !3, line: 9333, type: !759)
!10461 = !DILocalVariable(name: "nchar", scope: !10456, file: !3, line: 9334, type: !756)
!10462 = !DILocalVariable(name: "nbyte", scope: !10456, file: !3, line: 9335, type: !756)
!10463 = !DILocalVariable(name: "charlen", scope: !10456, file: !3, line: 9336, type: !756)
!10464 = !DILocalVariable(name: "skipcc", scope: !10456, file: !3, line: 9337, type: !756)
!10465 = !DILocalVariable(name: "len", scope: !10456, file: !3, line: 9338, type: !756)
!10466 = !DILocalVariable(name: "slen", scope: !10456, file: !3, line: 9339, type: !756)
!10467 = !DILocalVariable(name: "error", scope: !10456, file: !3, line: 9340, type: !756)
!10468 = !DILocalVariable(name: "off", scope: !10469, file: !3, line: 9375, type: !756)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 9374, column: 6)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 9371, column: 2)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 9370, column: 6)
!10472 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 9347, column: 5)
!10473 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 9346, column: 9)
!10474 = !DILocation(line: 9331, column: 25, scope: !10456)
!10475 = !DILocation(line: 9331, column: 44, scope: !10456)
!10476 = !DILocation(line: 9335, column: 10, scope: !10456)
!10477 = !DILocation(line: 9337, column: 10, scope: !10456)
!10478 = !DILocation(line: 9338, column: 10, scope: !10456)
!10479 = !DILocation(line: 9340, column: 5, scope: !10456)
!10480 = !DILocation(line: 9340, column: 10, scope: !10456)
!10481 = !DILocation(line: 9342, column: 9, scope: !10456)
!10482 = !DILocation(line: 9333, column: 13, scope: !10456)
!10483 = !DILocation(line: 9343, column: 17, scope: !10456)
!10484 = !DILocation(line: 9343, column: 12, scope: !10456)
!10485 = !DILocation(line: 9339, column: 10, scope: !10456)
!10486 = !DILocation(line: 9345, column: 37, scope: !10456)
!10487 = !DILocation(line: 9345, column: 18, scope: !10456)
!10488 = !DILocation(line: 9345, column: 13, scope: !10456)
!10489 = !DILocation(line: 9334, column: 10, scope: !10456)
!10490 = !DILocation(line: 9346, column: 10, scope: !10473)
!10491 = !DILocation(line: 9346, column: 9, scope: !10456)
!10492 = !DILocation(line: 9348, column: 6, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 9348, column: 6)
!10494 = !DILocation(line: 9348, column: 17, scope: !10493)
!10495 = !DILocation(line: 9348, column: 24, scope: !10493)
!10496 = !DILocation(line: 9349, column: 9, scope: !10493)
!10497 = !DILocation(line: 9349, column: 12, scope: !10493)
!10498 = !DILocation(line: 9349, column: 23, scope: !10493)
!10499 = !DILocation(line: 9349, column: 30, scope: !10493)
!10500 = !DILocation(line: 9348, column: 6, scope: !10472)
!10501 = !DILocation(line: 9351, column: 15, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 9350, column: 2)
!10503 = !DILocation(line: 9352, column: 21, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 9352, column: 10)
!10505 = !DILocation(line: 9354, column: 9, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 9353, column: 6)
!10507 = !DILocation(line: 9354, column: 3, scope: !10506)
!10508 = !DILocation(line: 9355, column: 3, scope: !10506)
!10509 = !DILocation(line: 9359, column: 12, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 9359, column: 6)
!10511 = !DILocation(line: 9359, column: 6, scope: !10472)
!10512 = !DILocation(line: 9360, column: 32, scope: !10510)
!10513 = !DILocation(line: 9360, column: 23, scope: !10510)
!10514 = !DILocation(line: 9362, column: 7, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 9361, column: 6)
!10516 = !DILocation(line: 9363, column: 16, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 9362, column: 7)
!10518 = !DILocation(line: 9363, column: 29, scope: !10517)
!10519 = !DILocation(line: 9363, column: 7, scope: !10517)
!10520 = !DILocation(line: 9365, column: 16, scope: !10517)
!10521 = !DILocation(line: 9366, column: 3, scope: !10515)
!10522 = !DILocation(line: 9360, column: 19, scope: !10510)
!10523 = distinct !{!10523, !10524, !10525}
!10524 = !DILocation(line: 9360, column: 6, scope: !10510)
!10525 = !DILocation(line: 9367, column: 6, scope: !10510)
!10526 = !DILocation(line: 9370, column: 17, scope: !10471)
!10527 = !DILocation(line: 9370, column: 24, scope: !10471)
!10528 = !DILocation(line: 9370, column: 6, scope: !10472)
!10529 = !DILocation(line: 9372, column: 21, scope: !10470)
!10530 = !DILocation(line: 9372, column: 16, scope: !10470)
!10531 = !DILocation(line: 9336, column: 10, scope: !10456)
!10532 = !DILocation(line: 9373, column: 21, scope: !10470)
!10533 = !DILocation(line: 9373, column: 25, scope: !10470)
!10534 = !DILocation(line: 9373, column: 34, scope: !10470)
!10535 = !DILocation(line: 9373, column: 40, scope: !10470)
!10536 = !DILocation(line: 9373, column: 6, scope: !10470)
!10537 = !DILocation(line: 9375, column: 7, scope: !10469)
!10538 = !DILocation(line: 9377, column: 11, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 9377, column: 7)
!10540 = !DILocation(line: 9377, column: 7, scope: !10469)
!10541 = !DILocation(line: 9378, column: 11, scope: !10539)
!10542 = !DILocation(line: 9378, column: 7, scope: !10539)
!10543 = !DILocation(line: 9381, column: 11, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 9380, column: 3)
!10545 = !DILocation(line: 9382, column: 11, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 9381, column: 11)
!10547 = !DILocation(line: 9382, column: 24, scope: !10546)
!10548 = !DILocation(line: 9382, column: 8, scope: !10546)
!10549 = !DILocation(line: 9382, column: 4, scope: !10546)
!10550 = !DILocation(line: 9384, column: 11, scope: !10546)
!10551 = !DILocation(line: 9384, column: 8, scope: !10546)
!10552 = !DILocation(line: 9386, column: 3, scope: !10469)
!10553 = distinct !{!10553, !10536, !10554}
!10554 = !DILocation(line: 9387, column: 6, scope: !10470)
!10555 = !DILocation(line: 9390, column: 17, scope: !10471)
!10556 = !DILocation(line: 9397, column: 15, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 9397, column: 9)
!10558 = !DILocation(line: 9402, column: 20, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 9402, column: 14)
!10560 = !DILocation(line: 9402, column: 14, scope: !10557)
!10561 = !DILocation(line: 9397, column: 9, scope: !10456)
!10562 = !DILocation(line: 9404, column: 13, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 9404, column: 9)
!10564 = !DILocation(line: 9404, column: 9, scope: !10456)
!10565 = !DILocation(line: 9406, column: 20, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 9406, column: 14)
!10567 = !DILocation(line: 9406, column: 26, scope: !10566)
!10568 = !DILocation(line: 9407, column: 13, scope: !10566)
!10569 = !DILocation(line: 9406, column: 14, scope: !10563)
!10570 = !DILocation(line: 9409, column: 12, scope: !10456)
!10571 = !DILocation(line: 9409, column: 19, scope: !10456)
!10572 = !DILocation(line: 9410, column: 43, scope: !10456)
!10573 = !DILocation(line: 9410, column: 28, scope: !10456)
!10574 = !DILocation(line: 9410, column: 12, scope: !10456)
!10575 = !DILocation(line: 9410, column: 17, scope: !10456)
!10576 = !DILocation(line: 9410, column: 26, scope: !10456)
!10577 = !DILocation(line: 9411, column: 1, scope: !10456)
!10578 = distinct !DISubprogram(name: "f_strchars", scope: !3, file: !3, line: 9289, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9290, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10579)
!10579 = !{!10580, !10581, !10582}
!10580 = !DILocalVariable(name: "argvars", arg: 1, scope: !10578, file: !3, line: 9289, type: !2305)
!10581 = !DILocalVariable(name: "rettv", arg: 2, scope: !10578, file: !3, line: 9289, type: !2305)
!10582 = !DILocalVariable(name: "skipcc", scope: !10578, file: !3, line: 9291, type: !757)
!10583 = !DILocation(line: 9289, column: 22, scope: !10578)
!10584 = !DILocation(line: 9289, column: 41, scope: !10578)
!10585 = !DILocation(line: 9291, column: 18, scope: !10578)
!10586 = !DILocation(line: 9293, column: 9, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 9293, column: 9)
!10588 = !DILocation(line: 9293, column: 20, scope: !10587)
!10589 = !DILocation(line: 9293, column: 27, scope: !10587)
!10590 = !DILocation(line: 9293, column: 9, scope: !10578)
!10591 = !DILocation(line: 9294, column: 11, scope: !10587)
!10592 = !DILocation(line: 9295, column: 20, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 9295, column: 9)
!10594 = !DILocation(line: 9296, column: 8, scope: !10593)
!10595 = !DILocation(line: 9296, column: 2, scope: !10593)
!10596 = !DILocation(line: 9298, column: 33, scope: !10593)
!10597 = !DILocation(line: 9261, column: 26, scope: !10422, inlinedAt: !10598)
!10598 = distinct !DILocation(line: 9298, column: 2, scope: !10593)
!10599 = !DILocation(line: 9261, column: 45, scope: !10422, inlinedAt: !10598)
!10600 = !DILocation(line: 9261, column: 56, scope: !10422, inlinedAt: !10598)
!10601 = !DILocation(line: 9263, column: 5, scope: !10422, inlinedAt: !10598)
!10602 = !DILocation(line: 9263, column: 18, scope: !10422, inlinedAt: !10598)
!10603 = !DILocation(line: 9263, column: 14, scope: !10422, inlinedAt: !10598)
!10604 = !DILocation(line: 9264, column: 18, scope: !10422, inlinedAt: !10598)
!10605 = !DILocation(line: 9267, column: 28, scope: !10422, inlinedAt: !10598)
!10606 = !DILocation(line: 9265, column: 13, scope: !10422, inlinedAt: !10598)
!10607 = !DILocation(line: 9268, column: 12, scope: !10422, inlinedAt: !10598)
!10608 = !DILocation(line: 9268, column: 15, scope: !10422, inlinedAt: !10598)
!10609 = !DILocation(line: 9268, column: 5, scope: !10422, inlinedAt: !10598)
!10610 = !DILocation(line: 9270, column: 2, scope: !10445, inlinedAt: !10598)
!10611 = !DILocation(line: 9271, column: 2, scope: !10445, inlinedAt: !10598)
!10612 = !DILocation(line: 9268, column: 13, scope: !10422, inlinedAt: !10598)
!10613 = !DILocation(line: 9273, column: 17, scope: !10422, inlinedAt: !10598)
!10614 = !DILocation(line: 9273, column: 26, scope: !10422, inlinedAt: !10598)
!10615 = !DILocation(line: 9274, column: 1, scope: !10422, inlinedAt: !10598)
!10616 = !DILocation(line: 9299, column: 1, scope: !10578)
!10617 = distinct !DISubprogram(name: "f_strdisplaywidth", scope: !3, file: !3, line: 9305, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9306, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10618)
!10618 = !{!10619, !10620, !10621, !10622}
!10619 = !DILocalVariable(name: "argvars", arg: 1, scope: !10617, file: !3, line: 9305, type: !2305)
!10620 = !DILocalVariable(name: "rettv", arg: 2, scope: !10617, file: !3, line: 9305, type: !2305)
!10621 = !DILocalVariable(name: "s", scope: !10617, file: !3, line: 9307, type: !759)
!10622 = !DILocalVariable(name: "col", scope: !10617, file: !3, line: 9308, type: !756)
!10623 = !DILocation(line: 9305, column: 29, scope: !10617)
!10624 = !DILocation(line: 9305, column: 48, scope: !10617)
!10625 = !DILocation(line: 9307, column: 17, scope: !10617)
!10626 = !DILocation(line: 9307, column: 13, scope: !10617)
!10627 = !DILocation(line: 9308, column: 10, scope: !10617)
!10628 = !DILocation(line: 9310, column: 9, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 9310, column: 9)
!10630 = !DILocation(line: 9310, column: 20, scope: !10629)
!10631 = !DILocation(line: 9310, column: 27, scope: !10629)
!10632 = !DILocation(line: 9310, column: 9, scope: !10617)
!10633 = !DILocation(line: 9311, column: 13, scope: !10629)
!10634 = !DILocation(line: 9311, column: 8, scope: !10629)
!10635 = !DILocation(line: 9311, column: 2, scope: !10629)
!10636 = !DILocation(line: 9313, column: 42, scope: !10617)
!10637 = !DILocation(line: 9313, column: 66, scope: !10617)
!10638 = !DILocation(line: 9313, column: 28, scope: !10617)
!10639 = !DILocation(line: 9313, column: 17, scope: !10617)
!10640 = !DILocation(line: 9313, column: 26, scope: !10617)
!10641 = !DILocation(line: 9314, column: 1, scope: !10617)
!10642 = distinct !DISubprogram(name: "f_strgetchar", scope: !3, file: !3, line: 9169, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9170, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10643)
!10643 = !{!10644, !10645, !10646, !10647, !10648, !10649, !10650}
!10644 = !DILocalVariable(name: "argvars", arg: 1, scope: !10642, file: !3, line: 9169, type: !2305)
!10645 = !DILocalVariable(name: "rettv", arg: 2, scope: !10642, file: !3, line: 9169, type: !2305)
!10646 = !DILocalVariable(name: "str", scope: !10642, file: !3, line: 9171, type: !759)
!10647 = !DILocalVariable(name: "len", scope: !10642, file: !3, line: 9172, type: !756)
!10648 = !DILocalVariable(name: "error", scope: !10642, file: !3, line: 9173, type: !756)
!10649 = !DILocalVariable(name: "charidx", scope: !10642, file: !3, line: 9174, type: !756)
!10650 = !DILocalVariable(name: "byteidx", scope: !10642, file: !3, line: 9175, type: !756)
!10651 = !DILocation(line: 9169, column: 24, scope: !10642)
!10652 = !DILocation(line: 9169, column: 43, scope: !10642)
!10653 = !DILocation(line: 9173, column: 5, scope: !10642)
!10654 = !DILocation(line: 9173, column: 10, scope: !10642)
!10655 = !DILocation(line: 9175, column: 10, scope: !10642)
!10656 = !DILocation(line: 9177, column: 17, scope: !10642)
!10657 = !DILocation(line: 9177, column: 26, scope: !10642)
!10658 = !DILocation(line: 9178, column: 11, scope: !10642)
!10659 = !DILocation(line: 9171, column: 13, scope: !10642)
!10660 = !DILocation(line: 9179, column: 13, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 9179, column: 9)
!10662 = !DILocation(line: 9179, column: 9, scope: !10642)
!10663 = !DILocation(line: 9181, column: 16, scope: !10642)
!10664 = !DILocation(line: 9181, column: 11, scope: !10642)
!10665 = !DILocation(line: 9172, column: 10, scope: !10642)
!10666 = !DILocation(line: 9182, column: 39, scope: !10642)
!10667 = !DILocation(line: 9182, column: 20, scope: !10642)
!10668 = !DILocation(line: 9174, column: 10, scope: !10642)
!10669 = !DILocation(line: 9183, column: 9, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 9183, column: 9)
!10671 = !DILocation(line: 9183, column: 9, scope: !10642)
!10672 = !DILocation(line: 9182, column: 15, scope: !10642)
!10673 = !DILocation(line: 9186, column: 20, scope: !10642)
!10674 = !DILocation(line: 9186, column: 36, scope: !10642)
!10675 = !DILocation(line: 9186, column: 25, scope: !10642)
!10676 = !DILocation(line: 9188, column: 14, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 9188, column: 6)
!10678 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 9187, column: 5)
!10679 = !DILocation(line: 9188, column: 6, scope: !10678)
!10680 = !DILocation(line: 9190, column: 29, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 9189, column: 2)
!10682 = !DILocation(line: 9190, column: 45, scope: !10681)
!10683 = !DILocation(line: 9190, column: 27, scope: !10681)
!10684 = !DILocation(line: 9191, column: 6, scope: !10681)
!10685 = !DILocation(line: 9193, column: 2, scope: !10678)
!10686 = !DILocation(line: 9194, column: 13, scope: !10678)
!10687 = !DILocation(line: 9194, column: 10, scope: !10678)
!10688 = distinct !{!10688, !10689, !10690}
!10689 = !DILocation(line: 9186, column: 5, scope: !10642)
!10690 = !DILocation(line: 9195, column: 5, scope: !10642)
!10691 = !DILocation(line: 9196, column: 1, scope: !10642)
!10692 = distinct !DISubprogram(name: "f_stridx", scope: !3, file: !3, line: 9202, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9203, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10693)
!10693 = !{!10694, !10695, !10696, !10697, !10698, !10699, !10700, !10701, !10702}
!10694 = !DILocalVariable(name: "argvars", arg: 1, scope: !10692, file: !3, line: 9202, type: !2305)
!10695 = !DILocalVariable(name: "rettv", arg: 2, scope: !10692, file: !3, line: 9202, type: !2305)
!10696 = !DILocalVariable(name: "buf", scope: !10692, file: !3, line: 9204, type: !3499)
!10697 = !DILocalVariable(name: "needle", scope: !10692, file: !3, line: 9205, type: !759)
!10698 = !DILocalVariable(name: "haystack", scope: !10692, file: !3, line: 9206, type: !759)
!10699 = !DILocalVariable(name: "save_haystack", scope: !10692, file: !3, line: 9207, type: !759)
!10700 = !DILocalVariable(name: "pos", scope: !10692, file: !3, line: 9208, type: !759)
!10701 = !DILocalVariable(name: "start_idx", scope: !10692, file: !3, line: 9209, type: !756)
!10702 = !DILocalVariable(name: "error", scope: !10703, file: !3, line: 9219, type: !756)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 9218, column: 5)
!10704 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 9217, column: 9)
!10705 = !DILocation(line: 9202, column: 20, scope: !10692)
!10706 = !DILocation(line: 9202, column: 39, scope: !10692)
!10707 = !DILocation(line: 9204, column: 5, scope: !10692)
!10708 = !DILocation(line: 9204, column: 12, scope: !10692)
!10709 = !DILocation(line: 9211, column: 33, scope: !10692)
!10710 = !DILocation(line: 9211, column: 14, scope: !10692)
!10711 = !DILocation(line: 9205, column: 13, scope: !10692)
!10712 = !DILocation(line: 9212, column: 32, scope: !10692)
!10713 = !DILocation(line: 9206, column: 13, scope: !10692)
!10714 = !DILocation(line: 9207, column: 13, scope: !10692)
!10715 = !DILocation(line: 9213, column: 17, scope: !10692)
!10716 = !DILocation(line: 9213, column: 26, scope: !10692)
!10717 = !DILocation(line: 9214, column: 16, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 9214, column: 9)
!10719 = !DILocation(line: 9214, column: 36, scope: !10718)
!10720 = !DILocation(line: 9214, column: 24, scope: !10718)
!10721 = !DILocation(line: 9217, column: 9, scope: !10704)
!10722 = !DILocation(line: 9217, column: 20, scope: !10704)
!10723 = !DILocation(line: 9217, column: 27, scope: !10704)
!10724 = !DILocation(line: 9217, column: 9, scope: !10692)
!10725 = !DILocation(line: 9219, column: 2, scope: !10703)
!10726 = !DILocation(line: 9219, column: 10, scope: !10703)
!10727 = !DILocation(line: 9221, column: 19, scope: !10703)
!10728 = !DILocation(line: 9221, column: 14, scope: !10703)
!10729 = !DILocation(line: 9209, column: 10, scope: !10692)
!10730 = !DILocation(line: 9222, column: 6, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 9222, column: 6)
!10732 = !DILocation(line: 9222, column: 12, scope: !10731)
!10733 = !DILocation(line: 9222, column: 33, scope: !10731)
!10734 = !DILocation(line: 9222, column: 28, scope: !10731)
!10735 = !DILocation(line: 9222, column: 25, scope: !10731)
!10736 = !DILocation(line: 9222, column: 6, scope: !10703)
!10737 = !DILocation(line: 9226, column: 5, scope: !10704)
!10738 = !DILocation(line: 9224, column: 16, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 9224, column: 6)
!10740 = !DILocation(line: 9225, column: 15, scope: !10739)
!10741 = !DILocation(line: 9224, column: 6, scope: !10703)
!10742 = !DILocation(line: 9228, column: 21, scope: !10692)
!10743 = !DILocation(line: 9208, column: 13, scope: !10692)
!10744 = !DILocation(line: 9229, column: 13, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 9229, column: 9)
!10746 = !DILocation(line: 9229, column: 9, scope: !10692)
!10747 = !DILocation(line: 9230, column: 43, scope: !10745)
!10748 = !DILocation(line: 9230, column: 23, scope: !10745)
!10749 = !DILocation(line: 9230, column: 2, scope: !10745)
!10750 = !DILocation(line: 9231, column: 1, scope: !10692)
!10751 = distinct !DISubprogram(name: "f_strlen", scope: !3, file: !3, line: 9254, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9255, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10752)
!10752 = !{!10753, !10754}
!10753 = !DILocalVariable(name: "argvars", arg: 1, scope: !10751, file: !3, line: 9254, type: !2305)
!10754 = !DILocalVariable(name: "rettv", arg: 2, scope: !10751, file: !3, line: 9254, type: !2305)
!10755 = !DILocation(line: 9254, column: 20, scope: !10751)
!10756 = !DILocation(line: 9254, column: 39, scope: !10751)
!10757 = !DILocation(line: 9256, column: 42, scope: !10751)
!10758 = !DILocation(line: 9256, column: 17, scope: !10751)
!10759 = !DILocation(line: 9256, column: 26, scope: !10751)
!10760 = !DILocation(line: 9258, column: 1, scope: !10751)
!10761 = distinct !DISubprogram(name: "f_strpart", scope: !3, file: !3, line: 9417, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9418, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10762)
!10762 = !{!10763, !10764, !10765, !10766, !10767, !10768, !10769, !10770}
!10763 = !DILocalVariable(name: "argvars", arg: 1, scope: !10761, file: !3, line: 9417, type: !2305)
!10764 = !DILocalVariable(name: "rettv", arg: 2, scope: !10761, file: !3, line: 9417, type: !2305)
!10765 = !DILocalVariable(name: "p", scope: !10761, file: !3, line: 9419, type: !759)
!10766 = !DILocalVariable(name: "n", scope: !10761, file: !3, line: 9420, type: !756)
!10767 = !DILocalVariable(name: "len", scope: !10761, file: !3, line: 9421, type: !756)
!10768 = !DILocalVariable(name: "slen", scope: !10761, file: !3, line: 9422, type: !756)
!10769 = !DILocalVariable(name: "error", scope: !10761, file: !3, line: 9423, type: !756)
!10770 = !DILocalVariable(name: "off", scope: !10771, file: !3, line: 9452, type: !756)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 9451, column: 5)
!10772 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 9450, column: 9)
!10773 = !DILocation(line: 9417, column: 21, scope: !10761)
!10774 = !DILocation(line: 9417, column: 40, scope: !10761)
!10775 = !DILocation(line: 9423, column: 5, scope: !10761)
!10776 = !DILocation(line: 9423, column: 10, scope: !10761)
!10777 = !DILocation(line: 9425, column: 9, scope: !10761)
!10778 = !DILocation(line: 9419, column: 13, scope: !10761)
!10779 = !DILocation(line: 9426, column: 17, scope: !10761)
!10780 = !DILocation(line: 9426, column: 12, scope: !10761)
!10781 = !DILocation(line: 9422, column: 10, scope: !10761)
!10782 = !DILocation(line: 9428, column: 33, scope: !10761)
!10783 = !DILocation(line: 9428, column: 14, scope: !10761)
!10784 = !DILocation(line: 9428, column: 9, scope: !10761)
!10785 = !DILocation(line: 9420, column: 10, scope: !10761)
!10786 = !DILocation(line: 9429, column: 9, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 9429, column: 9)
!10788 = !DILocation(line: 9429, column: 9, scope: !10761)
!10789 = !DILocation(line: 9431, column: 14, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 9431, column: 14)
!10791 = !DILocation(line: 9431, column: 25, scope: !10790)
!10792 = !DILocation(line: 9431, column: 32, scope: !10790)
!10793 = !DILocation(line: 9431, column: 14, scope: !10787)
!10794 = !DILocation(line: 9432, column: 13, scope: !10790)
!10795 = !DILocation(line: 9432, column: 8, scope: !10790)
!10796 = !DILocation(line: 9421, column: 10, scope: !10761)
!10797 = !DILocation(line: 9432, column: 2, scope: !10790)
!10798 = !DILocation(line: 9434, column: 13, scope: !10790)
!10799 = !DILocation(line: 9438, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 9438, column: 9)
!10801 = !DILocation(line: 9443, column: 16, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 9443, column: 14)
!10803 = !DILocation(line: 9443, column: 14, scope: !10800)
!10804 = !DILocation(line: 9438, column: 9, scope: !10761)
!10805 = !DILocation(line: 9445, column: 13, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 9445, column: 9)
!10807 = !DILocation(line: 9445, column: 9, scope: !10761)
!10808 = !DILocation(line: 9447, column: 16, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 9447, column: 14)
!10810 = !DILocation(line: 9447, column: 22, scope: !10809)
!10811 = !DILocation(line: 9448, column: 13, scope: !10809)
!10812 = !DILocation(line: 9447, column: 14, scope: !10806)
!10813 = !DILocation(line: 9450, column: 20, scope: !10772)
!10814 = !DILocation(line: 9450, column: 27, scope: !10772)
!10815 = !DILocation(line: 9450, column: 42, scope: !10772)
!10816 = !DILocation(line: 9450, column: 56, scope: !10772)
!10817 = !DILocation(line: 9450, column: 63, scope: !10772)
!10818 = !DILocation(line: 9450, column: 9, scope: !10761)
!10819 = !DILocation(line: 9452, column: 6, scope: !10771)
!10820 = !DILocation(line: 9455, column: 20, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 9455, column: 2)
!10822 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 9455, column: 2)
!10823 = !DILocation(line: 9455, column: 34, scope: !10821)
!10824 = !DILocation(line: 9455, column: 27, scope: !10821)
!10825 = !DILocation(line: 9455, column: 2, scope: !10822)
!10826 = !DILocation(line: 9456, column: 13, scope: !10821)
!10827 = !DILocation(line: 9456, column: 26, scope: !10821)
!10828 = !DILocation(line: 9456, column: 10, scope: !10821)
!10829 = !DILocation(line: 9455, column: 39, scope: !10821)
!10830 = distinct !{!10830, !10825, !10831}
!10831 = !DILocation(line: 9456, column: 31, scope: !10822)
!10832 = !DILocation(line: 9457, column: 12, scope: !10771)
!10833 = !DILocation(line: 9458, column: 5, scope: !10771)
!10834 = !DILocation(line: 9460, column: 12, scope: !10761)
!10835 = !DILocation(line: 9460, column: 19, scope: !10761)
!10836 = !DILocation(line: 9461, column: 43, scope: !10761)
!10837 = !DILocation(line: 9461, column: 48, scope: !10761)
!10838 = !DILocation(line: 9461, column: 28, scope: !10761)
!10839 = !DILocation(line: 9461, column: 12, scope: !10761)
!10840 = !DILocation(line: 9461, column: 17, scope: !10761)
!10841 = !DILocation(line: 9461, column: 26, scope: !10761)
!10842 = !DILocation(line: 9462, column: 1, scope: !10761)
!10843 = distinct !DISubprogram(name: "f_strridx", scope: !3, file: !3, line: 9468, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9469, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10844)
!10844 = !{!10845, !10846, !10847, !10848, !10849, !10850, !10851, !10852, !10853}
!10845 = !DILocalVariable(name: "argvars", arg: 1, scope: !10843, file: !3, line: 9468, type: !2305)
!10846 = !DILocalVariable(name: "rettv", arg: 2, scope: !10843, file: !3, line: 9468, type: !2305)
!10847 = !DILocalVariable(name: "buf", scope: !10843, file: !3, line: 9470, type: !3499)
!10848 = !DILocalVariable(name: "needle", scope: !10843, file: !3, line: 9471, type: !759)
!10849 = !DILocalVariable(name: "haystack", scope: !10843, file: !3, line: 9472, type: !759)
!10850 = !DILocalVariable(name: "rest", scope: !10843, file: !3, line: 9473, type: !759)
!10851 = !DILocalVariable(name: "lastmatch", scope: !10843, file: !3, line: 9474, type: !759)
!10852 = !DILocalVariable(name: "haystack_len", scope: !10843, file: !3, line: 9475, type: !756)
!10853 = !DILocalVariable(name: "end_idx", scope: !10843, file: !3, line: 9475, type: !756)
!10854 = !DILocation(line: 9468, column: 21, scope: !10843)
!10855 = !DILocation(line: 9468, column: 40, scope: !10843)
!10856 = !DILocation(line: 9470, column: 5, scope: !10843)
!10857 = !DILocation(line: 9470, column: 12, scope: !10843)
!10858 = !DILocation(line: 9474, column: 13, scope: !10843)
!10859 = !DILocation(line: 9477, column: 33, scope: !10843)
!10860 = !DILocation(line: 9477, column: 14, scope: !10843)
!10861 = !DILocation(line: 9471, column: 13, scope: !10843)
!10862 = !DILocation(line: 9478, column: 16, scope: !10843)
!10863 = !DILocation(line: 9472, column: 13, scope: !10843)
!10864 = !DILocation(line: 9480, column: 17, scope: !10843)
!10865 = !DILocation(line: 9480, column: 26, scope: !10843)
!10866 = !DILocation(line: 9481, column: 16, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 9481, column: 9)
!10868 = !DILocation(line: 9481, column: 36, scope: !10867)
!10869 = !DILocation(line: 9481, column: 24, scope: !10867)
!10870 = !DILocation(line: 9485, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 9485, column: 9)
!10872 = !DILocation(line: 9485, column: 20, scope: !10871)
!10873 = !DILocation(line: 9485, column: 27, scope: !10871)
!10874 = !DILocation(line: 9485, column: 9, scope: !10843)
!10875 = !DILocation(line: 9488, column: 17, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 9486, column: 5)
!10877 = !DILocation(line: 9488, column: 12, scope: !10876)
!10878 = !DILocation(line: 9475, column: 24, scope: !10843)
!10879 = !DILocation(line: 9489, column: 14, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 9489, column: 6)
!10881 = !DILocation(line: 9489, column: 6, scope: !10876)
!10882 = !DILocation(line: 9484, column: 25, scope: !10843)
!10883 = !DILocation(line: 9495, column: 9, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 9495, column: 9)
!10885 = !DILocation(line: 9495, column: 17, scope: !10884)
!10886 = !DILocation(line: 9495, column: 9, scope: !10843)
!10887 = !DILocation(line: 9473, column: 13, scope: !10843)
!10888 = !DILocation(line: 9502, column: 24, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 9502, column: 2)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 9502, column: 2)
!10891 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 9501, column: 5)
!10892 = !DILocation(line: 9502, column: 30, scope: !10889)
!10893 = !DILocation(line: 9502, column: 2, scope: !10890)
!10894 = !DILocation(line: 9504, column: 23, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 9503, column: 2)
!10896 = distinct !{!10896, !10893, !10897}
!10897 = !DILocation(line: 9508, column: 2, scope: !10890)
!10898 = !DILocation(line: 9505, column: 15, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 9505, column: 10)
!10900 = !DILocation(line: 9505, column: 31, scope: !10899)
!10901 = !DILocation(line: 9505, column: 23, scope: !10899)
!10902 = !DILocation(line: 9502, column: 39, scope: !10889)
!10903 = !DILocation(line: 9511, column: 19, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 9511, column: 9)
!10905 = !DILocation(line: 9514, column: 49, scope: !10904)
!10906 = !DILocation(line: 9511, column: 9, scope: !10843)
!10907 = !DILocation(line: 9515, column: 1, scope: !10843)
!10908 = distinct !DISubprogram(name: "f_strtrans", scope: !3, file: !3, line: 9521, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9522, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10909)
!10909 = !{!10910, !10911}
!10910 = !DILocalVariable(name: "argvars", arg: 1, scope: !10908, file: !3, line: 9521, type: !2305)
!10911 = !DILocalVariable(name: "rettv", arg: 2, scope: !10908, file: !3, line: 9521, type: !2305)
!10912 = !DILocation(line: 9521, column: 22, scope: !10908)
!10913 = !DILocation(line: 9521, column: 41, scope: !10908)
!10914 = !DILocation(line: 9523, column: 12, scope: !10908)
!10915 = !DILocation(line: 9523, column: 19, scope: !10908)
!10916 = !DILocation(line: 9524, column: 37, scope: !10908)
!10917 = !DILocation(line: 9524, column: 28, scope: !10908)
!10918 = !DILocation(line: 9524, column: 12, scope: !10908)
!10919 = !DILocation(line: 9524, column: 17, scope: !10908)
!10920 = !DILocation(line: 9524, column: 26, scope: !10908)
!10921 = !DILocation(line: 9525, column: 1, scope: !10908)
!10922 = distinct !DISubprogram(name: "f_strwidth", scope: !3, file: !3, line: 9320, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9321, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10923)
!10923 = !{!10924, !10925, !10926}
!10924 = !DILocalVariable(name: "argvars", arg: 1, scope: !10922, file: !3, line: 9320, type: !2305)
!10925 = !DILocalVariable(name: "rettv", arg: 2, scope: !10922, file: !3, line: 9320, type: !2305)
!10926 = !DILocalVariable(name: "s", scope: !10922, file: !3, line: 9322, type: !759)
!10927 = !DILocation(line: 9320, column: 22, scope: !10922)
!10928 = !DILocation(line: 9320, column: 41, scope: !10922)
!10929 = !DILocation(line: 9322, column: 17, scope: !10922)
!10930 = !DILocation(line: 9322, column: 13, scope: !10922)
!10931 = !DILocation(line: 9324, column: 42, scope: !10922)
!10932 = !DILocation(line: 9324, column: 28, scope: !10922)
!10933 = !DILocation(line: 9324, column: 17, scope: !10922)
!10934 = !DILocation(line: 9324, column: 26, scope: !10922)
!10935 = !DILocation(line: 9325, column: 1, scope: !10922)
!10936 = distinct !DISubprogram(name: "f_submatch", scope: !3, file: !3, line: 9531, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9532, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10937)
!10937 = !{!10938, !10939, !10940, !10941, !10942}
!10938 = !DILocalVariable(name: "argvars", arg: 1, scope: !10936, file: !3, line: 9531, type: !2305)
!10939 = !DILocalVariable(name: "rettv", arg: 2, scope: !10936, file: !3, line: 9531, type: !2305)
!10940 = !DILocalVariable(name: "error", scope: !10936, file: !3, line: 9533, type: !756)
!10941 = !DILocalVariable(name: "no", scope: !10936, file: !3, line: 9534, type: !756)
!10942 = !DILocalVariable(name: "retList", scope: !10936, file: !3, line: 9535, type: !756)
!10943 = !DILocation(line: 9531, column: 22, scope: !10936)
!10944 = !DILocation(line: 9531, column: 41, scope: !10936)
!10945 = !DILocation(line: 9533, column: 5, scope: !10936)
!10946 = !DILocation(line: 9533, column: 10, scope: !10936)
!10947 = !DILocation(line: 9535, column: 10, scope: !10936)
!10948 = !DILocation(line: 9537, column: 15, scope: !10936)
!10949 = !DILocation(line: 9537, column: 10, scope: !10936)
!10950 = !DILocation(line: 9534, column: 10, scope: !10936)
!10951 = !DILocation(line: 9538, column: 9, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 9538, column: 9)
!10953 = !DILocation(line: 9538, column: 9, scope: !10936)
!10954 = !DILocation(line: 9540, column: 16, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 9540, column: 9)
!10956 = !DILocation(line: 9542, column: 8, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 9541, column: 5)
!10958 = !DILocation(line: 9542, column: 2, scope: !10957)
!10959 = !DILocation(line: 9543, column: 2, scope: !10957)
!10960 = !DILocation(line: 9545, column: 9, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 9545, column: 9)
!10962 = !DILocation(line: 9545, column: 20, scope: !10961)
!10963 = !DILocation(line: 9545, column: 27, scope: !10961)
!10964 = !DILocation(line: 9545, column: 9, scope: !10936)
!10965 = !DILocation(line: 9550, column: 9, scope: !10936)
!10966 = !DILocation(line: 9546, column: 17, scope: !10961)
!10967 = !DILocation(line: 9547, column: 9, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 9547, column: 9)
!10969 = !DILocation(line: 9546, column: 2, scope: !10961)
!10970 = !DILocation(line: 9547, column: 9, scope: !10936)
!10971 = !DILocation(line: 9546, column: 12, scope: !10961)
!10972 = !DILocation(line: 9550, column: 17, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 9550, column: 9)
!10974 = !DILocation(line: 9552, column: 16, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 9551, column: 5)
!10976 = !DILocation(line: 9553, column: 25, scope: !10975)
!10977 = !DILocation(line: 9553, column: 9, scope: !10975)
!10978 = !DILocation(line: 9553, column: 14, scope: !10975)
!10979 = !DILocation(line: 9553, column: 23, scope: !10975)
!10980 = !DILocation(line: 9554, column: 5, scope: !10975)
!10981 = !DILocation(line: 9557, column: 16, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 9556, column: 5)
!10983 = !DILocation(line: 9558, column: 23, scope: !10982)
!10984 = !DILocation(line: 9558, column: 9, scope: !10982)
!10985 = !DILocation(line: 9558, column: 14, scope: !10982)
!10986 = !DILocation(line: 9558, column: 21, scope: !10982)
!10987 = !DILocation(line: 9560, column: 1, scope: !10936)
!10988 = distinct !DISubprogram(name: "f_substitute", scope: !3, file: !3, line: 9566, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9567, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10989)
!10989 = !{!10990, !10991, !10992, !10993, !10994, !10995, !10996, !10997, !10998, !10999}
!10990 = !DILocalVariable(name: "argvars", arg: 1, scope: !10988, file: !3, line: 9566, type: !2305)
!10991 = !DILocalVariable(name: "rettv", arg: 2, scope: !10988, file: !3, line: 9566, type: !2305)
!10992 = !DILocalVariable(name: "patbuf", scope: !10988, file: !3, line: 9568, type: !3499)
!10993 = !DILocalVariable(name: "subbuf", scope: !10988, file: !3, line: 9569, type: !3499)
!10994 = !DILocalVariable(name: "flagsbuf", scope: !10988, file: !3, line: 9570, type: !3499)
!10995 = !DILocalVariable(name: "str", scope: !10988, file: !3, line: 9572, type: !759)
!10996 = !DILocalVariable(name: "pat", scope: !10988, file: !3, line: 9573, type: !759)
!10997 = !DILocalVariable(name: "sub", scope: !10988, file: !3, line: 9574, type: !759)
!10998 = !DILocalVariable(name: "expr", scope: !10988, file: !3, line: 9575, type: !2305)
!10999 = !DILocalVariable(name: "flg", scope: !10988, file: !3, line: 9576, type: !759)
!11000 = !DILocation(line: 9566, column: 24, scope: !10988)
!11001 = !DILocation(line: 9566, column: 43, scope: !10988)
!11002 = !DILocation(line: 9568, column: 5, scope: !10988)
!11003 = !DILocation(line: 9568, column: 12, scope: !10988)
!11004 = !DILocation(line: 9569, column: 5, scope: !10988)
!11005 = !DILocation(line: 9569, column: 12, scope: !10988)
!11006 = !DILocation(line: 9570, column: 5, scope: !10988)
!11007 = !DILocation(line: 9570, column: 12, scope: !10988)
!11008 = !DILocation(line: 9572, column: 19, scope: !10988)
!11009 = !DILocation(line: 9572, column: 13, scope: !10988)
!11010 = !DILocation(line: 9573, column: 42, scope: !10988)
!11011 = !DILocation(line: 9573, column: 19, scope: !10988)
!11012 = !DILocation(line: 9573, column: 13, scope: !10988)
!11013 = !DILocation(line: 9574, column: 13, scope: !10988)
!11014 = !DILocation(line: 9575, column: 15, scope: !10988)
!11015 = !DILocation(line: 9576, column: 42, scope: !10988)
!11016 = !DILocation(line: 9576, column: 19, scope: !10988)
!11017 = !DILocation(line: 9576, column: 13, scope: !10988)
!11018 = !DILocation(line: 9578, column: 9, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 9578, column: 9)
!11020 = !DILocation(line: 9578, column: 20, scope: !11019)
!11021 = !DILocation(line: 9578, column: 39, scope: !11019)
!11022 = !DILocation(line: 9581, column: 8, scope: !11019)
!11023 = !DILocation(line: 9583, column: 12, scope: !10988)
!11024 = !DILocation(line: 9583, column: 19, scope: !10988)
!11025 = !DILocation(line: 9584, column: 13, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 9584, column: 9)
!11027 = !DILocation(line: 9584, column: 28, scope: !11026)
!11028 = !DILocation(line: 9584, column: 21, scope: !11026)
!11029 = !DILocation(line: 9584, column: 44, scope: !11026)
!11030 = !DILocation(line: 9584, column: 60, scope: !11026)
!11031 = !DILocation(line: 9584, column: 52, scope: !11026)
!11032 = !DILocation(line: 9585, column: 16, scope: !11026)
!11033 = !DILocation(line: 9588, column: 25, scope: !11026)
!11034 = !DILocation(line: 9589, column: 1, scope: !10988)
!11035 = distinct !DISubprogram(name: "f_swapinfo", scope: !3, file: !3, line: 9595, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9596, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11036)
!11036 = !{!11037, !11038}
!11037 = !DILocalVariable(name: "argvars", arg: 1, scope: !11035, file: !3, line: 9595, type: !2305)
!11038 = !DILocalVariable(name: "rettv", arg: 2, scope: !11035, file: !3, line: 9595, type: !2305)
!11039 = !DILocation(line: 9595, column: 22, scope: !11035)
!11040 = !DILocation(line: 9595, column: 41, scope: !11035)
!11041 = !DILocation(line: 9597, column: 9, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 9597, column: 9)
!11043 = !DILocation(line: 9597, column: 33, scope: !11042)
!11044 = !DILocation(line: 9597, column: 9, scope: !11035)
!11045 = !DILocation(line: 9598, column: 14, scope: !11042)
!11046 = !DILocation(line: 9598, column: 45, scope: !11042)
!11047 = !DILocation(line: 9598, column: 50, scope: !11042)
!11048 = !DILocation(line: 9598, column: 2, scope: !11042)
!11049 = !DILocation(line: 9599, column: 1, scope: !11035)
!11050 = distinct !DISubprogram(name: "f_swapname", scope: !3, file: !3, line: 9605, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9606, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11051)
!11051 = !{!11052, !11053, !11054}
!11052 = !DILocalVariable(name: "argvars", arg: 1, scope: !11050, file: !3, line: 9605, type: !2305)
!11053 = !DILocalVariable(name: "rettv", arg: 2, scope: !11050, file: !3, line: 9605, type: !2305)
!11054 = !DILocalVariable(name: "buf", scope: !11050, file: !3, line: 9607, type: !990)
!11055 = !DILocation(line: 9605, column: 22, scope: !11050)
!11056 = !DILocation(line: 9605, column: 41, scope: !11050)
!11057 = !DILocation(line: 9609, column: 12, scope: !11050)
!11058 = !DILocation(line: 9609, column: 19, scope: !11050)
!11059 = !DILocation(line: 9610, column: 11, scope: !11050)
!11060 = !DILocation(line: 9607, column: 12, scope: !11050)
!11061 = !DILocation(line: 9611, column: 13, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 9611, column: 9)
!11063 = !DILocation(line: 9611, column: 21, scope: !11062)
!11064 = !DILocation(line: 9611, column: 34, scope: !11062)
!11065 = !{!4831, !2693, i64 8}
!11066 = !DILocation(line: 9611, column: 41, scope: !11062)
!11067 = !DILocation(line: 9612, column: 6, scope: !11062)
!11068 = !DILocation(line: 9612, column: 27, scope: !11062)
!11069 = !{!11070, !2693, i64 0}
!11070 = !{!"memfile", !2693, i64 0, !2693, i64 8, !2690, i64 16, !2690, i64 20, !2690, i64 24, !2693, i64 32, !2693, i64 40, !2693, i64 48, !2690, i64 56, !2690, i64 60, !11071, i64 64, !11071, i64 608, !2925, i64 1152, !2925, i64 1160, !2925, i64 1168, !2925, i64 1176, !2690, i64 1184, !2690, i64 1188, !2693, i64 1192, !2691, i64 1200, !2693, i64 1208, !2690, i64 1216, !2691, i64 1220}
!11071 = !{!"mf_hashtab_S", !2925, i64 0, !2925, i64 8, !2693, i64 16, !2691, i64 24, !2691, i64 536}
!11072 = !DILocation(line: 9612, column: 36, scope: !11062)
!11073 = !DILocation(line: 9611, column: 9, scope: !11050)
!11074 = !DILocation(line: 9615, column: 25, scope: !11062)
!11075 = !DILocation(line: 9616, column: 1, scope: !11050)
!11076 = distinct !DISubprogram(name: "f_synID", scope: !3, file: !3, line: 9622, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9623, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11077)
!11077 = !{!11078, !11079, !11080, !11081, !11082, !11083, !11084}
!11078 = !DILocalVariable(name: "argvars", arg: 1, scope: !11076, file: !3, line: 9622, type: !2305)
!11079 = !DILocalVariable(name: "rettv", arg: 2, scope: !11076, file: !3, line: 9622, type: !2305)
!11080 = !DILocalVariable(name: "id", scope: !11076, file: !3, line: 9624, type: !756)
!11081 = !DILocalVariable(name: "lnum", scope: !11076, file: !3, line: 9626, type: !764)
!11082 = !DILocalVariable(name: "col", scope: !11076, file: !3, line: 9627, type: !766)
!11083 = !DILocalVariable(name: "trans", scope: !11076, file: !3, line: 9628, type: !756)
!11084 = !DILocalVariable(name: "transerr", scope: !11076, file: !3, line: 9629, type: !756)
!11085 = !DILocation(line: 9622, column: 19, scope: !11076)
!11086 = !DILocation(line: 9622, column: 45, scope: !11076)
!11087 = !DILocation(line: 9624, column: 10, scope: !11076)
!11088 = !DILocation(line: 9629, column: 5, scope: !11076)
!11089 = !DILocation(line: 9629, column: 10, scope: !11076)
!11090 = !DILocation(line: 9631, column: 12, scope: !11076)
!11091 = !DILocation(line: 9626, column: 14, scope: !11076)
!11092 = !DILocation(line: 9632, column: 36, scope: !11076)
!11093 = !DILocation(line: 9632, column: 21, scope: !11076)
!11094 = !DILocation(line: 9632, column: 11, scope: !11076)
!11095 = !DILocation(line: 9627, column: 13, scope: !11076)
!11096 = !DILocation(line: 9633, column: 35, scope: !11076)
!11097 = !DILocation(line: 9633, column: 18, scope: !11076)
!11098 = !DILocation(line: 9633, column: 13, scope: !11076)
!11099 = !DILocation(line: 9628, column: 10, scope: !11076)
!11100 = !DILocation(line: 9635, column: 10, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 9635, column: 9)
!11102 = !DILocation(line: 9635, column: 27, scope: !11101)
!11103 = !DILocation(line: 9635, column: 19, scope: !11101)
!11104 = !DILocation(line: 9635, column: 43, scope: !11101)
!11105 = !DILocation(line: 9635, column: 56, scope: !11101)
!11106 = !DILocation(line: 9635, column: 40, scope: !11101)
!11107 = !DILocation(line: 9636, column: 13, scope: !11101)
!11108 = !DILocation(line: 9636, column: 6, scope: !11101)
!11109 = !DILocation(line: 9636, column: 21, scope: !11101)
!11110 = !DILocation(line: 9636, column: 33, scope: !11101)
!11111 = !DILocation(line: 9636, column: 25, scope: !11101)
!11112 = !DILocation(line: 9635, column: 9, scope: !11076)
!11113 = !DILocation(line: 9637, column: 18, scope: !11101)
!11114 = !DILocation(line: 9637, column: 7, scope: !11101)
!11115 = !DILocation(line: 9637, column: 2, scope: !11101)
!11116 = !DILocation(line: 9640, column: 17, scope: !11076)
!11117 = !DILocation(line: 9640, column: 26, scope: !11076)
!11118 = !DILocation(line: 9641, column: 1, scope: !11076)
!11119 = distinct !DISubprogram(name: "f_synIDattr", scope: !3, file: !3, line: 9647, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9648, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11120)
!11120 = !{!11121, !11122, !11123, !11124, !11125, !11126, !11127, !11128}
!11121 = !DILocalVariable(name: "argvars", arg: 1, scope: !11119, file: !3, line: 9647, type: !2305)
!11122 = !DILocalVariable(name: "rettv", arg: 2, scope: !11119, file: !3, line: 9647, type: !2305)
!11123 = !DILocalVariable(name: "p", scope: !11119, file: !3, line: 9649, type: !759)
!11124 = !DILocalVariable(name: "id", scope: !11119, file: !3, line: 9651, type: !756)
!11125 = !DILocalVariable(name: "what", scope: !11119, file: !3, line: 9652, type: !759)
!11126 = !DILocalVariable(name: "mode", scope: !11119, file: !3, line: 9653, type: !759)
!11127 = !DILocalVariable(name: "modebuf", scope: !11119, file: !3, line: 9654, type: !3499)
!11128 = !DILocalVariable(name: "modec", scope: !11119, file: !3, line: 9655, type: !756)
!11129 = !DILocation(line: 9647, column: 23, scope: !11119)
!11130 = !DILocation(line: 9647, column: 49, scope: !11119)
!11131 = !DILocation(line: 9649, column: 13, scope: !11119)
!11132 = !DILocation(line: 9654, column: 5, scope: !11119)
!11133 = !DILocation(line: 9654, column: 12, scope: !11119)
!11134 = !DILocation(line: 9657, column: 15, scope: !11119)
!11135 = !DILocation(line: 9657, column: 10, scope: !11119)
!11136 = !DILocation(line: 9651, column: 10, scope: !11119)
!11137 = !DILocation(line: 9658, column: 27, scope: !11119)
!11138 = !DILocation(line: 9658, column: 12, scope: !11119)
!11139 = !DILocation(line: 9652, column: 13, scope: !11119)
!11140 = !DILocation(line: 9659, column: 9, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 9659, column: 9)
!11142 = !DILocation(line: 9659, column: 20, scope: !11141)
!11143 = !DILocation(line: 9659, column: 27, scope: !11141)
!11144 = !DILocation(line: 9659, column: 9, scope: !11119)
!11145 = !DILocation(line: 9661, column: 9, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11141, file: !3, line: 9660, column: 5)
!11147 = !DILocation(line: 9653, column: 13, scope: !11119)
!11148 = !DILocation(line: 9662, column: 10, scope: !11146)
!11149 = !DILocation(line: 9655, column: 10, scope: !11119)
!11150 = !DILocation(line: 9663, column: 19, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11146, file: !3, line: 9663, column: 6)
!11152 = !DILocation(line: 9664, column: 6, scope: !11151)
!11153 = !DILocation(line: 9669, column: 6, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 9669, column: 6)
!11155 = distinct !DILexicalBlock(scope: !11141, file: !3, line: 9667, column: 5)
!11156 = !DILocation(line: 9673, column: 10, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 9673, column: 10)
!11158 = !DILocation(line: 9673, column: 19, scope: !11157)
!11159 = !DILocation(line: 9674, column: 6, scope: !11157)
!11160 = !DILocation(line: 9679, column: 13, scope: !11119)
!11161 = !DILocation(line: 9679, column: 5, scope: !11119)
!11162 = !DILocation(line: 9682, column: 7, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 9682, column: 7)
!11164 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 9680, column: 5)
!11165 = !DILocation(line: 9682, column: 28, scope: !11163)
!11166 = !DILocation(line: 9682, column: 7, scope: !11164)
!11167 = !DILocation(line: 9683, column: 11, scope: !11163)
!11168 = !DILocation(line: 9683, column: 7, scope: !11163)
!11169 = !DILocation(line: 9685, column: 11, scope: !11163)
!11170 = !DILocation(line: 9689, column: 7, scope: !11164)
!11171 = !DILocation(line: 9690, column: 3, scope: !11164)
!11172 = !DILocation(line: 9693, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 9693, column: 7)
!11174 = !DILocation(line: 9693, column: 28, scope: !11173)
!11175 = !DILocation(line: 9693, column: 7, scope: !11164)
!11176 = !DILocation(line: 9694, column: 11, scope: !11173)
!11177 = !DILocation(line: 9694, column: 7, scope: !11173)
!11178 = !DILocation(line: 9696, column: 11, scope: !11173)
!11179 = !DILocation(line: 9700, column: 39, scope: !11164)
!11180 = !DILocation(line: 9700, column: 7, scope: !11164)
!11181 = !DILocation(line: 9701, column: 3, scope: !11164)
!11182 = !DILocation(line: 9704, column: 7, scope: !11164)
!11183 = !DILocation(line: 9705, column: 3, scope: !11164)
!11184 = !DILocation(line: 9708, column: 7, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 9708, column: 7)
!11186 = !DILocation(line: 9708, column: 7, scope: !11164)
!11187 = !DILocation(line: 9709, column: 11, scope: !11185)
!11188 = !DILocation(line: 9709, column: 7, scope: !11185)
!11189 = !DILocation(line: 9712, column: 4, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 9711, column: 12)
!11191 = !DILocation(line: 9712, column: 25, scope: !11190)
!11192 = !DILocation(line: 9711, column: 12, scope: !11185)
!11193 = !DILocation(line: 9713, column: 11, scope: !11190)
!11194 = !DILocation(line: 9713, column: 7, scope: !11190)
!11195 = !DILocation(line: 9715, column: 11, scope: !11190)
!11196 = !DILocation(line: 9719, column: 7, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 9719, column: 7)
!11198 = !DILocation(line: 9719, column: 28, scope: !11197)
!11199 = !DILocation(line: 9719, column: 7, scope: !11164)
!11200 = !DILocation(line: 9720, column: 11, scope: !11197)
!11201 = !DILocation(line: 9720, column: 7, scope: !11197)
!11202 = !DILocation(line: 9721, column: 12, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11197, file: !3, line: 9721, column: 12)
!11204 = !DILocation(line: 9721, column: 25, scope: !11203)
!11205 = !DILocation(line: 9721, column: 30, scope: !11203)
!11206 = !DILocation(line: 9721, column: 33, scope: !11203)
!11207 = !DILocation(line: 9721, column: 54, scope: !11203)
!11208 = !DILocation(line: 9721, column: 12, scope: !11197)
!11209 = !DILocation(line: 9723, column: 11, scope: !11203)
!11210 = !DILocation(line: 9723, column: 7, scope: !11203)
!11211 = !DILocation(line: 9726, column: 11, scope: !11203)
!11212 = !DILocation(line: 9730, column: 11, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 9730, column: 9)
!11214 = !DILocation(line: 9730, column: 9, scope: !11119)
!11215 = !DILocation(line: 9731, column: 6, scope: !11213)
!11216 = !DILocation(line: 9731, column: 2, scope: !11213)
!11217 = !DILocation(line: 9733, column: 12, scope: !11119)
!11218 = !DILocation(line: 9733, column: 19, scope: !11119)
!11219 = !DILocation(line: 9734, column: 12, scope: !11119)
!11220 = !DILocation(line: 9734, column: 17, scope: !11119)
!11221 = !DILocation(line: 9734, column: 26, scope: !11119)
!11222 = !DILocation(line: 9735, column: 1, scope: !11119)
!11223 = distinct !DISubprogram(name: "f_synIDtrans", scope: !3, file: !3, line: 9741, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9742, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11224)
!11224 = !{!11225, !11226, !11227}
!11225 = !DILocalVariable(name: "argvars", arg: 1, scope: !11223, file: !3, line: 9741, type: !2305)
!11226 = !DILocalVariable(name: "rettv", arg: 2, scope: !11223, file: !3, line: 9741, type: !2305)
!11227 = !DILocalVariable(name: "id", scope: !11223, file: !3, line: 9743, type: !756)
!11228 = !DILocation(line: 9741, column: 24, scope: !11223)
!11229 = !DILocation(line: 9741, column: 50, scope: !11223)
!11230 = !DILocation(line: 9746, column: 15, scope: !11223)
!11231 = !DILocation(line: 9746, column: 10, scope: !11223)
!11232 = !DILocation(line: 9743, column: 10, scope: !11223)
!11233 = !DILocation(line: 9748, column: 12, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 9748, column: 9)
!11235 = !DILocation(line: 9748, column: 9, scope: !11223)
!11236 = !DILocation(line: 9749, column: 7, scope: !11234)
!11237 = !DILocation(line: 9749, column: 2, scope: !11234)
!11238 = !DILocation(line: 9754, column: 17, scope: !11223)
!11239 = !DILocation(line: 9754, column: 26, scope: !11223)
!11240 = !DILocation(line: 9755, column: 1, scope: !11223)
!11241 = distinct !DISubprogram(name: "f_synconcealed", scope: !3, file: !3, line: 9761, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9762, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11242)
!11242 = !{!11243, !11244, !11245, !11246, !11247, !11248, !11249, !11250}
!11243 = !DILocalVariable(name: "argvars", arg: 1, scope: !11241, file: !3, line: 9761, type: !2305)
!11244 = !DILocalVariable(name: "rettv", arg: 2, scope: !11241, file: !3, line: 9761, type: !2305)
!11245 = !DILocalVariable(name: "lnum", scope: !11241, file: !3, line: 9764, type: !764)
!11246 = !DILocalVariable(name: "col", scope: !11241, file: !3, line: 9765, type: !766)
!11247 = !DILocalVariable(name: "syntax_flags", scope: !11241, file: !3, line: 9766, type: !756)
!11248 = !DILocalVariable(name: "cchar", scope: !11241, file: !3, line: 9767, type: !756)
!11249 = !DILocalVariable(name: "matchid", scope: !11241, file: !3, line: 9768, type: !756)
!11250 = !DILocalVariable(name: "str", scope: !11241, file: !3, line: 9769, type: !3499)
!11251 = !DILocation(line: 9761, column: 26, scope: !11241)
!11252 = !DILocation(line: 9761, column: 52, scope: !11241)
!11253 = !DILocation(line: 9766, column: 10, scope: !11241)
!11254 = !DILocation(line: 9768, column: 5, scope: !11241)
!11255 = !DILocation(line: 9768, column: 10, scope: !11241)
!11256 = !DILocation(line: 9769, column: 5, scope: !11241)
!11257 = !DILocation(line: 9769, column: 12, scope: !11241)
!11258 = !DILocation(line: 9772, column: 5, scope: !11241)
!11259 = !DILocation(line: 9775, column: 12, scope: !11241)
!11260 = !DILocation(line: 9764, column: 14, scope: !11241)
!11261 = !DILocation(line: 9776, column: 35, scope: !11241)
!11262 = !DILocation(line: 9776, column: 20, scope: !11241)
!11263 = !DILocation(line: 9776, column: 11, scope: !11241)
!11264 = !DILocation(line: 9776, column: 47, scope: !11241)
!11265 = !DILocation(line: 9765, column: 13, scope: !11241)
!11266 = !DILocation(line: 9778, column: 5, scope: !11241)
!11267 = !DILocation(line: 9780, column: 9, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 9780, column: 9)
!11269 = !DILocation(line: 9780, column: 33, scope: !11268)
!11270 = !DILocation(line: 9780, column: 9, scope: !11241)
!11271 = !DILocation(line: 9782, column: 11, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 9782, column: 6)
!11273 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 9781, column: 5)
!11274 = !DILocation(line: 9782, column: 16, scope: !11272)
!11275 = !DILocation(line: 9782, column: 27, scope: !11272)
!11276 = !DILocation(line: 9782, column: 40, scope: !11272)
!11277 = !DILocation(line: 9782, column: 24, scope: !11272)
!11278 = !DILocation(line: 9783, column: 13, scope: !11272)
!11279 = !DILocation(line: 9783, column: 6, scope: !11272)
!11280 = !DILocation(line: 9783, column: 21, scope: !11272)
!11281 = !DILocation(line: 9783, column: 34, scope: !11272)
!11282 = !DILocation(line: 9783, column: 25, scope: !11272)
!11283 = !DILocation(line: 9784, column: 6, scope: !11272)
!11284 = !DILocation(line: 9784, column: 9, scope: !11272)
!11285 = !DILocation(line: 9784, column: 17, scope: !11272)
!11286 = !{!4151, !2925, i64 1184}
!11287 = !DILocation(line: 9784, column: 26, scope: !11272)
!11288 = !DILocation(line: 9782, column: 6, scope: !11273)
!11289 = !DILocation(line: 9786, column: 12, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 9785, column: 2)
!11291 = !DILocation(line: 9787, column: 21, scope: !11290)
!11292 = !DILocation(line: 9790, column: 24, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 9790, column: 10)
!11294 = !DILocation(line: 9790, column: 38, scope: !11293)
!11295 = !DILocation(line: 9790, column: 41, scope: !11293)
!11296 = !DILocation(line: 9790, column: 49, scope: !11293)
!11297 = !DILocation(line: 9790, column: 58, scope: !11293)
!11298 = !DILocation(line: 9790, column: 10, scope: !11290)
!11299 = !DILocation(line: 9792, column: 11, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 9791, column: 6)
!11301 = !DILocation(line: 9767, column: 10, scope: !11241)
!11302 = !DILocation(line: 9793, column: 13, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 9793, column: 7)
!11304 = !DILocation(line: 9793, column: 20, scope: !11303)
!11305 = !DILocation(line: 9793, column: 23, scope: !11303)
!11306 = !DILocation(line: 9793, column: 31, scope: !11303)
!11307 = !DILocation(line: 9793, column: 40, scope: !11303)
!11308 = !DILocation(line: 9793, column: 7, scope: !11300)
!11309 = !DILocation(line: 9794, column: 36, scope: !11303)
!11310 = !{!4151, !2690, i64 168}
!11311 = !DILocation(line: 9794, column: 44, scope: !11303)
!11312 = !DILocation(line: 9798, column: 11, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 9798, column: 11)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 9797, column: 3)
!11315 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 9796, column: 7)
!11316 = !DILocation(line: 9798, column: 11, scope: !11314)
!11317 = !DILocation(line: 9799, column: 6, scope: !11313)
!11318 = !DILocation(line: 9799, column: 4, scope: !11313)
!11319 = !DILocation(line: 9801, column: 13, scope: !11313)
!11320 = !DILocation(line: 9801, column: 11, scope: !11313)
!11321 = !DILocation(line: 9806, column: 28, scope: !11273)
!11322 = !DILocation(line: 9806, column: 33, scope: !11273)
!11323 = !DILocation(line: 9807, column: 38, scope: !11273)
!11324 = !DILocation(line: 9807, column: 10, scope: !11273)
!11325 = !DILocation(line: 9806, column: 2, scope: !11273)
!11326 = !DILocation(line: 9809, column: 33, scope: !11273)
!11327 = !DILocation(line: 9809, column: 2, scope: !11273)
!11328 = !DILocation(line: 9810, column: 33, scope: !11273)
!11329 = !DILocation(line: 9810, column: 41, scope: !11273)
!11330 = !DILocation(line: 9810, column: 2, scope: !11273)
!11331 = !DILocation(line: 9811, column: 5, scope: !11273)
!11332 = !DILocation(line: 9813, column: 1, scope: !11241)
!11333 = distinct !DISubprogram(name: "f_synstack", scope: !3, file: !3, line: 9819, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9820, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11334)
!11334 = !{!11335, !11336, !11337, !11338, !11339, !11340}
!11335 = !DILocalVariable(name: "argvars", arg: 1, scope: !11333, file: !3, line: 9819, type: !2305)
!11336 = !DILocalVariable(name: "rettv", arg: 2, scope: !11333, file: !3, line: 9819, type: !2305)
!11337 = !DILocalVariable(name: "lnum", scope: !11333, file: !3, line: 9822, type: !764)
!11338 = !DILocalVariable(name: "col", scope: !11333, file: !3, line: 9823, type: !766)
!11339 = !DILocalVariable(name: "i", scope: !11333, file: !3, line: 9824, type: !756)
!11340 = !DILocalVariable(name: "id", scope: !11333, file: !3, line: 9825, type: !756)
!11341 = !DILocation(line: 9819, column: 22, scope: !11333)
!11342 = !DILocation(line: 9819, column: 48, scope: !11333)
!11343 = !DILocation(line: 9828, column: 5, scope: !11333)
!11344 = !DILocation(line: 9831, column: 12, scope: !11333)
!11345 = !DILocation(line: 9822, column: 14, scope: !11333)
!11346 = !DILocation(line: 9832, column: 35, scope: !11333)
!11347 = !DILocation(line: 9832, column: 20, scope: !11333)
!11348 = !DILocation(line: 9832, column: 11, scope: !11333)
!11349 = !DILocation(line: 9832, column: 47, scope: !11333)
!11350 = !DILocation(line: 9823, column: 13, scope: !11333)
!11351 = !DILocation(line: 9834, column: 14, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 9834, column: 9)
!11353 = !DILocation(line: 9834, column: 19, scope: !11352)
!11354 = !DILocation(line: 9834, column: 30, scope: !11352)
!11355 = !DILocation(line: 9834, column: 43, scope: !11352)
!11356 = !DILocation(line: 9834, column: 27, scope: !11352)
!11357 = !DILocation(line: 9835, column: 13, scope: !11352)
!11358 = !DILocation(line: 9835, column: 6, scope: !11352)
!11359 = !DILocation(line: 9835, column: 21, scope: !11352)
!11360 = !DILocation(line: 9835, column: 34, scope: !11352)
!11361 = !DILocation(line: 9835, column: 25, scope: !11352)
!11362 = !DILocation(line: 9836, column: 6, scope: !11352)
!11363 = !DILocation(line: 9836, column: 9, scope: !11352)
!11364 = !DILocation(line: 9836, column: 33, scope: !11352)
!11365 = !DILocation(line: 9834, column: 9, scope: !11333)
!11366 = !DILocation(line: 9838, column: 19, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 9837, column: 5)
!11368 = !DILocation(line: 9838, column: 8, scope: !11367)
!11369 = !DILocation(line: 9824, column: 10, scope: !11333)
!11370 = !DILocation(line: 9844, column: 36, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 9844, column: 10)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 9840, column: 2)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 9839, column: 2)
!11374 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 9839, column: 2)
!11375 = !DILocation(line: 9844, column: 41, scope: !11371)
!11376 = !DILocation(line: 9841, column: 11, scope: !11372)
!11377 = !DILocation(line: 9825, column: 10, scope: !11333)
!11378 = !DILocation(line: 9842, column: 13, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 9842, column: 10)
!11380 = !DILocation(line: 9842, column: 10, scope: !11372)
!11381 = distinct !{!11381, !11382, !11383}
!11382 = !DILocation(line: 9839, column: 2, scope: !11374)
!11383 = !DILocation(line: 9846, column: 2, scope: !11374)
!11384 = !DILocation(line: 9844, column: 49, scope: !11371)
!11385 = !DILocation(line: 9844, column: 10, scope: !11371)
!11386 = !DILocation(line: 9844, column: 53, scope: !11371)
!11387 = !DILocation(line: 9839, column: 16, scope: !11373)
!11388 = !DILocation(line: 9844, column: 10, scope: !11372)
!11389 = !DILocation(line: 9849, column: 1, scope: !11333)
!11390 = distinct !DISubprogram(name: "f_tabpagebuflist", scope: !3, file: !3, line: 9855, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9856, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11391)
!11391 = !{!11392, !11393, !11394, !11395}
!11392 = !DILocalVariable(name: "argvars", arg: 1, scope: !11390, file: !3, line: 9855, type: !2305)
!11393 = !DILocalVariable(name: "rettv", arg: 2, scope: !11390, file: !3, line: 9855, type: !2305)
!11394 = !DILocalVariable(name: "tp", scope: !11390, file: !3, line: 9857, type: !7001)
!11395 = !DILocalVariable(name: "wp", scope: !11390, file: !3, line: 9858, type: !1135)
!11396 = !DILocation(line: 9855, column: 28, scope: !11390)
!11397 = !DILocation(line: 9855, column: 54, scope: !11390)
!11398 = !DILocation(line: 9858, column: 12, scope: !11390)
!11399 = !DILocation(line: 9860, column: 20, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 9860, column: 9)
!11401 = !DILocation(line: 9860, column: 27, scope: !11400)
!11402 = !DILocation(line: 9860, column: 9, scope: !11390)
!11403 = !DILocation(line: 9864, column: 25, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 9863, column: 5)
!11405 = !DILocation(line: 9864, column: 20, scope: !11404)
!11406 = !DILocation(line: 9864, column: 7, scope: !11404)
!11407 = !DILocation(line: 9857, column: 16, scope: !11390)
!11408 = !DILocation(line: 9865, column: 9, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11404, file: !3, line: 9865, column: 6)
!11410 = !DILocation(line: 9865, column: 6, scope: !11404)
!11411 = !DILocation(line: 9866, column: 18, scope: !11409)
!11412 = !DILocation(line: 9866, column: 15, scope: !11409)
!11413 = !DILocation(line: 9866, column: 43, scope: !11409)
!11414 = !DILocation(line: 9866, column: 11, scope: !11409)
!11415 = !DILocation(line: 9866, column: 6, scope: !11409)
!11416 = !DILocation(line: 9868, column: 12, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 9868, column: 9)
!11418 = !DILocation(line: 9868, column: 20, scope: !11417)
!11419 = !DILocation(line: 9868, column: 23, scope: !11417)
!11420 = !DILocation(line: 9868, column: 47, scope: !11417)
!11421 = !DILocation(line: 9868, column: 9, scope: !11390)
!11422 = !DILocation(line: 9871, column: 36, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 9871, column: 10)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 9870, column: 2)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 9870, column: 2)
!11426 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 9869, column: 5)
!11427 = !DILocation(line: 9871, column: 41, scope: !11423)
!11428 = !DILocation(line: 9870, column: 2, scope: !11425)
!11429 = !DILocation(line: 9872, column: 11, scope: !11423)
!11430 = !DILocation(line: 9872, column: 21, scope: !11423)
!11431 = !DILocation(line: 9872, column: 7, scope: !11423)
!11432 = !DILocation(line: 9871, column: 10, scope: !11423)
!11433 = !DILocation(line: 9872, column: 29, scope: !11423)
!11434 = !DILocation(line: 9871, column: 10, scope: !11424)
!11435 = !DILocation(line: 9870, column: 30, scope: !11424)
!11436 = !{!4151, !2693, i64 24}
!11437 = !DILocation(line: 9870, column: 12, scope: !11424)
!11438 = distinct !{!11438, !11428, !11439}
!11439 = !DILocation(line: 9873, column: 3, scope: !11425)
!11440 = !DILocation(line: 9875, column: 1, scope: !11390)
!11441 = distinct !DISubprogram(name: "f_tagfiles", scope: !3, file: !3, line: 9881, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9882, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11442)
!11442 = !{!11443, !11444, !11445, !11446, !11455}
!11443 = !DILocalVariable(name: "argvars", arg: 1, scope: !11441, file: !3, line: 9881, type: !2305)
!11444 = !DILocalVariable(name: "rettv", arg: 2, scope: !11441, file: !3, line: 9881, type: !2305)
!11445 = !DILocalVariable(name: "fname", scope: !11441, file: !3, line: 9883, type: !759)
!11446 = !DILocalVariable(name: "tn", scope: !11441, file: !3, line: 9884, type: !11447)
!11447 = !DIDerivedType(tag: DW_TAG_typedef, name: "tagname_T", file: !6, line: 4052, baseType: !11448)
!11448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 4045, size: 256, elements: !11449)
!11449 = !{!11450, !11451, !11452, !11453, !11454}
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "tn_tags", scope: !11448, file: !6, line: 4047, baseType: !759, size: 64)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "tn_np", scope: !11448, file: !6, line: 4048, baseType: !759, size: 64, offset: 64)
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "tn_did_filefind_init", scope: !11448, file: !6, line: 4049, baseType: !756, size: 32, offset: 128)
!11453 = !DIDerivedType(tag: DW_TAG_member, name: "tn_hf_idx", scope: !11448, file: !6, line: 4050, baseType: !756, size: 32, offset: 160)
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "tn_search_ctx", scope: !11448, file: !6, line: 4051, baseType: !750, size: 64, offset: 192)
!11455 = !DILocalVariable(name: "first", scope: !11441, file: !3, line: 9885, type: !756)
!11456 = !DILocation(line: 9881, column: 22, scope: !11441)
!11457 = !DILocation(line: 9881, column: 48, scope: !11441)
!11458 = !DILocation(line: 9884, column: 5, scope: !11441)
!11459 = !DILocation(line: 9887, column: 9, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 9887, column: 9)
!11461 = !DILocation(line: 9887, column: 33, scope: !11460)
!11462 = !DILocation(line: 9887, column: 9, scope: !11441)
!11463 = !DILocation(line: 9889, column: 13, scope: !11441)
!11464 = !DILocation(line: 9883, column: 13, scope: !11441)
!11465 = !DILocation(line: 9890, column: 15, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 9890, column: 9)
!11467 = !DILocation(line: 9890, column: 9, scope: !11441)
!11468 = !DILocation(line: 9885, column: 10, scope: !11441)
!11469 = !DILocation(line: 9895, column: 32, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 9894, column: 6)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 9893, column: 5)
!11472 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 9893, column: 5)
!11473 = !DILocation(line: 9895, column: 37, scope: !11470)
!11474 = !DILocation(line: 9884, column: 15, scope: !11441)
!11475 = !DILocation(line: 9894, column: 6, scope: !11470)
!11476 = !DILocation(line: 9894, column: 38, scope: !11470)
!11477 = !DILocation(line: 9895, column: 3, scope: !11470)
!11478 = distinct !{!11478, !11479, !11480}
!11479 = !DILocation(line: 9893, column: 5, scope: !11472)
!11480 = !DILocation(line: 9896, column: 6, scope: !11472)
!11481 = !DILocation(line: 9895, column: 6, scope: !11470)
!11482 = !DILocation(line: 9895, column: 56, scope: !11470)
!11483 = !DILocation(line: 9894, column: 6, scope: !11471)
!11484 = !DILocation(line: 9897, column: 5, scope: !11441)
!11485 = !DILocation(line: 9898, column: 5, scope: !11441)
!11486 = !DILocation(line: 9899, column: 1, scope: !11441)
!11487 = distinct !DISubprogram(name: "f_taglist", scope: !3, file: !3, line: 9905, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9906, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11488)
!11488 = !{!11489, !11490, !11491, !11492}
!11489 = !DILocalVariable(name: "argvars", arg: 1, scope: !11487, file: !3, line: 9905, type: !2305)
!11490 = !DILocalVariable(name: "rettv", arg: 2, scope: !11487, file: !3, line: 9905, type: !2305)
!11491 = !DILocalVariable(name: "fname", scope: !11487, file: !3, line: 9907, type: !759)
!11492 = !DILocalVariable(name: "tag_pattern", scope: !11487, file: !3, line: 9908, type: !759)
!11493 = !DILocation(line: 9905, column: 21, scope: !11487)
!11494 = !DILocation(line: 9905, column: 40, scope: !11487)
!11495 = !DILocation(line: 9907, column: 14, scope: !11487)
!11496 = !DILocation(line: 9910, column: 19, scope: !11487)
!11497 = !DILocation(line: 9908, column: 14, scope: !11487)
!11498 = !DILocation(line: 9912, column: 12, scope: !11487)
!11499 = !DILocation(line: 9912, column: 17, scope: !11487)
!11500 = !DILocation(line: 9912, column: 26, scope: !11487)
!11501 = !DILocation(line: 9913, column: 9, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 9913, column: 9)
!11503 = !DILocation(line: 9913, column: 22, scope: !11502)
!11504 = !DILocation(line: 9913, column: 9, scope: !11487)
!11505 = !DILocation(line: 9916, column: 9, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 9916, column: 9)
!11507 = !DILocation(line: 9916, column: 20, scope: !11506)
!11508 = !DILocation(line: 9916, column: 27, scope: !11506)
!11509 = !DILocation(line: 9916, column: 9, scope: !11487)
!11510 = !DILocation(line: 9917, column: 10, scope: !11506)
!11511 = !DILocation(line: 9917, column: 2, scope: !11506)
!11512 = !DILocation(line: 9918, column: 9, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 9918, column: 9)
!11514 = !DILocation(line: 9918, column: 33, scope: !11513)
!11515 = !DILocation(line: 9918, column: 9, scope: !11487)
!11516 = !DILocation(line: 9919, column: 29, scope: !11513)
!11517 = !DILocation(line: 9919, column: 8, scope: !11513)
!11518 = !DILocation(line: 9919, column: 2, scope: !11513)
!11519 = !DILocation(line: 9920, column: 1, scope: !11487)
!11520 = distinct !DISubprogram(name: "f_tan", scope: !3, file: !3, line: 9927, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9928, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11521)
!11521 = !{!11522, !11523, !11524}
!11522 = !DILocalVariable(name: "argvars", arg: 1, scope: !11520, file: !3, line: 9927, type: !2305)
!11523 = !DILocalVariable(name: "rettv", arg: 2, scope: !11520, file: !3, line: 9927, type: !2305)
!11524 = !DILocalVariable(name: "f", scope: !11520, file: !3, line: 9929, type: !762)
!11525 = !DILocation(line: 9927, column: 17, scope: !11520)
!11526 = !DILocation(line: 9927, column: 36, scope: !11520)
!11527 = !DILocation(line: 9929, column: 13, scope: !11520)
!11528 = !DILocation(line: 9931, column: 12, scope: !11520)
!11529 = !DILocation(line: 9931, column: 19, scope: !11520)
!11530 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !11531)
!11531 = distinct !DILocation(line: 9932, column: 9, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 9932, column: 9)
!11533 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !11531)
!11534 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !11531)
!11535 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !11531)
!11536 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !11531)
!11537 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !11531)
!11538 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !11531)
!11539 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !11531)
!11540 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !11531)
!11541 = !DILocation(line: 9933, column: 24, scope: !11532)
!11542 = !DILocation(line: 9933, column: 2, scope: !11532)
!11543 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !11531)
!11544 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !11531)
!11545 = !DILocation(line: 9936, column: 1, scope: !11520)
!11546 = distinct !DISubprogram(name: "f_tanh", scope: !3, file: !3, line: 9942, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9943, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11547)
!11547 = !{!11548, !11549, !11550}
!11548 = !DILocalVariable(name: "argvars", arg: 1, scope: !11546, file: !3, line: 9942, type: !2305)
!11549 = !DILocalVariable(name: "rettv", arg: 2, scope: !11546, file: !3, line: 9942, type: !2305)
!11550 = !DILocalVariable(name: "f", scope: !11546, file: !3, line: 9944, type: !762)
!11551 = !DILocation(line: 9942, column: 18, scope: !11546)
!11552 = !DILocation(line: 9942, column: 37, scope: !11546)
!11553 = !DILocation(line: 9944, column: 13, scope: !11546)
!11554 = !DILocation(line: 9946, column: 12, scope: !11546)
!11555 = !DILocation(line: 9946, column: 19, scope: !11546)
!11556 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !11557)
!11557 = distinct !DILocation(line: 9947, column: 9, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 9947, column: 9)
!11559 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !11557)
!11560 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !11557)
!11561 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !11557)
!11562 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !11557)
!11563 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !11557)
!11564 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !11557)
!11565 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !11557)
!11566 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !11557)
!11567 = !DILocation(line: 9948, column: 24, scope: !11558)
!11568 = !DILocation(line: 9948, column: 2, scope: !11558)
!11569 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !11557)
!11570 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !11557)
!11571 = !DILocation(line: 9951, column: 1, scope: !11546)
!11572 = distinct !DISubprogram(name: "f_test_srand_seed", scope: !3, file: !3, line: 7145, type: !2538, isLocal: true, isDefinition: true, scopeLine: 7146, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11573)
!11573 = !{!11574, !11575}
!11574 = !DILocalVariable(name: "argvars", arg: 1, scope: !11572, file: !3, line: 7145, type: !2305)
!11575 = !DILocalVariable(name: "rettv", arg: 2, scope: !11572, file: !3, line: 7145, type: !2305)
!11576 = !DILocation(line: 7145, column: 29, scope: !11572)
!11577 = !DILocation(line: 7145, column: 48, scope: !11572)
!11578 = !DILocation(line: 7147, column: 20, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 7147, column: 9)
!11580 = !DILocation(line: 7147, column: 27, scope: !11579)
!11581 = !DILocation(line: 7147, column: 9, scope: !11572)
!11582 = !DILocation(line: 7151, column: 37, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 7150, column: 5)
!11584 = !DILocation(line: 7151, column: 27, scope: !11583)
!11585 = !DILocation(line: 7151, column: 25, scope: !11583)
!11586 = !DILocation(line: 7154, column: 1, scope: !11572)
!11587 = distinct !DISubprogram(name: "f_tolower", scope: !3, file: !3, line: 9958, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9959, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11588)
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "argvars", arg: 1, scope: !11587, file: !3, line: 9958, type: !2305)
!11590 = !DILocalVariable(name: "rettv", arg: 2, scope: !11587, file: !3, line: 9958, type: !2305)
!11591 = !DILocation(line: 9958, column: 21, scope: !11587)
!11592 = !DILocation(line: 9958, column: 40, scope: !11587)
!11593 = !DILocation(line: 9960, column: 12, scope: !11587)
!11594 = !DILocation(line: 9960, column: 19, scope: !11587)
!11595 = !DILocation(line: 9961, column: 40, scope: !11587)
!11596 = !DILocation(line: 9961, column: 28, scope: !11587)
!11597 = !DILocation(line: 9961, column: 12, scope: !11587)
!11598 = !DILocation(line: 9961, column: 17, scope: !11587)
!11599 = !DILocation(line: 9961, column: 26, scope: !11587)
!11600 = !DILocation(line: 9962, column: 1, scope: !11587)
!11601 = distinct !DISubprogram(name: "f_toupper", scope: !3, file: !3, line: 9968, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9969, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11602)
!11602 = !{!11603, !11604}
!11603 = !DILocalVariable(name: "argvars", arg: 1, scope: !11601, file: !3, line: 9968, type: !2305)
!11604 = !DILocalVariable(name: "rettv", arg: 2, scope: !11601, file: !3, line: 9968, type: !2305)
!11605 = !DILocation(line: 9968, column: 21, scope: !11601)
!11606 = !DILocation(line: 9968, column: 40, scope: !11601)
!11607 = !DILocation(line: 9970, column: 12, scope: !11601)
!11608 = !DILocation(line: 9970, column: 19, scope: !11601)
!11609 = !DILocation(line: 9971, column: 39, scope: !11601)
!11610 = !DILocation(line: 9971, column: 28, scope: !11601)
!11611 = !DILocation(line: 9971, column: 12, scope: !11601)
!11612 = !DILocation(line: 9971, column: 17, scope: !11601)
!11613 = !DILocation(line: 9971, column: 26, scope: !11601)
!11614 = !DILocation(line: 9972, column: 1, scope: !11601)
!11615 = distinct !DISubprogram(name: "f_tr", scope: !3, file: !3, line: 9978, type: !2538, isLocal: true, isDefinition: true, scopeLine: 9979, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11616)
!11616 = !{!11617, !11618, !11619, !11620, !11621, !11622, !11623, !11624, !11625, !11626, !11627, !11628, !11629, !11630, !11631, !11632}
!11617 = !DILocalVariable(name: "argvars", arg: 1, scope: !11615, file: !3, line: 9978, type: !2305)
!11618 = !DILocalVariable(name: "rettv", arg: 2, scope: !11615, file: !3, line: 9978, type: !2305)
!11619 = !DILocalVariable(name: "in_str", scope: !11615, file: !3, line: 9980, type: !759)
!11620 = !DILocalVariable(name: "fromstr", scope: !11615, file: !3, line: 9981, type: !759)
!11621 = !DILocalVariable(name: "tostr", scope: !11615, file: !3, line: 9982, type: !759)
!11622 = !DILocalVariable(name: "p", scope: !11615, file: !3, line: 9983, type: !759)
!11623 = !DILocalVariable(name: "inlen", scope: !11615, file: !3, line: 9984, type: !756)
!11624 = !DILocalVariable(name: "fromlen", scope: !11615, file: !3, line: 9985, type: !756)
!11625 = !DILocalVariable(name: "tolen", scope: !11615, file: !3, line: 9986, type: !756)
!11626 = !DILocalVariable(name: "idx", scope: !11615, file: !3, line: 9987, type: !756)
!11627 = !DILocalVariable(name: "cpstr", scope: !11615, file: !3, line: 9988, type: !759)
!11628 = !DILocalVariable(name: "cplen", scope: !11615, file: !3, line: 9989, type: !756)
!11629 = !DILocalVariable(name: "first", scope: !11615, file: !3, line: 9990, type: !756)
!11630 = !DILocalVariable(name: "buf", scope: !11615, file: !3, line: 9991, type: !3499)
!11631 = !DILocalVariable(name: "buf2", scope: !11615, file: !3, line: 9992, type: !3499)
!11632 = !DILocalVariable(name: "ga", scope: !11615, file: !3, line: 9993, type: !787)
!11633 = !DILocation(line: 9978, column: 16, scope: !11615)
!11634 = !DILocation(line: 9978, column: 35, scope: !11615)
!11635 = !DILocation(line: 9990, column: 10, scope: !11615)
!11636 = !DILocation(line: 9991, column: 5, scope: !11615)
!11637 = !DILocation(line: 9991, column: 12, scope: !11615)
!11638 = !DILocation(line: 9992, column: 5, scope: !11615)
!11639 = !DILocation(line: 9992, column: 12, scope: !11615)
!11640 = !DILocation(line: 9993, column: 5, scope: !11615)
!11641 = !DILocation(line: 9995, column: 14, scope: !11615)
!11642 = !DILocation(line: 9980, column: 13, scope: !11615)
!11643 = !DILocation(line: 9996, column: 38, scope: !11615)
!11644 = !DILocation(line: 9996, column: 15, scope: !11615)
!11645 = !DILocation(line: 9981, column: 13, scope: !11615)
!11646 = !DILocation(line: 9997, column: 36, scope: !11615)
!11647 = !DILocation(line: 9997, column: 13, scope: !11615)
!11648 = !DILocation(line: 9982, column: 13, scope: !11615)
!11649 = !DILocation(line: 10000, column: 12, scope: !11615)
!11650 = !DILocation(line: 10000, column: 19, scope: !11615)
!11651 = !DILocation(line: 10001, column: 12, scope: !11615)
!11652 = !DILocation(line: 10001, column: 17, scope: !11615)
!11653 = !DILocation(line: 10001, column: 26, scope: !11615)
!11654 = !DILocation(line: 10002, column: 17, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 10002, column: 9)
!11656 = !DILocation(line: 10002, column: 34, scope: !11655)
!11657 = !DILocation(line: 10002, column: 25, scope: !11655)
!11658 = !DILocation(line: 9993, column: 14, scope: !11615)
!11659 = !DILocation(line: 10004, column: 5, scope: !11615)
!11660 = !DILocation(line: 10006, column: 10, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 10006, column: 9)
!11662 = !DILocation(line: 10006, column: 9, scope: !11615)
!11663 = !DILocation(line: 10008, column: 6, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 10008, column: 6)
!11665 = !DILocation(line: 10008, column: 25, scope: !11664)
!11666 = !DILocation(line: 10008, column: 22, scope: !11664)
!11667 = !DILocation(line: 10008, column: 6, scope: !11661)
!11668 = !DILocation(line: 10011, column: 12, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 10009, column: 2)
!11670 = !DILocation(line: 10011, column: 6, scope: !11669)
!11671 = !DILocation(line: 10012, column: 6, scope: !11669)
!11672 = !DILocation(line: 10013, column: 6, scope: !11669)
!11673 = !DILocation(line: 10017, column: 12, scope: !11615)
!11674 = !DILocation(line: 10017, column: 20, scope: !11615)
!11675 = !DILocation(line: 10017, column: 5, scope: !11615)
!11676 = !DILocation(line: 10084, column: 31, scope: !11615)
!11677 = !DILocation(line: 10019, column: 6, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !3, line: 10019, column: 6)
!11679 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 10018, column: 5)
!11680 = !DILocation(line: 10019, column: 6, scope: !11679)
!11681 = !DILocation(line: 10021, column: 16, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11678, file: !3, line: 10020, column: 2)
!11683 = !DILocation(line: 10021, column: 14, scope: !11682)
!11684 = !DILocation(line: 9984, column: 10, scope: !11615)
!11685 = !DILocation(line: 9988, column: 13, scope: !11615)
!11686 = !DILocation(line: 9989, column: 10, scope: !11615)
!11687 = !DILocation(line: 9987, column: 10, scope: !11615)
!11688 = !DILocation(line: 9983, column: 13, scope: !11615)
!11689 = !DILocation(line: 10025, column: 24, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 10025, column: 6)
!11691 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 10025, column: 6)
!11692 = !DILocation(line: 10025, column: 27, scope: !11690)
!11693 = !DILocation(line: 10025, column: 6, scope: !11691)
!11694 = !DILocation(line: 10027, column: 15, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 10026, column: 6)
!11696 = !DILocation(line: 10027, column: 13, scope: !11695)
!11697 = !DILocation(line: 9985, column: 10, scope: !11615)
!11698 = !DILocation(line: 10028, column: 15, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 10028, column: 7)
!11700 = !DILocation(line: 10028, column: 24, scope: !11699)
!11701 = !DILocation(line: 10028, column: 27, scope: !11699)
!11702 = !DILocation(line: 10028, column: 53, scope: !11699)
!11703 = !DILocation(line: 10028, column: 7, scope: !11695)
!11704 = !DILocation(line: 10030, column: 23, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 10030, column: 7)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 10030, column: 7)
!11707 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 10029, column: 3)
!11708 = !DILocation(line: 10030, column: 26, scope: !11705)
!11709 = !DILocation(line: 10030, column: 7, scope: !11706)
!11710 = !DILocation(line: 10032, column: 14, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 10031, column: 7)
!11712 = !DILocation(line: 10032, column: 12, scope: !11711)
!11713 = !DILocation(line: 9986, column: 10, scope: !11615)
!11714 = !DILocation(line: 10033, column: 14, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 10033, column: 8)
!11716 = !DILocation(line: 10033, column: 8, scope: !11711)
!11717 = !DILocation(line: 10033, column: 11, scope: !11715)
!11718 = !DILocation(line: 10030, column: 36, scope: !11705)
!11719 = distinct !{!11719, !11709, !11720}
!11720 = !DILocation(line: 10039, column: 7, scope: !11706)
!11721 = !DILocation(line: 10040, column: 11, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 10040, column: 11)
!11723 = !DILocation(line: 10040, column: 14, scope: !11722)
!11724 = !DILocation(line: 10040, column: 11, scope: !11707)
!11725 = !DILocation(line: 10044, column: 3, scope: !11695)
!11726 = !DILocation(line: 10025, column: 37, scope: !11690)
!11727 = distinct !{!11727, !11693, !11728}
!11728 = !DILocation(line: 10045, column: 6, scope: !11691)
!11729 = !DILocation(line: 10047, column: 10, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 10047, column: 10)
!11731 = !DILocation(line: 10047, column: 25, scope: !11730)
!11732 = !DILocation(line: 10047, column: 16, scope: !11730)
!11733 = !DILocation(line: 10053, column: 19, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 10053, column: 3)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 10053, column: 3)
!11736 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 10048, column: 6)
!11737 = !DILocation(line: 10053, column: 22, scope: !11734)
!11738 = !DILocation(line: 10053, column: 3, scope: !11735)
!11739 = !DILocation(line: 10055, column: 17, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 10054, column: 3)
!11741 = !DILocation(line: 10055, column: 15, scope: !11740)
!11742 = !DILocation(line: 10056, column: 7, scope: !11740)
!11743 = !DILocation(line: 10053, column: 32, scope: !11734)
!11744 = distinct !{!11744, !11738, !11745}
!11745 = !DILocation(line: 10057, column: 3, scope: !11735)
!11746 = !DILocation(line: 10058, column: 11, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 10058, column: 7)
!11748 = !DILocation(line: 10058, column: 7, scope: !11736)
!11749 = !DILocation(line: 10062, column: 12, scope: !11682)
!11750 = !DILocation(line: 10063, column: 6, scope: !11682)
!11751 = !DILocation(line: 10064, column: 16, scope: !11682)
!11752 = !DILocation(line: 10066, column: 13, scope: !11682)
!11753 = !DILocation(line: 10067, column: 2, scope: !11682)
!11754 = !DILocation(line: 10071, column: 10, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11678, file: !3, line: 10069, column: 2)
!11756 = !DILocation(line: 10072, column: 12, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 10072, column: 10)
!11758 = !DILocation(line: 10072, column: 10, scope: !11755)
!11759 = !DILocation(line: 10073, column: 26, scope: !11757)
!11760 = !DILocation(line: 10073, column: 18, scope: !11757)
!11761 = !DILocation(line: 10073, column: 3, scope: !11757)
!11762 = !DILocation(line: 10075, column: 18, scope: !11757)
!11763 = !DILocation(line: 10075, column: 3, scope: !11757)
!11764 = distinct !{!11764, !11675, !11765}
!11765 = !DILocation(line: 10078, column: 5, scope: !11615)
!11766 = !DILocation(line: 10081, column: 11, scope: !11615)
!11767 = !DILocation(line: 10082, column: 5, scope: !11615)
!11768 = !DILocation(line: 10084, column: 26, scope: !11615)
!11769 = !DILocation(line: 10085, column: 1, scope: !11615)
!11770 = distinct !DISubprogram(name: "f_trim", scope: !3, file: !3, line: 10091, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10092, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11771)
!11771 = !{!11772, !11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11781, !11782, !11783}
!11772 = !DILocalVariable(name: "argvars", arg: 1, scope: !11770, file: !3, line: 10091, type: !2305)
!11773 = !DILocalVariable(name: "rettv", arg: 2, scope: !11770, file: !3, line: 10091, type: !2305)
!11774 = !DILocalVariable(name: "buf1", scope: !11770, file: !3, line: 10093, type: !3499)
!11775 = !DILocalVariable(name: "buf2", scope: !11770, file: !3, line: 10094, type: !3499)
!11776 = !DILocalVariable(name: "head", scope: !11770, file: !3, line: 10095, type: !759)
!11777 = !DILocalVariable(name: "mask", scope: !11770, file: !3, line: 10096, type: !759)
!11778 = !DILocalVariable(name: "tail", scope: !11770, file: !3, line: 10097, type: !759)
!11779 = !DILocalVariable(name: "prev", scope: !11770, file: !3, line: 10098, type: !759)
!11780 = !DILocalVariable(name: "p", scope: !11770, file: !3, line: 10099, type: !759)
!11781 = !DILocalVariable(name: "c1", scope: !11770, file: !3, line: 10100, type: !756)
!11782 = !DILocalVariable(name: "dir", scope: !11770, file: !3, line: 10101, type: !756)
!11783 = !DILocalVariable(name: "error", scope: !11784, file: !3, line: 10114, type: !756)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 10113, column: 2)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 10112, column: 6)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 10109, column: 5)
!11787 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 10108, column: 9)
!11788 = !DILocation(line: 10091, column: 18, scope: !11770)
!11789 = !DILocation(line: 10091, column: 37, scope: !11770)
!11790 = !DILocation(line: 10093, column: 5, scope: !11770)
!11791 = !DILocation(line: 10093, column: 12, scope: !11770)
!11792 = !DILocation(line: 10094, column: 5, scope: !11770)
!11793 = !DILocation(line: 10094, column: 12, scope: !11770)
!11794 = !DILocation(line: 10095, column: 20, scope: !11770)
!11795 = !DILocation(line: 10095, column: 13, scope: !11770)
!11796 = !DILocation(line: 10096, column: 13, scope: !11770)
!11797 = !DILocation(line: 10101, column: 10, scope: !11770)
!11798 = !DILocation(line: 10103, column: 12, scope: !11770)
!11799 = !DILocation(line: 10103, column: 19, scope: !11770)
!11800 = !DILocation(line: 10104, column: 12, scope: !11770)
!11801 = !DILocation(line: 10104, column: 17, scope: !11770)
!11802 = !DILocation(line: 10104, column: 26, scope: !11770)
!11803 = !DILocation(line: 10105, column: 14, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 10105, column: 9)
!11805 = !DILocation(line: 10105, column: 9, scope: !11770)
!11806 = !DILocation(line: 10108, column: 9, scope: !11787)
!11807 = !DILocation(line: 10108, column: 20, scope: !11787)
!11808 = !DILocation(line: 10108, column: 27, scope: !11787)
!11809 = !DILocation(line: 10108, column: 9, scope: !11770)
!11810 = !DILocation(line: 10110, column: 9, scope: !11786)
!11811 = !DILocation(line: 10112, column: 6, scope: !11785)
!11812 = !DILocation(line: 10112, column: 17, scope: !11785)
!11813 = !DILocation(line: 10112, column: 24, scope: !11785)
!11814 = !DILocation(line: 10112, column: 6, scope: !11786)
!11815 = !DILocation(line: 10114, column: 6, scope: !11784)
!11816 = !DILocation(line: 10114, column: 10, scope: !11784)
!11817 = !DILocation(line: 10117, column: 17, scope: !11784)
!11818 = !DILocation(line: 10117, column: 12, scope: !11784)
!11819 = !DILocation(line: 10118, column: 10, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 10118, column: 10)
!11821 = !DILocation(line: 10118, column: 10, scope: !11784)
!11822 = !DILocation(line: 10120, column: 18, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 10120, column: 10)
!11824 = !DILocation(line: 10122, column: 9, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 10121, column: 6)
!11826 = !DILocation(line: 10122, column: 23, scope: !11825)
!11827 = !DILocation(line: 10122, column: 3, scope: !11825)
!11828 = !DILocation(line: 10125, column: 2, scope: !11785)
!11829 = !DILocation(line: 10128, column: 18, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 10128, column: 9)
!11831 = !DILocation(line: 10131, column: 9, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 10129, column: 5)
!11833 = !DILocation(line: 10131, column: 15, scope: !11832)
!11834 = !DILocation(line: 10131, column: 2, scope: !11832)
!11835 = !DILocation(line: 10133, column: 11, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 10132, column: 2)
!11837 = !DILocation(line: 10100, column: 10, scope: !11770)
!11838 = !DILocation(line: 10134, column: 10, scope: !11836)
!11839 = !DILocation(line: 10136, column: 10, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 10136, column: 7)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !3, line: 10135, column: 6)
!11842 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 10134, column: 10)
!11843 = !DILocation(line: 10136, column: 22, scope: !11840)
!11844 = !DILocation(line: 10136, column: 16, scope: !11840)
!11845 = !DILocation(line: 10099, column: 13, scope: !11770)
!11846 = !DILocation(line: 10141, column: 18, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !3, line: 10141, column: 3)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 10141, column: 3)
!11849 = distinct !DILexicalBlock(scope: !11842, file: !3, line: 10140, column: 6)
!11850 = !DILocation(line: 10141, column: 21, scope: !11847)
!11851 = !DILocation(line: 10141, column: 3, scope: !11848)
!11852 = !DILocation(line: 10142, column: 17, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 10142, column: 11)
!11854 = !DILocation(line: 10142, column: 14, scope: !11853)
!11855 = !DILocation(line: 10142, column: 11, scope: !11847)
!11856 = !DILocation(line: 10141, column: 29, scope: !11847)
!11857 = distinct !{!11857, !11851, !11858}
!11858 = !DILocation(line: 10143, column: 4, scope: !11848)
!11859 = !DILocation(line: 10144, column: 7, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 10144, column: 7)
!11861 = !DILocation(line: 10144, column: 10, scope: !11860)
!11862 = !DILocation(line: 10144, column: 7, scope: !11849)
!11863 = !DILocation(line: 10147, column: 6, scope: !11836)
!11864 = distinct !{!11864, !11834, !11865}
!11865 = !DILocation(line: 10148, column: 2, scope: !11832)
!11866 = !DILocation(line: 10151, column: 19, scope: !11770)
!11867 = !DILocation(line: 10151, column: 17, scope: !11770)
!11868 = !DILocation(line: 10097, column: 13, scope: !11770)
!11869 = !DILocation(line: 10152, column: 18, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 10152, column: 9)
!11871 = !DILocation(line: 10155, column: 14, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 10155, column: 2)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 10155, column: 2)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 10153, column: 5)
!11875 = !DILocation(line: 10155, column: 2, scope: !11873)
!11876 = !DILocation(line: 10098, column: 13, scope: !11770)
!11877 = !DILocation(line: 10158, column: 6, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 10156, column: 2)
!11879 = !DILocation(line: 10159, column: 11, scope: !11878)
!11880 = !DILocation(line: 10160, column: 10, scope: !11878)
!11881 = !DILocation(line: 10162, column: 10, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 10162, column: 7)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !3, line: 10161, column: 6)
!11884 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 10160, column: 10)
!11885 = !DILocation(line: 10162, column: 22, scope: !11882)
!11886 = !DILocation(line: 10162, column: 16, scope: !11882)
!11887 = !DILocation(line: 10167, column: 18, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 10167, column: 3)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 10167, column: 3)
!11890 = distinct !DILexicalBlock(scope: !11884, file: !3, line: 10166, column: 6)
!11891 = !DILocation(line: 10167, column: 21, scope: !11888)
!11892 = !DILocation(line: 10167, column: 3, scope: !11889)
!11893 = !DILocation(line: 10168, column: 17, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11888, file: !3, line: 10168, column: 11)
!11895 = !DILocation(line: 10168, column: 14, scope: !11894)
!11896 = !DILocation(line: 10168, column: 11, scope: !11888)
!11897 = !DILocation(line: 10167, column: 29, scope: !11888)
!11898 = distinct !{!11898, !11892, !11899}
!11899 = !DILocation(line: 10169, column: 4, scope: !11889)
!11900 = !DILocation(line: 10170, column: 7, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 10170, column: 7)
!11902 = !DILocation(line: 10170, column: 10, scope: !11901)
!11903 = !DILocation(line: 10170, column: 7, scope: !11890)
!11904 = distinct !{!11904, !11875, !11905}
!11905 = !DILocation(line: 10173, column: 2, scope: !11873)
!11906 = !DILocation(line: 10175, column: 52, scope: !11770)
!11907 = !DILocation(line: 10175, column: 28, scope: !11770)
!11908 = !DILocation(line: 10175, column: 26, scope: !11770)
!11909 = !DILocation(line: 10176, column: 1, scope: !11770)
!11910 = distinct !DISubprogram(name: "f_trunc", scope: !3, file: !3, line: 10183, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10184, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11911)
!11911 = !{!11912, !11913, !11914}
!11912 = !DILocalVariable(name: "argvars", arg: 1, scope: !11910, file: !3, line: 10183, type: !2305)
!11913 = !DILocalVariable(name: "rettv", arg: 2, scope: !11910, file: !3, line: 10183, type: !2305)
!11914 = !DILocalVariable(name: "f", scope: !11910, file: !3, line: 10185, type: !762)
!11915 = !DILocation(line: 10183, column: 19, scope: !11910)
!11916 = !DILocation(line: 10183, column: 38, scope: !11910)
!11917 = !DILocation(line: 10185, column: 13, scope: !11910)
!11918 = !DILocation(line: 10187, column: 12, scope: !11910)
!11919 = !DILocation(line: 10187, column: 19, scope: !11910)
!11920 = !DILocation(line: 2176, column: 25, scope: !4282, inlinedAt: !11921)
!11921 = distinct !DILocation(line: 10188, column: 9, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 10188, column: 9)
!11923 = !DILocation(line: 2176, column: 43, scope: !4282, inlinedAt: !11921)
!11924 = !DILocation(line: 2178, column: 20, scope: !4293, inlinedAt: !11921)
!11925 = !DILocation(line: 2178, column: 9, scope: !4282, inlinedAt: !11921)
!11926 = !DILocation(line: 2180, column: 23, scope: !4296, inlinedAt: !11921)
!11927 = !DILocation(line: 2181, column: 2, scope: !4296, inlinedAt: !11921)
!11928 = !DILocation(line: 2185, column: 32, scope: !4299, inlinedAt: !11921)
!11929 = !DILocation(line: 2185, column: 7, scope: !4299, inlinedAt: !11921)
!11930 = !DILocation(line: 2186, column: 2, scope: !4299, inlinedAt: !11921)
!11931 = !DILocation(line: 10190, column: 26, scope: !11922)
!11932 = !DILocation(line: 10190, column: 32, scope: !11922)
!11933 = !DILocation(line: 10190, column: 43, scope: !11922)
!11934 = !DILocation(line: 10190, column: 24, scope: !11922)
!11935 = !DILocation(line: 10190, column: 2, scope: !11922)
!11936 = !DILocation(line: 2188, column: 10, scope: !4282, inlinedAt: !11921)
!11937 = !DILocation(line: 2188, column: 5, scope: !4282, inlinedAt: !11921)
!11938 = !DILocation(line: 10193, column: 1, scope: !11910)
!11939 = distinct !DISubprogram(name: "f_type", scope: !3, file: !3, line: 10200, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10201, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11940)
!11940 = !{!11941, !11942, !11943}
!11941 = !DILocalVariable(name: "argvars", arg: 1, scope: !11939, file: !3, line: 10200, type: !2305)
!11942 = !DILocalVariable(name: "rettv", arg: 2, scope: !11939, file: !3, line: 10200, type: !2305)
!11943 = !DILocalVariable(name: "n", scope: !11939, file: !3, line: 10202, type: !756)
!11944 = !DILocation(line: 10200, column: 18, scope: !11939)
!11945 = !DILocation(line: 10200, column: 37, scope: !11939)
!11946 = !DILocation(line: 10202, column: 9, scope: !11939)
!11947 = !DILocation(line: 10204, column: 24, scope: !11939)
!11948 = !DILocation(line: 10204, column: 5, scope: !11939)
!11949 = !DILocation(line: 10206, column: 41, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 10205, column: 5)
!11951 = !DILocation(line: 10207, column: 41, scope: !11950)
!11952 = !DILocation(line: 10209, column: 39, scope: !11950)
!11953 = !DILocation(line: 10210, column: 39, scope: !11950)
!11954 = !DILocation(line: 10211, column: 39, scope: !11950)
!11955 = !DILocation(line: 10212, column: 40, scope: !11950)
!11956 = !DILocation(line: 10213, column: 38, scope: !11950)
!11957 = !DILocation(line: 10214, column: 39, scope: !11950)
!11958 = !DILocation(line: 10215, column: 38, scope: !11950)
!11959 = !DILocation(line: 10216, column: 42, scope: !11950)
!11960 = !DILocation(line: 10217, column: 39, scope: !11950)
!11961 = !DILocation(line: 10221, column: 7, scope: !11950)
!11962 = !DILocation(line: 10223, column: 7, scope: !11950)
!11963 = !DILocation(line: 10225, column: 17, scope: !11939)
!11964 = !DILocation(line: 10225, column: 26, scope: !11939)
!11965 = !DILocation(line: 10226, column: 1, scope: !11939)
!11966 = distinct !DISubprogram(name: "f_virtcol", scope: !3, file: !3, line: 10232, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10233, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11967)
!11967 = !{!11968, !11969, !11970, !11971, !11972, !11973}
!11968 = !DILocalVariable(name: "argvars", arg: 1, scope: !11966, file: !3, line: 10232, type: !2305)
!11969 = !DILocalVariable(name: "rettv", arg: 2, scope: !11966, file: !3, line: 10232, type: !2305)
!11970 = !DILocalVariable(name: "vcol", scope: !11966, file: !3, line: 10234, type: !766)
!11971 = !DILocalVariable(name: "fp", scope: !11966, file: !3, line: 10235, type: !3956)
!11972 = !DILocalVariable(name: "fnum", scope: !11966, file: !3, line: 10236, type: !756)
!11973 = !DILocalVariable(name: "len", scope: !11966, file: !3, line: 10237, type: !756)
!11974 = !DILocation(line: 10232, column: 21, scope: !11966)
!11975 = !DILocation(line: 10232, column: 40, scope: !11966)
!11976 = !DILocation(line: 10234, column: 5, scope: !11966)
!11977 = !DILocation(line: 10234, column: 13, scope: !11966)
!11978 = !DILocation(line: 10236, column: 5, scope: !11966)
!11979 = !DILocation(line: 10236, column: 17, scope: !11966)
!11980 = !DILocation(line: 10236, column: 25, scope: !11966)
!11981 = !DILocation(line: 10236, column: 10, scope: !11966)
!11982 = !DILocation(line: 10239, column: 10, scope: !11966)
!11983 = !DILocation(line: 10235, column: 12, scope: !11966)
!11984 = !DILocation(line: 10240, column: 12, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 10240, column: 9)
!11986 = !DILocation(line: 10240, column: 20, scope: !11985)
!11987 = !DILocation(line: 10240, column: 27, scope: !11985)
!11988 = !DILocation(line: 10240, column: 35, scope: !11985)
!11989 = !DILocation(line: 10240, column: 48, scope: !11985)
!11990 = !DILocation(line: 10240, column: 32, scope: !11985)
!11991 = !DILocation(line: 10241, column: 11, scope: !11985)
!11992 = !DILocation(line: 10241, column: 14, scope: !11985)
!11993 = !DILocation(line: 10241, column: 30, scope: !11985)
!11994 = !DILocation(line: 10241, column: 19, scope: !11985)
!11995 = !DILocation(line: 10240, column: 9, scope: !11966)
!11996 = !DILocation(line: 10244, column: 10, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 10244, column: 6)
!11998 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 10242, column: 5)
!11999 = !DILocation(line: 10244, column: 14, scope: !11997)
!12000 = !DILocation(line: 10244, column: 6, scope: !11998)
!12001 = !DILocation(line: 10248, column: 17, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 10247, column: 2)
!12003 = !DILocation(line: 10248, column: 12, scope: !12002)
!12004 = !DILocation(line: 10237, column: 10, scope: !11966)
!12005 = !DILocation(line: 10249, column: 14, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 10249, column: 10)
!12007 = !DILocation(line: 10249, column: 18, scope: !12006)
!12008 = !DILocation(line: 10249, column: 10, scope: !12002)
!12009 = !DILocation(line: 10252, column: 11, scope: !11998)
!12010 = !DILocation(line: 10252, column: 2, scope: !11998)
!12011 = !DILocation(line: 10253, column: 2, scope: !11998)
!12012 = !DILocation(line: 10254, column: 5, scope: !11998)
!12013 = !DILocation(line: 10256, column: 17, scope: !11966)
!12014 = !DILocation(line: 10256, column: 26, scope: !11966)
!12015 = !DILocation(line: 10257, column: 1, scope: !11966)
!12016 = distinct !DISubprogram(name: "f_visualmode", scope: !3, file: !3, line: 10263, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10264, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12017)
!12017 = !{!12018, !12019, !12020}
!12018 = !DILocalVariable(name: "argvars", arg: 1, scope: !12016, file: !3, line: 10263, type: !2305)
!12019 = !DILocalVariable(name: "rettv", arg: 2, scope: !12016, file: !3, line: 10263, type: !2305)
!12020 = !DILocalVariable(name: "str", scope: !12016, file: !3, line: 10265, type: !8560)
!12021 = !DILocation(line: 10263, column: 24, scope: !12016)
!12022 = !DILocation(line: 10263, column: 43, scope: !12016)
!12023 = !DILocation(line: 10265, column: 5, scope: !12016)
!12024 = !DILocation(line: 10265, column: 12, scope: !12016)
!12025 = !DILocation(line: 10267, column: 12, scope: !12016)
!12026 = !DILocation(line: 10267, column: 19, scope: !12016)
!12027 = !DILocation(line: 10268, column: 14, scope: !12016)
!12028 = !DILocation(line: 10268, column: 22, scope: !12016)
!12029 = !{!4831, !2690, i64 800}
!12030 = !DILocation(line: 10268, column: 12, scope: !12016)
!12031 = !DILocation(line: 10269, column: 5, scope: !12016)
!12032 = !DILocation(line: 10269, column: 12, scope: !12016)
!12033 = !DILocation(line: 10270, column: 28, scope: !12016)
!12034 = !DILocation(line: 10270, column: 12, scope: !12016)
!12035 = !DILocation(line: 10270, column: 17, scope: !12016)
!12036 = !DILocation(line: 10270, column: 26, scope: !12016)
!12037 = !DILocation(line: 2159, column: 24, scope: !3385, inlinedAt: !12038)
!12038 = distinct !DILocation(line: 10273, column: 9, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 10273, column: 9)
!12040 = !DILocation(line: 2161, column: 25, scope: !3385, inlinedAt: !12038)
!12041 = !DILocation(line: 2162, column: 3, scope: !3385, inlinedAt: !12038)
!12042 = !DILocation(line: 2162, column: 22, scope: !3385, inlinedAt: !12038)
!12043 = !DILocation(line: 2162, column: 31, scope: !3385, inlinedAt: !12038)
!12044 = !DILocation(line: 2163, column: 6, scope: !3385, inlinedAt: !12038)
!12045 = !DILocation(line: 2164, column: 22, scope: !3385, inlinedAt: !12038)
!12046 = !DILocation(line: 2164, column: 31, scope: !3385, inlinedAt: !12038)
!12047 = !DILocation(line: 2165, column: 6, scope: !3385, inlinedAt: !12038)
!12048 = !DILocation(line: 2166, column: 17, scope: !3385, inlinedAt: !12038)
!12049 = !DILocation(line: 2166, column: 22, scope: !3385, inlinedAt: !12038)
!12050 = !DILocation(line: 2166, column: 31, scope: !3385, inlinedAt: !12038)
!12051 = !DILocation(line: 2167, column: 3, scope: !3385, inlinedAt: !12038)
!12052 = !DILocation(line: 2167, column: 6, scope: !3385, inlinedAt: !12038)
!12053 = !DILocation(line: 2167, column: 32, scope: !3385, inlinedAt: !12038)
!12054 = !DILocation(line: 10273, column: 9, scope: !12016)
!12055 = !DILocation(line: 10274, column: 2, scope: !12039)
!12056 = !DILocation(line: 10274, column: 10, scope: !12039)
!12057 = !DILocation(line: 10274, column: 29, scope: !12039)
!12058 = !DILocation(line: 10275, column: 1, scope: !12016)
!12059 = distinct !DISubprogram(name: "f_wildmenumode", scope: !3, file: !3, line: 10281, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10282, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12060)
!12060 = !{!12061, !12062}
!12061 = !DILocalVariable(name: "argvars", arg: 1, scope: !12059, file: !3, line: 10281, type: !2305)
!12062 = !DILocalVariable(name: "rettv", arg: 2, scope: !12059, file: !3, line: 10281, type: !2305)
!12063 = !DILocation(line: 10281, column: 26, scope: !12059)
!12064 = !DILocation(line: 10281, column: 52, scope: !12059)
!12065 = !DILocation(line: 10284, column: 9, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 10284, column: 9)
!12067 = !DILocation(line: 10284, column: 9, scope: !12059)
!12068 = !DILocation(line: 10285, column: 14, scope: !12066)
!12069 = !DILocation(line: 10285, column: 23, scope: !12066)
!12070 = !DILocation(line: 10285, column: 2, scope: !12066)
!12071 = !DILocation(line: 10287, column: 1, scope: !12059)
!12072 = distinct !DISubprogram(name: "f_windowsversion", scope: !3, file: !3, line: 10293, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10294, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12073)
!12073 = !{!12074, !12075}
!12074 = !DILocalVariable(name: "argvars", arg: 1, scope: !12072, file: !3, line: 10293, type: !2305)
!12075 = !DILocalVariable(name: "rettv", arg: 2, scope: !12072, file: !3, line: 10293, type: !2305)
!12076 = !DILocation(line: 10293, column: 28, scope: !12072)
!12077 = !DILocation(line: 10293, column: 54, scope: !12072)
!12078 = !DILocation(line: 10295, column: 12, scope: !12072)
!12079 = !DILocation(line: 10295, column: 19, scope: !12072)
!12080 = !DILocation(line: 10296, column: 28, scope: !12072)
!12081 = !DILocation(line: 10296, column: 12, scope: !12072)
!12082 = !DILocation(line: 10296, column: 17, scope: !12072)
!12083 = !DILocation(line: 10296, column: 26, scope: !12072)
!12084 = !DILocation(line: 10297, column: 1, scope: !12072)
!12085 = distinct !DISubprogram(name: "f_wordcount", scope: !3, file: !3, line: 10303, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10304, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12086)
!12086 = !{!12087, !12088}
!12087 = !DILocalVariable(name: "argvars", arg: 1, scope: !12085, file: !3, line: 10303, type: !2305)
!12088 = !DILocalVariable(name: "rettv", arg: 2, scope: !12085, file: !3, line: 10303, type: !2305)
!12089 = !DILocation(line: 10303, column: 23, scope: !12085)
!12090 = !DILocation(line: 10303, column: 49, scope: !12085)
!12091 = !DILocation(line: 10305, column: 9, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 10305, column: 9)
!12093 = !DILocation(line: 10305, column: 33, scope: !12092)
!12094 = !DILocation(line: 10305, column: 9, scope: !12085)
!12095 = !DILocation(line: 10307, column: 28, scope: !12085)
!12096 = !DILocation(line: 10307, column: 33, scope: !12085)
!12097 = !DILocation(line: 10307, column: 5, scope: !12085)
!12098 = !DILocation(line: 10308, column: 1, scope: !12085)
!12099 = distinct !DISubprogram(name: "f_xor", scope: !3, file: !3, line: 10314, type: !2538, isLocal: true, isDefinition: true, scopeLine: 10315, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12100)
!12100 = !{!12101, !12102}
!12101 = !DILocalVariable(name: "argvars", arg: 1, scope: !12099, file: !3, line: 10314, type: !2305)
!12102 = !DILocalVariable(name: "rettv", arg: 2, scope: !12099, file: !3, line: 10314, type: !2305)
!12103 = !DILocation(line: 10314, column: 17, scope: !12099)
!12104 = !DILocation(line: 10314, column: 36, scope: !12099)
!12105 = !DILocation(line: 10316, column: 28, scope: !12099)
!12106 = !DILocation(line: 10317, column: 27, scope: !12099)
!12107 = !DILocation(line: 10317, column: 8, scope: !12099)
!12108 = !DILocation(line: 10317, column: 6, scope: !12099)
!12109 = !DILocation(line: 10316, column: 17, scope: !12099)
!12110 = !DILocation(line: 10316, column: 26, scope: !12099)
!12111 = !DILocation(line: 10318, column: 1, scope: !12099)
!12112 = distinct !DISubprogram(name: "get_col", scope: !3, file: !3, line: 2550, type: !3480, isLocal: true, isDefinition: true, scopeLine: 2551, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12113)
!12113 = !{!12114, !12115, !12116, !12117, !12118, !12119, !12120, !12127}
!12114 = !DILocalVariable(name: "argvars", arg: 1, scope: !12112, file: !3, line: 2550, type: !2305)
!12115 = !DILocalVariable(name: "rettv", arg: 2, scope: !12112, file: !3, line: 2550, type: !2305)
!12116 = !DILocalVariable(name: "charcol", arg: 3, scope: !12112, file: !3, line: 2550, type: !756)
!12117 = !DILocalVariable(name: "col", scope: !12112, file: !3, line: 2552, type: !766)
!12118 = !DILocalVariable(name: "fp", scope: !12112, file: !3, line: 2553, type: !3956)
!12119 = !DILocalVariable(name: "fnum", scope: !12112, file: !3, line: 2554, type: !756)
!12120 = !DILocalVariable(name: "p", scope: !12121, file: !3, line: 2574, type: !759)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !3, line: 2573, column: 6)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !3, line: 2572, column: 10)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 2568, column: 2)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 2559, column: 6)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 2558, column: 5)
!12126 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2557, column: 9)
!12127 = !DILocalVariable(name: "l", scope: !12128, file: !3, line: 2579, type: !756)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2578, column: 3)
!12129 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 2576, column: 7)
!12130 = !DILocation(line: 2550, column: 19, scope: !12112)
!12131 = !DILocation(line: 2550, column: 38, scope: !12112)
!12132 = !DILocation(line: 2550, column: 49, scope: !12112)
!12133 = !DILocation(line: 2552, column: 13, scope: !12112)
!12134 = !DILocation(line: 2554, column: 5, scope: !12112)
!12135 = !DILocation(line: 2554, column: 17, scope: !12112)
!12136 = !DILocation(line: 2554, column: 25, scope: !12112)
!12137 = !DILocation(line: 2554, column: 10, scope: !12112)
!12138 = !DILocation(line: 2556, column: 10, scope: !12112)
!12139 = !DILocation(line: 2553, column: 12, scope: !12112)
!12140 = !DILocation(line: 2557, column: 12, scope: !12126)
!12141 = !DILocation(line: 2557, column: 20, scope: !12126)
!12142 = !DILocation(line: 2557, column: 23, scope: !12126)
!12143 = !DILocation(line: 2557, column: 31, scope: !12126)
!12144 = !DILocation(line: 2557, column: 39, scope: !12126)
!12145 = !DILocation(line: 2557, column: 28, scope: !12126)
!12146 = !DILocation(line: 2557, column: 9, scope: !12112)
!12147 = !DILocation(line: 2559, column: 10, scope: !12124)
!12148 = !DILocation(line: 2559, column: 14, scope: !12124)
!12149 = !DILocation(line: 2559, column: 6, scope: !12125)
!12150 = !DILocation(line: 2562, column: 14, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 2562, column: 10)
!12152 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 2560, column: 2)
!12153 = !DILocation(line: 2562, column: 35, scope: !12151)
!12154 = !DILocation(line: 2562, column: 19, scope: !12151)
!12155 = !DILocation(line: 2562, column: 10, scope: !12152)
!12156 = !DILocation(line: 2563, column: 18, scope: !12151)
!12157 = !DILocation(line: 2563, column: 9, scope: !12151)
!12158 = !DILocation(line: 2563, column: 43, scope: !12151)
!12159 = !DILocation(line: 2563, column: 3, scope: !12151)
!12160 = !DILocation(line: 2569, column: 20, scope: !12123)
!12161 = !DILocation(line: 2572, column: 10, scope: !12122)
!12162 = !DILocation(line: 2572, column: 27, scope: !12122)
!12163 = !DILocation(line: 2572, column: 37, scope: !12122)
!12164 = !DILocation(line: 2572, column: 45, scope: !12122)
!12165 = !DILocation(line: 2572, column: 33, scope: !12122)
!12166 = !DILocation(line: 2572, column: 10, scope: !12123)
!12167 = !DILocation(line: 2574, column: 15, scope: !12121)
!12168 = !DILocation(line: 2574, column: 11, scope: !12121)
!12169 = !DILocation(line: 2576, column: 7, scope: !12129)
!12170 = !DILocation(line: 2576, column: 24, scope: !12129)
!12171 = !{!4151, !2690, i64 68}
!12172 = !DILocation(line: 2577, column: 14, scope: !12129)
!12173 = !{!4151, !2690, i64 704}
!12174 = !DILocation(line: 2577, column: 24, scope: !12129)
!12175 = !DILocation(line: 2576, column: 43, scope: !12129)
!12176 = !DILocation(line: 2576, column: 31, scope: !12129)
!12177 = !DILocation(line: 2576, column: 7, scope: !12121)
!12178 = !DILocation(line: 2581, column: 11, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 2581, column: 11)
!12180 = !DILocation(line: 2581, column: 14, scope: !12179)
!12181 = !DILocation(line: 2581, column: 21, scope: !12179)
!12182 = !DILocation(line: 2581, column: 33, scope: !12179)
!12183 = !DILocation(line: 2581, column: 31, scope: !12179)
!12184 = !DILocation(line: 2579, column: 12, scope: !12128)
!12185 = !DILocation(line: 2581, column: 24, scope: !12179)
!12186 = !DILocation(line: 2581, column: 50, scope: !12179)
!12187 = !DILocation(line: 2581, column: 11, scope: !12128)
!12188 = !DILocation(line: 2587, column: 28, scope: !12112)
!12189 = !DILocation(line: 2587, column: 17, scope: !12112)
!12190 = !DILocation(line: 2587, column: 26, scope: !12112)
!12191 = !DILocation(line: 2588, column: 1, scope: !12112)
!12192 = distinct !DISubprogram(name: "set_cursorpos", scope: !3, file: !3, line: 2786, type: !3480, isLocal: true, isDefinition: true, scopeLine: 2787, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12193)
!12193 = !{!12194, !12195, !12196, !12197, !12198, !12199, !12200, !12201, !12204}
!12194 = !DILocalVariable(name: "argvars", arg: 1, scope: !12192, file: !3, line: 2786, type: !2305)
!12195 = !DILocalVariable(name: "rettv", arg: 2, scope: !12192, file: !3, line: 2786, type: !2305)
!12196 = !DILocalVariable(name: "charcol", arg: 3, scope: !12192, file: !3, line: 2786, type: !756)
!12197 = !DILocalVariable(name: "line", scope: !12192, file: !3, line: 2788, type: !765)
!12198 = !DILocalVariable(name: "col", scope: !12192, file: !3, line: 2788, type: !765)
!12199 = !DILocalVariable(name: "coladd", scope: !12192, file: !3, line: 2789, type: !765)
!12200 = !DILocalVariable(name: "set_curswant", scope: !12192, file: !3, line: 2790, type: !756)
!12201 = !DILocalVariable(name: "pos", scope: !12202, file: !3, line: 2795, type: !1315)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 2794, column: 5)
!12203 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2793, column: 9)
!12204 = !DILocalVariable(name: "curswant", scope: !12202, file: !3, line: 2796, type: !766)
!12205 = !DILocation(line: 2786, column: 25, scope: !12192)
!12206 = !DILocation(line: 2786, column: 44, scope: !12192)
!12207 = !DILocation(line: 2786, column: 55, scope: !12192)
!12208 = !DILocation(line: 2789, column: 10, scope: !12192)
!12209 = !DILocation(line: 2790, column: 10, scope: !12192)
!12210 = !DILocation(line: 2792, column: 17, scope: !12192)
!12211 = !DILocation(line: 2792, column: 26, scope: !12192)
!12212 = !DILocation(line: 2793, column: 20, scope: !12203)
!12213 = !DILocation(line: 2793, column: 9, scope: !12192)
!12214 = !DILocation(line: 2795, column: 2, scope: !12202)
!12215 = !DILocation(line: 2796, column: 2, scope: !12202)
!12216 = !DILocation(line: 2796, column: 14, scope: !12202)
!12217 = !DILocation(line: 2795, column: 12, scope: !12202)
!12218 = !DILocation(line: 2798, column: 6, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 2798, column: 6)
!12220 = !DILocation(line: 2798, column: 57, scope: !12219)
!12221 = !DILocation(line: 2798, column: 6, scope: !12202)
!12222 = !DILocation(line: 2803, column: 13, scope: !12202)
!12223 = !DILocation(line: 2788, column: 10, scope: !12192)
!12224 = !DILocation(line: 2804, column: 12, scope: !12202)
!12225 = !DILocation(line: 2804, column: 8, scope: !12202)
!12226 = !DILocation(line: 2788, column: 16, scope: !12192)
!12227 = !DILocation(line: 2805, column: 15, scope: !12202)
!12228 = !DILocation(line: 2805, column: 11, scope: !12202)
!12229 = !DILocation(line: 2806, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 2806, column: 6)
!12231 = !DILocation(line: 2806, column: 15, scope: !12230)
!12232 = !DILocation(line: 2806, column: 6, scope: !12202)
!12233 = !DILocation(line: 2808, column: 36, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 2807, column: 2)
!12235 = !DILocation(line: 2808, column: 6, scope: !12234)
!12236 = !DILocation(line: 2808, column: 14, scope: !12234)
!12237 = !DILocation(line: 2808, column: 25, scope: !12234)
!12238 = !{!4151, !2690, i64 72}
!12239 = !DILocation(line: 2810, column: 2, scope: !12234)
!12240 = !DILocation(line: 2811, column: 5, scope: !12203)
!12241 = !DILocation(line: 2800, column: 11, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12219, file: !3, line: 2799, column: 2)
!12243 = !DILocation(line: 2800, column: 6, scope: !12242)
!12244 = !DILocation(line: 2814, column: 10, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 2812, column: 14)
!12246 = !DILocation(line: 2814, column: 21, scope: !12245)
!12247 = !DILocation(line: 2814, column: 42, scope: !12245)
!12248 = !DILocation(line: 2817, column: 9, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 2816, column: 5)
!12250 = !DILocation(line: 2818, column: 11, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 2818, column: 6)
!12252 = !DILocation(line: 2818, column: 6, scope: !12249)
!12253 = !DILocation(line: 2819, column: 12, scope: !12251)
!12254 = !DILocation(line: 2819, column: 26, scope: !12251)
!12255 = !DILocation(line: 2819, column: 6, scope: !12251)
!12256 = !DILocation(line: 2820, column: 14, scope: !12249)
!12257 = !DILocation(line: 2821, column: 6, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 2821, column: 6)
!12259 = !DILocation(line: 2821, column: 6, scope: !12249)
!12260 = !DILocation(line: 2822, column: 35, scope: !12258)
!12261 = !DILocation(line: 2822, column: 43, scope: !12258)
!12262 = !DILocation(line: 2822, column: 49, scope: !12258)
!12263 = !DILocation(line: 2822, column: 12, scope: !12258)
!12264 = !DILocation(line: 2822, column: 54, scope: !12258)
!12265 = !DILocation(line: 2822, column: 6, scope: !12258)
!12266 = !DILocation(line: 2823, column: 6, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 2823, column: 6)
!12268 = !DILocation(line: 2823, column: 17, scope: !12267)
!12269 = !DILocation(line: 2823, column: 24, scope: !12267)
!12270 = !DILocation(line: 2823, column: 6, scope: !12249)
!12271 = !DILocation(line: 2824, column: 21, scope: !12267)
!12272 = !DILocation(line: 2824, column: 6, scope: !12267)
!12273 = !DILocation(line: 2828, column: 7, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 2827, column: 5)
!12275 = !DILocation(line: 2828, column: 2, scope: !12274)
!12276 = !DILocation(line: 2829, column: 2, scope: !12274)
!12277 = !DILocation(line: 2831, column: 18, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2831, column: 9)
!12279 = !DILocation(line: 2833, column: 14, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2833, column: 9)
!12281 = !DILocation(line: 2833, column: 9, scope: !12192)
!12282 = !DILocation(line: 2834, column: 2, scope: !12280)
!12283 = !DILocation(line: 2834, column: 19, scope: !12280)
!12284 = !DILocation(line: 2834, column: 24, scope: !12280)
!12285 = !DILocation(line: 2835, column: 13, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2835, column: 9)
!12287 = !DILocation(line: 2835, column: 9, scope: !12192)
!12288 = !DILocation(line: 2837, column: 5, scope: !12192)
!12289 = !DILocation(line: 2836, column: 25, scope: !12286)
!12290 = !DILocation(line: 2836, column: 2, scope: !12286)
!12291 = !DILocation(line: 2836, column: 19, scope: !12286)
!12292 = !DILocation(line: 2836, column: 23, scope: !12286)
!12293 = !DILocation(line: 2837, column: 31, scope: !12192)
!12294 = !DILocation(line: 2837, column: 22, scope: !12192)
!12295 = !DILocation(line: 2837, column: 29, scope: !12192)
!12296 = !DILocation(line: 2840, column: 5, scope: !12192)
!12297 = !DILocation(line: 2842, column: 9, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2842, column: 9)
!12299 = !DILocation(line: 2842, column: 9, scope: !12192)
!12300 = !DILocation(line: 2843, column: 2, scope: !12298)
!12301 = !DILocation(line: 2845, column: 5, scope: !12192)
!12302 = !DILocation(line: 2845, column: 13, scope: !12192)
!12303 = !DILocation(line: 2845, column: 28, scope: !12192)
!12304 = !DILocation(line: 2846, column: 26, scope: !12192)
!12305 = !DILocation(line: 2847, column: 1, scope: !12192)
!12306 = distinct !DISubprogram(name: "common_function", scope: !3, file: !3, line: 3634, type: !3480, isLocal: true, isDefinition: true, scopeLine: 3635, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12307)
!12307 = !{!12308, !12309, !12310, !12311, !12312, !12313, !12314, !12315, !12316, !12317, !12321, !12322, !12323, !12329, !12330, !12333, !12338, !12339, !12340}
!12308 = !DILocalVariable(name: "argvars", arg: 1, scope: !12306, file: !3, line: 3634, type: !2305)
!12309 = !DILocalVariable(name: "rettv", arg: 2, scope: !12306, file: !3, line: 3634, type: !2305)
!12310 = !DILocalVariable(name: "is_funcref", arg: 3, scope: !12306, file: !3, line: 3634, type: !756)
!12311 = !DILocalVariable(name: "s", scope: !12306, file: !3, line: 3636, type: !759)
!12312 = !DILocalVariable(name: "name", scope: !12306, file: !3, line: 3637, type: !759)
!12313 = !DILocalVariable(name: "use_string", scope: !12306, file: !3, line: 3638, type: !756)
!12314 = !DILocalVariable(name: "arg_pt", scope: !12306, file: !3, line: 3639, type: !768)
!12315 = !DILocalVariable(name: "trans_name", scope: !12306, file: !3, line: 3640, type: !759)
!12316 = !DILocalVariable(name: "is_global", scope: !12306, file: !3, line: 3641, type: !756)
!12317 = !DILocalVariable(name: "dict_idx", scope: !12318, file: !3, line: 3682, type: !756)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 3681, column: 5)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 3676, column: 14)
!12320 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 3672, column: 9)
!12321 = !DILocalVariable(name: "arg_idx", scope: !12318, file: !3, line: 3683, type: !756)
!12322 = !DILocalVariable(name: "list", scope: !12318, file: !3, line: 3684, type: !885)
!12323 = !DILocalVariable(name: "sid_buf", scope: !12324, file: !3, line: 3688, type: !12326)
!12324 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 3687, column: 2)
!12325 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 3686, column: 6)
!12326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 200, elements: !12327)
!12327 = !{!12328}
!12328 = !DISubrange(count: 25)
!12329 = !DILocalVariable(name: "off", scope: !12324, file: !3, line: 3689, type: !756)
!12330 = !DILocalVariable(name: "pt", scope: !12331, file: !3, line: 3752, type: !768)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !3, line: 3751, column: 2)
!12332 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 3750, column: 6)
!12333 = !DILocalVariable(name: "li", scope: !12334, file: !3, line: 3761, type: !890)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 3760, column: 3)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 3759, column: 7)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 3758, column: 6)
!12337 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 3755, column: 10)
!12338 = !DILocalVariable(name: "i", scope: !12334, file: !3, line: 3762, type: !756)
!12339 = !DILocalVariable(name: "arg_len", scope: !12334, file: !3, line: 3763, type: !756)
!12340 = !DILocalVariable(name: "lv_len", scope: !12334, file: !3, line: 3764, type: !756)
!12341 = !DILocation(line: 3634, column: 27, scope: !12306)
!12342 = !DILocation(line: 3634, column: 46, scope: !12306)
!12343 = !DILocation(line: 3634, column: 57, scope: !12306)
!12344 = !DILocation(line: 3637, column: 5, scope: !12306)
!12345 = !DILocation(line: 3638, column: 10, scope: !12306)
!12346 = !DILocation(line: 3639, column: 18, scope: !12306)
!12347 = !DILocation(line: 3640, column: 13, scope: !12306)
!12348 = !DILocation(line: 3641, column: 5, scope: !12306)
!12349 = !DILocation(line: 3641, column: 10, scope: !12306)
!12350 = !DILocation(line: 3643, column: 20, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 3643, column: 9)
!12352 = !DILocation(line: 3643, column: 9, scope: !12306)
!12353 = !DILocation(line: 3646, column: 17, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 3644, column: 5)
!12355 = !DILocation(line: 3646, column: 22, scope: !12354)
!12356 = !DILocation(line: 3636, column: 13, scope: !12306)
!12357 = !DILocation(line: 3647, column: 5, scope: !12354)
!12358 = !DILocation(line: 3649, column: 21, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 3648, column: 14)
!12360 = !DILocation(line: 3649, column: 26, scope: !12359)
!12361 = !DILocation(line: 3649, column: 36, scope: !12359)
!12362 = !DILocation(line: 3648, column: 14, scope: !12351)
!12363 = !DILocation(line: 3653, column: 6, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 3650, column: 5)
!12365 = !DILocation(line: 3654, column: 5, scope: !12364)
!12366 = !DILocation(line: 3658, column: 6, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 3656, column: 5)
!12368 = !DILocation(line: 3662, column: 24, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 3662, column: 9)
!12370 = !DILocation(line: 3662, column: 53, scope: !12369)
!12371 = !DILocation(line: 3662, column: 65, scope: !12369)
!12372 = !DILocation(line: 3662, column: 62, scope: !12369)
!12373 = !DILocation(line: 3662, column: 9, scope: !12306)
!12374 = !DILocation(line: 3637, column: 13, scope: !12306)
!12375 = !DILocation(line: 3664, column: 7, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 3663, column: 5)
!12377 = !DILocation(line: 3665, column: 15, scope: !12376)
!12378 = !DILocation(line: 3668, column: 7, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 3668, column: 6)
!12380 = !DILocation(line: 3668, column: 6, scope: !12379)
!12381 = !DILocation(line: 3668, column: 12, scope: !12379)
!12382 = !DILocation(line: 3674, column: 8, scope: !12320)
!12383 = !DILocation(line: 3674, column: 22, scope: !12320)
!12384 = !DILocation(line: 3672, column: 11, scope: !12320)
!12385 = !DILocation(line: 3672, column: 19, scope: !12320)
!12386 = !DILocation(line: 3672, column: 22, scope: !12320)
!12387 = !DILocation(line: 3672, column: 25, scope: !12320)
!12388 = !DILocation(line: 3672, column: 32, scope: !12320)
!12389 = !DILocation(line: 3672, column: 50, scope: !12320)
!12390 = !DILocation(line: 3672, column: 47, scope: !12320)
!12391 = !DILocation(line: 3673, column: 11, scope: !12320)
!12392 = !DILocation(line: 3673, column: 36, scope: !12320)
!12393 = !DILocation(line: 3673, column: 22, scope: !12320)
!12394 = !DILocation(line: 3674, column: 35, scope: !12320)
!12395 = !DILocation(line: 3674, column: 2, scope: !12320)
!12396 = !DILocation(line: 3676, column: 33, scope: !12319)
!12397 = !DILocation(line: 3676, column: 14, scope: !12320)
!12398 = !DILocation(line: 3677, column: 7, scope: !12319)
!12399 = !DILocation(line: 3677, column: 46, scope: !12319)
!12400 = !DILocation(line: 3676, column: 37, scope: !12319)
!12401 = !DILocation(line: 3678, column: 8, scope: !12319)
!12402 = !DILocation(line: 3679, column: 8, scope: !12319)
!12403 = !DILocation(line: 3679, column: 2, scope: !12319)
!12404 = !DILocation(line: 3682, column: 6, scope: !12318)
!12405 = !DILocation(line: 3683, column: 6, scope: !12318)
!12406 = !DILocation(line: 3684, column: 10, scope: !12318)
!12407 = !DILocation(line: 3686, column: 6, scope: !12325)
!12408 = !DILocation(line: 3686, column: 26, scope: !12325)
!12409 = !DILocation(line: 3686, column: 31, scope: !12325)
!12410 = !DILocation(line: 3686, column: 34, scope: !12325)
!12411 = !DILocation(line: 3686, column: 57, scope: !12325)
!12412 = !DILocation(line: 3686, column: 6, scope: !12318)
!12413 = !DILocation(line: 3688, column: 6, scope: !12324)
!12414 = !DILocation(line: 3688, column: 11, scope: !12324)
!12415 = !DILocation(line: 3689, column: 17, scope: !12324)
!12416 = !DILocation(line: 3689, column: 20, scope: !12324)
!12417 = !DILocation(line: 3695, column: 55, scope: !12324)
!12418 = !{!2924, !2690, i64 0}
!12419 = !DILocation(line: 3695, column: 36, scope: !12324)
!12420 = !DILocation(line: 3695, column: 6, scope: !12324)
!12421 = !DILocation(line: 3696, column: 19, scope: !12324)
!12422 = !DILocation(line: 3696, column: 37, scope: !12324)
!12423 = !DILocation(line: 3696, column: 35, scope: !12324)
!12424 = !DILocation(line: 3696, column: 53, scope: !12324)
!12425 = !DILocation(line: 3696, column: 13, scope: !12324)
!12426 = !DILocation(line: 3696, column: 11, scope: !12324)
!12427 = !DILocation(line: 3697, column: 15, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 3697, column: 10)
!12429 = !DILocation(line: 3697, column: 10, scope: !12324)
!12430 = !DILocation(line: 3699, column: 3, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 3698, column: 6)
!12432 = !DILocation(line: 3700, column: 3, scope: !12431)
!12433 = !DILocation(line: 3701, column: 6, scope: !12431)
!12434 = !DILocation(line: 3702, column: 2, scope: !12325)
!12435 = !DILocation(line: 3702, column: 2, scope: !12324)
!12436 = !DILocation(line: 3704, column: 13, scope: !12325)
!12437 = !DILocation(line: 3704, column: 11, scope: !12325)
!12438 = !DILocation(line: 3706, column: 17, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 3706, column: 6)
!12440 = !DILocation(line: 3706, column: 24, scope: !12439)
!12441 = !DILocation(line: 3706, column: 6, scope: !12318)
!12442 = !DILocation(line: 3708, column: 21, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 3708, column: 10)
!12444 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 3707, column: 2)
!12445 = !DILocation(line: 3708, column: 10, scope: !12444)
!12446 = !DILocation(line: 3714, column: 33, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12443, file: !3, line: 3714, column: 15)
!12448 = !DILocation(line: 3728, column: 25, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3728, column: 7)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !3, line: 3721, column: 6)
!12451 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 3720, column: 10)
!12452 = !DILocation(line: 3728, column: 30, scope: !12449)
!12453 = !DILocation(line: 3728, column: 37, scope: !12449)
!12454 = !DILocation(line: 3728, column: 7, scope: !12450)
!12455 = !DILocation(line: 3731, column: 10, scope: !12444)
!12456 = !DILocation(line: 3724, column: 12, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3723, column: 3)
!12458 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3722, column: 7)
!12459 = !DILocation(line: 3724, column: 7, scope: !12457)
!12460 = !DILocation(line: 3725, column: 16, scope: !12457)
!12461 = !DILocation(line: 3725, column: 7, scope: !12457)
!12462 = !DILocation(line: 3726, column: 7, scope: !12457)
!12463 = !DILocation(line: 3733, column: 24, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 3733, column: 7)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !3, line: 3732, column: 6)
!12466 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 3731, column: 10)
!12467 = !DILocation(line: 3733, column: 31, scope: !12464)
!12468 = !DILocation(line: 3733, column: 7, scope: !12465)
!12469 = !DILocation(line: 3735, column: 12, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 3734, column: 3)
!12471 = !DILocation(line: 3735, column: 7, scope: !12470)
!12472 = !DILocation(line: 3736, column: 16, scope: !12470)
!12473 = !DILocation(line: 3736, column: 7, scope: !12470)
!12474 = !DILocation(line: 3737, column: 7, scope: !12470)
!12475 = !DILocation(line: 3739, column: 27, scope: !12465)
!12476 = !DILocation(line: 3739, column: 32, scope: !12465)
!12477 = !DILocation(line: 3740, column: 12, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 3740, column: 7)
!12479 = !DILocation(line: 3740, column: 20, scope: !12478)
!12480 = !DILocation(line: 3740, column: 29, scope: !12478)
!12481 = !DILocation(line: 3740, column: 36, scope: !12478)
!12482 = !DILocation(line: 3740, column: 7, scope: !12465)
!12483 = !DILocation(line: 3742, column: 25, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 3742, column: 12)
!12485 = !DILocation(line: 3742, column: 12, scope: !12478)
!12486 = !DILocation(line: 3750, column: 15, scope: !12332)
!12487 = !DILocation(line: 3750, column: 44, scope: !12332)
!12488 = !DILocation(line: 3750, column: 19, scope: !12332)
!12489 = !DILocation(line: 3744, column: 7, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12484, file: !3, line: 3743, column: 3)
!12491 = !DILocation(line: 3745, column: 16, scope: !12490)
!12492 = !DILocation(line: 3745, column: 7, scope: !12490)
!12493 = !DILocation(line: 3746, column: 7, scope: !12490)
!12494 = !DILocation(line: 3752, column: 22, scope: !12331)
!12495 = !DILocation(line: 3752, column: 17, scope: !12331)
!12496 = !DILocation(line: 3755, column: 13, scope: !12337)
!12497 = !DILocation(line: 3755, column: 10, scope: !12331)
!12498 = !DILocation(line: 3756, column: 12, scope: !12337)
!12499 = !DILocation(line: 3756, column: 3, scope: !12337)
!12500 = !DILocation(line: 3759, column: 19, scope: !12335)
!12501 = !DILocation(line: 3759, column: 38, scope: !12335)
!12502 = !DILocation(line: 3759, column: 49, scope: !12335)
!12503 = !DILocation(line: 3759, column: 57, scope: !12335)
!12504 = !DILocation(line: 3759, column: 7, scope: !12336)
!12505 = !DILocation(line: 3762, column: 12, scope: !12334)
!12506 = !DILocation(line: 3763, column: 12, scope: !12334)
!12507 = !DILocation(line: 3764, column: 12, scope: !12334)
!12508 = !DILocation(line: 3766, column: 11, scope: !12334)
!12509 = !DILocation(line: 3767, column: 22, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3766, column: 11)
!12511 = !DILocation(line: 3768, column: 16, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3768, column: 11)
!12513 = !DILocation(line: 3768, column: 11, scope: !12334)
!12514 = !DILocation(line: 3769, column: 19, scope: !12512)
!12515 = !DILocation(line: 3769, column: 4, scope: !12512)
!12516 = !DILocation(line: 3770, column: 29, scope: !12334)
!12517 = !DILocation(line: 3770, column: 11, scope: !12334)
!12518 = !DILocation(line: 3770, column: 19, scope: !12334)
!12519 = !DILocation(line: 3771, column: 21, scope: !12334)
!12520 = !DILocation(line: 3771, column: 11, scope: !12334)
!12521 = !DILocation(line: 3771, column: 19, scope: !12334)
!12522 = !DILocation(line: 3772, column: 23, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3772, column: 11)
!12524 = !DILocation(line: 3772, column: 11, scope: !12334)
!12525 = !DILocation(line: 3778, column: 21, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 3778, column: 7)
!12527 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3778, column: 7)
!12528 = !DILocation(line: 3778, column: 7, scope: !12527)
!12529 = !DILocation(line: 3779, column: 21, scope: !12526)
!12530 = !DILocation(line: 3779, column: 4, scope: !12526)
!12531 = distinct !{!12531, !12528, !12532}
!12532 = !DILocation(line: 3779, column: 48, scope: !12527)
!12533 = !DILocation(line: 3779, column: 38, scope: !12526)
!12534 = !DILocation(line: 3779, column: 13, scope: !12526)
!12535 = !DILocation(line: 3779, column: 34, scope: !12526)
!12536 = !DILocation(line: 3778, column: 33, scope: !12526)
!12537 = !DILocation(line: 3780, column: 18, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3780, column: 11)
!12539 = !DILocation(line: 3780, column: 11, scope: !12334)
!12540 = !DILocation(line: 3782, column: 4, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 3782, column: 4)
!12542 = distinct !DILexicalBlock(scope: !12538, file: !3, line: 3781, column: 7)
!12543 = !DILocation(line: 3782, column: 4, scope: !12542)
!12544 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !12545)
!12545 = distinct !DILocation(line: 3782, column: 4, scope: !12541)
!12546 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !12545)
!12547 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !12545)
!12548 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !12545)
!12549 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !12545)
!12550 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !12545)
!12551 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !12545)
!12552 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !12545)
!12553 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !12545)
!12554 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !12545)
!12555 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !12545)
!12556 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !12545)
!12557 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !12545)
!12558 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !12545)
!12559 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !12545)
!12560 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !12545)
!12561 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !12545)
!12562 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !12545)
!12563 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !12545)
!12564 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !12545)
!12565 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !12545)
!12566 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !12545)
!12567 = !DILocation(line: 3783, column: 4, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 3783, column: 4)
!12569 = !DILocation(line: 3761, column: 19, scope: !12334)
!12570 = !DILocation(line: 3783, column: 4, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12568, file: !3, line: 3783, column: 4)
!12572 = !DILocation(line: 3784, column: 21, scope: !12571)
!12573 = !DILocation(line: 3784, column: 33, scope: !12571)
!12574 = !DILocation(line: 3784, column: 42, scope: !12571)
!12575 = !DILocation(line: 3784, column: 29, scope: !12571)
!12576 = !DILocation(line: 3784, column: 8, scope: !12571)
!12577 = distinct !{!12577, !12567, !12578}
!12578 = !DILocation(line: 3784, column: 45, scope: !12568)
!12579 = !DILocation(line: 3774, column: 4, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3773, column: 7)
!12581 = !DILocation(line: 3775, column: 13, scope: !12580)
!12582 = !DILocation(line: 3775, column: 4, scope: !12580)
!12583 = !DILocation(line: 3790, column: 7, scope: !12336)
!12584 = !DILocation(line: 3796, column: 12, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 3790, column: 7)
!12586 = !DILocation(line: 3800, column: 29, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 3797, column: 3)
!12588 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 3796, column: 12)
!12589 = !DILocation(line: 3800, column: 11, scope: !12587)
!12590 = !DILocation(line: 3800, column: 19, scope: !12587)
!12591 = !DILocation(line: 3801, column: 29, scope: !12587)
!12592 = !{!6228, !2690, i64 24}
!12593 = !DILocation(line: 3801, column: 11, scope: !12587)
!12594 = !DILocation(line: 3801, column: 19, scope: !12587)
!12595 = !DILocation(line: 3802, column: 23, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 3802, column: 11)
!12597 = !DILocation(line: 3802, column: 11, scope: !12587)
!12598 = !DILocation(line: 3802, column: 15, scope: !12596)
!12599 = !DILocation(line: 3803, column: 19, scope: !12596)
!12600 = !DILocation(line: 3803, column: 4, scope: !12596)
!12601 = !{!5235, !2690, i64 4}
!12602 = !DILocation(line: 3806, column: 7, scope: !12336)
!12603 = !DILocation(line: 3806, column: 19, scope: !12336)
!12604 = !{!6228, !2690, i64 0}
!12605 = !DILocation(line: 3807, column: 22, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 3807, column: 7)
!12607 = !DILocation(line: 3793, column: 21, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 3791, column: 3)
!12609 = !DILocation(line: 3793, column: 39, scope: !12608)
!12610 = !DILocation(line: 3793, column: 44, scope: !12608)
!12611 = !DILocation(line: 3793, column: 11, scope: !12608)
!12612 = !DILocation(line: 3793, column: 19, scope: !12608)
!12613 = !DILocation(line: 3794, column: 22, scope: !12608)
!12614 = !DILocation(line: 3794, column: 7, scope: !12608)
!12615 = !DILocation(line: 3807, column: 33, scope: !12606)
!12616 = !{!6228, !2693, i64 16}
!12617 = !DILocation(line: 3807, column: 41, scope: !12606)
!12618 = !DILocation(line: 3807, column: 7, scope: !12336)
!12619 = !DILocation(line: 3809, column: 11, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 3808, column: 3)
!12621 = !DILocation(line: 3809, column: 19, scope: !12620)
!12622 = !DILocation(line: 3810, column: 7, scope: !12620)
!12623 = !DILocation(line: 3811, column: 16, scope: !12620)
!12624 = !DILocation(line: 3811, column: 7, scope: !12620)
!12625 = !DILocation(line: 3812, column: 3, scope: !12620)
!12626 = !DILocation(line: 3813, column: 12, scope: !12606)
!12627 = !DILocation(line: 3815, column: 43, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 3814, column: 3)
!12629 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 3813, column: 12)
!12630 = !DILocation(line: 3815, column: 21, scope: !12628)
!12631 = !DILocation(line: 3815, column: 11, scope: !12628)
!12632 = !DILocation(line: 3815, column: 19, scope: !12628)
!12633 = !DILocation(line: 3816, column: 7, scope: !12628)
!12634 = !DILocation(line: 3817, column: 16, scope: !12628)
!12635 = !DILocation(line: 3817, column: 7, scope: !12628)
!12636 = !DILocation(line: 3818, column: 3, scope: !12628)
!12637 = !DILocation(line: 3821, column: 21, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 3820, column: 3)
!12639 = !DILocation(line: 3821, column: 11, scope: !12638)
!12640 = !DILocation(line: 3821, column: 19, scope: !12638)
!12641 = !DILocation(line: 3822, column: 16, scope: !12638)
!12642 = !DILocation(line: 3822, column: 7, scope: !12638)
!12643 = !DILocation(line: 3825, column: 13, scope: !12331)
!12644 = !DILocation(line: 3825, column: 20, scope: !12331)
!12645 = !DILocation(line: 3826, column: 13, scope: !12331)
!12646 = !DILocation(line: 3826, column: 28, scope: !12331)
!12647 = !DILocation(line: 3827, column: 2, scope: !12332)
!12648 = !DILocation(line: 3831, column: 13, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12332, file: !3, line: 3829, column: 2)
!12650 = !DILocation(line: 3831, column: 20, scope: !12649)
!12651 = !DILocation(line: 3832, column: 29, scope: !12649)
!12652 = !DILocation(line: 3832, column: 27, scope: !12649)
!12653 = !DILocation(line: 3833, column: 15, scope: !12649)
!12654 = !DILocation(line: 3833, column: 6, scope: !12649)
!12655 = !DILocation(line: 3837, column: 5, scope: !12306)
!12656 = !DILocation(line: 3838, column: 1, scope: !12306)
!12657 = distinct !DISubprogram(name: "getpos_both", scope: !3, file: !3, line: 4057, type: !12658, isLocal: true, isDefinition: true, scopeLine: 4062, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12660)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{null, !2305, !2305, !756, !756}
!12660 = !{!12661, !12662, !12663, !12664, !12665, !12666, !12667, !12668, !12669, !12670, !12675, !12676}
!12661 = !DILocalVariable(name: "argvars", arg: 1, scope: !12657, file: !3, line: 4058, type: !2305)
!12662 = !DILocalVariable(name: "rettv", arg: 2, scope: !12657, file: !3, line: 4059, type: !2305)
!12663 = !DILocalVariable(name: "getcurpos", arg: 3, scope: !12657, file: !3, line: 4060, type: !756)
!12664 = !DILocalVariable(name: "charcol", arg: 4, scope: !12657, file: !3, line: 4061, type: !756)
!12665 = !DILocalVariable(name: "fp", scope: !12657, file: !3, line: 4063, type: !3956)
!12666 = !DILocalVariable(name: "pos", scope: !12657, file: !3, line: 4064, type: !1315)
!12667 = !DILocalVariable(name: "wp", scope: !12657, file: !3, line: 4065, type: !1135)
!12668 = !DILocalVariable(name: "l", scope: !12657, file: !3, line: 4066, type: !885)
!12669 = !DILocalVariable(name: "fnum", scope: !12657, file: !3, line: 4067, type: !756)
!12670 = !DILocalVariable(name: "save_set_curswant", scope: !12671, file: !3, line: 4105, type: !756)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !3, line: 4104, column: 2)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 4103, column: 6)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4070, column: 5)
!12674 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 4069, column: 9)
!12675 = !DILocalVariable(name: "save_curswant", scope: !12671, file: !3, line: 4106, type: !766)
!12676 = !DILocalVariable(name: "save_virtcol", scope: !12671, file: !3, line: 4107, type: !766)
!12677 = !DILocation(line: 4058, column: 15, scope: !12657)
!12678 = !DILocation(line: 4059, column: 15, scope: !12657)
!12679 = !DILocation(line: 4060, column: 10, scope: !12657)
!12680 = !DILocation(line: 4061, column: 10, scope: !12657)
!12681 = !DILocation(line: 4063, column: 12, scope: !12657)
!12682 = !DILocation(line: 4064, column: 5, scope: !12657)
!12683 = !DILocation(line: 4065, column: 17, scope: !12657)
!12684 = !DILocation(line: 4065, column: 12, scope: !12657)
!12685 = !DILocation(line: 4067, column: 5, scope: !12657)
!12686 = !DILocation(line: 4067, column: 10, scope: !12657)
!12687 = !DILocation(line: 4069, column: 9, scope: !12674)
!12688 = !DILocation(line: 4069, column: 33, scope: !12674)
!12689 = !DILocation(line: 4069, column: 9, scope: !12657)
!12690 = !DILocation(line: 4071, column: 18, scope: !12673)
!12691 = !DILocation(line: 4066, column: 13, scope: !12657)
!12692 = !DILocation(line: 4072, column: 6, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 4072, column: 6)
!12694 = !DILocation(line: 4072, column: 6, scope: !12673)
!12695 = !DILocation(line: 4074, column: 21, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !3, line: 4074, column: 10)
!12697 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 4073, column: 2)
!12698 = !DILocation(line: 4074, column: 28, scope: !12696)
!12699 = !DILocation(line: 4074, column: 10, scope: !12697)
!12700 = !DILocation(line: 4076, column: 8, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !3, line: 4075, column: 6)
!12702 = !DILocation(line: 4077, column: 10, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 4077, column: 7)
!12704 = !DILocation(line: 4078, column: 17, scope: !12703)
!12705 = !DILocation(line: 4077, column: 7, scope: !12701)
!12706 = !DILocation(line: 4081, column: 9, scope: !12696)
!12707 = !DILocation(line: 4081, column: 17, scope: !12696)
!12708 = !DILocation(line: 4082, column: 13, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12697, file: !3, line: 4082, column: 10)
!12710 = !DILocation(line: 4082, column: 24, scope: !12709)
!12711 = !DILocation(line: 4082, column: 21, scope: !12709)
!12712 = !DILocation(line: 4084, column: 9, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 4083, column: 6)
!12714 = !DILocation(line: 4086, column: 34, scope: !12713)
!12715 = !DILocation(line: 4086, column: 48, scope: !12713)
!12716 = !DILocation(line: 4086, column: 44, scope: !12713)
!12717 = !DILocation(line: 4086, column: 58, scope: !12713)
!12718 = !DILocation(line: 4086, column: 7, scope: !12713)
!12719 = !DILocation(line: 4085, column: 11, scope: !12713)
!12720 = !DILocation(line: 4088, column: 6, scope: !12713)
!12721 = !DILocation(line: 4091, column: 11, scope: !12693)
!12722 = !DILocation(line: 4092, column: 6, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 4092, column: 6)
!12724 = !DILocation(line: 4092, column: 11, scope: !12723)
!12725 = !DILocation(line: 4092, column: 6, scope: !12673)
!12726 = !DILocation(line: 4093, column: 28, scope: !12723)
!12727 = !DILocation(line: 4093, column: 6, scope: !12723)
!12728 = !DILocation(line: 4095, column: 6, scope: !12723)
!12729 = !DILocation(line: 4096, column: 28, scope: !12673)
!12730 = !DILocation(line: 4096, column: 24, scope: !12673)
!12731 = !DILocation(line: 4096, column: 2, scope: !12673)
!12732 = !DILocation(line: 4098, column: 2, scope: !12673)
!12733 = !DILocation(line: 4096, column: 56, scope: !12673)
!12734 = !DILocation(line: 4099, column: 28, scope: !12673)
!12735 = !DILocation(line: 4099, column: 32, scope: !12673)
!12736 = !DILocation(line: 4099, column: 61, scope: !12673)
!12737 = !DILocation(line: 4099, column: 24, scope: !12673)
!12738 = !DILocation(line: 4101, column: 56, scope: !12673)
!12739 = !DILocation(line: 4101, column: 39, scope: !12673)
!12740 = !DILocation(line: 4101, column: 24, scope: !12673)
!12741 = !DILocation(line: 4101, column: 2, scope: !12673)
!12742 = !DILocation(line: 4103, column: 6, scope: !12673)
!12743 = !DILocation(line: 4105, column: 34, scope: !12671)
!12744 = !DILocation(line: 4105, column: 42, scope: !12671)
!12745 = !DILocation(line: 4105, column: 14, scope: !12671)
!12746 = !DILocation(line: 4106, column: 38, scope: !12671)
!12747 = !DILocation(line: 4106, column: 14, scope: !12671)
!12748 = !DILocation(line: 4107, column: 37, scope: !12671)
!12749 = !DILocation(line: 4107, column: 14, scope: !12671)
!12750 = !DILocation(line: 4109, column: 13, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 4109, column: 10)
!12752 = !DILocation(line: 4109, column: 10, scope: !12671)
!12753 = !DILocation(line: 4110, column: 3, scope: !12751)
!12754 = !DILocation(line: 4111, column: 31, scope: !12671)
!12755 = !DILocation(line: 4111, column: 28, scope: !12671)
!12756 = !DILocation(line: 4111, column: 49, scope: !12671)
!12757 = !DILocation(line: 4111, column: 60, scope: !12671)
!12758 = !DILocation(line: 4111, column: 45, scope: !12671)
!12759 = !DILocation(line: 4112, column: 32, scope: !12671)
!12760 = !DILocation(line: 4112, column: 60, scope: !12671)
!12761 = !DILocation(line: 4111, column: 6, scope: !12671)
!12762 = !DILocation(line: 4116, column: 16, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 4116, column: 10)
!12764 = !DILocation(line: 4116, column: 13, scope: !12763)
!12765 = !DILocation(line: 4116, column: 26, scope: !12763)
!12766 = !DILocation(line: 4116, column: 23, scope: !12763)
!12767 = !DILocation(line: 4118, column: 11, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 4117, column: 6)
!12769 = !DILocation(line: 4118, column: 26, scope: !12768)
!12770 = !DILocation(line: 4119, column: 11, scope: !12768)
!12771 = !DILocation(line: 4119, column: 22, scope: !12768)
!12772 = !DILocation(line: 4120, column: 11, scope: !12768)
!12773 = !DILocation(line: 4120, column: 21, scope: !12768)
!12774 = !DILocation(line: 4121, column: 11, scope: !12768)
!12775 = !DILocation(line: 4121, column: 19, scope: !12768)
!12776 = !{!4151, !2690, i64 668}
!12777 = !DILocation(line: 4122, column: 6, scope: !12768)
!12778 = !DILocation(line: 4126, column: 14, scope: !12674)
!12779 = !DILocation(line: 4126, column: 23, scope: !12674)
!12780 = !DILocation(line: 4127, column: 1, scope: !12657)
!12781 = distinct !DISubprogram(name: "find_some_match", scope: !3, file: !3, line: 6507, type: !12782, isLocal: true, isDefinition: true, scopeLine: 6508, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12785)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{null, !2305, !2305, !12784}
!12784 = !DIDerivedType(tag: DW_TAG_typedef, name: "matchtype_T", file: !3, line: 6504, baseType: !690)
!12785 = !{!12786, !12787, !12788, !12789, !12790, !12791, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799, !12800, !12801, !12802, !12803, !12804, !12805, !12808, !12815, !12816, !12817, !12818}
!12786 = !DILocalVariable(name: "argvars", arg: 1, scope: !12781, file: !3, line: 6507, type: !2305)
!12787 = !DILocalVariable(name: "rettv", arg: 2, scope: !12781, file: !3, line: 6507, type: !2305)
!12788 = !DILocalVariable(name: "type", arg: 3, scope: !12781, file: !3, line: 6507, type: !12784)
!12789 = !DILocalVariable(name: "str", scope: !12781, file: !3, line: 6509, type: !759)
!12790 = !DILocalVariable(name: "len", scope: !12781, file: !3, line: 6510, type: !765)
!12791 = !DILocalVariable(name: "expr", scope: !12781, file: !3, line: 6511, type: !759)
!12792 = !DILocalVariable(name: "pat", scope: !12781, file: !3, line: 6512, type: !759)
!12793 = !DILocalVariable(name: "regmatch", scope: !12781, file: !3, line: 6513, type: !1191)
!12794 = !DILocalVariable(name: "patbuf", scope: !12781, file: !3, line: 6514, type: !3499)
!12795 = !DILocalVariable(name: "strbuf", scope: !12781, file: !3, line: 6515, type: !3499)
!12796 = !DILocalVariable(name: "save_cpo", scope: !12781, file: !3, line: 6516, type: !759)
!12797 = !DILocalVariable(name: "start", scope: !12781, file: !3, line: 6517, type: !765)
!12798 = !DILocalVariable(name: "nth", scope: !12781, file: !3, line: 6518, type: !765)
!12799 = !DILocalVariable(name: "startcol", scope: !12781, file: !3, line: 6519, type: !766)
!12800 = !DILocalVariable(name: "match", scope: !12781, file: !3, line: 6520, type: !756)
!12801 = !DILocalVariable(name: "l", scope: !12781, file: !3, line: 6521, type: !885)
!12802 = !DILocalVariable(name: "li", scope: !12781, file: !3, line: 6522, type: !890)
!12803 = !DILocalVariable(name: "idx", scope: !12781, file: !3, line: 6523, type: !765)
!12804 = !DILocalVariable(name: "tofree", scope: !12781, file: !3, line: 6524, type: !759)
!12805 = !DILocalVariable(name: "error", scope: !12806, file: !3, line: 6577, type: !756)
!12806 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 6576, column: 5)
!12807 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6575, column: 9)
!12808 = !DILocalVariable(name: "li1", scope: !12809, file: !3, line: 6663, type: !890)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 6662, column: 6)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 6661, column: 10)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 6660, column: 2)
!12812 = distinct !DILexicalBlock(scope: !12813, file: !3, line: 6659, column: 6)
!12813 = distinct !DILexicalBlock(scope: !12814, file: !3, line: 6615, column: 5)
!12814 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6614, column: 9)
!12815 = !DILocalVariable(name: "li2", scope: !12809, file: !3, line: 6664, type: !890)
!12816 = !DILocalVariable(name: "li3", scope: !12809, file: !3, line: 6665, type: !890)
!12817 = !DILocalVariable(name: "li4", scope: !12809, file: !3, line: 6666, type: !890)
!12818 = !DILocalVariable(name: "i", scope: !12819, file: !3, line: 6680, type: !756)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 6679, column: 6)
!12820 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 6678, column: 15)
!12821 = !DILocation(line: 6507, column: 27, scope: !12781)
!12822 = !DILocation(line: 6507, column: 46, scope: !12781)
!12823 = !DILocation(line: 6507, column: 65, scope: !12781)
!12824 = !DILocation(line: 6509, column: 13, scope: !12781)
!12825 = !DILocation(line: 6510, column: 10, scope: !12781)
!12826 = !DILocation(line: 6511, column: 13, scope: !12781)
!12827 = !DILocation(line: 6513, column: 5, scope: !12781)
!12828 = !DILocation(line: 6514, column: 5, scope: !12781)
!12829 = !DILocation(line: 6514, column: 12, scope: !12781)
!12830 = !DILocation(line: 6515, column: 5, scope: !12781)
!12831 = !DILocation(line: 6515, column: 12, scope: !12781)
!12832 = !DILocation(line: 6517, column: 10, scope: !12781)
!12833 = !DILocation(line: 6518, column: 10, scope: !12781)
!12834 = !DILocation(line: 6519, column: 13, scope: !12781)
!12835 = !DILocation(line: 6520, column: 10, scope: !12781)
!12836 = !DILocation(line: 6521, column: 13, scope: !12781)
!12837 = !DILocation(line: 6522, column: 17, scope: !12781)
!12838 = !DILocation(line: 6523, column: 10, scope: !12781)
!12839 = !DILocation(line: 6524, column: 5, scope: !12781)
!12840 = !DILocation(line: 6524, column: 13, scope: !12781)
!12841 = !DILocation(line: 6527, column: 16, scope: !12781)
!12842 = !DILocation(line: 6516, column: 13, scope: !12781)
!12843 = !DILocation(line: 6528, column: 13, scope: !12781)
!12844 = !DILocation(line: 6528, column: 11, scope: !12781)
!12845 = !DILocation(line: 6530, column: 12, scope: !12781)
!12846 = !DILocation(line: 6530, column: 17, scope: !12781)
!12847 = !DILocation(line: 6530, column: 26, scope: !12781)
!12848 = !DILocation(line: 6531, column: 36, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6531, column: 9)
!12850 = !DILocation(line: 6531, column: 28, scope: !12849)
!12851 = !DILocation(line: 6535, column: 6, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 6535, column: 6)
!12853 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 6532, column: 5)
!12854 = !DILocation(line: 6535, column: 30, scope: !12852)
!12855 = !DILocation(line: 6535, column: 6, scope: !12853)
!12856 = !DILocation(line: 6538, column: 3, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 6537, column: 6)
!12858 = !DILocation(line: 6538, column: 38, scope: !12857)
!12859 = !DILocation(line: 6538, column: 7, scope: !12857)
!12860 = !DILocation(line: 6539, column: 27, scope: !12857)
!12861 = !DILocation(line: 6540, column: 7, scope: !12857)
!12862 = !DILocation(line: 6540, column: 41, scope: !12857)
!12863 = !DILocation(line: 6540, column: 10, scope: !12857)
!12864 = !DILocation(line: 6541, column: 27, scope: !12857)
!12865 = !DILocation(line: 6542, column: 7, scope: !12857)
!12866 = !DILocation(line: 6542, column: 41, scope: !12857)
!12867 = !DILocation(line: 6542, column: 10, scope: !12857)
!12868 = !DILocation(line: 6543, column: 27, scope: !12857)
!12869 = !DILocation(line: 6544, column: 7, scope: !12857)
!12870 = !DILocation(line: 6544, column: 41, scope: !12857)
!12871 = !DILocation(line: 6544, column: 10, scope: !12857)
!12872 = !DILocation(line: 6545, column: 27, scope: !12857)
!12873 = !DILocation(line: 6537, column: 6, scope: !12853)
!12874 = !DILocation(line: 6547, column: 25, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 6546, column: 2)
!12876 = !DILocation(line: 6547, column: 3, scope: !12875)
!12877 = !DILocation(line: 6548, column: 22, scope: !12875)
!12878 = !DILocation(line: 6549, column: 3, scope: !12875)
!12879 = !DILocation(line: 6552, column: 19, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 6552, column: 14)
!12881 = !DILocation(line: 6552, column: 14, scope: !12849)
!12882 = !DILocation(line: 6554, column: 9, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 6553, column: 5)
!12884 = !DILocation(line: 6554, column: 16, scope: !12883)
!12885 = !DILocation(line: 6555, column: 14, scope: !12883)
!12886 = !DILocation(line: 6555, column: 23, scope: !12883)
!12887 = !DILocation(line: 6556, column: 5, scope: !12883)
!12888 = !DILocation(line: 6558, column: 20, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6558, column: 9)
!12890 = !DILocation(line: 6558, column: 27, scope: !12889)
!12891 = !DILocation(line: 6558, column: 9, scope: !12781)
!12892 = !DILocation(line: 6560, column: 22, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 6560, column: 6)
!12894 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 6559, column: 5)
!12895 = !DILocation(line: 6560, column: 27, scope: !12893)
!12896 = !DILocation(line: 6560, column: 35, scope: !12893)
!12897 = !DILocation(line: 6560, column: 6, scope: !12894)
!12898 = !DILocation(line: 6562, column: 2, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 6562, column: 2)
!12900 = !DILocation(line: 6562, column: 2, scope: !12894)
!12901 = !DILocation(line: 7369, column: 32, scope: !3613, inlinedAt: !12902)
!12902 = distinct !DILocation(line: 6562, column: 2, scope: !12899)
!12903 = !DILocation(line: 7371, column: 31, scope: !3613, inlinedAt: !12902)
!12904 = !DILocation(line: 7371, column: 43, scope: !3613, inlinedAt: !12902)
!12905 = !DILocation(line: 7371, column: 17, scope: !3613, inlinedAt: !12902)
!12906 = !DILocation(line: 7372, column: 41, scope: !3613, inlinedAt: !12902)
!12907 = !DILocation(line: 7372, column: 17, scope: !3613, inlinedAt: !12902)
!12908 = !DILocation(line: 7373, column: 40, scope: !3613, inlinedAt: !12902)
!12909 = !DILocation(line: 7373, column: 13, scope: !3613, inlinedAt: !12902)
!12910 = !DILocation(line: 7376, column: 20, scope: !3613, inlinedAt: !12902)
!12911 = !DILocation(line: 7378, column: 11, scope: !3613, inlinedAt: !12902)
!12912 = !DILocation(line: 7378, column: 18, scope: !3613, inlinedAt: !12902)
!12913 = !DILocation(line: 7374, column: 17, scope: !3613, inlinedAt: !12902)
!12914 = !DILocation(line: 7380, column: 28, scope: !3635, inlinedAt: !12902)
!12915 = !DILocation(line: 7380, column: 36, scope: !3635, inlinedAt: !12902)
!12916 = !DILocation(line: 7380, column: 47, scope: !3635, inlinedAt: !12902)
!12917 = !DILocation(line: 7380, column: 21, scope: !3635, inlinedAt: !12902)
!12918 = !DILocation(line: 7380, column: 5, scope: !3636, inlinedAt: !12902)
!12919 = !DILocation(line: 7377, column: 28, scope: !3613, inlinedAt: !12902)
!12920 = !DILocation(line: 7381, column: 6, scope: !3646, inlinedAt: !12902)
!12921 = !DILocation(line: 7381, column: 47, scope: !3646, inlinedAt: !12902)
!12922 = !DILocation(line: 7380, column: 57, scope: !3635, inlinedAt: !12902)
!12923 = !DILocation(line: 7381, column: 6, scope: !3635, inlinedAt: !12902)
!12924 = !DILocation(line: 6563, column: 10, scope: !12894)
!12925 = !DILocation(line: 6567, column: 15, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 6566, column: 5)
!12927 = !DILocation(line: 6568, column: 14, scope: !12926)
!12928 = !DILocation(line: 6571, column: 34, scope: !12781)
!12929 = !DILocation(line: 6571, column: 11, scope: !12781)
!12930 = !DILocation(line: 6512, column: 13, scope: !12781)
!12931 = !DILocation(line: 6572, column: 13, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6572, column: 9)
!12933 = !DILocation(line: 6572, column: 9, scope: !12781)
!12934 = !DILocation(line: 6575, column: 9, scope: !12807)
!12935 = !DILocation(line: 6575, column: 20, scope: !12807)
!12936 = !DILocation(line: 6575, column: 27, scope: !12807)
!12937 = !DILocation(line: 6575, column: 9, scope: !12781)
!12938 = !DILocation(line: 6577, column: 2, scope: !12806)
!12939 = !DILocation(line: 6577, column: 10, scope: !12806)
!12940 = !DILocation(line: 6579, column: 16, scope: !12806)
!12941 = !DILocation(line: 6580, column: 6, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12806, file: !3, line: 6580, column: 6)
!12943 = !DILocation(line: 6580, column: 6, scope: !12806)
!12944 = !DILocation(line: 6582, column: 8, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12806, file: !3, line: 6582, column: 6)
!12946 = !DILocation(line: 6582, column: 6, scope: !12806)
!12947 = !DILocation(line: 6584, column: 11, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 6583, column: 2)
!12949 = !DILocation(line: 6585, column: 13, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 6585, column: 10)
!12951 = !DILocation(line: 6585, column: 10, scope: !12948)
!12952 = !DILocation(line: 6591, column: 10, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 6590, column: 2)
!12954 = !DILocation(line: 6593, column: 16, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 6593, column: 10)
!12956 = !DILocation(line: 6593, column: 10, scope: !12953)
!12957 = !DILocation(line: 6598, column: 21, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 6598, column: 10)
!12959 = !DILocation(line: 6598, column: 28, scope: !12958)
!12960 = !DILocation(line: 6598, column: 10, scope: !12953)
!12961 = !DILocation(line: 6599, column: 14, scope: !12958)
!12962 = !DILocation(line: 6607, column: 6, scope: !12806)
!12963 = !DILocation(line: 6602, column: 7, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 6601, column: 6)
!12965 = !DILocation(line: 6603, column: 7, scope: !12964)
!12966 = !DILocation(line: 6587, column: 24, scope: !12948)
!12967 = !DILocation(line: 6587, column: 12, scope: !12948)
!12968 = !DILocation(line: 6607, column: 17, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12806, file: !3, line: 6607, column: 6)
!12970 = !DILocation(line: 6607, column: 24, scope: !12969)
!12971 = !DILocation(line: 6607, column: 6, scope: !12969)
!12972 = !DILocation(line: 6608, column: 18, scope: !12969)
!12973 = !DILocation(line: 6608, column: 6, scope: !12969)
!12974 = !DILocation(line: 6611, column: 5, scope: !12807)
!12975 = !DILocation(line: 6609, column: 6, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12806, file: !3, line: 6609, column: 6)
!12977 = !DILocation(line: 6613, column: 24, scope: !12781)
!12978 = !DILocation(line: 6613, column: 14, scope: !12781)
!12979 = !DILocation(line: 6613, column: 22, scope: !12781)
!12980 = !DILocation(line: 6614, column: 26, scope: !12814)
!12981 = !DILocation(line: 6614, column: 9, scope: !12781)
!12982 = !DILocation(line: 6616, column: 19, scope: !12813)
!12983 = !DILocation(line: 6616, column: 11, scope: !12813)
!12984 = !DILocation(line: 6616, column: 17, scope: !12813)
!12985 = !DILocation(line: 6618, column: 2, scope: !12813)
!12986 = !DILocation(line: 6620, column: 10, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !3, line: 6619, column: 2)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 6618, column: 2)
!12989 = distinct !DILexicalBlock(scope: !12813, file: !3, line: 6618, column: 2)
!12990 = !DILocation(line: 6622, column: 10, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 6622, column: 7)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 6621, column: 6)
!12993 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 6620, column: 10)
!12994 = !DILocation(line: 6622, column: 7, scope: !12992)
!12995 = !DILocation(line: 6627, column: 12, scope: !12992)
!12996 = !DILocation(line: 6627, column: 3, scope: !12992)
!12997 = !DILocation(line: 6628, column: 33, scope: !12992)
!12998 = !DILocation(line: 6628, column: 16, scope: !12992)
!12999 = !DILocation(line: 6629, column: 11, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 6629, column: 7)
!13001 = !DILocation(line: 6629, column: 7, scope: !12992)
!13002 = !DILocation(line: 6513, column: 16, scope: !12781)
!13003 = !DILocation(line: 6633, column: 14, scope: !12987)
!13004 = !DILocation(line: 6635, column: 10, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 6635, column: 10)
!13006 = !DILocation(line: 6635, column: 16, scope: !13005)
!13007 = !DILocation(line: 6635, column: 19, scope: !13005)
!13008 = !DILocation(line: 6635, column: 25, scope: !13005)
!13009 = !DILocation(line: 6635, column: 10, scope: !12987)
!13010 = !DILocation(line: 6637, column: 20, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 6637, column: 10)
!13012 = !DILocation(line: 6641, column: 10, scope: !12987)
!13013 = !DILocation(line: 6643, column: 12, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 6642, column: 6)
!13015 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 6641, column: 10)
!13016 = !DILocation(line: 6644, column: 3, scope: !13014)
!13017 = !DILocation(line: 6645, column: 6, scope: !13014)
!13018 = distinct !{!13018, !13019, !13020}
!13019 = !DILocation(line: 6618, column: 2, scope: !12989)
!13020 = !DILocation(line: 6657, column: 2, scope: !12989)
!13021 = !DILocation(line: 6648, column: 24, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 6647, column: 6)
!13023 = !DILocation(line: 6649, column: 13, scope: !13022)
!13024 = !DILocation(line: 6649, column: 11, scope: !13022)
!13025 = !DILocation(line: 6649, column: 9, scope: !13022)
!13026 = !DILocation(line: 6649, column: 45, scope: !13022)
!13027 = !DILocation(line: 6648, column: 14, scope: !13022)
!13028 = !DILocation(line: 6650, column: 16, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 6650, column: 7)
!13030 = !DILocation(line: 6651, column: 11, scope: !13029)
!13031 = !DILocation(line: 6651, column: 18, scope: !13029)
!13032 = !DILocation(line: 6651, column: 32, scope: !13029)
!13033 = !DILocation(line: 6651, column: 29, scope: !13029)
!13034 = !DILocation(line: 6650, column: 7, scope: !13022)
!13035 = !DILocation(line: 6659, column: 6, scope: !12812)
!13036 = !DILocation(line: 6659, column: 6, scope: !12813)
!13037 = !DILocation(line: 6661, column: 10, scope: !12811)
!13038 = !DILocation(line: 6663, column: 33, scope: !12809)
!13039 = !DILocation(line: 6663, column: 41, scope: !12809)
!13040 = !DILocation(line: 6663, column: 15, scope: !12809)
!13041 = !DILocation(line: 6664, column: 26, scope: !12809)
!13042 = !DILocation(line: 6664, column: 15, scope: !12809)
!13043 = !DILocation(line: 6665, column: 26, scope: !12809)
!13044 = !DILocation(line: 6665, column: 15, scope: !12809)
!13045 = !DILocation(line: 6666, column: 26, scope: !12809)
!13046 = !DILocation(line: 6666, column: 15, scope: !12809)
!13047 = !DILocation(line: 6668, column: 23, scope: !12809)
!13048 = !DILocation(line: 6668, column: 28, scope: !12809)
!13049 = !DILocation(line: 6668, column: 3, scope: !12809)
!13050 = !DILocation(line: 6669, column: 43, scope: !12809)
!13051 = !DILocation(line: 6670, column: 6, scope: !12809)
!13052 = !DILocation(line: 6670, column: 23, scope: !12809)
!13053 = !DILocation(line: 6669, column: 30, scope: !12809)
!13054 = !DILocation(line: 6669, column: 28, scope: !12809)
!13055 = !DILocation(line: 6672, column: 25, scope: !12809)
!13056 = !DILocation(line: 6672, column: 44, scope: !12809)
!13057 = !DILocation(line: 6671, column: 19, scope: !12809)
!13058 = !DILocation(line: 6671, column: 28, scope: !12809)
!13059 = !DILocation(line: 6674, column: 20, scope: !12809)
!13060 = !DILocation(line: 6674, column: 37, scope: !12809)
!13061 = !DILocation(line: 6673, column: 19, scope: !12809)
!13062 = !DILocation(line: 6673, column: 28, scope: !12809)
!13063 = !DILocation(line: 6675, column: 7, scope: !12809)
!13064 = !DILocation(line: 6676, column: 23, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 6675, column: 7)
!13066 = !DILocation(line: 6676, column: 32, scope: !13065)
!13067 = !DILocation(line: 6676, column: 7, scope: !13065)
!13068 = !DILocation(line: 6678, column: 15, scope: !12810)
!13069 = !DILocation(line: 6680, column: 7, scope: !12819)
!13070 = !DILocation(line: 6683, column: 3, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 6683, column: 3)
!13072 = !DILocation(line: 6685, column: 11, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13074, file: !3, line: 6685, column: 11)
!13074 = distinct !DILexicalBlock(scope: !13075, file: !3, line: 6684, column: 3)
!13075 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 6683, column: 3)
!13076 = !DILocation(line: 6685, column: 28, scope: !13073)
!13077 = !DILocation(line: 6685, column: 11, scope: !13074)
!13078 = !DILocation(line: 6687, column: 8, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 6687, column: 8)
!13080 = distinct !DILexicalBlock(scope: !13073, file: !3, line: 6686, column: 7)
!13081 = !DILocation(line: 6688, column: 29, scope: !13079)
!13082 = !DILocation(line: 6687, column: 8, scope: !13080)
!13083 = !DILocation(line: 6692, column: 5, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13073, file: !3, line: 6691, column: 16)
!13085 = !DILocation(line: 6693, column: 28, scope: !13084)
!13086 = !DILocation(line: 6693, column: 5, scope: !13084)
!13087 = !DILocation(line: 6691, column: 16, scope: !13084)
!13088 = !DILocation(line: 6694, column: 8, scope: !13084)
!13089 = !DILocation(line: 6691, column: 16, scope: !13073)
!13090 = !DILocation(line: 6683, column: 28, scope: !13075)
!13091 = !DILocation(line: 6683, column: 17, scope: !13075)
!13092 = distinct !{!13092, !13070, !13093}
!13093 = !DILocation(line: 6696, column: 3, scope: !13071)
!13094 = !DILocation(line: 6701, column: 7, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 6699, column: 6)
!13096 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 6698, column: 15)
!13097 = !DILocation(line: 6702, column: 20, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13095, file: !3, line: 6701, column: 7)
!13099 = !DILocation(line: 6702, column: 7, scope: !13098)
!13100 = !DILocation(line: 6704, column: 43, scope: !13098)
!13101 = !DILocation(line: 6705, column: 6, scope: !13098)
!13102 = !DILocation(line: 6705, column: 23, scope: !13098)
!13103 = !DILocation(line: 6704, column: 30, scope: !13098)
!13104 = !DILocation(line: 6704, column: 19, scope: !13098)
!13105 = !DILocation(line: 6704, column: 28, scope: !13098)
!13106 = !DILocation(line: 6707, column: 15, scope: !13096)
!13107 = !DILocation(line: 6708, column: 24, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 6707, column: 15)
!13109 = !DILocation(line: 6708, column: 3, scope: !13108)
!13110 = !DILocation(line: 6711, column: 12, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 6711, column: 7)
!13112 = distinct !DILexicalBlock(scope: !13108, file: !3, line: 6710, column: 6)
!13113 = !DILocation(line: 6716, column: 20, scope: !13111)
!13114 = !DILocation(line: 6713, column: 25, scope: !13111)
!13115 = !DILocation(line: 6711, column: 7, scope: !13112)
!13116 = !DILocation(line: 6717, column: 45, scope: !13112)
!13117 = !DILocation(line: 6717, column: 24, scope: !13112)
!13118 = !DILocation(line: 6720, column: 23, scope: !12813)
!13119 = !DILocation(line: 6720, column: 2, scope: !12813)
!13120 = !DILocation(line: 6721, column: 5, scope: !12813)
!13121 = !DILocation(line: 6724, column: 32, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6724, column: 9)
!13123 = !DILocation(line: 6724, column: 27, scope: !13122)
!13124 = !DILocation(line: 6724, column: 55, scope: !13122)
!13125 = !DILocation(line: 6724, column: 62, scope: !13122)
!13126 = !DILocation(line: 6724, column: 9, scope: !12781)
!13127 = !DILocation(line: 6727, column: 32, scope: !13122)
!13128 = !DILocation(line: 6727, column: 42, scope: !13122)
!13129 = !DILocation(line: 6726, column: 2, scope: !13122)
!13130 = !DILocation(line: 6728, column: 14, scope: !12781)
!13131 = !DILocation(line: 6728, column: 5, scope: !12781)
!13132 = !DILocation(line: 6729, column: 11, scope: !12781)
!13133 = !DILocation(line: 6730, column: 1, scope: !12781)
!13134 = distinct !DISubprogram(name: "max_min", scope: !3, file: !3, line: 6778, type: !3480, isLocal: true, isDefinition: true, scopeLine: 6779, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !13135)
!13135 = !{!13136, !13137, !13138, !13139, !13140, !13141, !13142, !13145, !13146, !13149, !13150, !13151}
!13136 = !DILocalVariable(name: "argvars", arg: 1, scope: !13134, file: !3, line: 6778, type: !2305)
!13137 = !DILocalVariable(name: "rettv", arg: 2, scope: !13134, file: !3, line: 6778, type: !2305)
!13138 = !DILocalVariable(name: "domax", arg: 3, scope: !13134, file: !3, line: 6778, type: !756)
!13139 = !DILocalVariable(name: "n", scope: !13134, file: !3, line: 6780, type: !757)
!13140 = !DILocalVariable(name: "i", scope: !13134, file: !3, line: 6781, type: !757)
!13141 = !DILocalVariable(name: "error", scope: !13134, file: !3, line: 6782, type: !756)
!13142 = !DILocalVariable(name: "l", scope: !13143, file: !3, line: 6786, type: !885)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 6785, column: 5)
!13144 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 6784, column: 9)
!13145 = !DILocalVariable(name: "li", scope: !13143, file: !3, line: 6787, type: !890)
!13146 = !DILocalVariable(name: "d", scope: !13147, file: !3, line: 6825, type: !929)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 6824, column: 5)
!13148 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 6823, column: 14)
!13149 = !DILocalVariable(name: "first", scope: !13147, file: !3, line: 6826, type: !756)
!13150 = !DILocalVariable(name: "hi", scope: !13147, file: !3, line: 6827, type: !949)
!13151 = !DILocalVariable(name: "todo", scope: !13147, file: !3, line: 6828, type: !756)
!13152 = !DILocation(line: 6778, column: 19, scope: !13134)
!13153 = !DILocation(line: 6778, column: 38, scope: !13134)
!13154 = !DILocation(line: 6778, column: 49, scope: !13134)
!13155 = !DILocation(line: 6780, column: 17, scope: !13134)
!13156 = !DILocation(line: 6782, column: 5, scope: !13134)
!13157 = !DILocation(line: 6782, column: 10, scope: !13134)
!13158 = !DILocation(line: 6784, column: 20, scope: !13144)
!13159 = !DILocation(line: 6784, column: 9, scope: !13134)
!13160 = !DILocation(line: 6789, column: 17, scope: !13143)
!13161 = !DILocation(line: 6789, column: 22, scope: !13143)
!13162 = !DILocation(line: 6786, column: 11, scope: !13143)
!13163 = !DILocation(line: 6790, column: 8, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 6790, column: 6)
!13165 = !DILocation(line: 6790, column: 16, scope: !13164)
!13166 = !DILocation(line: 6790, column: 22, scope: !13164)
!13167 = !DILocation(line: 6790, column: 29, scope: !13164)
!13168 = !DILocation(line: 6790, column: 6, scope: !13143)
!13169 = !DILocation(line: 6792, column: 13, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !3, line: 6792, column: 10)
!13171 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 6791, column: 2)
!13172 = !DILocation(line: 6792, column: 22, scope: !13170)
!13173 = !DILocation(line: 6792, column: 10, scope: !13171)
!13174 = !DILocation(line: 6794, column: 23, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !3, line: 6794, column: 7)
!13176 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 6793, column: 6)
!13177 = !DILocation(line: 6794, column: 33, scope: !13175)
!13178 = !DILocation(line: 6794, column: 38, scope: !13175)
!13179 = !DILocation(line: 6794, column: 7, scope: !13176)
!13180 = !DILocation(line: 6797, column: 48, scope: !13175)
!13181 = !DILocation(line: 6798, column: 11, scope: !13175)
!13182 = !DILocation(line: 6797, column: 37, scope: !13175)
!13183 = !DILocation(line: 6797, column: 35, scope: !13175)
!13184 = !DILocation(line: 6787, column: 14, scope: !13143)
!13185 = !DILocation(line: 6803, column: 10, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 6803, column: 7)
!13187 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 6801, column: 6)
!13188 = !DILocation(line: 6803, column: 7, scope: !13187)
!13189 = !DILocation(line: 6805, column: 34, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 6804, column: 3)
!13191 = !DILocation(line: 6805, column: 11, scope: !13190)
!13192 = !DILocation(line: 6806, column: 11, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 6806, column: 11)
!13194 = !DILocation(line: 6806, column: 11, scope: !13190)
!13195 = !DILocation(line: 6810, column: 13, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 6809, column: 7)
!13197 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 6808, column: 7)
!13198 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 6808, column: 7)
!13199 = !DILocation(line: 6811, column: 11, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 6811, column: 8)
!13201 = !DILocation(line: 6811, column: 8, scope: !13196)
!13202 = !DILocation(line: 6813, column: 31, scope: !13196)
!13203 = !DILocation(line: 6813, column: 8, scope: !13196)
!13204 = !DILocation(line: 6781, column: 17, scope: !13134)
!13205 = !DILocation(line: 6814, column: 8, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 6814, column: 8)
!13207 = !DILocation(line: 6814, column: 8, scope: !13196)
!13208 = !DILocation(line: 6816, column: 8, scope: !13196)
!13209 = !DILocation(line: 6816, column: 18, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 6816, column: 8)
!13211 = !DILocation(line: 6816, column: 8, scope: !13210)
!13212 = !DILocation(line: 6816, column: 26, scope: !13210)
!13213 = !DILocation(line: 6817, column: 8, scope: !13210)
!13214 = distinct !{!13214, !13215, !13216}
!13215 = !DILocation(line: 6808, column: 7, scope: !13198)
!13216 = !DILocation(line: 6818, column: 7, scope: !13198)
!13217 = !DILocation(line: 6826, column: 7, scope: !13147)
!13218 = !DILocation(line: 6830, column: 17, scope: !13147)
!13219 = !DILocation(line: 6830, column: 22, scope: !13147)
!13220 = !DILocation(line: 6825, column: 11, scope: !13147)
!13221 = !DILocation(line: 6831, column: 8, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 6831, column: 6)
!13223 = !DILocation(line: 6831, column: 6, scope: !13147)
!13224 = !DILocation(line: 6833, column: 32, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 6832, column: 2)
!13226 = !DILocation(line: 6833, column: 13, scope: !13225)
!13227 = !DILocation(line: 6828, column: 7, scope: !13147)
!13228 = !DILocation(line: 6827, column: 14, scope: !13147)
!13229 = !DILocation(line: 6834, column: 45, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 6834, column: 6)
!13231 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 6834, column: 6)
!13232 = !DILocation(line: 6834, column: 6, scope: !13231)
!13233 = !DILocation(line: 6834, column: 30, scope: !13231)
!13234 = !{!5235, !2693, i64 56}
!13235 = !DILocation(line: 6836, column: 8, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 6836, column: 7)
!13237 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 6835, column: 6)
!13238 = !{!13239, !2693, i64 8}
!13239 = !{!"hashitem_S", !2925, i64 0, !2693, i64 8}
!13240 = !DILocation(line: 6838, column: 7, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 6837, column: 3)
!13242 = !DILocation(line: 6839, column: 30, scope: !13241)
!13243 = !DILocation(line: 6839, column: 41, scope: !13241)
!13244 = !DILocation(line: 6839, column: 11, scope: !13241)
!13245 = !DILocation(line: 6840, column: 11, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13241, file: !3, line: 6840, column: 11)
!13247 = !DILocation(line: 6840, column: 11, scope: !13241)
!13248 = !DILocation(line: 6842, column: 11, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13241, file: !3, line: 6842, column: 11)
!13250 = !DILocation(line: 6842, column: 11, scope: !13241)
!13251 = !DILocation(line: 6847, column: 16, scope: !13249)
!13252 = !DILocation(line: 6847, column: 26, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 6847, column: 16)
!13254 = !DILocation(line: 6847, column: 16, scope: !13253)
!13255 = !DILocation(line: 6847, column: 34, scope: !13253)
!13256 = !DILocation(line: 6848, column: 4, scope: !13253)
!13257 = !DILocation(line: 6834, column: 50, scope: !13230)
!13258 = distinct !{!13258, !13232, !13259}
!13259 = !DILocation(line: 6850, column: 6, scope: !13231)
!13260 = !DILocation(line: 6854, column: 8, scope: !13148)
!13261 = !DILocation(line: 6854, column: 26, scope: !13148)
!13262 = !DILocation(line: 6854, column: 2, scope: !13148)
!13263 = !DILocation(line: 6856, column: 17, scope: !13134)
!13264 = !DILocation(line: 6856, column: 26, scope: !13134)
!13265 = !DILocation(line: 6857, column: 1, scope: !13134)
!13266 = distinct !DISubprogram(name: "search_cmn", scope: !3, file: !3, line: 7611, type: !13267, isLocal: true, isDefinition: true, scopeLine: 7612, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !13269)
!13267 = !DISubroutineType(types: !13268)
!13268 = !{!756, !2305, !3956, !819}
!13269 = !{!13270, !13271, !13272, !13273, !13274, !13275, !13276, !13277, !13278, !13279, !13280, !13281, !13282, !13283, !13284, !13285, !13286, !13287, !13288, !13293, !13294}
!13270 = !DILocalVariable(name: "argvars", arg: 1, scope: !13266, file: !3, line: 7611, type: !2305)
!13271 = !DILocalVariable(name: "match_pos", arg: 2, scope: !13266, file: !3, line: 7611, type: !3956)
!13272 = !DILocalVariable(name: "flagsp", arg: 3, scope: !13266, file: !3, line: 7611, type: !819)
!13273 = !DILocalVariable(name: "flags", scope: !13266, file: !3, line: 7613, type: !756)
!13274 = !DILocalVariable(name: "pat", scope: !13266, file: !3, line: 7614, type: !759)
!13275 = !DILocalVariable(name: "pos", scope: !13266, file: !3, line: 7615, type: !1315)
!13276 = !DILocalVariable(name: "save_cursor", scope: !13266, file: !3, line: 7616, type: !1315)
!13277 = !DILocalVariable(name: "save_p_ws", scope: !13266, file: !3, line: 7617, type: !756)
!13278 = !DILocalVariable(name: "dir", scope: !13266, file: !3, line: 7618, type: !756)
!13279 = !DILocalVariable(name: "retval", scope: !13266, file: !3, line: 7619, type: !756)
!13280 = !DILocalVariable(name: "lnum_stop", scope: !13266, file: !3, line: 7620, type: !765)
!13281 = !DILocalVariable(name: "tm", scope: !13266, file: !3, line: 7622, type: !825)
!13282 = !DILocalVariable(name: "time_limit", scope: !13266, file: !3, line: 7623, type: !765)
!13283 = !DILocalVariable(name: "options", scope: !13266, file: !3, line: 7625, type: !756)
!13284 = !DILocalVariable(name: "subpatnum", scope: !13266, file: !3, line: 7626, type: !756)
!13285 = !DILocalVariable(name: "sia", scope: !13266, file: !3, line: 7627, type: !3988)
!13286 = !DILocalVariable(name: "use_skip", scope: !13266, file: !3, line: 7628, type: !756)
!13287 = !DILocalVariable(name: "firstpos", scope: !13266, file: !3, line: 7629, type: !1315)
!13288 = !DILocalVariable(name: "do_skip", scope: !13289, file: !3, line: 7703, type: !756)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 7702, column: 2)
!13290 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 7688, column: 5)
!13291 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 7687, column: 5)
!13292 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7687, column: 5)
!13293 = !DILocalVariable(name: "err", scope: !13289, file: !3, line: 7704, type: !756)
!13294 = !DILocalVariable(name: "save_pos", scope: !13289, file: !3, line: 7705, type: !1315)
!13295 = !DILocation(line: 7611, column: 22, scope: !13266)
!13296 = !DILocation(line: 7611, column: 38, scope: !13266)
!13297 = !DILocation(line: 7611, column: 54, scope: !13266)
!13298 = !DILocation(line: 7615, column: 5, scope: !13266)
!13299 = !DILocation(line: 7616, column: 5, scope: !13266)
!13300 = !DILocation(line: 7617, column: 22, scope: !13266)
!13301 = !DILocation(line: 7617, column: 10, scope: !13266)
!13302 = !DILocation(line: 7619, column: 10, scope: !13266)
!13303 = !DILocation(line: 7620, column: 10, scope: !13266)
!13304 = !DILocation(line: 7622, column: 5, scope: !13266)
!13305 = !DILocation(line: 7623, column: 10, scope: !13266)
!13306 = !DILocation(line: 7625, column: 10, scope: !13266)
!13307 = !DILocation(line: 7627, column: 5, scope: !13266)
!13308 = !DILocation(line: 7628, column: 10, scope: !13266)
!13309 = !DILocation(line: 7631, column: 11, scope: !13266)
!13310 = !DILocation(line: 7614, column: 13, scope: !13266)
!13311 = !DILocation(line: 7632, column: 27, scope: !13266)
!13312 = !DILocation(line: 7632, column: 11, scope: !13266)
!13313 = !DILocation(line: 7618, column: 10, scope: !13266)
!13314 = !DILocation(line: 7633, column: 13, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7633, column: 9)
!13316 = !DILocation(line: 7633, column: 9, scope: !13266)
!13317 = !DILocation(line: 7635, column: 13, scope: !13266)
!13318 = !DILocation(line: 7613, column: 10, scope: !13266)
!13319 = !DILocation(line: 7636, column: 9, scope: !13266)
!13320 = !DILocation(line: 7638, column: 15, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7638, column: 9)
!13322 = !DILocation(line: 7638, column: 9, scope: !13266)
!13323 = !DILocation(line: 7640, column: 9, scope: !13266)
!13324 = !DILocation(line: 7644, column: 20, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7644, column: 9)
!13326 = !DILocation(line: 7644, column: 27, scope: !13325)
!13327 = !DILocation(line: 7644, column: 42, scope: !13325)
!13328 = !DILocation(line: 7644, column: 45, scope: !13325)
!13329 = !DILocation(line: 7644, column: 56, scope: !13325)
!13330 = !DILocation(line: 7644, column: 63, scope: !13325)
!13331 = !DILocation(line: 7644, column: 9, scope: !13266)
!13332 = !DILocation(line: 7646, column: 20, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 7645, column: 5)
!13334 = !DILocation(line: 7647, column: 16, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 7647, column: 6)
!13336 = !DILocation(line: 7647, column: 6, scope: !13333)
!13337 = !DILocation(line: 7649, column: 6, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 7649, column: 6)
!13339 = !DILocation(line: 7649, column: 17, scope: !13338)
!13340 = !DILocation(line: 7649, column: 24, scope: !13338)
!13341 = !DILocation(line: 7649, column: 6, scope: !13333)
!13342 = !DILocation(line: 7652, column: 25, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 7650, column: 2)
!13344 = !DILocation(line: 7653, column: 21, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13343, file: !3, line: 7653, column: 10)
!13346 = !DILocation(line: 7653, column: 10, scope: !13343)
!13347 = !DILocation(line: 7656, column: 38, scope: !13343)
!13348 = !DILocation(line: 7656, column: 17, scope: !13343)
!13349 = !DILocation(line: 7657, column: 2, scope: !13343)
!13350 = !DILocation(line: 7622, column: 16, scope: !13266)
!13351 = !DILocation(line: 7662, column: 5, scope: !13266)
!13352 = !DILocation(line: 7671, column: 17, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7671, column: 9)
!13354 = !DILocation(line: 7671, column: 46, scope: !13353)
!13355 = !DILocation(line: 7672, column: 6, scope: !13353)
!13356 = !DILocation(line: 7672, column: 17, scope: !13353)
!13357 = !DILocation(line: 7672, column: 30, scope: !13353)
!13358 = !DILocation(line: 7672, column: 40, scope: !13353)
!13359 = !DILocation(line: 7674, column: 8, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 7673, column: 5)
!13361 = !DILocation(line: 7674, column: 22, scope: !13360)
!13362 = !DILocation(line: 7674, column: 2, scope: !13360)
!13363 = !DILocation(line: 7675, column: 2, scope: !13360)
!13364 = !DILocation(line: 7678, column: 25, scope: !13266)
!13365 = !DILocation(line: 7678, column: 33, scope: !13266)
!13366 = !DILocation(line: 7678, column: 23, scope: !13266)
!13367 = !DILocation(line: 7629, column: 11, scope: !13266)
!13368 = !DILocation(line: 7680, column: 5, scope: !13266)
!13369 = !DILocation(line: 7681, column: 9, scope: !13266)
!13370 = !DILocation(line: 7681, column: 22, scope: !13266)
!13371 = !DILocation(line: 7683, column: 9, scope: !13266)
!13372 = !DILocation(line: 7683, column: 15, scope: !13266)
!13373 = !DILocation(line: 7687, column: 5, scope: !13266)
!13374 = !DILocation(line: 7689, column: 23, scope: !13290)
!13375 = !DILocation(line: 7689, column: 31, scope: !13290)
!13376 = !DILocation(line: 7615, column: 11, scope: !13266)
!13377 = !DILocation(line: 7627, column: 20, scope: !13266)
!13378 = !DILocation(line: 7689, column: 14, scope: !13290)
!13379 = !DILocation(line: 7626, column: 10, scope: !13266)
!13380 = !DILocation(line: 7693, column: 20, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 7693, column: 6)
!13382 = !DILocation(line: 7693, column: 28, scope: !13381)
!13383 = !DILocation(line: 7693, column: 25, scope: !13381)
!13384 = !DILocation(line: 7693, column: 6, scope: !13290)
!13385 = !DILocation(line: 7696, column: 16, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 7696, column: 6)
!13387 = !DILocation(line: 7696, column: 24, scope: !13386)
!13388 = !DILocation(line: 7699, column: 13, scope: !13290)
!13389 = !DILocation(line: 7704, column: 6, scope: !13289)
!13390 = !DILocation(line: 7705, column: 6, scope: !13289)
!13391 = !DILocation(line: 7705, column: 25, scope: !13289)
!13392 = !DILocation(line: 7705, column: 33, scope: !13289)
!13393 = !DILocation(line: 7707, column: 25, scope: !13289)
!13394 = !DILocation(line: 7704, column: 14, scope: !13289)
!13395 = !DILocation(line: 7708, column: 10, scope: !13289)
!13396 = !DILocation(line: 7709, column: 16, scope: !13289)
!13397 = !DILocation(line: 7703, column: 14, scope: !13289)
!13398 = !DILocation(line: 7710, column: 6, scope: !13289)
!13399 = !DILocation(line: 7710, column: 14, scope: !13289)
!13400 = !DILocation(line: 7710, column: 25, scope: !13289)
!13401 = !DILocation(line: 7711, column: 10, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 7711, column: 10)
!13403 = !DILocation(line: 7717, column: 11, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 7717, column: 10)
!13405 = !DILocation(line: 7711, column: 10, scope: !13289)
!13406 = !DILocation(line: 7719, column: 2, scope: !13290)
!13407 = distinct !{!13407, !13408, !13409}
!13408 = !DILocation(line: 7687, column: 5, scope: !13292)
!13409 = !DILocation(line: 7720, column: 5, scope: !13292)
!13410 = !DILocation(line: 7722, column: 19, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7722, column: 9)
!13412 = !DILocation(line: 7722, column: 9, scope: !13266)
!13413 = !DILocation(line: 7724, column: 12, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 7724, column: 6)
!13415 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 7723, column: 5)
!13416 = !DILocation(line: 7727, column: 19, scope: !13414)
!13417 = !DILocation(line: 7727, column: 15, scope: !13414)
!13418 = !DILocation(line: 7724, column: 6, scope: !13415)
!13419 = !DILocation(line: 7728, column: 6, scope: !13415)
!13420 = !DILocation(line: 7729, column: 6, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 7728, column: 6)
!13422 = !DILocation(line: 7730, column: 2, scope: !13415)
!13423 = !DILocation(line: 7730, column: 10, scope: !13415)
!13424 = !DILocation(line: 7730, column: 21, scope: !13415)
!13425 = !DILocation(line: 7731, column: 16, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 7731, column: 6)
!13427 = !DILocation(line: 7731, column: 6, scope: !13415)
!13428 = !DILocation(line: 7734, column: 28, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 7732, column: 2)
!13430 = !DILocation(line: 7734, column: 17, scope: !13429)
!13431 = !DILocation(line: 7734, column: 22, scope: !13429)
!13432 = !DILocation(line: 7735, column: 27, scope: !13429)
!13433 = !DILocation(line: 7735, column: 31, scope: !13429)
!13434 = !DILocation(line: 7735, column: 17, scope: !13429)
!13435 = !DILocation(line: 7735, column: 21, scope: !13429)
!13436 = !DILocation(line: 7736, column: 2, scope: !13429)
!13437 = !DILocation(line: 7739, column: 2, scope: !13415)
!13438 = !DILocation(line: 7740, column: 5, scope: !13415)
!13439 = !DILocation(line: 7743, column: 9, scope: !13266)
!13440 = !DILocation(line: 7744, column: 10, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 7743, column: 9)
!13442 = !DILocation(line: 7744, column: 21, scope: !13441)
!13443 = !DILocation(line: 7744, column: 2, scope: !13441)
!13444 = !DILocation(line: 7746, column: 10, scope: !13441)
!13445 = !DILocation(line: 7746, column: 25, scope: !13441)
!13446 = !DILocation(line: 7748, column: 10, scope: !13266)
!13447 = !DILocation(line: 7751, column: 1, scope: !13266)
!13448 = !DILocation(line: 7750, column: 5, scope: !13266)
!13449 = distinct !DISubprogram(name: "get_search_arg", scope: !3, file: !3, line: 7559, type: !13450, isLocal: true, isDefinition: true, scopeLine: 7560, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !13452)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{!756, !2305, !819}
!13452 = !{!13453, !13454, !13455, !13456, !13457, !13458}
!13453 = !DILocalVariable(name: "varp", arg: 1, scope: !13449, file: !3, line: 7559, type: !2305)
!13454 = !DILocalVariable(name: "flagsp", arg: 2, scope: !13449, file: !3, line: 7559, type: !819)
!13455 = !DILocalVariable(name: "dir", scope: !13449, file: !3, line: 7561, type: !756)
!13456 = !DILocalVariable(name: "flags", scope: !13449, file: !3, line: 7562, type: !759)
!13457 = !DILocalVariable(name: "nbuf", scope: !13449, file: !3, line: 7563, type: !3499)
!13458 = !DILocalVariable(name: "mask", scope: !13449, file: !3, line: 7564, type: !756)
!13459 = !DILocation(line: 7559, column: 26, scope: !13449)
!13460 = !DILocation(line: 7559, column: 37, scope: !13449)
!13461 = !DILocation(line: 7561, column: 10, scope: !13449)
!13462 = !DILocation(line: 7563, column: 5, scope: !13449)
!13463 = !DILocation(line: 7563, column: 12, scope: !13449)
!13464 = !DILocation(line: 7566, column: 15, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 7566, column: 9)
!13466 = !DILocation(line: 7566, column: 22, scope: !13465)
!13467 = !DILocation(line: 7566, column: 9, scope: !13449)
!13468 = !DILocation(line: 7568, column: 10, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13465, file: !3, line: 7567, column: 5)
!13470 = !DILocation(line: 7562, column: 13, scope: !13449)
!13471 = !DILocation(line: 7569, column: 12, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13469, file: !3, line: 7569, column: 6)
!13473 = !DILocation(line: 7569, column: 6, scope: !13469)
!13474 = !DILocation(line: 7571, column: 2, scope: !13469)
!13475 = !DILocation(line: 7571, column: 9, scope: !13469)
!13476 = !DILocation(line: 7576, column: 18, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 7574, column: 6)
!13478 = distinct !DILexicalBlock(scope: !13469, file: !3, line: 7572, column: 2)
!13479 = !DILocation(line: 7576, column: 26, scope: !13477)
!13480 = !DILocation(line: 7577, column: 18, scope: !13477)
!13481 = !DILocation(line: 7577, column: 27, scope: !13477)
!13482 = !DILocation(line: 7564, column: 10, scope: !13449)
!13483 = !DILocation(line: 7579, column: 10, scope: !13477)
!13484 = !DILocation(line: 7580, column: 9, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 7579, column: 10)
!13486 = !DILocation(line: 7583, column: 31, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13485, file: !3, line: 7581, column: 9)
!13488 = !DILocation(line: 7584, column: 36, scope: !13487)
!13489 = !DILocation(line: 7585, column: 34, scope: !13487)
!13490 = !DILocation(line: 7586, column: 34, scope: !13487)
!13491 = !DILocation(line: 7587, column: 34, scope: !13487)
!13492 = !DILocation(line: 7588, column: 37, scope: !13487)
!13493 = !DILocation(line: 7589, column: 34, scope: !13487)
!13494 = !DILocation(line: 7597, column: 18, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 7591, column: 10)
!13496 = !DILocation(line: 7593, column: 16, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13495, file: !3, line: 7592, column: 6)
!13498 = !DILocation(line: 7593, column: 10, scope: !13497)
!13499 = !DILocation(line: 7599, column: 10, scope: !13478)
!13500 = !DILocation(line: 7601, column: 6, scope: !13478)
!13501 = distinct !{!13501, !13474, !13502}
!13502 = !DILocation(line: 7602, column: 2, scope: !13469)
!13503 = !DILocation(line: 7605, column: 1, scope: !13449)
!13504 = distinct !DISubprogram(name: "searchpair_cmn", scope: !3, file: !3, line: 7971, type: !13505, isLocal: true, isDefinition: true, scopeLine: 7972, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !13507)
!13505 = !DISubroutineType(types: !13506)
!13506 = !{!756, !2305, !3956}
!13507 = !{!13508, !13509, !13510, !13511, !13512, !13513, !13514, !13515, !13516, !13517, !13518, !13519, !13520, !13521}
!13508 = !DILocalVariable(name: "argvars", arg: 1, scope: !13504, file: !3, line: 7971, type: !2305)
!13509 = !DILocalVariable(name: "match_pos", arg: 2, scope: !13504, file: !3, line: 7971, type: !3956)
!13510 = !DILocalVariable(name: "spat", scope: !13504, file: !3, line: 7973, type: !759)
!13511 = !DILocalVariable(name: "mpat", scope: !13504, file: !3, line: 7973, type: !759)
!13512 = !DILocalVariable(name: "epat", scope: !13504, file: !3, line: 7973, type: !759)
!13513 = !DILocalVariable(name: "skip", scope: !13504, file: !3, line: 7974, type: !2305)
!13514 = !DILocalVariable(name: "save_p_ws", scope: !13504, file: !3, line: 7975, type: !756)
!13515 = !DILocalVariable(name: "dir", scope: !13504, file: !3, line: 7976, type: !756)
!13516 = !DILocalVariable(name: "flags", scope: !13504, file: !3, line: 7977, type: !756)
!13517 = !DILocalVariable(name: "nbuf1", scope: !13504, file: !3, line: 7978, type: !3499)
!13518 = !DILocalVariable(name: "nbuf2", scope: !13504, file: !3, line: 7979, type: !3499)
!13519 = !DILocalVariable(name: "retval", scope: !13504, file: !3, line: 7980, type: !756)
!13520 = !DILocalVariable(name: "lnum_stop", scope: !13504, file: !3, line: 7981, type: !765)
!13521 = !DILocalVariable(name: "time_limit", scope: !13504, file: !3, line: 7982, type: !765)
!13522 = !DILocation(line: 7971, column: 26, scope: !13504)
!13523 = !DILocation(line: 7971, column: 42, scope: !13504)
!13524 = !DILocation(line: 7975, column: 22, scope: !13504)
!13525 = !DILocation(line: 7975, column: 10, scope: !13504)
!13526 = !DILocation(line: 7977, column: 5, scope: !13504)
!13527 = !DILocation(line: 7977, column: 10, scope: !13504)
!13528 = !DILocation(line: 7978, column: 5, scope: !13504)
!13529 = !DILocation(line: 7978, column: 12, scope: !13504)
!13530 = !DILocation(line: 7979, column: 5, scope: !13504)
!13531 = !DILocation(line: 7979, column: 12, scope: !13504)
!13532 = !DILocation(line: 7980, column: 10, scope: !13504)
!13533 = !DILocation(line: 7981, column: 10, scope: !13504)
!13534 = !DILocation(line: 7982, column: 10, scope: !13504)
!13535 = !DILocation(line: 7986, column: 12, scope: !13504)
!13536 = !DILocation(line: 7973, column: 13, scope: !13504)
!13537 = !DILocation(line: 7987, column: 35, scope: !13504)
!13538 = !DILocation(line: 7987, column: 12, scope: !13504)
!13539 = !DILocation(line: 7973, column: 20, scope: !13504)
!13540 = !DILocation(line: 7988, column: 35, scope: !13504)
!13541 = !DILocation(line: 7988, column: 12, scope: !13504)
!13542 = !DILocation(line: 7973, column: 27, scope: !13504)
!13543 = !DILocation(line: 7989, column: 14, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 7989, column: 9)
!13545 = !DILocation(line: 7989, column: 30, scope: !13544)
!13546 = !DILocation(line: 7989, column: 22, scope: !13544)
!13547 = !DILocation(line: 7989, column: 46, scope: !13544)
!13548 = !DILocation(line: 7993, column: 27, scope: !13504)
!13549 = !DILocation(line: 7993, column: 11, scope: !13504)
!13550 = !DILocation(line: 7976, column: 10, scope: !13504)
!13551 = !DILocation(line: 7994, column: 13, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 7994, column: 9)
!13553 = !DILocation(line: 7994, column: 9, scope: !13504)
!13554 = !DILocation(line: 7999, column: 10, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 7999, column: 9)
!13556 = !DILocation(line: 7999, column: 16, scope: !13555)
!13557 = !DILocation(line: 7999, column: 40, scope: !13555)
!13558 = !DILocation(line: 8000, column: 30, scope: !13555)
!13559 = !DILocation(line: 8000, column: 6, scope: !13555)
!13560 = !DILocation(line: 8002, column: 8, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 8001, column: 5)
!13562 = !DILocation(line: 8002, column: 22, scope: !13561)
!13563 = !DILocation(line: 8002, column: 2, scope: !13561)
!13564 = !DILocation(line: 8003, column: 2, scope: !13561)
!13565 = !DILocation(line: 8007, column: 15, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 8007, column: 9)
!13567 = !DILocation(line: 8007, column: 9, scope: !13504)
!13568 = !DILocation(line: 8008, column: 7, scope: !13566)
!13569 = !DILocation(line: 8008, column: 2, scope: !13566)
!13570 = !DILocation(line: 8011, column: 20, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 8011, column: 9)
!13572 = !DILocation(line: 8011, column: 27, scope: !13571)
!13573 = !DILocation(line: 8012, column: 6, scope: !13571)
!13574 = !DILocation(line: 8012, column: 9, scope: !13571)
!13575 = !DILocation(line: 8012, column: 20, scope: !13571)
!13576 = !DILocation(line: 8012, column: 27, scope: !13571)
!13577 = !DILocation(line: 8011, column: 9, scope: !13504)
!13578 = !DILocation(line: 7974, column: 15, scope: !13504)
!13579 = !DILocation(line: 8019, column: 6, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13581, file: !3, line: 8019, column: 6)
!13581 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 8015, column: 5)
!13582 = !DILocation(line: 8019, column: 17, scope: !13580)
!13583 = !DILocation(line: 8019, column: 24, scope: !13580)
!13584 = !DILocation(line: 8019, column: 6, scope: !13581)
!13585 = !DILocation(line: 8021, column: 24, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 8020, column: 2)
!13587 = !DILocation(line: 8022, column: 20, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 8022, column: 10)
!13589 = !DILocation(line: 8022, column: 10, scope: !13586)
!13590 = !DILocation(line: 8024, column: 9, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 8023, column: 6)
!13592 = !DILocation(line: 8024, column: 23, scope: !13591)
!13593 = !DILocation(line: 8024, column: 3, scope: !13591)
!13594 = !DILocation(line: 8025, column: 3, scope: !13591)
!13595 = !DILocation(line: 8028, column: 10, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 8028, column: 10)
!13597 = !DILocation(line: 8028, column: 21, scope: !13596)
!13598 = !DILocation(line: 8028, column: 28, scope: !13596)
!13599 = !DILocation(line: 8028, column: 10, scope: !13586)
!13600 = !DILocation(line: 8030, column: 22, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 8029, column: 6)
!13602 = !DILocation(line: 8031, column: 18, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13601, file: !3, line: 8031, column: 7)
!13604 = !DILocation(line: 8031, column: 7, scope: !13601)
!13605 = !DILocation(line: 8033, column: 13, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 8032, column: 3)
!13607 = !DILocation(line: 8033, column: 27, scope: !13606)
!13608 = !DILocation(line: 8033, column: 7, scope: !13606)
!13609 = !DILocation(line: 8034, column: 7, scope: !13606)
!13610 = !DILocation(line: 8041, column: 57, scope: !13504)
!13611 = !DILocation(line: 8041, column: 14, scope: !13504)
!13612 = !DILocation(line: 8041, column: 5, scope: !13504)
!13613 = !DILocation(line: 8045, column: 10, scope: !13504)
!13614 = !DILocation(line: 8048, column: 1, scope: !13504)
!13615 = !DILocation(line: 8047, column: 5, scope: !13504)
!13616 = distinct !DISubprogram(name: "set_position", scope: !3, file: !3, line: 8294, type: !3480, isLocal: true, isDefinition: true, scopeLine: 8295, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !13617)
!13617 = !{!13618, !13619, !13620, !13621, !13622, !13623, !13624}
!13618 = !DILocalVariable(name: "argvars", arg: 1, scope: !13616, file: !3, line: 8294, type: !2305)
!13619 = !DILocalVariable(name: "rettv", arg: 2, scope: !13616, file: !3, line: 8294, type: !2305)
!13620 = !DILocalVariable(name: "charpos", arg: 3, scope: !13616, file: !3, line: 8294, type: !756)
!13621 = !DILocalVariable(name: "pos", scope: !13616, file: !3, line: 8296, type: !1315)
!13622 = !DILocalVariable(name: "fnum", scope: !13616, file: !3, line: 8297, type: !756)
!13623 = !DILocalVariable(name: "name", scope: !13616, file: !3, line: 8298, type: !759)
!13624 = !DILocalVariable(name: "curswant", scope: !13616, file: !3, line: 8299, type: !766)
!13625 = !DILocation(line: 8294, column: 24, scope: !13616)
!13626 = !DILocation(line: 8294, column: 43, scope: !13616)
!13627 = !DILocation(line: 8294, column: 54, scope: !13616)
!13628 = !DILocation(line: 8296, column: 5, scope: !13616)
!13629 = !DILocation(line: 8297, column: 5, scope: !13616)
!13630 = !DILocation(line: 8299, column: 5, scope: !13616)
!13631 = !DILocation(line: 8299, column: 13, scope: !13616)
!13632 = !DILocation(line: 8301, column: 17, scope: !13616)
!13633 = !DILocation(line: 8301, column: 26, scope: !13616)
!13634 = !DILocation(line: 8303, column: 12, scope: !13616)
!13635 = !DILocation(line: 8298, column: 13, scope: !13616)
!13636 = !DILocation(line: 8304, column: 14, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 8304, column: 9)
!13638 = !DILocation(line: 8304, column: 9, scope: !13616)
!13639 = !DILocation(line: 8306, column: 17, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 8306, column: 6)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 8305, column: 5)
!13642 = !DILocation(line: 8296, column: 11, scope: !13616)
!13643 = !DILocation(line: 8297, column: 10, scope: !13616)
!13644 = !DILocation(line: 8306, column: 6, scope: !13640)
!13645 = !DILocation(line: 8306, column: 62, scope: !13640)
!13646 = !DILocation(line: 8306, column: 6, scope: !13641)
!13647 = !DILocation(line: 8308, column: 14, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 8308, column: 10)
!13649 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 8307, column: 2)
!13650 = !DILocation(line: 8308, column: 18, scope: !13648)
!13651 = !DILocation(line: 8308, column: 28, scope: !13648)
!13652 = !DILocation(line: 8308, column: 31, scope: !13648)
!13653 = !DILocation(line: 8308, column: 41, scope: !13648)
!13654 = !DILocation(line: 8308, column: 10, scope: !13649)
!13655 = !DILocation(line: 8310, column: 11, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 8310, column: 10)
!13657 = !DILocation(line: 8310, column: 26, scope: !13656)
!13658 = !DILocation(line: 8310, column: 29, scope: !13656)
!13659 = !DILocation(line: 8310, column: 37, scope: !13656)
!13660 = !DILocation(line: 8310, column: 10, scope: !13649)
!13661 = !DILocation(line: 8313, column: 3, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 8311, column: 6)
!13663 = !DILocation(line: 8313, column: 11, scope: !13662)
!13664 = !DILocation(line: 8313, column: 22, scope: !13662)
!13665 = !DILocation(line: 8314, column: 7, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 8314, column: 7)
!13667 = !DILocation(line: 8314, column: 16, scope: !13666)
!13668 = !DILocation(line: 8314, column: 7, scope: !13662)
!13669 = !DILocation(line: 8316, column: 37, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13666, file: !3, line: 8315, column: 3)
!13671 = !DILocation(line: 8316, column: 15, scope: !13670)
!13672 = !DILocation(line: 8316, column: 26, scope: !13670)
!13673 = !DILocation(line: 8317, column: 15, scope: !13670)
!13674 = !DILocation(line: 8317, column: 30, scope: !13670)
!13675 = !DILocation(line: 8318, column: 3, scope: !13670)
!13676 = !DILocation(line: 8319, column: 3, scope: !13662)
!13677 = !DILocation(line: 8320, column: 24, scope: !13662)
!13678 = !DILocation(line: 8321, column: 6, scope: !13662)
!13679 = !DILocation(line: 8322, column: 34, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 8322, column: 15)
!13681 = !DILocation(line: 8322, column: 42, scope: !13680)
!13682 = !DILocation(line: 8322, column: 49, scope: !13680)
!13683 = !DILocation(line: 8322, column: 52, scope: !13680)
!13684 = !DILocation(line: 8322, column: 60, scope: !13680)
!13685 = !DILocation(line: 8322, column: 15, scope: !13656)
!13686 = !DILocation(line: 8325, column: 34, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 8325, column: 7)
!13688 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 8323, column: 6)
!13689 = !DILocation(line: 8325, column: 7, scope: !13687)
!13690 = !DILocation(line: 8325, column: 40, scope: !13687)
!13691 = !DILocation(line: 8325, column: 7, scope: !13688)
!13692 = !DILocation(line: 8326, column: 28, scope: !13687)
!13693 = !DILocation(line: 8326, column: 7, scope: !13687)
!13694 = !DILocation(line: 8329, column: 8, scope: !13680)
!13695 = !DILocation(line: 8329, column: 3, scope: !13680)
!13696 = !DILocation(line: 8332, column: 1, scope: !13616)
