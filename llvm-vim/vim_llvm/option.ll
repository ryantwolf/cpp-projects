; ModuleID = 'option.c'
source_filename = "option.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.vimoption = type { i8*, i8*, i64, i8*, i32, [2 x i8*], %struct.sctx_T }
%struct.sctx_T = type { i32, i32, i64, i32 }
%struct.file_buffer = type { %struct.memline, %struct.file_buffer*, %struct.file_buffer*, i32, i32, i32, i32, i8*, i8*, i8*, i32, i64, i64, i32, [9 x i8], i32, %struct.dictitem16_S, i64, i64, i32, i32, i64, i64, i64, %struct.wininfo_S*, i64, i64, i64, i32, i64, [26 x %struct.pos_T], %struct.visualinfo_T, i32, %struct.pos_T, %struct.pos_T, %struct.pos_T, [100 x %struct.pos_T], i32, i32, [32 x i8], [256 x %struct.mapblock*], %struct.mapblock*, %struct.growarray, %struct.pos_T, %struct.pos_T, %struct.pos_T, i32, %struct.u_header*, %struct.u_header*, %struct.u_header*, i32, i32, i64, i64, i64, i64, i64, %struct.undoline_T, i64, i32, i32, i64, i64, i16, %struct.growarray, i32, [84 x %struct.sctx_T], i32, i32, i8*, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, i8*, i8*, i64, i8*, i8*, i32, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i32, i64, i32, i32, i64, i64, i8*, i32, i64, i8*, i64, i32, i64, i64, i64, i64, i64, i64, i8*, i32*, i8*, i8*, i32*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i8*, i8*, i64, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i8*, i32, i32, %struct.dictitem_S, %struct.dictvar_S*, %struct.listener_S*, %struct.listvar_S*, i32, %struct.hashtable_S*, i8*, i64, i8*, i32, i32, i32, i32, i32, i8*, %struct.callback_T, %struct.callback_T, i32, %struct.synblock_T, %struct.sign_entry*, i32, i32, i32, i32, %struct.cryptstate_T*, i32, %struct.terminal_S*, i32 }
%struct.memline = type { i64, %struct.memfile*, %struct.info_pointer*, i32, i32, i32, i32, i64, i8*, %struct.block_hdr*, i64, i64, i32, %struct.ml_chunksize*, i32, i32 }
%struct.memfile = type { i8*, i8*, i32, i32, i32, %struct.block_hdr*, %struct.block_hdr*, %struct.block_hdr*, i32, i32, %struct.mf_hashtab_S, %struct.mf_hashtab_S, i64, i64, i64, i64, i32, i32, %struct.file_buffer*, [8 x i8], i8*, i32, [8 x i8] }
%struct.mf_hashtab_S = type { i64, i64, %struct.mf_hashitem_S**, [64 x %struct.mf_hashitem_S*], i8 }
%struct.mf_hashitem_S = type { %struct.mf_hashitem_S*, %struct.mf_hashitem_S*, i64 }
%struct.info_pointer = type { i64, i64, i64, i32 }
%struct.block_hdr = type { %struct.mf_hashitem_S, %struct.block_hdr*, %struct.block_hdr*, i8*, i32, i8 }
%struct.ml_chunksize = type { i32, i64 }
%struct.dictitem16_S = type { %struct.typval_T, i8, [17 x i8] }
%struct.typval_T = type { i32, i8, %union.anon }
%union.anon = type { i64 }
%struct.wininfo_S = type { %struct.wininfo_S*, %struct.wininfo_S*, %struct.window_S*, %struct.pos_T, i32, %struct.winopt_T, i32, %struct.growarray }
%struct.window_S = type { i32, %struct.file_buffer*, %struct.window_S*, %struct.window_S*, %struct.synblock_T*, i32, %struct.frame_S*, %struct.pos_T, i32, i32, i64, i8, i64, i32, i32, i64, i32, i32, %struct.lcs_chars_T, i64, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.pos_save_T, i32, i32, i8*, i32, i32, i32, %struct.window_S*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, [4 x i32], [4 x i32], [4 x i8*], [8 x i32], i32, i32, i64, i64, i32, i64, %struct.callback_T, %struct.callback_T, i32, i32, %struct.window_S*, i64, i32, i32, i32, i32, i32, i32, %struct.listvar_S*, i8*, i32, i32, %struct.timer_S*, i32, i32, %struct.pos_T, i32, i32, i32, i32, i32, i32, i32, i32, %struct.w_line*, %struct.growarray, i8, i8, i32, i32, i32, i64, i64, i32, %struct.pos_T, i32, i64, i64, i32, i8, i32, %struct.arglist*, i32, i32, i8*, i8*, %struct.VimMenu*, %struct.winbar_item_T*, i32, %struct.winopt_T, %struct.winopt_T, i64, i64, i64, i32*, i8, i64, i64, i32, i32, i32, i64, %struct.dictitem_S, %struct.dictvar_S*, %struct.pos_T, %struct.pos_T, [100 x %struct.xfilemark], i32, i32, i32, %struct.matchitem*, i32, [20 x %struct.taggy], i32, i32, i32, i32, [2 x %struct.GuiScrollbar], i64, i64, i32, %struct.qf_info_S*, %struct.qf_info_S* }
%struct.frame_S = type { i8, i32, i32, i32, i32, %struct.frame_S*, %struct.frame_S*, %struct.frame_S*, %struct.frame_S*, %struct.window_S* }
%struct.lcs_chars_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pos_save_T = type { i32, i32, %struct.pos_T, %struct.pos_T }
%struct.timer_S = type { i64, %struct.timer_S*, %struct.timer_S*, %struct.timeval, i8, i8, i32, i64, %struct.callback_T, i32 }
%struct.timeval = type { i64, i64 }
%struct.w_line = type { i64, i16, i8, i8, i64 }
%struct.arglist = type { %struct.growarray, i32, i32 }
%struct.VimMenu = type { i32, i32, i8*, i8*, i8*, i8*, i32, i8*, i32, void (%struct.VimMenu*)*, i8*, i32, i32, [8 x i8*], [8 x i32], [8 x i8], %struct.VimMenu*, %struct.VimMenu*, %struct.VimMenu*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget* }
%struct._GtkWidget = type { %struct._GtkObject, i16, i8, i8, i8*, %struct._GtkStyle*, %struct._GtkRequisition, %struct._GdkRectangle, %struct._GdkDrawable*, %struct._GtkWidget* }
%struct._GtkObject = type { %struct._GObject, i32 }
%struct._GObject = type { %struct._GTypeInstance, i32, %struct._GData* }
%struct._GTypeInstance = type { %struct._GTypeClass* }
%struct._GTypeClass = type { i64 }
%struct._GData = type opaque
%struct._GtkStyle = type { %struct._GObject, [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], %struct._GdkColor, %struct._GdkColor, %struct._PangoFontDescription*, i32, i32, [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], %struct._GdkGC*, %struct._GdkGC*, [5 x %struct._GdkDrawable*], i32, i32, %struct._GdkColormap*, %struct._GdkFont*, %struct._PangoFontDescription*, %struct._GtkRcStyle*, %struct._GSList*, %struct._GArray*, %struct._GSList* }
%struct._GdkColor = type { i32, i16, i16, i16 }
%struct._GdkGC = type { %struct._GObject, i32, i32, i32, i32, %struct._GdkColormap* }
%struct._GdkColormap = type { %struct._GObject, i32, %struct._GdkColor*, %struct._GdkVisual*, i8* }
%struct._GdkVisual = type { %struct._GObject, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._GdkFont = type { i32, i32, i32 }
%struct._PangoFontDescription = type opaque
%struct._GtkRcStyle = type { %struct._GObject, i8*, [5 x i8*], %struct._PangoFontDescription*, [5 x i32], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], i32, i32, %struct._GArray*, %struct._GSList*, %struct._GSList*, i8 }
%struct._GArray = type { i8*, i32 }
%struct._GSList = type { i8*, %struct._GSList* }
%struct._GtkRequisition = type { i32, i32 }
%struct._GdkRectangle = type { i32, i32, i32, i32 }
%struct._GdkDrawable = type { %struct._GObject }
%struct.winbar_item_T = type { i32, i32, %struct.VimMenu* }
%struct.xfilemark = type { %struct.filemark, i8*, i64 }
%struct.filemark = type { %struct.pos_T, i32 }
%struct.matchitem = type { %struct.matchitem*, i32, i32, i8*, %struct.regmmatch_T, %struct.posmatch, %struct.match_T, i32, i32 }
%struct.regmmatch_T = type { %struct.regprog*, [10 x %struct.lpos_T], [10 x %struct.lpos_T], i32, i32 }
%struct.regprog = type { %struct.regengine*, i32, i32, i32, i32 }
%struct.regengine = type { %struct.regprog* (i8*, i32)*, void (%struct.regprog*)*, i32 (%struct.regmatch_T*, i8*, i32, i32)*, i64 (%struct.regmmatch_T*, %struct.window_S*, %struct.file_buffer*, i64, i32, %struct.timeval*, i32*)*, i8* }
%struct.regmatch_T = type { %struct.regprog*, [10 x i8*], [10 x i8*], i32 }
%struct.lpos_T = type { i64, i32 }
%struct.posmatch = type { [8 x %struct.llpos_T], i32, i64, i64 }
%struct.llpos_T = type { i64, i32, i32 }
%struct.match_T = type { %struct.regmmatch_T, %struct.file_buffer*, i64, i32, i32, i64, i32, i32, i32, %struct.timeval }
%struct.taggy = type { i8*, %struct.filemark, i32, i32, i8* }
%struct.GuiScrollbar = type { i64, %struct.window_S*, i32, i64, i64, i64, i32, i32, i32, i32, %struct._GtkWidget*, i64 }
%struct.qf_info_S = type opaque
%struct.winopt_T = type { i32, i32, i8*, i8*, i32, i64, i32, i32, i32, i8*, i64, i32, i8*, i8*, i64, i64, i8*, i8*, i8*, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i8*, i64, i32, i32, i8*, i8*, i8*, [44 x %struct.sctx_T] }
%struct.visualinfo_T = type { %struct.pos_T, %struct.pos_T, i32, i32 }
%struct.mapblock = type { %struct.mapblock*, i8*, i8*, i8*, i32, i32, i32, i32, i8, i8, %struct.sctx_T, i8 }
%struct.pos_T = type { i64, i32, i32 }
%struct.u_header = type { %union.anon.3, %union.anon.4, %union.anon.5, %union.anon.6, i64, i32, %struct.u_entry*, %struct.u_entry*, %struct.pos_T, i64, i32, [26 x %struct.pos_T], %struct.visualinfo_T, i64, i64 }
%union.anon.3 = type { %struct.u_header* }
%union.anon.4 = type { %struct.u_header* }
%union.anon.5 = type { %struct.u_header* }
%union.anon.6 = type { %struct.u_header* }
%struct.u_entry = type { %struct.u_entry*, i64, i64, i64, %struct.undoline_T*, i64 }
%struct.undoline_T = type { i8*, i64 }
%struct.growarray = type { i32, i32, i32, i32, i8* }
%struct.dictitem_S = type { %struct.typval_T, i8, [1 x i8] }
%struct.dictvar_S = type { i8, i8, i32, i32, %struct.hashtable_S, %struct.type_S*, %struct.dictvar_S*, %struct.dictvar_S*, %struct.dictvar_S* }
%struct.hashtable_S = type { i64, i64, i64, i32, i32, i32, %struct.hashitem_S*, [16 x %struct.hashitem_S] }
%struct.hashitem_S = type { i64, i8* }
%struct.type_S = type { i32, i8, i8, i8, %struct.type_S*, %struct.type_S** }
%struct.listener_S = type { %struct.listener_S*, i32, %struct.callback_T }
%struct.listvar_S = type { %struct.listitem_S*, %struct.listwatch_S*, %union.anon.0, %struct.type_S*, %struct.listvar_S*, %struct.listvar_S*, %struct.listvar_S*, i32, i32, i32, i32, i8 }
%struct.listitem_S = type { %struct.listitem_S*, %struct.listitem_S*, %struct.typval_T }
%struct.listwatch_S = type { %struct.listitem_S*, %struct.listwatch_S* }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i64, i64, i32 }
%struct.callback_T = type { i8*, %struct.partial_S*, i32 }
%struct.partial_S = type { i32, i8*, %struct.ufunc_T*, i32, %struct.outer_S, %struct.funcstack_S*, i32, %struct.typval_T*, %struct.dictvar_S*, i32 }
%struct.ufunc_T = type { i32, i32, i32, i32, i32, i32, %struct.growarray, %struct.growarray, %struct.type_S**, %struct.type_S*, %struct.growarray, %struct.partial_S*, i8*, %struct.type_S*, %struct.type_S*, i32, i32*, %struct.growarray, i32, i32, i32, %struct.timeval, %struct.timeval, %struct.timeval, i32*, %struct.timeval*, %struct.timeval*, %struct.timeval, %struct.timeval, %struct.timeval, i32, i32, %struct.sctx_T, i32, i32, %struct.funccall_S*, i8*, [4 x i8] }
%struct.funccall_S = type { %struct.ufunc_T*, i32, i32, [12 x %struct.anon.7], %struct.dictvar_S, %struct.dictitem_S, %struct.dictvar_S, %struct.dictitem_S, %struct.listvar_S, [20 x %struct.listitem_S], %struct.typval_T*, i64, i32, i32, %struct.timeval, %struct.funccall_S*, i32, i32, %struct.growarray }
%struct.anon.7 = type { %struct.dictitem_S, [20 x i8] }
%struct.outer_S = type { %struct.growarray*, i32, %struct.outer_S*, i32 }
%struct.funcstack_S = type { %struct.growarray, i32, i32, i32, i32 }
%struct.synblock_T = type { %struct.hashtable_S, %struct.hashtable_S, i32, i32, i32, i32, i32, %struct.growarray, %struct.growarray, i32, i32, i32, i32, i16, i64, i64, i64, i8*, %struct.regprog*, %struct.syn_time_T, i32, i32, i32, i32, %struct.syn_state*, i32, %struct.syn_state*, %struct.syn_state*, i32, i64, i16, %struct.growarray, [256 x i8], i8*, i8*, %struct.regprog*, i8*, i8*, i8*, i32, [32 x i8], i8* }
%struct.syn_time_T = type { %struct.timeval, %struct.timeval, i64, i64 }
%struct.syn_state = type { %struct.syn_state*, i64, %union.anon.2, i32, i32, i16*, i16, i64 }
%union.anon.2 = type { [7 x %struct.buf_state] }
%struct.buf_state = type { i32, i32, i32, i32, %struct.reg_extmatch_T* }
%struct.reg_extmatch_T = type { i16, [10 x i8*] }
%struct.sign_entry = type { i32, i32, i32, i64, %struct.signgroup_S*, %struct.sign_entry*, %struct.sign_entry* }
%struct.signgroup_S = type { i32, i16, [1 x i8] }
%struct.cryptstate_T = type { i32, i8* }
%struct.terminal_S = type opaque
%struct.Gui = type { i32, i32, i32, i32, i32, i32, i32, %struct.window_S*, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.GuiScrollbar, [3 x i32], i32, i32, i32, i32, i32, i32, %struct._PangoFontDescription*, i32, %struct._PangoFontDescription*, i64, i64, i64, i64, i32, %struct._GdkCursor*, i8*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, %struct._GdkColor*, %struct._GdkColor*, %struct._GdkColor*, %struct._GdkGC*, %struct._PangoContext*, %struct._PangoFont*, %struct._PangoGlyphString*, %struct._GtkWidget*, %struct._GtkAccelGroup*, %struct._GtkWidget*, i8*, i32, i8*, i8* }
%struct._GdkCursor = type { i32, i32 }
%struct._PangoContext = type opaque
%struct._PangoFont = type { %struct._GObject }
%struct._PangoGlyphString = type { i32, %struct._PangoGlyphInfo*, i32*, i32 }
%struct._PangoGlyphInfo = type { i32, %struct._PangoGlyphGeometry, %struct._PangoGlyphVisAttr }
%struct._PangoGlyphGeometry = type { i32, i32, i32 }
%struct._PangoGlyphVisAttr = type { i8, [3 x i8] }
%struct._GtkAccelGroup = type { %struct._GObject, i32, i32, %struct._GSList*, i32, %struct._GtkAccelGroupEntry* }
%struct._GtkAccelGroupEntry = type { %struct._GtkAccelKey, %struct._GClosure*, i32 }
%struct._GtkAccelKey = type { i32, i32, i16 }
%struct._GClosure = type { i32, void (%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*)*, i8*, %struct._GClosureNotifyData* }
%struct._GValue = type { i64, [2 x %union.anon.8] }
%union.anon.8 = type { i64 }
%struct._GClosureNotifyData = type { i8*, void (i8*, %struct._GClosure*)* }
%struct.cmdmod_T = type { i32, i32, i32, %struct.regmatch_T, i32, i32, i8*, i32, i64, i32, i32, i32 }
%struct.tabpage_S = type { %struct.tabpage_S*, %struct.frame_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, %struct.window_S*, i64, i64, i64, [3 x i32], i8*, i8*, %struct.diffblock_S*, [8 x %struct.file_buffer*], i32, i32, [2 x %struct.frame_S*], %struct.dictitem_S, %struct.dictvar_S* }
%struct.diffblock_S = type { %struct.diffblock_S*, [8 x i64], [8 x i64] }
%struct.BalloonEvalStruct = type { %struct._GtkWidget*, %struct._GtkWidget*, %struct._GtkWidget*, i32, i32, i32, i32, i32, void (%struct.BalloonEvalStruct*, i32)*, i8*, i32, i32*, i8* }
%struct.estack_T = type { i64, i8*, i32, %union.anon.10, %struct.sctx_T }
%union.anon.10 = type { %struct.sctx_T* }
%struct.exarg = type { i8*, i8*, i8*, i8**, i8*, i32, i64, i32, i32, i32, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8* (i32, i8*, i32, i32)*, i8*, %struct.cstack_T* }
%struct.cstack_T = type { [50 x i16], [50 x i8], %union.anon.9, [50 x i8*], [50 x i32], [50 x i32], [50 x i32], i32, i32, i32, %struct.eslist_elem*, i8 }
%union.anon.9 = type { [50 x i8*] }
%struct.eslist_elem = type { i32, %struct.eslist_elem* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.expand = type { i8*, i32, i32, i8*, %struct.sctx_T, i32, i32, i32, i32, i8**, i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@p_vfile = global i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), align 8, !dbg !0
@p_cp = external global i32, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"VIM_POSIX\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"cpo\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"aAbBcCdDeEfFgHiIjJkKlLmMnoOpPqrRsStuvwWxXyZ$!%*-+<>#{|&/\5C.;\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"shm\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"AS\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@set_init_1.names = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0)], align 16, !dbg !2860
@.str.8 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"TEMP\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"TMP\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"backupskip\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@options = internal global [508 x %struct.vimoption] [%struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i32 0, i32 0), i64 67109890, i8* bitcast (i64* @p_aleph to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 224 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i64 31745, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0), i64 67111937, i8* inttoptr (i64 -1 to i8*), i32 8194, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i32 0, i32 0), i64 31745, i8* bitcast (i32* @p_arshape to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_ari to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), i64 29700, i8* bitcast (i8** @p_ambw to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_acd to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_asd to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_ai to i8*), i32 16384, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.133, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_ar to i8*), i32 20481, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_aw to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.139, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_awa to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i64 29700, i8* bitcast (i8** @p_bg to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.143, i32 0, i32 0), i64 232452, i8* bitcast (i8** @p_bs to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.145, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_bk to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i64 231428, i8* bitcast (i8** @p_bkc to i8*), i32 20483, [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_bdir to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.152, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i32 0, i32 0), i64 4195332, i8* bitcast (i8** @p_bex to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.155, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_bsk to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_bdlay to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 600 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i64 1537, i8* bitcast (i32* @p_beval to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i32 0, i32 0), i64 1537, i8* bitcast (i32* @p_bevalterm to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.163, i32 0, i32 0), i64 536873996, i8* bitcast (i8** @p_bexpr to i8*), i32 20511, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.167, i32 0, i32 0), i64 164868, i8* bitcast (i8** @p_bo to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i64 5121, i8* bitcast (i32* @p_bin to i8*), i32 16392, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0), i8* null, i64 5633, i8* bitcast (i32* @p_bomb to i8*), i32 16394, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i64 287748, i8* bitcast (i8** @p_breakat to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.175, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.177, i32 0, i32 0), i64 11265, i8* inttoptr (i64 -1 to i8*), i32 8200, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i32 0, i32 0), i64 246796, i8* inttoptr (i64 -1 to i8*), i32 8201, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_bsdir to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i64 2098188, i8* bitcast (i8** @p_bh to i8*), i32 16386, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i64 2098177, i8* bitcast (i32* @p_bl to i8*), i32 16393, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i64 2098188, i8* bitcast (i8** @p_bt to i8*), i32 16388, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_cmp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i64 689172, i8* bitcast (i8** @p_cdpath to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i8* null, i64 4, i8* bitcast (i8** @p_cedit to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.195, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_ccv to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.199, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_cin to i8*), i32 16396, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.201, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_cink to i8*), i32 16397, [2 x i8*] [i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.202, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.204, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_cino to i8*), i32 16398, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_cinw to i8*), i32 16399, [2 x i8*] [i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.207, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.209, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_cb to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.210, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.212, i32 0, i32 0), i64 25602, i8* bitcast (i64* @p_ch to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.214, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_cwh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 7 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.216, i32 0, i32 0), i64 238596, i8* inttoptr (i64 -1 to i8*), i32 8229, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i32 0, i32 0), i64 30274, i8* bitcast (i64* @Columns to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.220, i32 0, i32 0), i64 67339276, i8* bitcast (i8** @p_com to i8*), i32 16402, [2 x i8*] [i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.221, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.223, i32 0, i32 0), i64 67109900, i8* bitcast (i8** @p_cms to i8*), i32 16401, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i64 24577, i8* bitcast (i32* @p_cp to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_cpt to i8*), i32 16403, [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.228, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0), i64 9228, i8* inttoptr (i64 -1 to i8*), i32 8195, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i32 0, i32 0), i64 9218, i8* inttoptr (i64 -1 to i8*), i32 8196, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.234, i32 0, i32 0), i64 525324, i8* bitcast (i8** @p_cfu to i8*), i32 16406, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.236, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_cot to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.237, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0), i64 164868, i8* bitcast (i8** @p_cpp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.241, i32 0, i32 0), i64 3076, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.243, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_confirm to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_ci to i8*), i32 16395, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i64 288772, i8* bitcast (i8** @p_cpo to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.252, i32 0, i32 0), i64 1036, i8* bitcast (i8** @p_cm to i8*), i32 20496, [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.253, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i32 0, i32 0), i64 3074, i8* bitcast (i64* @p_cspc to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.257, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_csprg to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.258, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.260, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_csqf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.262, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_csre to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_cst to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.266, i32 0, i32 0), i64 3074, i8* bitcast (i64* @p_csto to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.268, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_csverbose to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.270, i32 0, i32 0), i64 1025, i8* inttoptr (i64 -1 to i8*), i32 8199, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.272, i32 0, i32 0), i64 268436481, i8* inttoptr (i64 -1 to i8*), i32 8226, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.274, i32 0, i32 0), i64 268436481, i8* inttoptr (i64 -1 to i8*), i32 8227, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i64 238596, i8* inttoptr (i64 -1 to i8*), i32 8228, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.277, i32 0, i32 0), i8* null, i64 1028, i8* bitcast (i8** @p_debug to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.279, i32 0, i32 0), i64 67109900, i8* bitcast (i8** @p_def to i8*), i32 20503, [2 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.280, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.282, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_deco to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.284, i32 0, i32 0), i64 134448148, i8* bitcast (i8** @p_dict to i8*), i32 20500, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i32 0, i32 0), i8* null, i64 2106369, i8* inttoptr (i64 -1 to i8*), i32 8203, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.287, i32 0, i32 0), i64 67634180, i8* bitcast (i8** @p_dex to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.289, i32 0, i32 0), i64 238604, i8* bitcast (i8** @p_dip to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.290, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.292, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_dg to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.294, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_dir to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.295, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.297, i32 0, i32 0), i64 254980, i8* bitcast (i8** @p_dy to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.299, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_ead to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.301, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_ed to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i64 29697, i8* bitcast (i8** @p_emoji to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), i64 33584132, i8* bitcast (i8** @p_enc to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.304, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.306, i32 0, i32 0), i64 5633, i8* bitcast (i32* @p_eol to i8*), i32 16409, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.308, i32 0, i32 0), i64 25601, i8* bitcast (i32* @p_ea to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.310, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_ep to i8*), i32 20507, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.312, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_eb to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.314, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_ef to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.315, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.317, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_efm to i8*), i32 20485, [2 x i8*] [i8* getelementptr inbounds ([607 x i8], [607 x i8]* @.str.318, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.320, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_ek to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.322, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_ei to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.324, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_et to i8*), i32 16412, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.326, i32 0, i32 0), i64 525313, i8* bitcast (i32* @p_exrc to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.328, i32 0, i32 0), i64 22028, i8* bitcast (i8** @p_fenc to i8*), i32 16413, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.330, i32 0, i32 0), i64 99332, i8* bitcast (i8** @p_fencs to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.333, i32 0, i32 0), i64 67114508, i8* bitcast (i8** @p_ff to i8*), i32 16417, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i64 231428, i8* bitcast (i8** @p_ffs to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.335, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.337, i32 0, i32 0), i64 1025, i8* bitcast (i64* @p_fic to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.339, i32 0, i32 0), i64 6292508, i8* bitcast (i8** @p_ft to i8*), i32 16420, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.341, i32 0, i32 0), i64 254980, i8* bitcast (i8** @p_fcs to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.342, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.344, i32 0, i32 0), i64 5121, i8* bitcast (i32* @p_fixeol to i8*), i32 16410, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.346, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.348, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.350, i32 0, i32 0), i64 238596, i8* bitcast (i8** @p_fcl to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.352, i32 0, i32 0), i64 9218, i8* inttoptr (i64 -1 to i8*), i32 8204, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8205, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i32 0, i32 0), i64 536882188, i8* inttoptr (i64 -1 to i8*), i32 8211, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.355, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), i64 11276, i8* inttoptr (i64 -1 to i8*), i32 8206, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.357, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i64 9218, i8* inttoptr (i64 -1 to i8*), i32 8207, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.360, i32 0, i32 0), i64 67109890, i8* bitcast (i64* @p_fdls to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 -1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i32 0, i32 0), i64 240652, i8* inttoptr (i64 -1 to i8*), i32 8213, [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.362, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0), i64 11276, i8* inttoptr (i64 -1 to i8*), i32 8208, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.364, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i32 0, i32 0), i64 9218, i8* inttoptr (i64 -1 to i8*), i32 8209, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i64 9218, i8* inttoptr (i64 -1 to i8*), i32 8210, [2 x i8*] [i8* inttoptr (i64 20 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.368, i32 0, i32 0), i64 67339268, i8* bitcast (i8** @p_fdo to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.369, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.371, i32 0, i32 0), i64 536882188, i8* inttoptr (i64 -1 to i8*), i32 8212, [2 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.372, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.374, i32 0, i32 0), i64 536873996, i8* bitcast (i8** @p_fex to i8*), i32 16416, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.376, i32 0, i32 0), i64 264204, i8* bitcast (i8** @p_fo to i8*), i32 16419, [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.378, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.380, i32 0, i32 0), i64 1036, i8* bitcast (i8** @p_flp to i8*), i32 16418, [2 x i8*] [i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.381, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.383, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_fp to i8*), i32 20510, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.385, i32 0, i32 0), i64 525313, i8* bitcast (i32* @p_fs to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.387, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_gd to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.389, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.391, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_gefm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.392, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.394, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_gp to i8*), i32 20486, [2 x i8*] [i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.395, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.397, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_guicursor to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([162 x i8], [162 x i8]* @.str.398, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.400, i32 0, i32 0), i64 259076, i8* bitcast (i8** @p_guifont to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.402, i32 0, i32 0), i64 128004, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.404, i32 0, i32 0), i64 259076, i8* bitcast (i8** @p_guifontwide to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.406, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ghr to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 50 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.408, i32 0, i32 0), i64 287748, i8* bitcast (i8** @p_go to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.409, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.410, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_guipty to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.412, i32 0, i32 0), i64 536880132, i8* bitcast (i8** @p_gtl to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.414, i32 0, i32 0), i64 9220, i8* bitcast (i8** @p_gtt to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.416, i32 0, i32 0), i64 1026, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_hf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.419, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.421, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_hh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 20 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i64 99332, i8* bitcast (i8** @p_hlg to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.424, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_hid to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84, i32 0, i32 0), i64 259076, i8* bitcast (i8** @p_hl to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([570 x i8], [570 x i8]* @.str.426, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.428, i32 0, i32 0), i64 2050, i8* bitcast (i64* @p_hi to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 50 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.430, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_hkmap to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.432, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_hkmapp to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.434, i32 0, i32 0), i64 27649, i8* bitcast (i32* @p_hls to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_icon to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.435, i32 0, i32 0), i8* null, i64 536871940, i8* bitcast (i8** @p_iconstring to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.437, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_ic to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.439, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_imaf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.441, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_imak to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.443, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_imcmdline to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.445, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_imdisable to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.447, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_iminsert to i8*), i32 16421, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.449, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_imsearch to i8*), i32 16422, [2 x i8*] [i8* inttoptr (i64 -1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.451, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_imsf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.453, i32 0, i32 0), i64 525314, i8* bitcast (i64* @p_imst to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.455, i32 0, i32 0), i64 1036, i8* bitcast (i8** @p_inc to i8*), i32 20504, [2 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.456, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.458, i32 0, i32 0), i64 536871948, i8* bitcast (i8** @p_inex to i8*), i32 16425, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.460, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_is to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.462, i32 0, i32 0), i64 536873996, i8* bitcast (i8** @p_inde to i8*), i32 16423, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.464, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_indk to i8*), i32 16424, [2 x i8*] [i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.202, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.466, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_inf to i8*), i32 16426, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.468, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_im to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.470, i32 0, i32 0), i64 164868, i8* bitcast (i8** @p_isf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.471, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.473, i32 0, i32 0), i64 164868, i8* bitcast (i8** @p_isi to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.474, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.476, i32 0, i32 0), i64 165900, i8* bitcast (i8** @p_isk to i8*), i32 16427, [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.474, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.479, i32 0, i32 0), i64 189444, i8* bitcast (i8** @p_isp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.480, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.482, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_js to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.483, i32 0, i32 0), i8* null, i64 1548, i8* bitcast (i8** @p_key to i8*), i32 16428, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.484, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.485, i32 0, i32 0), i64 20993036, i8* bitcast (i8** @p_keymap to i8*), i32 16429, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.487, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_km to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.488, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.489, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_kp to i8*), i32 20526, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.490, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.492, i32 0, i32 0), i64 754692, i8* bitcast (i8** @p_langmap to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.494, i32 0, i32 0), i64 4195332, i8* bitcast (i8** @p_lm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.495, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.496, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_lnr to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.497, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.498, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_lrm to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.499, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.500, i32 0, i32 0), i64 25602, i8* bitcast (i64* @p_ls to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.501, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.502, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_lz to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.504, i32 0, i32 0), i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8214, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.505, i32 0, i32 0), i8* null, i64 30274, i8* bitcast (i64* @Rows to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 24 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.506, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.507, i32 0, i32 0), i64 29698, i8* bitcast (i64* @p_linespace to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.508, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_lisp to i8*), i32 16431, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.510, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_lispwords to i8*), i32 20528, [2 x i8*] [i8* getelementptr inbounds ([746 x i8], [746 x i8]* @.str.511, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* null, i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8192, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.514, i32 0, i32 0), i64 254980, i8* bitcast (i8** @p_lcs to i8*), i32 12289, [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.515, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.517, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_lpl to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.518, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.519, i32 0, i32 0), i8* null, i64 29697, i8* null, i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_magic to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.522, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_mef to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_menc to i8*), i32 20529, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_mp to i8*), i32 20487, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.527, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.529, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_mps to i8*), i32 16437, [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.530, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.532, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mat to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 5 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.534, i32 0, i32 0), i64 67109890, i8* bitcast (i64* @p_mco to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 2 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.536, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mfd to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 100 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.538, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mmd to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.539, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mm to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 5120 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.541, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mmp to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.542, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mmt to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 10240 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.544, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mis to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 25 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.545, i32 0, i32 0), i8* null, i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.547, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_msm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.548, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.550, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_ml to i8*), i32 16435, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i64 525313, i8* bitcast (i64* @p_mle to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.554, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mls to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 5 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i64 2098177, i8* bitcast (i32* @p_ma to i8*), i32 16434, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.557, i32 0, i32 0), i64 5633, i8* bitcast (i32* @p_mod to i8*), i32 16436, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.558, i32 0, i32 0), i8* null, i64 2049, i8* bitcast (i32* @p_more to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.559, i32 0, i32 0), i8* null, i64 263172, i8* bitcast (i8** @p_mouse to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.561, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_mousef to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_mh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.565, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_mousem to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.566, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.568, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_mouseshape to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.569, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.571, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_mouset to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 500 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.572, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.573, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.575, i32 0, i32 0), i64 2, i8* null, i32 0, [2 x i8*] [i8* inttoptr (i64 100 to i8*), i8* inttoptr (i64 100 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* null, i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.577, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_nf to i8*), i32 16438, [2 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.578, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.579, i32 0, i32 0), i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8215, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.581, i32 0, i32 0), i64 10242, i8* inttoptr (i64 -1 to i8*), i32 8217, [2 x i8*] [i8* inttoptr (i64 8 to i8*), i8* inttoptr (i64 4 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.583, i32 0, i32 0), i64 525324, i8* bitcast (i8** @p_ofu to i8*), i32 16439, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* null, i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.586, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.588, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_opfunc to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.590, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.592, i32 0, i32 0), i64 1036, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.593, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_pp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.594, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.596, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_para to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.597, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.598, i32 0, i32 0), i8* null, i64 16778241, i8* bitcast (i32* @p_paste to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.600, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_pt to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.602, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_pex to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.604, i32 0, i32 0), i64 4195332, i8* bitcast (i8** @p_pm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.606, i32 0, i32 0), i64 164884, i8* bitcast (i8** @p_path to i8*), i32 20536, [2 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.607, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.608, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.610, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_pi to i8*), i32 16441, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.612, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_pvh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 12 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.614, i32 0, i32 0), i64 164868, i8* bitcast (i8** @p_pvp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.616, i32 0, i32 0), i64 2102273, i8* inttoptr (i64 -1 to i8*), i32 8218, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.618, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_pdev to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.620, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_penc to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_pexpr to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.623, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_pfn to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.624, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i64 1049604, i8* bitcast (i8** @p_header to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.627, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.629, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_pmcs to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.631, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_pmfn to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.633, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_popt to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.634, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_prompt to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.636, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ph to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.638, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_pw to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 15 to i8*), i8* inttoptr (i64 15 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.639, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.640, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.641, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.642, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.644, i32 0, i32 0), i64 525314, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.646, i32 0, i32 0), i64 527372, i8* bitcast (i8** @p_qftf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.648, i32 0, i32 0), i64 1036, i8* bitcast (i8** @p_qe to i8*), i32 16442, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.649, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.651, i32 0, i32 0), i64 2102273, i8* bitcast (i32* @p_ro to i8*), i32 16443, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.652, i32 0, i32 0), i8* null, i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.654, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_rdt to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 2000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.656, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_re to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.658, i32 0, i32 0), i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8216, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.659, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_remap to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.661, i32 0, i32 0), i64 128004, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.662, i32 0, i32 0), i8* null, i64 1026, i8* bitcast (i64* @p_report to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 2 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.664, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.666, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_ri to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.668, i32 0, i32 0), i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8219, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.670, i32 0, i32 0), i64 9228, i8* inttoptr (i64 -1 to i8*), i32 8220, [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.671, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.672, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.674, i32 0, i32 0), i64 7169, i8* bitcast (i32* @p_ru to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.676, i32 0, i32 0), i64 536876044, i8* bitcast (i8** @p_ruf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.677, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_rtp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.594, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.678, i32 0, i32 0), i64 1538, i8* inttoptr (i64 -1 to i8*), i32 8222, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.680, i32 0, i32 0), i64 1025, i8* inttoptr (i64 -1 to i8*), i32 8221, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.682, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.683, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.684, i32 0, i32 0), i64 3074, i8* bitcast (i64* @p_sj to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.686, i32 0, i32 0), i64 27650, i8* bitcast (i64* @p_so to i8*), i32 12320, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.687, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.688, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_sbo to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.689, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.690, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.691, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_sections to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.692, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.693, i32 0, i32 0), i8* null, i64 525313, i8* bitcast (i32* @p_secure to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.694, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.695, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_sel to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.696, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.697, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.698, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_slm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.699, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.700, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_ssop to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.701, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.702, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_sh to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.703, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.704, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_shcf to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.705, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.706, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_sp to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.707, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.708, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.709, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_shq to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.710, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_srr to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.711, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.712, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.713, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.714, i32 0, i32 0), i64 1, i8* bitcast (i32* @p_stmp to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.715, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.716, i32 0, i32 0), i64 1026, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.717, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.718, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_sxq to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.719, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.720, i32 0, i32 0), i64 525316, i8* bitcast (i8** @p_sxe to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.722, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_sr to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.724, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_sw to i8*), i32 16454, [2 x i8*] [i8* inttoptr (i64 8 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.725, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i64 264196, i8* bitcast (i8** @p_shm to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.726, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.727, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.728, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.729, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_sn to i8*), i32 16445, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.730, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.731, i32 0, i32 0), i64 25604, i8* bitcast (i8** @p_sbr to i8*), i32 12326, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.732, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.733, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_sc to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.734, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.735, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_sft to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.737, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_sm to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.739, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_smd to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.741, i32 0, i32 0), i64 25602, i8* bitcast (i64* @p_stal to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.743, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ss to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.745, i32 0, i32 0), i64 19458, i8* bitcast (i64* @p_siso to i8*), i32 12319, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.746, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.747, i32 0, i32 0), i64 29708, i8* inttoptr (i64 -1 to i8*), i32 8235, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.748, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.749, i32 0, i32 0), i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.750, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.751, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_scs to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.752, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.753, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_si to i8*), i32 16444, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.754, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.755, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_sta to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.756, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.757, i32 0, i32 0), i64 3074, i8* bitcast (i64* @p_sts to i8*), i32 16452, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.758, i32 0, i32 0), i8* null, i64 1025, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.759, i32 0, i32 0), i8* null, i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8225, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.760, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.761, i32 0, i32 0), i64 17420, i8* bitcast (i8** @p_spc to i8*), i32 16448, [2 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.762, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.763, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.764, i32 0, i32 0), i64 623644, i8* bitcast (i8** @p_spf to i8*), i32 16449, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.765, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.766, i32 0, i32 0), i64 115740, i8* bitcast (i8** @p_spl to i8*), i32 16450, [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.767, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.768, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.769, i32 0, i32 0), i64 246796, i8* bitcast (i8** @p_spo to i8*), i32 16451, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.770, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.771, i32 0, i32 0), i64 623636, i8* bitcast (i8** @p_sps to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.772, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.773, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.774, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_sb to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.775, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.776, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_spr to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.777, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.778, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_sol to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.779, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.780, i32 0, i32 0), i64 536876044, i8* bitcast (i8** @p_stl to i8*), i32 12327, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.781, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.782, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_su to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.783, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.784, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.785, i32 0, i32 0), i64 230412, i8* bitcast (i8** @p_sua to i8*), i32 16453, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.786, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.787, i32 0, i32 0), i64 5121, i8* bitcast (i32* @p_swf to i8*), i32 16455, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.788, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.789, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_sws to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.384, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.790, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.791, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_swb to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.792, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.793, i32 0, i32 0), i64 17410, i8* bitcast (i64* @p_smc to i8*), i32 16446, [2 x i8*] [i8* inttoptr (i64 3000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.794, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.795, i32 0, i32 0), i64 6292492, i8* bitcast (i8** @p_syn to i8*), i32 16447, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.796, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.797, i32 0, i32 0), i64 536896516, i8* bitcast (i8** @p_tal to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.798, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.799, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_tpm to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 10 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.800, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.801, i32 0, i32 0), i64 17410, i8* bitcast (i64* @p_ts to i8*), i32 16459, [2 x i8*] [i8* inttoptr (i64 8 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.802, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.803, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_tbs to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.804, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.805, i32 0, i32 0), i64 2052, i8* bitcast (i8** @p_tc to i8*), i32 20554, [2 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.806, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.806, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.807, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.808, i32 0, i32 0), i64 525324, i8* bitcast (i8** @p_tfu to i8*), i32 16456, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.809, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.810, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_tl to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.811, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.812, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_tr to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.813, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.814, i32 0, i32 0), i64 230420, i8* bitcast (i8** @p_tags to i8*), i32 20553, [2 x i8*] [i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.815, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.816, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.817, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_tgst to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.818, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.819, i32 0, i32 0), i8* null, i64 26196, i8* bitcast ([0 x i8*]* @term_strings to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.820, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_tbidi to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.821, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.822, i32 0, i32 0), i64 29700, i8* bitcast (i8** @p_tenc to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.823, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.824, i32 0, i32 0), i64 31745, i8* bitcast (i32* @p_tgc to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.825, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.826, i32 0, i32 0), i64 9228, i8* inttoptr (i64 -1 to i8*), i32 8197, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.827, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.828, i32 0, i32 0), i64 19458, i8* bitcast (i64* @p_twsl to i8*), i32 16465, [2 x i8*] [i8* inttoptr (i64 10000 to i8*), i8* inttoptr (i64 10000 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.829, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.830, i32 0, i32 0), i64 9228, i8* inttoptr (i64 -1 to i8*), i32 8198, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.831, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.832, i32 0, i32 0), i64 1036, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.833, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_terse to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.834, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.835, i32 0, i32 0), i64 2049, i8* bitcast (i32* @p_ta to i8*), i32 0, [2 x i8*] [i8* null, i8* inttoptr (i64 1 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.836, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.837, i32 0, i32 0), i64 1537, i8* bitcast (i32* @p_tx to i8*), i32 16461, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.838, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.839, i32 0, i32 0), i64 19458, i8* bitcast (i64* @p_tw to i8*), i32 16460, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.840, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.841, i32 0, i32 0), i64 134448148, i8* bitcast (i8** @p_tsr to i8*), i32 20501, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.842, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.843, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_to to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.844, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.845, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_timeout to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.846, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.847, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_tm to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_title to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.848, i32 0, i32 0), i8* null, i64 1026, i8* bitcast (i64* @p_titlelen to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 85 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.849, i32 0, i32 0), i8* null, i64 1574404, i8* bitcast (i8** @p_titleold to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.850, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.851, i32 0, i32 0), i8* null, i64 536871940, i8* bitcast (i8** @p_titlestring to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.852, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.853, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_toolbar to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.854, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.855, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.856, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_tbis to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.857, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.858, i32 0, i32 0), i8* null, i64 3073, i8* bitcast (i32* @p_ttimeout to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.859, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.860, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ttm to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 -1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.861, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.862, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_tbi to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.864, i32 0, i32 0), i64 1537, i8* bitcast (i32* @p_tf to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.865, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.866, i32 0, i32 0), i64 1604, i8* bitcast (i8** @p_ttym to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.867, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.868, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ttyscroll to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 999 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.869, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.870, i32 0, i32 0), i64 26196, i8* bitcast ([0 x i8*]* @term_strings to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.871, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.872, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_udir to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.873, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.874, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.875, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_udf to i8*), i32 16462, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.876, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.877, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ul to i8*), i32 20559, [2 x i8*] [i8* inttoptr (i64 1000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.878, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.879, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ur to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 10000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.880, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.881, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_uc to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 200 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.882, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.883, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_ut to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 4000 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.884, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.885, i32 0, i32 0), i64 35844, i8* bitcast (i8** @p_vsts to i8*), i32 16466, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.886, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.887, i32 0, i32 0), i64 52228, i8* bitcast (i8** @p_vts to i8*), i32 16467, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.888, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.889, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_verbose to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.890, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.891, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_vfile to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.892, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.893, i32 0, i32 0), i64 525332, i8* bitcast (i8** @p_vdir to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.894, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.895, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.896, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_vop to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.897, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.898, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.899, i32 0, i32 0), i64 753668, i8* bitcast (i8** @p_viminfo to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.900, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.901, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.902, i32 0, i32 0), i64 754708, i8* bitcast (i8** @p_viminfofile to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.903, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.904, i32 0, i32 0), i64 67341316, i8* bitcast (i8** @p_ve to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.905, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.906, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_vb to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.907, i32 0, i32 0), i8* null, i64 1026, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.908, i32 0, i32 0), i8* null, i64 1026, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.909, i32 0, i32 0), i8* null, i64 1026, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.910, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_warn to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.911, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.912, i32 0, i32 0), i64 29697, i8* bitcast (i32* @p_wiv to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.913, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.914, i32 0, i32 0), i64 362500, i8* bitcast (i8** @p_ww to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.915, i32 0, i32 0)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.916, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.917, i32 0, i32 0), i64 2050, i8* bitcast (i64* @p_wc to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 5 to i8*), i8* inttoptr (i64 9 to i8*)], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.918, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.919, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wcm to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.920, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.921, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_wig to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.923, i32 0, i32 0), i64 1025, i8* bitcast (i64* @p_wic to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.924, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.925, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_wmnu to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.926, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.927, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_wim to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.928, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.929, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.930, i32 0, i32 0), i64 230404, i8* bitcast (i8** @p_wop to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.932, i32 0, i32 0), i64 1028, i8* bitcast (i8** @p_wak to i8*), i32 0, [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.933, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.934, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.935, i32 0, i32 0), i64 9228, i8* inttoptr (i64 -1 to i8*), i32 8202, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.936, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_window to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.937, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.938, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.939, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.940, i32 0, i32 0), i64 5121, i8* inttoptr (i64 -1 to i8*), i32 8232, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.941, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.942, i32 0, i32 0), i64 5121, i8* inttoptr (i64 -1 to i8*), i32 8233, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.943, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.944, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wmh to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.945, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.946, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wmw to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.947, i32 0, i32 0), i8* null, i64 525332, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.948, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.949, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wiw to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 20 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.950, i32 0, i32 0), i8* null, i64 9217, i8* inttoptr (i64 -1 to i8*), i32 8234, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.951, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.952, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wm to i8*), i32 16464, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.953, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.954, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_ws to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.955, i32 0, i32 0), i8* null, i64 1025, i8* bitcast (i32* @p_write to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.956, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.957, i32 0, i32 0), i64 1025, i8* bitcast (i32* @p_wa to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.958, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.959, i32 0, i32 0), i64 3073, i8* bitcast (i32* @p_wb to i8*), i32 0, [2 x i8*] [i8* inttoptr (i64 1 to i8*), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.960, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.961, i32 0, i32 0), i64 1026, i8* bitcast (i64* @p_wd to i8*), i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.962, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 416), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.963, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 408), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.964, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 424), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.965, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 24), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.966, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 16), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.967, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 344), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.968, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 616), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.969, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 624), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.970, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 64), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.971, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 8), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.972, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 56), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.973, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 264), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.974, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 224), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.975, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 360), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.976, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 352), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.977, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 232), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.978, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 48), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.979, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 568), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.980, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 80), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.981, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 88), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.982, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 40), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.983, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 32), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.984, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 472), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.985, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 552), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.986, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 488), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.987, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 680), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.988, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 688), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.989, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 504), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.990, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 456), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.991, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 448), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.992, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 304), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.993, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 296), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.994, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 432), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.995, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 400), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.996, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 168), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.997, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 152), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.998, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 160), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.999, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 256), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1000, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 440), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1001, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 576), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1002, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 528), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1003, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 536), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1004, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 136), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1005, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 280), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1006, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 672), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1007, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 144), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1008, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 656), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1009, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 520), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1010, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 376), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1011, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 464), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1012, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 176), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1013, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 368), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1014, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 128), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1015, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 544), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1016, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 664), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1017, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 184), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1018, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 560), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1019, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 272), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1020, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 648), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1021, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 240), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1022, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 328), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1023, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 336), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1024, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 312), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1025, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 320), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1026, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 248), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1027, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 480), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1028, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 584), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1029, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 208), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1030, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 216), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1031, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 72), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1032, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 288), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1033, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 104), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1034, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 96), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1035, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 120), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1036, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 112), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1037, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 496), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1038, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 512), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1039, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 392), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1040, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 384), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1041, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 192), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1042, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 200), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1043, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 592), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1044, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 600), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1045, i32 0, i32 0), i8* null, i64 549892, i8* getelementptr (i8, i8* bitcast ([0 x i8*]* @term_strings to i8*), i64 608), i32 0, [2 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i8* null], %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }, %struct.vimoption { i8* null, i8* null, i64 0, i8* null, i32 0, [2 x i8*] zeroinitializer, %struct.sctx_T { i32 0, i32 0, i64 0, i32 1 } }], align 16, !dbg !2959
@.str.14 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"bsk\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"maxmemtot\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"maxmem\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"CDPATH\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"cdpath\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"pexpr\00", align 1
@.str.21 = private unnamed_addr constant [121 x i8] c"system('lpr' . (&printdevice == '' ? '' : ' -P' . &printdevice) . ' ' . v:fname_in) . delete(v:fname_in) + v:shell_error\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"runtimepath\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after\00", align 1
@p_rtp = external global i8*, align 8
@.str.24 = private unnamed_addr constant [9 x i8] c"packpath\00", align 1
@p_pp = external global i8*, align 8
@found_reverse_arg = external local_unnamed_addr global i32, align 4
@.str.25 = private unnamed_addr constant [3 x i8] c"bg\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"dark\00", align 1
@curbuf = external local_unnamed_addr global %struct.file_buffer*, align 8
@curwin = external local_unnamed_addr global %struct.window_S*, align 8
@.str.27 = private unnamed_addr constant [7 x i8] c"MLTERM\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"tbidi\00", align 1
@p_enc = external global i8*, align 8
@.str.29 = private unnamed_addr constant [8 x i8] c"gb18030\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"cp936\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@Rows = external global i64, align 8
@p_window = external global i64, align 8
@.str.34 = private unnamed_addr constant [4 x i8] c"srr\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"sp\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"csh\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"tcsh\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"|& tee\00", align 1
@p_sp = external global i8*, align 8
@.str.39 = private unnamed_addr constant [3 x i8] c">&\00", align 1
@p_srr = external global i8*, align 8
@.str.40 = private unnamed_addr constant [4 x i8] c"ksh\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"mksh\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"pdksh\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"zsh\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"zsh-beta\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"bash\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"fish\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"2>&1| tee\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c">%s 2>&1\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"ffs\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"hlg\00", align 1
@p_hlg = external global i8*, align 8
@empty_option = external local_unnamed_addr global i8*, align 8
@.str.51 = private unnamed_addr constant [4 x i8] c"zh_\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@gui = external local_unnamed_addr global %struct.Gui, align 8
@p_title = external global i32, align 4
@.str.53 = private unnamed_addr constant [5 x i8] c"icon\00", align 1
@p_icon = external global i32, align 4
@cmdmod = external local_unnamed_addr global %struct.cmdmod_T, align 8
@.str.54 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"termcap\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"novice\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"inv\00", align 1
@e_invarg = external global [0 x i8], align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"E518: Unknown option\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"=:!&<\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"E519: Option not supported\00", align 1
@.str.62 = private unnamed_addr constant [32 x i8] c"E520: Not allowed in a modeline\00", align 1
@p_mle = external global i64, align 8
@.str.63 = private unnamed_addr constant [59 x i8] c"E992: Not allowed in a modeline when 'modelineexpr' is off\00", align 1
@sandbox = external local_unnamed_addr global i32, align 4
@e_sandbox = external global [0 x i8], align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"?=:!&<\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"?!&<\00", align 1
@e_trailing = external global [0 x i8], align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"=:&<\00", align 1
@p_verbose = external global i64, align 8
@.str.67 = private unnamed_addr constant [23 x i8] c"E846: Key code not set\00", align 1
@p_wc = external global i64, align 8
@p_wcm = external global i64, align 8
@.str.68 = private unnamed_addr constant [30 x i8] c"E521: Number required after =\00", align 1
@p_bg = external global i8*, align 8
@p_kp = external global i8*, align 8
@.str.69 = private unnamed_addr constant [6 x i8] c":help\00", align 1
@p_bs = external global i8*, align 8
@.str.70 = private unnamed_addr constant [11 x i8] c"indent,eol\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"indent,eol,start\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"indent,eol,nostop\00", align 1
@p_ww = external global i8*, align 8
@.str.73 = private unnamed_addr constant [3 x i8] c"b,\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"s,\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"h,l,\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"<,>,\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"[,],\00", align 1
@p_dir = external global i8*, align 8
@p_bdir = external global i8*, align 8
@has_mbyte = external local_unnamed_addr global i32, align 4
@mb_ptr2len = external local_unnamed_addr global i32 (i8*)*, align 8
@starting = external local_unnamed_addr global i32, align 4
@secure = external local_unnamed_addr global i32, align 4
@.str.78 = private unnamed_addr constant [27 x i8] c"E522: Not found in termcap\00", align 1
@full_screen = external global i32, align 4
@IObuff = external local_unnamed_addr global i8*, align 8
@.str.79 = private unnamed_addr constant [3 x i8] c": \00", align 1
@no_wait_return = external local_unnamed_addr global i32, align 4
@silent_mode = external local_unnamed_addr global i32, align 4
@info_message = external local_unnamed_addr global i32, align 4
@mb_ptr2char = external local_unnamed_addr global i32 (i8*)*, align 8
@p_tw = external global i64, align 8
@p_tw_nobin = internal unnamed_addr global i64 0, align 8, !dbg !2940
@p_wm = external global i64, align 8
@p_wm_nobin = internal unnamed_addr global i64 0, align 8, !dbg !2942
@p_ml = external global i32, align 4
@p_ml_nobin = internal unnamed_addr global i32 0, align 4, !dbg !2938
@p_et = external global i32, align 4
@p_et_nobin = internal unnamed_addr global i32 0, align 4, !dbg !2936
@p_bin = external global i32, align 4
@.str.80 = private unnamed_addr constant [21 x i8] c"was_set_insecurely()\00", align 1
@need_maketitle = external local_unnamed_addr global i32, align 4
@redraw_tabline = external local_unnamed_addr global i32, align 4
@exestack = external local_unnamed_addr global %struct.growarray, align 8
@current_sctx = external local_unnamed_addr global %struct.sctx_T, align 8
@findoption.quick_tab = internal unnamed_addr global [27 x i16] zeroinitializer, align 16, !dbg !2885
@.str.81 = private unnamed_addr constant [6 x i8] c"*****\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"E355: Unknown option: %s\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"E521: Number required: &%s = '%s'\00", align 1
@.str.84 = private unnamed_addr constant [3 x i8] c"hl\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"setlocal\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"if &%s != '%s'\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"endif\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"fdm\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"fde\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"fmr\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c"fdi\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"fdl\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"fml\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"fdn\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"fen\00", align 1
@p_ep = external global i8*, align 8
@p_cpo = external global i8*, align 8
@p_tx = external global i32, align 4
@p_fenc = external global i8*, align 8
@p_ffs = external global i8*, align 8
@.str.98 = private unnamed_addr constant [4 x i8] c"mac\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"dos\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@p_ff = external global i8*, align 8
@p_ai = external global i32, align 4
@buf_opt_idx = internal unnamed_addr global [84 x i32] zeroinitializer, align 16, !dbg !2956
@p_ai_nopaste = internal unnamed_addr global i32 0, align 4, !dbg !2944
@p_sw = external global i64, align 8
@p_tw_nopaste = internal unnamed_addr global i64 0, align 8, !dbg !2950
@p_wm_nopaste = internal unnamed_addr global i64 0, align 8, !dbg !2952
@p_bomb = external global i32, align 4
@p_fixeol = external global i32, align 4
@p_et_nopaste = internal unnamed_addr global i32 0, align 4, !dbg !2946
@p_inf = external global i32, align 4
@p_swf = external global i32, align 4
@p_cpt = external global i8*, align 8
@p_cfu = external global i8*, align 8
@p_ofu = external global i8*, align 8
@p_tfu = external global i8*, align 8
@p_sts = external global i64, align 8
@p_sts_nopaste = internal unnamed_addr global i64 0, align 8, !dbg !2948
@p_vsts = external global i8*, align 8
@p_vsts_nopaste = internal unnamed_addr global i8* null, align 8, !dbg !2954
@p_sn = external global i32, align 4
@p_com = external global i8*, align 8
@p_cms = external global i8*, align 8
@p_fo = external global i8*, align 8
@p_flp = external global i8*, align 8
@p_nf = external global i8*, align 8
@p_mps = external global i8*, align 8
@p_si = external global i32, align 4
@p_ci = external global i32, align 4
@p_cin = external global i32, align 4
@p_cink = external global i8*, align 8
@p_cino = external global i8*, align 8
@p_pi = external global i32, align 4
@p_cinw = external global i8*, align 8
@p_lisp = external global i32, align 4
@p_smc = external global i64, align 8
@p_spc = external global i8*, align 8
@p_spf = external global i8*, align 8
@p_spl = external global i8*, align 8
@p_spo = external global i8*, align 8
@p_inde = external global i8*, align 8
@p_indk = external global i8*, align 8
@p_fex = external global i8*, align 8
@p_key = external global i8*, align 8
@p_sua = external global i8*, align 8
@p_keymap = external global i8*, align 8
@p_twsl = external global i64, align 8
@p_iminsert = external global i64, align 8
@p_imsearch = external global i64, align 8
@p_inex = external global i8*, align 8
@p_qe = external global i8*, align 8
@p_udf = external global i32, align 4
@p_vts = external global i8*, align 8
@p_isk = external global i8*, align 8
@p_ts = external global i64, align 8
@p_ma = external global i32, align 4
@.str.101 = private unnamed_addr constant [3 x i8] c"ma\00", align 1
@expand_option_flags = internal unnamed_addr global i32 0, align 4, !dbg !3045
@expand_option_name = internal global [5 x i8] c"t_\00\00\00", align 1, !dbg !3047
@expand_option_idx = internal unnamed_addr global i32 -1, align 4, !dbg !3050
@p_path = external global i8*, align 8
@p_cdpath = external global i8*, align 8
@p_vdir = external global i8*, align 8
@p_ft = external global i8*, align 8
@p_tags = external global i8*, align 8
@p_sps = external global i8*, align 8
@.str.102 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c">\00", align 1
@NameBuff = external local_unnamed_addr global i8*, align 8
@escape_chars = external local_unnamed_addr global i8*, align 8
@p_shm = external global i8*, align 8
@.str.104 = private unnamed_addr constant [9 x i8] c"rmfixlnw\00", align 1
@.str.105 = private unnamed_addr constant [3 x i8] c"cp\00", align 1
@breakat_flags = external local_unnamed_addr global [256 x i8], align 16
@p_breakat = external global i8*, align 8
@p_so = external global i64, align 8
@p_siso = external global i64, align 8
@bkc_flags = external local_unnamed_addr global i32, align 4
@p_sbr = external global i8*, align 8
@.str.106 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.110 = private unnamed_addr constant [11 x i8] c"screenline\00", align 1
@magic_overruled = external local_unnamed_addr global i32, align 4
@p_magic = external global i32, align 4
@.str.111 = private unnamed_addr constant [6 x i8] c"aleph\00", align 1
@.str.112 = private unnamed_addr constant [3 x i8] c"al\00", align 1
@p_aleph = external global i64, align 8
@.str.113 = private unnamed_addr constant [10 x i8] c"antialias\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"anti\00", align 1
@.str.115 = private unnamed_addr constant [7 x i8] c"arabic\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"arab\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"arabicshape\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"arshape\00", align 1
@p_arshape = external global i32, align 4
@.str.119 = private unnamed_addr constant [12 x i8] c"allowrevins\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"ari\00", align 1
@p_ari = external global i32, align 4
@.str.121 = private unnamed_addr constant [10 x i8] c"altkeymap\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"akm\00", align 1
@.str.123 = private unnamed_addr constant [10 x i8] c"ambiwidth\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"ambw\00", align 1
@p_ambw = external global i8*, align 8
@.str.125 = private unnamed_addr constant [7 x i8] c"single\00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"autochdir\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"acd\00", align 1
@p_acd = external global i32, align 4
@.str.128 = private unnamed_addr constant [13 x i8] c"autoshelldir\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"asd\00", align 1
@p_asd = external global i32, align 4
@.str.130 = private unnamed_addr constant [11 x i8] c"autoindent\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"ai\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"autoprint\00", align 1
@.str.133 = private unnamed_addr constant [3 x i8] c"ap\00", align 1
@.str.134 = private unnamed_addr constant [9 x i8] c"autoread\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@p_ar = external global i32, align 4
@.str.136 = private unnamed_addr constant [10 x i8] c"autowrite\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"aw\00", align 1
@p_aw = external global i32, align 4
@.str.138 = private unnamed_addr constant [13 x i8] c"autowriteall\00", align 1
@.str.139 = private unnamed_addr constant [4 x i8] c"awa\00", align 1
@p_awa = external global i32, align 4
@.str.140 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@.str.142 = private unnamed_addr constant [10 x i8] c"backspace\00", align 1
@.str.143 = private unnamed_addr constant [3 x i8] c"bs\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.145 = private unnamed_addr constant [3 x i8] c"bk\00", align 1
@p_bk = external global i32, align 4
@.str.146 = private unnamed_addr constant [11 x i8] c"backupcopy\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"bkc\00", align 1
@p_bkc = external global i8*, align 8
@.str.148 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.150 = private unnamed_addr constant [10 x i8] c"backupdir\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"bdir\00", align 1
@.str.152 = private unnamed_addr constant [11 x i8] c".,~/tmp,~/\00", align 1
@.str.153 = private unnamed_addr constant [10 x i8] c"backupext\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"bex\00", align 1
@p_bex = external global i8*, align 8
@.str.155 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@p_bsk = external global i8*, align 8
@.str.156 = private unnamed_addr constant [13 x i8] c"balloondelay\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"bdlay\00", align 1
@p_bdlay = external global i64, align 8
@.str.158 = private unnamed_addr constant [12 x i8] c"ballooneval\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"beval\00", align 1
@p_beval = external global i32, align 4
@.str.160 = private unnamed_addr constant [16 x i8] c"balloonevalterm\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c"bevalterm\00", align 1
@p_bevalterm = external global i32, align 4
@.str.162 = private unnamed_addr constant [12 x i8] c"balloonexpr\00", align 1
@.str.163 = private unnamed_addr constant [6 x i8] c"bexpr\00", align 1
@p_bexpr = external global i8*, align 8
@.str.164 = private unnamed_addr constant [9 x i8] c"beautify\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c"bf\00", align 1
@.str.166 = private unnamed_addr constant [8 x i8] c"belloff\00", align 1
@.str.167 = private unnamed_addr constant [3 x i8] c"bo\00", align 1
@p_bo = external global i8*, align 8
@.str.168 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"bin\00", align 1
@.str.170 = private unnamed_addr constant [8 x i8] c"bioskey\00", align 1
@.str.171 = private unnamed_addr constant [6 x i8] c"biosk\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"bomb\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"breakat\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"brk\00", align 1
@.str.175 = private unnamed_addr constant [14 x i8] c" \09!@*-+;:,./?\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"breakindent\00", align 1
@.str.177 = private unnamed_addr constant [4 x i8] c"bri\00", align 1
@.str.178 = private unnamed_addr constant [15 x i8] c"breakindentopt\00", align 1
@.str.179 = private unnamed_addr constant [7 x i8] c"briopt\00", align 1
@.str.180 = private unnamed_addr constant [10 x i8] c"browsedir\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"bsdir\00", align 1
@p_bsdir = external global i8*, align 8
@.str.182 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.183 = private unnamed_addr constant [10 x i8] c"bufhidden\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"bh\00", align 1
@p_bh = external global i8*, align 8
@.str.185 = private unnamed_addr constant [10 x i8] c"buflisted\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"bl\00", align 1
@p_bl = external global i32, align 4
@.str.187 = private unnamed_addr constant [8 x i8] c"buftype\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"bt\00", align 1
@p_bt = external global i8*, align 8
@.str.189 = private unnamed_addr constant [8 x i8] c"casemap\00", align 1
@.str.190 = private unnamed_addr constant [4 x i8] c"cmp\00", align 1
@p_cmp = external global i8*, align 8
@.str.191 = private unnamed_addr constant [19 x i8] c"internal,keepascii\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c",,\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"cedit\00", align 1
@p_cedit = external global i8*, align 8
@.str.195 = private unnamed_addr constant [2 x i8] c"\06\00", align 1
@.str.196 = private unnamed_addr constant [12 x i8] c"charconvert\00", align 1
@.str.197 = private unnamed_addr constant [4 x i8] c"ccv\00", align 1
@p_ccv = external global i8*, align 8
@.str.198 = private unnamed_addr constant [8 x i8] c"cindent\00", align 1
@.str.199 = private unnamed_addr constant [4 x i8] c"cin\00", align 1
@.str.200 = private unnamed_addr constant [8 x i8] c"cinkeys\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"cink\00", align 1
@.str.202 = private unnamed_addr constant [27 x i8] c"0{,0},0),0],:,0#,!^F,o,O,e\00", align 1
@.str.203 = private unnamed_addr constant [11 x i8] c"cinoptions\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"cino\00", align 1
@.str.205 = private unnamed_addr constant [9 x i8] c"cinwords\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"cinw\00", align 1
@.str.207 = private unnamed_addr constant [28 x i8] c"if,else,while,do,for,switch\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"clipboard\00", align 1
@.str.209 = private unnamed_addr constant [3 x i8] c"cb\00", align 1
@p_cb = external global i8*, align 8
@.str.210 = private unnamed_addr constant [31 x i8] c"autoselect,exclude:cons\5C|linux\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"cmdheight\00", align 1
@.str.212 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@p_ch = external global i64, align 8
@.str.213 = private unnamed_addr constant [13 x i8] c"cmdwinheight\00", align 1
@.str.214 = private unnamed_addr constant [4 x i8] c"cwh\00", align 1
@p_cwh = external global i64, align 8
@.str.215 = private unnamed_addr constant [12 x i8] c"colorcolumn\00", align 1
@.str.216 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.217 = private unnamed_addr constant [8 x i8] c"columns\00", align 1
@.str.218 = private unnamed_addr constant [3 x i8] c"co\00", align 1
@Columns = external global i64, align 8
@.str.219 = private unnamed_addr constant [9 x i8] c"comments\00", align 1
@.str.220 = private unnamed_addr constant [4 x i8] c"com\00", align 1
@.str.221 = private unnamed_addr constant [44 x i8] c"s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-\00", align 1
@.str.222 = private unnamed_addr constant [14 x i8] c"commentstring\00", align 1
@.str.223 = private unnamed_addr constant [4 x i8] c"cms\00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c"/*%s*/\00", align 1
@.str.225 = private unnamed_addr constant [11 x i8] c"compatible\00", align 1
@.str.226 = private unnamed_addr constant [9 x i8] c"complete\00", align 1
@.str.227 = private unnamed_addr constant [4 x i8] c"cpt\00", align 1
@.str.228 = private unnamed_addr constant [12 x i8] c".,w,b,u,t,i\00", align 1
@.str.229 = private unnamed_addr constant [14 x i8] c"concealcursor\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"cocu\00", align 1
@.str.231 = private unnamed_addr constant [13 x i8] c"conceallevel\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"cole\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"completefunc\00", align 1
@.str.234 = private unnamed_addr constant [4 x i8] c"cfu\00", align 1
@.str.235 = private unnamed_addr constant [12 x i8] c"completeopt\00", align 1
@.str.236 = private unnamed_addr constant [4 x i8] c"cot\00", align 1
@p_cot = external global i8*, align 8
@.str.237 = private unnamed_addr constant [13 x i8] c"menu,preview\00", align 1
@.str.238 = private unnamed_addr constant [14 x i8] c"completepopup\00", align 1
@.str.239 = private unnamed_addr constant [4 x i8] c"cpp\00", align 1
@p_cpp = external global i8*, align 8
@.str.240 = private unnamed_addr constant [14 x i8] c"completeslash\00", align 1
@.str.241 = private unnamed_addr constant [4 x i8] c"csl\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"confirm\00", align 1
@.str.243 = private unnamed_addr constant [3 x i8] c"cf\00", align 1
@p_confirm = external global i32, align 4
@.str.244 = private unnamed_addr constant [8 x i8] c"conskey\00", align 1
@.str.245 = private unnamed_addr constant [6 x i8] c"consk\00", align 1
@.str.246 = private unnamed_addr constant [11 x i8] c"copyindent\00", align 1
@.str.247 = private unnamed_addr constant [3 x i8] c"ci\00", align 1
@.str.248 = private unnamed_addr constant [10 x i8] c"cpoptions\00", align 1
@.str.249 = private unnamed_addr constant [53 x i8] c"aAbBcCdDeEfFgHiIjJkKlLmMnoOpPqrRsStuvwWxXyZ$!%*-+<>;\00", align 1
@.str.250 = private unnamed_addr constant [8 x i8] c"aABceFs\00", align 1
@.str.251 = private unnamed_addr constant [12 x i8] c"cryptmethod\00", align 1
@.str.252 = private unnamed_addr constant [3 x i8] c"cm\00", align 1
@p_cm = external global i8*, align 8
@.str.253 = private unnamed_addr constant [10 x i8] c"blowfish2\00", align 1
@.str.254 = private unnamed_addr constant [15 x i8] c"cscopepathcomp\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"cspc\00", align 1
@p_cspc = external global i64, align 8
@.str.256 = private unnamed_addr constant [10 x i8] c"cscopeprg\00", align 1
@.str.257 = private unnamed_addr constant [6 x i8] c"csprg\00", align 1
@p_csprg = external global i8*, align 8
@.str.258 = private unnamed_addr constant [7 x i8] c"cscope\00", align 1
@.str.259 = private unnamed_addr constant [15 x i8] c"cscopequickfix\00", align 1
@.str.260 = private unnamed_addr constant [5 x i8] c"csqf\00", align 1
@p_csqf = external global i8*, align 8
@.str.261 = private unnamed_addr constant [15 x i8] c"cscoperelative\00", align 1
@.str.262 = private unnamed_addr constant [5 x i8] c"csre\00", align 1
@p_csre = external global i32, align 4
@.str.263 = private unnamed_addr constant [10 x i8] c"cscopetag\00", align 1
@.str.264 = private unnamed_addr constant [4 x i8] c"cst\00", align 1
@p_cst = external global i32, align 4
@.str.265 = private unnamed_addr constant [15 x i8] c"cscopetagorder\00", align 1
@.str.266 = private unnamed_addr constant [5 x i8] c"csto\00", align 1
@p_csto = external global i64, align 8
@.str.267 = private unnamed_addr constant [14 x i8] c"cscopeverbose\00", align 1
@.str.268 = private unnamed_addr constant [7 x i8] c"csverb\00", align 1
@p_csverbose = external global i32, align 4
@.str.269 = private unnamed_addr constant [11 x i8] c"cursorbind\00", align 1
@.str.270 = private unnamed_addr constant [4 x i8] c"crb\00", align 1
@.str.271 = private unnamed_addr constant [13 x i8] c"cursorcolumn\00", align 1
@.str.272 = private unnamed_addr constant [4 x i8] c"cuc\00", align 1
@.str.273 = private unnamed_addr constant [11 x i8] c"cursorline\00", align 1
@.str.274 = private unnamed_addr constant [4 x i8] c"cul\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"cursorlineopt\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"culopt\00", align 1
@.str.277 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@p_debug = external global i8*, align 8
@.str.278 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str.279 = private unnamed_addr constant [4 x i8] c"def\00", align 1
@p_def = external global i8*, align 8
@.str.280 = private unnamed_addr constant [15 x i8] c"^\5Cs*#\5Cs*define\00", align 1
@.str.281 = private unnamed_addr constant [11 x i8] c"delcombine\00", align 1
@.str.282 = private unnamed_addr constant [5 x i8] c"deco\00", align 1
@p_deco = external global i32, align 4
@.str.283 = private unnamed_addr constant [11 x i8] c"dictionary\00", align 1
@.str.284 = private unnamed_addr constant [5 x i8] c"dict\00", align 1
@p_dict = external global i8*, align 8
@.str.285 = private unnamed_addr constant [5 x i8] c"diff\00", align 1
@.str.286 = private unnamed_addr constant [9 x i8] c"diffexpr\00", align 1
@.str.287 = private unnamed_addr constant [4 x i8] c"dex\00", align 1
@p_dex = external global i8*, align 8
@.str.288 = private unnamed_addr constant [8 x i8] c"diffopt\00", align 1
@.str.289 = private unnamed_addr constant [4 x i8] c"dip\00", align 1
@p_dip = external global i8*, align 8
@.str.290 = private unnamed_addr constant [25 x i8] c"internal,filler,closeoff\00", align 1
@.str.291 = private unnamed_addr constant [8 x i8] c"digraph\00", align 1
@.str.292 = private unnamed_addr constant [3 x i8] c"dg\00", align 1
@p_dg = external global i32, align 4
@.str.293 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.294 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.295 = private unnamed_addr constant [22 x i8] c".,~/tmp,/var/tmp,/tmp\00", align 1
@.str.296 = private unnamed_addr constant [8 x i8] c"display\00", align 1
@.str.297 = private unnamed_addr constant [3 x i8] c"dy\00", align 1
@p_dy = external global i8*, align 8
@.str.298 = private unnamed_addr constant [12 x i8] c"eadirection\00", align 1
@.str.299 = private unnamed_addr constant [4 x i8] c"ead\00", align 1
@p_ead = external global i8*, align 8
@.str.300 = private unnamed_addr constant [13 x i8] c"edcompatible\00", align 1
@.str.301 = private unnamed_addr constant [3 x i8] c"ed\00", align 1
@p_ed = external global i32, align 4
@.str.302 = private unnamed_addr constant [6 x i8] c"emoji\00", align 1
@.str.303 = private unnamed_addr constant [4 x i8] c"emo\00", align 1
@p_emoji = external global i8*, align 8
@.str.304 = private unnamed_addr constant [7 x i8] c"latin1\00", align 1
@.str.305 = private unnamed_addr constant [10 x i8] c"endofline\00", align 1
@.str.306 = private unnamed_addr constant [4 x i8] c"eol\00", align 1
@p_eol = external global i32, align 4
@.str.307 = private unnamed_addr constant [12 x i8] c"equalalways\00", align 1
@.str.308 = private unnamed_addr constant [3 x i8] c"ea\00", align 1
@p_ea = external global i32, align 4
@.str.309 = private unnamed_addr constant [9 x i8] c"equalprg\00", align 1
@.str.310 = private unnamed_addr constant [3 x i8] c"ep\00", align 1
@.str.311 = private unnamed_addr constant [11 x i8] c"errorbells\00", align 1
@.str.312 = private unnamed_addr constant [3 x i8] c"eb\00", align 1
@p_eb = external global i32, align 4
@.str.313 = private unnamed_addr constant [10 x i8] c"errorfile\00", align 1
@.str.314 = private unnamed_addr constant [3 x i8] c"ef\00", align 1
@p_ef = external global i8*, align 8
@.str.315 = private unnamed_addr constant [11 x i8] c"errors.err\00", align 1
@.str.316 = private unnamed_addr constant [12 x i8] c"errorformat\00", align 1
@.str.317 = private unnamed_addr constant [4 x i8] c"efm\00", align 1
@p_efm = external global i8*, align 8
@.str.318 = private unnamed_addr constant [607 x i8] c"%*[^\22]\22%f\22%*\5CD%l: %m,\22%f\22%*\5CD%l: %m,%-G%f:%l: (Each undeclared identifier is reported only once,%-G%f:%l: for each function it appears in.),%-GIn file included from %f:%l:%c:,%-GIn file included from %f:%l:%c\5C,,%-GIn file included from %f:%l:%c,%-GIn file included from %f:%l,%-G%*[ ]from %f:%l:%c,%-G%*[ ]from %f:%l:,%-G%*[ ]from %f:%l\5C,,%-G%*[ ]from %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,\22%f\22\5C, line %l%*\5CD%c%*[^ ] %m,%D%*\5Ca[%*\5Cd]: Entering directory %*[`']%f',%X%*\5Ca[%*\5Cd]: Leaving directory %*[`']%f',%D%*\5Ca: Entering directory %*[`']%f',%X%*\5Ca: Leaving directory %*[`']%f',%DMaking %*\5Ca in %f,%f|%l| %m\00", align 1
@.str.319 = private unnamed_addr constant [8 x i8] c"esckeys\00", align 1
@.str.320 = private unnamed_addr constant [3 x i8] c"ek\00", align 1
@p_ek = external global i32, align 4
@.str.321 = private unnamed_addr constant [12 x i8] c"eventignore\00", align 1
@.str.322 = private unnamed_addr constant [3 x i8] c"ei\00", align 1
@p_ei = external global i8*, align 8
@.str.323 = private unnamed_addr constant [10 x i8] c"expandtab\00", align 1
@.str.324 = private unnamed_addr constant [3 x i8] c"et\00", align 1
@.str.325 = private unnamed_addr constant [5 x i8] c"exrc\00", align 1
@.str.326 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@p_exrc = external global i32, align 4
@.str.327 = private unnamed_addr constant [13 x i8] c"fileencoding\00", align 1
@.str.328 = private unnamed_addr constant [5 x i8] c"fenc\00", align 1
@.str.329 = private unnamed_addr constant [14 x i8] c"fileencodings\00", align 1
@.str.330 = private unnamed_addr constant [6 x i8] c"fencs\00", align 1
@p_fencs = external global i8*, align 8
@.str.331 = private unnamed_addr constant [8 x i8] c"ucs-bom\00", align 1
@.str.332 = private unnamed_addr constant [11 x i8] c"fileformat\00", align 1
@.str.333 = private unnamed_addr constant [3 x i8] c"ff\00", align 1
@.str.334 = private unnamed_addr constant [12 x i8] c"fileformats\00", align 1
@.str.335 = private unnamed_addr constant [9 x i8] c"unix,dos\00", align 1
@.str.336 = private unnamed_addr constant [15 x i8] c"fileignorecase\00", align 1
@.str.337 = private unnamed_addr constant [4 x i8] c"fic\00", align 1
@p_fic = external global i64, align 8
@.str.338 = private unnamed_addr constant [9 x i8] c"filetype\00", align 1
@.str.339 = private unnamed_addr constant [3 x i8] c"ft\00", align 1
@.str.340 = private unnamed_addr constant [10 x i8] c"fillchars\00", align 1
@.str.341 = private unnamed_addr constant [4 x i8] c"fcs\00", align 1
@p_fcs = external global i8*, align 8
@.str.342 = private unnamed_addr constant [20 x i8] c"vert:|,fold:-,eob:~\00", align 1
@.str.343 = private unnamed_addr constant [13 x i8] c"fixendofline\00", align 1
@.str.344 = private unnamed_addr constant [7 x i8] c"fixeol\00", align 1
@.str.345 = private unnamed_addr constant [6 x i8] c"fkmap\00", align 1
@.str.346 = private unnamed_addr constant [3 x i8] c"fk\00", align 1
@.str.347 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@.str.348 = private unnamed_addr constant [3 x i8] c"fl\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"foldclose\00", align 1
@.str.350 = private unnamed_addr constant [4 x i8] c"fcl\00", align 1
@p_fcl = external global i8*, align 8
@.str.351 = private unnamed_addr constant [11 x i8] c"foldcolumn\00", align 1
@.str.352 = private unnamed_addr constant [4 x i8] c"fdc\00", align 1
@.str.353 = private unnamed_addr constant [11 x i8] c"foldenable\00", align 1
@.str.354 = private unnamed_addr constant [9 x i8] c"foldexpr\00", align 1
@.str.355 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.356 = private unnamed_addr constant [11 x i8] c"foldignore\00", align 1
@.str.357 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.358 = private unnamed_addr constant [10 x i8] c"foldlevel\00", align 1
@.str.359 = private unnamed_addr constant [15 x i8] c"foldlevelstart\00", align 1
@.str.360 = private unnamed_addr constant [5 x i8] c"fdls\00", align 1
@p_fdls = external global i64, align 8
@.str.361 = private unnamed_addr constant [11 x i8] c"foldmarker\00", align 1
@.str.362 = private unnamed_addr constant [8 x i8] c"{{{,}}}\00", align 1
@.str.363 = private unnamed_addr constant [11 x i8] c"foldmethod\00", align 1
@.str.364 = private unnamed_addr constant [7 x i8] c"manual\00", align 1
@.str.365 = private unnamed_addr constant [13 x i8] c"foldminlines\00", align 1
@.str.366 = private unnamed_addr constant [12 x i8] c"foldnestmax\00", align 1
@.str.367 = private unnamed_addr constant [9 x i8] c"foldopen\00", align 1
@.str.368 = private unnamed_addr constant [4 x i8] c"fdo\00", align 1
@p_fdo = external global i8*, align 8
@.str.369 = private unnamed_addr constant [48 x i8] c"block,hor,mark,percent,quickfix,search,tag,undo\00", align 1
@.str.370 = private unnamed_addr constant [9 x i8] c"foldtext\00", align 1
@.str.371 = private unnamed_addr constant [4 x i8] c"fdt\00", align 1
@.str.372 = private unnamed_addr constant [11 x i8] c"foldtext()\00", align 1
@.str.373 = private unnamed_addr constant [11 x i8] c"formatexpr\00", align 1
@.str.374 = private unnamed_addr constant [4 x i8] c"fex\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"formatoptions\00", align 1
@.str.376 = private unnamed_addr constant [3 x i8] c"fo\00", align 1
@.str.377 = private unnamed_addr constant [3 x i8] c"vt\00", align 1
@.str.378 = private unnamed_addr constant [4 x i8] c"tcq\00", align 1
@.str.379 = private unnamed_addr constant [14 x i8] c"formatlistpat\00", align 1
@.str.380 = private unnamed_addr constant [4 x i8] c"flp\00", align 1
@.str.381 = private unnamed_addr constant [23 x i8] c"^\5Cs*\5Cd\5C+[\5C]:.)}\5Ct ]\5Cs*\00", align 1
@.str.382 = private unnamed_addr constant [10 x i8] c"formatprg\00", align 1
@.str.383 = private unnamed_addr constant [3 x i8] c"fp\00", align 1
@p_fp = external global i8*, align 8
@.str.384 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.385 = private unnamed_addr constant [3 x i8] c"fs\00", align 1
@p_fs = external global i32, align 4
@.str.386 = private unnamed_addr constant [9 x i8] c"gdefault\00", align 1
@.str.387 = private unnamed_addr constant [3 x i8] c"gd\00", align 1
@p_gd = external global i32, align 4
@.str.388 = private unnamed_addr constant [8 x i8] c"graphic\00", align 1
@.str.389 = private unnamed_addr constant [3 x i8] c"gr\00", align 1
@.str.390 = private unnamed_addr constant [11 x i8] c"grepformat\00", align 1
@.str.391 = private unnamed_addr constant [4 x i8] c"gfm\00", align 1
@p_gefm = external global i8*, align 8
@.str.392 = private unnamed_addr constant [26 x i8] c"%f:%l:%m,%f:%l%m,%f  %l%m\00", align 1
@.str.393 = private unnamed_addr constant [8 x i8] c"grepprg\00", align 1
@.str.394 = private unnamed_addr constant [3 x i8] c"gp\00", align 1
@p_gp = external global i8*, align 8
@.str.395 = private unnamed_addr constant [21 x i8] c"grep -n $* /dev/null\00", align 1
@.str.396 = private unnamed_addr constant [10 x i8] c"guicursor\00", align 1
@.str.397 = private unnamed_addr constant [4 x i8] c"gcr\00", align 1
@p_guicursor = external global i8*, align 8
@.str.398 = private unnamed_addr constant [162 x i8] c"n-v-c:block-Cursor/lCursor,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"guifont\00", align 1
@.str.400 = private unnamed_addr constant [4 x i8] c"gfn\00", align 1
@p_guifont = external global i8*, align 8
@.str.401 = private unnamed_addr constant [11 x i8] c"guifontset\00", align 1
@.str.402 = private unnamed_addr constant [4 x i8] c"gfs\00", align 1
@.str.403 = private unnamed_addr constant [12 x i8] c"guifontwide\00", align 1
@.str.404 = private unnamed_addr constant [4 x i8] c"gfw\00", align 1
@p_guifontwide = external global i8*, align 8
@.str.405 = private unnamed_addr constant [12 x i8] c"guiheadroom\00", align 1
@.str.406 = private unnamed_addr constant [4 x i8] c"ghr\00", align 1
@p_ghr = external global i64, align 8
@.str.407 = private unnamed_addr constant [11 x i8] c"guioptions\00", align 1
@.str.408 = private unnamed_addr constant [3 x i8] c"go\00", align 1
@p_go = external global i8*, align 8
@.str.409 = private unnamed_addr constant [10 x i8] c"aegimrLtT\00", align 1
@.str.410 = private unnamed_addr constant [7 x i8] c"guipty\00", align 1
@p_guipty = external global i32, align 4
@.str.411 = private unnamed_addr constant [12 x i8] c"guitablabel\00", align 1
@.str.412 = private unnamed_addr constant [4 x i8] c"gtl\00", align 1
@p_gtl = external global i8*, align 8
@.str.413 = private unnamed_addr constant [14 x i8] c"guitabtooltip\00", align 1
@.str.414 = private unnamed_addr constant [4 x i8] c"gtt\00", align 1
@p_gtt = external global i8*, align 8
@.str.415 = private unnamed_addr constant [9 x i8] c"hardtabs\00", align 1
@.str.416 = private unnamed_addr constant [3 x i8] c"ht\00", align 1
@.str.417 = private unnamed_addr constant [9 x i8] c"helpfile\00", align 1
@.str.418 = private unnamed_addr constant [3 x i8] c"hf\00", align 1
@p_hf = external global i8*, align 8
@.str.419 = private unnamed_addr constant [25 x i8] c"$VIMRUNTIME/doc/help.txt\00", align 1
@.str.420 = private unnamed_addr constant [11 x i8] c"helpheight\00", align 1
@.str.421 = private unnamed_addr constant [3 x i8] c"hh\00", align 1
@p_hh = external global i64, align 8
@.str.422 = private unnamed_addr constant [9 x i8] c"helplang\00", align 1
@.str.423 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.424 = private unnamed_addr constant [4 x i8] c"hid\00", align 1
@p_hid = external global i32, align 4
@.str.425 = private unnamed_addr constant [10 x i8] c"highlight\00", align 1
@p_hl = external global i8*, align 8
@.str.426 = private unnamed_addr constant [570 x i8] c"8:SpecialKey,~:EndOfBuffer,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,a:LineNrAbove,b:LineNrBelow,N:CursorLineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn,q:QuickFixLine,z:StatusLineTerm,Z:StatusLineTermNC\00", align 1
@.str.427 = private unnamed_addr constant [8 x i8] c"history\00", align 1
@.str.428 = private unnamed_addr constant [3 x i8] c"hi\00", align 1
@p_hi = external global i64, align 8
@.str.429 = private unnamed_addr constant [6 x i8] c"hkmap\00", align 1
@.str.430 = private unnamed_addr constant [3 x i8] c"hk\00", align 1
@p_hkmap = external global i32, align 4
@.str.431 = private unnamed_addr constant [7 x i8] c"hkmapp\00", align 1
@.str.432 = private unnamed_addr constant [4 x i8] c"hkp\00", align 1
@p_hkmapp = external global i32, align 4
@.str.433 = private unnamed_addr constant [9 x i8] c"hlsearch\00", align 1
@.str.434 = private unnamed_addr constant [4 x i8] c"hls\00", align 1
@p_hls = external global i32, align 4
@.str.435 = private unnamed_addr constant [11 x i8] c"iconstring\00", align 1
@p_iconstring = external global i8*, align 8
@.str.436 = private unnamed_addr constant [11 x i8] c"ignorecase\00", align 1
@.str.437 = private unnamed_addr constant [3 x i8] c"ic\00", align 1
@p_ic = external global i32, align 4
@.str.438 = private unnamed_addr constant [15 x i8] c"imactivatefunc\00", align 1
@.str.439 = private unnamed_addr constant [5 x i8] c"imaf\00", align 1
@p_imaf = external global i8*, align 8
@.str.440 = private unnamed_addr constant [14 x i8] c"imactivatekey\00", align 1
@.str.441 = private unnamed_addr constant [5 x i8] c"imak\00", align 1
@p_imak = external global i8*, align 8
@.str.442 = private unnamed_addr constant [10 x i8] c"imcmdline\00", align 1
@.str.443 = private unnamed_addr constant [4 x i8] c"imc\00", align 1
@p_imcmdline = external global i32, align 4
@.str.444 = private unnamed_addr constant [10 x i8] c"imdisable\00", align 1
@.str.445 = private unnamed_addr constant [4 x i8] c"imd\00", align 1
@p_imdisable = external global i32, align 4
@.str.446 = private unnamed_addr constant [9 x i8] c"iminsert\00", align 1
@.str.447 = private unnamed_addr constant [4 x i8] c"imi\00", align 1
@.str.448 = private unnamed_addr constant [9 x i8] c"imsearch\00", align 1
@.str.449 = private unnamed_addr constant [4 x i8] c"ims\00", align 1
@.str.450 = private unnamed_addr constant [13 x i8] c"imstatusfunc\00", align 1
@.str.451 = private unnamed_addr constant [5 x i8] c"imsf\00", align 1
@p_imsf = external global i8*, align 8
@.str.452 = private unnamed_addr constant [8 x i8] c"imstyle\00", align 1
@.str.453 = private unnamed_addr constant [5 x i8] c"imst\00", align 1
@p_imst = external global i64, align 8
@.str.454 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.455 = private unnamed_addr constant [4 x i8] c"inc\00", align 1
@p_inc = external global i8*, align 8
@.str.456 = private unnamed_addr constant [16 x i8] c"^\5Cs*#\5Cs*include\00", align 1
@.str.457 = private unnamed_addr constant [12 x i8] c"includeexpr\00", align 1
@.str.458 = private unnamed_addr constant [5 x i8] c"inex\00", align 1
@.str.459 = private unnamed_addr constant [10 x i8] c"incsearch\00", align 1
@.str.460 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@p_is = external global i32, align 4
@.str.461 = private unnamed_addr constant [11 x i8] c"indentexpr\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"inde\00", align 1
@.str.463 = private unnamed_addr constant [11 x i8] c"indentkeys\00", align 1
@.str.464 = private unnamed_addr constant [5 x i8] c"indk\00", align 1
@.str.465 = private unnamed_addr constant [10 x i8] c"infercase\00", align 1
@.str.466 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.467 = private unnamed_addr constant [11 x i8] c"insertmode\00", align 1
@.str.468 = private unnamed_addr constant [3 x i8] c"im\00", align 1
@p_im = external global i32, align 4
@.str.469 = private unnamed_addr constant [8 x i8] c"isfname\00", align 1
@.str.470 = private unnamed_addr constant [4 x i8] c"isf\00", align 1
@p_isf = external global i8*, align 8
@.str.471 = private unnamed_addr constant [30 x i8] c"@,48-57,/,.,-,_,+,,,#,$,%,~,=\00", align 1
@.str.472 = private unnamed_addr constant [8 x i8] c"isident\00", align 1
@.str.473 = private unnamed_addr constant [4 x i8] c"isi\00", align 1
@p_isi = external global i8*, align 8
@.str.474 = private unnamed_addr constant [18 x i8] c"@,48-57,_,192-255\00", align 1
@.str.475 = private unnamed_addr constant [10 x i8] c"iskeyword\00", align 1
@.str.476 = private unnamed_addr constant [4 x i8] c"isk\00", align 1
@.str.477 = private unnamed_addr constant [10 x i8] c"@,48-57,_\00", align 1
@.str.478 = private unnamed_addr constant [8 x i8] c"isprint\00", align 1
@.str.479 = private unnamed_addr constant [4 x i8] c"isp\00", align 1
@p_isp = external global i8*, align 8
@.str.480 = private unnamed_addr constant [10 x i8] c"@,161-255\00", align 1
@.str.481 = private unnamed_addr constant [11 x i8] c"joinspaces\00", align 1
@.str.482 = private unnamed_addr constant [3 x i8] c"js\00", align 1
@p_js = external global i32, align 4
@.str.483 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.484 = private unnamed_addr constant [7 x i8] c"keymap\00", align 1
@.str.485 = private unnamed_addr constant [4 x i8] c"kmp\00", align 1
@.str.486 = private unnamed_addr constant [9 x i8] c"keymodel\00", align 1
@.str.487 = private unnamed_addr constant [3 x i8] c"km\00", align 1
@p_km = external global i8*, align 8
@.str.488 = private unnamed_addr constant [11 x i8] c"keywordprg\00", align 1
@.str.489 = private unnamed_addr constant [3 x i8] c"kp\00", align 1
@.str.490 = private unnamed_addr constant [7 x i8] c"man -s\00", align 1
@.str.491 = private unnamed_addr constant [8 x i8] c"langmap\00", align 1
@.str.492 = private unnamed_addr constant [5 x i8] c"lmap\00", align 1
@p_langmap = external global i8*, align 8
@.str.493 = private unnamed_addr constant [9 x i8] c"langmenu\00", align 1
@.str.494 = private unnamed_addr constant [3 x i8] c"lm\00", align 1
@p_lm = external global i8*, align 8
@.str.495 = private unnamed_addr constant [12 x i8] c"langnoremap\00", align 1
@.str.496 = private unnamed_addr constant [4 x i8] c"lnr\00", align 1
@p_lnr = external global i32, align 4
@.str.497 = private unnamed_addr constant [10 x i8] c"langremap\00", align 1
@.str.498 = private unnamed_addr constant [4 x i8] c"lrm\00", align 1
@p_lrm = external global i32, align 4
@.str.499 = private unnamed_addr constant [11 x i8] c"laststatus\00", align 1
@.str.500 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@p_ls = external global i64, align 8
@.str.501 = private unnamed_addr constant [11 x i8] c"lazyredraw\00", align 1
@.str.502 = private unnamed_addr constant [3 x i8] c"lz\00", align 1
@p_lz = external global i32, align 4
@.str.503 = private unnamed_addr constant [10 x i8] c"linebreak\00", align 1
@.str.504 = private unnamed_addr constant [4 x i8] c"lbr\00", align 1
@.str.505 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.506 = private unnamed_addr constant [10 x i8] c"linespace\00", align 1
@.str.507 = private unnamed_addr constant [4 x i8] c"lsp\00", align 1
@p_linespace = external global i64, align 8
@.str.508 = private unnamed_addr constant [5 x i8] c"lisp\00", align 1
@.str.509 = private unnamed_addr constant [10 x i8] c"lispwords\00", align 1
@.str.510 = private unnamed_addr constant [3 x i8] c"lw\00", align 1
@p_lispwords = external global i8*, align 8
@.str.511 = private unnamed_addr constant [746 x i8] c"defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.513 = private unnamed_addr constant [10 x i8] c"listchars\00", align 1
@.str.514 = private unnamed_addr constant [4 x i8] c"lcs\00", align 1
@p_lcs = external global i8*, align 8
@.str.515 = private unnamed_addr constant [6 x i8] c"eol:$\00", align 1
@.str.516 = private unnamed_addr constant [12 x i8] c"loadplugins\00", align 1
@.str.517 = private unnamed_addr constant [4 x i8] c"lpl\00", align 1
@p_lpl = external global i32, align 4
@.str.518 = private unnamed_addr constant [7 x i8] c"luadll\00", align 1
@.str.519 = private unnamed_addr constant [9 x i8] c"macatsui\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"magic\00", align 1
@.str.521 = private unnamed_addr constant [7 x i8] c"makeef\00", align 1
@.str.522 = private unnamed_addr constant [4 x i8] c"mef\00", align 1
@p_mef = external global i8*, align 8
@.str.523 = private unnamed_addr constant [13 x i8] c"makeencoding\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"menc\00", align 1
@p_menc = external global i8*, align 8
@.str.525 = private unnamed_addr constant [8 x i8] c"makeprg\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"mp\00", align 1
@p_mp = external global i8*, align 8
@.str.527 = private unnamed_addr constant [5 x i8] c"make\00", align 1
@.str.528 = private unnamed_addr constant [11 x i8] c"matchpairs\00", align 1
@.str.529 = private unnamed_addr constant [4 x i8] c"mps\00", align 1
@.str.530 = private unnamed_addr constant [12 x i8] c"(:),{:},[:]\00", align 1
@.str.531 = private unnamed_addr constant [10 x i8] c"matchtime\00", align 1
@.str.532 = private unnamed_addr constant [4 x i8] c"mat\00", align 1
@p_mat = external global i64, align 8
@.str.533 = private unnamed_addr constant [11 x i8] c"maxcombine\00", align 1
@.str.534 = private unnamed_addr constant [4 x i8] c"mco\00", align 1
@p_mco = external global i64, align 8
@.str.535 = private unnamed_addr constant [13 x i8] c"maxfuncdepth\00", align 1
@.str.536 = private unnamed_addr constant [4 x i8] c"mfd\00", align 1
@p_mfd = external global i64, align 8
@.str.537 = private unnamed_addr constant [12 x i8] c"maxmapdepth\00", align 1
@.str.538 = private unnamed_addr constant [4 x i8] c"mmd\00", align 1
@p_mmd = external global i64, align 8
@.str.539 = private unnamed_addr constant [3 x i8] c"mm\00", align 1
@p_mm = external global i64, align 8
@.str.540 = private unnamed_addr constant [14 x i8] c"maxmempattern\00", align 1
@.str.541 = private unnamed_addr constant [4 x i8] c"mmp\00", align 1
@p_mmp = external global i64, align 8
@.str.542 = private unnamed_addr constant [4 x i8] c"mmt\00", align 1
@p_mmt = external global i64, align 8
@.str.543 = private unnamed_addr constant [10 x i8] c"menuitems\00", align 1
@.str.544 = private unnamed_addr constant [4 x i8] c"mis\00", align 1
@p_mis = external global i64, align 8
@.str.545 = private unnamed_addr constant [5 x i8] c"mesg\00", align 1
@.str.546 = private unnamed_addr constant [11 x i8] c"mkspellmem\00", align 1
@.str.547 = private unnamed_addr constant [4 x i8] c"msm\00", align 1
@p_msm = external global i8*, align 8
@.str.548 = private unnamed_addr constant [16 x i8] c"460000,2000,500\00", align 1
@.str.549 = private unnamed_addr constant [9 x i8] c"modeline\00", align 1
@.str.550 = private unnamed_addr constant [3 x i8] c"ml\00", align 1
@.str.551 = private unnamed_addr constant [13 x i8] c"modelineexpr\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"mle\00", align 1
@.str.553 = private unnamed_addr constant [10 x i8] c"modelines\00", align 1
@.str.554 = private unnamed_addr constant [4 x i8] c"mls\00", align 1
@p_mls = external global i64, align 8
@.str.555 = private unnamed_addr constant [11 x i8] c"modifiable\00", align 1
@.str.556 = private unnamed_addr constant [9 x i8] c"modified\00", align 1
@.str.557 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@p_mod = external global i32, align 4
@.str.558 = private unnamed_addr constant [5 x i8] c"more\00", align 1
@p_more = external global i32, align 4
@.str.559 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@p_mouse = external global i8*, align 8
@.str.560 = private unnamed_addr constant [11 x i8] c"mousefocus\00", align 1
@.str.561 = private unnamed_addr constant [7 x i8] c"mousef\00", align 1
@p_mousef = external global i32, align 4
@.str.562 = private unnamed_addr constant [10 x i8] c"mousehide\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"mh\00", align 1
@p_mh = external global i32, align 4
@.str.564 = private unnamed_addr constant [11 x i8] c"mousemodel\00", align 1
@.str.565 = private unnamed_addr constant [7 x i8] c"mousem\00", align 1
@p_mousem = external global i8*, align 8
@.str.566 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.567 = private unnamed_addr constant [11 x i8] c"mouseshape\00", align 1
@.str.568 = private unnamed_addr constant [7 x i8] c"mouses\00", align 1
@p_mouseshape = external global i8*, align 8
@.str.569 = private unnamed_addr constant [88 x i8] c"i-r:beam,s:updown,sd:udsizing,vs:leftright,vd:lrsizing,m:no,ml:up-arrow,v:rightup-arrow\00", align 1
@.str.570 = private unnamed_addr constant [10 x i8] c"mousetime\00", align 1
@.str.571 = private unnamed_addr constant [7 x i8] c"mouset\00", align 1
@p_mouset = external global i64, align 8
@.str.572 = private unnamed_addr constant [12 x i8] c"mzschemedll\00", align 1
@.str.573 = private unnamed_addr constant [14 x i8] c"mzschemegcdll\00", align 1
@.str.574 = private unnamed_addr constant [10 x i8] c"mzquantum\00", align 1
@.str.575 = private unnamed_addr constant [4 x i8] c"mzq\00", align 1
@.str.576 = private unnamed_addr constant [10 x i8] c"nrformats\00", align 1
@.str.577 = private unnamed_addr constant [3 x i8] c"nf\00", align 1
@.str.578 = private unnamed_addr constant [14 x i8] c"bin,octal,hex\00", align 1
@.str.579 = private unnamed_addr constant [3 x i8] c"nu\00", align 1
@.str.580 = private unnamed_addr constant [12 x i8] c"numberwidth\00", align 1
@.str.581 = private unnamed_addr constant [4 x i8] c"nuw\00", align 1
@.str.582 = private unnamed_addr constant [9 x i8] c"omnifunc\00", align 1
@.str.583 = private unnamed_addr constant [4 x i8] c"ofu\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.585 = private unnamed_addr constant [11 x i8] c"opendevice\00", align 1
@.str.586 = private unnamed_addr constant [5 x i8] c"odev\00", align 1
@.str.587 = private unnamed_addr constant [13 x i8] c"operatorfunc\00", align 1
@.str.588 = private unnamed_addr constant [7 x i8] c"opfunc\00", align 1
@p_opfunc = external global i8*, align 8
@.str.589 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.590 = private unnamed_addr constant [4 x i8] c"opt\00", align 1
@.str.591 = private unnamed_addr constant [11 x i8] c"osfiletype\00", align 1
@.str.592 = private unnamed_addr constant [4 x i8] c"oft\00", align 1
@.str.593 = private unnamed_addr constant [3 x i8] c"pp\00", align 1
@.str.594 = private unnamed_addr constant [66 x i8] c"~/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,~/.vim/after\00", align 1
@.str.595 = private unnamed_addr constant [11 x i8] c"paragraphs\00", align 1
@.str.596 = private unnamed_addr constant [5 x i8] c"para\00", align 1
@p_para = external global i8*, align 8
@.str.597 = private unnamed_addr constant [31 x i8] c"IPLPPPQPP TPHPLIPpLpItpplpipbp\00", align 1
@.str.598 = private unnamed_addr constant [6 x i8] c"paste\00", align 1
@p_paste = external global i32, align 4
@.str.599 = private unnamed_addr constant [12 x i8] c"pastetoggle\00", align 1
@.str.600 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@p_pt = external global i8*, align 8
@.str.601 = private unnamed_addr constant [10 x i8] c"patchexpr\00", align 1
@.str.602 = private unnamed_addr constant [4 x i8] c"pex\00", align 1
@p_pex = external global i8*, align 8
@.str.603 = private unnamed_addr constant [10 x i8] c"patchmode\00", align 1
@.str.604 = private unnamed_addr constant [3 x i8] c"pm\00", align 1
@p_pm = external global i8*, align 8
@.str.605 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.606 = private unnamed_addr constant [3 x i8] c"pa\00", align 1
@.str.607 = private unnamed_addr constant [17 x i8] c".,/usr/include,,\00", align 1
@.str.608 = private unnamed_addr constant [8 x i8] c"perldll\00", align 1
@.str.609 = private unnamed_addr constant [15 x i8] c"preserveindent\00", align 1
@.str.610 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.611 = private unnamed_addr constant [14 x i8] c"previewheight\00", align 1
@.str.612 = private unnamed_addr constant [4 x i8] c"pvh\00", align 1
@p_pvh = external global i64, align 8
@.str.613 = private unnamed_addr constant [13 x i8] c"previewpopup\00", align 1
@.str.614 = private unnamed_addr constant [4 x i8] c"pvp\00", align 1
@p_pvp = external global i8*, align 8
@.str.615 = private unnamed_addr constant [14 x i8] c"previewwindow\00", align 1
@.str.616 = private unnamed_addr constant [4 x i8] c"pvw\00", align 1
@.str.617 = private unnamed_addr constant [12 x i8] c"printdevice\00", align 1
@.str.618 = private unnamed_addr constant [5 x i8] c"pdev\00", align 1
@p_pdev = external global i8*, align 8
@.str.619 = private unnamed_addr constant [14 x i8] c"printencoding\00", align 1
@.str.620 = private unnamed_addr constant [5 x i8] c"penc\00", align 1
@p_penc = external global i8*, align 8
@.str.621 = private unnamed_addr constant [10 x i8] c"printexpr\00", align 1
@p_pexpr = external global i8*, align 8
@.str.622 = private unnamed_addr constant [10 x i8] c"printfont\00", align 1
@.str.623 = private unnamed_addr constant [4 x i8] c"pfn\00", align 1
@p_pfn = external global i8*, align 8
@.str.624 = private unnamed_addr constant [8 x i8] c"courier\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"printheader\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"pheader\00", align 1
@p_header = external global i8*, align 8
@.str.627 = private unnamed_addr constant [18 x i8] c"%<%f%h%m%=Page %N\00", align 1
@.str.628 = private unnamed_addr constant [15 x i8] c"printmbcharset\00", align 1
@.str.629 = private unnamed_addr constant [6 x i8] c"pmbcs\00", align 1
@p_pmcs = external global i8*, align 8
@.str.630 = private unnamed_addr constant [12 x i8] c"printmbfont\00", align 1
@.str.631 = private unnamed_addr constant [6 x i8] c"pmbfn\00", align 1
@p_pmfn = external global i8*, align 8
@.str.632 = private unnamed_addr constant [13 x i8] c"printoptions\00", align 1
@.str.633 = private unnamed_addr constant [5 x i8] c"popt\00", align 1
@p_popt = external global i8*, align 8
@.str.634 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@p_prompt = external global i32, align 4
@.str.635 = private unnamed_addr constant [10 x i8] c"pumheight\00", align 1
@.str.636 = private unnamed_addr constant [3 x i8] c"ph\00", align 1
@p_ph = external global i64, align 8
@.str.637 = private unnamed_addr constant [9 x i8] c"pumwidth\00", align 1
@.str.638 = private unnamed_addr constant [3 x i8] c"pw\00", align 1
@p_pw = external global i64, align 8
@.str.639 = private unnamed_addr constant [15 x i8] c"pythonthreedll\00", align 1
@.str.640 = private unnamed_addr constant [16 x i8] c"pythonthreehome\00", align 1
@.str.641 = private unnamed_addr constant [10 x i8] c"pythondll\00", align 1
@.str.642 = private unnamed_addr constant [11 x i8] c"pythonhome\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"pyxversion\00", align 1
@.str.644 = private unnamed_addr constant [4 x i8] c"pyx\00", align 1
@.str.645 = private unnamed_addr constant [17 x i8] c"quickfixtextfunc\00", align 1
@.str.646 = private unnamed_addr constant [5 x i8] c"qftf\00", align 1
@p_qftf = external global i8*, align 8
@.str.647 = private unnamed_addr constant [12 x i8] c"quoteescape\00", align 1
@.str.648 = private unnamed_addr constant [3 x i8] c"qe\00", align 1
@.str.649 = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@.str.650 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.651 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@p_ro = external global i32, align 4
@.str.652 = private unnamed_addr constant [7 x i8] c"redraw\00", align 1
@.str.653 = private unnamed_addr constant [11 x i8] c"redrawtime\00", align 1
@.str.654 = private unnamed_addr constant [4 x i8] c"rdt\00", align 1
@p_rdt = external global i64, align 8
@.str.655 = private unnamed_addr constant [13 x i8] c"regexpengine\00", align 1
@.str.656 = private unnamed_addr constant [3 x i8] c"re\00", align 1
@p_re = external global i64, align 8
@.str.657 = private unnamed_addr constant [15 x i8] c"relativenumber\00", align 1
@.str.658 = private unnamed_addr constant [4 x i8] c"rnu\00", align 1
@.str.659 = private unnamed_addr constant [6 x i8] c"remap\00", align 1
@p_remap = external global i32, align 4
@.str.660 = private unnamed_addr constant [14 x i8] c"renderoptions\00", align 1
@.str.661 = private unnamed_addr constant [4 x i8] c"rop\00", align 1
@.str.662 = private unnamed_addr constant [7 x i8] c"report\00", align 1
@p_report = external global i64, align 8
@.str.663 = private unnamed_addr constant [14 x i8] c"restorescreen\00", align 1
@.str.664 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.665 = private unnamed_addr constant [7 x i8] c"revins\00", align 1
@.str.666 = private unnamed_addr constant [3 x i8] c"ri\00", align 1
@p_ri = external global i32, align 4
@.str.667 = private unnamed_addr constant [10 x i8] c"rightleft\00", align 1
@.str.668 = private unnamed_addr constant [3 x i8] c"rl\00", align 1
@.str.669 = private unnamed_addr constant [13 x i8] c"rightleftcmd\00", align 1
@.str.670 = private unnamed_addr constant [4 x i8] c"rlc\00", align 1
@.str.671 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.672 = private unnamed_addr constant [8 x i8] c"rubydll\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"ruler\00", align 1
@.str.674 = private unnamed_addr constant [3 x i8] c"ru\00", align 1
@p_ru = external global i32, align 4
@.str.675 = private unnamed_addr constant [12 x i8] c"rulerformat\00", align 1
@.str.676 = private unnamed_addr constant [4 x i8] c"ruf\00", align 1
@p_ruf = external global i8*, align 8
@.str.677 = private unnamed_addr constant [4 x i8] c"rtp\00", align 1
@.str.678 = private unnamed_addr constant [4 x i8] c"scr\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"scrollbind\00", align 1
@.str.680 = private unnamed_addr constant [4 x i8] c"scb\00", align 1
@.str.681 = private unnamed_addr constant [12 x i8] c"scrollfocus\00", align 1
@.str.682 = private unnamed_addr constant [4 x i8] c"scf\00", align 1
@.str.683 = private unnamed_addr constant [11 x i8] c"scrolljump\00", align 1
@.str.684 = private unnamed_addr constant [3 x i8] c"sj\00", align 1
@p_sj = external global i64, align 8
@.str.685 = private unnamed_addr constant [10 x i8] c"scrolloff\00", align 1
@.str.686 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.687 = private unnamed_addr constant [10 x i8] c"scrollopt\00", align 1
@.str.688 = private unnamed_addr constant [4 x i8] c"sbo\00", align 1
@p_sbo = external global i8*, align 8
@.str.689 = private unnamed_addr constant [9 x i8] c"ver,jump\00", align 1
@.str.690 = private unnamed_addr constant [9 x i8] c"sections\00", align 1
@.str.691 = private unnamed_addr constant [5 x i8] c"sect\00", align 1
@p_sections = external global i8*, align 8
@.str.692 = private unnamed_addr constant [13 x i8] c"SHNHH HUnhsh\00", align 1
@.str.693 = private unnamed_addr constant [7 x i8] c"secure\00", align 1
@p_secure = external global i32, align 4
@.str.694 = private unnamed_addr constant [10 x i8] c"selection\00", align 1
@.str.695 = private unnamed_addr constant [4 x i8] c"sel\00", align 1
@p_sel = external global i8*, align 8
@.str.696 = private unnamed_addr constant [10 x i8] c"inclusive\00", align 1
@.str.697 = private unnamed_addr constant [11 x i8] c"selectmode\00", align 1
@.str.698 = private unnamed_addr constant [4 x i8] c"slm\00", align 1
@p_slm = external global i8*, align 8
@.str.699 = private unnamed_addr constant [15 x i8] c"sessionoptions\00", align 1
@.str.700 = private unnamed_addr constant [5 x i8] c"ssop\00", align 1
@p_ssop = external global i8*, align 8
@.str.701 = private unnamed_addr constant [66 x i8] c"blank,buffers,curdir,folds,help,options,tabpages,winsize,terminal\00", align 1
@.str.702 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@p_sh = external global i8*, align 8
@.str.703 = private unnamed_addr constant [13 x i8] c"shellcmdflag\00", align 1
@.str.704 = private unnamed_addr constant [5 x i8] c"shcf\00", align 1
@p_shcf = external global i8*, align 8
@.str.705 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.706 = private unnamed_addr constant [10 x i8] c"shellpipe\00", align 1
@.str.707 = private unnamed_addr constant [6 x i8] c"| tee\00", align 1
@.str.708 = private unnamed_addr constant [11 x i8] c"shellquote\00", align 1
@.str.709 = private unnamed_addr constant [4 x i8] c"shq\00", align 1
@p_shq = external global i8*, align 8
@.str.710 = private unnamed_addr constant [11 x i8] c"shellredir\00", align 1
@.str.711 = private unnamed_addr constant [11 x i8] c"shellslash\00", align 1
@.str.712 = private unnamed_addr constant [4 x i8] c"ssl\00", align 1
@.str.713 = private unnamed_addr constant [10 x i8] c"shelltemp\00", align 1
@.str.714 = private unnamed_addr constant [5 x i8] c"stmp\00", align 1
@p_stmp = external global i32, align 4
@.str.715 = private unnamed_addr constant [10 x i8] c"shelltype\00", align 1
@.str.716 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.717 = private unnamed_addr constant [12 x i8] c"shellxquote\00", align 1
@.str.718 = private unnamed_addr constant [4 x i8] c"sxq\00", align 1
@p_sxq = external global i8*, align 8
@.str.719 = private unnamed_addr constant [13 x i8] c"shellxescape\00", align 1
@.str.720 = private unnamed_addr constant [4 x i8] c"sxe\00", align 1
@p_sxe = external global i8*, align 8
@.str.721 = private unnamed_addr constant [11 x i8] c"shiftround\00", align 1
@.str.722 = private unnamed_addr constant [3 x i8] c"sr\00", align 1
@p_sr = external global i32, align 4
@.str.723 = private unnamed_addr constant [11 x i8] c"shiftwidth\00", align 1
@.str.724 = private unnamed_addr constant [3 x i8] c"sw\00", align 1
@.str.725 = private unnamed_addr constant [10 x i8] c"shortmess\00", align 1
@.str.726 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.727 = private unnamed_addr constant [11 x i8] c"filnxtToOS\00", align 1
@.str.728 = private unnamed_addr constant [10 x i8] c"shortname\00", align 1
@.str.729 = private unnamed_addr constant [3 x i8] c"sn\00", align 1
@.str.730 = private unnamed_addr constant [10 x i8] c"showbreak\00", align 1
@.str.731 = private unnamed_addr constant [4 x i8] c"sbr\00", align 1
@.str.732 = private unnamed_addr constant [8 x i8] c"showcmd\00", align 1
@.str.733 = private unnamed_addr constant [3 x i8] c"sc\00", align 1
@p_sc = external global i32, align 4
@.str.734 = private unnamed_addr constant [12 x i8] c"showfulltag\00", align 1
@.str.735 = private unnamed_addr constant [4 x i8] c"sft\00", align 1
@p_sft = external global i32, align 4
@.str.736 = private unnamed_addr constant [10 x i8] c"showmatch\00", align 1
@.str.737 = private unnamed_addr constant [3 x i8] c"sm\00", align 1
@p_sm = external global i32, align 4
@.str.738 = private unnamed_addr constant [9 x i8] c"showmode\00", align 1
@.str.739 = private unnamed_addr constant [4 x i8] c"smd\00", align 1
@p_smd = external global i32, align 4
@.str.740 = private unnamed_addr constant [12 x i8] c"showtabline\00", align 1
@.str.741 = private unnamed_addr constant [5 x i8] c"stal\00", align 1
@p_stal = external global i64, align 8
@.str.742 = private unnamed_addr constant [11 x i8] c"sidescroll\00", align 1
@.str.743 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@p_ss = external global i64, align 8
@.str.744 = private unnamed_addr constant [14 x i8] c"sidescrolloff\00", align 1
@.str.745 = private unnamed_addr constant [5 x i8] c"siso\00", align 1
@.str.746 = private unnamed_addr constant [11 x i8] c"signcolumn\00", align 1
@.str.747 = private unnamed_addr constant [4 x i8] c"scl\00", align 1
@.str.748 = private unnamed_addr constant [9 x i8] c"slowopen\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"slow\00", align 1
@.str.750 = private unnamed_addr constant [10 x i8] c"smartcase\00", align 1
@.str.751 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@p_scs = external global i32, align 4
@.str.752 = private unnamed_addr constant [12 x i8] c"smartindent\00", align 1
@.str.753 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.754 = private unnamed_addr constant [9 x i8] c"smarttab\00", align 1
@.str.755 = private unnamed_addr constant [4 x i8] c"sta\00", align 1
@p_sta = external global i32, align 4
@.str.756 = private unnamed_addr constant [12 x i8] c"softtabstop\00", align 1
@.str.757 = private unnamed_addr constant [4 x i8] c"sts\00", align 1
@.str.758 = private unnamed_addr constant [10 x i8] c"sourceany\00", align 1
@.str.759 = private unnamed_addr constant [6 x i8] c"spell\00", align 1
@.str.760 = private unnamed_addr constant [14 x i8] c"spellcapcheck\00", align 1
@.str.761 = private unnamed_addr constant [4 x i8] c"spc\00", align 1
@.str.762 = private unnamed_addr constant [19 x i8] c"[.?!]\5C_[\5C])'\22\09 ]\5C+\00", align 1
@.str.763 = private unnamed_addr constant [10 x i8] c"spellfile\00", align 1
@.str.764 = private unnamed_addr constant [4 x i8] c"spf\00", align 1
@.str.765 = private unnamed_addr constant [10 x i8] c"spelllang\00", align 1
@.str.766 = private unnamed_addr constant [4 x i8] c"spl\00", align 1
@.str.767 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.768 = private unnamed_addr constant [13 x i8] c"spelloptions\00", align 1
@.str.769 = private unnamed_addr constant [4 x i8] c"spo\00", align 1
@.str.770 = private unnamed_addr constant [13 x i8] c"spellsuggest\00", align 1
@.str.771 = private unnamed_addr constant [4 x i8] c"sps\00", align 1
@.str.772 = private unnamed_addr constant [5 x i8] c"best\00", align 1
@.str.773 = private unnamed_addr constant [11 x i8] c"splitbelow\00", align 1
@.str.774 = private unnamed_addr constant [3 x i8] c"sb\00", align 1
@p_sb = external global i32, align 4
@.str.775 = private unnamed_addr constant [11 x i8] c"splitright\00", align 1
@.str.776 = private unnamed_addr constant [4 x i8] c"spr\00", align 1
@p_spr = external global i32, align 4
@.str.777 = private unnamed_addr constant [12 x i8] c"startofline\00", align 1
@.str.778 = private unnamed_addr constant [4 x i8] c"sol\00", align 1
@p_sol = external global i32, align 4
@.str.779 = private unnamed_addr constant [11 x i8] c"statusline\00", align 1
@.str.780 = private unnamed_addr constant [4 x i8] c"stl\00", align 1
@p_stl = external global i8*, align 8
@.str.781 = private unnamed_addr constant [9 x i8] c"suffixes\00", align 1
@.str.782 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@p_su = external global i8*, align 8
@.str.783 = private unnamed_addr constant [29 x i8] c".bak,~,.o,.h,.info,.swp,.obj\00", align 1
@.str.784 = private unnamed_addr constant [12 x i8] c"suffixesadd\00", align 1
@.str.785 = private unnamed_addr constant [4 x i8] c"sua\00", align 1
@.str.786 = private unnamed_addr constant [9 x i8] c"swapfile\00", align 1
@.str.787 = private unnamed_addr constant [4 x i8] c"swf\00", align 1
@.str.788 = private unnamed_addr constant [9 x i8] c"swapsync\00", align 1
@.str.789 = private unnamed_addr constant [4 x i8] c"sws\00", align 1
@p_sws = external global i8*, align 8
@.str.790 = private unnamed_addr constant [10 x i8] c"switchbuf\00", align 1
@.str.791 = private unnamed_addr constant [4 x i8] c"swb\00", align 1
@p_swb = external global i8*, align 8
@.str.792 = private unnamed_addr constant [10 x i8] c"synmaxcol\00", align 1
@.str.793 = private unnamed_addr constant [4 x i8] c"smc\00", align 1
@.str.794 = private unnamed_addr constant [7 x i8] c"syntax\00", align 1
@.str.795 = private unnamed_addr constant [4 x i8] c"syn\00", align 1
@p_syn = external global i8*, align 8
@.str.796 = private unnamed_addr constant [8 x i8] c"tabline\00", align 1
@.str.797 = private unnamed_addr constant [4 x i8] c"tal\00", align 1
@p_tal = external global i8*, align 8
@.str.798 = private unnamed_addr constant [11 x i8] c"tabpagemax\00", align 1
@.str.799 = private unnamed_addr constant [4 x i8] c"tpm\00", align 1
@p_tpm = external global i64, align 8
@.str.800 = private unnamed_addr constant [8 x i8] c"tabstop\00", align 1
@.str.801 = private unnamed_addr constant [3 x i8] c"ts\00", align 1
@.str.802 = private unnamed_addr constant [11 x i8] c"tagbsearch\00", align 1
@.str.803 = private unnamed_addr constant [4 x i8] c"tbs\00", align 1
@p_tbs = external global i32, align 4
@.str.804 = private unnamed_addr constant [8 x i8] c"tagcase\00", align 1
@.str.805 = private unnamed_addr constant [3 x i8] c"tc\00", align 1
@p_tc = external global i8*, align 8
@.str.806 = private unnamed_addr constant [9 x i8] c"followic\00", align 1
@.str.807 = private unnamed_addr constant [8 x i8] c"tagfunc\00", align 1
@.str.808 = private unnamed_addr constant [4 x i8] c"tfu\00", align 1
@.str.809 = private unnamed_addr constant [10 x i8] c"taglength\00", align 1
@.str.810 = private unnamed_addr constant [3 x i8] c"tl\00", align 1
@p_tl = external global i64, align 8
@.str.811 = private unnamed_addr constant [12 x i8] c"tagrelative\00", align 1
@.str.812 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@p_tr = external global i32, align 4
@.str.813 = private unnamed_addr constant [5 x i8] c"tags\00", align 1
@.str.814 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.815 = private unnamed_addr constant [24 x i8] c"./tags,./TAGS,tags,TAGS\00", align 1
@.str.816 = private unnamed_addr constant [9 x i8] c"tagstack\00", align 1
@.str.817 = private unnamed_addr constant [5 x i8] c"tgst\00", align 1
@p_tgst = external global i32, align 4
@.str.818 = private unnamed_addr constant [7 x i8] c"tcldll\00", align 1
@.str.819 = private unnamed_addr constant [5 x i8] c"term\00", align 1
@term_strings = external global [0 x i8*], align 8
@.str.820 = private unnamed_addr constant [9 x i8] c"termbidi\00", align 1
@p_tbidi = external global i32, align 4
@.str.821 = private unnamed_addr constant [13 x i8] c"termencoding\00", align 1
@.str.822 = private unnamed_addr constant [5 x i8] c"tenc\00", align 1
@p_tenc = external global i8*, align 8
@.str.823 = private unnamed_addr constant [14 x i8] c"termguicolors\00", align 1
@.str.824 = private unnamed_addr constant [4 x i8] c"tgc\00", align 1
@p_tgc = external global i32, align 4
@.str.825 = private unnamed_addr constant [11 x i8] c"termwinkey\00", align 1
@.str.826 = private unnamed_addr constant [4 x i8] c"twk\00", align 1
@.str.827 = private unnamed_addr constant [14 x i8] c"termwinscroll\00", align 1
@.str.828 = private unnamed_addr constant [5 x i8] c"twsl\00", align 1
@.str.829 = private unnamed_addr constant [12 x i8] c"termwinsize\00", align 1
@.str.830 = private unnamed_addr constant [4 x i8] c"tws\00", align 1
@.str.831 = private unnamed_addr constant [12 x i8] c"termwintype\00", align 1
@.str.832 = private unnamed_addr constant [4 x i8] c"twt\00", align 1
@.str.833 = private unnamed_addr constant [6 x i8] c"terse\00", align 1
@p_terse = external global i32, align 4
@.str.834 = private unnamed_addr constant [9 x i8] c"textauto\00", align 1
@.str.835 = private unnamed_addr constant [3 x i8] c"ta\00", align 1
@p_ta = external global i32, align 4
@.str.836 = private unnamed_addr constant [9 x i8] c"textmode\00", align 1
@.str.837 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.838 = private unnamed_addr constant [10 x i8] c"textwidth\00", align 1
@.str.839 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.840 = private unnamed_addr constant [10 x i8] c"thesaurus\00", align 1
@.str.841 = private unnamed_addr constant [4 x i8] c"tsr\00", align 1
@p_tsr = external global i8*, align 8
@.str.842 = private unnamed_addr constant [8 x i8] c"tildeop\00", align 1
@.str.843 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@p_to = external global i32, align 4
@.str.844 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.845 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@p_timeout = external global i32, align 4
@.str.846 = private unnamed_addr constant [11 x i8] c"timeoutlen\00", align 1
@.str.847 = private unnamed_addr constant [3 x i8] c"tm\00", align 1
@p_tm = external global i64, align 8
@.str.848 = private unnamed_addr constant [9 x i8] c"titlelen\00", align 1
@p_titlelen = external global i64, align 8
@.str.849 = private unnamed_addr constant [9 x i8] c"titleold\00", align 1
@p_titleold = external global i8*, align 8
@.str.850 = private unnamed_addr constant [22 x i8] c"Thanks for flying Vim\00", align 1
@.str.851 = private unnamed_addr constant [12 x i8] c"titlestring\00", align 1
@p_titlestring = external global i8*, align 8
@.str.852 = private unnamed_addr constant [8 x i8] c"toolbar\00", align 1
@.str.853 = private unnamed_addr constant [3 x i8] c"tb\00", align 1
@p_toolbar = external global i8*, align 8
@.str.854 = private unnamed_addr constant [15 x i8] c"icons,tooltips\00", align 1
@.str.855 = private unnamed_addr constant [16 x i8] c"toolbariconsize\00", align 1
@.str.856 = private unnamed_addr constant [5 x i8] c"tbis\00", align 1
@p_tbis = external global i8*, align 8
@.str.857 = private unnamed_addr constant [6 x i8] c"small\00", align 1
@.str.858 = private unnamed_addr constant [9 x i8] c"ttimeout\00", align 1
@p_ttimeout = external global i32, align 4
@.str.859 = private unnamed_addr constant [12 x i8] c"ttimeoutlen\00", align 1
@.str.860 = private unnamed_addr constant [4 x i8] c"ttm\00", align 1
@p_ttm = external global i64, align 8
@.str.861 = private unnamed_addr constant [11 x i8] c"ttybuiltin\00", align 1
@.str.862 = private unnamed_addr constant [4 x i8] c"tbi\00", align 1
@p_tbi = external global i32, align 4
@.str.863 = private unnamed_addr constant [8 x i8] c"ttyfast\00", align 1
@.str.864 = private unnamed_addr constant [3 x i8] c"tf\00", align 1
@p_tf = external global i32, align 4
@.str.865 = private unnamed_addr constant [9 x i8] c"ttymouse\00", align 1
@.str.866 = private unnamed_addr constant [5 x i8] c"ttym\00", align 1
@p_ttym = external global i8*, align 8
@.str.867 = private unnamed_addr constant [10 x i8] c"ttyscroll\00", align 1
@.str.868 = private unnamed_addr constant [4 x i8] c"tsl\00", align 1
@p_ttyscroll = external global i64, align 8
@.str.869 = private unnamed_addr constant [8 x i8] c"ttytype\00", align 1
@.str.870 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.871 = private unnamed_addr constant [8 x i8] c"undodir\00", align 1
@.str.872 = private unnamed_addr constant [5 x i8] c"udir\00", align 1
@p_udir = external global i8*, align 8
@.str.873 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.874 = private unnamed_addr constant [9 x i8] c"undofile\00", align 1
@.str.875 = private unnamed_addr constant [4 x i8] c"udf\00", align 1
@.str.876 = private unnamed_addr constant [11 x i8] c"undolevels\00", align 1
@.str.877 = private unnamed_addr constant [3 x i8] c"ul\00", align 1
@p_ul = external global i64, align 8
@.str.878 = private unnamed_addr constant [11 x i8] c"undoreload\00", align 1
@.str.879 = private unnamed_addr constant [3 x i8] c"ur\00", align 1
@p_ur = external global i64, align 8
@.str.880 = private unnamed_addr constant [12 x i8] c"updatecount\00", align 1
@.str.881 = private unnamed_addr constant [3 x i8] c"uc\00", align 1
@p_uc = external global i64, align 8
@.str.882 = private unnamed_addr constant [11 x i8] c"updatetime\00", align 1
@.str.883 = private unnamed_addr constant [3 x i8] c"ut\00", align 1
@p_ut = external global i64, align 8
@.str.884 = private unnamed_addr constant [15 x i8] c"varsofttabstop\00", align 1
@.str.885 = private unnamed_addr constant [5 x i8] c"vsts\00", align 1
@.str.886 = private unnamed_addr constant [11 x i8] c"vartabstop\00", align 1
@.str.887 = private unnamed_addr constant [4 x i8] c"vts\00", align 1
@.str.888 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.889 = private unnamed_addr constant [4 x i8] c"vbs\00", align 1
@.str.890 = private unnamed_addr constant [12 x i8] c"verbosefile\00", align 1
@.str.891 = private unnamed_addr constant [6 x i8] c"vfile\00", align 1
@.str.892 = private unnamed_addr constant [8 x i8] c"viewdir\00", align 1
@.str.893 = private unnamed_addr constant [5 x i8] c"vdir\00", align 1
@.str.894 = private unnamed_addr constant [16 x i8] c"$HOME/.vim/view\00", align 1
@.str.895 = private unnamed_addr constant [12 x i8] c"viewoptions\00", align 1
@.str.896 = private unnamed_addr constant [4 x i8] c"vop\00", align 1
@p_vop = external global i8*, align 8
@.str.897 = private unnamed_addr constant [28 x i8] c"folds,options,cursor,curdir\00", align 1
@.str.898 = private unnamed_addr constant [8 x i8] c"viminfo\00", align 1
@.str.899 = private unnamed_addr constant [3 x i8] c"vi\00", align 1
@p_viminfo = external global i8*, align 8
@.str.900 = private unnamed_addr constant [15 x i8] c"'100,<50,s10,h\00", align 1
@.str.901 = private unnamed_addr constant [12 x i8] c"viminfofile\00", align 1
@.str.902 = private unnamed_addr constant [4 x i8] c"vif\00", align 1
@p_viminfofile = external global i8*, align 8
@.str.903 = private unnamed_addr constant [12 x i8] c"virtualedit\00", align 1
@.str.904 = private unnamed_addr constant [3 x i8] c"ve\00", align 1
@p_ve = external global i8*, align 8
@.str.905 = private unnamed_addr constant [11 x i8] c"visualbell\00", align 1
@.str.906 = private unnamed_addr constant [3 x i8] c"vb\00", align 1
@p_vb = external global i32, align 4
@.str.907 = private unnamed_addr constant [5 x i8] c"w300\00", align 1
@.str.908 = private unnamed_addr constant [6 x i8] c"w1200\00", align 1
@.str.909 = private unnamed_addr constant [6 x i8] c"w9600\00", align 1
@.str.910 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@p_warn = external global i32, align 4
@.str.911 = private unnamed_addr constant [12 x i8] c"weirdinvert\00", align 1
@.str.912 = private unnamed_addr constant [4 x i8] c"wiv\00", align 1
@p_wiv = external global i32, align 4
@.str.913 = private unnamed_addr constant [10 x i8] c"whichwrap\00", align 1
@.str.914 = private unnamed_addr constant [3 x i8] c"ww\00", align 1
@.str.915 = private unnamed_addr constant [4 x i8] c"b,s\00", align 1
@.str.916 = private unnamed_addr constant [9 x i8] c"wildchar\00", align 1
@.str.917 = private unnamed_addr constant [3 x i8] c"wc\00", align 1
@.str.918 = private unnamed_addr constant [10 x i8] c"wildcharm\00", align 1
@.str.919 = private unnamed_addr constant [4 x i8] c"wcm\00", align 1
@.str.920 = private unnamed_addr constant [11 x i8] c"wildignore\00", align 1
@.str.921 = private unnamed_addr constant [4 x i8] c"wig\00", align 1
@p_wig = external global i8*, align 8
@.str.922 = private unnamed_addr constant [15 x i8] c"wildignorecase\00", align 1
@.str.923 = private unnamed_addr constant [4 x i8] c"wic\00", align 1
@p_wic = external global i64, align 8
@.str.924 = private unnamed_addr constant [9 x i8] c"wildmenu\00", align 1
@.str.925 = private unnamed_addr constant [5 x i8] c"wmnu\00", align 1
@p_wmnu = external global i32, align 4
@.str.926 = private unnamed_addr constant [9 x i8] c"wildmode\00", align 1
@.str.927 = private unnamed_addr constant [4 x i8] c"wim\00", align 1
@p_wim = external global i8*, align 8
@.str.928 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.929 = private unnamed_addr constant [12 x i8] c"wildoptions\00", align 1
@.str.930 = private unnamed_addr constant [4 x i8] c"wop\00", align 1
@p_wop = external global i8*, align 8
@.str.931 = private unnamed_addr constant [11 x i8] c"winaltkeys\00", align 1
@.str.932 = private unnamed_addr constant [4 x i8] c"wak\00", align 1
@p_wak = external global i8*, align 8
@.str.933 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.934 = private unnamed_addr constant [9 x i8] c"wincolor\00", align 1
@.str.935 = private unnamed_addr constant [4 x i8] c"wcr\00", align 1
@.str.936 = private unnamed_addr constant [3 x i8] c"wi\00", align 1
@.str.937 = private unnamed_addr constant [10 x i8] c"winheight\00", align 1
@.str.938 = private unnamed_addr constant [3 x i8] c"wh\00", align 1
@p_wh = external global i64, align 8
@.str.939 = private unnamed_addr constant [13 x i8] c"winfixheight\00", align 1
@.str.940 = private unnamed_addr constant [4 x i8] c"wfh\00", align 1
@.str.941 = private unnamed_addr constant [12 x i8] c"winfixwidth\00", align 1
@.str.942 = private unnamed_addr constant [4 x i8] c"wfw\00", align 1
@.str.943 = private unnamed_addr constant [13 x i8] c"winminheight\00", align 1
@.str.944 = private unnamed_addr constant [4 x i8] c"wmh\00", align 1
@p_wmh = external global i64, align 8
@.str.945 = private unnamed_addr constant [12 x i8] c"winminwidth\00", align 1
@.str.946 = private unnamed_addr constant [4 x i8] c"wmw\00", align 1
@p_wmw = external global i64, align 8
@.str.947 = private unnamed_addr constant [10 x i8] c"winptydll\00", align 1
@.str.948 = private unnamed_addr constant [9 x i8] c"winwidth\00", align 1
@.str.949 = private unnamed_addr constant [4 x i8] c"wiw\00", align 1
@p_wiw = external global i64, align 8
@.str.950 = private unnamed_addr constant [5 x i8] c"wrap\00", align 1
@.str.951 = private unnamed_addr constant [11 x i8] c"wrapmargin\00", align 1
@.str.952 = private unnamed_addr constant [3 x i8] c"wm\00", align 1
@.str.953 = private unnamed_addr constant [9 x i8] c"wrapscan\00", align 1
@.str.954 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@p_ws = external global i32, align 4
@.str.955 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@p_write = external global i32, align 4
@.str.956 = private unnamed_addr constant [9 x i8] c"writeany\00", align 1
@.str.957 = private unnamed_addr constant [3 x i8] c"wa\00", align 1
@p_wa = external global i32, align 4
@.str.958 = private unnamed_addr constant [12 x i8] c"writebackup\00", align 1
@.str.959 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@p_wb = external global i32, align 4
@.str.960 = private unnamed_addr constant [11 x i8] c"writedelay\00", align 1
@.str.961 = private unnamed_addr constant [3 x i8] c"wd\00", align 1
@p_wd = external global i64, align 8
@.str.962 = private unnamed_addr constant [5 x i8] c"t_AB\00", align 1
@.str.963 = private unnamed_addr constant [5 x i8] c"t_AF\00", align 1
@.str.964 = private unnamed_addr constant [5 x i8] c"t_AU\00", align 1
@.str.965 = private unnamed_addr constant [5 x i8] c"t_AL\00", align 1
@.str.966 = private unnamed_addr constant [5 x i8] c"t_al\00", align 1
@.str.967 = private unnamed_addr constant [5 x i8] c"t_bc\00", align 1
@.str.968 = private unnamed_addr constant [5 x i8] c"t_BE\00", align 1
@.str.969 = private unnamed_addr constant [5 x i8] c"t_BD\00", align 1
@.str.970 = private unnamed_addr constant [5 x i8] c"t_cd\00", align 1
@.str.971 = private unnamed_addr constant [5 x i8] c"t_ce\00", align 1
@.str.972 = private unnamed_addr constant [5 x i8] c"t_cl\00", align 1
@.str.973 = private unnamed_addr constant [5 x i8] c"t_cm\00", align 1
@.str.974 = private unnamed_addr constant [5 x i8] c"t_Ce\00", align 1
@.str.975 = private unnamed_addr constant [5 x i8] c"t_Co\00", align 1
@.str.976 = private unnamed_addr constant [5 x i8] c"t_CS\00", align 1
@.str.977 = private unnamed_addr constant [5 x i8] c"t_Cs\00", align 1
@.str.978 = private unnamed_addr constant [5 x i8] c"t_cs\00", align 1
@.str.979 = private unnamed_addr constant [5 x i8] c"t_CV\00", align 1
@.str.980 = private unnamed_addr constant [5 x i8] c"t_da\00", align 1
@.str.981 = private unnamed_addr constant [5 x i8] c"t_db\00", align 1
@.str.982 = private unnamed_addr constant [5 x i8] c"t_DL\00", align 1
@.str.983 = private unnamed_addr constant [5 x i8] c"t_dl\00", align 1
@.str.984 = private unnamed_addr constant [5 x i8] c"t_EC\00", align 1
@.str.985 = private unnamed_addr constant [5 x i8] c"t_EI\00", align 1
@.str.986 = private unnamed_addr constant [5 x i8] c"t_fs\00", align 1
@.str.987 = private unnamed_addr constant [5 x i8] c"t_fd\00", align 1
@.str.988 = private unnamed_addr constant [5 x i8] c"t_fe\00", align 1
@.str.989 = private unnamed_addr constant [5 x i8] c"t_GP\00", align 1
@.str.990 = private unnamed_addr constant [5 x i8] c"t_IE\00", align 1
@.str.991 = private unnamed_addr constant [5 x i8] c"t_IS\00", align 1
@.str.992 = private unnamed_addr constant [5 x i8] c"t_ke\00", align 1
@.str.993 = private unnamed_addr constant [5 x i8] c"t_ks\00", align 1
@.str.994 = private unnamed_addr constant [5 x i8] c"t_le\00", align 1
@.str.995 = private unnamed_addr constant [5 x i8] c"t_mb\00", align 1
@.str.996 = private unnamed_addr constant [5 x i8] c"t_md\00", align 1
@.str.997 = private unnamed_addr constant [5 x i8] c"t_me\00", align 1
@.str.998 = private unnamed_addr constant [5 x i8] c"t_mr\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"t_ms\00", align 1
@.str.1000 = private unnamed_addr constant [5 x i8] c"t_nd\00", align 1
@.str.1001 = private unnamed_addr constant [5 x i8] c"t_op\00", align 1
@.str.1002 = private unnamed_addr constant [5 x i8] c"t_RF\00", align 1
@.str.1003 = private unnamed_addr constant [5 x i8] c"t_RB\00", align 1
@.str.1004 = private unnamed_addr constant [5 x i8] c"t_RC\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"t_RI\00", align 1
@.str.1006 = private unnamed_addr constant [5 x i8] c"t_Ri\00", align 1
@.str.1007 = private unnamed_addr constant [5 x i8] c"t_RS\00", align 1
@.str.1008 = private unnamed_addr constant [5 x i8] c"t_RT\00", align 1
@.str.1009 = private unnamed_addr constant [5 x i8] c"t_RV\00", align 1
@.str.1010 = private unnamed_addr constant [5 x i8] c"t_Sb\00", align 1
@.str.1011 = private unnamed_addr constant [5 x i8] c"t_SC\00", align 1
@.str.1012 = private unnamed_addr constant [5 x i8] c"t_se\00", align 1
@.str.1013 = private unnamed_addr constant [5 x i8] c"t_Sf\00", align 1
@.str.1014 = private unnamed_addr constant [5 x i8] c"t_SH\00", align 1
@.str.1015 = private unnamed_addr constant [5 x i8] c"t_SI\00", align 1
@.str.1016 = private unnamed_addr constant [5 x i8] c"t_Si\00", align 1
@.str.1017 = private unnamed_addr constant [5 x i8] c"t_so\00", align 1
@.str.1018 = private unnamed_addr constant [5 x i8] c"t_SR\00", align 1
@.str.1019 = private unnamed_addr constant [5 x i8] c"t_sr\00", align 1
@.str.1020 = private unnamed_addr constant [5 x i8] c"t_ST\00", align 1
@.str.1021 = private unnamed_addr constant [5 x i8] c"t_Te\00", align 1
@.str.1022 = private unnamed_addr constant [5 x i8] c"t_te\00", align 1
@.str.1023 = private unnamed_addr constant [5 x i8] c"t_TE\00", align 1
@.str.1024 = private unnamed_addr constant [5 x i8] c"t_ti\00", align 1
@.str.1025 = private unnamed_addr constant [5 x i8] c"t_TI\00", align 1
@.str.1026 = private unnamed_addr constant [5 x i8] c"t_Ts\00", align 1
@.str.1027 = private unnamed_addr constant [5 x i8] c"t_ts\00", align 1
@.str.1028 = private unnamed_addr constant [5 x i8] c"t_u7\00", align 1
@.str.1029 = private unnamed_addr constant [5 x i8] c"t_ue\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"t_us\00", align 1
@.str.1031 = private unnamed_addr constant [5 x i8] c"t_ut\00", align 1
@.str.1032 = private unnamed_addr constant [5 x i8] c"t_vb\00", align 1
@.str.1033 = private unnamed_addr constant [5 x i8] c"t_ve\00", align 1
@.str.1034 = private unnamed_addr constant [5 x i8] c"t_vi\00", align 1
@.str.1035 = private unnamed_addr constant [5 x i8] c"t_VS\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"t_vs\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"t_WP\00", align 1
@.str.1038 = private unnamed_addr constant [5 x i8] c"t_WS\00", align 1
@.str.1039 = private unnamed_addr constant [5 x i8] c"t_xn\00", align 1
@.str.1040 = private unnamed_addr constant [5 x i8] c"t_xs\00", align 1
@.str.1041 = private unnamed_addr constant [5 x i8] c"t_ZH\00", align 1
@.str.1042 = private unnamed_addr constant [5 x i8] c"t_ZR\00", align 1
@.str.1043 = private unnamed_addr constant [5 x i8] c"t_8f\00", align 1
@.str.1044 = private unnamed_addr constant [5 x i8] c"t_8b\00", align 1
@.str.1045 = private unnamed_addr constant [5 x i8] c"t_8u\00", align 1
@first_tabpage = external local_unnamed_addr global %struct.tabpage_S*, align 8
@curtab = external local_unnamed_addr global %struct.tabpage_S*, align 8
@firstwin = external local_unnamed_addr global %struct.window_S*, align 8
@.str.1046 = private unnamed_addr constant [2 x i8] c" \00", align 1
@e_secure = external global [0 x i8], align 1
@need_mouse_correct = external local_unnamed_addr global i32, align 4
@firstbuf = external local_unnamed_addr global %struct.file_buffer*, align 8
@readonlymode = external local_unnamed_addr global i32, align 4
@.str.1047 = private unnamed_addr constant [57 x i8] c"E946: Cannot make a terminal with running job modifiable\00", align 1
@State = external local_unnamed_addr global i32, align 4
@need_start_insertmode = external local_unnamed_addr global i32, align 4
@stop_insert_mode = external local_unnamed_addr global i32, align 4
@restart_edit = external local_unnamed_addr global i32, align 4
@mode_displayed = external local_unnamed_addr global i32, align 4
@clear_cmdline = external local_unnamed_addr global i32, align 4
@.str.1049 = private unnamed_addr constant [38 x i8] c"E590: A preview window already exists\00", align 1
@modified_was_set = external local_unnamed_addr global i32, align 4
@.str.1050 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@balloonEvalForTerm = external local_unnamed_addr global i32, align 4
@balloonEval = external local_unnamed_addr global %struct.BalloonEvalStruct*, align 8
@.str.1051 = private unnamed_addr constant [6 x i8] c"utf-8\00", align 1
@.str.1052 = private unnamed_addr constant [53 x i8] c"W17: Arabic requires UTF-8, do ':set encoding=utf-8'\00", align 1
@highlight_attr = external local_unnamed_addr global [48 x i32], align 16
@paste_option_changed.old_p_paste = internal unnamed_addr global i32 0, align 4, !dbg !3025
@paste_option_changed.save_sm = internal unnamed_addr global i32 0, align 4, !dbg !3030
@paste_option_changed.save_sta = internal unnamed_addr global i32 0, align 4, !dbg !3032
@paste_option_changed.save_ru = internal unnamed_addr global i32 0, align 4, !dbg !3034
@paste_option_changed.save_ri = internal unnamed_addr global i32 0, align 4, !dbg !3036
@paste_option_changed.save_hkmap = internal unnamed_addr global i32 0, align 4, !dbg !3038
@.str.1053 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.1054 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1055 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.1056 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.1057 = private unnamed_addr constant [10 x i8] c"setglobal\00", align 1
@e_positive = external global [0 x i8], align 1
@e_winheight = external global [0 x i8], align 1
@lastwin = external local_unnamed_addr global %struct.window_S*, align 8
@e_winwidth = external global [0 x i8], align 1
@termcap_active = external local_unnamed_addr global i32, align 4
@.str.1058 = private unnamed_addr constant [29 x i8] c"E593: Need at least %d lines\00", align 1
@.str.1059 = private unnamed_addr constant [31 x i8] c"E594: Need at least %d columns\00", align 1
@updating_screen = external local_unnamed_addr global i32, align 4
@cmdline_row = external local_unnamed_addr global i32, align 4
@e_scroll = external global [0 x i8], align 1
@.str.1060 = private unnamed_addr constant [24 x i8] c"\0A--- Terminal codes ---\00", align 1
@.str.1061 = private unnamed_addr constant [30 x i8] c"\0A--- Global option values ---\00", align 1
@.str.1062 = private unnamed_addr constant [29 x i8] c"\0A--- Local option values ---\00", align 1
@.str.1063 = private unnamed_addr constant [17 x i8] c"\0A--- Options ---\00", align 1
@got_int = external global i32, align 4
@msg_col = external local_unnamed_addr global i32, align 4
@.str.1064 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1065 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.1066 = private unnamed_addr constant [7 x i8] c"%s %s=\00", align 1
@.str.1067 = private unnamed_addr constant [8 x i8] c"%s %s+=\00", align 1
@.str.1068 = private unnamed_addr constant [8 x i8] c"%s %s%s\00", align 1
@.str.1069 = private unnamed_addr constant [21 x i8] c"E356: get_varp ERROR\00", align 1
@init_buf_opt_idx.did_init_buf_opt_idx = internal unnamed_addr global i1 false, align 4, !dbg !3052

; Function Attrs: nounwind uwtable
define void @set_init_1(i32) local_unnamed_addr #0 !dbg !2862 {
  %2 = alloca %struct.growarray, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2866, metadata !DIExpression()), !dbg !3057
  tail call void @langmap_init() #11, !dbg !3058
  store i32 1, i32* @p_cp, align 4, !dbg !3059, !tbaa !3060
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !3064
  %6 = icmp eq i8* %5, null, !dbg !3066
  br i1 %6, label %45, label %7, !dbg !3067

; <label>:7:                                      ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), metadata !3068, metadata !DIExpression()) #11, !dbg !3074
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), metadata !3073, metadata !DIExpression()) #11, !dbg !3077
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), metadata !3078, metadata !DIExpression()) #11, !dbg !3087
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), metadata !3083, metadata !DIExpression()) #11, !dbg !3089
  call void @llvm.dbg.value(metadata i32 0, metadata !3084, metadata !DIExpression()) #11, !dbg !3090
  %8 = tail call i8* @vim_strsave(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !3091
  call void @llvm.dbg.value(metadata i8* %8, metadata !3085, metadata !DIExpression()) #11, !dbg !3093
  call void @llvm.dbg.value(metadata i8* %8, metadata !3085, metadata !DIExpression()) #11, !dbg !3093
  %9 = icmp eq i8* %8, null, !dbg !3094
  br i1 %9, label %26, label %10, !dbg !3096

; <label>:10:                                     ; preds = %7
  %11 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %11, metadata !3086, metadata !DIExpression()) #11, !dbg !3099
  %12 = icmp sgt i32 %11, -1, !dbg !3100
  br i1 %12, label %13, label %26, !dbg !3102

; <label>:13:                                     ; preds = %10
  %14 = sext i32 %11 to i64, !dbg !3103
  %15 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %14, i32 2, !dbg !3106
  %16 = load i64, i64* %15, align 16, !dbg !3106, !tbaa !3107
  %17 = trunc i64 %16 to i8, !dbg !3112
  %18 = icmp slt i8 %17, 0, !dbg !3112
  %19 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %14, i32 5, i64 0
  br i1 %18, label %20, label %23, !dbg !3113

; <label>:20:                                     ; preds = %13
  %21 = load i8*, i8** %19, align 8, !dbg !3114, !tbaa !3115
  tail call void @vim_free(i8* %21) #11, !dbg !3116
  %22 = load i64, i64* %15, align 16, !dbg !3117, !tbaa !3107
  br label %23, !dbg !3116

; <label>:23:                                     ; preds = %20, %13
  %24 = phi i64 [ %22, %20 ], [ %16, %13 ], !dbg !3117
  store i8* %8, i8** %19, align 8, !dbg !3118, !tbaa !3115
  %25 = or i64 %24, 128, !dbg !3117
  store i64 %25, i64* %15, align 16, !dbg !3117, !tbaa !3107
  br label %26, !dbg !3119

; <label>:26:                                     ; preds = %7, %10, %23
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), metadata !3068, metadata !DIExpression()) #11, !dbg !3120
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), metadata !3073, metadata !DIExpression()) #11, !dbg !3122
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), metadata !3078, metadata !DIExpression()) #11, !dbg !3123
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), metadata !3083, metadata !DIExpression()) #11, !dbg !3125
  call void @llvm.dbg.value(metadata i32 0, metadata !3084, metadata !DIExpression()) #11, !dbg !3126
  %27 = tail call i8* @vim_strsave(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !3127
  call void @llvm.dbg.value(metadata i8* %27, metadata !3085, metadata !DIExpression()) #11, !dbg !3128
  call void @llvm.dbg.value(metadata i8* %27, metadata !3085, metadata !DIExpression()) #11, !dbg !3128
  %28 = icmp eq i8* %27, null, !dbg !3129
  br i1 %28, label %45, label %29, !dbg !3130

; <label>:29:                                     ; preds = %26
  %30 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !3131
  call void @llvm.dbg.value(metadata i32 %30, metadata !3086, metadata !DIExpression()) #11, !dbg !3132
  %31 = icmp sgt i32 %30, -1, !dbg !3133
  br i1 %31, label %32, label %45, !dbg !3134

; <label>:32:                                     ; preds = %29
  %33 = sext i32 %30 to i64, !dbg !3135
  %34 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %33, i32 2, !dbg !3136
  %35 = load i64, i64* %34, align 16, !dbg !3136, !tbaa !3107
  %36 = trunc i64 %35 to i8, !dbg !3137
  %37 = icmp slt i8 %36, 0, !dbg !3137
  %38 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %33, i32 5, i64 0
  br i1 %37, label %39, label %42, !dbg !3138

; <label>:39:                                     ; preds = %32
  %40 = load i8*, i8** %38, align 8, !dbg !3139, !tbaa !3115
  tail call void @vim_free(i8* %40) #11, !dbg !3140
  %41 = load i64, i64* %34, align 16, !dbg !3141, !tbaa !3107
  br label %42, !dbg !3140

; <label>:42:                                     ; preds = %39, %32
  %43 = phi i64 [ %41, %39 ], [ %35, %32 ], !dbg !3141
  store i8* %27, i8** %38, align 8, !dbg !3142, !tbaa !3115
  %44 = or i64 %43, 128, !dbg !3141
  store i64 %44, i64* %34, align 16, !dbg !3141, !tbaa !3107
  br label %45, !dbg !3143

; <label>:45:                                     ; preds = %42, %29, %26, %1
  %46 = tail call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !3144
  call void @llvm.dbg.value(metadata i8* %46, metadata !2867, metadata !DIExpression()), !dbg !3146
  %47 = icmp eq i8* %46, null, !dbg !3147
  br i1 %47, label %77, label %48, !dbg !3148

; <label>:48:                                     ; preds = %45
  %49 = load i8, i8* %46, align 1, !dbg !3149, !tbaa !3150
  %50 = icmp eq i8 %49, 0, !dbg !3151
  br i1 %50, label %77, label %51, !dbg !3152

; <label>:51:                                     ; preds = %48
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), metadata !3078, metadata !DIExpression()) #11, !dbg !3153
  call void @llvm.dbg.value(metadata i8* %46, metadata !3083, metadata !DIExpression()) #11, !dbg !3155
  call void @llvm.dbg.value(metadata i32 1, metadata !3084, metadata !DIExpression()) #11, !dbg !3156
  %52 = tail call i8* @vim_strchr(i8* nonnull %46, i32 32) #11, !dbg !3157
  %53 = icmp eq i8* %52, null, !dbg !3158
  br i1 %53, label %56, label %54, !dbg !3159

; <label>:54:                                     ; preds = %51
  %55 = tail call i8* @vim_strsave_escaped(i8* nonnull %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1046, i64 0, i64 0)) #11, !dbg !3160
  call void @llvm.dbg.value(metadata i8* %55, metadata !3085, metadata !DIExpression()) #11, !dbg !3161
  br label %58, !dbg !3162

; <label>:56:                                     ; preds = %51
  %57 = tail call i8* @vim_strsave(i8* nonnull %46) #11, !dbg !3163
  call void @llvm.dbg.value(metadata i8* %57, metadata !3085, metadata !DIExpression()) #11, !dbg !3161
  br label %58

; <label>:58:                                     ; preds = %56, %54
  %59 = phi i8* [ %55, %54 ], [ %57, %56 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3085, metadata !DIExpression()) #11, !dbg !3161
  %60 = icmp eq i8* %59, null, !dbg !3164
  br i1 %60, label %77, label %61, !dbg !3165

; <label>:61:                                     ; preds = %58
  %62 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %62, metadata !3086, metadata !DIExpression()) #11, !dbg !3167
  %63 = icmp sgt i32 %62, -1, !dbg !3168
  br i1 %63, label %64, label %77, !dbg !3169

; <label>:64:                                     ; preds = %61
  %65 = sext i32 %62 to i64, !dbg !3170
  %66 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %65, i32 2, !dbg !3171
  %67 = load i64, i64* %66, align 16, !dbg !3171, !tbaa !3107
  %68 = trunc i64 %67 to i8, !dbg !3172
  %69 = icmp slt i8 %68, 0, !dbg !3172
  %70 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %65, i32 5, i64 0
  br i1 %69, label %71, label %74, !dbg !3173

; <label>:71:                                     ; preds = %64
  %72 = load i8*, i8** %70, align 8, !dbg !3174, !tbaa !3115
  tail call void @vim_free(i8* %72) #11, !dbg !3175
  %73 = load i64, i64* %66, align 16, !dbg !3176, !tbaa !3107
  br label %74, !dbg !3175

; <label>:74:                                     ; preds = %71, %64
  %75 = phi i64 [ %73, %71 ], [ %67, %64 ], !dbg !3176
  store i8* %59, i8** %70, align 8, !dbg !3177, !tbaa !3115
  %76 = or i64 %75, 128, !dbg !3176
  store i64 %76, i64* %66, align 16, !dbg !3176, !tbaa !3107
  br label %77, !dbg !3178

; <label>:77:                                     ; preds = %74, %61, %58, %48, %45
  %78 = bitcast %struct.growarray* %2 to i8*, !dbg !3179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #11, !dbg !3179
  %79 = bitcast i32* %3 to i8*, !dbg !3180
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #11, !dbg !3180
  %80 = tail call i32 @findoption(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !3181
  call void @llvm.dbg.value(metadata i32 %80, metadata !2868, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.growarray* %2, metadata !2872, metadata !DIExpression()), !dbg !3183
  call void @ga_init2(%struct.growarray* nonnull %2, i32 1, i32 100) #11, !dbg !3184
  call void @llvm.dbg.value(metadata i64 0, metadata !2869, metadata !DIExpression()), !dbg !3185
  %81 = getelementptr inbounds %struct.growarray, %struct.growarray* %2, i64 0, i32 4
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %82, i32 2
  %84 = getelementptr inbounds %struct.growarray, %struct.growarray* %2, i64 0, i32 0
  br label %85, !dbg !3186

; <label>:85:                                     ; preds = %134, %77
  %86 = phi i64 [ 0, %77 ], [ %135, %134 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !2873, metadata !DIExpression()), !dbg !3188
  call void @llvm.dbg.value(metadata i64 %86, metadata !2869, metadata !DIExpression()), !dbg !3185
  store i32 0, i32* %3, align 4, !dbg !3189, !tbaa !3060
  %87 = getelementptr inbounds [4 x i8*], [4 x i8*]* @set_init_1.names, i64 0, i64 %86, !dbg !3192
  %88 = load i8*, i8** %87, align 8, !dbg !3192, !tbaa !3115
  %89 = load i8, i8* %88, align 1, !dbg !3194, !tbaa !3150
  %90 = icmp eq i8 %89, 0, !dbg !3195
  br i1 %90, label %94, label %91, !dbg !3196

; <label>:91:                                     ; preds = %85
  call void @llvm.dbg.value(metadata i32* %3, metadata !2873, metadata !DIExpression()), !dbg !3188
  %92 = call i8* @vim_getenv(i8* %88, i32* nonnull %3) #11, !dbg !3197
  call void @llvm.dbg.value(metadata i8* %92, metadata !2867, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i8* %92, metadata !2867, metadata !DIExpression()), !dbg !3146
  %93 = icmp eq i8* %92, null, !dbg !3198
  br i1 %93, label %129, label %94, !dbg !3200

; <label>:94:                                     ; preds = %85, %91
  %95 = phi i8* [ %92, %91 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), %85 ]
  %96 = load i8, i8* %95, align 1, !dbg !3201, !tbaa !3150
  %97 = icmp eq i8 %96, 0, !dbg !3202
  br i1 %97, label %129, label %98, !dbg !3203

; <label>:98:                                     ; preds = %94
  %99 = call i64 @strlen(i8* nonnull %95) #12, !dbg !3204
  %100 = trunc i64 %99 to i32, !dbg !3206
  %101 = add nsw i32 %100, 3, !dbg !3207
  call void @llvm.dbg.value(metadata i32 %101, metadata !2870, metadata !DIExpression()), !dbg !3208
  %102 = sext i32 %101 to i64, !dbg !3209
  %103 = call i8* @alloc(i64 %102) #11, !dbg !3210
  call void @llvm.dbg.value(metadata i8* %103, metadata !2874, metadata !DIExpression()), !dbg !3211
  %104 = call i8* @strcpy(i8* %103, i8* nonnull %95) #11, !dbg !3212
  call void @add_pathsep(i8* %103) #11, !dbg !3213
  %105 = call i64 @strlen(i8* %103), !dbg !3214
  %106 = getelementptr i8, i8* %103, i64 %105, !dbg !3214
  %107 = bitcast i8* %106 to i16*, !dbg !3214
  store i16 42, i16* %107, align 1, !dbg !3214
  %108 = load i8*, i8** %81, align 8, !dbg !3215, !tbaa !3217
  %109 = load i64, i64* %83, align 16, !dbg !3219, !tbaa !3107
  %110 = call fastcc i8* @find_dup_item(i8* %108, i8* %103, i64 %109), !dbg !3220
  %111 = icmp eq i8* %110, null, !dbg !3221
  br i1 %111, label %112, label %128, !dbg !3222

; <label>:112:                                    ; preds = %98
  call void @llvm.dbg.value(metadata %struct.growarray* %2, metadata !2872, metadata !DIExpression()), !dbg !3183
  %113 = call i32 @ga_grow(%struct.growarray* nonnull %2, i32 %101) #11, !dbg !3223
  %114 = icmp eq i32 %113, 1, !dbg !3224
  br i1 %114, label %115, label %128, !dbg !3225

; <label>:115:                                    ; preds = %112
  %116 = load i32, i32* %84, align 8, !dbg !3226, !tbaa !3229
  %117 = icmp sgt i32 %116, 0, !dbg !3230
  br i1 %117, label %118, label %123, !dbg !3231

; <label>:118:                                    ; preds = %115
  %119 = load i8*, i8** %81, align 8, !dbg !3232, !tbaa !3217
  %120 = call i64 @strlen(i8* %119), !dbg !3232
  %121 = getelementptr i8, i8* %119, i64 %120, !dbg !3232
  %122 = bitcast i8* %121 to i16*, !dbg !3232
  store i16 44, i16* %122, align 1, !dbg !3232
  br label %123, !dbg !3232

; <label>:123:                                    ; preds = %118, %115
  %124 = load i8*, i8** %81, align 8, !dbg !3233, !tbaa !3217
  %125 = call i8* @strcat(i8* %124, i8* %103) #11, !dbg !3233
  %126 = load i32, i32* %84, align 8, !dbg !3234, !tbaa !3229
  %127 = add nsw i32 %126, %101, !dbg !3234
  store i32 %127, i32* %84, align 8, !dbg !3234, !tbaa !3229
  br label %128, !dbg !3235

; <label>:128:                                    ; preds = %123, %112, %98
  call void @vim_free(i8* %103) #11, !dbg !3236
  br label %129, !dbg !3237

; <label>:129:                                    ; preds = %94, %91, %128
  %130 = phi i8* [ %95, %94 ], [ null, %91 ], [ %95, %128 ]
  %131 = load i32, i32* %3, align 4, !dbg !3238, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %131, metadata !2873, metadata !DIExpression()), !dbg !3188
  %132 = icmp eq i32 %131, 0, !dbg !3238
  br i1 %132, label %134, label %133, !dbg !3240

; <label>:133:                                    ; preds = %129
  call void @vim_free(i8* %130) #11, !dbg !3241
  br label %134, !dbg !3241

; <label>:134:                                    ; preds = %129, %133
  %135 = add nuw nsw i64 %86, 1, !dbg !3242
  call void @llvm.dbg.value(metadata i64 %135, metadata !2869, metadata !DIExpression()), !dbg !3185
  %136 = icmp eq i64 %135, 4, !dbg !3243
  br i1 %136, label %137, label %85, !dbg !3186, !llvm.loop !3244

; <label>:137:                                    ; preds = %134
  %138 = load i8*, i8** %81, align 8, !dbg !3246, !tbaa !3217
  %139 = icmp eq i8* %138, null, !dbg !3248
  br i1 %139, label %161, label %140, !dbg !3249

; <label>:140:                                    ; preds = %137
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), metadata !3068, metadata !DIExpression()) #11, !dbg !3250
  call void @llvm.dbg.value(metadata i8* %138, metadata !3073, metadata !DIExpression()) #11, !dbg !3253
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), metadata !3078, metadata !DIExpression()) #11, !dbg !3254
  call void @llvm.dbg.value(metadata i8* %138, metadata !3083, metadata !DIExpression()) #11, !dbg !3256
  call void @llvm.dbg.value(metadata i32 0, metadata !3084, metadata !DIExpression()) #11, !dbg !3257
  %141 = call i8* @vim_strsave(i8* nonnull %138) #11, !dbg !3258
  call void @llvm.dbg.value(metadata i8* %141, metadata !3085, metadata !DIExpression()) #11, !dbg !3259
  call void @llvm.dbg.value(metadata i8* %141, metadata !3085, metadata !DIExpression()) #11, !dbg !3259
  %142 = icmp eq i8* %141, null, !dbg !3260
  br i1 %142, label %159, label %143, !dbg !3261

; <label>:143:                                    ; preds = %140
  %144 = call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %144, metadata !3086, metadata !DIExpression()) #11, !dbg !3263
  %145 = icmp sgt i32 %144, -1, !dbg !3264
  br i1 %145, label %146, label %159, !dbg !3265

; <label>:146:                                    ; preds = %143
  %147 = sext i32 %144 to i64, !dbg !3266
  %148 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %147, i32 2, !dbg !3267
  %149 = load i64, i64* %148, align 16, !dbg !3267, !tbaa !3107
  %150 = trunc i64 %149 to i8, !dbg !3268
  %151 = icmp slt i8 %150, 0, !dbg !3268
  %152 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %147, i32 5, i64 0
  br i1 %151, label %153, label %156, !dbg !3269

; <label>:153:                                    ; preds = %146
  %154 = load i8*, i8** %152, align 8, !dbg !3270, !tbaa !3115
  call void @vim_free(i8* %154) #11, !dbg !3271
  %155 = load i64, i64* %148, align 16, !dbg !3272, !tbaa !3107
  br label %156, !dbg !3271

; <label>:156:                                    ; preds = %153, %146
  %157 = phi i64 [ %155, %153 ], [ %149, %146 ], !dbg !3272
  store i8* %141, i8** %152, align 8, !dbg !3273, !tbaa !3115
  %158 = or i64 %157, 128, !dbg !3272
  store i64 %158, i64* %148, align 16, !dbg !3272, !tbaa !3107
  br label %159, !dbg !3274

; <label>:159:                                    ; preds = %140, %143, %156
  %160 = load i8*, i8** %81, align 8, !dbg !3275, !tbaa !3217
  call void @vim_free(i8* %160) #11, !dbg !3276
  br label %161, !dbg !3277

; <label>:161:                                    ; preds = %137, %159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #11, !dbg !3278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #11, !dbg !3278
  %162 = call i32 @findoption(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %162, metadata !2868, metadata !DIExpression()), !dbg !3182
  %163 = icmp sgt i32 %162, -1, !dbg !3280
  br i1 %163, label %164, label %175, !dbg !3282

; <label>:164:                                    ; preds = %161
  %165 = call i64 @mch_total_mem(i32 0) #11, !dbg !3283
  %166 = lshr i64 %165, 1, !dbg !3286
  call void @llvm.dbg.value(metadata i64 %166, metadata !2869, metadata !DIExpression()), !dbg !3185
  %167 = inttoptr i64 %166 to i8*, !dbg !3287
  %168 = sext i32 %162 to i64, !dbg !3288
  %169 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %168, i32 5, i64 0, !dbg !3288
  store i8* %167, i8** %169, align 8, !dbg !3289, !tbaa !3115
  %170 = call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)), !dbg !3290
  call void @llvm.dbg.value(metadata i32 %170, metadata !2868, metadata !DIExpression()), !dbg !3182
  %171 = icmp sgt i32 %170, -1, !dbg !3291
  br i1 %171, label %172, label %175, !dbg !3293

; <label>:172:                                    ; preds = %164
  %173 = sext i32 %170 to i64, !dbg !3294
  %174 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %173, i32 5, i64 0, !dbg !3294
  store i8* %167, i8** %174, align 8, !dbg !3296, !tbaa !3115
  br label %175, !dbg !3297

; <label>:175:                                    ; preds = %164, %172, %161
  %176 = bitcast i32* %4 to i8*, !dbg !3298
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176) #11, !dbg !3298
  call void @llvm.dbg.value(metadata i32 0, metadata !2880, metadata !DIExpression()), !dbg !3299
  store i32 0, i32* %4, align 4, !dbg !3299, !tbaa !3060
  call void @llvm.dbg.value(metadata i32* %4, metadata !2880, metadata !DIExpression()), !dbg !3299
  %177 = call i8* @vim_getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i32* nonnull %4) #11, !dbg !3300
  call void @llvm.dbg.value(metadata i8* %177, metadata !2875, metadata !DIExpression()), !dbg !3301
  %178 = icmp eq i8* %177, null, !dbg !3302
  br i1 %178, label %231, label %179, !dbg !3304

; <label>:179:                                    ; preds = %175
  %180 = call i64 @strlen(i8* nonnull %177) #12, !dbg !3305
  %181 = shl i64 %180, 1, !dbg !3307
  %182 = add i64 %181, 2, !dbg !3308
  %183 = call i8* @alloc(i64 %182) #11, !dbg !3309
  call void @llvm.dbg.value(metadata i8* %183, metadata !2877, metadata !DIExpression()), !dbg !3310
  %184 = icmp eq i8* %183, null, !dbg !3311
  br i1 %184, label %227, label %185, !dbg !3313

; <label>:185:                                    ; preds = %179
  store i8 44, i8* %183, align 1, !dbg !3314, !tbaa !3150
  call void @llvm.dbg.value(metadata i32 1, metadata !2879, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.value(metadata i32 0, metadata !2878, metadata !DIExpression()), !dbg !3317
  %186 = load i8, i8* %177, align 1, !dbg !3318, !tbaa !3150
  %187 = icmp eq i8 %186, 0, !dbg !3321
  br i1 %187, label %214, label %188, !dbg !3322

; <label>:188:                                    ; preds = %185
  br label %189, !dbg !3318

; <label>:189:                                    ; preds = %188, %204
  %190 = phi i64 [ %210, %204 ], [ 0, %188 ]
  %191 = phi i8 [ %212, %204 ], [ %186, %188 ]
  %192 = phi i8* [ %211, %204 ], [ %177, %188 ]
  %193 = phi i32 [ %209, %204 ], [ 1, %188 ]
  call void @llvm.dbg.value(metadata i64 %190, metadata !2878, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata i32 %193, metadata !2879, metadata !DIExpression()), !dbg !3316
  %194 = zext i8 %191 to i32, !dbg !3318
  %195 = call i32 @vim_ispathlistsep(i32 %194) #11, !dbg !3323
  %196 = icmp eq i32 %195, 0, !dbg !3323
  br i1 %196, label %197, label %204, !dbg !3326

; <label>:197:                                    ; preds = %189
  %198 = load i8, i8* %192, align 1, !dbg !3327, !tbaa !3150
  switch i8 %198, label %204 [
    i8 32, label %199
    i8 44, label %199
  ], !dbg !3330

; <label>:199:                                    ; preds = %197, %197
  %200 = add nsw i32 %193, 1, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %200, metadata !2879, metadata !DIExpression()), !dbg !3316
  %201 = sext i32 %193 to i64, !dbg !3332
  %202 = getelementptr inbounds i8, i8* %183, i64 %201, !dbg !3332
  store i8 92, i8* %202, align 1, !dbg !3333, !tbaa !3150
  %203 = load i8, i8* %192, align 1, !dbg !3334, !tbaa !3150
  br label %204, !dbg !3332

; <label>:204:                                    ; preds = %199, %197, %189
  %205 = phi i32 [ %193, %189 ], [ %200, %199 ], [ %193, %197 ]
  %206 = phi i8 [ 44, %189 ], [ %203, %199 ], [ %198, %197 ]
  %207 = sext i32 %205 to i64
  %208 = getelementptr inbounds i8, i8* %183, i64 %207
  store i8 %206, i8* %208, align 1, !tbaa !3150
  %209 = add nsw i32 %205, 1
  %210 = add nuw i64 %190, 1, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %209, metadata !2879, metadata !DIExpression()), !dbg !3316
  %211 = getelementptr inbounds i8, i8* %177, i64 %210, !dbg !3318
  %212 = load i8, i8* %211, align 1, !dbg !3318, !tbaa !3150
  %213 = icmp eq i8 %212, 0, !dbg !3321
  br i1 %213, label %214, label %189, !dbg !3322, !llvm.loop !3336

; <label>:214:                                    ; preds = %204, %185
  %215 = phi i32 [ 1, %185 ], [ %209, %204 ]
  %216 = sext i32 %215 to i64, !dbg !3338
  %217 = getelementptr inbounds i8, i8* %183, i64 %216, !dbg !3338
  store i8 0, i8* %217, align 1, !dbg !3339, !tbaa !3150
  %218 = call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)), !dbg !3340
  call void @llvm.dbg.value(metadata i32 %218, metadata !2868, metadata !DIExpression()), !dbg !3182
  %219 = icmp sgt i32 %218, -1, !dbg !3341
  br i1 %219, label %220, label %226, !dbg !3343

; <label>:220:                                    ; preds = %214
  %221 = sext i32 %218 to i64, !dbg !3344
  %222 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %221, i32 5, i64 0, !dbg !3344
  store i8* %183, i8** %222, align 8, !dbg !3346, !tbaa !3115
  %223 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %221, i32 2, !dbg !3347
  %224 = load i64, i64* %223, align 16, !dbg !3348, !tbaa !3107
  %225 = or i64 %224, 128, !dbg !3348
  store i64 %225, i64* %223, align 16, !dbg !3348, !tbaa !3107
  br label %227, !dbg !3349

; <label>:226:                                    ; preds = %214
  call void @vim_free(i8* nonnull %183) #11, !dbg !3350
  br label %227

; <label>:227:                                    ; preds = %179, %220, %226
  %228 = load i32, i32* %4, align 4, !dbg !3351, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %228, metadata !2880, metadata !DIExpression()), !dbg !3299
  %229 = icmp eq i32 %228, 0, !dbg !3351
  br i1 %229, label %231, label %230, !dbg !3353

; <label>:230:                                    ; preds = %227
  call void @vim_free(i8* nonnull %177) #11, !dbg !3354
  br label %231, !dbg !3354

; <label>:231:                                    ; preds = %227, %175, %230
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176) #11, !dbg !3355
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), metadata !3068, metadata !DIExpression()) #11, !dbg !3356
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.21, i64 0, i64 0), metadata !3073, metadata !DIExpression()) #11, !dbg !3358
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), metadata !3078, metadata !DIExpression()) #11, !dbg !3359
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.21, i64 0, i64 0), metadata !3083, metadata !DIExpression()) #11, !dbg !3361
  call void @llvm.dbg.value(metadata i32 0, metadata !3084, metadata !DIExpression()) #11, !dbg !3362
  %232 = call i8* @vim_strsave(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !3363
  call void @llvm.dbg.value(metadata i8* %232, metadata !3085, metadata !DIExpression()) #11, !dbg !3364
  call void @llvm.dbg.value(metadata i8* %232, metadata !3085, metadata !DIExpression()) #11, !dbg !3364
  %233 = icmp eq i8* %232, null, !dbg !3365
  br i1 %233, label %250, label %234, !dbg !3366

; <label>:234:                                    ; preds = %231
  %235 = call i32 @findoption(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !3367
  call void @llvm.dbg.value(metadata i32 %235, metadata !3086, metadata !DIExpression()) #11, !dbg !3368
  %236 = icmp sgt i32 %235, -1, !dbg !3369
  br i1 %236, label %237, label %250, !dbg !3370

; <label>:237:                                    ; preds = %234
  %238 = sext i32 %235 to i64, !dbg !3371
  %239 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %238, i32 2, !dbg !3372
  %240 = load i64, i64* %239, align 16, !dbg !3372, !tbaa !3107
  %241 = trunc i64 %240 to i8, !dbg !3373
  %242 = icmp slt i8 %241, 0, !dbg !3373
  %243 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %238, i32 5, i64 0
  br i1 %242, label %244, label %247, !dbg !3374

; <label>:244:                                    ; preds = %237
  %245 = load i8*, i8** %243, align 8, !dbg !3375, !tbaa !3115
  call void @vim_free(i8* %245) #11, !dbg !3376
  %246 = load i64, i64* %239, align 16, !dbg !3377, !tbaa !3107
  br label %247, !dbg !3376

; <label>:247:                                    ; preds = %244, %237
  %248 = phi i64 [ %246, %244 ], [ %240, %237 ], !dbg !3377
  store i8* %232, i8** %243, align 8, !dbg !3378, !tbaa !3115
  %249 = or i64 %248, 128, !dbg !3377
  store i64 %249, i64* %239, align 16, !dbg !3377, !tbaa !3107
  br label %250, !dbg !3379

; <label>:250:                                    ; preds = %231, %234, %247
  call fastcc void @set_options_default(i32 0), !dbg !3380
  %251 = icmp eq i32 %0, 0, !dbg !3381
  br i1 %251, label %264, label %252, !dbg !3383

; <label>:252:                                    ; preds = %250
  %253 = call i32 @findoption(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0)), !dbg !3384
  call void @llvm.dbg.value(metadata i32 %253, metadata !2868, metadata !DIExpression()), !dbg !3182
  %254 = icmp sgt i32 %253, -1, !dbg !3386
  br i1 %254, label %255, label %258, !dbg !3388

; <label>:255:                                    ; preds = %252
  %256 = sext i32 %253 to i64, !dbg !3389
  %257 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %256, i32 5, i64 0, !dbg !3389
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i8** %257, align 8, !dbg !3391, !tbaa !3115
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i8** @p_rtp, align 8, !dbg !3392, !tbaa !3115
  br label %258, !dbg !3393

; <label>:258:                                    ; preds = %255, %252
  %259 = call i32 @findoption(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0)), !dbg !3394
  call void @llvm.dbg.value(metadata i32 %259, metadata !2868, metadata !DIExpression()), !dbg !3182
  %260 = icmp sgt i32 %259, -1, !dbg !3395
  br i1 %260, label %261, label %264, !dbg !3397

; <label>:261:                                    ; preds = %258
  %262 = sext i32 %259 to i64, !dbg !3398
  %263 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %262, i32 5, i64 0, !dbg !3398
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i8** %263, align 8, !dbg !3400, !tbaa !3115
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i8** @p_pp, align 8, !dbg !3401, !tbaa !3115
  br label %264, !dbg !3402

; <label>:264:                                    ; preds = %250, %258, %261
  %265 = load i32, i32* @found_reverse_arg, align 4, !dbg !3403, !tbaa !3060
  %266 = icmp eq i32 %265, 0, !dbg !3403
  br i1 %266, label %269, label %267, !dbg !3405

; <label>:267:                                    ; preds = %264
  %268 = call i8* @set_option_value(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 0), !dbg !3406
  br label %269, !dbg !3406

; <label>:269:                                    ; preds = %264, %267
  %270 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !3407, !tbaa !3115
  %271 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %270, i64 0, i32 65, !dbg !3408
  store i32 1, i32* %271, align 8, !dbg !3409, !tbaa !3410
  %272 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %270, i64 0, i32 150, !dbg !3426
  store i32 -1, i32* %272, align 8, !dbg !3427, !tbaa !3428
  %273 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %270, i64 0, i32 156, !dbg !3429
  store i64 -123456, i64* %273, align 8, !dbg !3430, !tbaa !3431
  call void @check_buf_options(%struct.file_buffer* %270) #11, !dbg !3432
  %274 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !3433, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %274, metadata !3434, metadata !DIExpression()) #11, !dbg !3439
  %275 = getelementptr inbounds %struct.window_S, %struct.window_S* %274, i64 0, i32 121, !dbg !3441
  call fastcc void @check_winopt(%struct.winopt_T* nonnull %275) #11, !dbg !3442
  %276 = getelementptr inbounds %struct.window_S, %struct.window_S* %274, i64 0, i32 122, !dbg !3443
  call fastcc void @check_winopt(%struct.winopt_T* nonnull %276) #11, !dbg !3444
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()) #11, !dbg !3448
  %277 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !3450, !tbaa !3453
  %278 = icmp eq i8* %277, null, !dbg !3454
  br i1 %278, label %300, label %279, !dbg !3455

; <label>:279:                                    ; preds = %269
  br label %280, !dbg !3456

; <label>:280:                                    ; preds = %279, %294
  %281 = phi i64 [ %295, %294 ], [ 0, %279 ]
  %282 = phi %struct.vimoption* [ %296, %294 ], [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %279 ]
  call void @llvm.dbg.value(metadata i64 %281, metadata !3445, metadata !DIExpression()) #11, !dbg !3448
  %283 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %281, i32 2, !dbg !3456
  %284 = load i64, i64* %283, align 16, !dbg !3456, !tbaa !3107
  %285 = and i64 %284, 4, !dbg !3458
  %286 = icmp eq i64 %285, 0, !dbg !3458
  br i1 %286, label %294, label %287, !dbg !3459

; <label>:287:                                    ; preds = %280
  %288 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %281, i32 3, !dbg !3460
  %289 = load i8*, i8** %288, align 8, !dbg !3460, !tbaa !3461
  %290 = icmp eq i8* %289, null, !dbg !3462
  br i1 %290, label %294, label %291, !dbg !3463

; <label>:291:                                    ; preds = %287
  %292 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %282) #11, !dbg !3464
  %293 = bitcast i8* %292 to i8**, !dbg !3465
  call void @check_string_option(i8** %293) #11, !dbg !3466
  br label %294, !dbg !3466

; <label>:294:                                    ; preds = %291, %287, %280
  %295 = add nuw i64 %281, 1, !dbg !3467
  %296 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %295, !dbg !3468
  %297 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %296, i64 0, i32 0, !dbg !3450
  %298 = load i8*, i8** %297, align 16, !dbg !3450, !tbaa !3453
  %299 = icmp eq i8* %298, null, !dbg !3454
  br i1 %299, label %300, label %280, !dbg !3455, !llvm.loop !3469

; <label>:300:                                    ; preds = %294, %269
  call fastcc void @didset_options(), !dbg !3472
  call void @init_spell_chartab() #11, !dbg !3473
  call void @llvm.dbg.value(metadata i32 0, metadata !2868, metadata !DIExpression()), !dbg !3182
  br label %301, !dbg !3474

; <label>:301:                                    ; preds = %362, %300
  %302 = phi i64 [ %363, %362 ], [ 0, %300 ]
  call void @llvm.dbg.value(metadata i64 %302, metadata !2868, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata i64 %302, metadata !3476, metadata !DIExpression()), !dbg !3481
  %303 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 0, !dbg !3484
  %304 = load i8*, i8** %303, align 16, !dbg !3484, !tbaa !3453
  %305 = load i8, i8* %304, align 1, !dbg !3491, !tbaa !3150
  %306 = icmp eq i8 %305, 116, !dbg !3492
  br i1 %306, label %307, label %311, !dbg !3493

; <label>:307:                                    ; preds = %301
  %308 = getelementptr inbounds i8, i8* %304, i64 1, !dbg !3494
  %309 = load i8, i8* %308, align 1, !dbg !3494, !tbaa !3150
  %310 = icmp eq i8 %309, 95, !dbg !3495
  br i1 %310, label %364, label %311, !dbg !3496

; <label>:311:                                    ; preds = %307, %301
  %312 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 2, !dbg !3497
  %313 = load i64, i64* %312, align 16, !dbg !3497, !tbaa !3107
  %314 = and i64 %313, 1048576, !dbg !3500
  %315 = icmp eq i64 %314, 0, !dbg !3500
  br i1 %315, label %324, label %316, !dbg !3501

; <label>:316:                                    ; preds = %311
  %317 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 3, !dbg !3502
  %318 = load i8*, i8** %317, align 8, !dbg !3502, !tbaa !3461
  %319 = icmp eq i8* %318, null, !dbg !3503
  br i1 %319, label %324, label %320, !dbg !3504

; <label>:320:                                    ; preds = %316
  %321 = bitcast i8* %318 to i8**, !dbg !3505
  %322 = load i8*, i8** %321, align 8, !dbg !3505, !tbaa !3115
  %323 = call i8* @dcgettext(i8* null, i8* %322, i32 5) #11, !dbg !3505
  call void @llvm.dbg.value(metadata i8* %323, metadata !2867, metadata !DIExpression()), !dbg !3146
  br label %342, !dbg !3506

; <label>:324:                                    ; preds = %316, %311
  call void @llvm.dbg.value(metadata i64 %302, metadata !3507, metadata !DIExpression()) #11, !dbg !3513
  call void @llvm.dbg.value(metadata i8* null, metadata !3512, metadata !DIExpression()) #11, !dbg !3515
  %325 = and i64 %313, 16, !dbg !3516
  %326 = icmp eq i64 %325, 0, !dbg !3516
  br i1 %326, label %362, label %327, !dbg !3518

; <label>:327:                                    ; preds = %324
  %328 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 3, !dbg !3519
  %329 = load i8*, i8** %328, align 8, !dbg !3519, !tbaa !3461
  %330 = icmp eq i8* %329, null, !dbg !3520
  br i1 %330, label %362, label %331, !dbg !3521

; <label>:331:                                    ; preds = %327
  %332 = bitcast i8* %329 to i8**, !dbg !3521
  %333 = load i8*, i8** %332, align 8, !dbg !3522, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %333, metadata !3512, metadata !DIExpression()) #11, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %333, metadata !3512, metadata !DIExpression()) #11, !dbg !3515
  %334 = load i8*, i8** @NameBuff, align 8, !dbg !3524, !tbaa !3115
  %335 = icmp eq i8* %329, bitcast (i8** @p_tags to i8*), !dbg !3525
  %336 = zext i1 %335 to i32, !dbg !3525
  %337 = icmp eq i8* %329, bitcast (i8** @p_sps to i8*), !dbg !3526
  %338 = select i1 %337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i8* null, !dbg !3527
  call void @expand_env_esc(i8* %333, i8* %334, i32 4096, i32 %336, i32 0, i8* %338) #11, !dbg !3528
  %339 = load i8*, i8** @NameBuff, align 8, !dbg !3529, !tbaa !3115
  %340 = call i32 @strcmp(i8* %339, i8* %333) #12, !dbg !3529
  %341 = icmp eq i32 %340, 0, !dbg !3531
  br i1 %341, label %362, label %342

; <label>:342:                                    ; preds = %331, %320
  %343 = phi i8* [ %323, %320 ], [ %339, %331 ]
  call void @llvm.dbg.value(metadata i8* %343, metadata !2867, metadata !DIExpression()), !dbg !3146
  %344 = icmp eq i8* %343, null, !dbg !3532
  br i1 %344, label %362, label %345, !dbg !3534

; <label>:345:                                    ; preds = %342
  %346 = call i8* @vim_strsave(i8* nonnull %343) #11, !dbg !3535
  call void @llvm.dbg.value(metadata i8* %346, metadata !2867, metadata !DIExpression()), !dbg !3146
  %347 = icmp eq i8* %346, null, !dbg !3536
  br i1 %347, label %362, label %348, !dbg !3537

; <label>:348:                                    ; preds = %345
  %349 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 3, !dbg !3538
  %350 = bitcast i8** %349 to i8***, !dbg !3538
  %351 = load i8**, i8*** %350, align 8, !dbg !3538, !tbaa !3461
  store i8* %346, i8** %351, align 8, !dbg !3540, !tbaa !3115
  %352 = load i64, i64* %312, align 16, !dbg !3541, !tbaa !3107
  %353 = trunc i64 %352 to i8, !dbg !3543
  %354 = icmp slt i8 %353, 0, !dbg !3543
  %355 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %302, i32 5, i64 0
  br i1 %354, label %356, label %359, !dbg !3544

; <label>:356:                                    ; preds = %348
  %357 = load i8*, i8** %355, align 8, !dbg !3545, !tbaa !3115
  call void @vim_free(i8* %357) #11, !dbg !3546
  %358 = load i64, i64* %312, align 16, !dbg !3547, !tbaa !3107
  br label %359, !dbg !3546

; <label>:359:                                    ; preds = %348, %356
  %360 = phi i64 [ %358, %356 ], [ %352, %348 ], !dbg !3547
  store i8* %346, i8** %355, align 8, !dbg !3548, !tbaa !3115
  %361 = or i64 %360, 128, !dbg !3547
  store i64 %361, i64* %312, align 16, !dbg !3547, !tbaa !3107
  br label %362, !dbg !3549

; <label>:362:                                    ; preds = %331, %327, %324, %345, %342, %359
  %363 = add nuw i64 %302, 1, !dbg !3550
  br label %301, !dbg !3551, !llvm.loop !3552

; <label>:364:                                    ; preds = %307
  %365 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !3554, !tbaa !3115
  call void @save_file_ff(%struct.file_buffer* %365) #11, !dbg !3555
  %366 = call i8* @getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0)) #11, !dbg !3556
  %367 = icmp eq i8* %366, null, !dbg !3558
  br i1 %367, label %370, label %368, !dbg !3559

; <label>:368:                                    ; preds = %364
  %369 = call i8* @set_option_value(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 1, i8* null, i32 0), !dbg !3560
  br label %370, !dbg !3560

; <label>:370:                                    ; preds = %364, %368
  call fastcc void @didset_options2(), !dbg !3561
  %371 = call i8* @enc_locale() #11, !dbg !3562
  call void @llvm.dbg.value(metadata i8* %371, metadata !2867, metadata !DIExpression()), !dbg !3146
  %372 = icmp eq i8* %371, null, !dbg !3563
  br i1 %372, label %395, label %373, !dbg !3564

; <label>:373:                                    ; preds = %370
  %374 = load i64, i64* bitcast (i8** @p_enc to i64*), align 8, !dbg !3565, !tbaa !3115
  call void @llvm.dbg.value(metadata i8** @p_enc, metadata !2881, metadata !DIExpression(DW_OP_deref)), !dbg !3566
  store i8* %371, i8** @p_enc, align 8, !dbg !3567, !tbaa !3115
  %375 = call i32 @strcmp(i8* nonnull %371, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !3568
  %376 = icmp eq i32 %375, 0, !dbg !3570
  br i1 %376, label %377, label %379, !dbg !3571

; <label>:377:                                    ; preds = %373
  %378 = call i8* @vim_strsave(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !3572
  store i8* %378, i8** @p_enc, align 8, !dbg !3574, !tbaa !3115
  call void @vim_free(i8* nonnull %371) #11, !dbg !3575
  br label %379, !dbg !3576

; <label>:379:                                    ; preds = %377, %373
  %380 = call i8* @mb_init() #11, !dbg !3577
  %381 = icmp eq i8* %380, null, !dbg !3579
  br i1 %381, label %382, label %393, !dbg !3580

; <label>:382:                                    ; preds = %379
  %383 = call i32 @findoption(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0)), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %383, metadata !2868, metadata !DIExpression()), !dbg !3182
  %384 = icmp sgt i32 %383, -1, !dbg !3583
  br i1 %384, label %385, label %395, !dbg !3585

; <label>:385:                                    ; preds = %382
  %386 = load i64, i64* bitcast (i8** @p_enc to i64*), align 8, !dbg !3586, !tbaa !3115
  %387 = sext i32 %383 to i64, !dbg !3588
  %388 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %387, i32 5, !dbg !3589
  %389 = bitcast [2 x i8*]* %388 to i64*, !dbg !3590
  store i64 %386, i64* %389, align 8, !dbg !3590, !tbaa !3115
  %390 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %387, i32 2, !dbg !3591
  %391 = load i64, i64* %390, align 16, !dbg !3592, !tbaa !3107
  %392 = or i64 %391, 128, !dbg !3592
  store i64 %392, i64* %390, align 16, !dbg !3592, !tbaa !3107
  br label %395, !dbg !3593

; <label>:393:                                    ; preds = %379
  %394 = load i8*, i8** @p_enc, align 8, !dbg !3594, !tbaa !3115
  call void @vim_free(i8* %394) #11, !dbg !3596
  store i64 %374, i64* bitcast (i8** @p_enc to i64*), align 8, !dbg !3597, !tbaa !3115
  br label %395

; <label>:395:                                    ; preds = %393, %385, %382, %370
  %396 = call i8* @get_mess_lang() #11, !dbg !3598
  call void @set_helplang_default(i8* %396), !dbg !3599
  ret void, !dbg !3600
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

declare void @langmap_init() local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define void @set_string_default(i8* nocapture readonly, i8*) local_unnamed_addr #0 !dbg !3069 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3068, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i8* %1, metadata !3073, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata i8* %0, metadata !3078, metadata !DIExpression()) #11, !dbg !3603
  call void @llvm.dbg.value(metadata i8* %1, metadata !3083, metadata !DIExpression()) #11, !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3084, metadata !DIExpression()) #11, !dbg !3606
  %3 = tail call i8* @vim_strsave(i8* %1) #11, !dbg !3607
  call void @llvm.dbg.value(metadata i8* %3, metadata !3085, metadata !DIExpression()) #11, !dbg !3608
  call void @llvm.dbg.value(metadata i8* %3, metadata !3085, metadata !DIExpression()) #11, !dbg !3608
  %4 = icmp eq i8* %3, null, !dbg !3609
  br i1 %4, label %21, label %5, !dbg !3610

; <label>:5:                                      ; preds = %2
  %6 = tail call i32 @findoption(i8* %0) #11, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %6, metadata !3086, metadata !DIExpression()) #11, !dbg !3612
  %7 = icmp sgt i32 %6, -1, !dbg !3613
  br i1 %7, label %8, label %21, !dbg !3614

; <label>:8:                                      ; preds = %5
  %9 = sext i32 %6 to i64, !dbg !3615
  %10 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 2, !dbg !3616
  %11 = load i64, i64* %10, align 16, !dbg !3616, !tbaa !3107
  %12 = trunc i64 %11 to i8, !dbg !3617
  %13 = icmp slt i8 %12, 0, !dbg !3617
  %14 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 5, i64 0
  br i1 %13, label %15, label %18, !dbg !3618

; <label>:15:                                     ; preds = %8
  %16 = load i8*, i8** %14, align 8, !dbg !3619, !tbaa !3115
  tail call void @vim_free(i8* %16) #11, !dbg !3620
  %17 = load i64, i64* %10, align 16, !dbg !3621, !tbaa !3107
  br label %18, !dbg !3620

; <label>:18:                                     ; preds = %15, %8
  %19 = phi i64 [ %17, %15 ], [ %11, %8 ], !dbg !3621
  store i8* %3, i8** %14, align 8, !dbg !3622, !tbaa !3115
  %20 = or i64 %19, 128, !dbg !3621
  store i64 %20, i64* %10, align 16, !dbg !3621, !tbaa !3107
  br label %21, !dbg !3623

; <label>:21:                                     ; preds = %2, %5, %18
  ret void, !dbg !3624
}

; Function Attrs: nounwind uwtable
define i32 @findoption(i8* nocapture readonly) local_unnamed_addr #0 !dbg !2887 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2891, metadata !DIExpression()), !dbg !3625
  %2 = load i16, i16* getelementptr inbounds ([27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 1), align 2, !dbg !3626, !tbaa !3628
  %3 = icmp eq i16 %2, 0, !dbg !3629
  br i1 %3, label %4, label %34, !dbg !3630

; <label>:4:                                      ; preds = %1
  call void @llvm.dbg.value(metadata i8* %8, metadata !2894, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.value(metadata i32 1, metadata !2892, metadata !DIExpression()), !dbg !3632
  %5 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 1, i32 0), align 16, !dbg !3633, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %5, metadata !2893, metadata !DIExpression()), !dbg !3637
  %6 = icmp eq i8* %5, null, !dbg !3638
  br i1 %6, label %34, label %7, !dbg !3639

; <label>:7:                                      ; preds = %4
  %8 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !3640, !tbaa !3453
  br label %9, !dbg !3639

; <label>:9:                                      ; preds = %7, %29
  %10 = phi i64 [ 1, %7 ], [ %30, %29 ]
  %11 = phi i8* [ %5, %7 ], [ %32, %29 ]
  %12 = phi i8* [ %8, %7 ], [ %11, %29 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !2892, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %12, metadata !2894, metadata !DIExpression()), !dbg !3631
  %13 = load i8, i8* %11, align 1, !dbg !3641, !tbaa !3150
  %14 = load i8, i8* %12, align 1, !dbg !3644, !tbaa !3150
  %15 = icmp eq i8 %13, %14, !dbg !3645
  br i1 %15, label %29, label %16, !dbg !3646

; <label>:16:                                     ; preds = %9
  %17 = icmp eq i8 %13, 116, !dbg !3647
  br i1 %17, label %18, label %24, !dbg !3650

; <label>:18:                                     ; preds = %16
  %19 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3651
  %20 = load i8, i8* %19, align 1, !dbg !3651, !tbaa !3150
  %21 = icmp eq i8 %20, 95, !dbg !3652
  br i1 %21, label %22, label %24, !dbg !3653

; <label>:22:                                     ; preds = %18
  %23 = trunc i64 %10 to i16, !dbg !3654
  store i16 %23, i16* getelementptr inbounds ([27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 26), align 4, !dbg !3655, !tbaa !3628
  br label %29, !dbg !3656

; <label>:24:                                     ; preds = %18, %16
  %25 = trunc i64 %10 to i16, !dbg !3657
  %26 = sext i8 %13 to i64, !dbg !3658
  %27 = add nsw i64 %26, -97, !dbg !3658
  %28 = getelementptr inbounds [27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 %27, !dbg !3659
  store i16 %25, i16* %28, align 2, !dbg !3660, !tbaa !3628
  br label %29

; <label>:29:                                     ; preds = %9, %22, %24
  %30 = add nuw i64 %10, 1, !dbg !3661
  call void @llvm.dbg.value(metadata i8* %11, metadata !2894, metadata !DIExpression()), !dbg !3631
  %31 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %30, i32 0, !dbg !3633
  %32 = load i8*, i8** %31, align 16, !dbg !3633, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %32, metadata !2893, metadata !DIExpression()), !dbg !3637
  %33 = icmp eq i8* %32, null, !dbg !3638
  br i1 %33, label %34, label %9, !dbg !3639, !llvm.loop !3662

; <label>:34:                                     ; preds = %29, %4, %1
  %35 = load i8, i8* %0, align 1, !dbg !3664, !tbaa !3150
  %36 = add i8 %35, -97, !dbg !3666
  %37 = icmp ugt i8 %36, 25, !dbg !3666
  br i1 %37, label %107, label %38, !dbg !3666

; <label>:38:                                     ; preds = %34
  %39 = icmp eq i8 %35, 116, !dbg !3667
  br i1 %39, label %40, label %44, !dbg !3668

; <label>:40:                                     ; preds = %38
  %41 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3669
  %42 = load i8, i8* %41, align 1, !dbg !3669, !tbaa !3150
  %43 = icmp eq i8 %42, 95, !dbg !3670
  br i1 %43, label %48, label %44, !dbg !3671

; <label>:44:                                     ; preds = %38, %40
  %45 = zext i8 %35 to i64, !dbg !3672
  %46 = add nsw i64 %45, -97, !dbg !3672
  %47 = getelementptr inbounds [27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 %46, !dbg !3674
  br label %48

; <label>:48:                                     ; preds = %40, %44
  %49 = phi i1 [ false, %44 ], [ true, %40 ]
  %50 = phi i16* [ %47, %44 ], [ getelementptr inbounds ([27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 26), %40 ]
  %51 = load i16, i16* %50, align 2, !tbaa !3628
  %52 = sext i16 %51 to i32
  call void @llvm.dbg.value(metadata i32 %52, metadata !2892, metadata !DIExpression()), !dbg !3632
  %53 = sext i16 %51 to i64, !dbg !3675
  %54 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %53, i32 0, !dbg !3678
  %55 = load i8*, i8** %54, align 16, !dbg !3678, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %55, metadata !2893, metadata !DIExpression()), !dbg !3637
  %56 = icmp eq i8* %55, null, !dbg !3679
  br i1 %56, label %70, label %57, !dbg !3680

; <label>:57:                                     ; preds = %48
  br label %58, !dbg !3681

; <label>:58:                                     ; preds = %57, %63
  %59 = phi i64 [ %64, %63 ], [ %53, %57 ]
  %60 = phi i8* [ %66, %63 ], [ %55, %57 ]
  call void @llvm.dbg.value(metadata i64 %59, metadata !2892, metadata !DIExpression()), !dbg !3632
  %61 = tail call i32 @strcmp(i8* %0, i8* nonnull %60) #12, !dbg !3681
  %62 = icmp eq i32 %61, 0, !dbg !3684
  br i1 %62, label %98, label %63, !dbg !3685

; <label>:63:                                     ; preds = %58
  %64 = add i64 %59, 1, !dbg !3686
  %65 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %64, i32 0, !dbg !3678
  %66 = load i8*, i8** %65, align 16, !dbg !3678, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %66, metadata !2893, metadata !DIExpression()), !dbg !3637
  %67 = icmp eq i8* %66, null, !dbg !3679
  br i1 %67, label %68, label %58, !dbg !3680, !llvm.loop !3687

; <label>:68:                                     ; preds = %63
  %69 = trunc i64 %64 to i32, !dbg !3689
  br label %70, !dbg !3689

; <label>:70:                                     ; preds = %48, %68
  %71 = phi i32 [ %52, %48 ], [ %69, %68 ]
  br i1 %49, label %102, label %72, !dbg !3689

; <label>:72:                                     ; preds = %70
  %73 = zext i8 %35 to i64, !dbg !3691
  %74 = add nsw i64 %73, -97, !dbg !3691
  %75 = getelementptr inbounds [27 x i16], [27 x i16]* @findoption.quick_tab, i64 0, i64 %74, !dbg !3693
  %76 = load i16, i16* %75, align 2, !dbg !3693, !tbaa !3628
  %77 = sext i16 %76 to i32, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %77, metadata !2892, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* null, metadata !2893, metadata !DIExpression()), !dbg !3637
  %78 = sext i16 %76 to i64, !dbg !3694
  %79 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %78, i32 0, !dbg !3697
  %80 = load i8*, i8** %79, align 16, !dbg !3697, !tbaa !3453
  %81 = icmp eq i8* %80, null, !dbg !3698
  br i1 %81, label %102, label %82, !dbg !3699

; <label>:82:                                     ; preds = %72
  br label %83, !dbg !3700

; <label>:83:                                     ; preds = %82, %92
  %84 = phi i64 [ %93, %92 ], [ %78, %82 ]
  %85 = phi i32 [ %94, %92 ], [ %77, %82 ]
  call void @llvm.dbg.value(metadata i64 %84, metadata !2892, metadata !DIExpression()), !dbg !3632
  %86 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %84, i32 1, !dbg !3700
  %87 = load i8*, i8** %86, align 8, !dbg !3700, !tbaa !3702
  call void @llvm.dbg.value(metadata i8* %87, metadata !2893, metadata !DIExpression()), !dbg !3637
  %88 = icmp eq i8* %87, null, !dbg !3703
  br i1 %88, label %92, label %89, !dbg !3705

; <label>:89:                                     ; preds = %83
  %90 = tail call i32 @strcmp(i8* %0, i8* nonnull %87) #12, !dbg !3706
  %91 = icmp eq i32 %90, 0, !dbg !3707
  br i1 %91, label %100, label %92, !dbg !3708

; <label>:92:                                     ; preds = %83, %89
  call void @llvm.dbg.value(metadata i8* null, metadata !2893, metadata !DIExpression()), !dbg !3637
  %93 = add i64 %84, 1, !dbg !3709
  %94 = add nsw i32 %85, 1, !dbg !3709
  call void @llvm.dbg.value(metadata i8* null, metadata !2893, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %94, metadata !2892, metadata !DIExpression()), !dbg !3632
  %95 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %93, i32 0, !dbg !3697
  %96 = load i8*, i8** %95, align 16, !dbg !3697, !tbaa !3453
  %97 = icmp eq i8* %96, null, !dbg !3698
  br i1 %97, label %102, label %83, !dbg !3699, !llvm.loop !3710

; <label>:98:                                     ; preds = %58
  %99 = trunc i64 %59 to i32, !dbg !3712
  br label %102, !dbg !3712

; <label>:100:                                    ; preds = %89
  %101 = trunc i64 %84 to i32, !dbg !3708
  br label %102, !dbg !3712

; <label>:102:                                    ; preds = %92, %100, %98, %72, %70
  %103 = phi i32 [ %71, %70 ], [ %77, %72 ], [ %99, %98 ], [ %101, %100 ], [ %94, %92 ]
  %104 = phi i8* [ null, %70 ], [ null, %72 ], [ %60, %98 ], [ %87, %100 ], [ null, %92 ]
  call void @llvm.dbg.value(metadata i8* %104, metadata !2893, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %103, metadata !2892, metadata !DIExpression()), !dbg !3632
  %105 = icmp eq i8* %104, null, !dbg !3712
  %106 = select i1 %105, i32 -1, i32 %103, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %106, metadata !2892, metadata !DIExpression()), !dbg !3632
  br label %107, !dbg !3715

; <label>:107:                                    ; preds = %34, %102
  %108 = phi i32 [ %106, %102 ], [ -1, %34 ]
  ret i32 %108, !dbg !3716
}

declare void @ga_init2(%struct.growarray*, i32, i32) local_unnamed_addr #3

declare i8* @vim_getenv(i8*, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare i8* @alloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) local_unnamed_addr #6

declare void @add_pathsep(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nounwind readonly uwtable
define internal fastcc i8* @find_dup_item(i8* readonly, i8* nocapture readonly, i64) unnamed_addr #7 !dbg !3717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3721, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i8* %1, metadata !3722, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i64 %2, metadata !3723, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3730
  %4 = icmp eq i8* %0, null, !dbg !3731
  br i1 %4, label %57, label %5, !dbg !3733

; <label>:5:                                      ; preds = %3
  %6 = tail call i64 @strlen(i8* %1) #12, !dbg !3734
  call void @llvm.dbg.value(metadata i64 %6, metadata !3725, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i8* %0, metadata !3726, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3730
  %7 = load i8, i8* %0, align 1, !dbg !3737, !tbaa !3150
  %8 = icmp eq i8 %7, 0, !dbg !3740
  br i1 %8, label %57, label %9, !dbg !3741

; <label>:9:                                      ; preds = %5
  %10 = trunc i64 %2 to i16
  %11 = icmp slt i16 %10, 0
  %12 = xor i1 %11, true
  br label %13, !dbg !3741

; <label>:13:                                     ; preds = %9, %51
  %14 = phi i8* [ %0, %9 ], [ %54, %51 ]
  %15 = phi i64 [ 0, %9 ], [ %53, %51 ]
  %16 = phi i32 [ 0, %9 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3724, metadata !DIExpression()), !dbg !3730
  %17 = icmp eq i64 %15, 0, !dbg !3742
  %18 = or i1 %17, %12, !dbg !3745
  br i1 %18, label %26, label %19, !dbg !3745

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !3746
  %21 = load i8, i8* %20, align 1, !dbg !3746, !tbaa !3150
  %22 = icmp eq i8 %21, 44, !dbg !3747
  %23 = and i32 %16, 1, !dbg !3748
  %24 = icmp eq i32 %23, 0, !dbg !3748
  %25 = and i1 %24, %22, !dbg !3749
  br i1 %25, label %26, label %33, !dbg !3749

; <label>:26:                                     ; preds = %19, %13
  %27 = tail call i32 @strncmp(i8* nonnull %14, i8* %1, i64 %6) #12, !dbg !3750
  %28 = icmp eq i32 %27, 0, !dbg !3751
  br i1 %28, label %29, label %33, !dbg !3752

; <label>:29:                                     ; preds = %26
  br i1 %11, label %30, label %57, !dbg !3753

; <label>:30:                                     ; preds = %29
  %31 = getelementptr inbounds i8, i8* %14, i64 %6, !dbg !3754
  %32 = load i8, i8* %31, align 1, !dbg !3754, !tbaa !3150
  switch i8 %32, label %33 [
    i8 44, label %57
    i8 0, label %57
  ], !dbg !3755

; <label>:33:                                     ; preds = %30, %26, %19
  %34 = icmp ugt i64 %15, 1, !dbg !3756
  br i1 %34, label %35, label %43, !dbg !3758

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !3759
  %37 = load i8, i8* %36, align 1, !dbg !3759, !tbaa !3150
  %38 = icmp eq i8 %37, 92, !dbg !3760
  br i1 %38, label %39, label %51, !dbg !3761

; <label>:39:                                     ; preds = %35
  %40 = getelementptr inbounds i8, i8* %14, i64 -2, !dbg !3762
  %41 = load i8, i8* %40, align 1, !dbg !3762, !tbaa !3150
  %42 = icmp eq i8 %41, 44, !dbg !3763
  br i1 %42, label %51, label %49, !dbg !3764

; <label>:43:                                     ; preds = %33
  %44 = icmp eq i64 %15, 1, !dbg !3765
  br i1 %44, label %45, label %51, !dbg !3766

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !3767
  %47 = load i8, i8* %46, align 1, !dbg !3767, !tbaa !3150
  %48 = icmp eq i8 %47, 92, !dbg !3768
  br i1 %48, label %49, label %51, !dbg !3769

; <label>:49:                                     ; preds = %39, %45
  %50 = add nsw i32 %16, 1, !dbg !3770
  call void @llvm.dbg.value(metadata i32 %50, metadata !3724, metadata !DIExpression()), !dbg !3730
  br label %51, !dbg !3770

; <label>:51:                                     ; preds = %35, %39, %43, %45, %49
  %52 = phi i32 [ %50, %49 ], [ 0, %45 ], [ 0, %43 ], [ 0, %39 ], [ 0, %35 ]
  %53 = add nuw nsw i64 %15, 1, !dbg !3771
  %54 = getelementptr inbounds i8, i8* %0, i64 %53, !dbg !3736
  call void @llvm.dbg.value(metadata i8* %54, metadata !3726, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %52, metadata !3724, metadata !DIExpression()), !dbg !3730
  %55 = load i8, i8* %54, align 1, !dbg !3737, !tbaa !3150
  %56 = icmp eq i8 %55, 0, !dbg !3740
  br i1 %56, label %57, label %13, !dbg !3741, !llvm.loop !3772

; <label>:57:                                     ; preds = %30, %30, %29, %51, %5, %3
  %58 = phi i8* [ null, %3 ], [ null, %5 ], [ %14, %30 ], [ %14, %30 ], [ %14, %29 ], [ null, %51 ]
  ret i8* %58, !dbg !3774
}

declare i32 @ga_grow(%struct.growarray*, i32) local_unnamed_addr #3

declare void @vim_free(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

declare i64 @mch_total_mem(i32) local_unnamed_addr #3

declare i32 @vim_ispathlistsep(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @set_options_default(i32) unnamed_addr #0 !dbg !3775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3777, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3778, metadata !DIExpression()), !dbg !3819
  %2 = icmp eq i32 %0, 0
  br label %3, !dbg !3820

; <label>:3:                                      ; preds = %30, %1
  %4 = phi i64 [ %31, %30 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %4, metadata !3778, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.value(metadata i64 %4, metadata !3476, metadata !DIExpression()), !dbg !3822
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 0, !dbg !3825
  %6 = load i8*, i8** %5, align 16, !dbg !3825, !tbaa !3453
  %7 = load i8, i8* %6, align 1, !dbg !3827, !tbaa !3150
  %8 = icmp eq i8 %7, 116, !dbg !3828
  br i1 %8, label %9, label %13, !dbg !3829

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !3830
  %11 = load i8, i8* %10, align 1, !dbg !3830, !tbaa !3150
  %12 = icmp eq i8 %11, 95, !dbg !3831
  br i1 %12, label %32, label %13, !dbg !3832

; <label>:13:                                     ; preds = %9, %3
  %14 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 2, !dbg !3833
  %15 = load i64, i64* %14, align 16, !dbg !3833, !tbaa !3107
  %16 = and i64 %15, 64, !dbg !3835
  %17 = icmp eq i64 %16, 0, !dbg !3835
  br i1 %17, label %18, label %30, !dbg !3836

; <label>:18:                                     ; preds = %13
  br i1 %2, label %27, label %19, !dbg !3837

; <label>:19:                                     ; preds = %18
  %20 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 3, !dbg !3838
  %21 = load i8*, i8** %20, align 8, !dbg !3838, !tbaa !3461
  %22 = icmp eq i8* %21, bitcast (i8** @p_enc to i8*), !dbg !3839
  %23 = icmp eq i8* %21, bitcast (i8** @p_cm to i8*), !dbg !3840
  %24 = or i1 %22, %23, !dbg !3841
  %25 = icmp eq i8* %21, bitcast (i8** @p_key to i8*), !dbg !3842
  %26 = or i1 %25, %24, !dbg !3841
  br i1 %26, label %30, label %27, !dbg !3841

; <label>:27:                                     ; preds = %19, %18
  %28 = load i32, i32* @p_cp, align 4, !dbg !3843, !tbaa !3060
  %29 = trunc i64 %4 to i32, !dbg !3844
  tail call fastcc void @set_option_default(i32 %29, i32 %0, i32 %28), !dbg !3844
  br label %30, !dbg !3844

; <label>:30:                                     ; preds = %19, %13, %27
  %31 = add nuw i64 %4, 1, !dbg !3845
  br label %3, !dbg !3846, !llvm.loop !3847

; <label>:32:                                     ; preds = %9
  call void @llvm.dbg.value(metadata %struct.tabpage_S** @first_tabpage, metadata !3780, metadata !DIExpression(DW_OP_deref)), !dbg !3849
  %33 = load %struct.tabpage_S*, %struct.tabpage_S** @first_tabpage, align 8, !dbg !3850, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %33, metadata !3780, metadata !DIExpression()), !dbg !3849
  %34 = icmp eq %struct.tabpage_S* %33, null, !dbg !3852
  br i1 %34, label %54, label %35, !dbg !3850

; <label>:35:                                     ; preds = %32
  br label %36, !dbg !3854

; <label>:36:                                     ; preds = %35, %50
  %37 = phi %struct.tabpage_S* [ %52, %50 ], [ %33, %35 ]
  %38 = load %struct.tabpage_S*, %struct.tabpage_S** @curtab, align 8, !dbg !3854, !tbaa !3115
  %39 = icmp eq %struct.tabpage_S* %37, %38, !dbg !3854
  %40 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %37, i64 0, i32 4, !dbg !3854
  %41 = select i1 %39, %struct.window_S** @firstwin, %struct.window_S** %40, !dbg !3854
  call void @llvm.dbg.value(metadata %struct.window_S** %41, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !3856
  %42 = load %struct.window_S*, %struct.window_S** %41, align 8, !dbg !3854, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %42, metadata !3779, metadata !DIExpression()), !dbg !3856
  %43 = icmp eq %struct.window_S* %42, null, !dbg !3854
  br i1 %43, label %50, label %44, !dbg !3854

; <label>:44:                                     ; preds = %36
  br label %45, !dbg !3857

; <label>:45:                                     ; preds = %44, %45
  %46 = phi %struct.window_S* [ %48, %45 ], [ %42, %44 ]
  tail call void @win_comp_scroll(%struct.window_S* nonnull %46) #11, !dbg !3857
  %47 = getelementptr inbounds %struct.window_S, %struct.window_S* %46, i64 0, i32 3, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.window_S** %47, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !3856
  %48 = load %struct.window_S*, %struct.window_S** %47, align 8, !dbg !3854, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %48, metadata !3779, metadata !DIExpression()), !dbg !3856
  %49 = icmp eq %struct.window_S* %48, null, !dbg !3854
  br i1 %49, label %50, label %45, !dbg !3854, !llvm.loop !3860

; <label>:50:                                     ; preds = %45, %36
  %51 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %37, i64 0, i32 0, !dbg !3852
  call void @llvm.dbg.value(metadata %struct.tabpage_S** %51, metadata !3780, metadata !DIExpression(DW_OP_deref)), !dbg !3849
  %52 = load %struct.tabpage_S*, %struct.tabpage_S** %51, align 8, !dbg !3850, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %52, metadata !3780, metadata !DIExpression()), !dbg !3849
  %53 = icmp eq %struct.tabpage_S* %52, null, !dbg !3852
  br i1 %53, label %54, label %36, !dbg !3850, !llvm.loop !3862

; <label>:54:                                     ; preds = %50, %32
  %55 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !3864, !tbaa !3115
  tail call void @parse_cino(%struct.file_buffer* %55) #11, !dbg !3865
  ret void, !dbg !3866
}

; Function Attrs: nounwind uwtable
define i8* @set_option_value(i8*, i64, i8*, i32) local_unnamed_addr #0 !dbg !3867 {
  %5 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3871, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i64 %1, metadata !3872, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %2, metadata !3873, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i32 %3, metadata !3874, metadata !DIExpression()), !dbg !3896
  %6 = tail call i32 @findoption(i8* %0), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %6, metadata !3875, metadata !DIExpression()), !dbg !3898
  %7 = icmp slt i32 %6, 0, !dbg !3899
  br i1 %7, label %8, label %42, !dbg !3900

; <label>:8:                                      ; preds = %4
  %9 = tail call i64 @strlen(i8* %0) #12, !dbg !3901
  %10 = icmp eq i64 %9, 4, !dbg !3902
  br i1 %10, label %11, label %39, !dbg !3903

; <label>:11:                                     ; preds = %8
  %12 = load i8, i8* %0, align 1, !dbg !3904, !tbaa !3150
  %13 = icmp eq i8 %12, 116, !dbg !3905
  br i1 %13, label %14, label %39, !dbg !3906

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3907
  %16 = load i8, i8* %15, align 1, !dbg !3907, !tbaa !3150
  %17 = icmp eq i8 %16, 95, !dbg !3908
  br i1 %17, label %18, label %39, !dbg !3909

; <label>:18:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i8* %0, metadata !3910, metadata !DIExpression()) #11, !dbg !3919
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()) #11, !dbg !3921
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !3922
  call void @llvm.dbg.value(metadata i8* %0, metadata !3918, metadata !DIExpression()) #11, !dbg !3923
  %19 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !3924
  %20 = load i8, i8* %19, align 1, !dbg !3924, !tbaa !3150
  %21 = zext i8 %20 to i32, !dbg !3924
  %22 = icmp eq i8 %20, 0, !dbg !3924
  br i1 %22, label %39, label %23, !dbg !3926

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !3927
  %25 = load i8, i8* %24, align 1, !dbg !3927, !tbaa !3150
  %26 = icmp eq i8 %25, 0, !dbg !3927
  br i1 %26, label %39, label %27, !dbg !3928

; <label>:27:                                     ; preds = %23
  %28 = zext i8 %25 to i32, !dbg !3927
  %29 = shl nuw nsw i32 %28, 8, !dbg !3929
  %30 = or i32 %29, %21, !dbg !3929
  %31 = icmp eq i32 %30, 0, !dbg !3930
  br i1 %31, label %39, label %32, !dbg !3931

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !3932
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #11, !dbg !3932
  call void @llvm.dbg.declare(metadata [2 x i8]* %5, metadata !3881, metadata !DIExpression()), !dbg !3933
  store i8 %20, i8* %33, align 1, !dbg !3934, !tbaa !3150
  %34 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1, !dbg !3937
  store i8 %25, i8* %34, align 1, !dbg !3938, !tbaa !3150
  call void @add_termcode(i8* nonnull %33, i8* %2, i32 0) #11, !dbg !3939
  %35 = load volatile i32, i32* @full_screen, align 4, !dbg !3940, !tbaa !3060
  %36 = icmp eq i32 %35, 0, !dbg !3940
  br i1 %36, label %38, label %37, !dbg !3942

; <label>:37:                                     ; preds = %32
  call void @ttest(i32 0) #11, !dbg !3943
  br label %38, !dbg !3943

; <label>:38:                                     ; preds = %32, %37
  call void @redraw_all_later(i32 50) #11, !dbg !3944
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11, !dbg !3945
  br label %90

; <label>:39:                                     ; preds = %18, %23, %27, %14, %11, %8
  %40 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i64 0, i64 0), i32 5) #11, !dbg !3946
  %41 = tail call i32 (i8*, ...) @semsg(i8* %40, i8* %0) #11, !dbg !3947
  br label %90

; <label>:42:                                     ; preds = %4
  %43 = sext i32 %6 to i64, !dbg !3948
  %44 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %43, !dbg !3948
  %45 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %43, i32 2, !dbg !3949
  %46 = load i64, i64* %45, align 16, !dbg !3949, !tbaa !3107
  call void @llvm.dbg.value(metadata i64 %46, metadata !3877, metadata !DIExpression()), !dbg !3950
  %47 = load i32, i32* @sandbox, align 4, !dbg !3951, !tbaa !3060
  %48 = icmp slt i32 %47, 1, !dbg !3953
  %49 = and i64 %46, 524288, !dbg !3954
  %50 = icmp eq i64 %49, 0, !dbg !3954
  %51 = or i1 %48, %50, !dbg !3955
  br i1 %51, label %55, label %52, !dbg !3955

; <label>:52:                                     ; preds = %42
  %53 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_sandbox, i64 0, i64 0), i32 5) #11, !dbg !3956
  %54 = tail call i32 @emsg(i8* %53) #11, !dbg !3958
  br label %90, !dbg !3959

; <label>:55:                                     ; preds = %42
  %56 = and i64 %46, 4, !dbg !3960
  %57 = icmp eq i64 %56, 0, !dbg !3960
  br i1 %57, label %60, label %58, !dbg !3961

; <label>:58:                                     ; preds = %55
  %59 = tail call i8* @set_string_option(i32 %6, i8* %2, i32 %3) #11, !dbg !3962
  br label %90, !dbg !3963

; <label>:60:                                     ; preds = %55
  %61 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %44, i32 %3), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %61, metadata !3876, metadata !DIExpression()), !dbg !3965
  %62 = icmp eq i8* %61, null, !dbg !3966
  br i1 %62, label %90, label %63, !dbg !3967

; <label>:63:                                     ; preds = %60
  %64 = icmp eq i64 %1, 0, !dbg !3968
  %65 = icmp ne i8* %2, null, !dbg !3969
  %66 = and i1 %64, %65, !dbg !3970
  br i1 %66, label %67, label %82, !dbg !3970

; <label>:67:                                     ; preds = %63
  br label %68, !dbg !3971

; <label>:68:                                     ; preds = %67, %68
  %69 = phi i64 [ %73, %68 ], [ 0, %67 ]
  call void @llvm.dbg.value(metadata i64 %69, metadata !3885, metadata !DIExpression()), !dbg !3974
  %70 = getelementptr inbounds i8, i8* %2, i64 %69, !dbg !3971
  %71 = load i8, i8* %70, align 1, !dbg !3971, !tbaa !3150
  %72 = icmp eq i8 %71, 48, !dbg !3975
  %73 = add nuw i64 %69, 1, !dbg !3976
  br i1 %72, label %68, label %74, !dbg !3977, !llvm.loop !3978

; <label>:74:                                     ; preds = %68
  %75 = trunc i64 %69 to i32, !dbg !3980
  %76 = icmp ne i8 %71, 0, !dbg !3980
  %77 = icmp eq i32 %75, 0, !dbg !3982
  %78 = or i1 %77, %76, !dbg !3983
  br i1 %78, label %79, label %82, !dbg !3983

; <label>:79:                                     ; preds = %74
  %80 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0), i32 5) #11, !dbg !3984
  %81 = tail call i32 (i8*, ...) @semsg(i8* %80, i8* %0, i8* nonnull %2) #11, !dbg !3986
  br label %90

; <label>:82:                                     ; preds = %74, %63
  %83 = and i64 %46, 2, !dbg !3987
  %84 = icmp eq i64 %83, 0, !dbg !3987
  br i1 %84, label %87, label %85, !dbg !3989

; <label>:85:                                     ; preds = %82
  %86 = tail call fastcc i8* @set_num_option(i32 %6, i8* nonnull %61, i64 %1, i8* null, i64 0, i32 %3), !dbg !3990
  br label %90, !dbg !3991

; <label>:87:                                     ; preds = %82
  %88 = trunc i64 %1 to i32, !dbg !3992
  %89 = tail call fastcc i8* @set_bool_option(i32 %6, i8* nonnull %61, i32 %88, i32 %3), !dbg !3993
  br label %90, !dbg !3994

; <label>:90:                                     ; preds = %60, %39, %79, %38, %87, %85, %58, %52
  %91 = phi i8* [ null, %52 ], [ %59, %58 ], [ %86, %85 ], [ %89, %87 ], [ null, %38 ], [ null, %79 ], [ null, %39 ], [ null, %60 ]
  ret i8* %91, !dbg !3995
}

declare void @check_buf_options(%struct.file_buffer*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @check_options() local_unnamed_addr #0 !dbg !3446 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()), !dbg !3996
  %1 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !3997, !tbaa !3453
  %2 = icmp eq i8* %1, null, !dbg !3998
  br i1 %2, label %24, label %3, !dbg !3470

; <label>:3:                                      ; preds = %0
  br label %4, !dbg !3999

; <label>:4:                                      ; preds = %3, %18
  %5 = phi i64 [ %19, %18 ], [ 0, %3 ]
  %6 = phi %struct.vimoption* [ %20, %18 ], [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %3 ]
  call void @llvm.dbg.value(metadata i64 %5, metadata !3445, metadata !DIExpression()), !dbg !3996
  %7 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 2, !dbg !3999
  %8 = load i64, i64* %7, align 16, !dbg !3999, !tbaa !3107
  %9 = and i64 %8, 4, !dbg !4000
  %10 = icmp eq i64 %9, 0, !dbg !4000
  br i1 %10, label %18, label %11, !dbg !4001

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 3, !dbg !4002
  %13 = load i8*, i8** %12, align 8, !dbg !4002, !tbaa !3461
  %14 = icmp eq i8* %13, null, !dbg !4003
  br i1 %14, label %18, label %15, !dbg !4004

; <label>:15:                                     ; preds = %11
  %16 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %6), !dbg !4005
  %17 = bitcast i8* %16 to i8**, !dbg !4006
  tail call void @check_string_option(i8** %17) #11, !dbg !4007
  br label %18, !dbg !4007

; <label>:18:                                     ; preds = %11, %4, %15
  %19 = add nuw i64 %5, 1, !dbg !4008
  %20 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %19, !dbg !4009
  %21 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %20, i64 0, i32 0, !dbg !3997
  %22 = load i8*, i8** %21, align 16, !dbg !3997, !tbaa !3453
  %23 = icmp eq i8* %22, null, !dbg !3998
  br i1 %23, label %24, label %4, !dbg !3470, !llvm.loop !3469

; <label>:24:                                     ; preds = %18, %0
  ret void, !dbg !4010
}

; Function Attrs: nounwind uwtable
define internal fastcc void @didset_options() unnamed_addr #0 !dbg !4011 {
  %1 = tail call i32 @init_chartab() #11, !dbg !4013
  tail call void @didset_string_options() #11, !dbg !4014
  %2 = tail call i32 @spell_check_msm() #11, !dbg !4015
  %3 = tail call i32 @spell_check_sps() #11, !dbg !4016
  %4 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4017, !tbaa !3115
  %5 = getelementptr inbounds %struct.window_S, %struct.window_S* %4, i64 0, i32 4, !dbg !4018
  %6 = load %struct.synblock_T*, %struct.synblock_T** %5, align 8, !dbg !4018, !tbaa !4019
  %7 = tail call i8* @compile_cap_prog(%struct.synblock_T* %6) #11, !dbg !4024
  %8 = tail call i8* @did_set_spell_option(i32 1) #11, !dbg !4025
  %9 = tail call i8* @check_cedit() #11, !dbg !4026
  call void @llvm.dbg.value(metadata i32 0, metadata !4027, metadata !DIExpression()) #11, !dbg !4031
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @breakat_flags, i64 0, i64 0), i8 0, i64 256, i32 16, i1 false) #11, !dbg !4033
  %10 = load i8*, i8** @p_breakat, align 8, !dbg !4036, !tbaa !3115
  %11 = icmp eq i8* %10, null, !dbg !4038
  br i1 %11, label %24, label %12, !dbg !4039

; <label>:12:                                     ; preds = %0
  call void @llvm.dbg.value(metadata i8* %10, metadata !4030, metadata !DIExpression()) #11, !dbg !4040
  %13 = load i8, i8* %10, align 1, !dbg !4041, !tbaa !3150
  %14 = icmp eq i8 %13, 0, !dbg !4044
  br i1 %14, label %24, label %15, !dbg !4044

; <label>:15:                                     ; preds = %12
  br label %16, !dbg !4045

; <label>:16:                                     ; preds = %15, %16
  %17 = phi i8 [ %22, %16 ], [ %13, %15 ]
  %18 = phi i8* [ %21, %16 ], [ %10, %15 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !4030, metadata !DIExpression()) #11, !dbg !4040
  %19 = zext i8 %17 to i64, !dbg !4045
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* @breakat_flags, i64 0, i64 %19, !dbg !4045
  store i8 1, i8* %20, align 1, !dbg !4046, !tbaa !3150
  %21 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %21, metadata !4030, metadata !DIExpression()) #11, !dbg !4040
  %22 = load i8, i8* %21, align 1, !dbg !4041, !tbaa !3150
  %23 = icmp eq i8 %22, 0, !dbg !4044
  br i1 %23, label %24, label %16, !dbg !4044, !llvm.loop !4048

; <label>:24:                                     ; preds = %16, %0, %12
  %25 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4051, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %25, metadata !4052, metadata !DIExpression()) #11, !dbg !4055
  %26 = tail call i32 @briopt_check(%struct.window_S* %25) #11, !dbg !4057
  %27 = tail call i32 @fill_culopt_flags(i8* null, %struct.window_S* %25) #11, !dbg !4058
  %28 = tail call i8* @check_colorcolumn(%struct.window_S* %25) #11, !dbg !4059
  %29 = getelementptr inbounds %struct.window_S, %struct.window_S* %25, i64 0, i32 121, i32 21, !dbg !4060
  %30 = tail call i8* @set_chars_option(%struct.window_S* %25, i8** nonnull %29) #11, !dbg !4061
  ret void, !dbg !4062
}

declare void @init_spell_chartab() local_unnamed_addr #3

; Function Attrs: nounwind readonly uwtable
define i32 @istermoption_idx(i32) local_unnamed_addr #7 !dbg !3477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3476, metadata !DIExpression()), !dbg !4063
  %2 = sext i32 %0 to i64, !dbg !4064
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 0, !dbg !4065
  %4 = load i8*, i8** %3, align 16, !dbg !4065, !tbaa !3453
  %5 = load i8, i8* %4, align 1, !dbg !4067, !tbaa !3150
  %6 = icmp eq i8 %5, 116, !dbg !4068
  br i1 %6, label %7, label %12, !dbg !4069

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !4070
  %9 = load i8, i8* %8, align 1, !dbg !4070, !tbaa !3150
  %10 = icmp eq i8 %9, 95, !dbg !4071
  %11 = zext i1 %10 to i32
  br label %12

; <label>:12:                                     ; preds = %1, %7
  %13 = phi i32 [ 0, %1 ], [ %11, %7 ]
  ret i32 %13, !dbg !4072
}

; Function Attrs: nounwind
declare i8* @dcgettext(i8*, i8*, i32) local_unnamed_addr #6

declare i8* @vim_strsave(i8*) local_unnamed_addr #3

declare void @save_file_ff(%struct.file_buffer*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @didset_options2() unnamed_addr #0 !dbg !4073 {
  %1 = tail call i32 @highlight_changed() #11, !dbg !4074
  %2 = tail call i32 @check_opt_wim() #11, !dbg !4075
  %3 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4076, !tbaa !3115
  %4 = getelementptr inbounds %struct.window_S, %struct.window_S* %3, i64 0, i32 121, i32 21, !dbg !4077
  %5 = tail call i8* @set_chars_option(%struct.window_S* %3, i8** nonnull %4) #11, !dbg !4078
  %6 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4079, !tbaa !3115
  %7 = tail call i8* @set_chars_option(%struct.window_S* %6, i8** nonnull @p_fcs) #11, !dbg !4080
  %8 = tail call i8* @check_clipboard_option() #11, !dbg !4081
  %9 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4082, !tbaa !3115
  %10 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %9, i64 0, i32 140, !dbg !4083
  %11 = bitcast i32** %10 to i8**, !dbg !4083
  %12 = load i8*, i8** %11, align 8, !dbg !4083, !tbaa !4084
  tail call void @vim_free(i8* %12) #11, !dbg !4085
  %13 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4086, !tbaa !3115
  %14 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %13, i64 0, i32 139, !dbg !4087
  %15 = load i8*, i8** %14, align 8, !dbg !4087, !tbaa !4088
  %16 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %13, i64 0, i32 140, !dbg !4089
  %17 = tail call i32 @tabstop_set(i8* %15, i32** nonnull %16) #11, !dbg !4090
  %18 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4091, !tbaa !3115
  %19 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %18, i64 0, i32 143, !dbg !4092
  %20 = bitcast i32** %19 to i8**, !dbg !4092
  %21 = load i8*, i8** %20, align 8, !dbg !4092, !tbaa !4093
  tail call void @vim_free(i8* %21) #11, !dbg !4094
  %22 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4095, !tbaa !3115
  %23 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %22, i64 0, i32 142, !dbg !4096
  %24 = load i8*, i8** %23, align 8, !dbg !4096, !tbaa !4097
  %25 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %22, i64 0, i32 143, !dbg !4098
  %26 = tail call i32 @tabstop_set(i8* %24, i32** nonnull %25) #11, !dbg !4099
  ret void, !dbg !4100
}

declare i8* @enc_locale() local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare i8* @mb_init() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_helplang_default(i8*) local_unnamed_addr #0 !dbg !4101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4105, metadata !DIExpression()), !dbg !4107
  %2 = icmp eq i8* %0, null, !dbg !4108
  br i1 %2, label %60, label %3, !dbg !4110

; <label>:3:                                      ; preds = %1
  %4 = tail call i64 @strlen(i8* nonnull %0) #12, !dbg !4111
  %5 = icmp ult i64 %4, 2, !dbg !4112
  br i1 %5, label %60, label %6, !dbg !4113

; <label>:6:                                      ; preds = %3
  %7 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0)), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %7, metadata !4106, metadata !DIExpression()), !dbg !4115
  %8 = icmp sgt i32 %7, -1, !dbg !4116
  br i1 %8, label %9, label %60, !dbg !4118

; <label>:9:                                      ; preds = %6
  %10 = sext i32 %7 to i64, !dbg !4119
  %11 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %10, i32 2, !dbg !4120
  %12 = load i64, i64* %11, align 16, !dbg !4120, !tbaa !3107
  %13 = and i64 %12, 256, !dbg !4121
  %14 = icmp eq i64 %13, 0, !dbg !4121
  br i1 %14, label %15, label %60, !dbg !4122

; <label>:15:                                     ; preds = %9
  %16 = and i64 %12, 8, !dbg !4123
  %17 = icmp eq i64 %16, 0, !dbg !4123
  br i1 %17, label %20, label %18, !dbg !4126

; <label>:18:                                     ; preds = %15
  %19 = load i8*, i8** @p_hlg, align 8, !dbg !4127, !tbaa !3115
  tail call void @free_string_option(i8* %19) #11, !dbg !4128
  br label %20, !dbg !4128

; <label>:20:                                     ; preds = %15, %18
  %21 = tail call i8* @vim_strsave(i8* nonnull %0) #11, !dbg !4129
  store i8* %21, i8** @p_hlg, align 8, !dbg !4130, !tbaa !3115
  %22 = icmp eq i8* %21, null, !dbg !4131
  br i1 %22, label %23, label %25, !dbg !4133

; <label>:23:                                     ; preds = %20
  %24 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !4134, !tbaa !3115
  store i64 %24, i64* bitcast (i8** @p_hlg to i64*), align 8, !dbg !4135, !tbaa !3115
  br label %57, !dbg !4136

; <label>:25:                                     ; preds = %20
  %26 = tail call i32 @strncasecmp(i8* nonnull %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i64 3) #12, !dbg !4137
  %27 = icmp eq i32 %26, 0, !dbg !4140
  br i1 %27, label %28, label %45, !dbg !4141

; <label>:28:                                     ; preds = %25
  %29 = tail call i64 @strlen(i8* nonnull %21) #12, !dbg !4142
  %30 = icmp ugt i64 %29, 4, !dbg !4143
  br i1 %30, label %31, label %45, !dbg !4144

; <label>:31:                                     ; preds = %28
  %32 = getelementptr inbounds i8, i8* %21, i64 3, !dbg !4145
  %33 = load i8, i8* %32, align 1, !dbg !4145, !tbaa !3150
  %34 = add i8 %33, -65, !dbg !4145
  %35 = icmp ugt i8 %34, 25, !dbg !4145
  %36 = add i8 %33, 32, !dbg !4145
  %37 = select i1 %35, i8 %33, i8 %36, !dbg !4145
  store i8 %37, i8* %21, align 1, !dbg !4147, !tbaa !3150
  %38 = load i8*, i8** @p_hlg, align 8, !dbg !4148, !tbaa !3115
  %39 = getelementptr inbounds i8, i8* %38, i64 4, !dbg !4148
  %40 = load i8, i8* %39, align 1, !dbg !4148, !tbaa !3150
  %41 = add i8 %40, -65, !dbg !4148
  %42 = icmp ugt i8 %41, 25, !dbg !4148
  %43 = add i8 %40, 32, !dbg !4148
  %44 = select i1 %42, i8 %40, i8 %43, !dbg !4148
  br label %50, !dbg !4149

; <label>:45:                                     ; preds = %28, %25
  %46 = load i8, i8* %21, align 1, !dbg !4150
  %47 = icmp eq i8 %46, 67, !dbg !4152
  br i1 %47, label %48, label %54, !dbg !4152

; <label>:48:                                     ; preds = %45
  store i8 101, i8* %21, align 1, !dbg !4153, !tbaa !3150
  %49 = load i8*, i8** @p_hlg, align 8, !dbg !4155, !tbaa !3115
  br label %50, !dbg !4156

; <label>:50:                                     ; preds = %31, %48
  %51 = phi i8* [ %49, %48 ], [ %38, %31 ]
  %52 = phi i8 [ 110, %48 ], [ %44, %31 ]
  %53 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %52, i8* %53, align 1, !tbaa !3150
  br label %54, !dbg !4157

; <label>:54:                                     ; preds = %50, %45
  %55 = load i8*, i8** @p_hlg, align 8, !dbg !4157, !tbaa !3115
  %56 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !4157
  store i8 0, i8* %56, align 1, !dbg !4158, !tbaa !3150
  br label %57

; <label>:57:                                     ; preds = %54, %23
  %58 = load i64, i64* %11, align 16, !dbg !4159, !tbaa !3107
  %59 = or i64 %58, 8, !dbg !4159
  store i64 %59, i64* %11, align 16, !dbg !4159, !tbaa !3107
  br label %60, !dbg !4160

; <label>:60:                                     ; preds = %6, %57, %9, %1, %3
  ret void, !dbg !4161
}

declare i8* @get_mess_lang() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_number_default(i8* nocapture readonly, i64) local_unnamed_addr #0 !dbg !4162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4166, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i64 %1, metadata !4167, metadata !DIExpression()), !dbg !4170
  %3 = tail call i32 @findoption(i8* %0), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %3, metadata !4168, metadata !DIExpression()), !dbg !4172
  %4 = icmp sgt i32 %3, -1, !dbg !4173
  br i1 %4, label %5, label %9, !dbg !4175

; <label>:5:                                      ; preds = %2
  %6 = inttoptr i64 %1 to i8*, !dbg !4176
  %7 = sext i32 %3 to i64, !dbg !4177
  %8 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 5, i64 0, !dbg !4177
  store i8* %6, i8** %8, align 8, !dbg !4178, !tbaa !3115
  br label %9, !dbg !4177

; <label>:9:                                      ; preds = %5, %2
  ret void, !dbg !4179
}

; Function Attrs: nounwind uwtable
define void @set_local_options_default(%struct.window_S*, i32) local_unnamed_addr #0 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.window_S* %0, metadata !4184, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4194
  %3 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4195, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %3, metadata !4186, metadata !DIExpression()), !dbg !4196
  store %struct.window_S* %0, %struct.window_S** @curwin, align 8, !dbg !4197, !tbaa !3115
  %4 = getelementptr inbounds %struct.window_S, %struct.window_S* %0, i64 0, i32 1, !dbg !4198
  %5 = bitcast %struct.file_buffer** %4 to i64*, !dbg !4198
  %6 = load i64, i64* %5, align 8, !dbg !4198, !tbaa !4199
  store i64 %6, i64* bitcast (%struct.file_buffer** @curbuf to i64*), align 8, !dbg !4200, !tbaa !3115
  tail call void @block_autocmds() #11, !dbg !4201
  call void @llvm.dbg.value(metadata i32 0, metadata !4187, metadata !DIExpression()), !dbg !4202
  %7 = icmp ne i32 %1, 0
  br label %8, !dbg !4203

; <label>:8:                                      ; preds = %72, %2
  %9 = phi i64 [ %73, %72 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %9, metadata !4187, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i64 %9, metadata !3476, metadata !DIExpression()), !dbg !4204
  %10 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 0, !dbg !4206
  %11 = load i8*, i8** %10, align 16, !dbg !4206, !tbaa !3453
  %12 = load i8, i8* %11, align 1, !dbg !4208, !tbaa !3150
  %13 = icmp eq i8 %12, 116, !dbg !4209
  br i1 %13, label %14, label %18, !dbg !4210

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !4211
  %16 = load i8, i8* %15, align 1, !dbg !4211, !tbaa !3150
  %17 = icmp eq i8 %16, 95, !dbg !4212
  br i1 %17, label %74, label %18, !dbg !4213

; <label>:18:                                     ; preds = %14, %8
  %19 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, !dbg !4214
  call void @llvm.dbg.value(metadata %struct.vimoption* %19, metadata !4188, metadata !DIExpression()), !dbg !4215
  %20 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %19, i32 4), !dbg !4216
  call void @llvm.dbg.value(metadata i8* %20, metadata !4192, metadata !DIExpression()), !dbg !4217
  %21 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 4, !dbg !4218
  %22 = load i32, i32* %21, align 16, !dbg !4218, !tbaa !4220
  %23 = icmp eq i32 %22, 0, !dbg !4221
  br i1 %23, label %72, label %24, !dbg !4222

; <label>:24:                                     ; preds = %18
  %25 = and i32 %22, 16384, !dbg !4223
  %26 = icmp eq i32 %25, 0, !dbg !4224
  %27 = or i1 %7, %26, !dbg !4225
  br i1 %27, label %28, label %72, !dbg !4225

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 2, !dbg !4226
  %30 = load i64, i64* %29, align 16, !dbg !4226, !tbaa !3107
  %31 = and i64 %30, 64, !dbg !4227
  %32 = icmp ne i64 %31, 0, !dbg !4227
  %33 = icmp eq i8* %20, null, !dbg !4228
  %34 = or i1 %33, %32, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.vimoption* %19, metadata !4234, metadata !DIExpression()) #11, !dbg !4240
  call void @llvm.dbg.value(metadata i8* %20, metadata !4235, metadata !DIExpression()) #11, !dbg !4241
  call void @llvm.dbg.value(metadata i32 0, metadata !4236, metadata !DIExpression()) #11, !dbg !4242
  br i1 %34, label %72, label %35, !dbg !4239

; <label>:35:                                     ; preds = %28
  %36 = and i64 %30, 1024, !dbg !4243
  %37 = and i64 %30, 2, !dbg !4244
  %38 = icmp eq i64 %37, 0, !dbg !4244
  br i1 %38, label %48, label %39, !dbg !4246

; <label>:39:                                     ; preds = %35
  %40 = bitcast i8* %20 to i64*, !dbg !4247
  %41 = load i64, i64* %40, align 8, !dbg !4247, !tbaa !4248
  %42 = lshr exact i64 %36, 10, !dbg !4249
  %43 = xor i64 %42, 1, !dbg !4249
  %44 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 5, i64 %43, !dbg !4249
  %45 = bitcast i8** %44 to i64*, !dbg !4249
  %46 = load i64, i64* %45, align 8, !dbg !4249, !tbaa !3115
  %47 = icmp eq i64 %41, %46, !dbg !4250
  br i1 %47, label %72, label %70, !dbg !4251

; <label>:48:                                     ; preds = %35
  %49 = and i64 %30, 1, !dbg !4252
  %50 = icmp eq i64 %49, 0, !dbg !4252
  br i1 %50, label %61, label %51, !dbg !4254

; <label>:51:                                     ; preds = %48
  %52 = bitcast i8* %20 to i32*, !dbg !4255
  %53 = load i32, i32* %52, align 4, !dbg !4255, !tbaa !3060
  %54 = lshr exact i64 %36, 10, !dbg !4256
  %55 = xor i64 %54, 1, !dbg !4256
  %56 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 5, i64 %55, !dbg !4256
  %57 = bitcast i8** %56 to i64*, !dbg !4256
  %58 = load i64, i64* %57, align 8, !dbg !4256, !tbaa !3115
  %59 = trunc i64 %58 to i32, !dbg !4257
  %60 = icmp eq i32 %53, %59, !dbg !4258
  br i1 %60, label %72, label %70, !dbg !4251

; <label>:61:                                     ; preds = %48
  %62 = bitcast i8* %20 to i8**, !dbg !4259
  %63 = load i8*, i8** %62, align 8, !dbg !4259, !tbaa !3115
  %64 = lshr exact i64 %36, 10, !dbg !4259
  %65 = xor i64 %64, 1, !dbg !4259
  %66 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %9, i32 5, i64 %65, !dbg !4259
  %67 = load i8*, i8** %66, align 8, !dbg !4259, !tbaa !3115
  %68 = tail call i32 @strcmp(i8* %63, i8* %67) #12, !dbg !4259
  %69 = icmp eq i32 %68, 0, !dbg !4260
  br i1 %69, label %72, label %70, !dbg !4251

; <label>:70:                                     ; preds = %51, %39, %61
  %71 = trunc i64 %9 to i32, !dbg !4261
  tail call fastcc void @set_option_default(i32 %71, i32 5, i32 0), !dbg !4261
  br label %72, !dbg !4261

; <label>:72:                                     ; preds = %51, %39, %61, %28, %24, %18, %70
  %73 = add nuw i64 %9, 1, !dbg !4262
  br label %8, !dbg !4263, !llvm.loop !4264

; <label>:74:                                     ; preds = %14
  tail call void @unblock_autocmds() #11, !dbg !4266
  store %struct.window_S* %3, %struct.window_S** @curwin, align 8, !dbg !4267, !tbaa !3115
  %75 = getelementptr inbounds %struct.window_S, %struct.window_S* %3, i64 0, i32 1, !dbg !4268
  %76 = bitcast %struct.file_buffer** %75 to i64*, !dbg !4268
  %77 = load i64, i64* %76, align 8, !dbg !4268, !tbaa !4199
  store i64 %77, i64* bitcast (%struct.file_buffer** @curbuf to i64*), align 8, !dbg !4269, !tbaa !3115
  ret void, !dbg !4270
}

declare void @block_autocmds() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @get_varp_scope(%struct.vimoption* nocapture readonly, i32) unnamed_addr #0 !dbg !4271 {
  call void @llvm.dbg.value(metadata %struct.vimoption* %0, metadata !4275, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %1, metadata !4276, metadata !DIExpression()), !dbg !4278
  %3 = and i32 %1, 2, !dbg !4279
  %4 = icmp eq i32 %3, 0, !dbg !4279
  br i1 %4, label %16, label %5, !dbg !4281

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 4, !dbg !4282
  %7 = load i32, i32* %6, align 8, !dbg !4282, !tbaa !4220
  %8 = icmp eq i32 %7, 0, !dbg !4283
  br i1 %8, label %16, label %9, !dbg !4284

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 3, !dbg !4285
  %11 = load i8*, i8** %10, align 8, !dbg !4285, !tbaa !3461
  %12 = icmp eq i8* %11, inttoptr (i64 -1 to i8*), !dbg !4288
  br i1 %12, label %13, label %127, !dbg !4289

; <label>:13:                                     ; preds = %9
  %14 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %0), !dbg !4290
  %15 = getelementptr inbounds i8, i8* %14, i64 1376, !dbg !4290
  br label %127, !dbg !4291

; <label>:16:                                     ; preds = %5, %2
  %17 = and i32 %1, 4, !dbg !4292
  %18 = icmp eq i32 %17, 0, !dbg !4292
  br i1 %18, label %125, label %19, !dbg !4294

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 4, !dbg !4295
  %21 = load i32, i32* %20, align 8, !dbg !4295, !tbaa !4220
  %22 = and i32 %21, 4096, !dbg !4296
  %23 = icmp eq i32 %22, 0, !dbg !4296
  br i1 %23, label %125, label %24, !dbg !4297

; <label>:24:                                     ; preds = %19
  switch i32 %21, label %127 [
    i32 20510, label %25
    i32 20485, label %29
    i32 20486, label %33
    i32 20487, label %37
    i32 20507, label %41
    i32 20526, label %45
    i32 20536, label %49
    i32 20481, label %53
    i32 20553, label %57
    i32 20554, label %61
    i32 12319, label %65
    i32 12320, label %69
    i32 20503, label %73
    i32 20504, label %77
    i32 20500, label %81
    i32 20501, label %85
    i32 20511, label %89
    i32 20496, label %93
    i32 12326, label %97
    i32 12327, label %101
    i32 20559, label %105
    i32 20528, label %109
    i32 20483, label %113
    i32 20529, label %117
    i32 12289, label %121
  ], !dbg !4298

; <label>:25:                                     ; preds = %24
  %26 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4300, !tbaa !3115
  %27 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %26, i64 0, i32 107, !dbg !4302
  %28 = bitcast i8** %27 to i8*, !dbg !4303
  br label %127, !dbg !4304

; <label>:29:                                     ; preds = %24
  %30 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4305, !tbaa !3115
  %31 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %30, i64 0, i32 147, !dbg !4306
  %32 = bitcast i8** %31 to i8*, !dbg !4307
  br label %127, !dbg !4308

; <label>:33:                                     ; preds = %24
  %34 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4309, !tbaa !3115
  %35 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %34, i64 0, i32 145, !dbg !4310
  %36 = bitcast i8** %35 to i8*, !dbg !4311
  br label %127, !dbg !4312

; <label>:37:                                     ; preds = %24
  %38 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4313, !tbaa !3115
  %39 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %38, i64 0, i32 146, !dbg !4314
  %40 = bitcast i8** %39 to i8*, !dbg !4315
  br label %127, !dbg !4316

; <label>:41:                                     ; preds = %24
  %42 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4317, !tbaa !3115
  %43 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %42, i64 0, i32 148, !dbg !4318
  %44 = bitcast i8** %43 to i8*, !dbg !4319
  br label %127, !dbg !4320

; <label>:45:                                     ; preds = %24
  %46 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4321, !tbaa !3115
  %47 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %46, i64 0, i32 111, !dbg !4322
  %48 = bitcast i8** %47 to i8*, !dbg !4323
  br label %127, !dbg !4324

; <label>:49:                                     ; preds = %24
  %50 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4325, !tbaa !3115
  %51 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %50, i64 0, i32 149, !dbg !4326
  %52 = bitcast i8** %51 to i8*, !dbg !4327
  br label %127, !dbg !4328

; <label>:53:                                     ; preds = %24
  %54 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4329, !tbaa !3115
  %55 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %54, i64 0, i32 150, !dbg !4330
  %56 = bitcast i32* %55 to i8*, !dbg !4331
  br label %127, !dbg !4332

; <label>:57:                                     ; preds = %24
  %58 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4333, !tbaa !3115
  %59 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %58, i64 0, i32 151, !dbg !4334
  %60 = bitcast i8** %59 to i8*, !dbg !4335
  br label %127, !dbg !4336

; <label>:61:                                     ; preds = %24
  %62 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4337, !tbaa !3115
  %63 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %62, i64 0, i32 152, !dbg !4338
  %64 = bitcast i8** %63 to i8*, !dbg !4339
  br label %127, !dbg !4340

; <label>:65:                                     ; preds = %24
  %66 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4341, !tbaa !3115
  %67 = getelementptr inbounds %struct.window_S, %struct.window_S* %66, i64 0, i32 128, !dbg !4342
  %68 = bitcast i64* %67 to i8*, !dbg !4343
  br label %127, !dbg !4344

; <label>:69:                                     ; preds = %24
  %70 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4345, !tbaa !3115
  %71 = getelementptr inbounds %struct.window_S, %struct.window_S* %70, i64 0, i32 129, !dbg !4346
  %72 = bitcast i64* %71 to i8*, !dbg !4347
  br label %127, !dbg !4348

; <label>:73:                                     ; preds = %24
  %74 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4349, !tbaa !3115
  %75 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %74, i64 0, i32 100, !dbg !4350
  %76 = bitcast i8** %75 to i8*, !dbg !4351
  br label %127, !dbg !4352

; <label>:77:                                     ; preds = %24
  %78 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4353, !tbaa !3115
  %79 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %78, i64 0, i32 101, !dbg !4354
  %80 = bitcast i8** %79 to i8*, !dbg !4355
  br label %127, !dbg !4356

; <label>:81:                                     ; preds = %24
  %82 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4357, !tbaa !3115
  %83 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %82, i64 0, i32 154, !dbg !4358
  %84 = bitcast i8** %83 to i8*, !dbg !4359
  br label %127, !dbg !4360

; <label>:85:                                     ; preds = %24
  %86 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4361, !tbaa !3115
  %87 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %86, i64 0, i32 155, !dbg !4362
  %88 = bitcast i8** %87 to i8*, !dbg !4363
  br label %127, !dbg !4364

; <label>:89:                                     ; preds = %24
  %90 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4365, !tbaa !3115
  %91 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %90, i64 0, i32 209, !dbg !4366
  %92 = bitcast i8** %91 to i8*, !dbg !4367
  br label %127, !dbg !4368

; <label>:93:                                     ; preds = %24
  %94 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4369, !tbaa !3115
  %95 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %94, i64 0, i32 211, !dbg !4370
  %96 = bitcast i8** %95 to i8*, !dbg !4371
  br label %127, !dbg !4372

; <label>:97:                                     ; preds = %24
  %98 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4373, !tbaa !3115
  %99 = getelementptr inbounds %struct.window_S, %struct.window_S* %98, i64 0, i32 121, i32 36, !dbg !4374
  %100 = bitcast i8** %99 to i8*, !dbg !4375
  br label %127, !dbg !4376

; <label>:101:                                    ; preds = %24
  %102 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4377, !tbaa !3115
  %103 = getelementptr inbounds %struct.window_S, %struct.window_S* %102, i64 0, i32 121, i32 37, !dbg !4378
  %104 = bitcast i8** %103 to i8*, !dbg !4379
  br label %127, !dbg !4380

; <label>:105:                                    ; preds = %24
  %106 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4381, !tbaa !3115
  %107 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %106, i64 0, i32 156, !dbg !4382
  %108 = bitcast i64* %107 to i8*, !dbg !4383
  br label %127, !dbg !4384

; <label>:109:                                    ; preds = %24
  %110 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4385, !tbaa !3115
  %111 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %110, i64 0, i32 158, !dbg !4386
  %112 = bitcast i8** %111 to i8*, !dbg !4387
  br label %127, !dbg !4388

; <label>:113:                                    ; preds = %24
  %114 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4389, !tbaa !3115
  %115 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %114, i64 0, i32 69, !dbg !4390
  %116 = bitcast i8** %115 to i8*, !dbg !4391
  br label %127, !dbg !4392

; <label>:117:                                    ; preds = %24
  %118 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4393, !tbaa !3115
  %119 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %118, i64 0, i32 113, !dbg !4394
  %120 = bitcast i8** %119 to i8*, !dbg !4395
  br label %127, !dbg !4396

; <label>:121:                                    ; preds = %24
  %122 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4397, !tbaa !3115
  %123 = getelementptr inbounds %struct.window_S, %struct.window_S* %122, i64 0, i32 121, i32 21, !dbg !4398
  %124 = bitcast i8** %123 to i8*, !dbg !4399
  br label %127, !dbg !4400

; <label>:125:                                    ; preds = %19, %16
  %126 = tail call fastcc i8* @get_varp(%struct.vimoption* %0), !dbg !4401
  br label %127, !dbg !4402

; <label>:127:                                    ; preds = %24, %9, %125, %121, %117, %113, %109, %105, %101, %97, %93, %89, %85, %81, %77, %73, %69, %65, %61, %57, %53, %49, %45, %41, %37, %33, %29, %25, %13
  %128 = phi i8* [ %15, %13 ], [ %124, %121 ], [ %120, %117 ], [ %116, %113 ], [ %112, %109 ], [ %108, %105 ], [ %104, %101 ], [ %100, %97 ], [ %96, %93 ], [ %92, %89 ], [ %88, %85 ], [ %84, %81 ], [ %80, %77 ], [ %76, %73 ], [ %72, %69 ], [ %68, %65 ], [ %64, %61 ], [ %60, %57 ], [ %56, %53 ], [ %52, %49 ], [ %48, %45 ], [ %44, %41 ], [ %40, %37 ], [ %36, %33 ], [ %32, %29 ], [ %28, %25 ], [ %126, %125 ], [ %11, %9 ], [ null, %24 ]
  ret i8* %128, !dbg !4403
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_option_default(i32, i32, i32) unnamed_addr #0 !dbg !4404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4408, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.value(metadata i32 %1, metadata !4409, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i32 %2, metadata !4410, metadata !DIExpression()), !dbg !4427
  %4 = and i32 %1, 6, !dbg !4428
  %5 = icmp eq i32 %4, 0, !dbg !4429
  %6 = sext i32 %0 to i64, !dbg !4430
  %7 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, !dbg !4430
  %8 = select i1 %5, i32 4, i32 %1, !dbg !4431
  %9 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %7, i32 %8), !dbg !4432
  call void @llvm.dbg.value(metadata i8* %9, metadata !4411, metadata !DIExpression()), !dbg !4433
  %10 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 2, !dbg !4434
  %11 = load i64, i64* %10, align 16, !dbg !4434, !tbaa !3107
  call void @llvm.dbg.value(metadata i64 %11, metadata !4413, metadata !DIExpression()), !dbg !4435
  %12 = icmp eq i8* %9, null, !dbg !4436
  br i1 %12, label %144, label %13, !dbg !4437

; <label>:13:                                     ; preds = %3
  %14 = and i64 %11, 1024, !dbg !4438
  %15 = icmp eq i64 %14, 0, !dbg !4438
  %16 = icmp eq i32 %2, 0, !dbg !4439
  %17 = and i1 %16, %15, !dbg !4440
  %18 = and i64 %11, 4, !dbg !4441
  %19 = icmp eq i64 %18, 0, !dbg !4441
  br i1 %19, label %46, label %20, !dbg !4442

; <label>:20:                                     ; preds = %13
  %21 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !4443
  %22 = load i32, i32* %21, align 16, !dbg !4443, !tbaa !4220
  %23 = icmp eq i32 %22, 0, !dbg !4446
  br i1 %23, label %28, label %24, !dbg !4447

; <label>:24:                                     ; preds = %20
  %25 = zext i1 %17 to i64, !dbg !4448
  %26 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 5, i64 %25, !dbg !4448
  %27 = load i8*, i8** %26, align 8, !dbg !4448, !tbaa !3115
  tail call void @set_string_option_direct(i8* null, i32 %0, i8* %27, i32 %1, i32 0) #11, !dbg !4449
  br label %113, !dbg !4449

; <label>:28:                                     ; preds = %20
  %29 = and i32 %1, 1, !dbg !4450
  %30 = icmp eq i32 %29, 0, !dbg !4450
  %31 = and i64 %11, 8, !dbg !4453
  %32 = icmp eq i64 %31, 0, !dbg !4453
  %33 = or i1 %30, %32, !dbg !4454
  br i1 %33, label %38, label %34, !dbg !4454

; <label>:34:                                     ; preds = %28
  %35 = bitcast i8* %9 to i8**, !dbg !4455
  %36 = load i8*, i8** %35, align 8, !dbg !4455, !tbaa !3115
  tail call void @free_string_option(i8* %36) #11, !dbg !4456
  %37 = load i64, i64* %10, align 16, !dbg !4457, !tbaa !3107
  br label %38, !dbg !4456

; <label>:38:                                     ; preds = %28, %34
  %39 = phi i64 [ %11, %28 ], [ %37, %34 ], !dbg !4457
  %40 = zext i1 %17 to i64, !dbg !4458
  %41 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 5, i64 %40, !dbg !4458
  %42 = bitcast i8** %41 to i64*, !dbg !4458
  %43 = load i64, i64* %42, align 8, !dbg !4458, !tbaa !3115
  %44 = bitcast i8* %9 to i64*, !dbg !4459
  store i64 %43, i64* %44, align 8, !dbg !4459, !tbaa !3115
  %45 = and i64 %39, -9, !dbg !4457
  store i64 %45, i64* %10, align 16, !dbg !4457, !tbaa !3107
  br label %113

; <label>:46:                                     ; preds = %13
  %47 = and i64 %11, 2, !dbg !4460
  %48 = icmp eq i64 %47, 0, !dbg !4460
  br i1 %48, label %82, label %49, !dbg !4461

; <label>:49:                                     ; preds = %46
  %50 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !4462
  %51 = load i32, i32* %50, align 16, !dbg !4462, !tbaa !4220
  %52 = icmp eq i32 %51, 8222, !dbg !4463
  br i1 %52, label %53, label %55, !dbg !4464

; <label>:53:                                     ; preds = %49
  %54 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4465, !tbaa !3115
  tail call void @win_comp_scroll(%struct.window_S* %54) #11, !dbg !4466
  br label %113, !dbg !4466

; <label>:55:                                     ; preds = %49
  %56 = zext i1 %17 to i64, !dbg !4467
  %57 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 5, i64 %56, !dbg !4467
  %58 = bitcast i8** %57 to i64*, !dbg !4467
  %59 = load i64, i64* %58, align 8, !dbg !4467, !tbaa !3115
  call void @llvm.dbg.value(metadata i64 %59, metadata !4417, metadata !DIExpression()), !dbg !4468
  %60 = bitcast i8* %9 to i64*, !dbg !4469
  %61 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4471, !tbaa !3115
  %62 = getelementptr inbounds %struct.window_S, %struct.window_S* %61, i64 0, i32 129, !dbg !4472
  %63 = icmp eq i64* %62, %60, !dbg !4473
  %64 = getelementptr inbounds %struct.window_S, %struct.window_S* %61, i64 0, i32 128, !dbg !4474
  %65 = icmp eq i64* %64, %60, !dbg !4475
  %66 = or i1 %63, %65, !dbg !4476
  %67 = select i1 %66, i64 -1, i64 %59, !dbg !4476
  store i64 %67, i64* %60, align 8, !tbaa !4248
  br i1 %5, label %68, label %113, !dbg !4477

; <label>:68:                                     ; preds = %55
  call void @llvm.dbg.value(metadata %struct.vimoption* %7, metadata !4275, metadata !DIExpression()) #11, !dbg !4478
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !4481
  %69 = icmp eq i32 %51, 0, !dbg !4482
  br i1 %69, label %77, label %70, !dbg !4483

; <label>:70:                                     ; preds = %68
  %71 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 3, !dbg !4484
  %72 = load i8*, i8** %71, align 8, !dbg !4484, !tbaa !3461
  %73 = icmp eq i8* %72, inttoptr (i64 -1 to i8*), !dbg !4485
  br i1 %73, label %74, label %79, !dbg !4486

; <label>:74:                                     ; preds = %70
  %75 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %7) #11, !dbg !4487
  %76 = getelementptr inbounds i8, i8* %75, i64 1376, !dbg !4487
  br label %79, !dbg !4488

; <label>:77:                                     ; preds = %68
  %78 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %7) #11, !dbg !4489
  br label %79, !dbg !4490

; <label>:79:                                     ; preds = %70, %74, %77
  %80 = phi i8* [ %76, %74 ], [ %78, %77 ], [ %72, %70 ]
  %81 = bitcast i8* %80 to i64*, !dbg !4491
  store i64 %59, i64* %81, align 8, !dbg !4492, !tbaa !4248
  br label %113, !dbg !4491

; <label>:82:                                     ; preds = %46
  %83 = zext i1 %17 to i64, !dbg !4493
  %84 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 5, i64 %83, !dbg !4493
  %85 = bitcast i8** %84 to i64*, !dbg !4493
  %86 = load i64, i64* %85, align 8, !dbg !4493, !tbaa !3115
  %87 = trunc i64 %86 to i32, !dbg !4495
  %88 = bitcast i8* %9 to i32*, !dbg !4496
  store i32 %87, i32* %88, align 4, !dbg !4497, !tbaa !3060
  %89 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !4498
  %90 = load i32, i32* %89, align 16, !dbg !4498, !tbaa !4220
  %91 = icmp eq i32 %90, 16435, !dbg !4500
  br i1 %91, label %92, label %96, !dbg !4501

; <label>:92:                                     ; preds = %82
  %93 = tail call i32 @getuid() #11, !dbg !4502
  %94 = icmp eq i32 %93, 0, !dbg !4503
  br i1 %94, label %95, label %96, !dbg !4504

; <label>:95:                                     ; preds = %92
  store i32 0, i32* %88, align 4, !dbg !4505, !tbaa !3060
  br label %96, !dbg !4506

; <label>:96:                                     ; preds = %95, %92, %82
  br i1 %5, label %97, label %113, !dbg !4507

; <label>:97:                                     ; preds = %96
  %98 = load i32, i32* %88, align 4, !dbg !4508, !tbaa !3060
  call void @llvm.dbg.value(metadata %struct.vimoption* %7, metadata !4275, metadata !DIExpression()) #11, !dbg !4510
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !4512
  %99 = load i32, i32* %89, align 16, !dbg !4513, !tbaa !4220
  %100 = icmp eq i32 %99, 0, !dbg !4514
  br i1 %100, label %108, label %101, !dbg !4515

; <label>:101:                                    ; preds = %97
  %102 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 3, !dbg !4516
  %103 = load i8*, i8** %102, align 8, !dbg !4516, !tbaa !3461
  %104 = icmp eq i8* %103, inttoptr (i64 -1 to i8*), !dbg !4517
  br i1 %104, label %105, label %110, !dbg !4518

; <label>:105:                                    ; preds = %101
  %106 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %7) #11, !dbg !4519
  %107 = getelementptr inbounds i8, i8* %106, i64 1376, !dbg !4519
  br label %110, !dbg !4520

; <label>:108:                                    ; preds = %97
  %109 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %7) #11, !dbg !4521
  br label %110, !dbg !4522

; <label>:110:                                    ; preds = %101, %105, %108
  %111 = phi i8* [ %107, %105 ], [ %109, %108 ], [ %103, %101 ]
  %112 = bitcast i8* %111 to i32*, !dbg !4523
  store i32 %98, i32* %112, align 4, !dbg !4524, !tbaa !3060
  br label %113, !dbg !4523

; <label>:113:                                    ; preds = %55, %79, %53, %110, %96, %24, %38
  call void @llvm.dbg.value(metadata i32 %0, metadata !4525, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !4533
  %114 = and i32 %1, 4, !dbg !4534
  %115 = icmp eq i32 %114, 0, !dbg !4534
  br i1 %115, label %140, label %116, !dbg !4536

; <label>:116:                                    ; preds = %113
  %117 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !4537
  %118 = load i32, i32* %117, align 16, !dbg !4537, !tbaa !4220
  switch i32 %118, label %140 [
    i32 12327, label %119
    i32 8211, label %122
    i32 8212, label %125
    i32 20511, label %128
    i32 16423, label %131
    i32 16416, label %134
    i32 16425, label %137
  ], !dbg !4538

; <label>:119:                                    ; preds = %116
  %120 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4539, !tbaa !3115
  %121 = getelementptr inbounds %struct.window_S, %struct.window_S* %120, i64 0, i32 123, !dbg !4541
  br label %140, !dbg !4542

; <label>:122:                                    ; preds = %116
  %123 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4543, !tbaa !3115
  %124 = getelementptr inbounds %struct.window_S, %struct.window_S* %123, i64 0, i32 124, !dbg !4544
  br label %140, !dbg !4545

; <label>:125:                                    ; preds = %116
  %126 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4546, !tbaa !3115
  %127 = getelementptr inbounds %struct.window_S, %struct.window_S* %126, i64 0, i32 125, !dbg !4547
  br label %140, !dbg !4548

; <label>:128:                                    ; preds = %116
  %129 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4549, !tbaa !3115
  %130 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %129, i64 0, i32 210, !dbg !4550
  br label %140, !dbg !4551

; <label>:131:                                    ; preds = %116
  %132 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4552, !tbaa !3115
  %133 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %132, i64 0, i32 105, !dbg !4553
  br label %140, !dbg !4554

; <label>:134:                                    ; preds = %116
  %135 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4555, !tbaa !3115
  %136 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %135, i64 0, i32 109, !dbg !4556
  br label %140, !dbg !4557

; <label>:137:                                    ; preds = %116
  %138 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4558, !tbaa !3115
  %139 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %138, i64 0, i32 103, !dbg !4559
  br label %140, !dbg !4560

; <label>:140:                                    ; preds = %113, %116, %119, %122, %125, %128, %131, %134, %137
  %141 = phi i64* [ %139, %137 ], [ %136, %134 ], [ %133, %131 ], [ %130, %128 ], [ %127, %125 ], [ %124, %122 ], [ %121, %119 ], [ %10, %116 ], [ %10, %113 ]
  call void @llvm.dbg.value(metadata i64* %141, metadata !4414, metadata !DIExpression()), !dbg !4561
  %142 = load i64, i64* %141, align 8, !dbg !4562, !tbaa !4248
  %143 = and i64 %142, -8388609, !dbg !4563
  store i64 %143, i64* %141, align 8, !dbg !4564, !tbaa !4248
  br label %144, !dbg !4565

; <label>:144:                                    ; preds = %3, %140
  %145 = load i64, i64* bitcast (%struct.sctx_T* @current_sctx to i64*), align 8, !dbg !4566
  call void @llvm.dbg.value(metadata i64 %145, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4578
  %146 = load i64, i64* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 2), align 8, !dbg !4566
  call void @llvm.dbg.value(metadata i64 %146, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !4578
  %147 = load i64, i64* bitcast (i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 3) to i64*), align 8, !dbg !4566
  call void @llvm.dbg.value(metadata i64 %147, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %0, metadata !4571, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %1, metadata !4572, metadata !DIExpression()), !dbg !4579
  %148 = icmp ne i32 %4, 0, !dbg !4580
  %149 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !4581
  %150 = load i32, i32* %149, align 16, !dbg !4581, !tbaa !4220
  call void @llvm.dbg.value(metadata i32 %150, metadata !4575, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i64 %146, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !4583
  call void @llvm.dbg.value(metadata i64 %147, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !4583
  %151 = and i32 %1, 8, !dbg !4584
  %152 = icmp eq i32 %151, 0, !dbg !4584
  br i1 %152, label %153, label %161, !dbg !4586

; <label>:153:                                    ; preds = %144
  %154 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !4587, !tbaa !3217
  %155 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !4587, !tbaa !3229
  %156 = add nsw i32 %155, -1, !dbg !4587
  %157 = sext i32 %156 to i64, !dbg !4587
  %158 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %154, i64 %157, i32 0, !dbg !4587
  %159 = load i64, i64* %158, align 8, !dbg !4587, !tbaa !4588
  %160 = add nsw i64 %159, %146, !dbg !4590
  call void @llvm.dbg.value(metadata i64 %160, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !4583
  br label %161, !dbg !4591

; <label>:161:                                    ; preds = %153, %144
  %162 = phi i64 [ %146, %144 ], [ %160, %153 ]
  call void @llvm.dbg.value(metadata i64 %162, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !4583
  %163 = and i32 %1, 2, !dbg !4592
  %164 = icmp eq i32 %163, 0, !dbg !4592
  %165 = and i1 %148, %164, !dbg !4594
  %166 = xor i1 %165, true, !dbg !4594
  %167 = and i32 %150, 24576, !dbg !4595
  %168 = icmp eq i32 %167, 0, !dbg !4596
  %169 = or i1 %168, %166, !dbg !4594
  br i1 %169, label %170, label %176, !dbg !4594

; <label>:170:                                    ; preds = %161
  %171 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, !dbg !4597
  %172 = bitcast %struct.sctx_T* %171 to i64*, !dbg !4597
  store i64 %145, i64* %172, align 8, !dbg !4597
  %173 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, i32 2, !dbg !4597
  store i64 %162, i64* %173, align 8, !dbg !4597
  %174 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, i32 3, !dbg !4597
  %175 = bitcast i32* %174 to i64*, !dbg !4597
  store i64 %147, i64* %175, align 8, !dbg !4597
  br label %176, !dbg !4598

; <label>:176:                                    ; preds = %170, %161
  %177 = and i32 %1, 4, !dbg !4599
  %178 = icmp eq i32 %177, 0, !dbg !4599
  %179 = and i1 %148, %178, !dbg !4601
  br i1 %179, label %204, label %180, !dbg !4601

; <label>:180:                                    ; preds = %176
  %181 = and i32 %150, 16384, !dbg !4602
  %182 = icmp eq i32 %181, 0, !dbg !4602
  br i1 %182, label %192, label %183, !dbg !4605

; <label>:183:                                    ; preds = %180
  %184 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4606, !tbaa !3115
  %185 = and i32 %150, 4095, !dbg !4607
  %186 = zext i32 %185 to i64, !dbg !4606
  %187 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %184, i64 0, i32 66, i64 %186, !dbg !4606
  %188 = bitcast %struct.sctx_T* %187 to i64*, !dbg !4608
  store i64 %145, i64* %188, align 8, !dbg !4608
  %189 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %184, i64 0, i32 66, i64 %186, i32 2, !dbg !4608
  store i64 %162, i64* %189, align 8, !dbg !4608
  %190 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %184, i64 0, i32 66, i64 %186, i32 3, !dbg !4608
  %191 = bitcast i32* %190 to i64*, !dbg !4608
  store i64 %147, i64* %191, align 8, !dbg !4608
  br label %204, !dbg !4606

; <label>:192:                                    ; preds = %180
  %193 = and i32 %150, 8192, !dbg !4609
  %194 = icmp eq i32 %193, 0, !dbg !4609
  br i1 %194, label %204, label %195, !dbg !4611

; <label>:195:                                    ; preds = %192
  %196 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !4612, !tbaa !3115
  %197 = and i32 %150, 4095, !dbg !4613
  %198 = zext i32 %197 to i64, !dbg !4612
  %199 = getelementptr inbounds %struct.window_S, %struct.window_S* %196, i64 0, i32 121, i32 50, i64 %198, !dbg !4612
  %200 = bitcast %struct.sctx_T* %199 to i64*, !dbg !4614
  store i64 %145, i64* %200, align 8, !dbg !4614
  %201 = getelementptr inbounds %struct.window_S, %struct.window_S* %196, i64 0, i32 121, i32 50, i64 %198, i32 2, !dbg !4614
  store i64 %162, i64* %201, align 8, !dbg !4614
  %202 = getelementptr inbounds %struct.window_S, %struct.window_S* %196, i64 0, i32 121, i32 50, i64 %198, i32 3, !dbg !4614
  %203 = bitcast i32* %202 to i64*, !dbg !4614
  store i64 %147, i64* %203, align 8, !dbg !4614
  br label %204, !dbg !4612

; <label>:204:                                    ; preds = %176, %183, %192, %195
  ret void, !dbg !4615
}

declare void @unblock_autocmds() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_init_2() local_unnamed_addr #0 !dbg !4616 {
  %1 = tail call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0)), !dbg !4619
  call void @llvm.dbg.value(metadata i32 %1, metadata !4618, metadata !DIExpression()), !dbg !4620
  %2 = icmp sgt i32 %1, -1, !dbg !4621
  br i1 %2, label %3, label %11, !dbg !4623

; <label>:3:                                      ; preds = %0
  %4 = sext i32 %1 to i64, !dbg !4624
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 2, !dbg !4625
  %6 = load i64, i64* %5, align 16, !dbg !4625, !tbaa !3107
  %7 = and i64 %6, 256, !dbg !4626
  %8 = icmp eq i64 %7, 0, !dbg !4626
  br i1 %8, label %9, label %11, !dbg !4627

; <label>:9:                                      ; preds = %3
  %10 = load i32, i32* @p_cp, align 4, !dbg !4628, !tbaa !3060
  tail call fastcc void @set_option_default(i32 %1, i32 4, i32 %10), !dbg !4629
  br label %11, !dbg !4629

; <label>:11:                                     ; preds = %3, %9, %0
  tail call void @comp_col() #11, !dbg !4630
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), metadata !4631, metadata !DIExpression()) #11, !dbg !4635
  %12 = tail call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %12, metadata !4634, metadata !DIExpression()) #11, !dbg !4639
  %13 = icmp slt i32 %12, 0, !dbg !4640
  br i1 %13, label %22, label %14, !dbg !4642

; <label>:14:                                     ; preds = %11
  %15 = sext i32 %12 to i64, !dbg !4643
  %16 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %15, i32 2, !dbg !4645
  %17 = load i64, i64* %16, align 16, !dbg !4645, !tbaa !3107
  %18 = and i64 %17, 256, !dbg !4646
  %19 = icmp eq i64 %18, 0, !dbg !4646
  br i1 %19, label %22, label %20, !dbg !4647

; <label>:20:                                     ; preds = %14
  %21 = load i64, i64* @Rows, align 8, !dbg !4648, !tbaa !4248
  br label %25, !dbg !4647

; <label>:22:                                     ; preds = %11, %14
  %23 = load i64, i64* @Rows, align 8, !dbg !4649, !tbaa !4248
  %24 = add nsw i64 %23, -1, !dbg !4650
  store i64 %24, i64* @p_window, align 8, !dbg !4651, !tbaa !4248
  br label %25, !dbg !4652

; <label>:25:                                     ; preds = %20, %22
  %26 = phi i64 [ %21, %20 ], [ %23, %22 ], !dbg !4648
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), metadata !4166, metadata !DIExpression()) #11, !dbg !4653
  call void @llvm.dbg.value(metadata i64 %30, metadata !4167, metadata !DIExpression()) #11, !dbg !4655
  %27 = tail call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !4656
  call void @llvm.dbg.value(metadata i32 %27, metadata !4168, metadata !DIExpression()) #11, !dbg !4657
  %28 = icmp sgt i32 %27, -1, !dbg !4658
  br i1 %28, label %29, label %34, !dbg !4659

; <label>:29:                                     ; preds = %25
  %30 = add nsw i64 %26, -1, !dbg !4660
  %31 = inttoptr i64 %30 to i8*, !dbg !4661
  %32 = sext i32 %27 to i64, !dbg !4662
  %33 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %32, i32 5, i64 0, !dbg !4662
  store i8* %31, i8** %33, align 8, !dbg !4663, !tbaa !3115
  br label %34, !dbg !4662

; <label>:34:                                     ; preds = %25, %29
  %35 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0)), !dbg !4664
  call void @llvm.dbg.value(metadata i32 %35, metadata !4618, metadata !DIExpression()), !dbg !4620
  %36 = icmp sgt i32 %35, -1, !dbg !4665
  br i1 %36, label %37, label %50, !dbg !4667

; <label>:37:                                     ; preds = %34
  %38 = sext i32 %35 to i64, !dbg !4668
  %39 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %38, i32 2, !dbg !4669
  %40 = load i64, i64* %39, align 16, !dbg !4669, !tbaa !3107
  %41 = and i64 %40, 256, !dbg !4670
  %42 = icmp eq i64 %41, 0, !dbg !4670
  br i1 %42, label %43, label %50, !dbg !4671

; <label>:43:                                     ; preds = %37
  %44 = tail call i8* @term_bg_default() #11, !dbg !4672
  %45 = load i8, i8* %44, align 1, !dbg !4673, !tbaa !3150
  %46 = icmp eq i8 %45, 100, !dbg !4674
  br i1 %46, label %47, label %50, !dbg !4675

; <label>:47:                                     ; preds = %43
  tail call void @set_string_option_direct(i8* null, i32 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 1, i32 0) #11, !dbg !4676
  %48 = load i64, i64* %39, align 16, !dbg !4678, !tbaa !3107
  %49 = and i64 %48, -257, !dbg !4678
  store i64 %49, i64* %39, align 16, !dbg !4678, !tbaa !3107
  br label %50, !dbg !4679

; <label>:50:                                     ; preds = %37, %47, %43, %34
  %51 = tail call i8* @parse_shape_opt(i32 2) #11, !dbg !4680
  %52 = tail call i8* @parse_shape_opt(i32 1) #11, !dbg !4681
  %53 = tail call i8* @parse_printoptions() #11, !dbg !4682
  ret void, !dbg !4683
}

declare void @comp_col() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @option_was_set(i8* nocapture readonly) local_unnamed_addr #0 !dbg !4632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4631, metadata !DIExpression()), !dbg !4684
  %2 = tail call i32 @findoption(i8* %0), !dbg !4685
  call void @llvm.dbg.value(metadata i32 %2, metadata !4634, metadata !DIExpression()), !dbg !4686
  %3 = icmp slt i32 %2, 0, !dbg !4687
  br i1 %3, label %11, label %4, !dbg !4688

; <label>:4:                                      ; preds = %1
  %5 = sext i32 %2 to i64, !dbg !4689
  %6 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 2, !dbg !4690
  %7 = load i64, i64* %6, align 16, !dbg !4690, !tbaa !3107
  %8 = lshr i64 %7, 8, !dbg !4691
  %9 = trunc i64 %8 to i32, !dbg !4691
  %10 = and i32 %9, 1, !dbg !4691
  br label %11, !dbg !4691

; <label>:11:                                     ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %10, %4 ]
  ret i32 %12, !dbg !4692
}

declare i8* @term_bg_default() local_unnamed_addr #3

declare void @set_string_option_direct(i8*, i32, i8*, i32, i32) local_unnamed_addr #3

declare i8* @parse_shape_opt(i32) local_unnamed_addr #3

declare i8* @parse_printoptions() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_init_3() local_unnamed_addr #0 !dbg !4693 {
  %1 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)), !dbg !4703
  call void @llvm.dbg.value(metadata i32 %1, metadata !4696, metadata !DIExpression()), !dbg !4704
  %2 = icmp slt i32 %1, 0, !dbg !4705
  br i1 %2, label %11, label %3, !dbg !4707

; <label>:3:                                      ; preds = %0
  %4 = sext i32 %1 to i64, !dbg !4708
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 2, !dbg !4709
  %6 = load i64, i64* %5, align 16, !dbg !4709, !tbaa !3107
  %7 = lshr i64 %6, 8, !dbg !4710
  %8 = trunc i64 %7 to i32, !dbg !4710
  %9 = and i32 %8, 1, !dbg !4710
  %10 = xor i32 %9, 1, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %10, metadata !4697, metadata !DIExpression()), !dbg !4711
  br label %11

; <label>:11:                                     ; preds = %0, %3
  %12 = phi i32 [ %10, %3 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4697, metadata !DIExpression()), !dbg !4711
  %13 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)), !dbg !4712
  call void @llvm.dbg.value(metadata i32 %13, metadata !4698, metadata !DIExpression()), !dbg !4713
  %14 = icmp slt i32 %13, 0, !dbg !4714
  br i1 %14, label %23, label %15, !dbg !4716

; <label>:15:                                     ; preds = %11
  %16 = sext i32 %13 to i64, !dbg !4717
  %17 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %16, i32 2, !dbg !4718
  %18 = load i64, i64* %17, align 16, !dbg !4718, !tbaa !3107
  %19 = lshr i64 %18, 8, !dbg !4719
  %20 = trunc i64 %19 to i32, !dbg !4719
  %21 = and i32 %20, 1, !dbg !4719
  %22 = xor i32 %21, 1, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %22, metadata !4699, metadata !DIExpression()), !dbg !4720
  br label %23

; <label>:23:                                     ; preds = %11, %15
  %24 = phi i32 [ %22, %15 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !4699, metadata !DIExpression()), !dbg !4720
  %25 = tail call i8* @get_isolated_shell_name() #11, !dbg !4721
  call void @llvm.dbg.value(metadata i8* %25, metadata !4695, metadata !DIExpression()), !dbg !4722
  %26 = icmp eq i8* %25, null, !dbg !4723
  br i1 %26, label %78, label %27, !dbg !4725

; <label>:27:                                     ; preds = %23
  %28 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0)) #11, !dbg !4726
  %29 = icmp eq i32 %28, 0, !dbg !4729
  br i1 %29, label %33, label %30, !dbg !4730

; <label>:30:                                     ; preds = %27
  %31 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0)) #11, !dbg !4731
  %32 = icmp eq i32 %31, 0, !dbg !4732
  br i1 %32, label %33, label %43, !dbg !4733

; <label>:33:                                     ; preds = %30, %27
  %34 = icmp eq i32 %24, 0, !dbg !4734
  br i1 %34, label %38, label %35, !dbg !4737

; <label>:35:                                     ; preds = %33
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** @p_sp, align 8, !dbg !4738, !tbaa !3115
  %36 = sext i32 %13 to i64, !dbg !4740
  %37 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %36, i32 5, i64 0, !dbg !4740
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** %37, align 8, !dbg !4741, !tbaa !3115
  br label %38, !dbg !4742

; <label>:38:                                     ; preds = %33, %35
  %39 = icmp eq i32 %12, 0, !dbg !4743
  br i1 %39, label %77, label %40, !dbg !4745

; <label>:40:                                     ; preds = %38
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), i8** @p_srr, align 8, !dbg !4746, !tbaa !3115
  %41 = sext i32 %1 to i64, !dbg !4748
  %42 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %41, i32 5, i64 0, !dbg !4748
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), i8** %42, align 8, !dbg !4749, !tbaa !3115
  br label %77, !dbg !4750

; <label>:43:                                     ; preds = %30
  %44 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !4751
  %45 = icmp eq i32 %44, 0, !dbg !4753
  br i1 %45, label %67, label %46, !dbg !4754

; <label>:46:                                     ; preds = %43
  %47 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)) #11, !dbg !4755
  %48 = icmp eq i32 %47, 0, !dbg !4756
  br i1 %48, label %67, label %49, !dbg !4757

; <label>:49:                                     ; preds = %46
  %50 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !4758
  %51 = icmp eq i32 %50, 0, !dbg !4759
  br i1 %51, label %67, label %52, !dbg !4760

; <label>:52:                                     ; preds = %49
  %53 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #11, !dbg !4761
  %54 = icmp eq i32 %53, 0, !dbg !4762
  br i1 %54, label %67, label %55, !dbg !4763

; <label>:55:                                     ; preds = %52
  %56 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0)) #11, !dbg !4764
  %57 = icmp eq i32 %56, 0, !dbg !4765
  br i1 %57, label %67, label %58, !dbg !4766

; <label>:58:                                     ; preds = %55
  %59 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0)) #11, !dbg !4767
  %60 = icmp eq i32 %59, 0, !dbg !4768
  br i1 %60, label %67, label %61, !dbg !4769

; <label>:61:                                     ; preds = %58
  %62 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #11, !dbg !4770
  %63 = icmp eq i32 %62, 0, !dbg !4771
  br i1 %63, label %67, label %64, !dbg !4772

; <label>:64:                                     ; preds = %61
  %65 = tail call i32 @vim_fnamecmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #11, !dbg !4773
  %66 = icmp eq i32 %65, 0, !dbg !4774
  br i1 %66, label %67, label %77, !dbg !4775

; <label>:67:                                     ; preds = %64, %61, %58, %55, %52, %49, %46, %43
  %68 = icmp eq i32 %24, 0, !dbg !4776
  br i1 %68, label %72, label %69, !dbg !4779

; <label>:69:                                     ; preds = %67
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i8** @p_sp, align 8, !dbg !4780, !tbaa !3115
  %70 = sext i32 %13 to i64, !dbg !4782
  %71 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %70, i32 5, i64 0, !dbg !4782
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i8** %71, align 8, !dbg !4783, !tbaa !3115
  br label %72, !dbg !4784

; <label>:72:                                     ; preds = %67, %69
  %73 = icmp eq i32 %12, 0, !dbg !4785
  br i1 %73, label %77, label %74, !dbg !4787

; <label>:74:                                     ; preds = %72
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8** @p_srr, align 8, !dbg !4788, !tbaa !3115
  %75 = sext i32 %1 to i64, !dbg !4790
  %76 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %75, i32 5, i64 0, !dbg !4790
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8** %76, align 8, !dbg !4791, !tbaa !3115
  br label %77, !dbg !4792

; <label>:77:                                     ; preds = %38, %72, %64, %74, %40
  tail call void @vim_free(i8* nonnull %25) #11, !dbg !4793
  br label %78, !dbg !4794

; <label>:78:                                     ; preds = %23, %77
  %79 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !4795, !tbaa !3115
  %80 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %79, i64 0, i32 0, i32 0, !dbg !4795
  %81 = load i64, i64* %80, align 8, !dbg !4795, !tbaa !4796
  %82 = icmp eq i64 %81, 1, !dbg !4795
  br i1 %82, label %83, label %98, !dbg !4795

; <label>:83:                                     ; preds = %78
  %84 = tail call i8* @ml_get(i64 1) #11, !dbg !4795
  %85 = load i8, i8* %84, align 1, !dbg !4795, !tbaa !3150
  %86 = icmp eq i8 %85, 0, !dbg !4795
  br i1 %86, label %87, label %98, !dbg !4797

; <label>:87:                                     ; preds = %83
  %88 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0)), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %88, metadata !4700, metadata !DIExpression()), !dbg !4799
  %89 = icmp sgt i32 %88, -1, !dbg !4800
  br i1 %89, label %90, label %98, !dbg !4802

; <label>:90:                                     ; preds = %87
  %91 = sext i32 %88 to i64, !dbg !4803
  %92 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %91, i32 2, !dbg !4804
  %93 = load i64, i64* %92, align 16, !dbg !4804, !tbaa !3107
  %94 = and i64 %93, 256, !dbg !4805
  %95 = icmp eq i64 %94, 0, !dbg !4805
  br i1 %95, label %98, label %96, !dbg !4806

; <label>:96:                                     ; preds = %90
  %97 = tail call i32 @default_fileformat() #11, !dbg !4807
  tail call void @set_fileformat(i32 %97, i32 4) #11, !dbg !4808
  br label %98, !dbg !4808

; <label>:98:                                     ; preds = %87, %96, %90, %83, %78
  tail call void @set_title_defaults(), !dbg !4809
  ret void, !dbg !4810
}

declare i8* @get_isolated_shell_name() local_unnamed_addr #3

declare i32 @vim_fnamecmp(i8*, i8*) local_unnamed_addr #3

declare i8* @ml_get(i64) local_unnamed_addr #3

declare void @set_fileformat(i32, i32) local_unnamed_addr #3

declare i32 @default_fileformat() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_title_defaults() local_unnamed_addr #0 !dbg !4811 {
  %1 = tail call i32 @findoption(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)), !dbg !4815
  call void @llvm.dbg.value(metadata i32 %1, metadata !4813, metadata !DIExpression()), !dbg !4816
  %2 = icmp sgt i32 %1, -1, !dbg !4817
  br i1 %2, label %3, label %22, !dbg !4819

; <label>:3:                                      ; preds = %0
  %4 = sext i32 %1 to i64, !dbg !4820
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 2, !dbg !4821
  %6 = load i64, i64* %5, align 16, !dbg !4821, !tbaa !3107
  %7 = and i64 %6, 256, !dbg !4822
  %8 = icmp eq i64 %7, 0, !dbg !4822
  br i1 %8, label %9, label %22, !dbg !4823

; <label>:9:                                      ; preds = %3
  %10 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !4824, !tbaa !4827
  %11 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !4830
  %12 = or i32 %11, %10, !dbg !4831
  %13 = icmp eq i32 %12, 0, !dbg !4831
  br i1 %13, label %14, label %17, !dbg !4831

; <label>:14:                                     ; preds = %9
  %15 = tail call i32 @mch_can_restore_title() #11, !dbg !4832
  %16 = sext i32 %15 to i64, !dbg !4832
  call void @llvm.dbg.value(metadata i64 %16, metadata !4814, metadata !DIExpression()), !dbg !4833
  br label %17

; <label>:17:                                     ; preds = %9, %14
  %18 = phi i64 [ %16, %14 ], [ 1, %9 ]
  call void @llvm.dbg.value(metadata i64 %18, metadata !4814, metadata !DIExpression()), !dbg !4833
  %19 = inttoptr i64 %18 to i8*, !dbg !4834
  %20 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 5, i64 0, !dbg !4835
  store i8* %19, i8** %20, align 8, !dbg !4836, !tbaa !3115
  %21 = trunc i64 %18 to i32, !dbg !4837
  store i32 %21, i32* @p_title, align 4, !dbg !4838, !tbaa !3060
  br label %22, !dbg !4839

; <label>:22:                                     ; preds = %3, %17, %0
  %23 = tail call i32 @findoption(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0)), !dbg !4840
  call void @llvm.dbg.value(metadata i32 %23, metadata !4813, metadata !DIExpression()), !dbg !4816
  %24 = icmp sgt i32 %23, -1, !dbg !4841
  br i1 %24, label %25, label %44, !dbg !4843

; <label>:25:                                     ; preds = %22
  %26 = sext i32 %23 to i64, !dbg !4844
  %27 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %26, i32 2, !dbg !4845
  %28 = load i64, i64* %27, align 16, !dbg !4845, !tbaa !3107
  %29 = and i64 %28, 256, !dbg !4846
  %30 = icmp eq i64 %29, 0, !dbg !4846
  br i1 %30, label %31, label %44, !dbg !4847

; <label>:31:                                     ; preds = %25
  %32 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !4848, !tbaa !4827
  %33 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !4851
  %34 = or i32 %33, %32, !dbg !4852
  %35 = icmp eq i32 %34, 0, !dbg !4852
  br i1 %35, label %36, label %39, !dbg !4852

; <label>:36:                                     ; preds = %31
  %37 = tail call i32 @mch_can_restore_icon() #11, !dbg !4853
  %38 = sext i32 %37 to i64, !dbg !4853
  call void @llvm.dbg.value(metadata i64 %38, metadata !4814, metadata !DIExpression()), !dbg !4833
  br label %39

; <label>:39:                                     ; preds = %31, %36
  %40 = phi i64 [ %38, %36 ], [ 1, %31 ]
  call void @llvm.dbg.value(metadata i64 %40, metadata !4814, metadata !DIExpression()), !dbg !4833
  %41 = inttoptr i64 %40 to i8*, !dbg !4854
  %42 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %26, i32 5, i64 0, !dbg !4855
  store i8* %41, i8** %42, align 8, !dbg !4856, !tbaa !3115
  %43 = trunc i64 %40 to i32, !dbg !4857
  store i32 %43, i32* @p_icon, align 4, !dbg !4858, !tbaa !3060
  br label %44, !dbg !4859

; <label>:44:                                     ; preds = %25, %39, %22
  ret void, !dbg !4860
}

declare void @free_string_option(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare i32 @mch_can_restore_title() local_unnamed_addr #3

declare i32 @mch_can_restore_icon() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @ex_set(%struct.exarg*) local_unnamed_addr #0 !dbg !4861 {
  call void @llvm.dbg.value(metadata %struct.exarg* %0, metadata !4937, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i32 0, metadata !4938, metadata !DIExpression()), !dbg !4940
  %2 = getelementptr inbounds %struct.exarg, %struct.exarg* %0, i64 0, i32 5, !dbg !4941
  %3 = load i32, i32* %2, align 8, !dbg !4941, !tbaa !4943
  %4 = icmp eq i32 %3, 411, !dbg !4945
  %5 = select i1 %4, i32 2, i32 0, !dbg !4945
  %6 = icmp eq i32 %3, 412, !dbg !4945
  %7 = select i1 %6, i32 4, i32 %5, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %7, metadata !4938, metadata !DIExpression()), !dbg !4940
  %8 = load i32, i32* getelementptr inbounds (%struct.cmdmod_T, %struct.cmdmod_T* @cmdmod, i64 0, i32 0), align 8, !dbg !4946, !tbaa !4948
  %9 = and i32 %8, 64, !dbg !4951
  %10 = icmp ne i32 %9, 0, !dbg !4951
  %11 = icmp eq i32 %7, 0, !dbg !4952
  %12 = and i1 %10, %11, !dbg !4953
  br i1 %12, label %13, label %14, !dbg !4953

; <label>:13:                                     ; preds = %1
  tail call void @ex_options(%struct.exarg* nonnull %0) #11, !dbg !4954
  br label %23, !dbg !4954

; <label>:14:                                     ; preds = %1
  %15 = getelementptr inbounds %struct.exarg, %struct.exarg* %0, i64 0, i32 8, !dbg !4955
  %16 = load i32, i32* %15, align 4, !dbg !4955, !tbaa !4958
  %17 = icmp eq i32 %16, 0, !dbg !4959
  %18 = or i32 %7, 64, !dbg !4960
  %19 = select i1 %17, i32 %7, i32 %18, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %19, metadata !4938, metadata !DIExpression()), !dbg !4940
  %20 = getelementptr inbounds %struct.exarg, %struct.exarg* %0, i64 0, i32 0, !dbg !4962
  %21 = load i8*, i8** %20, align 8, !dbg !4962, !tbaa !4963
  %22 = tail call i32 @do_set(i8* %21, i32 %19), !dbg !4964
  br label %23

; <label>:23:                                     ; preds = %14, %13
  ret void, !dbg !4965
}

declare void @ex_options(%struct.exarg*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @do_set(i8*, i32) local_unnamed_addr #0 !dbg !4966 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [80 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca [2 x i8], align 1
  %12 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %0, i8** %7, align 8, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 %1, metadata !4969, metadata !DIExpression()), !dbg !5029
  %13 = getelementptr inbounds [80 x i8], [80 x i8]* %8, i64 0, i64 0, !dbg !5030
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #11, !dbg !5030
  call void @llvm.dbg.declare(metadata [80 x i8]* %8, metadata !4972, metadata !DIExpression()), !dbg !5031
  %14 = bitcast i32* %9 to i8*, !dbg !5032
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11, !dbg !5032
  %15 = bitcast i64* %10 to i8*, !dbg !5033
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11, !dbg !5033
  call void @llvm.dbg.value(metadata i8* null, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i32 0, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 0, metadata !4990, metadata !DIExpression()), !dbg !5036
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 0, !dbg !5037
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #11, !dbg !5037
  call void @llvm.dbg.declare(metadata [2 x i8]* %11, metadata !4991, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !5028
  %17 = load i8, i8* %0, align 1, !dbg !5039, !tbaa !3150
  %18 = icmp eq i8 %17, 0, !dbg !5041
  br i1 %18, label %19, label %20, !dbg !5042

; <label>:19:                                     ; preds = %2
  tail call fastcc void @showoptions(i32 0, i32 %1), !dbg !5043
  call void @llvm.dbg.value(metadata i32 1, metadata !4986, metadata !DIExpression()), !dbg !5035
  br label %1388, !dbg !5045

; <label>:20:                                     ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 0, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* null, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !5028
  %21 = and i32 %1, 8
  %22 = icmp eq i32 %21, 0
  %23 = or i32 %1, 1
  %24 = bitcast i32* %5 to i8*
  %25 = bitcast i8** %6 to i8*
  %26 = and i32 %1, 16
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %1, 32
  %29 = icmp ne i32 %28, 0
  %30 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 1
  %31 = bitcast i32* %12 to i8*
  %32 = and i32 %1, 4
  %33 = icmp eq i32 %32, 0
  %34 = icmp eq i32 %1, 4
  %35 = and i32 %1, 6
  %36 = icmp eq i32 %35, 0
  %37 = bitcast i32* %3 to i8*
  %38 = bitcast i8** %4 to i8*
  br label %39, !dbg !5046

; <label>:39:                                     ; preds = %20, %1380
  %40 = phi i8* [ %0, %20 ], [ %1385, %1380 ]
  %41 = phi i32 [ 0, %20 ], [ %1381, %1380 ]
  %42 = phi i32 [ 0, %20 ], [ %1382, %1380 ]
  %43 = phi i8* [ null, %20 ], [ %1383, %1380 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %40, metadata !4976, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i8* %43, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i32 %42, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %41, metadata !4990, metadata !DIExpression()), !dbg !5036
  %44 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3) #12, !dbg !5049
  %45 = icmp eq i32 %44, 0, !dbg !5050
  br i1 %45, label %46, label %63, !dbg !5051

; <label>:46:                                     ; preds = %39
  %47 = tail call i16** @__ctype_b_loc() #13, !dbg !5052
  %48 = load i16*, i16** %47, align 8, !dbg !5052, !tbaa !3115
  %49 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !5052
  %50 = load i8, i8* %49, align 1, !dbg !5052, !tbaa !3150
  %51 = zext i8 %50 to i64, !dbg !5052
  %52 = getelementptr inbounds i16, i16* %48, i64 %51, !dbg !5052
  %53 = load i16, i16* %52, align 2, !dbg !5052, !tbaa !3628
  %54 = and i16 %53, 1024, !dbg !5052
  %55 = icmp eq i16 %54, 0, !dbg !5052
  %56 = and i1 %22, %55, !dbg !5053
  br i1 %56, label %57, label %63, !dbg !5053

; <label>:57:                                     ; preds = %46
  call void @llvm.dbg.value(metadata i8* %49, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %49, i8** %7, align 8, !dbg !5054, !tbaa !3115
  %58 = load i8, i8* %49, align 1, !dbg !5056, !tbaa !3150
  %59 = icmp eq i8 %58, 38, !dbg !5058
  br i1 %59, label %60, label %62, !dbg !5059

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds i8, i8* %40, i64 4, !dbg !5060
  call void @llvm.dbg.value(metadata i8* %61, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %61, i8** %7, align 8, !dbg !5060, !tbaa !3115
  call fastcc void @set_options_default(i32 %23), !dbg !5062
  call fastcc void @didset_options(), !dbg !5063
  call fastcc void @didset_options2(), !dbg !5064
  call void @redraw_all_later(i32 50) #11, !dbg !5065
  br label %1380, !dbg !5066

; <label>:62:                                     ; preds = %57
  call fastcc void @showoptions(i32 1, i32 %1), !dbg !5067
  call void @llvm.dbg.value(metadata i32 1, metadata !4986, metadata !DIExpression()), !dbg !5035
  br label %1380

; <label>:63:                                     ; preds = %46, %39
  call void @llvm.dbg.value(metadata i8* %40, metadata !4968, metadata !DIExpression()), !dbg !5028
  %64 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i64 7) #12, !dbg !5069
  %65 = or i32 %64, %21, !dbg !5070
  %66 = icmp eq i32 %65, 0, !dbg !5070
  br i1 %66, label %67, label %70, !dbg !5070

; <label>:67:                                     ; preds = %63
  call fastcc void @showoptions(i32 2, i32 %1), !dbg !5071
  call void @show_termcodes() #11, !dbg !5073
  call void @llvm.dbg.value(metadata i32 1, metadata !4986, metadata !DIExpression()), !dbg !5035
  %68 = load i8*, i8** %7, align 8, !dbg !5074, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %68, metadata !4968, metadata !DIExpression()), !dbg !5028
  %69 = getelementptr inbounds i8, i8* %68, i64 7, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %69, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %69, i8** %7, align 8, !dbg !5074, !tbaa !3115
  br label %1380, !dbg !5075

; <label>:70:                                     ; preds = %63
  call void @llvm.dbg.value(metadata i32 1, metadata !4977, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %40, metadata !4968, metadata !DIExpression()), !dbg !5028
  %71 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i64 2) #12, !dbg !5077
  %72 = icmp eq i32 %71, 0, !dbg !5079
  br i1 %72, label %73, label %78, !dbg !5080

; <label>:73:                                     ; preds = %70
  %74 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i64 6) #12, !dbg !5081
  %75 = icmp eq i32 %74, 0, !dbg !5082
  br i1 %75, label %78, label %76, !dbg !5083

; <label>:76:                                     ; preds = %73
  call void @llvm.dbg.value(metadata i32 0, metadata !4977, metadata !DIExpression()), !dbg !5076
  %77 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %77, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %77, i8** %7, align 8, !dbg !5084, !tbaa !3115
  br label %83, !dbg !5086

; <label>:78:                                     ; preds = %73, %70
  call void @llvm.dbg.value(metadata i8* %40, metadata !4968, metadata !DIExpression()), !dbg !5028
  %79 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i64 3) #12, !dbg !5087
  %80 = icmp eq i32 %79, 0, !dbg !5089
  br i1 %80, label %81, label %83, !dbg !5090

; <label>:81:                                     ; preds = %78
  call void @llvm.dbg.value(metadata i32 2, metadata !4977, metadata !DIExpression()), !dbg !5076
  %82 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %82, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %82, i8** %7, align 8, !dbg !5091, !tbaa !3115
  br label %83, !dbg !5093

; <label>:83:                                     ; preds = %78, %81, %76
  %84 = phi i8* [ %77, %76 ], [ %82, %81 ], [ %40, %78 ], !dbg !5094
  %85 = phi i32 [ 0, %76 ], [ 2, %81 ], [ 1, %78 ]
  call void @llvm.dbg.value(metadata i32 %85, metadata !4977, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i32 0, metadata !4983, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  %86 = load i8, i8* %84, align 1, !dbg !5097, !tbaa !3150
  switch i8 %86, label %180 [
    i8 60, label %87
    i8 116, label %168
  ], !dbg !5098

; <label>:87:                                     ; preds = %83
  call void @llvm.dbg.value(metadata i32 -1, metadata !4970, metadata !DIExpression()), !dbg !5099
  %88 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !5100
  %89 = load i8, i8* %88, align 1, !dbg !5100, !tbaa !3150
  %90 = icmp eq i8 %89, 116, !dbg !5103
  br i1 %90, label %91, label %103, !dbg !5104

; <label>:91:                                     ; preds = %87
  %92 = getelementptr inbounds i8, i8* %84, i64 2, !dbg !5105
  %93 = load i8, i8* %92, align 1, !dbg !5105, !tbaa !3150
  %94 = icmp eq i8 %93, 95, !dbg !5106
  br i1 %94, label %95, label %103, !dbg !5107

; <label>:95:                                     ; preds = %91
  %96 = getelementptr inbounds i8, i8* %84, i64 3, !dbg !5108
  %97 = load i8, i8* %96, align 1, !dbg !5108, !tbaa !3150
  %98 = icmp eq i8 %97, 0, !dbg !5108
  br i1 %98, label %103, label %99, !dbg !5109

; <label>:99:                                     ; preds = %95
  %100 = getelementptr inbounds i8, i8* %84, i64 4, !dbg !5110
  %101 = load i8, i8* %100, align 1, !dbg !5110, !tbaa !3150
  %102 = icmp eq i8 %101, 0, !dbg !5110
  br i1 %102, label %103, label %113, !dbg !5111

; <label>:103:                                    ; preds = %99, %95, %91, %87
  br label %104, !dbg !5112

; <label>:104:                                    ; preds = %103, %107
  %105 = phi i8 [ %110, %107 ], [ %89, %103 ], !dbg !5114
  %106 = phi i64 [ %108, %107 ], [ 1, %103 ]
  call void @llvm.dbg.value(metadata i64 %106, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  switch i8 %105, label %107 [
    i8 0, label %111
    i8 62, label %111
  ], !dbg !5112

; <label>:107:                                    ; preds = %104
  %108 = add nuw i64 %106, 1, !dbg !5116
  %109 = getelementptr inbounds i8, i8* %84, i64 %108
  %110 = load i8, i8* %109, align 1, !dbg !5114, !tbaa !3150
  br label %104, !dbg !5117, !llvm.loop !5118

; <label>:111:                                    ; preds = %104, %104
  %112 = trunc i64 %106 to i32, !dbg !5112
  br label %113, !dbg !5120

; <label>:113:                                    ; preds = %111, %99
  %114 = phi i32 [ 5, %99 ], [ %112, %111 ]
  call void @llvm.dbg.value(metadata i32 %114, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  %115 = zext i32 %114 to i64, !dbg !5120
  %116 = getelementptr inbounds i8, i8* %84, i64 %115, !dbg !5120
  %117 = load i8, i8* %116, align 1, !dbg !5120, !tbaa !3150
  %118 = icmp eq i8 %117, 62, !dbg !5122
  br i1 %118, label %119, label %1311, !dbg !5123

; <label>:119:                                    ; preds = %113
  store i8 0, i8* %116, align 1, !dbg !5124, !tbaa !3150
  %120 = load i8*, i8** %7, align 8, !dbg !5125, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %120, metadata !4968, metadata !DIExpression()), !dbg !5028
  %121 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !5125
  %122 = load i8, i8* %121, align 1, !dbg !5125, !tbaa !3150
  %123 = icmp eq i8 %122, 116, !dbg !5127
  br i1 %123, label %124, label %128, !dbg !5128

; <label>:124:                                    ; preds = %119
  %125 = getelementptr inbounds i8, i8* %120, i64 2, !dbg !5129
  %126 = load i8, i8* %125, align 1, !dbg !5129, !tbaa !3150
  %127 = icmp eq i8 %126, 95, !dbg !5130
  br i1 %127, label %131, label %128, !dbg !5131

; <label>:128:                                    ; preds = %124, %119
  call void @llvm.dbg.value(metadata i32 %132, metadata !4970, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.value(metadata i8* %133, metadata !4968, metadata !DIExpression()), !dbg !5028
  %129 = add nuw nsw i32 %114, 1, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %134, metadata !4980, metadata !DIExpression()), !dbg !5115
  %130 = getelementptr inbounds i8, i8* %120, i64 %115, !dbg !5133
  store i8 62, i8* %130, align 1, !dbg !5134, !tbaa !3150
  br label %137, !dbg !5135

; <label>:131:                                    ; preds = %124
  %132 = call i32 @findoption(i8* nonnull %121), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %132, metadata !4970, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.value(metadata i32 %132, metadata !4970, metadata !DIExpression()), !dbg !5099
  %133 = load i8*, i8** %7, align 8, !dbg !5133, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %133, metadata !4968, metadata !DIExpression()), !dbg !5028
  %134 = add nuw nsw i32 %114, 1, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %134, metadata !4980, metadata !DIExpression()), !dbg !5115
  %135 = getelementptr inbounds i8, i8* %133, i64 %115, !dbg !5133
  store i8 62, i8* %135, align 1, !dbg !5134, !tbaa !3150
  %136 = icmp eq i32 %132, -1, !dbg !5137
  br i1 %136, label %137, label %240, !dbg !5135

; <label>:137:                                    ; preds = %128, %131
  %138 = phi i32 [ %129, %128 ], [ %134, %131 ]
  %139 = load i8*, i8** %7, align 8, !dbg !5139, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %139, metadata !4968, metadata !DIExpression()), !dbg !5028
  %140 = getelementptr inbounds i8, i8* %139, i64 1, !dbg !5140
  call void @llvm.dbg.value(metadata i8* %140, metadata !3910, metadata !DIExpression()) #11, !dbg !5141
  call void @llvm.dbg.value(metadata i32 1, metadata !3915, metadata !DIExpression()) #11, !dbg !5143
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !5144
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11, !dbg !5145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %140, metadata !3918, metadata !DIExpression()) #11, !dbg !5147
  store i8* %140, i8** %6, align 8, !dbg !5147, !tbaa !3115
  %141 = load i8, i8* %140, align 1, !dbg !5148, !tbaa !3150
  %142 = icmp eq i8 %141, 116, !dbg !5149
  br i1 %142, label %143, label %161, !dbg !5150

; <label>:143:                                    ; preds = %137
  %144 = getelementptr inbounds i8, i8* %139, i64 2, !dbg !5151
  %145 = load i8, i8* %144, align 1, !dbg !5151, !tbaa !3150
  %146 = icmp eq i8 %145, 95, !dbg !5152
  br i1 %146, label %147, label %161, !dbg !5153

; <label>:147:                                    ; preds = %143
  %148 = getelementptr inbounds i8, i8* %139, i64 3, !dbg !5154
  %149 = load i8, i8* %148, align 1, !dbg !5154, !tbaa !3150
  %150 = zext i8 %149 to i32, !dbg !5154
  %151 = icmp eq i8 %149, 0, !dbg !5154
  br i1 %151, label %161, label %152, !dbg !5155

; <label>:152:                                    ; preds = %147
  %153 = getelementptr inbounds i8, i8* %139, i64 4, !dbg !5156
  %154 = load i8, i8* %153, align 1, !dbg !5156, !tbaa !3150
  %155 = icmp eq i8 %154, 0, !dbg !5156
  br i1 %155, label %161, label %156, !dbg !5157

; <label>:156:                                    ; preds = %152
  %157 = zext i8 %154 to i32, !dbg !5156
  %158 = shl nuw nsw i32 %157, 8, !dbg !5158
  %159 = or i32 %158, %150, !dbg !5158
  %160 = sub nsw i32 0, %159, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %160, metadata !3916, metadata !DIExpression()) #11, !dbg !5144
  br label %166, !dbg !5159

; <label>:161:                                    ; preds = %152, %147, %143, %137
  call void @llvm.dbg.value(metadata i8* %140, metadata !3918, metadata !DIExpression()) #11, !dbg !5147
  call void @llvm.dbg.value(metadata i8* %139, metadata !3918, metadata !DIExpression()) #11, !dbg !5147
  store i8* %139, i8** %6, align 8, !dbg !5160, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 0, metadata !3917, metadata !DIExpression()) #11, !dbg !5163
  store i32 0, i32* %5, align 4, !dbg !5164, !tbaa !3060
  call void @llvm.dbg.value(metadata i32* %5, metadata !3917, metadata !DIExpression()) #11, !dbg !5163
  call void @llvm.dbg.value(metadata i8** %6, metadata !3918, metadata !DIExpression()) #11, !dbg !5147
  %162 = call i32 @find_special_key(i8** nonnull %6, i32* nonnull %5, i32 11, i32* null) #11, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %162, metadata !3916, metadata !DIExpression()) #11, !dbg !5144
  %163 = load i32, i32* %5, align 4, !dbg !5166, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %163, metadata !3917, metadata !DIExpression()) #11, !dbg !5163
  %164 = icmp eq i32 %163, 0, !dbg !5166
  %165 = select i1 %164, i32 %162, i32 0, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %165, metadata !3916, metadata !DIExpression()) #11, !dbg !5144
  br label %166, !dbg !5169

; <label>:166:                                    ; preds = %156, %161
  %167 = phi i32 [ %160, %156 ], [ %165, %161 ]
  call void @llvm.dbg.value(metadata i32 %167, metadata !3916, metadata !DIExpression()) #11, !dbg !5144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11, !dbg !5170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %167, metadata !4983, metadata !DIExpression()), !dbg !5096
  br label %240, !dbg !5171

; <label>:168:                                    ; preds = %83
  %169 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !5172
  %170 = load i8, i8* %169, align 1, !dbg !5172, !tbaa !3150
  %171 = icmp eq i8 %170, 95, !dbg !5175
  br i1 %171, label %172, label %180, !dbg !5176

; <label>:172:                                    ; preds = %168
  %173 = getelementptr inbounds i8, i8* %84, i64 2, !dbg !5177
  %174 = load i8, i8* %173, align 1, !dbg !5177, !tbaa !3150
  %175 = icmp eq i8 %174, 0, !dbg !5177
  br i1 %175, label %180, label %176, !dbg !5178

; <label>:176:                                    ; preds = %172
  %177 = getelementptr inbounds i8, i8* %84, i64 3, !dbg !5179
  %178 = load i8, i8* %177, align 1, !dbg !5179, !tbaa !3150
  %179 = icmp eq i8 %178, 0, !dbg !5179
  br i1 %179, label %180, label %208, !dbg !5180

; <label>:180:                                    ; preds = %83, %176, %172, %168
  call void @llvm.dbg.value(metadata i64 0, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  %181 = zext i8 %86 to i32, !dbg !5181
  %182 = and i32 %181, 223, !dbg !5181
  %183 = add nsw i32 %182, -65, !dbg !5181
  %184 = icmp ult i32 %183, 26, !dbg !5181
  %185 = add nsw i32 %181, -48, !dbg !5181
  %186 = icmp ult i32 %185, 10, !dbg !5181
  %187 = or i1 %186, %184, !dbg !5181
  %188 = icmp eq i8 %86, 95, !dbg !5182
  %189 = or i1 %188, %187, !dbg !5181
  br i1 %189, label %190, label %205, !dbg !5181, !llvm.loop !5183

; <label>:190:                                    ; preds = %180
  br label %191

; <label>:191:                                    ; preds = %190, %191
  %192 = phi i64 [ %204, %191 ], [ 1, %190 ]
  %193 = getelementptr inbounds i8, i8* %84, i64 %192
  %194 = load i8, i8* %193, align 1, !dbg !5181, !tbaa !3150
  call void @llvm.dbg.value(metadata i64 %192, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  %195 = zext i8 %194 to i32, !dbg !5181
  %196 = and i32 %195, 223, !dbg !5181
  %197 = add nsw i32 %196, -65, !dbg !5181
  %198 = icmp ult i32 %197, 26, !dbg !5181
  %199 = add nsw i32 %195, -48, !dbg !5181
  %200 = icmp ult i32 %199, 10, !dbg !5181
  %201 = or i1 %200, %198, !dbg !5181
  %202 = icmp eq i8 %194, 95, !dbg !5182
  %203 = or i1 %202, %201, !dbg !5181
  %204 = add nuw i64 %192, 1, !dbg !5186
  br i1 %203, label %191, label %205, !dbg !5181, !llvm.loop !5183

; <label>:205:                                    ; preds = %191, %180
  %206 = phi i64 [ 0, %180 ], [ %192, %191 ]
  %207 = trunc i64 %206 to i32, !dbg !5187
  br label %208, !dbg !5187

; <label>:208:                                    ; preds = %205, %176
  %209 = phi i32 [ 4, %176 ], [ %207, %205 ]
  call void @llvm.dbg.value(metadata i32 %209, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %84, metadata !4968, metadata !DIExpression()), !dbg !5028
  %210 = zext i32 %209 to i64, !dbg !5187
  %211 = getelementptr inbounds i8, i8* %84, i64 %210, !dbg !5187
  %212 = load i8, i8* %211, align 1, !dbg !5187, !tbaa !3150
  store i8 0, i8* %211, align 1, !dbg !5188, !tbaa !3150
  %213 = load i8*, i8** %7, align 8, !dbg !5189, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %213, metadata !4968, metadata !DIExpression()), !dbg !5028
  %214 = call i32 @findoption(i8* %213), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %214, metadata !4970, metadata !DIExpression()), !dbg !5099
  %215 = load i8*, i8** %7, align 8, !dbg !5191, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %215, metadata !4968, metadata !DIExpression()), !dbg !5028
  %216 = getelementptr inbounds i8, i8* %215, i64 %210, !dbg !5191
  store i8 %212, i8* %216, align 1, !dbg !5192, !tbaa !3150
  %217 = icmp eq i32 %214, -1, !dbg !5193
  br i1 %217, label %218, label %240, !dbg !5195

; <label>:218:                                    ; preds = %208
  %219 = load i8*, i8** %7, align 8, !dbg !5196, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %219, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %219, metadata !3910, metadata !DIExpression()) #11, !dbg !5197
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()) #11, !dbg !5199
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %219, metadata !3918, metadata !DIExpression()) #11, !dbg !5201
  %220 = load i8, i8* %219, align 1, !dbg !5202, !tbaa !3150
  %221 = icmp eq i8 %220, 116, !dbg !5203
  br i1 %221, label %222, label %240, !dbg !5204

; <label>:222:                                    ; preds = %218
  %223 = getelementptr inbounds i8, i8* %219, i64 1, !dbg !5205
  %224 = load i8, i8* %223, align 1, !dbg !5205, !tbaa !3150
  %225 = icmp eq i8 %224, 95, !dbg !5206
  br i1 %225, label %226, label %240, !dbg !5207

; <label>:226:                                    ; preds = %222
  %227 = getelementptr inbounds i8, i8* %219, i64 2, !dbg !5208
  %228 = load i8, i8* %227, align 1, !dbg !5208, !tbaa !3150
  %229 = zext i8 %228 to i32, !dbg !5208
  %230 = icmp eq i8 %228, 0, !dbg !5208
  br i1 %230, label %240, label %231, !dbg !5209

; <label>:231:                                    ; preds = %226
  %232 = getelementptr inbounds i8, i8* %219, i64 3, !dbg !5210
  %233 = load i8, i8* %232, align 1, !dbg !5210, !tbaa !3150
  %234 = icmp eq i8 %233, 0, !dbg !5210
  br i1 %234, label %240, label %235, !dbg !5211

; <label>:235:                                    ; preds = %231
  %236 = zext i8 %233 to i32, !dbg !5210
  %237 = shl nuw nsw i32 %236, 8, !dbg !5212
  %238 = or i32 %237, %229, !dbg !5212
  %239 = sub nsw i32 0, %238, !dbg !5212
  call void @llvm.dbg.value(metadata i32 %239, metadata !3916, metadata !DIExpression()) #11, !dbg !5200
  br label %240, !dbg !5213

; <label>:240:                                    ; preds = %235, %231, %226, %222, %218, %208, %131, %166
  %241 = phi i32 [ %138, %166 ], [ %134, %131 ], [ %209, %208 ], [ %209, %218 ], [ %209, %222 ], [ %209, %226 ], [ %209, %231 ], [ %209, %235 ]
  %242 = phi i32 [ %167, %166 ], [ 0, %131 ], [ 0, %208 ], [ 0, %218 ], [ 0, %222 ], [ 0, %226 ], [ 0, %231 ], [ %239, %235 ]
  %243 = phi i32 [ -1, %166 ], [ %132, %131 ], [ %214, %208 ], [ -1, %218 ], [ -1, %222 ], [ -1, %226 ], [ -1, %231 ], [ -1, %235 ]
  call void @llvm.dbg.value(metadata i32 %243, metadata !4970, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.value(metadata i32 %242, metadata !4983, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %241, metadata !4980, metadata !DIExpression()), !dbg !5115
  %244 = load i8*, i8** %7, align 8, !dbg !5214, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %244, metadata !4968, metadata !DIExpression()), !dbg !5028
  %245 = sext i32 %241 to i64, !dbg !5214
  %246 = getelementptr inbounds i8, i8* %244, i64 %245, !dbg !5214
  %247 = load i8, i8* %246, align 1, !dbg !5214, !tbaa !3150
  br label %248, !dbg !5215

; <label>:248:                                    ; preds = %251, %240
  %249 = phi i8 [ %254, %251 ], [ %247, %240 ], !dbg !5216
  %250 = phi i64 [ %252, %251 ], [ %245, %240 ]
  call void @llvm.dbg.value(metadata i64 %250, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %244, metadata !4968, metadata !DIExpression()), !dbg !5028
  switch i8 %249, label %255 [
    i8 32, label %251
    i8 9, label %251
    i8 0, label %266
  ], !dbg !5216

; <label>:251:                                    ; preds = %248, %248
  %252 = add i64 %250, 1, !dbg !5217
  %253 = getelementptr inbounds i8, i8* %244, i64 %252
  %254 = load i8, i8* %253, align 1, !dbg !5216, !tbaa !3150
  br label %248, !dbg !5215, !llvm.loop !5218

; <label>:255:                                    ; preds = %248
  %256 = trunc i64 %250 to i32, !dbg !5220
  %257 = add nsw i32 %256, 1, !dbg !5220
  %258 = sext i32 %257 to i64, !dbg !5222
  %259 = getelementptr inbounds i8, i8* %244, i64 %258, !dbg !5222
  %260 = load i8, i8* %259, align 1, !dbg !5222, !tbaa !3150
  %261 = icmp eq i8 %260, 61, !dbg !5223
  br i1 %261, label %262, label %268, !dbg !5224

; <label>:262:                                    ; preds = %255
  switch i8 %249, label %265 [
    i8 43, label %268
    i8 94, label %263
    i8 45, label %264
  ], !dbg !5225

; <label>:263:                                    ; preds = %262
  call void @llvm.dbg.value(metadata i32 1, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %257, metadata !4980, metadata !DIExpression()), !dbg !5115
  br label %268, !dbg !5228

; <label>:264:                                    ; preds = %262
  call void @llvm.dbg.value(metadata i32 1, metadata !4989, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i32 %257, metadata !4980, metadata !DIExpression()), !dbg !5115
  br label %268, !dbg !5233

; <label>:265:                                    ; preds = %262
  br label %268, !dbg !5236

; <label>:266:                                    ; preds = %248
  %267 = trunc i64 %250 to i32, !dbg !5236
  br label %268, !dbg !5236

; <label>:268:                                    ; preds = %266, %262, %265, %264, %263, %255
  %269 = phi i32 [ %257, %263 ], [ %257, %264 ], [ %256, %255 ], [ %257, %262 ], [ %256, %265 ], [ %267, %266 ]
  %270 = phi i32 [ 0, %263 ], [ 0, %264 ], [ 0, %255 ], [ 1, %262 ], [ 0, %265 ], [ 0, %266 ]
  %271 = phi i32 [ 1, %263 ], [ 0, %264 ], [ 0, %255 ], [ 0, %262 ], [ 0, %265 ], [ 0, %266 ]
  %272 = phi i32 [ 0, %263 ], [ 1, %264 ], [ 0, %255 ], [ 0, %262 ], [ 0, %265 ], [ 0, %266 ]
  call void @llvm.dbg.value(metadata i32 %272, metadata !4989, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i32 %271, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %270, metadata !4987, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32 %269, metadata !4980, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %244, metadata !4968, metadata !DIExpression()), !dbg !5028
  %273 = sext i32 %269 to i64, !dbg !5236
  %274 = getelementptr inbounds i8, i8* %244, i64 %273, !dbg !5236
  %275 = load i8, i8* %274, align 1, !dbg !5236, !tbaa !3150
  %276 = zext i8 %275 to i32, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %276, metadata !4978, metadata !DIExpression()), !dbg !5238
  %277 = icmp eq i32 %243, -1, !dbg !5239
  %278 = icmp eq i32 %242, 0, !dbg !5241
  %279 = and i1 %278, %277, !dbg !5242
  br i1 %279, label %1311, label %280, !dbg !5242

; <label>:280:                                    ; preds = %268
  %281 = icmp sgt i32 %243, -1, !dbg !5243
  br i1 %281, label %282, label %303, !dbg !5245

; <label>:282:                                    ; preds = %280
  %283 = sext i32 %243 to i64, !dbg !5246
  %284 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %283, i32 3, !dbg !5249
  %285 = load i8*, i8** %284, align 8, !dbg !5249, !tbaa !3461
  %286 = icmp eq i8* %285, null, !dbg !5250
  br i1 %286, label %287, label %298, !dbg !5251

; <label>:287:                                    ; preds = %282
  %288 = call i8* @vim_strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i32 %276) #11, !dbg !5252
  %289 = icmp eq i8* %288, null, !dbg !5255
  br i1 %289, label %290, label %1311, !dbg !5256

; <label>:290:                                    ; preds = %287
  %291 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %283, i32 2, !dbg !5257
  %292 = load i64, i64* %291, align 16, !dbg !5257, !tbaa !3107
  %293 = and i64 %292, 1, !dbg !5258
  %294 = icmp eq i64 %293, 0, !dbg !5258
  %295 = icmp eq i8 %275, 63, !dbg !5259
  %296 = or i1 %295, %294, !dbg !5260
  %297 = select i1 %296, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8* null, !dbg !5260
  br label %1311, !dbg !5260

; <label>:298:                                    ; preds = %282
  %299 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %283, !dbg !5246
  %300 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %283, i32 2, !dbg !5261
  %301 = load i64, i64* %300, align 16, !dbg !5261, !tbaa !3107
  call void @llvm.dbg.value(metadata i64 %301, metadata !4984, metadata !DIExpression()), !dbg !5262
  %302 = call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %299, i32 %1), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %302, metadata !4985, metadata !DIExpression()), !dbg !5034
  br label %312, !dbg !5264

; <label>:303:                                    ; preds = %280
  call void @llvm.dbg.value(metadata i64 4, metadata !4984, metadata !DIExpression()), !dbg !5262
  %304 = icmp slt i32 %242, 0, !dbg !5265
  br i1 %304, label %305, label %310, !dbg !5268

; <label>:305:                                    ; preds = %303
  %306 = sub nsw i32 0, %242, !dbg !5269
  %307 = trunc i32 %306 to i8, !dbg !5269
  store i8 %307, i8* %16, align 1, !dbg !5271, !tbaa !3150
  %308 = lshr i32 %306, 8, !dbg !5272
  %309 = trunc i32 %308 to i8, !dbg !5272
  store i8 %309, i8* %30, align 1, !dbg !5273, !tbaa !3150
  br label %312, !dbg !5274

; <label>:310:                                    ; preds = %303
  store i8 -14, i8* %16, align 1, !dbg !5275, !tbaa !3150
  %311 = trunc i32 %242 to i8, !dbg !5277
  store i8 %311, i8* %30, align 1, !dbg !5278, !tbaa !3150
  br label %312

; <label>:312:                                    ; preds = %305, %310, %298
  %313 = phi i64 [ %301, %298 ], [ 4, %305 ], [ 4, %310 ]
  %314 = phi i8* [ %302, %298 ], [ %43, %305 ], [ %43, %310 ]
  call void @llvm.dbg.value(metadata i8* %314, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i64 %313, metadata !4984, metadata !DIExpression()), !dbg !5262
  br i1 %27, label %322, label %315, !dbg !5279

; <label>:315:                                    ; preds = %312
  %316 = icmp slt i32 %243, 0, !dbg !5281
  br i1 %316, label %1311, label %317, !dbg !5282

; <label>:317:                                    ; preds = %315
  %318 = sext i32 %243 to i64, !dbg !5283
  %319 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %318, i32 3, !dbg !5284
  %320 = load i8*, i8** %319, align 8, !dbg !5284, !tbaa !3461
  %321 = icmp eq i8* %320, inttoptr (i64 -1 to i8*), !dbg !5285
  br i1 %321, label %322, label %1311, !dbg !5286

; <label>:322:                                    ; preds = %317, %312
  %323 = and i1 %29, %281, !dbg !5287
  br i1 %323, label %324, label %329, !dbg !5287

; <label>:324:                                    ; preds = %322
  %325 = sext i32 %243 to i64, !dbg !5289
  %326 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %325, i32 3, !dbg !5290
  %327 = load i8*, i8** %326, align 8, !dbg !5290, !tbaa !3461
  %328 = icmp eq i8* %327, inttoptr (i64 -1 to i8*), !dbg !5291
  br i1 %328, label %1311, label %329, !dbg !5292

; <label>:329:                                    ; preds = %324, %322
  br i1 %22, label %349, label %330, !dbg !5293

; <label>:330:                                    ; preds = %329
  %331 = and i64 %313, 34078720, !dbg !5294
  %332 = icmp eq i64 %331, 0, !dbg !5294
  br i1 %332, label %333, label %1311, !dbg !5298

; <label>:333:                                    ; preds = %330
  %334 = and i64 %313, 536870912, !dbg !5299
  %335 = icmp eq i64 %334, 0, !dbg !5299
  %336 = load i64, i64* @p_mle, align 8, !dbg !5301
  %337 = icmp ne i64 %336, 0, !dbg !5301
  %338 = or i1 %335, %337, !dbg !5302
  br i1 %338, label %339, label %1311, !dbg !5302

; <label>:339:                                    ; preds = %333
  %340 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !5303, !tbaa !3115
  %341 = getelementptr inbounds %struct.window_S, %struct.window_S* %340, i64 0, i32 121, i32 4, !dbg !5305
  %342 = load i32, i32* %341, align 8, !dbg !5305, !tbaa !5306
  %343 = icmp ne i32 %342, 0, !dbg !5303
  %344 = and i1 %281, %343, !dbg !5307
  br i1 %344, label %345, label %349, !dbg !5307

; <label>:345:                                    ; preds = %339
  %346 = sext i32 %243 to i64, !dbg !5308
  %347 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %346, i32 4, !dbg !5309
  %348 = load i32, i32* %347, align 16, !dbg !5309, !tbaa !4220
  switch i32 %348, label %349 [
    i32 8208, label %1311
    i32 8234, label %1311
  ], !dbg !5310

; <label>:349:                                    ; preds = %345, %329, %339
  %350 = load i32, i32* @sandbox, align 4, !dbg !5311, !tbaa !3060
  %351 = icmp eq i32 %350, 0, !dbg !5313
  %352 = and i64 %313, 524288, !dbg !5314
  %353 = icmp eq i64 %352, 0, !dbg !5314
  %354 = or i1 %353, %351, !dbg !5315
  br i1 %354, label %355, label %1311, !dbg !5315

; <label>:355:                                    ; preds = %349
  %356 = call i8* @vim_strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i32 %276) #11, !dbg !5316
  %357 = icmp eq i8* %356, null, !dbg !5318
  br i1 %357, label %385, label %358, !dbg !5319

; <label>:358:                                    ; preds = %355
  %359 = load i8*, i8** %7, align 8, !dbg !5320, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %359, metadata !4968, metadata !DIExpression()), !dbg !5028
  %360 = getelementptr inbounds i8, i8* %359, i64 %273, !dbg !5320
  call void @llvm.dbg.value(metadata i8* %360, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %360, i8** %7, align 8, !dbg !5320, !tbaa !3115
  %361 = load i32, i32* @p_cp, align 4, !dbg !5322, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %361, metadata !4990, metadata !DIExpression()), !dbg !5036
  %362 = icmp eq i8 %275, 38, !dbg !5323
  br i1 %362, label %363, label %377, !dbg !5325

; <label>:363:                                    ; preds = %358
  %364 = getelementptr inbounds i8, i8* %360, i64 1, !dbg !5326
  %365 = load i8, i8* %364, align 1, !dbg !5326, !tbaa !3150
  %366 = icmp eq i8 %365, 118, !dbg !5327
  br i1 %366, label %367, label %377, !dbg !5328

; <label>:367:                                    ; preds = %363
  %368 = getelementptr inbounds i8, i8* %360, i64 2, !dbg !5329
  %369 = load i8, i8* %368, align 1, !dbg !5329, !tbaa !3150
  %370 = icmp eq i8 %369, 105, !dbg !5330
  br i1 %370, label %371, label %377, !dbg !5331

; <label>:371:                                    ; preds = %367
  %372 = getelementptr inbounds i8, i8* %360, i64 3, !dbg !5332
  %373 = load i8, i8* %372, align 1, !dbg !5332, !tbaa !3150
  %374 = icmp eq i8 %373, 109, !dbg !5335
  br i1 %374, label %375, label %376, !dbg !5336

; <label>:375:                                    ; preds = %371
  call void @llvm.dbg.value(metadata i32 0, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %372, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %372, i8** %7, align 8, !dbg !5337, !tbaa !3115
  br label %377, !dbg !5339

; <label>:376:                                    ; preds = %371
  call void @llvm.dbg.value(metadata i32 1, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %368, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %368, i8** %7, align 8, !dbg !5340, !tbaa !3115
  br label %377

; <label>:377:                                    ; preds = %375, %376, %367, %363, %358
  %378 = phi i32 [ 0, %375 ], [ 1, %376 ], [ %361, %367 ], [ %361, %363 ], [ %361, %358 ]
  call void @llvm.dbg.value(metadata i32 %378, metadata !4990, metadata !DIExpression()), !dbg !5036
  %379 = call i8* @vim_strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0), i32 %276) #11, !dbg !5342
  %380 = icmp eq i8* %379, null, !dbg !5344
  br i1 %380, label %385, label %381, !dbg !5345

; <label>:381:                                    ; preds = %377
  %382 = load i8*, i8** %7, align 8, !dbg !5346, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %382, metadata !4968, metadata !DIExpression()), !dbg !5028
  %383 = getelementptr inbounds i8, i8* %382, i64 1, !dbg !5346
  %384 = load i8, i8* %383, align 1, !dbg !5346, !tbaa !3150
  switch i8 %384, label %1311 [
    i8 0, label %385
    i8 32, label %385
    i8 9, label %385
  ], !dbg !5347

; <label>:385:                                    ; preds = %381, %381, %381, %377, %355
  %386 = phi i32 [ %378, %381 ], [ %378, %377 ], [ %41, %355 ], [ %378, %381 ], [ %378, %381 ]
  call void @llvm.dbg.value(metadata i32 %386, metadata !4990, metadata !DIExpression()), !dbg !5036
  %387 = icmp eq i8 %275, 63, !dbg !5348
  br i1 %387, label %398, label %388, !dbg !5349

; <label>:388:                                    ; preds = %385
  %389 = icmp eq i32 %85, 1, !dbg !5350
  br i1 %389, label %392, label %390, !dbg !5351

; <label>:390:                                    ; preds = %388
  %391 = and i64 %313, 1, !dbg !5352
  br label %446, !dbg !5351

; <label>:392:                                    ; preds = %388
  %393 = call i8* @vim_strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i32 %276) #11, !dbg !5353
  %394 = icmp eq i8* %393, null, !dbg !5354
  %395 = and i64 %313, 1, !dbg !5355
  %396 = icmp eq i64 %395, 0, !dbg !5355
  %397 = and i1 %396, %394, !dbg !5356
  br i1 %397, label %398, label %446, !dbg !5356

; <label>:398:                                    ; preds = %392, %385
  %399 = icmp eq i32 %42, 0, !dbg !5357
  br i1 %399, label %401, label %400, !dbg !5359

; <label>:400:                                    ; preds = %398
  call void @msg_putchar(i32 10) #11, !dbg !5360
  br label %402, !dbg !5360

; <label>:401:                                    ; preds = %398
  call void @gotocmdline(i32 1) #11, !dbg !5361
  call void @llvm.dbg.value(metadata i32 1, metadata !4986, metadata !DIExpression()), !dbg !5035
  br label %402

; <label>:402:                                    ; preds = %401, %400
  %403 = phi i32 [ %42, %400 ], [ 1, %401 ]
  call void @llvm.dbg.value(metadata i32 %403, metadata !4986, metadata !DIExpression()), !dbg !5035
  br i1 %281, label %404, label %433, !dbg !5363

; <label>:404:                                    ; preds = %402
  %405 = sext i32 %243 to i64, !dbg !5364
  %406 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %405, !dbg !5364
  call fastcc void @showoneopt(%struct.vimoption* nonnull %406, i32 %1), !dbg !5366
  %407 = load i64, i64* @p_verbose, align 8, !dbg !5367, !tbaa !4248
  %408 = icmp sgt i64 %407, 0, !dbg !5369
  br i1 %408, label %409, label %438, !dbg !5370

; <label>:409:                                    ; preds = %404
  %410 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %405, i32 3, !dbg !5371
  %411 = load i8*, i8** %410, align 8, !dbg !5371, !tbaa !3461
  %412 = icmp eq i8* %314, %411, !dbg !5374
  br i1 %412, label %413, label %415, !dbg !5375

; <label>:413:                                    ; preds = %409
  %414 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %405, i32 6, !dbg !5376
  call void @last_set_msg(%struct.sctx_T* byval nonnull align 8 %414) #11, !dbg !5377
  br label %438, !dbg !5377

; <label>:415:                                    ; preds = %409
  %416 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %405, i32 4, !dbg !5378
  %417 = load i32, i32* %416, align 16, !dbg !5378, !tbaa !4220
  %418 = and i32 %417, 8192, !dbg !5380
  %419 = icmp eq i32 %418, 0, !dbg !5380
  br i1 %419, label %425, label %420, !dbg !5381

; <label>:420:                                    ; preds = %415
  %421 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !5382, !tbaa !3115
  %422 = and i32 %417, 4095, !dbg !5383
  %423 = zext i32 %422 to i64, !dbg !5382
  %424 = getelementptr inbounds %struct.window_S, %struct.window_S* %421, i64 0, i32 121, i32 50, i64 %423, !dbg !5382
  call void @last_set_msg(%struct.sctx_T* byval nonnull align 8 %424) #11, !dbg !5384
  br label %438, !dbg !5384

; <label>:425:                                    ; preds = %415
  %426 = and i32 %417, 16384, !dbg !5385
  %427 = icmp eq i32 %426, 0, !dbg !5385
  br i1 %427, label %438, label %428, !dbg !5387

; <label>:428:                                    ; preds = %425
  %429 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !5388, !tbaa !3115
  %430 = and i32 %417, 4095, !dbg !5389
  %431 = zext i32 %430 to i64, !dbg !5388
  %432 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %429, i64 0, i32 66, i64 %431, !dbg !5388
  call void @last_set_msg(%struct.sctx_T* byval nonnull align 8 %432) #11, !dbg !5390
  br label %438, !dbg !5390

; <label>:433:                                    ; preds = %402
  %434 = call i8* @find_termcode(i8* nonnull %16) #11, !dbg !5391
  call void @llvm.dbg.value(metadata i8* %434, metadata !4992, metadata !DIExpression()), !dbg !5392
  %435 = icmp eq i8* %434, null, !dbg !5393
  br i1 %435, label %1311, label %436, !dbg !5395

; <label>:436:                                    ; preds = %433
  %437 = call i32 @show_one_termcode(i8* nonnull %16, i8* nonnull %434, i32 1) #11, !dbg !5396
  br label %438

; <label>:438:                                    ; preds = %436, %425, %404, %420, %428, %413
  call void @llvm.dbg.value(metadata i8* null, metadata !4971, metadata !DIExpression()), !dbg !5047
  %439 = icmp eq i8 %275, 0, !dbg !5397
  %440 = or i1 %439, %387, !dbg !5399
  %441 = icmp eq i8 %247, 32, !dbg !5400
  %442 = or i1 %441, %440, !dbg !5399
  %443 = icmp eq i8 %247, 9, !dbg !5400
  %444 = or i1 %443, %442, !dbg !5399
  %445 = select i1 %444, i8* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_trailing, i64 0, i64 0), !dbg !5399
  br label %1311, !dbg !5399

; <label>:446:                                    ; preds = %390, %392
  %447 = phi i64 [ %391, %390 ], [ %395, %392 ], !dbg !5352
  %448 = icmp eq i32 %271, 0, !dbg !5401
  %449 = icmp eq i32 %270, 0, !dbg !5402
  %450 = or i32 %271, %270, !dbg !5403
  %451 = icmp ne i32 %450, 0, !dbg !5403
  %452 = icmp eq i32 %272, 0, !dbg !5404
  %453 = xor i1 %451, true, !dbg !5403
  %454 = and i1 %452, %453, !dbg !5403
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #11, !dbg !5405
  call void @llvm.dbg.value(metadata i32 0, metadata !5003, metadata !DIExpression()), !dbg !5406
  store i32 0, i32* %12, align 4, !dbg !5406, !tbaa !3060
  %455 = icmp eq i64 %447, 0, !dbg !5352
  br i1 %455, label %515, label %456, !dbg !5407

; <label>:456:                                    ; preds = %446
  switch i8 %275, label %501 [
    i8 61, label %1306
    i8 58, label %1306
    i8 33, label %457
    i8 38, label %462
    i8 60, label %474
    i8 0, label %502
  ], !dbg !5408

; <label>:457:                                    ; preds = %456
  %458 = bitcast i8* %314 to i32*, !dbg !5411
  %459 = load i32, i32* %458, align 4, !dbg !5411, !tbaa !3060
  %460 = xor i32 %459, 1, !dbg !5413
  %461 = sext i32 %460 to i64, !dbg !5411
  call void @llvm.dbg.value(metadata i64 %461, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %461, i64* %10, align 8, !dbg !5415, !tbaa !5416
  br label %511, !dbg !5417

; <label>:462:                                    ; preds = %456
  %463 = sext i32 %243 to i64, !dbg !5418
  %464 = and i64 %313, 1024, !dbg !5420
  %465 = icmp eq i64 %464, 0, !dbg !5420
  %466 = icmp eq i32 %386, 0, !dbg !5421
  %467 = and i1 %465, %466, !dbg !5422
  %468 = zext i1 %467 to i64, !dbg !5418
  %469 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %463, i32 5, i64 %468, !dbg !5418
  %470 = bitcast i8** %469 to i64*, !dbg !5418
  %471 = load i64, i64* %470, align 8, !dbg !5418, !tbaa !3115
  %472 = shl i64 %471, 32, !dbg !5423
  %473 = ashr exact i64 %472, 32, !dbg !5423
  call void @llvm.dbg.value(metadata i64 %473, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %473, i64* %10, align 8, !dbg !5424, !tbaa !5416
  br label %511, !dbg !5425

; <label>:474:                                    ; preds = %456
  %475 = bitcast i8* %314 to i32*, !dbg !5426
  %476 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !5430, !tbaa !3115
  %477 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %476, i64 0, i32 150, !dbg !5431
  %478 = icmp eq i32* %477, %475, !dbg !5432
  %479 = and i1 %34, %478, !dbg !5433
  br i1 %479, label %480, label %481, !dbg !5433

; <label>:480:                                    ; preds = %474
  call void @llvm.dbg.value(metadata i64 -1, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 -1, i64* %10, align 8, !dbg !5434, !tbaa !5416
  br label %511, !dbg !5435

; <label>:481:                                    ; preds = %474
  %482 = sext i32 %243 to i64, !dbg !5436
  %483 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %482, !dbg !5436
  call void @llvm.dbg.value(metadata %struct.vimoption* %483, metadata !4275, metadata !DIExpression()) #11, !dbg !5437
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !5439
  %484 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %482, i32 4, !dbg !5440
  %485 = load i32, i32* %484, align 16, !dbg !5440, !tbaa !4220
  %486 = icmp eq i32 %485, 0, !dbg !5441
  br i1 %486, label %494, label %487, !dbg !5442

; <label>:487:                                    ; preds = %481
  %488 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %482, i32 3, !dbg !5443
  %489 = load i8*, i8** %488, align 8, !dbg !5443, !tbaa !3461
  %490 = icmp eq i8* %489, inttoptr (i64 -1 to i8*), !dbg !5444
  br i1 %490, label %491, label %496, !dbg !5445

; <label>:491:                                    ; preds = %487
  %492 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %483) #11, !dbg !5446
  %493 = getelementptr inbounds i8, i8* %492, i64 1376, !dbg !5446
  br label %496, !dbg !5447

; <label>:494:                                    ; preds = %481
  %495 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %483) #11, !dbg !5448
  br label %496, !dbg !5449

; <label>:496:                                    ; preds = %487, %491, %494
  %497 = phi i8* [ %493, %491 ], [ %495, %494 ], [ %489, %487 ]
  %498 = bitcast i8* %497 to i32*, !dbg !5450
  %499 = load i32, i32* %498, align 4, !dbg !5450, !tbaa !3060
  %500 = sext i32 %499 to i64, !dbg !5450
  call void @llvm.dbg.value(metadata i64 %500, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %500, i64* %10, align 8, !dbg !5451, !tbaa !5416
  br label %511

; <label>:501:                                    ; preds = %456
  switch i8 %247, label %1306 [
    i8 32, label %502
    i8 9, label %502
  ], !dbg !5452

; <label>:502:                                    ; preds = %456, %501, %501
  %503 = icmp eq i32 %85, 2, !dbg !5455
  br i1 %503, label %504, label %509, !dbg !5457

; <label>:504:                                    ; preds = %502
  %505 = bitcast i8* %314 to i32*, !dbg !5458
  %506 = load i32, i32* %505, align 4, !dbg !5458, !tbaa !3060
  %507 = xor i32 %506, 1, !dbg !5459
  %508 = sext i32 %507 to i64, !dbg !5458
  call void @llvm.dbg.value(metadata i64 %508, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %508, i64* %10, align 8, !dbg !5460, !tbaa !5416
  br label %511, !dbg !5461

; <label>:509:                                    ; preds = %502
  %510 = zext i32 %85 to i64, !dbg !5462
  call void @llvm.dbg.value(metadata i64 %510, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %510, i64* %10, align 8, !dbg !5463, !tbaa !5416
  br label %511

; <label>:511:                                    ; preds = %462, %504, %509, %480, %496, %457
  %512 = phi i64 [ %473, %462 ], [ %508, %504 ], [ %510, %509 ], [ -1, %480 ], [ %500, %496 ], [ %461, %457 ], !dbg !5464
  call void @llvm.dbg.value(metadata i64 %512, metadata !4982, metadata !DIExpression()), !dbg !5414
  %513 = trunc i64 %512 to i32, !dbg !5465
  %514 = call fastcc i8* @set_bool_option(i32 %243, i8* %314, i32 %513, i32 %1), !dbg !5466
  call void @llvm.dbg.value(metadata i8* %514, metadata !4971, metadata !DIExpression()), !dbg !5047
  br label %1257, !dbg !5467

; <label>:515:                                    ; preds = %446
  %516 = call i8* @vim_strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i32 %276) #11, !dbg !5468
  %517 = icmp eq i8* %516, null, !dbg !5470
  %518 = icmp ne i32 %85, 1, !dbg !5471
  %519 = or i1 %518, %517, !dbg !5472
  br i1 %519, label %1306, label %520, !dbg !5472

; <label>:520:                                    ; preds = %515
  %521 = and i64 %313, 2, !dbg !5473
  %522 = icmp eq i64 %521, 0, !dbg !5473
  br i1 %522, label %661, label %523, !dbg !5474

; <label>:523:                                    ; preds = %520
  %524 = load i8*, i8** %7, align 8, !dbg !5475, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %524, metadata !4968, metadata !DIExpression()), !dbg !5028
  %525 = getelementptr inbounds i8, i8* %524, i64 1, !dbg !5475
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %525, i8** %7, align 8, !dbg !5475, !tbaa !3115
  switch i8 %275, label %562 [
    i8 38, label %526
    i8 60, label %536
  ], !dbg !5477

; <label>:526:                                    ; preds = %523
  %527 = sext i32 %243 to i64, !dbg !5478
  %528 = and i64 %313, 1024, !dbg !5480
  %529 = icmp eq i64 %528, 0, !dbg !5480
  %530 = icmp eq i32 %386, 0, !dbg !5481
  %531 = and i1 %529, %530, !dbg !5482
  %532 = zext i1 %531 to i64, !dbg !5478
  %533 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %527, i32 5, i64 %532, !dbg !5478
  %534 = bitcast i8** %533 to i64*, !dbg !5478
  %535 = load i64, i64* %534, align 8, !dbg !5478, !tbaa !3115
  call void @llvm.dbg.value(metadata i64 %535, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %535, i64* %10, align 8, !dbg !5483, !tbaa !5416
  br label %638, !dbg !5484

; <label>:536:                                    ; preds = %523
  %537 = bitcast i8* %314 to i64*
  %538 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !5485, !tbaa !3115
  %539 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %538, i64 0, i32 156, !dbg !5489
  %540 = icmp eq i64* %539, %537, !dbg !5490
  %541 = and i1 %34, %540, !dbg !5491
  br i1 %541, label %542, label %543, !dbg !5491

; <label>:542:                                    ; preds = %536
  call void @llvm.dbg.value(metadata i64 -123456, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 -123456, i64* %10, align 8, !dbg !5492, !tbaa !5416
  br label %638, !dbg !5493

; <label>:543:                                    ; preds = %536
  %544 = sext i32 %243 to i64, !dbg !5494
  %545 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %544, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.vimoption* %545, metadata !4275, metadata !DIExpression()) #11, !dbg !5495
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !5497
  %546 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %544, i32 4, !dbg !5498
  %547 = load i32, i32* %546, align 16, !dbg !5498, !tbaa !4220
  %548 = icmp eq i32 %547, 0, !dbg !5499
  br i1 %548, label %556, label %549, !dbg !5500

; <label>:549:                                    ; preds = %543
  %550 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %544, i32 3, !dbg !5501
  %551 = load i8*, i8** %550, align 8, !dbg !5501, !tbaa !3461
  %552 = icmp eq i8* %551, inttoptr (i64 -1 to i8*), !dbg !5502
  br i1 %552, label %553, label %558, !dbg !5503

; <label>:553:                                    ; preds = %549
  %554 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %545) #11, !dbg !5504
  %555 = getelementptr inbounds i8, i8* %554, i64 1376, !dbg !5504
  br label %558, !dbg !5505

; <label>:556:                                    ; preds = %543
  %557 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %545) #11, !dbg !5506
  br label %558, !dbg !5507

; <label>:558:                                    ; preds = %549, %553, %556
  %559 = phi i8* [ %555, %553 ], [ %557, %556 ], [ %551, %549 ]
  %560 = bitcast i8* %559 to i64*, !dbg !5508
  %561 = load i64, i64* %560, align 8, !dbg !5508, !tbaa !4248
  call void @llvm.dbg.value(metadata i64 %561, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %561, i64* %10, align 8, !dbg !5509, !tbaa !5416
  br label %638

; <label>:562:                                    ; preds = %523
  %563 = icmp eq i8* %314, bitcast (i64* @p_wc to i8*), !dbg !5510
  %564 = icmp eq i8* %314, bitcast (i64* @p_wcm to i8*), !dbg !5512
  %565 = or i1 %563, %564, !dbg !5513
  %566 = load i8, i8* %525, align 1, !tbaa !3150
  br i1 %565, label %567, label %624, !dbg !5513

; <label>:567:                                    ; preds = %562
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  switch i8 %566, label %579 [
    i8 0, label %1306
    i8 60, label %568
    i8 94, label %570
  ], !dbg !5514

; <label>:568:                                    ; preds = %567
  %569 = getelementptr inbounds i8, i8* %524, i64 2, !dbg !5515
  br label %588, !dbg !5514

; <label>:570:                                    ; preds = %567
  %571 = getelementptr inbounds i8, i8* %524, i64 2
  %572 = load i8, i8* %571, align 1, !dbg !5523, !tbaa !3150
  %573 = zext i8 %572 to i32, !dbg !5523
  %574 = add i8 %572, -97, !dbg !5523
  %575 = icmp ugt i8 %574, 25, !dbg !5523
  %576 = add nsw i32 %573, -32, !dbg !5523
  %577 = select i1 %575, i32 %573, i32 %576, !dbg !5523
  %578 = xor i32 %577, 64, !dbg !5523
  br label %619, !dbg !5525

; <label>:579:                                    ; preds = %567
  %580 = getelementptr inbounds i8, i8* %524, i64 2, !dbg !5526
  %581 = load i8, i8* %580, align 1, !dbg !5526, !tbaa !3150
  switch i8 %581, label %624 [
    i8 0, label %582
    i8 32, label %582
    i8 9, label %582
  ], !dbg !5527

; <label>:582:                                    ; preds = %579, %579, %579
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  %583 = zext i8 %566 to i32, !dbg !5528
  %584 = add nsw i32 %583, -48, !dbg !5528
  %585 = icmp ult i32 %584, 10, !dbg !5528
  br i1 %585, label %624, label %586, !dbg !5529

; <label>:586:                                    ; preds = %582
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %525, metadata !5519, metadata !DIExpression()) #11, !dbg !5530
  call void @llvm.dbg.value(metadata i32 0, metadata !5520, metadata !DIExpression()) #11, !dbg !5531
  %587 = icmp eq i8 %566, 60, !dbg !5532
  br i1 %587, label %588, label %617, !dbg !5532

; <label>:588:                                    ; preds = %586, %568
  %589 = phi i8* [ %569, %568 ], [ %580, %586 ], !dbg !5515
  call void @llvm.dbg.value(metadata i8* %589, metadata !3910, metadata !DIExpression()) #11, !dbg !5533
  call void @llvm.dbg.value(metadata i32 1, metadata !3915, metadata !DIExpression()) #11, !dbg !5535
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !5536
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #11, !dbg !5537
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11, !dbg !5538
  call void @llvm.dbg.value(metadata i8* %589, metadata !3918, metadata !DIExpression()) #11, !dbg !5539
  store i8* %589, i8** %4, align 8, !dbg !5539, !tbaa !3115
  %590 = load i8, i8* %589, align 1, !dbg !5540, !tbaa !3150
  %591 = icmp eq i8 %590, 116, !dbg !5541
  br i1 %591, label %592, label %610, !dbg !5542

; <label>:592:                                    ; preds = %588
  %593 = getelementptr inbounds i8, i8* %524, i64 3, !dbg !5543
  %594 = load i8, i8* %593, align 1, !dbg !5543, !tbaa !3150
  %595 = icmp eq i8 %594, 95, !dbg !5544
  br i1 %595, label %596, label %610, !dbg !5545

; <label>:596:                                    ; preds = %592
  %597 = getelementptr inbounds i8, i8* %524, i64 4, !dbg !5546
  %598 = load i8, i8* %597, align 1, !dbg !5546, !tbaa !3150
  %599 = zext i8 %598 to i32, !dbg !5546
  %600 = icmp eq i8 %598, 0, !dbg !5546
  br i1 %600, label %610, label %601, !dbg !5547

; <label>:601:                                    ; preds = %596
  %602 = getelementptr inbounds i8, i8* %524, i64 5, !dbg !5548
  %603 = load i8, i8* %602, align 1, !dbg !5548, !tbaa !3150
  %604 = icmp eq i8 %603, 0, !dbg !5548
  br i1 %604, label %610, label %605, !dbg !5549

; <label>:605:                                    ; preds = %601
  %606 = zext i8 %603 to i32, !dbg !5548
  %607 = shl nuw nsw i32 %606, 8, !dbg !5550
  %608 = or i32 %607, %599, !dbg !5550
  %609 = sub nsw i32 0, %608, !dbg !5550
  call void @llvm.dbg.value(metadata i32 %609, metadata !3916, metadata !DIExpression()) #11, !dbg !5536
  br label %615, !dbg !5551

; <label>:610:                                    ; preds = %601, %596, %592, %588
  call void @llvm.dbg.value(metadata i8* %589, metadata !3918, metadata !DIExpression()) #11, !dbg !5539
  call void @llvm.dbg.value(metadata i8* %525, metadata !3918, metadata !DIExpression()) #11, !dbg !5539
  store i8* %525, i8** %4, align 8, !dbg !5552, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 0, metadata !3917, metadata !DIExpression()) #11, !dbg !5553
  store i32 0, i32* %3, align 4, !dbg !5554, !tbaa !3060
  call void @llvm.dbg.value(metadata i32* %3, metadata !3917, metadata !DIExpression()) #11, !dbg !5553
  call void @llvm.dbg.value(metadata i8** %4, metadata !3918, metadata !DIExpression()) #11, !dbg !5539
  %611 = call i32 @find_special_key(i8** nonnull %4, i32* nonnull %3, i32 11, i32* null) #11, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %611, metadata !3916, metadata !DIExpression()) #11, !dbg !5536
  %612 = load i32, i32* %3, align 4, !dbg !5556, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %612, metadata !3917, metadata !DIExpression()) #11, !dbg !5553
  %613 = icmp eq i32 %612, 0, !dbg !5556
  %614 = select i1 %613, i32 %611, i32 0, !dbg !5557
  call void @llvm.dbg.value(metadata i32 %614, metadata !3916, metadata !DIExpression()) #11, !dbg !5536
  br label %615, !dbg !5558

; <label>:615:                                    ; preds = %610, %605
  %616 = phi i32 [ %609, %605 ], [ %614, %610 ]
  call void @llvm.dbg.value(metadata i32 %616, metadata !3916, metadata !DIExpression()) #11, !dbg !5536
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11, !dbg !5559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #11, !dbg !5559
  br label %619, !dbg !5560

; <label>:617:                                    ; preds = %586
  %618 = zext i8 %566 to i64, !dbg !5561
  call void @llvm.dbg.value(metadata i64 %621, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %618, i64* %10, align 8, !dbg !5562, !tbaa !5416
  br label %638, !dbg !5563

; <label>:619:                                    ; preds = %615, %570
  %620 = phi i32 [ %616, %615 ], [ %578, %570 ]
  %621 = sext i32 %620 to i64, !dbg !5561
  call void @llvm.dbg.value(metadata i64 %621, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %621, i64* %10, align 8, !dbg !5562, !tbaa !5416
  %622 = icmp ne i32 %620, 0, !dbg !5565
  %623 = or i1 %564, %622, !dbg !5563
  br i1 %623, label %638, label %1306, !dbg !5563

; <label>:624:                                    ; preds = %562, %582, %579
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  %625 = icmp eq i8 %566, 45, !dbg !5566
  br i1 %625, label %630, label %626, !dbg !5568

; <label>:626:                                    ; preds = %624
  %627 = zext i8 %566 to i32, !dbg !5569
  %628 = add nsw i32 %627, -48, !dbg !5570
  %629 = icmp ult i32 %628, 10, !dbg !5570
  br i1 %629, label %630, label %1306, !dbg !5571

; <label>:630:                                    ; preds = %626, %624
  call void @llvm.dbg.value(metadata i8* %525, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i32* %9, metadata !4981, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata i64* %10, metadata !4982, metadata !DIExpression()), !dbg !5414
  call void @vim_str2nr(i8* nonnull %525, i32* null, i32* nonnull %9, i32 15, i64* nonnull %10, i64* null, i32 0, i32 1) #11, !dbg !5573
  %631 = load i32, i32* %9, align 4, !dbg !5575, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %631, metadata !4981, metadata !DIExpression()), !dbg !5572
  %632 = icmp eq i32 %631, 0, !dbg !5577
  br i1 %632, label %1306, label %633, !dbg !5578

; <label>:633:                                    ; preds = %630
  %634 = load i8*, i8** %7, align 8, !dbg !5579, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %634, metadata !4968, metadata !DIExpression()), !dbg !5028
  %635 = sext i32 %631 to i64, !dbg !5579
  %636 = getelementptr inbounds i8, i8* %634, i64 %635, !dbg !5579
  %637 = load i8, i8* %636, align 1, !dbg !5579, !tbaa !3150
  switch i8 %637, label %1306 [
    i8 0, label %638
    i8 32, label %638
    i8 9, label %638
  ], !dbg !5580

; <label>:638:                                    ; preds = %617, %633, %633, %633, %619, %558, %542, %526
  br i1 %449, label %644, label %639, !dbg !5581

; <label>:639:                                    ; preds = %638
  %640 = bitcast i8* %314 to i64*, !dbg !5582
  %641 = load i64, i64* %640, align 8, !dbg !5582, !tbaa !4248
  %642 = load i64, i64* %10, align 8, !dbg !5584, !tbaa !5416
  call void @llvm.dbg.value(metadata i64 %642, metadata !4982, metadata !DIExpression()), !dbg !5414
  %643 = add nsw i64 %642, %641, !dbg !5585
  call void @llvm.dbg.value(metadata i64 %643, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %643, i64* %10, align 8, !dbg !5586, !tbaa !5416
  br label %644, !dbg !5587

; <label>:644:                                    ; preds = %638, %639
  br i1 %448, label %650, label %645, !dbg !5588

; <label>:645:                                    ; preds = %644
  %646 = bitcast i8* %314 to i64*, !dbg !5589
  %647 = load i64, i64* %646, align 8, !dbg !5589, !tbaa !4248
  %648 = load i64, i64* %10, align 8, !dbg !5591, !tbaa !5416
  call void @llvm.dbg.value(metadata i64 %648, metadata !4982, metadata !DIExpression()), !dbg !5414
  %649 = mul nsw i64 %648, %647, !dbg !5592
  call void @llvm.dbg.value(metadata i64 %649, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %649, i64* %10, align 8, !dbg !5593, !tbaa !5416
  br label %650, !dbg !5594

; <label>:650:                                    ; preds = %644, %645
  br i1 %452, label %651, label %653, !dbg !5595

; <label>:651:                                    ; preds = %650
  %652 = load i64, i64* %10, align 8, !dbg !5596, !tbaa !5416
  br label %658, !dbg !5595

; <label>:653:                                    ; preds = %650
  %654 = bitcast i8* %314 to i64*, !dbg !5597
  %655 = load i64, i64* %654, align 8, !dbg !5597, !tbaa !4248
  %656 = load i64, i64* %10, align 8, !dbg !5599, !tbaa !5416
  call void @llvm.dbg.value(metadata i64 %656, metadata !4982, metadata !DIExpression()), !dbg !5414
  %657 = sub nsw i64 %655, %656, !dbg !5600
  call void @llvm.dbg.value(metadata i64 %657, metadata !4982, metadata !DIExpression()), !dbg !5414
  store i64 %657, i64* %10, align 8, !dbg !5601, !tbaa !5416
  br label %658, !dbg !5602

; <label>:658:                                    ; preds = %651, %653
  %659 = phi i64 [ %652, %651 ], [ %657, %653 ], !dbg !5596
  call void @llvm.dbg.value(metadata i64 %659, metadata !4982, metadata !DIExpression()), !dbg !5414
  %660 = call fastcc i8* @set_num_option(i32 %243, i8* %314, i64 %659, i8* nonnull %13, i64 80, i32 %1), !dbg !5603
  call void @llvm.dbg.value(metadata i8* %660, metadata !4971, metadata !DIExpression()), !dbg !5047
  br label %1257, !dbg !5604

; <label>:661:                                    ; preds = %520
  br i1 %281, label %662, label %1229, !dbg !5605

; <label>:662:                                    ; preds = %661
  call void @llvm.dbg.value(metadata i8* null, metadata !5004, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.value(metadata i8* null, metadata !5010, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i8* null, metadata !5011, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* null, metadata !5013, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i8* null, metadata !5014, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8* null, metadata !5015, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8* null, metadata !5016, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i8* null, metadata !5017, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i8* null, metadata !5018, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.value(metadata i8* null, metadata !5019, metadata !DIExpression()), !dbg !5615
  br i1 %36, label %663, label %672, !dbg !5616

; <label>:663:                                    ; preds = %662
  %664 = sext i32 %243 to i64, !dbg !5618
  %665 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %664, i32 4, !dbg !5619
  %666 = load i32, i32* %665, align 16, !dbg !5619, !tbaa !4220
  %667 = and i32 %666, 4096, !dbg !5620
  %668 = icmp eq i32 %667, 0, !dbg !5620
  br i1 %668, label %680, label %669, !dbg !5621

; <label>:669:                                    ; preds = %663
  %670 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %664, i32 3, !dbg !5622
  %671 = load i8*, i8** %670, align 8, !dbg !5622, !tbaa !3461
  call void @llvm.dbg.value(metadata i8* %671, metadata !4985, metadata !DIExpression()), !dbg !5034
  br label %680, !dbg !5623

; <label>:672:                                    ; preds = %662
  call void @llvm.dbg.value(metadata i8* %314, metadata !4985, metadata !DIExpression()), !dbg !5034
  %673 = bitcast i8* %314 to i8**, !dbg !5624
  %674 = load i8*, i8** %673, align 8, !dbg !5624, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %674, metadata !5011, metadata !DIExpression()), !dbg !5608
  %675 = sext i32 %243 to i64, !dbg !5625
  %676 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %675, i32 4
  %677 = load i32, i32* %676, align 16, !dbg !5627, !tbaa !4220
  %678 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %675, !dbg !5625
  %679 = and i32 %677, 4096, !dbg !5628
  br label %710

; <label>:680:                                    ; preds = %663, %669
  %681 = phi i8* [ %314, %663 ], [ %671, %669 ]
  call void @llvm.dbg.value(metadata i8* %314, metadata !4985, metadata !DIExpression()), !dbg !5034
  %682 = bitcast i8* %681 to i8**, !dbg !5624
  %683 = load i8*, i8** %682, align 8, !dbg !5624, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %674, metadata !5011, metadata !DIExpression()), !dbg !5608
  %684 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %664, !dbg !5629
  %685 = call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %684, i32 4), !dbg !5632
  %686 = bitcast i8* %685 to i8**, !dbg !5633
  %687 = load i8*, i8** %686, align 8, !dbg !5633, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %687, metadata !5014, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata %struct.vimoption* %684, metadata !4275, metadata !DIExpression()) #11, !dbg !5634
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !5636
  %688 = load i32, i32* %665, align 16, !dbg !5637, !tbaa !4220
  %689 = icmp eq i32 %688, 0, !dbg !5638
  br i1 %689, label %697, label %690, !dbg !5639

; <label>:690:                                    ; preds = %680
  %691 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %664, i32 3, !dbg !5640
  %692 = load i8*, i8** %691, align 8, !dbg !5640, !tbaa !3461
  %693 = icmp eq i8* %692, inttoptr (i64 -1 to i8*), !dbg !5641
  br i1 %693, label %694, label %699, !dbg !5642

; <label>:694:                                    ; preds = %690
  %695 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %684) #11, !dbg !5643
  %696 = getelementptr inbounds i8, i8* %695, i64 1376, !dbg !5643
  br label %699, !dbg !5644

; <label>:697:                                    ; preds = %680
  %698 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %684) #11, !dbg !5645
  br label %699, !dbg !5646

; <label>:699:                                    ; preds = %690, %694, %697
  %700 = phi i8* [ %696, %694 ], [ %698, %697 ], [ %692, %690 ]
  %701 = bitcast i8* %700 to i8**, !dbg !5647
  %702 = load i8*, i8** %701, align 8, !dbg !5647, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %702, metadata !5015, metadata !DIExpression()), !dbg !5611
  %703 = load i32, i32* %665, align 16, !dbg !5648, !tbaa !4220
  %704 = and i32 %703, 4096, !dbg !5650
  %705 = icmp ne i32 %704, 0, !dbg !5650
  %706 = load i8*, i8** @empty_option, align 8, !dbg !5651
  %707 = icmp eq i8* %687, %706, !dbg !5652
  %708 = and i1 %705, %707, !dbg !5653
  %709 = select i1 %708, i8* %702, i8* %687, !dbg !5653
  br label %710, !dbg !5653

; <label>:710:                                    ; preds = %672, %699
  %711 = phi i32 [ %679, %672 ], [ %704, %699 ], !dbg !5628
  %712 = phi i32* [ %676, %672 ], [ %665, %699 ], !dbg !5627
  %713 = phi %struct.vimoption* [ %678, %672 ], [ %684, %699 ], !dbg !5625
  %714 = phi i64 [ %675, %672 ], [ %664, %699 ], !dbg !5625
  %715 = phi i8* [ %674, %672 ], [ %683, %699 ]
  %716 = phi i8** [ %673, %672 ], [ %682, %699 ]
  %717 = phi i8* [ %314, %672 ], [ %681, %699 ]
  %718 = phi i8* [ null, %672 ], [ %709, %699 ]
  %719 = phi i8* [ null, %672 ], [ %702, %699 ]
  call void @llvm.dbg.value(metadata i8* %719, metadata !5015, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8* %718, metadata !5014, metadata !DIExpression()), !dbg !5610
  %720 = icmp eq i32 %711, 0, !dbg !5628
  %721 = or i1 %33, %720, !dbg !5654
  br i1 %721, label %726, label %722, !dbg !5654

; <label>:722:                                    ; preds = %710
  %723 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %713), !dbg !5655
  %724 = bitcast i8* %723 to i8**, !dbg !5656
  %725 = load i8*, i8** %724, align 8, !dbg !5656, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %725, metadata !5013, metadata !DIExpression()), !dbg !5609
  br label %726, !dbg !5657

; <label>:726:                                    ; preds = %710, %722
  %727 = phi i8* [ %725, %722 ], [ %715, %710 ]
  call void @llvm.dbg.value(metadata i8* %727, metadata !5013, metadata !DIExpression()), !dbg !5609
  switch i8 %275, label %793 [
    i8 38, label %728
    i8 60, label %776
  ], !dbg !5658

; <label>:728:                                    ; preds = %726
  %729 = and i64 %313, 1024, !dbg !5659
  %730 = icmp eq i64 %729, 0, !dbg !5659
  %731 = icmp eq i32 %386, 0, !dbg !5662
  %732 = and i1 %730, %731, !dbg !5663
  %733 = zext i1 %732 to i64, !dbg !5664
  %734 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 5, i64 %733, !dbg !5664
  %735 = load i8*, i8** %734, align 8, !dbg !5664, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %735, metadata !5012, metadata !DIExpression()), !dbg !5665
  %736 = icmp eq i8* %717, bitcast (i8** @p_bg to i8*), !dbg !5666
  br i1 %736, label %737, label %744, !dbg !5668

; <label>:737:                                    ; preds = %728
  %738 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !5669, !tbaa !5672
  %739 = icmp eq i32 %738, 0, !dbg !5673
  br i1 %739, label %742, label %740, !dbg !5674

; <label>:740:                                    ; preds = %737
  %741 = call i8* @gui_bg_default() #11, !dbg !5675
  call void @llvm.dbg.value(metadata i8* %741, metadata !5012, metadata !DIExpression()), !dbg !5665
  br label %744, !dbg !5676

; <label>:742:                                    ; preds = %737
  %743 = call i8* @term_bg_default() #11, !dbg !5677
  call void @llvm.dbg.value(metadata i8* %743, metadata !5012, metadata !DIExpression()), !dbg !5665
  br label %744

; <label>:744:                                    ; preds = %740, %742, %728
  %745 = phi i8* [ %741, %740 ], [ %743, %742 ], [ %735, %728 ]
  call void @llvm.dbg.value(metadata i8* %745, metadata !5012, metadata !DIExpression()), !dbg !5665
  %746 = icmp eq i8* %745, null, !dbg !5678
  br i1 %746, label %747, label %749, !dbg !5680

; <label>:747:                                    ; preds = %744
  %748 = load i8*, i8** @empty_option, align 8, !dbg !5681, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %748, metadata !5012, metadata !DIExpression()), !dbg !5665
  br label %1157, !dbg !5682

; <label>:749:                                    ; preds = %744
  call void @llvm.dbg.value(metadata i32 %243, metadata !3507, metadata !DIExpression()) #11, !dbg !5683
  call void @llvm.dbg.value(metadata i8* %745, metadata !3512, metadata !DIExpression()) #11, !dbg !5686
  %750 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 2, !dbg !5687
  %751 = load i64, i64* %750, align 16, !dbg !5687, !tbaa !3107
  %752 = and i64 %751, 16, !dbg !5688
  %753 = icmp eq i64 %752, 0, !dbg !5688
  br i1 %753, label %771, label %754, !dbg !5689

; <label>:754:                                    ; preds = %749
  %755 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 3, !dbg !5690
  %756 = load i8*, i8** %755, align 8, !dbg !5690, !tbaa !3461
  %757 = icmp eq i8* %756, null, !dbg !5691
  br i1 %757, label %771, label %758, !dbg !5692

; <label>:758:                                    ; preds = %754
  %759 = call i64 @strlen(i8* nonnull %745) #12, !dbg !5693
  %760 = icmp ugt i64 %759, 4096, !dbg !5695
  br i1 %760, label %771, label %761, !dbg !5696

; <label>:761:                                    ; preds = %758
  call void @llvm.dbg.value(metadata i8* %745, metadata !3512, metadata !DIExpression()) #11, !dbg !5686
  %762 = load i8*, i8** @NameBuff, align 8, !dbg !5697, !tbaa !3115
  %763 = icmp eq i8* %756, bitcast (i8** @p_tags to i8*), !dbg !5698
  %764 = zext i1 %763 to i32, !dbg !5698
  %765 = icmp eq i8* %756, bitcast (i8** @p_sps to i8*), !dbg !5699
  %766 = select i1 %765, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i8* null, !dbg !5700
  call void @expand_env_esc(i8* nonnull %745, i8* %762, i32 4096, i32 %764, i32 0, i8* %766) #11, !dbg !5701
  %767 = load i8*, i8** @NameBuff, align 8, !dbg !5702, !tbaa !3115
  %768 = call i32 @strcmp(i8* %767, i8* nonnull %745) #12, !dbg !5702
  %769 = icmp eq i32 %768, 0, !dbg !5703
  %770 = select i1 %769, i8* null, i8* %767, !dbg !5704
  br label %771, !dbg !5704

; <label>:771:                                    ; preds = %749, %754, %758, %761
  %772 = phi i8* [ null, %749 ], [ null, %754 ], [ null, %758 ], [ %770, %761 ]
  call void @llvm.dbg.value(metadata i8* %772, metadata !5010, metadata !DIExpression()), !dbg !5607
  %773 = icmp eq i8* %772, null, !dbg !5705
  %774 = select i1 %773, i8* %745, i8* %772, !dbg !5707
  call void @llvm.dbg.value(metadata i8* %774, metadata !5010, metadata !DIExpression()), !dbg !5607
  %775 = call i8* @vim_strsave(i8* %774) #11, !dbg !5708
  call void @llvm.dbg.value(metadata i8* %775, metadata !5012, metadata !DIExpression()), !dbg !5665
  br label %1157

; <label>:776:                                    ; preds = %726
  call void @llvm.dbg.value(metadata %struct.vimoption* %713, metadata !4275, metadata !DIExpression()) #11, !dbg !5709
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !5713
  %777 = load i32, i32* %712, align 16, !dbg !5714, !tbaa !4220
  %778 = icmp eq i32 %777, 0, !dbg !5715
  br i1 %778, label %786, label %779, !dbg !5716

; <label>:779:                                    ; preds = %776
  %780 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 3, !dbg !5717
  %781 = load i8*, i8** %780, align 8, !dbg !5717, !tbaa !3461
  %782 = icmp eq i8* %781, inttoptr (i64 -1 to i8*), !dbg !5718
  br i1 %782, label %783, label %788, !dbg !5719

; <label>:783:                                    ; preds = %779
  %784 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %713) #11, !dbg !5720
  %785 = getelementptr inbounds i8, i8* %784, i64 1376, !dbg !5720
  br label %788, !dbg !5721

; <label>:786:                                    ; preds = %776
  %787 = call fastcc i8* @get_varp(%struct.vimoption* nonnull %713) #11, !dbg !5722
  br label %788, !dbg !5723

; <label>:788:                                    ; preds = %779, %783, %786
  %789 = phi i8* [ %785, %783 ], [ %787, %786 ], [ %781, %779 ]
  %790 = bitcast i8* %789 to i8**, !dbg !5724
  %791 = load i8*, i8** %790, align 8, !dbg !5724, !tbaa !3115
  %792 = call i8* @vim_strsave(i8* %791) #11, !dbg !5725
  call void @llvm.dbg.value(metadata i8* %792, metadata !5012, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i32 1, metadata !5022, metadata !DIExpression()), !dbg !5726
  br label %1157, !dbg !5727

; <label>:793:                                    ; preds = %726
  %794 = load i8*, i8** %7, align 8, !dbg !5728, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %794, metadata !4968, metadata !DIExpression()), !dbg !5028
  %795 = getelementptr inbounds i8, i8* %794, i64 1, !dbg !5728
  call void @llvm.dbg.value(metadata i8* %795, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %795, i8** %7, align 8, !dbg !5728, !tbaa !3115
  %796 = icmp eq i8* %717, bitcast (i8** @p_kp to i8*), !dbg !5730
  br i1 %796, label %797, label %800, !dbg !5732

; <label>:797:                                    ; preds = %793
  %798 = load i8, i8* %795, align 1, !dbg !5733, !tbaa !3150
  switch i8 %798, label %882 [
    i8 0, label %799
    i8 32, label %799
  ], !dbg !5734

; <label>:799:                                    ; preds = %797, %797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i64 6, i32 1, i1 false), !dbg !5735
  call void @llvm.dbg.value(metadata i8* %795, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %795, metadata !5004, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.value(metadata i8* %13, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %13, i8** %7, align 8, !dbg !5737, !tbaa !3115
  br label %893, !dbg !5738

; <label>:800:                                    ; preds = %793
  %801 = icmp eq i8* %717, bitcast (i8** @p_bs to i8*), !dbg !5739
  br i1 %801, label %802, label %834, !dbg !5741

; <label>:802:                                    ; preds = %800
  %803 = load i8*, i8** %716, align 8, !dbg !5742, !tbaa !3115
  %804 = load i8, i8* %803, align 1, !dbg !5742, !tbaa !3150
  %805 = zext i8 %804 to i32, !dbg !5742
  %806 = add nsw i32 %805, -48, !dbg !5742
  %807 = icmp ult i32 %806, 10, !dbg !5742
  br i1 %807, label %808, label %882, !dbg !5743

; <label>:808:                                    ; preds = %802
  %809 = call i64 @getdigits(i8** nonnull %716) #11, !dbg !5744
  %810 = trunc i64 %809 to i32, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %810, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %810, i32* %9, align 4, !dbg !5746, !tbaa !3060
  switch i32 %810, label %819 [
    i32 0, label %811
    i32 1, label %813
    i32 2, label %815
    i32 3, label %817
  ], !dbg !5747

; <label>:811:                                    ; preds = %808
  %812 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !5748, !tbaa !3115
  store i64 %812, i64* bitcast (i8** @p_bs to i64*), align 8, !dbg !5750, !tbaa !3115
  br label %819, !dbg !5751

; <label>:813:                                    ; preds = %808
  %814 = call i8* @vim_strsave(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !5752
  store i8* %814, i8** %716, align 8, !dbg !5753, !tbaa !3115
  br label %819, !dbg !5754

; <label>:815:                                    ; preds = %808
  %816 = call i8* @vim_strsave(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !5755
  store i8* %816, i8** %716, align 8, !dbg !5756, !tbaa !3115
  br label %819, !dbg !5757

; <label>:817:                                    ; preds = %808
  %818 = call i8* @vim_strsave(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !5758
  store i8* %818, i8** %716, align 8, !dbg !5759, !tbaa !3115
  br label %819, !dbg !5760

; <label>:819:                                    ; preds = %808, %817, %815, %813, %811
  call void @vim_free(i8* %715) #11, !dbg !5761
  %820 = icmp eq i8* %727, %715, !dbg !5762
  br i1 %820, label %821, label %823, !dbg !5764

; <label>:821:                                    ; preds = %819
  %822 = load i8*, i8** %716, align 8, !dbg !5765, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %822, metadata !5013, metadata !DIExpression()), !dbg !5609
  br label %823, !dbg !5766

; <label>:823:                                    ; preds = %821, %819
  %824 = phi i8* [ %822, %821 ], [ %727, %819 ]
  call void @llvm.dbg.value(metadata i8* %824, metadata !5013, metadata !DIExpression()), !dbg !5609
  %825 = icmp eq i8* %718, %715, !dbg !5767
  br i1 %825, label %826, label %828, !dbg !5769

; <label>:826:                                    ; preds = %823
  %827 = load i8*, i8** %716, align 8, !dbg !5770, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %827, metadata !5014, metadata !DIExpression()), !dbg !5610
  br label %828, !dbg !5771

; <label>:828:                                    ; preds = %826, %823
  %829 = phi i8* [ %827, %826 ], [ %718, %823 ]
  call void @llvm.dbg.value(metadata i8* %829, metadata !5014, metadata !DIExpression()), !dbg !5610
  %830 = icmp eq i8* %719, %715, !dbg !5772
  %831 = load i8*, i8** %716, align 8, !tbaa !3115
  %832 = select i1 %830, i8* %831, i8* %719, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %832, metadata !5015, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8* %831, metadata !5011, metadata !DIExpression()), !dbg !5608
  %833 = load i8*, i8** %7, align 8, !dbg !5775, !tbaa !3115
  br label %893, !dbg !5776

; <label>:834:                                    ; preds = %800
  %835 = icmp eq i8* %717, bitcast (i8** @p_ww to i8*), !dbg !5777
  br i1 %835, label %836, label %882, !dbg !5779

; <label>:836:                                    ; preds = %834
  call void @llvm.dbg.value(metadata i8* %795, metadata !4968, metadata !DIExpression()), !dbg !5028
  %837 = load i8, i8* %795, align 1, !dbg !5780, !tbaa !3150
  %838 = zext i8 %837 to i32, !dbg !5780
  %839 = add nsw i32 %838, -48, !dbg !5780
  %840 = icmp ult i32 %839, 10, !dbg !5780
  br i1 %840, label %841, label %884, !dbg !5781

; <label>:841:                                    ; preds = %836
  store i8 0, i8* %13, align 16, !dbg !5782, !tbaa !3150
  call void @llvm.dbg.value(metadata i8** %7, metadata !4968, metadata !DIExpression()), !dbg !5028
  %842 = call i64 @getdigits(i8** nonnull %7) #11, !dbg !5784
  %843 = trunc i64 %842 to i32, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %843, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %843, i32* %9, align 4, !dbg !5785, !tbaa !3060
  %844 = and i32 %843, 1, !dbg !5786
  %845 = icmp eq i32 %844, 0, !dbg !5786
  br i1 %845, label %849, label %846, !dbg !5788

; <label>:846:                                    ; preds = %841
  %847 = call i64 @strlen(i8* nonnull %13), !dbg !5789
  %848 = getelementptr [80 x i8], [80 x i8]* %8, i64 0, i64 %847, !dbg !5789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %848, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i64 0, i64 0), i64 3, i32 1, i1 false), !dbg !5789
  br label %849, !dbg !5789

; <label>:849:                                    ; preds = %841, %846
  call void @llvm.dbg.value(metadata i32 %843, metadata !4981, metadata !DIExpression()), !dbg !5572
  %850 = and i32 %843, 2, !dbg !5790
  %851 = icmp eq i32 %850, 0, !dbg !5790
  br i1 %851, label %855, label %852, !dbg !5792

; <label>:852:                                    ; preds = %849
  %853 = call i64 @strlen(i8* nonnull %13), !dbg !5793
  %854 = getelementptr [80 x i8], [80 x i8]* %8, i64 0, i64 %853, !dbg !5793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %854, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 3, i32 1, i1 false), !dbg !5793
  br label %855, !dbg !5793

; <label>:855:                                    ; preds = %849, %852
  call void @llvm.dbg.value(metadata i32 %843, metadata !4981, metadata !DIExpression()), !dbg !5572
  %856 = and i32 %843, 4, !dbg !5794
  %857 = icmp eq i32 %856, 0, !dbg !5794
  br i1 %857, label %861, label %858, !dbg !5796

; <label>:858:                                    ; preds = %855
  %859 = call i64 @strlen(i8* nonnull %13), !dbg !5797
  %860 = getelementptr [80 x i8], [80 x i8]* %8, i64 0, i64 %859, !dbg !5797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %860, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i64 5, i32 1, i1 false), !dbg !5797
  br label %861, !dbg !5797

; <label>:861:                                    ; preds = %855, %858
  call void @llvm.dbg.value(metadata i32 %843, metadata !4981, metadata !DIExpression()), !dbg !5572
  %862 = and i32 %843, 8, !dbg !5798
  %863 = icmp eq i32 %862, 0, !dbg !5798
  br i1 %863, label %867, label %864, !dbg !5800

; <label>:864:                                    ; preds = %861
  %865 = call i64 @strlen(i8* nonnull %13), !dbg !5801
  %866 = getelementptr [80 x i8], [80 x i8]* %8, i64 0, i64 %865, !dbg !5801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %866, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i64 0, i64 0), i64 5, i32 1, i1 false), !dbg !5801
  br label %867, !dbg !5801

; <label>:867:                                    ; preds = %861, %864
  call void @llvm.dbg.value(metadata i32 %843, metadata !4981, metadata !DIExpression()), !dbg !5572
  %868 = and i32 %843, 16, !dbg !5802
  %869 = icmp eq i32 %868, 0, !dbg !5802
  br i1 %869, label %873, label %870, !dbg !5804

; <label>:870:                                    ; preds = %867
  %871 = call i64 @strlen(i8* nonnull %13), !dbg !5805
  %872 = getelementptr [80 x i8], [80 x i8]* %8, i64 0, i64 %871, !dbg !5805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %872, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i64 5, i32 1, i1 false), !dbg !5805
  br label %873, !dbg !5805

; <label>:873:                                    ; preds = %867, %870
  %874 = load i8, i8* %13, align 16, !dbg !5806, !tbaa !3150
  %875 = icmp eq i8 %874, 0, !dbg !5808
  br i1 %875, label %880, label %876, !dbg !5809

; <label>:876:                                    ; preds = %873
  %877 = call i64 @strlen(i8* nonnull %13) #12, !dbg !5810
  %878 = add i64 %877, -1, !dbg !5811
  %879 = getelementptr inbounds [80 x i8], [80 x i8]* %8, i64 0, i64 %878, !dbg !5812
  store i8 0, i8* %879, align 1, !dbg !5813, !tbaa !3150
  br label %880, !dbg !5812

; <label>:880:                                    ; preds = %873, %876
  %881 = load i8*, i8** %7, align 8, !dbg !5814, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %881, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %881, metadata !5004, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.value(metadata i8* %13, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %13, i8** %7, align 8, !dbg !5815, !tbaa !3115
  br label %893, !dbg !5816

; <label>:882:                                    ; preds = %797, %802, %834
  %883 = load i8, i8* %795, align 1, !dbg !5817, !tbaa !3150
  br label %884, !dbg !5817

; <label>:884:                                    ; preds = %882, %836
  %885 = phi i8 [ %883, %882 ], [ %837, %836 ], !dbg !5817
  call void @llvm.dbg.value(metadata i8* %795, metadata !4968, metadata !DIExpression()), !dbg !5028
  %886 = icmp eq i8 %885, 62, !dbg !5819
  br i1 %886, label %887, label %893, !dbg !5820

; <label>:887:                                    ; preds = %884
  %888 = icmp eq i8* %717, bitcast (i8** @p_dir to i8*), !dbg !5821
  %889 = icmp eq i8* %717, bitcast (i8** @p_bdir to i8*), !dbg !5822
  %890 = or i1 %888, %889, !dbg !5823
  br i1 %890, label %891, label %893, !dbg !5823

; <label>:891:                                    ; preds = %887
  %892 = getelementptr inbounds i8, i8* %794, i64 2, !dbg !5824
  call void @llvm.dbg.value(metadata i8* %892, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %892, i8** %7, align 8, !dbg !5824, !tbaa !3115
  br label %893, !dbg !5826

; <label>:893:                                    ; preds = %828, %884, %891, %887, %880, %799
  %894 = phi i8* [ %13, %799 ], [ %833, %828 ], [ %13, %880 ], [ %892, %891 ], [ %795, %887 ], [ %795, %884 ], !dbg !5775
  %895 = phi i8* [ %795, %799 ], [ null, %828 ], [ %881, %880 ], [ null, %891 ], [ null, %887 ], [ null, %884 ]
  %896 = phi i8* [ %715, %799 ], [ %831, %828 ], [ %715, %880 ], [ %715, %891 ], [ %715, %887 ], [ %715, %884 ]
  %897 = phi i8* [ %727, %799 ], [ %824, %828 ], [ %727, %880 ], [ %727, %891 ], [ %727, %887 ], [ %727, %884 ]
  %898 = phi i8* [ %718, %799 ], [ %829, %828 ], [ %718, %880 ], [ %718, %891 ], [ %718, %887 ], [ %718, %884 ]
  %899 = phi i8* [ %719, %799 ], [ %832, %828 ], [ %719, %880 ], [ %719, %891 ], [ %719, %887 ], [ %719, %884 ]
  call void @llvm.dbg.value(metadata i8* %899, metadata !5015, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8* %898, metadata !5014, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8* %897, metadata !5013, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i8* %896, metadata !5011, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* %895, metadata !5004, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.value(metadata i8* %894, metadata !4968, metadata !DIExpression()), !dbg !5028
  %900 = call i64 @strlen(i8* %894) #12, !dbg !5775
  %901 = add i64 %900, 1, !dbg !5827
  %902 = icmp ne i32 %272, 0, !dbg !5828
  %903 = or i32 %450, %272, !dbg !5830
  %904 = icmp ne i32 %903, 0, !dbg !5830
  br i1 %904, label %905, label %909, !dbg !5830

; <label>:905:                                    ; preds = %893
  %906 = call i64 @strlen(i8* %897) #12, !dbg !5831
  %907 = add i64 %900, 2, !dbg !5832
  %908 = add i64 %907, %906, !dbg !5833
  br label %909, !dbg !5834

; <label>:909:                                    ; preds = %893, %905
  %910 = phi i64 [ %908, %905 ], [ %901, %893 ]
  %911 = and i64 %910, 4294967295, !dbg !5835
  %912 = call i8* @alloc(i64 %911) #11, !dbg !5836
  call void @llvm.dbg.value(metadata i8* %912, metadata !5012, metadata !DIExpression()), !dbg !5665
  %913 = icmp eq i8* %912, null, !dbg !5837
  br i1 %913, label %1309, label %914, !dbg !5839

; <label>:914:                                    ; preds = %909
  br label %915, !dbg !5840

; <label>:915:                                    ; preds = %945, %914
  %916 = phi i8* [ %912, %914 ], [ %946, %945 ]
  call void @llvm.dbg.value(metadata i8* %916, metadata !5010, metadata !DIExpression()), !dbg !5607
  %917 = load i8*, i8** %7, align 8, !dbg !5840, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %917, metadata !4968, metadata !DIExpression()), !dbg !5028
  %918 = load i8, i8* %917, align 1, !dbg !5841, !tbaa !3150
  switch i8 %918, label %924 [
    i8 0, label %947
    i8 32, label %947
    i8 9, label %947
    i8 92, label %919
  ], !dbg !5842

; <label>:919:                                    ; preds = %915
  %920 = getelementptr inbounds i8, i8* %917, i64 1, !dbg !5843
  %921 = load i8, i8* %920, align 1, !dbg !5843, !tbaa !3150
  %922 = icmp eq i8 %921, 0, !dbg !5846
  br i1 %922, label %924, label %923, !dbg !5847

; <label>:923:                                    ; preds = %919
  call void @llvm.dbg.value(metadata i8* %920, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %920, i8** %7, align 8, !dbg !5848, !tbaa !3115
  br label %924, !dbg !5848

; <label>:924:                                    ; preds = %915, %919, %923
  %925 = phi i8* [ %917, %915 ], [ %917, %919 ], [ %920, %923 ]
  %926 = load i32, i32* @has_mbyte, align 4, !dbg !5849, !tbaa !3060
  %927 = icmp eq i32 %926, 0, !dbg !5849
  br i1 %927, label %940, label %928, !dbg !5851

; <label>:928:                                    ; preds = %924
  %929 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2len, align 8, !dbg !5852, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %925, metadata !4968, metadata !DIExpression()), !dbg !5028
  %930 = call i32 %929(i8* %925) #11, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %930, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %930, i32* %9, align 4, !dbg !5854, !tbaa !3060
  %931 = icmp sgt i32 %930, 1, !dbg !5855
  %932 = load i8*, i8** %7, align 8, !tbaa !3115
  br i1 %931, label %933, label %940, !dbg !5856

; <label>:933:                                    ; preds = %928
  call void @llvm.dbg.value(metadata i8* %932, metadata !4968, metadata !DIExpression()), !dbg !5028
  %934 = sext i32 %930 to i64, !dbg !5857
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %916, i8* %932, i64 %934, i32 1, i1 false), !dbg !5857
  %935 = load i32, i32* %9, align 4, !dbg !5859, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %935, metadata !4981, metadata !DIExpression()), !dbg !5572
  %936 = load i8*, i8** %7, align 8, !dbg !5860, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %936, metadata !4968, metadata !DIExpression()), !dbg !5028
  %937 = sext i32 %935 to i64, !dbg !5860
  %938 = getelementptr inbounds i8, i8* %936, i64 %937, !dbg !5860
  call void @llvm.dbg.value(metadata i8* %938, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %938, i8** %7, align 8, !dbg !5860, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 %935, metadata !4981, metadata !DIExpression()), !dbg !5572
  %939 = getelementptr inbounds i8, i8* %916, i64 %937, !dbg !5861
  call void @llvm.dbg.value(metadata i8* %939, metadata !5010, metadata !DIExpression()), !dbg !5607
  br label %945, !dbg !5862

; <label>:940:                                    ; preds = %928, %924
  %941 = phi i8* [ %925, %924 ], [ %932, %928 ], !dbg !5863
  call void @llvm.dbg.value(metadata i8* %941, metadata !4968, metadata !DIExpression()), !dbg !5028
  %942 = getelementptr inbounds i8, i8* %941, i64 1, !dbg !5863
  call void @llvm.dbg.value(metadata i8* %942, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %942, i8** %7, align 8, !dbg !5863, !tbaa !3115
  %943 = load i8, i8* %941, align 1, !dbg !5864, !tbaa !3150
  %944 = getelementptr inbounds i8, i8* %916, i64 1, !dbg !5865
  call void @llvm.dbg.value(metadata i8* %944, metadata !5010, metadata !DIExpression()), !dbg !5607
  store i8 %943, i8* %916, align 1, !dbg !5866, !tbaa !3150
  br label %945

; <label>:945:                                    ; preds = %940, %933
  %946 = phi i8* [ %939, %933 ], [ %944, %940 ]
  br label %915, !dbg !5607, !llvm.loop !5867

; <label>:947:                                    ; preds = %915, %915, %915
  store i8 0, i8* %916, align 1, !dbg !5870, !tbaa !3150
  %948 = xor i1 %904, true, !dbg !5871
  %949 = trunc i64 %313 to i16, !dbg !5873
  %950 = icmp slt i16 %949, 0, !dbg !5873
  %951 = or i1 %950, %948, !dbg !5871
  br i1 %951, label %952, label %989, !dbg !5871

; <label>:952:                                    ; preds = %947
  call void @llvm.dbg.value(metadata i32 %243, metadata !3507, metadata !DIExpression()) #11, !dbg !5874
  call void @llvm.dbg.value(metadata i8* %912, metadata !3512, metadata !DIExpression()) #11, !dbg !5877
  %953 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 2, !dbg !5878
  %954 = load i64, i64* %953, align 16, !dbg !5878, !tbaa !3107
  %955 = and i64 %954, 16, !dbg !5879
  %956 = icmp eq i64 %955, 0, !dbg !5879
  br i1 %956, label %989, label %957, !dbg !5880

; <label>:957:                                    ; preds = %952
  %958 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 3, !dbg !5881
  %959 = load i8*, i8** %958, align 8, !dbg !5881, !tbaa !3461
  %960 = icmp eq i8* %959, null, !dbg !5882
  br i1 %960, label %989, label %961, !dbg !5883

; <label>:961:                                    ; preds = %957
  %962 = call i64 @strlen(i8* nonnull %912) #12, !dbg !5884
  %963 = icmp ugt i64 %962, 4096, !dbg !5885
  br i1 %963, label %989, label %964, !dbg !5886

; <label>:964:                                    ; preds = %961
  call void @llvm.dbg.value(metadata i8* %912, metadata !3512, metadata !DIExpression()) #11, !dbg !5877
  %965 = load i8*, i8** @NameBuff, align 8, !dbg !5887, !tbaa !3115
  %966 = icmp eq i8* %959, bitcast (i8** @p_tags to i8*), !dbg !5888
  %967 = zext i1 %966 to i32, !dbg !5888
  %968 = icmp eq i8* %959, bitcast (i8** @p_sps to i8*), !dbg !5889
  %969 = select i1 %968, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i8* null, !dbg !5890
  call void @expand_env_esc(i8* nonnull %912, i8* %965, i32 4096, i32 %967, i32 0, i8* %969) #11, !dbg !5891
  %970 = load i8*, i8** @NameBuff, align 8, !dbg !5892, !tbaa !3115
  %971 = call i32 @strcmp(i8* %970, i8* nonnull %912) #12, !dbg !5892
  %972 = icmp eq i32 %971, 0, !dbg !5893
  %973 = icmp eq i8* %970, null, !dbg !5894
  %974 = or i1 %973, %972
  call void @llvm.dbg.value(metadata i8* %970, metadata !5010, metadata !DIExpression()), !dbg !5607
  br i1 %974, label %989, label %975

; <label>:975:                                    ; preds = %964
  call void @vim_free(i8* nonnull %912) #11, !dbg !5896
  %976 = call i64 @strlen(i8* nonnull %970) #12, !dbg !5898
  %977 = add i64 %976, 1, !dbg !5899
  br i1 %904, label %978, label %982, !dbg !5900

; <label>:978:                                    ; preds = %975
  %979 = call i64 @strlen(i8* %897) #12, !dbg !5902
  %980 = add i64 %976, 2, !dbg !5903
  %981 = add i64 %980, %979, !dbg !5904
  br label %982, !dbg !5905

; <label>:982:                                    ; preds = %975, %978
  %983 = phi i64 [ %981, %978 ], [ %977, %975 ]
  %984 = and i64 %983, 4294967295, !dbg !5906
  %985 = call i8* @alloc(i64 %984) #11, !dbg !5907
  call void @llvm.dbg.value(metadata i8* %985, metadata !5012, metadata !DIExpression()), !dbg !5665
  %986 = icmp eq i8* %985, null, !dbg !5908
  br i1 %986, label %1309, label %987, !dbg !5910

; <label>:987:                                    ; preds = %982
  %988 = call i8* @strcpy(i8* nonnull %985, i8* nonnull %970) #11, !dbg !5911
  br label %989, !dbg !5912

; <label>:989:                                    ; preds = %964, %961, %957, %952, %947, %987
  %990 = phi i8* [ %970, %987 ], [ %916, %947 ], [ null, %952 ], [ null, %957 ], [ null, %961 ], [ null, %964 ]
  %991 = phi i8* [ %985, %987 ], [ %912, %947 ], [ %912, %952 ], [ %912, %957 ], [ %912, %961 ], [ %912, %964 ]
  call void @llvm.dbg.value(metadata i8* %991, metadata !5012, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i8* %990, metadata !5010, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i32 0, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 0, i32* %9, align 4, !dbg !5913, !tbaa !3060
  %992 = xor i1 %902, true, !dbg !5914
  %993 = and i64 %313, 131072, !dbg !5916
  %994 = icmp eq i64 %993, 0, !dbg !5916
  %995 = and i1 %994, %992, !dbg !5914
  br i1 %995, label %1011, label %996, !dbg !5914

; <label>:996:                                    ; preds = %989
  %997 = call i64 @strlen(i8* %991) #12, !dbg !5917
  %998 = trunc i64 %997 to i32, !dbg !5919
  call void @llvm.dbg.value(metadata i32 %998, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %998, i32* %9, align 4, !dbg !5920, !tbaa !3060
  %999 = call fastcc i8* @find_dup_item(i8* %897, i8* %991, i64 %313), !dbg !5921
  call void @llvm.dbg.value(metadata i8* %999, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1000 = icmp ne i8* %999, null, !dbg !5922
  %1001 = and i1 %451, %1000, !dbg !5924
  br i1 %1001, label %1002, label %1004, !dbg !5924

; <label>:1002:                                   ; preds = %996
  call void @llvm.dbg.value(metadata i32 0, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 0, metadata !4987, metadata !DIExpression()), !dbg !5237
  %1003 = call i8* @strcpy(i8* %991, i8* %897) #11, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %271, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %270, metadata !4987, metadata !DIExpression()), !dbg !5237
  br label %1011, !dbg !5927

; <label>:1004:                                   ; preds = %996
  call void @llvm.dbg.value(metadata i32 %271, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %270, metadata !4987, metadata !DIExpression()), !dbg !5237
  %1005 = icmp eq i8* %999, null, !dbg !5928
  br i1 %1005, label %1006, label %1011, !dbg !5927

; <label>:1006:                                   ; preds = %1004
  %1007 = call i64 @strlen(i8* %897) #12, !dbg !5930
  %1008 = shl i64 %1007, 32, !dbg !5931
  %1009 = ashr exact i64 %1008, 32, !dbg !5931
  %1010 = getelementptr inbounds i8, i8* %897, i64 %1009, !dbg !5931
  call void @llvm.dbg.value(metadata i8* %1010, metadata !5010, metadata !DIExpression()), !dbg !5607
  br label %1011, !dbg !5932

; <label>:1011:                                   ; preds = %1002, %989, %1004, %1006
  %1012 = phi i32 [ %270, %1006 ], [ %270, %1004 ], [ %270, %989 ], [ 0, %1002 ]
  %1013 = phi i32 [ %271, %1006 ], [ %271, %1004 ], [ %271, %989 ], [ 0, %1002 ]
  %1014 = phi i8* [ %1010, %1006 ], [ %999, %1004 ], [ %990, %989 ], [ %999, %1002 ]
  call void @llvm.dbg.value(metadata i8* %1014, metadata !5010, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i32 %1013, metadata !4988, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %1012, metadata !4987, metadata !DIExpression()), !dbg !5237
  %1015 = icmp eq i32 %1012, 0, !dbg !5933
  %1016 = or i32 %1013, %1012, !dbg !5935
  %1017 = icmp eq i32 %1016, 0, !dbg !5935
  br i1 %1017, label %1075, label %1018, !dbg !5935

; <label>:1018:                                   ; preds = %1011
  br i1 %950, label %1019, label %1025, !dbg !5936

; <label>:1019:                                   ; preds = %1018
  %1020 = load i8, i8* %897, align 1, !dbg !5938, !tbaa !3150
  %1021 = icmp eq i8 %1020, 0, !dbg !5939
  br i1 %1021, label %1025, label %1022, !dbg !5940

; <label>:1022:                                   ; preds = %1019
  %1023 = load i8, i8* %991, align 1, !dbg !5941, !tbaa !3150
  %1024 = icmp ne i8 %1023, 0, !dbg !5942
  br label %1025

; <label>:1025:                                   ; preds = %1019, %1022, %1018
  %1026 = phi i1 [ false, %1019 ], [ false, %1018 ], [ %1024, %1022 ]
  br i1 %1015, label %1060, label %1027, !dbg !5943

; <label>:1027:                                   ; preds = %1025
  %1028 = call i64 @strlen(i8* %897) #12, !dbg !5944
  %1029 = trunc i64 %1028 to i32, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %1029, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1029, i32* %9, align 4, !dbg !5948, !tbaa !3060
  %1030 = icmp sgt i32 %1029, 1, !dbg !5949
  %1031 = and i1 %1026, %1030, !dbg !5951
  %1032 = and i64 %313, 98304, !dbg !5952
  %1033 = icmp eq i64 %1032, 98304, !dbg !5953
  %1034 = and i1 %1033, %1031, !dbg !5951
  br i1 %1034, label %1035, label %1050, !dbg !5951

; <label>:1035:                                   ; preds = %1027
  %1036 = shl i64 %1028, 32, !dbg !5954
  %1037 = add i64 %1036, -4294967296, !dbg !5954
  %1038 = ashr exact i64 %1037, 32, !dbg !5954
  %1039 = getelementptr inbounds i8, i8* %897, i64 %1038, !dbg !5954
  %1040 = load i8, i8* %1039, align 1, !dbg !5954, !tbaa !3150
  %1041 = icmp eq i8 %1040, 44, !dbg !5955
  br i1 %1041, label %1042, label %1050, !dbg !5956

; <label>:1042:                                   ; preds = %1035
  %1043 = add i64 %1036, -8589934592, !dbg !5957
  %1044 = ashr exact i64 %1043, 32, !dbg !5957
  %1045 = getelementptr inbounds i8, i8* %897, i64 %1044, !dbg !5957
  %1046 = load i8, i8* %1045, align 1, !dbg !5957, !tbaa !3150
  %1047 = icmp eq i8 %1046, 92, !dbg !5958
  br i1 %1047, label %1050, label %1048, !dbg !5959

; <label>:1048:                                   ; preds = %1042
  %1049 = add nsw i32 %1029, -1, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %1049, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1049, i32* %9, align 4, !dbg !5960, !tbaa !3060
  br label %1050, !dbg !5961

; <label>:1050:                                   ; preds = %1042, %1048, %1035, %1027
  %1051 = phi i32 [ %1029, %1042 ], [ %1049, %1048 ], [ %1029, %1035 ], [ %1029, %1027 ], !dbg !5962
  call void @llvm.dbg.value(metadata i32 %1051, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1052 = sext i32 %1051 to i64, !dbg !5962
  %1053 = getelementptr inbounds i8, i8* %991, i64 %1052, !dbg !5962
  %1054 = zext i1 %1026 to i64, !dbg !5962
  %1055 = getelementptr inbounds i8, i8* %1053, i64 %1054, !dbg !5962
  %1056 = call i64 @strlen(i8* %991) #12, !dbg !5962
  %1057 = add i64 %1056, 1, !dbg !5962
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1055, i8* %991, i64 %1057, i32 1, i1 false), !dbg !5962
  %1058 = load i32, i32* %9, align 4, !dbg !5963, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1058, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1059 = sext i32 %1058 to i64, !dbg !5963
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %991, i8* %897, i64 %1059, i32 1, i1 false), !dbg !5963
  br label %1070, !dbg !5964

; <label>:1060:                                   ; preds = %1025
  %1061 = call i64 @strlen(i8* %991) #12, !dbg !5965
  %1062 = trunc i64 %1061 to i32, !dbg !5967
  call void @llvm.dbg.value(metadata i32 %1062, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1062, i32* %9, align 4, !dbg !5968, !tbaa !3060
  %1063 = shl i64 %1061, 32, !dbg !5969
  %1064 = ashr exact i64 %1063, 32, !dbg !5969
  %1065 = getelementptr inbounds i8, i8* %991, i64 %1064, !dbg !5969
  %1066 = zext i1 %1026 to i64, !dbg !5969
  %1067 = getelementptr inbounds i8, i8* %1065, i64 %1066, !dbg !5969
  %1068 = call i64 @strlen(i8* %897) #12, !dbg !5969
  %1069 = add i64 %1068, 1, !dbg !5969
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1067, i8* %897, i64 %1069, i32 1, i1 false), !dbg !5969
  br label %1070

; <label>:1070:                                   ; preds = %1060, %1050
  br i1 %1026, label %1071, label %1075, !dbg !5970

; <label>:1071:                                   ; preds = %1070
  %1072 = load i32, i32* %9, align 4, !dbg !5971, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1072, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1073 = sext i32 %1072 to i64, !dbg !5973
  %1074 = getelementptr inbounds i8, i8* %991, i64 %1073, !dbg !5973
  store i8 44, i8* %1074, align 1, !dbg !5974, !tbaa !3150
  br label %1075, !dbg !5973

; <label>:1075:                                   ; preds = %1011, %1070, %1071
  br i1 %902, label %1076, label %1108, !dbg !5975

; <label>:1076:                                   ; preds = %1075
  %1077 = call i8* @strcpy(i8* %991, i8* %897) #11, !dbg !5976
  %1078 = load i8, i8* %1014, align 1, !dbg !5979, !tbaa !3150
  %1079 = icmp eq i8 %1078, 0, !dbg !5979
  br i1 %1079, label %1108, label %1080, !dbg !5981

; <label>:1080:                                   ; preds = %1076
  br i1 %950, label %1083, label %1081, !dbg !5982

; <label>:1081:                                   ; preds = %1080
  %1082 = load i32, i32* %9, align 4, !dbg !5984, !tbaa !3060
  br label %1097, !dbg !5982

; <label>:1083:                                   ; preds = %1080
  %1084 = icmp eq i8* %1014, %897, !dbg !5985
  br i1 %1084, label %1085, label %1093, !dbg !5989

; <label>:1085:                                   ; preds = %1083
  %1086 = load i32, i32* %9, align 4, !dbg !5990, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1086, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1087 = sext i32 %1086 to i64, !dbg !5993
  %1088 = getelementptr inbounds i8, i8* %897, i64 %1087, !dbg !5993
  %1089 = load i8, i8* %1088, align 1, !dbg !5993, !tbaa !3150
  %1090 = icmp eq i8 %1089, 44, !dbg !5994
  br i1 %1090, label %1091, label %1097, !dbg !5995

; <label>:1091:                                   ; preds = %1085
  %1092 = add nsw i32 %1086, 1, !dbg !5996
  call void @llvm.dbg.value(metadata i32 %1092, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1092, i32* %9, align 4, !dbg !5996, !tbaa !3060
  br label %1097, !dbg !5996

; <label>:1093:                                   ; preds = %1083
  %1094 = getelementptr inbounds i8, i8* %1014, i64 -1, !dbg !5997
  call void @llvm.dbg.value(metadata i8* %1094, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1095 = load i32, i32* %9, align 4, !dbg !5999, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1095, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1096 = add nsw i32 %1095, 1, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %1096, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1096, i32* %9, align 4, !dbg !5999, !tbaa !3060
  br label %1097

; <label>:1097:                                   ; preds = %1081, %1093, %1091, %1085
  %1098 = phi i32 [ %1092, %1091 ], [ %1086, %1085 ], [ %1096, %1093 ], [ %1082, %1081 ], !dbg !5984
  %1099 = phi i8* [ %897, %1091 ], [ %897, %1085 ], [ %1094, %1093 ], [ %1014, %1081 ]
  call void @llvm.dbg.value(metadata i8* %1099, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1100 = ptrtoint i8* %1099 to i64, !dbg !5984
  %1101 = ptrtoint i8* %897 to i64, !dbg !5984
  %1102 = sub i64 %1100, %1101, !dbg !5984
  %1103 = getelementptr inbounds i8, i8* %991, i64 %1102, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %1098, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1104 = sext i32 %1098 to i64, !dbg !5984
  %1105 = getelementptr inbounds i8, i8* %1099, i64 %1104, !dbg !5984
  %1106 = call i64 @strlen(i8* %1105) #12, !dbg !5984
  %1107 = add i64 %1106, 1, !dbg !5984
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1103, i8* %1105, i64 %1107, i32 1, i1 false), !dbg !5984
  br label %1108, !dbg !6000

; <label>:1108:                                   ; preds = %1076, %1097, %1075
  %1109 = and i64 %313, 262144, !dbg !6001
  %1110 = icmp eq i64 %1109, 0, !dbg !6001
  br i1 %1110, label %1154, label %1111, !dbg !6003

; <label>:1111:                                   ; preds = %1108
  call void @llvm.dbg.value(metadata i8* %991, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1112 = load i8, i8* %991, align 1, !dbg !6004, !tbaa !3150
  %1113 = icmp eq i8 %1112, 0, !dbg !6008
  br i1 %1113, label %1154, label %1114, !dbg !6008

; <label>:1114:                                   ; preds = %1111
  %1115 = and i64 %313, 98304
  %1116 = icmp eq i64 %1115, 0
  br label %1117, !dbg !6008

; <label>:1117:                                   ; preds = %1114, %1151
  %1118 = phi i8 [ %1112, %1114 ], [ %1152, %1151 ]
  %1119 = phi i8* [ %991, %1114 ], [ %1120, %1151 ]
  call void @llvm.dbg.value(metadata i8* %1119, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1120 = getelementptr inbounds i8, i8* %1119, i64 1
  %1121 = getelementptr inbounds i8, i8* %1119, i64 2
  br label %1122, !dbg !6008

; <label>:1122:                                   ; preds = %1117, %1136
  %1123 = phi i8 [ %1118, %1117 ], [ %1137, %1136 ]
  br i1 %1116, label %1139, label %1124, !dbg !6009

; <label>:1124:                                   ; preds = %1122
  %1125 = zext i8 %1123 to i32, !dbg !6011
  %1126 = icmp eq i8 %1123, 44, !dbg !6015
  br i1 %1126, label %1149, label %1127, !dbg !6016

; <label>:1127:                                   ; preds = %1124
  %1128 = load i8, i8* %1120, align 1, !dbg !6017, !tbaa !3150
  %1129 = icmp eq i8 %1128, 44, !dbg !6018
  br i1 %1129, label %1130, label %1151, !dbg !6019

; <label>:1130:                                   ; preds = %1127
  %1131 = call i8* @vim_strchr(i8* nonnull %1121, i32 %1125) #11, !dbg !6020
  %1132 = icmp eq i8* %1131, null, !dbg !6021
  br i1 %1132, label %1149, label %1133, !dbg !6022

; <label>:1133:                                   ; preds = %1130
  %1134 = call i64 @strlen(i8* nonnull %1121) #12, !dbg !6023
  %1135 = add i64 %1134, 1, !dbg !6023
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %1119, i8* nonnull %1121, i64 %1135, i32 1, i1 false), !dbg !6023
  br label %1136, !dbg !6025

; <label>:1136:                                   ; preds = %1133, %1146
  call void @llvm.dbg.value(metadata i8* %1119, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1137 = load i8, i8* %1119, align 1, !dbg !6004, !tbaa !3150
  %1138 = icmp eq i8 %1137, 0, !dbg !6008
  br i1 %1138, label %1154, label %1122, !dbg !6008, !llvm.loop !6026

; <label>:1139:                                   ; preds = %1122
  %1140 = icmp eq i8 %1123, 44, !dbg !6028
  %1141 = and i1 %950, %1140, !dbg !6031
  br i1 %1141, label %1149, label %1142, !dbg !6031

; <label>:1142:                                   ; preds = %1139
  %1143 = zext i8 %1123 to i32, !dbg !6032
  %1144 = call i8* @vim_strchr(i8* nonnull %1120, i32 %1143) #11, !dbg !6033
  %1145 = icmp eq i8* %1144, null, !dbg !6034
  br i1 %1145, label %1149, label %1146, !dbg !6035

; <label>:1146:                                   ; preds = %1142
  %1147 = call i64 @strlen(i8* nonnull %1120) #12, !dbg !6036
  %1148 = add i64 %1147, 1, !dbg !6036
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %1119, i8* nonnull %1120, i64 %1148, i32 1, i1 false), !dbg !6036
  br label %1136, !dbg !6038

; <label>:1149:                                   ; preds = %1142, %1124, %1130, %1139
  %1150 = load i8, i8* %1120, align 1, !dbg !6004, !tbaa !3150
  br label %1151, !dbg !6004

; <label>:1151:                                   ; preds = %1127, %1149
  %1152 = phi i8 [ %1150, %1149 ], [ %1128, %1127 ], !dbg !6004
  call void @llvm.dbg.value(metadata i8* %1120, metadata !5010, metadata !DIExpression()), !dbg !5607
  %1153 = icmp eq i8 %1152, 0, !dbg !6008
  br i1 %1153, label %1154, label %1117, !dbg !6008, !llvm.loop !6026

; <label>:1154:                                   ; preds = %1151, %1136, %1111, %1108
  %1155 = icmp eq i8* %895, null, !dbg !6039
  br i1 %1155, label %1157, label %1156, !dbg !6041

; <label>:1156:                                   ; preds = %1154
  call void @llvm.dbg.value(metadata i8* %895, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %895, i8** %7, align 8, !dbg !6042, !tbaa !3115
  br label %1157, !dbg !6043

; <label>:1157:                                   ; preds = %1156, %1154, %747, %771, %788
  %1158 = phi i8* [ %715, %788 ], [ %715, %771 ], [ %715, %747 ], [ %896, %1154 ], [ %896, %1156 ]
  %1159 = phi i8* [ %792, %788 ], [ %775, %771 ], [ %748, %747 ], [ %991, %1154 ], [ %991, %1156 ]
  %1160 = phi i8* [ %727, %788 ], [ %727, %771 ], [ %727, %747 ], [ %897, %1154 ], [ %897, %1156 ]
  %1161 = phi i8* [ %718, %788 ], [ %718, %771 ], [ %718, %747 ], [ %898, %1154 ], [ %898, %1156 ]
  %1162 = phi i8* [ %719, %788 ], [ %719, %771 ], [ %719, %747 ], [ %899, %1154 ], [ %899, %1156 ]
  call void @llvm.dbg.value(metadata i32 1, metadata !5022, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i8* %1162, metadata !5015, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8* %1161, metadata !5014, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8* %1160, metadata !5013, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i8* %1159, metadata !5012, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i8* %1158, metadata !5011, metadata !DIExpression()), !dbg !5608
  store i8* %1159, i8** %716, align 8, !dbg !6044, !tbaa !3115
  %1163 = load i32, i32* @starting, align 4, !dbg !6045, !tbaa !3060
  %1164 = icmp eq i32 %1163, 0, !dbg !6045
  br i1 %1164, label %1165, label %1183, !dbg !6047

; <label>:1165:                                   ; preds = %1157
  %1166 = load i32, i32* %712, align 16, !dbg !6048, !tbaa !4220
  %1167 = icmp ne i32 %1166, 16428, !dbg !6049
  %1168 = icmp ne i8* %1160, null, !dbg !6050
  %1169 = and i1 %1168, %1167, !dbg !6051
  %1170 = icmp ne i8* %1159, null, !dbg !6052
  %1171 = and i1 %1170, %1169, !dbg !6051
  br i1 %1171, label %1172, label %1183, !dbg !6051

; <label>:1172:                                   ; preds = %1165
  %1173 = call i8* @vim_strsave(i8* nonnull %1160) #11, !dbg !6053
  call void @llvm.dbg.value(metadata i8* %1173, metadata !5016, metadata !DIExpression()), !dbg !5612
  %1174 = call i8* @vim_strsave(i8* nonnull %1159) #11, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %1174, metadata !5019, metadata !DIExpression()), !dbg !5615
  %1175 = icmp eq i8* %1161, null, !dbg !6056
  br i1 %1175, label %1178, label %1176, !dbg !6058

; <label>:1176:                                   ; preds = %1172
  %1177 = call i8* @vim_strsave(i8* nonnull %1161) #11, !dbg !6059
  call void @llvm.dbg.value(metadata i8* %1177, metadata !5017, metadata !DIExpression()), !dbg !5613
  br label %1178, !dbg !6060

; <label>:1178:                                   ; preds = %1172, %1176
  %1179 = phi i8* [ %1177, %1176 ], [ null, %1172 ]
  call void @llvm.dbg.value(metadata i8* %1179, metadata !5017, metadata !DIExpression()), !dbg !5613
  %1180 = icmp eq i8* %1162, null, !dbg !6061
  br i1 %1180, label %1183, label %1181, !dbg !6063

; <label>:1181:                                   ; preds = %1178
  %1182 = call i8* @vim_strsave(i8* nonnull %1162) #11, !dbg !6064
  call void @llvm.dbg.value(metadata i8* %1182, metadata !5018, metadata !DIExpression()), !dbg !5614
  br label %1183, !dbg !6065

; <label>:1183:                                   ; preds = %1178, %1157, %1181, %1165
  %1184 = phi i8* [ null, %1157 ], [ %1173, %1181 ], [ %1173, %1178 ], [ null, %1165 ]
  %1185 = phi i8* [ null, %1157 ], [ %1179, %1181 ], [ %1179, %1178 ], [ null, %1165 ]
  %1186 = phi i8* [ null, %1157 ], [ %1182, %1181 ], [ null, %1178 ], [ null, %1165 ]
  %1187 = phi i8* [ null, %1157 ], [ %1174, %1181 ], [ %1174, %1178 ], [ null, %1165 ]
  call void @llvm.dbg.value(metadata i8* %1187, metadata !5019, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i8* %1186, metadata !5018, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.value(metadata i8* %1185, metadata !5017, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i8* %1184, metadata !5016, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 %243, metadata !4525, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !6068
  br i1 %33, label %1211, label %1188, !dbg !6069

; <label>:1188:                                   ; preds = %1183
  %1189 = load i32, i32* %712, align 16, !dbg !6070, !tbaa !4220
  switch i32 %1189, label %1211 [
    i32 12327, label %1190
    i32 8211, label %1193
    i32 8212, label %1196
    i32 20511, label %1199
    i32 16423, label %1202
    i32 16416, label %1205
    i32 16425, label %1208
  ], !dbg !6071

; <label>:1190:                                   ; preds = %1188
  %1191 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6072, !tbaa !3115
  %1192 = getelementptr inbounds %struct.window_S, %struct.window_S* %1191, i64 0, i32 123, !dbg !6073
  br label %1213, !dbg !6074

; <label>:1193:                                   ; preds = %1188
  %1194 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6075, !tbaa !3115
  %1195 = getelementptr inbounds %struct.window_S, %struct.window_S* %1194, i64 0, i32 124, !dbg !6076
  br label %1213, !dbg !6077

; <label>:1196:                                   ; preds = %1188
  %1197 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6078, !tbaa !3115
  %1198 = getelementptr inbounds %struct.window_S, %struct.window_S* %1197, i64 0, i32 125, !dbg !6079
  br label %1213, !dbg !6080

; <label>:1199:                                   ; preds = %1188
  %1200 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6081, !tbaa !3115
  %1201 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1200, i64 0, i32 210, !dbg !6082
  br label %1213, !dbg !6083

; <label>:1202:                                   ; preds = %1188
  %1203 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6084, !tbaa !3115
  %1204 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1203, i64 0, i32 105, !dbg !6085
  br label %1213, !dbg !6086

; <label>:1205:                                   ; preds = %1188
  %1206 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6087, !tbaa !3115
  %1207 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1206, i64 0, i32 109, !dbg !6088
  br label %1213, !dbg !6089

; <label>:1208:                                   ; preds = %1188
  %1209 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6090, !tbaa !3115
  %1210 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1209, i64 0, i32 103, !dbg !6091
  br label %1213, !dbg !6092

; <label>:1211:                                   ; preds = %1188, %1183
  %1212 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %714, i32 2, !dbg !6093
  br label %1213, !dbg !6094

; <label>:1213:                                   ; preds = %1190, %1193, %1196, %1199, %1202, %1205, %1208, %1211
  %1214 = phi i64* [ %1212, %1211 ], [ %1210, %1208 ], [ %1207, %1205 ], [ %1204, %1202 ], [ %1201, %1199 ], [ %1198, %1196 ], [ %1195, %1193 ], [ %1192, %1190 ]
  call void @llvm.dbg.value(metadata i64* %1214, metadata !5023, metadata !DIExpression()), !dbg !6095
  %1215 = load i32, i32* @secure, align 4, !dbg !6096, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1215, metadata !5025, metadata !DIExpression()), !dbg !6097
  %1216 = load i32, i32* @sandbox, align 4, !dbg !6098
  %1217 = or i32 %1216, %21, !dbg !6100
  %1218 = icmp eq i32 %1217, 0, !dbg !6100
  br i1 %1218, label %1219, label %1224, !dbg !6100

; <label>:1219:                                   ; preds = %1213
  br i1 %454, label %1225, label %1220, !dbg !6101

; <label>:1220:                                   ; preds = %1219
  %1221 = load i64, i64* %1214, align 8, !dbg !6102, !tbaa !4248
  %1222 = and i64 %1221, 8388608, !dbg !6103
  %1223 = icmp eq i64 %1222, 0, !dbg !6103
  br i1 %1223, label %1225, label %1224, !dbg !6104

; <label>:1224:                                   ; preds = %1220, %1213
  store i32 1, i32* @secure, align 4, !dbg !6105, !tbaa !3060
  br label %1225, !dbg !6106

; <label>:1225:                                   ; preds = %1220, %1224, %1219
  call void @llvm.dbg.value(metadata i32* %12, metadata !5003, metadata !DIExpression()), !dbg !5406
  %1226 = call i8* @did_set_string_option(i32 %243, i8** nonnull %716, i32 1, i8* %1158, i8* nonnull %13, i32 %1, i32* nonnull %12) #11, !dbg !6107
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  store i32 %1215, i32* @secure, align 4, !dbg !6108, !tbaa !3060
  %1227 = icmp eq i8* %1226, null, !dbg !6109
  br i1 %1227, label %1228, label %1310, !dbg !6111

; <label>:1228:                                   ; preds = %1225
  call void @trigger_optionsset_string(i32 %243, i32 %1, i8* %1184, i8* %1185, i8* %1186, i8* %1187) #11, !dbg !6112
  call void @vim_free(i8* %1184) #11, !dbg !6113
  call void @vim_free(i8* %1185) #11, !dbg !6114
  call void @vim_free(i8* %1186) #11, !dbg !6115
  call void @vim_free(i8* %1187) #11, !dbg !6116
  br label %1257

; <label>:1229:                                   ; preds = %661
  %1230 = icmp eq i8 %275, 38, !dbg !6117
  br i1 %1230, label %1231, label %1235, !dbg !6119

; <label>:1231:                                   ; preds = %1229
  %1232 = call i32 @add_termcap_entry(i8* nonnull %16, i32 1) #11, !dbg !6120
  %1233 = icmp eq i32 %1232, 0, !dbg !6123
  %1234 = select i1 %1233, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0), i8* null, !dbg !6124
  br label %1251, !dbg !6124

; <label>:1235:                                   ; preds = %1229
  %1236 = load i8*, i8** %7, align 8, !dbg !6125, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %1236, metadata !4968, metadata !DIExpression()), !dbg !5028
  %1237 = getelementptr inbounds i8, i8* %1236, i64 1, !dbg !6125
  call void @llvm.dbg.value(metadata i8* %1237, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %1237, i8** %7, align 8, !dbg !6125, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %1237, metadata !5026, metadata !DIExpression()), !dbg !6127
  br label %1238, !dbg !6128

; <label>:1238:                                   ; preds = %1246, %1235
  %1239 = phi i8* [ %1237, %1235 ], [ %1248, %1246 ]
  call void @llvm.dbg.value(metadata i8* %1239, metadata !5026, metadata !DIExpression()), !dbg !6127
  %1240 = load i8, i8* %1239, align 1, !dbg !6130, !tbaa !3150
  switch i8 %1240, label %1246 [
    i8 0, label %1249
    i8 32, label %1249
    i8 9, label %1249
    i8 92, label %1241
  ], !dbg !6132

; <label>:1241:                                   ; preds = %1238
  %1242 = getelementptr inbounds i8, i8* %1239, i64 1, !dbg !6133
  %1243 = load i8, i8* %1242, align 1, !dbg !6133, !tbaa !3150
  %1244 = icmp eq i8 %1243, 0, !dbg !6135
  %1245 = select i1 %1244, i8* %1239, i8* %1242, !dbg !6136
  br label %1246, !dbg !6136

; <label>:1246:                                   ; preds = %1238, %1241
  %1247 = phi i8* [ %1245, %1241 ], [ %1239, %1238 ]
  call void @llvm.dbg.value(metadata i8* %1247, metadata !5026, metadata !DIExpression()), !dbg !6127
  %1248 = getelementptr inbounds i8, i8* %1247, i64 1, !dbg !6137
  call void @llvm.dbg.value(metadata i8* %1248, metadata !5026, metadata !DIExpression()), !dbg !6127
  br label %1238, !dbg !6138, !llvm.loop !6139

; <label>:1249:                                   ; preds = %1238, %1238, %1238
  store i8 0, i8* %1239, align 1, !dbg !6142, !tbaa !3150
  %1250 = load i8*, i8** %7, align 8, !dbg !6143, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %1250, metadata !4968, metadata !DIExpression()), !dbg !5028
  call void @add_termcode(i8* nonnull %16, i8* %1250, i32 0) #11, !dbg !6144
  store i8 %1240, i8* %1239, align 1, !dbg !6145, !tbaa !3150
  br label %1251

; <label>:1251:                                   ; preds = %1231, %1249
  %1252 = phi i8* [ null, %1249 ], [ %1234, %1231 ]
  call void @llvm.dbg.value(metadata i8* %1252, metadata !4971, metadata !DIExpression()), !dbg !5047
  %1253 = load volatile i32, i32* @full_screen, align 4, !dbg !6146, !tbaa !3060
  %1254 = icmp eq i32 %1253, 0, !dbg !6146
  br i1 %1254, label %1256, label %1255, !dbg !6148

; <label>:1255:                                   ; preds = %1251
  call void @ttest(i32 0) #11, !dbg !6149
  br label %1256, !dbg !6149

; <label>:1256:                                   ; preds = %1251, %1255
  call void @redraw_all_later(i32 50) #11, !dbg !6150
  br label %1257

; <label>:1257:                                   ; preds = %1228, %658, %1256, %511
  %1258 = phi i8* [ %314, %511 ], [ %314, %658 ], [ %314, %1256 ], [ %717, %1228 ]
  %1259 = phi i8* [ %514, %511 ], [ %660, %658 ], [ %1252, %1256 ], [ null, %1228 ]
  call void @llvm.dbg.value(metadata i8* %1259, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %1258, metadata !4985, metadata !DIExpression()), !dbg !5034
  br i1 %281, label %1260, label %1306, !dbg !6151

; <label>:1260:                                   ; preds = %1257
  %1261 = load i32, i32* %12, align 4, !dbg !6152, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1261, metadata !5003, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %243, metadata !6154, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %1, metadata !6159, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i32 %1261, metadata !6161, metadata !DIExpression()), !dbg !6166
  %1262 = sext i32 %243 to i64, !dbg !6167
  %1263 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %1262, i32 2, !dbg !6168
  %1264 = load i64, i64* %1263, align 16, !dbg !6169, !tbaa !3107
  %1265 = or i64 %1264, 256, !dbg !6169
  store i64 %1265, i64* %1263, align 16, !dbg !6169, !tbaa !3107
  call void @llvm.dbg.value(metadata i32 %243, metadata !4525, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !6172
  br i1 %33, label %1290, label %1266, !dbg !6173

; <label>:1266:                                   ; preds = %1260
  %1267 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %1262, i32 4, !dbg !6174
  %1268 = load i32, i32* %1267, align 16, !dbg !6174, !tbaa !4220
  switch i32 %1268, label %1290 [
    i32 12327, label %1269
    i32 8211, label %1272
    i32 8212, label %1275
    i32 20511, label %1278
    i32 16423, label %1281
    i32 16416, label %1284
    i32 16425, label %1287
  ], !dbg !6175

; <label>:1269:                                   ; preds = %1266
  %1270 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6176, !tbaa !3115
  %1271 = getelementptr inbounds %struct.window_S, %struct.window_S* %1270, i64 0, i32 123, !dbg !6177
  br label %1290, !dbg !6178

; <label>:1272:                                   ; preds = %1266
  %1273 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6179, !tbaa !3115
  %1274 = getelementptr inbounds %struct.window_S, %struct.window_S* %1273, i64 0, i32 124, !dbg !6180
  br label %1290, !dbg !6181

; <label>:1275:                                   ; preds = %1266
  %1276 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6182, !tbaa !3115
  %1277 = getelementptr inbounds %struct.window_S, %struct.window_S* %1276, i64 0, i32 125, !dbg !6183
  br label %1290, !dbg !6184

; <label>:1278:                                   ; preds = %1266
  %1279 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6185, !tbaa !3115
  %1280 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1279, i64 0, i32 210, !dbg !6186
  br label %1290, !dbg !6187

; <label>:1281:                                   ; preds = %1266
  %1282 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6188, !tbaa !3115
  %1283 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1282, i64 0, i32 105, !dbg !6189
  br label %1290, !dbg !6190

; <label>:1284:                                   ; preds = %1266
  %1285 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6191, !tbaa !3115
  %1286 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1285, i64 0, i32 109, !dbg !6192
  br label %1290, !dbg !6193

; <label>:1287:                                   ; preds = %1266
  %1288 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6194, !tbaa !3115
  %1289 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1288, i64 0, i32 103, !dbg !6195
  br label %1290, !dbg !6196

; <label>:1290:                                   ; preds = %1287, %1284, %1281, %1278, %1275, %1272, %1269, %1266, %1260
  %1291 = phi i64* [ %1289, %1287 ], [ %1286, %1284 ], [ %1283, %1281 ], [ %1280, %1278 ], [ %1277, %1275 ], [ %1274, %1272 ], [ %1271, %1269 ], [ %1263, %1266 ], [ %1263, %1260 ]
  call void @llvm.dbg.value(metadata i64* %1291, metadata !6162, metadata !DIExpression()), !dbg !6197
  %1292 = icmp eq i32 %1261, 0, !dbg !6198
  br i1 %1292, label %1293, label %1302, !dbg !6200

; <label>:1293:                                   ; preds = %1290
  %1294 = load i32, i32* @secure, align 4, !dbg !6201, !tbaa !3060
  %1295 = load i32, i32* @sandbox, align 4, !dbg !6202
  %1296 = or i32 %1294, %21, !dbg !6203
  %1297 = or i32 %1296, %1295, !dbg !6203
  %1298 = icmp eq i32 %1297, 0, !dbg !6203
  br i1 %1298, label %1302, label %1299, !dbg !6203

; <label>:1299:                                   ; preds = %1293
  %1300 = load i64, i64* %1291, align 8, !dbg !6204, !tbaa !4248
  %1301 = or i64 %1300, 8388608, !dbg !6205
  store i64 %1301, i64* %1291, align 8, !dbg !6206, !tbaa !4248
  br label %1306, !dbg !6207

; <label>:1302:                                   ; preds = %1293, %1290
  br i1 %454, label %1303, label %1306, !dbg !6208

; <label>:1303:                                   ; preds = %1302
  %1304 = load i64, i64* %1291, align 8, !dbg !6209, !tbaa !4248
  %1305 = and i64 %1304, -8388609, !dbg !6211
  store i64 %1305, i64* %1291, align 8, !dbg !6212, !tbaa !4248
  br label %1306, !dbg !6213

; <label>:1306:                                   ; preds = %456, %456, %501, %1302, %567, %515, %619, %633, %630, %626, %1257, %1299, %1303
  %1307 = phi i8* [ %1258, %1303 ], [ %1258, %1302 ], [ %1258, %1299 ], [ %1258, %1257 ], [ %314, %626 ], [ %314, %630 ], [ %314, %633 ], [ %314, %619 ], [ %314, %515 ], [ %314, %501 ], [ %314, %456 ], [ %314, %456 ], [ %314, %567 ]
  %1308 = phi i8* [ %1259, %1303 ], [ %1259, %1302 ], [ %1259, %1299 ], [ %1259, %1257 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0), %626 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0), %630 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0), %633 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %619 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %515 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_trailing, i64 0, i64 0), %501 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %456 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %456 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0), %567 ]
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %717, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #11, !dbg !6214
  br label %1311

; <label>:1309:                                   ; preds = %982, %909
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %717, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #11, !dbg !6214
  br label %1388

; <label>:1310:                                   ; preds = %1225
  call void @vim_free(i8* %1184) #11, !dbg !6113
  call void @vim_free(i8* %1185) #11, !dbg !6114
  call void @vim_free(i8* %1186) #11, !dbg !6115
  call void @vim_free(i8* %1187) #11, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %1226, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %717, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #11, !dbg !6214
  br label %1311

; <label>:1311:                                   ; preds = %1310, %1306, %433, %438, %290, %381, %349, %345, %345, %333, %330, %268, %113, %317, %324, %315, %287
  %1312 = phi i8* [ %43, %287 ], [ %314, %315 ], [ %314, %317 ], [ %314, %324 ], [ %314, %345 ], [ %717, %1310 ], [ %43, %113 ], [ %43, %268 ], [ %43, %290 ], [ %314, %330 ], [ %314, %333 ], [ %314, %345 ], [ %314, %349 ], [ %314, %381 ], [ %314, %438 ], [ %314, %433 ], [ %1307, %1306 ]
  %1313 = phi i32 [ %42, %287 ], [ %42, %315 ], [ %42, %317 ], [ %42, %324 ], [ %42, %345 ], [ %42, %1310 ], [ %42, %113 ], [ %42, %268 ], [ %42, %290 ], [ %42, %330 ], [ %42, %333 ], [ %42, %345 ], [ %42, %349 ], [ %42, %381 ], [ %403, %438 ], [ %403, %433 ], [ %42, %1306 ]
  %1314 = phi i32 [ %41, %287 ], [ %41, %315 ], [ %41, %317 ], [ %41, %324 ], [ %41, %345 ], [ %386, %1310 ], [ %41, %113 ], [ %41, %268 ], [ %41, %290 ], [ %41, %330 ], [ %41, %333 ], [ %41, %345 ], [ %41, %349 ], [ %378, %381 ], [ %386, %438 ], [ %386, %433 ], [ %386, %1306 ]
  %1315 = phi i8* [ null, %287 ], [ null, %315 ], [ null, %317 ], [ null, %324 ], [ null, %345 ], [ %1226, %1310 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %113 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0), %268 ], [ %297, %290 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.62, i64 0, i64 0), %330 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.63, i64 0, i64 0), %333 ], [ null, %345 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_sandbox, i64 0, i64 0), %349 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_trailing, i64 0, i64 0), %381 ], [ %445, %438 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0), %433 ], [ %1308, %1306 ]
  call void @llvm.dbg.value(metadata i8* %1315, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1314, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1313, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1312, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i32 0, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 0, i32* %9, align 4, !tbaa !3060
  %1316 = load i8*, i8** %7, align 8, !dbg !6215, !tbaa !3115
  br label %1317, !dbg !6219

; <label>:1317:                                   ; preds = %1337, %1311
  %1318 = phi i8* [ %1316, %1311 ], [ %1338, %1337 ], !dbg !6215
  call void @llvm.dbg.value(metadata i8* %1318, metadata !4968, metadata !DIExpression()), !dbg !5028
  %1319 = load i8, i8* %1318, align 1, !dbg !6220, !tbaa !3150
  switch i8 %1319, label %1320 [
    i8 0, label %1329
    i8 32, label %1329
    i8 9, label %1329
  ], !dbg !6221

; <label>:1320:                                   ; preds = %1317
  call void @llvm.dbg.value(metadata i8* %1318, metadata !4968, metadata !DIExpression()), !dbg !5028
  %1321 = getelementptr inbounds i8, i8* %1318, i64 1, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1321, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %1321, i8** %7, align 8, !dbg !6222, !tbaa !3115
  %1322 = load i8, i8* %1318, align 1, !dbg !6224, !tbaa !3150
  %1323 = icmp eq i8 %1322, 92, !dbg !6225
  br i1 %1323, label %1324, label %1337, !dbg !6226

; <label>:1324:                                   ; preds = %1320
  %1325 = load i8, i8* %1321, align 1, !dbg !6227, !tbaa !3150
  %1326 = icmp eq i8 %1325, 0, !dbg !6228
  br i1 %1326, label %1337, label %1327, !dbg !6229

; <label>:1327:                                   ; preds = %1324
  %1328 = getelementptr inbounds i8, i8* %1318, i64 2, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %1328, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %1328, i8** %7, align 8, !dbg !6230, !tbaa !3115
  br label %1337, !dbg !6230

; <label>:1329:                                   ; preds = %1317, %1317, %1317
  %1330 = call i8* @skipwhite(i8* %1318) #11, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %1330, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %1330, i8** %7, align 8, !dbg !6232, !tbaa !3115
  %1331 = load i8, i8* %1330, align 1, !dbg !6233, !tbaa !3150
  %1332 = icmp eq i8 %1331, 61, !dbg !6235
  br i1 %1332, label %1333, label %1339, !dbg !6236

; <label>:1333:                                   ; preds = %1329
  %1334 = load i32, i32* %9, align 4, !dbg !6237, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1334, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1335 = add nsw i32 %1334, 1, !dbg !6237
  store i32 %1335, i32* %9, align 4, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1335, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1336 = icmp slt i32 %1334, 1, !dbg !6238
  br i1 %1336, label %1337, label %1339, !dbg !6219

; <label>:1337:                                   ; preds = %1333, %1324, %1327, %1320
  %1338 = phi i8* [ %1330, %1333 ], [ %1321, %1324 ], [ %1328, %1327 ], [ %1321, %1320 ]
  br label %1317, !dbg !5028, !llvm.loop !6239

; <label>:1339:                                   ; preds = %1329, %1333
  call void @llvm.dbg.value(metadata i8* %1315, metadata !4971, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1314, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1313, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1312, metadata !4985, metadata !DIExpression()), !dbg !5034
  %1340 = icmp eq i8* %1315, null, !dbg !6242
  br i1 %1340, label %1380, label %1341, !dbg !6244

; <label>:1341:                                   ; preds = %1339
  %1342 = load i8*, i8** @IObuff, align 8, !dbg !6245, !tbaa !3115
  %1343 = call i8* @dcgettext(i8* null, i8* nonnull %1315, i32 5) #11, !dbg !6247
  call void @vim_strncpy(i8* %1342, i8* %1343, i64 1024) #11, !dbg !6248
  %1344 = load i8*, i8** @IObuff, align 8, !dbg !6249, !tbaa !3115
  %1345 = call i64 @strlen(i8* %1344) #12, !dbg !6249
  %1346 = trunc i64 %1345 to i32, !dbg !6250
  %1347 = add nsw i32 %1346, 2, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %1347, metadata !4981, metadata !DIExpression()), !dbg !5572
  store i32 %1347, i32* %9, align 4, !dbg !6252, !tbaa !3060
  %1348 = sext i32 %1347 to i64, !dbg !6253
  %1349 = bitcast i8** %7 to i64*, !dbg !6255
  %1350 = load i64, i64* %1349, align 8, !dbg !6255, !tbaa !3115
  call void @llvm.dbg.value(metadata i8** %7, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !5028
  %1351 = ptrtoint i8* %40 to i64, !dbg !6256
  %1352 = sub i64 %1350, %1351, !dbg !6256
  %1353 = add nsw i64 %1352, %1348, !dbg !6257
  %1354 = icmp slt i64 %1353, 1025, !dbg !6258
  br i1 %1354, label %1355, label %1372, !dbg !6259

; <label>:1355:                                   ; preds = %1341
  %1356 = call i64 @strlen(i8* %1344), !dbg !6260
  %1357 = getelementptr i8, i8* %1344, i64 %1356, !dbg !6260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1357, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i64 0, i64 0), i64 3, i32 1, i1 false), !dbg !6260
  %1358 = load i8*, i8** @IObuff, align 8, !dbg !6262, !tbaa !3115
  %1359 = load i32, i32* %9, align 4, !dbg !6262, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1359, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1360 = sext i32 %1359 to i64, !dbg !6262
  %1361 = getelementptr inbounds i8, i8* %1358, i64 %1360, !dbg !6262
  %1362 = load i64, i64* %1349, align 8, !dbg !6262, !tbaa !3115
  call void @llvm.dbg.value(metadata i8** %7, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !5028
  %1363 = sub i64 %1362, %1351, !dbg !6262
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1361, i8* %40, i64 %1363, i32 1, i1 false), !dbg !6262
  %1364 = load i8*, i8** @IObuff, align 8, !dbg !6263, !tbaa !3115
  %1365 = load i32, i32* %9, align 4, !dbg !6264, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %1365, metadata !4981, metadata !DIExpression()), !dbg !5572
  %1366 = sext i32 %1365 to i64, !dbg !6264
  %1367 = load i64, i64* %1349, align 8, !dbg !6265, !tbaa !3115
  call void @llvm.dbg.value(metadata i8** %7, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !5028
  %1368 = sub i64 %1367, %1351, !dbg !6266
  %1369 = add nsw i64 %1368, %1366, !dbg !6267
  %1370 = getelementptr inbounds i8, i8* %1364, i64 %1369, !dbg !6263
  store i8 0, i8* %1370, align 1, !dbg !6268, !tbaa !3150
  %1371 = load i8*, i8** @IObuff, align 8, !dbg !6269, !tbaa !3115
  br label %1372, !dbg !6270

; <label>:1372:                                   ; preds = %1355, %1341
  %1373 = phi i8* [ %1371, %1355 ], [ %1344, %1341 ], !dbg !6269
  call void @trans_characters(i8* %1373, i32 1025) #11, !dbg !6271
  %1374 = load i32, i32* @no_wait_return, align 4, !dbg !6272, !tbaa !3060
  %1375 = add nsw i32 %1374, 1, !dbg !6272
  store i32 %1375, i32* @no_wait_return, align 4, !dbg !6272, !tbaa !3060
  %1376 = load i8*, i8** @IObuff, align 8, !dbg !6273, !tbaa !3115
  %1377 = call i32 @emsg(i8* %1376) #11, !dbg !6274
  %1378 = load i32, i32* @no_wait_return, align 4, !dbg !6275, !tbaa !3060
  %1379 = add nsw i32 %1378, -1, !dbg !6275
  store i32 %1379, i32* @no_wait_return, align 4, !dbg !6275, !tbaa !3060
  br label %1395, !dbg !6276

; <label>:1380:                                   ; preds = %62, %60, %67, %1339
  %1381 = phi i32 [ %1314, %1339 ], [ %41, %67 ], [ %41, %60 ], [ %41, %62 ]
  %1382 = phi i32 [ %1313, %1339 ], [ 1, %67 ], [ %42, %60 ], [ 1, %62 ]
  %1383 = phi i8* [ %1312, %1339 ], [ %43, %67 ], [ %43, %60 ], [ %43, %62 ]
  %1384 = load i8*, i8** %7, align 8, !dbg !6277, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %1384, metadata !4968, metadata !DIExpression()), !dbg !5028
  %1385 = call i8* @skipwhite(i8* %1384) #11, !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1385, metadata !4968, metadata !DIExpression()), !dbg !5028
  store i8* %1385, i8** %7, align 8, !dbg !6279, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 %1381, metadata !4990, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1382, metadata !4986, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1383, metadata !4985, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %1385, metadata !4968, metadata !DIExpression()), !dbg !5028
  %1386 = load i8, i8* %1385, align 1, !dbg !6280, !tbaa !3150
  %1387 = icmp eq i8 %1386, 0, !dbg !6281
  br i1 %1387, label %1388, label %39, !dbg !5046, !llvm.loop !6282

; <label>:1388:                                   ; preds = %1380, %1309, %19
  %1389 = phi i32 [ 1, %19 ], [ %42, %1309 ], [ %1382, %1380 ]
  call void @llvm.dbg.value(metadata i32 %1389, metadata !4986, metadata !DIExpression()), !dbg !5035
  %1390 = load i32, i32* @silent_mode, align 4, !dbg !6284, !tbaa !3060
  %1391 = icmp ne i32 %1390, 0, !dbg !6284
  %1392 = icmp ne i32 %1389, 0, !dbg !6286
  %1393 = and i1 %1392, %1391, !dbg !6287
  br i1 %1393, label %1394, label %1395, !dbg !6287

; <label>:1394:                                   ; preds = %1388
  store i32 0, i32* @silent_mode, align 4, !dbg !6288, !tbaa !3060
  store i32 1, i32* @info_message, align 4, !dbg !6290, !tbaa !3060
  call void @msg_putchar(i32 10) #11, !dbg !6291
  call void @cursor_on() #11, !dbg !6292
  call void @out_flush() #11, !dbg !6293
  store i32 1, i32* @silent_mode, align 4, !dbg !6294, !tbaa !3060
  store i32 0, i32* @info_message, align 4, !dbg !6295, !tbaa !3060
  br label %1395, !dbg !6296

; <label>:1395:                                   ; preds = %1388, %1394, %1372
  %1396 = phi i32 [ 0, %1372 ], [ 1, %1394 ], [ 1, %1388 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #11, !dbg !6297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11, !dbg !6297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11, !dbg !6297
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #11, !dbg !6297
  ret i32 %1396, !dbg !6297
}

; Function Attrs: nounwind uwtable
define internal fastcc void @showoptions(i32, i32) unnamed_addr #0 !dbg !6298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6302, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 %1, metadata !6303, metadata !DIExpression()), !dbg !6317
  %3 = tail call i8* @alloc(i64 4064) #11, !dbg !6318
  %4 = bitcast i8* %3 to %struct.vimoption**, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.vimoption** %4, metadata !6308, metadata !DIExpression()), !dbg !6319
  %5 = icmp eq i8* %3, null, !dbg !6320
  br i1 %5, label %196, label %6, !dbg !6322

; <label>:6:                                      ; preds = %2
  %7 = icmp eq i32 %0, 2, !dbg !6323
  br i1 %7, label %8, label %10, !dbg !6325

; <label>:8:                                      ; preds = %6
  %9 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1060, i64 0, i64 0), i32 5) #11, !dbg !6326
  tail call void @msg_puts_title(i8* %9) #11, !dbg !6327
  br label %22, !dbg !6327

; <label>:10:                                     ; preds = %6
  %11 = and i32 %1, 2, !dbg !6328
  %12 = icmp eq i32 %11, 0, !dbg !6328
  br i1 %12, label %15, label %13, !dbg !6330

; <label>:13:                                     ; preds = %10
  %14 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1061, i64 0, i64 0), i32 5) #11, !dbg !6331
  tail call void @msg_puts_title(i8* %14) #11, !dbg !6332
  br label %22, !dbg !6332

; <label>:15:                                     ; preds = %10
  %16 = and i32 %1, 4, !dbg !6333
  %17 = icmp eq i32 %16, 0, !dbg !6333
  br i1 %17, label %20, label %18, !dbg !6335

; <label>:18:                                     ; preds = %15
  %19 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1062, i64 0, i64 0), i32 5) #11, !dbg !6336
  tail call void @msg_puts_title(i8* %19) #11, !dbg !6337
  br label %22, !dbg !6337

; <label>:20:                                     ; preds = %15
  %21 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1063, i64 0, i64 0), i32 5) #11, !dbg !6338
  tail call void @msg_puts_title(i8* %21) #11, !dbg !6339
  br label %22

; <label>:22:                                     ; preds = %13, %20, %18, %8
  call void @llvm.dbg.value(metadata i32 1, metadata !6310, metadata !DIExpression()), !dbg !6340
  %23 = and i32 %1, 6
  %24 = icmp eq i32 %23, 0
  %25 = icmp ne i32 %0, 1
  %26 = icmp eq i32 %0, 0
  %27 = and i32 %1, 64
  %28 = icmp eq i32 %27, 0
  br label %29, !dbg !6341

; <label>:29:                                     ; preds = %22, %192
  %30 = phi i32 [ 1, %22 ], [ %193, %192 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !6310, metadata !DIExpression()), !dbg !6340
  %31 = load volatile i32, i32* @got_int, align 4, !dbg !6344, !tbaa !3060
  %32 = icmp eq i32 %31, 0, !dbg !6345
  br i1 %32, label %33, label %195, !dbg !6346

; <label>:33:                                     ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !6309, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata %struct.vimoption* getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), metadata !6304, metadata !DIExpression()), !dbg !6348
  %34 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !6349, !tbaa !3453
  %35 = icmp eq i8* %34, null, !dbg !6353
  br i1 %35, label %151, label %36, !dbg !6354

; <label>:36:                                     ; preds = %33
  %37 = icmp eq i32 %30, 1
  %38 = icmp eq i32 %30, 2
  br label %39, !dbg !6354

; <label>:39:                                     ; preds = %36, %146
  %40 = phi i8* [ %34, %36 ], [ %149, %146 ]
  %41 = phi i8** [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), %36 ], [ %148, %146 ]
  %42 = phi i32 [ 0, %36 ], [ %147, %146 ]
  %43 = bitcast i8** %41 to %struct.vimoption*
  call void @llvm.dbg.value(metadata i32 %42, metadata !6309, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata %struct.vimoption* %43, metadata !6304, metadata !DIExpression()), !dbg !6348
  %44 = tail call i32 @message_filtered(i8* nonnull %40) #11, !dbg !6355
  %45 = icmp eq i32 %44, 0, !dbg !6355
  br i1 %45, label %46, label %146, !dbg !6358

; <label>:46:                                     ; preds = %39
  call void @llvm.dbg.value(metadata i8* null, metadata !6307, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata %struct.vimoption* undef, metadata !3489, metadata !DIExpression()), !dbg !6360
  %47 = load i8*, i8** %41, align 8, !dbg !6362, !tbaa !3453
  %48 = load i8, i8* %47, align 1, !dbg !6363, !tbaa !3150
  %49 = icmp eq i8 %48, 116, !dbg !6364
  br i1 %49, label %50, label %55, !dbg !6365

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !6366
  %52 = load i8, i8* %51, align 1, !dbg !6366, !tbaa !3150
  %53 = icmp eq i8 %52, 95, !dbg !6367
  %54 = zext i1 %53 to i32
  br label %55

; <label>:55:                                     ; preds = %46, %50
  %56 = phi i32 [ 0, %46 ], [ %54, %50 ]
  call void @llvm.dbg.value(metadata i32 %56, metadata !6306, metadata !DIExpression()), !dbg !6368
  br i1 %24, label %66, label %57, !dbg !6369

; <label>:57:                                     ; preds = %55
  %58 = getelementptr inbounds i8*, i8** %41, i64 4, !dbg !6370
  %59 = bitcast i8** %58 to i32*, !dbg !6370
  %60 = load i32, i32* %59, align 8, !dbg !6370, !tbaa !4220
  %61 = icmp eq i32 %60, 0, !dbg !6374
  %62 = icmp ne i32 %56, 0, !dbg !6375
  %63 = or i1 %62, %61, !dbg !6376
  br i1 %63, label %146, label %64, !dbg !6376

; <label>:64:                                     ; preds = %57
  %65 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %43, i32 %1), !dbg !6377
  call void @llvm.dbg.value(metadata i8* %65, metadata !6307, metadata !DIExpression()), !dbg !6359
  br label %68, !dbg !6378

; <label>:66:                                     ; preds = %55
  %67 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %43), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %67, metadata !6307, metadata !DIExpression()), !dbg !6359
  br label %68

; <label>:68:                                     ; preds = %64, %66
  %69 = phi i8* [ %65, %64 ], [ %67, %66 ]
  call void @llvm.dbg.value(metadata i8* %69, metadata !6307, metadata !DIExpression()), !dbg !6359
  %70 = icmp eq i8* %69, null, !dbg !6380
  br i1 %70, label %146, label %71, !dbg !6382

; <label>:71:                                     ; preds = %68
  %72 = icmp ne i32 %56, 0, !dbg !6383
  %73 = and i1 %7, %72, !dbg !6384
  %74 = or i1 %25, %72, !dbg !6385
  %75 = xor i1 %73, %74, !dbg !6384
  br i1 %75, label %76, label %116, !dbg !6384

; <label>:76:                                     ; preds = %71
  br i1 %26, label %77, label %146, !dbg !6386

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* @p_cp, align 4, !dbg !6387, !tbaa !3060
  call void @llvm.dbg.value(metadata %struct.vimoption* %43, metadata !4234, metadata !DIExpression()) #11, !dbg !6388
  call void @llvm.dbg.value(metadata i8* %69, metadata !4235, metadata !DIExpression()) #11, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %78, metadata !4236, metadata !DIExpression()) #11, !dbg !6391
  %79 = getelementptr inbounds i8*, i8** %41, i64 2, !dbg !6392
  %80 = bitcast i8** %79 to i64*, !dbg !6392
  %81 = load i64, i64* %80, align 8, !dbg !6392, !tbaa !3107
  %82 = and i64 %81, 1024, !dbg !6393
  %83 = icmp eq i64 %82, 0, !dbg !6393
  %84 = icmp eq i32 %78, 0, !dbg !6394
  %85 = and i1 %84, %83, !dbg !6395
  %86 = and i64 %81, 2, !dbg !6396
  %87 = icmp eq i64 %86, 0, !dbg !6396
  br i1 %87, label %96, label %88, !dbg !6397

; <label>:88:                                     ; preds = %77
  %89 = bitcast i8* %69 to i64*, !dbg !6398
  %90 = load i64, i64* %89, align 8, !dbg !6398, !tbaa !4248
  %91 = zext i1 %85 to i64, !dbg !6399
  %92 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %43, i64 0, i32 5, i64 %91, !dbg !6399
  %93 = bitcast i8** %92 to i64*, !dbg !6399
  %94 = load i64, i64* %93, align 8, !dbg !6399, !tbaa !3115
  %95 = icmp eq i64 %90, %94, !dbg !6400
  br i1 %95, label %146, label %116, !dbg !6401

; <label>:96:                                     ; preds = %77
  %97 = and i64 %81, 1, !dbg !6402
  %98 = icmp eq i64 %97, 0, !dbg !6402
  br i1 %98, label %108, label %99, !dbg !6403

; <label>:99:                                     ; preds = %96
  %100 = bitcast i8* %69 to i32*, !dbg !6404
  %101 = load i32, i32* %100, align 4, !dbg !6404, !tbaa !3060
  %102 = zext i1 %85 to i64, !dbg !6405
  %103 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %43, i64 0, i32 5, i64 %102, !dbg !6405
  %104 = bitcast i8** %103 to i64*, !dbg !6405
  %105 = load i64, i64* %104, align 8, !dbg !6405, !tbaa !3115
  %106 = trunc i64 %105 to i32, !dbg !6406
  %107 = icmp eq i32 %101, %106, !dbg !6407
  br i1 %107, label %146, label %116, !dbg !6401

; <label>:108:                                    ; preds = %96
  %109 = bitcast i8* %69 to i8**, !dbg !6408
  %110 = load i8*, i8** %109, align 8, !dbg !6408, !tbaa !3115
  %111 = zext i1 %85 to i64, !dbg !6408
  %112 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %43, i64 0, i32 5, i64 %111, !dbg !6408
  %113 = load i8*, i8** %112, align 8, !dbg !6408, !tbaa !3115
  %114 = tail call i32 @strcmp(i8* %110, i8* %113) #12, !dbg !6408
  %115 = icmp eq i32 %114, 0, !dbg !6409
  br i1 %115, label %146, label %116, !dbg !6401

; <label>:116:                                    ; preds = %99, %88, %108, %71
  br i1 %28, label %120, label %117, !dbg !6410

; <label>:117:                                    ; preds = %116
  %118 = load i64, i64* @Columns, align 8, !dbg !6412, !tbaa !4248
  %119 = trunc i64 %118 to i32, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %119, metadata !6315, metadata !DIExpression()), !dbg !6414
  br label %134, !dbg !6415

; <label>:120:                                    ; preds = %116
  %121 = getelementptr inbounds i8*, i8** %41, i64 2, !dbg !6416
  %122 = bitcast i8** %121 to i64*, !dbg !6416
  %123 = load i64, i64* %122, align 8, !dbg !6416, !tbaa !3107
  %124 = and i64 %123, 1, !dbg !6418
  %125 = icmp eq i64 %124, 0, !dbg !6418
  br i1 %125, label %126, label %134, !dbg !6419

; <label>:126:                                    ; preds = %120
  tail call fastcc void @option_value2string(%struct.vimoption* nonnull %43, i32 %1), !dbg !6420
  %127 = load i8*, i8** %41, align 8, !dbg !6422, !tbaa !3453
  %128 = tail call i64 @strlen(i8* %127) #12, !dbg !6422
  %129 = trunc i64 %128 to i32, !dbg !6423
  %130 = load i8*, i8** @NameBuff, align 8, !dbg !6424, !tbaa !3115
  %131 = tail call i32 @vim_strsize(i8* %130) #11, !dbg !6425
  %132 = add i32 %129, 1, !dbg !6426
  %133 = add i32 %132, %131, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %133, metadata !6315, metadata !DIExpression()), !dbg !6414
  br label %134

; <label>:134:                                    ; preds = %120, %126, %117
  %135 = phi i32 [ %119, %117 ], [ %133, %126 ], [ 1, %120 ]
  call void @llvm.dbg.value(metadata i32 %135, metadata !6315, metadata !DIExpression()), !dbg !6414
  %136 = icmp slt i32 %135, 18, !dbg !6428
  %137 = and i1 %37, %136, !dbg !6430
  %138 = icmp sgt i32 %135, 17, !dbg !6431
  %139 = and i1 %38, %138, !dbg !6432
  %140 = or i1 %137, %139, !dbg !6430
  br i1 %140, label %141, label %146, !dbg !6430

; <label>:141:                                    ; preds = %134
  %142 = add nsw i32 %42, 1, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %142, metadata !6309, metadata !DIExpression()), !dbg !6347
  %143 = sext i32 %42 to i64, !dbg !6434
  %144 = getelementptr inbounds %struct.vimoption*, %struct.vimoption** %4, i64 %143, !dbg !6434
  %145 = bitcast %struct.vimoption** %144 to i8***, !dbg !6435
  store i8** %41, i8*** %145, align 8, !dbg !6435, !tbaa !3115
  br label %146, !dbg !6434

; <label>:146:                                    ; preds = %99, %88, %134, %108, %57, %68, %39, %76, %141
  %147 = phi i32 [ %42, %39 ], [ %142, %141 ], [ %42, %108 ], [ %42, %76 ], [ %42, %68 ], [ %42, %57 ], [ %42, %134 ], [ %42, %88 ], [ %42, %99 ]
  %148 = getelementptr inbounds i8*, i8** %41, i64 10, !dbg !6436
  call void @llvm.dbg.value(metadata i8** %148, metadata !6304, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %147, metadata !6309, metadata !DIExpression()), !dbg !6347
  %149 = load i8*, i8** %148, align 8, !dbg !6349, !tbaa !3453
  %150 = icmp eq i8* %149, null, !dbg !6353
  br i1 %150, label %151, label %39, !dbg !6354, !llvm.loop !6437

; <label>:151:                                    ; preds = %146, %33
  %152 = phi i32 [ 0, %33 ], [ %147, %146 ]
  %153 = icmp eq i32 %30, 1, !dbg !6439
  br i1 %153, label %154, label %163, !dbg !6441

; <label>:154:                                    ; preds = %151
  %155 = load i64, i64* @Columns, align 8, !dbg !6442, !tbaa !4248
  %156 = sdiv i64 %155, 20, !dbg !6444
  %157 = trunc i64 %156 to i32, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %157, metadata !6313, metadata !DIExpression()), !dbg !6446
  %158 = icmp eq i32 %157, 0, !dbg !6447
  %159 = select i1 %158, i32 1, i32 %157, !dbg !6449
  call void @llvm.dbg.value(metadata i32 %159, metadata !6313, metadata !DIExpression()), !dbg !6446
  %160 = add i32 %152, -1, !dbg !6450
  %161 = add i32 %160, %159, !dbg !6451
  %162 = sdiv i32 %161, %159, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %162, metadata !6312, metadata !DIExpression()), !dbg !6453
  br label %163, !dbg !6454

; <label>:163:                                    ; preds = %151, %154
  %164 = phi i32 [ %162, %154 ], [ %152, %151 ]
  call void @llvm.dbg.value(metadata i32 %164, metadata !6312, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i32 0, metadata !6311, metadata !DIExpression()), !dbg !6455
  %165 = icmp sgt i32 %164, 0, !dbg !6456
  br i1 %165, label %166, label %192, !dbg !6459

; <label>:166:                                    ; preds = %163
  %167 = sext i32 %164 to i64, !dbg !6459
  %168 = sext i32 %152 to i64, !dbg !6459
  br label %169, !dbg !6459

; <label>:169:                                    ; preds = %166, %188
  %170 = phi i64 [ 0, %166 ], [ %191, %188 ]
  %171 = phi i32 [ 0, %166 ], [ %189, %188 ]
  call void @llvm.dbg.value(metadata i32 %171, metadata !6311, metadata !DIExpression()), !dbg !6455
  %172 = load volatile i32, i32* @got_int, align 4, !dbg !6460, !tbaa !3060
  %173 = icmp eq i32 %172, 0, !dbg !6461
  br i1 %173, label %174, label %192, !dbg !6462

; <label>:174:                                    ; preds = %169
  tail call void @msg_putchar(i32 10) #11, !dbg !6463
  %175 = load volatile i32, i32* @got_int, align 4, !dbg !6465, !tbaa !3060
  %176 = icmp eq i32 %175, 0, !dbg !6465
  br i1 %176, label %177, label %192, !dbg !6467

; <label>:177:                                    ; preds = %174
  call void @llvm.dbg.value(metadata i32 0, metadata !6305, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i32 %171, metadata !6314, metadata !DIExpression()), !dbg !6469
  %178 = icmp slt i32 %171, %152, !dbg !6470
  br i1 %178, label %179, label %188, !dbg !6473

; <label>:179:                                    ; preds = %177
  br label %180, !dbg !6474

; <label>:180:                                    ; preds = %179, %180
  %181 = phi i64 [ %186, %180 ], [ %170, %179 ]
  %182 = phi i32 [ %185, %180 ], [ 0, %179 ]
  call void @llvm.dbg.value(metadata i32 %182, metadata !6305, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i64 %181, metadata !6314, metadata !DIExpression()), !dbg !6469
  store i32 %182, i32* @msg_col, align 4, !dbg !6474, !tbaa !3060
  %183 = getelementptr inbounds %struct.vimoption*, %struct.vimoption** %4, i64 %181, !dbg !6476
  %184 = load %struct.vimoption*, %struct.vimoption** %183, align 8, !dbg !6476, !tbaa !3115
  tail call fastcc void @showoneopt(%struct.vimoption* %184, i32 %1), !dbg !6477
  %185 = add nuw nsw i32 %182, 20, !dbg !6478
  %186 = add i64 %181, %167, !dbg !6479
  call void @llvm.dbg.value(metadata i32 %185, metadata !6305, metadata !DIExpression()), !dbg !6468
  %187 = icmp slt i64 %186, %168, !dbg !6470
  br i1 %187, label %180, label %188, !dbg !6473, !llvm.loop !6480

; <label>:188:                                    ; preds = %180, %177
  tail call void @out_flush() #11, !dbg !6482
  tail call void @ui_breakcheck() #11, !dbg !6483
  %189 = add nuw nsw i32 %171, 1, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %189, metadata !6311, metadata !DIExpression()), !dbg !6455
  %190 = icmp slt i32 %189, %164, !dbg !6456
  %191 = add nuw nsw i64 %170, 1, !dbg !6459
  br i1 %190, label %169, label %192, !dbg !6459, !llvm.loop !6485

; <label>:192:                                    ; preds = %188, %169, %174, %163
  %193 = add nuw nsw i32 %30, 1, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %193, metadata !6310, metadata !DIExpression()), !dbg !6340
  %194 = icmp ult i32 %193, 3, !dbg !6488
  br i1 %194, label %29, label %195, !dbg !6341, !llvm.loop !6489

; <label>:195:                                    ; preds = %192, %29
  tail call void @vim_free(i8* nonnull %3) #11, !dbg !6491
  br label %196, !dbg !6492

; <label>:196:                                    ; preds = %2, %195
  ret void, !dbg !6492
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #8

declare void @redraw_all_later(i32) local_unnamed_addr #3

declare void @show_termcodes() local_unnamed_addr #3

declare i8* @vim_strchr(i8*, i32) local_unnamed_addr #3

declare void @msg_putchar(i32) local_unnamed_addr #3

declare void @gotocmdline(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @showoneopt(%struct.vimoption* nocapture readonly, i32) unnamed_addr #0 !dbg !6493 {
  call void @llvm.dbg.value(metadata %struct.vimoption* %0, metadata !6497, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %1, metadata !6498, metadata !DIExpression()), !dbg !6502
  %3 = load i32, i32* @silent_mode, align 4, !dbg !6503, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %3, metadata !6500, metadata !DIExpression()), !dbg !6504
  store i32 0, i32* @silent_mode, align 4, !dbg !6505, !tbaa !3060
  store i32 1, i32* @info_message, align 4, !dbg !6506, !tbaa !3060
  %4 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* %0, i32 %1), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %4, metadata !6499, metadata !DIExpression()), !dbg !6508
  %5 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 2, !dbg !6509
  %6 = load i64, i64* %5, align 8, !dbg !6509, !tbaa !3107
  %7 = and i64 %6, 1, !dbg !6511
  %8 = icmp eq i64 %7, 0, !dbg !6511
  br i1 %8, label %30, label %9, !dbg !6512

; <label>:9:                                      ; preds = %2
  %10 = bitcast i8* %4 to i32*, !dbg !6513
  %11 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6514, !tbaa !3115
  %12 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 15, !dbg !6515
  %13 = icmp eq i32* %12, %10, !dbg !6516
  br i1 %13, label %14, label %17, !dbg !6517

; <label>:14:                                     ; preds = %9
  %15 = tail call i32 @curbufIsChanged() #11, !dbg !6518
  %16 = icmp eq i32 %15, 0, !dbg !6518
  br i1 %16, label %20, label %21, !dbg !6513

; <label>:17:                                     ; preds = %9
  %18 = load i32, i32* %10, align 4, !dbg !6519, !tbaa !3060
  %19 = icmp eq i32 %18, 0, !dbg !6519
  br i1 %19, label %20, label %25, !dbg !6517

; <label>:20:                                     ; preds = %14, %17
  tail call void @msg_puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !6520
  br label %31, !dbg !6520

; <label>:21:                                     ; preds = %14
  %22 = load i64, i64* %5, align 8, !dbg !6521, !tbaa !3107
  %23 = and i64 %22, 1, !dbg !6523
  %24 = icmp eq i64 %23, 0, !dbg !6523
  br i1 %24, label %30, label %25, !dbg !6524

; <label>:25:                                     ; preds = %17, %21
  %26 = bitcast i8* %4 to i32*, !dbg !6525
  %27 = load i32, i32* %26, align 4, !dbg !6525, !tbaa !3060
  %28 = icmp slt i32 %27, 0, !dbg !6526
  br i1 %28, label %29, label %30, !dbg !6527

; <label>:29:                                     ; preds = %25
  tail call void @msg_puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1064, i64 0, i64 0)) #11, !dbg !6528
  br label %31, !dbg !6528

; <label>:30:                                     ; preds = %2, %21, %25
  tail call void @msg_puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1065, i64 0, i64 0)) #11, !dbg !6529
  br label %31

; <label>:31:                                     ; preds = %29, %30, %20
  %32 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 0, !dbg !6530
  %33 = load i8*, i8** %32, align 8, !dbg !6530, !tbaa !3453
  tail call void @msg_puts(i8* %33) #11, !dbg !6531
  %34 = load i64, i64* %5, align 8, !dbg !6532, !tbaa !3107
  %35 = and i64 %34, 1, !dbg !6534
  %36 = icmp eq i64 %35, 0, !dbg !6534
  br i1 %36, label %37, label %40, !dbg !6535

; <label>:37:                                     ; preds = %31
  tail call void @msg_putchar(i32 61) #11, !dbg !6536
  tail call fastcc void @option_value2string(%struct.vimoption* nonnull %0, i32 %1), !dbg !6538
  %38 = load i8*, i8** @NameBuff, align 8, !dbg !6539, !tbaa !3115
  %39 = tail call i32 @msg_outtrans(i8* %38) #11, !dbg !6540
  br label %40, !dbg !6541

; <label>:40:                                     ; preds = %31, %37
  store i32 %3, i32* @silent_mode, align 4, !dbg !6542, !tbaa !3060
  store i32 0, i32* @info_message, align 4, !dbg !6543, !tbaa !3060
  ret void, !dbg !6544
}

declare void @last_set_msg(%struct.sctx_T* byval align 8) local_unnamed_addr #3

declare i8* @find_termcode(i8*) local_unnamed_addr #3

declare i32 @show_one_termcode(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @set_bool_option(i32, i8*, i32, i32) unnamed_addr #0 !dbg !2966 {
  %5 = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %0, metadata !2970, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i8* %1, metadata !2971, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.value(metadata i32 %2, metadata !2972, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %3, metadata !2973, metadata !DIExpression()), !dbg !6548
  %6 = bitcast i8* %1 to i32*, !dbg !6549
  %7 = load i32, i32* %6, align 4, !dbg !6549, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %7, metadata !2974, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 0, metadata !2975, metadata !DIExpression()), !dbg !6551
  %8 = load i32, i32* @secure, align 4, !dbg !6552, !tbaa !3060
  %9 = load i32, i32* @sandbox, align 4, !dbg !6554
  %10 = or i32 %9, %8, !dbg !6555
  %11 = icmp eq i32 %10, 0, !dbg !6555
  br i1 %11, label %18, label %12, !dbg !6555

; <label>:12:                                     ; preds = %4
  %13 = sext i32 %0 to i64, !dbg !6556
  %14 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %13, i32 2, !dbg !6557
  %15 = load i64, i64* %14, align 16, !dbg !6557, !tbaa !3107
  %16 = and i64 %15, 524288, !dbg !6558
  %17 = icmp eq i64 %16, 0, !dbg !6558
  br i1 %17, label %18, label %819, !dbg !6559

; <label>:18:                                     ; preds = %12, %4
  %19 = and i32 %3, 6, !dbg !6560
  %20 = icmp eq i32 %19, 0, !dbg !6562
  %21 = sext i32 %0 to i64
  br i1 %20, label %24, label %22, !dbg !6563

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 4, !dbg !6564
  br label %42, !dbg !6563

; <label>:24:                                     ; preds = %18
  %25 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, !dbg !6566
  call void @llvm.dbg.value(metadata %struct.vimoption* %25, metadata !4275, metadata !DIExpression()) #11, !dbg !6567
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !6569
  %26 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 4, !dbg !6570
  %27 = load i32, i32* %26, align 16, !dbg !6570, !tbaa !4220
  %28 = icmp eq i32 %27, 0, !dbg !6571
  br i1 %28, label %36, label %29, !dbg !6572

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 3, !dbg !6573
  %31 = load i8*, i8** %30, align 8, !dbg !6573, !tbaa !3461
  %32 = icmp eq i8* %31, inttoptr (i64 -1 to i8*), !dbg !6574
  br i1 %32, label %33, label %38, !dbg !6575

; <label>:33:                                     ; preds = %29
  %34 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %25) #11, !dbg !6576
  %35 = getelementptr inbounds i8, i8* %34, i64 1376, !dbg !6576
  br label %38, !dbg !6577

; <label>:36:                                     ; preds = %24
  %37 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %25) #11, !dbg !6578
  br label %38, !dbg !6579

; <label>:38:                                     ; preds = %29, %33, %36
  %39 = phi i8* [ %35, %33 ], [ %37, %36 ], [ %31, %29 ]
  %40 = bitcast i8* %39 to i32*, !dbg !6580
  %41 = load i32, i32* %40, align 4, !dbg !6580, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %41, metadata !2975, metadata !DIExpression()), !dbg !6551
  br label %42, !dbg !6581

; <label>:42:                                     ; preds = %22, %38
  %43 = phi i32* [ %23, %22 ], [ %26, %38 ], !dbg !6564
  %44 = phi i32 [ 0, %22 ], [ %41, %38 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !2975, metadata !DIExpression()), !dbg !6551
  store i32 %2, i32* %6, align 4, !dbg !6582, !tbaa !3060
  %45 = load i64, i64* bitcast (%struct.sctx_T* @current_sctx to i64*), align 8, !dbg !6583
  call void @llvm.dbg.value(metadata i64 %45, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !6584
  %46 = load i64, i64* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 2), align 8, !dbg !6583
  call void @llvm.dbg.value(metadata i64 %46, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !6584
  %47 = load i64, i64* bitcast (i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 3) to i64*), align 8, !dbg !6583
  call void @llvm.dbg.value(metadata i64 %47, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !6584
  call void @llvm.dbg.value(metadata i32 %0, metadata !4571, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i32 %3, metadata !4572, metadata !DIExpression()), !dbg !6585
  %48 = icmp ne i32 %19, 0, !dbg !6586
  %49 = load i32, i32* %43, align 16, !dbg !6564, !tbaa !4220
  call void @llvm.dbg.value(metadata i32 %49, metadata !4575, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i64 %46, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !6588
  call void @llvm.dbg.value(metadata i64 %47, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !6588
  %50 = and i32 %3, 8, !dbg !6589
  %51 = icmp eq i32 %50, 0, !dbg !6589
  br i1 %51, label %52, label %60, !dbg !6590

; <label>:52:                                     ; preds = %42
  %53 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !6591, !tbaa !3217
  %54 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !6591, !tbaa !3229
  %55 = add nsw i32 %54, -1, !dbg !6591
  %56 = sext i32 %55 to i64, !dbg !6591
  %57 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %53, i64 %56, i32 0, !dbg !6591
  %58 = load i64, i64* %57, align 8, !dbg !6591, !tbaa !4588
  %59 = add nsw i64 %58, %46, !dbg !6592
  call void @llvm.dbg.value(metadata i64 %59, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !6588
  br label %60, !dbg !6593

; <label>:60:                                     ; preds = %52, %42
  %61 = phi i64 [ %46, %42 ], [ %59, %52 ]
  call void @llvm.dbg.value(metadata i64 %61, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !6588
  %62 = and i32 %3, 2, !dbg !6594
  %63 = icmp eq i32 %62, 0, !dbg !6594
  %64 = and i1 %48, %63, !dbg !6595
  %65 = xor i1 %64, true, !dbg !6595
  %66 = and i32 %49, 24576, !dbg !6596
  %67 = icmp eq i32 %66, 0, !dbg !6597
  %68 = or i1 %67, %65, !dbg !6595
  br i1 %68, label %69, label %75, !dbg !6595

; <label>:69:                                     ; preds = %60
  %70 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 6, !dbg !6598
  %71 = bitcast %struct.sctx_T* %70 to i64*, !dbg !6598
  store i64 %45, i64* %71, align 8, !dbg !6598
  %72 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 6, i32 2, !dbg !6598
  store i64 %61, i64* %72, align 8, !dbg !6598
  %73 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 6, i32 3, !dbg !6598
  %74 = bitcast i32* %73 to i64*, !dbg !6598
  store i64 %47, i64* %74, align 8, !dbg !6598
  br label %75, !dbg !6599

; <label>:75:                                     ; preds = %69, %60
  %76 = and i32 %3, 4, !dbg !6600
  %77 = icmp eq i32 %76, 0, !dbg !6600
  %78 = and i1 %48, %77, !dbg !6601
  br i1 %78, label %103, label %79, !dbg !6601

; <label>:79:                                     ; preds = %75
  %80 = and i32 %49, 16384, !dbg !6602
  %81 = icmp eq i32 %80, 0, !dbg !6602
  br i1 %81, label %91, label %82, !dbg !6603

; <label>:82:                                     ; preds = %79
  %83 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6604, !tbaa !3115
  %84 = and i32 %49, 4095, !dbg !6605
  %85 = zext i32 %84 to i64, !dbg !6604
  %86 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %83, i64 0, i32 66, i64 %85, !dbg !6604
  %87 = bitcast %struct.sctx_T* %86 to i64*, !dbg !6606
  store i64 %45, i64* %87, align 8, !dbg !6606
  %88 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %83, i64 0, i32 66, i64 %85, i32 2, !dbg !6606
  store i64 %61, i64* %88, align 8, !dbg !6606
  %89 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %83, i64 0, i32 66, i64 %85, i32 3, !dbg !6606
  %90 = bitcast i32* %89 to i64*, !dbg !6606
  store i64 %47, i64* %90, align 8, !dbg !6606
  br label %103, !dbg !6604

; <label>:91:                                     ; preds = %79
  %92 = and i32 %49, 8192, !dbg !6607
  %93 = icmp eq i32 %92, 0, !dbg !6607
  br i1 %93, label %103, label %94, !dbg !6608

; <label>:94:                                     ; preds = %91
  %95 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6609, !tbaa !3115
  %96 = and i32 %49, 4095, !dbg !6610
  %97 = zext i32 %96 to i64, !dbg !6609
  %98 = getelementptr inbounds %struct.window_S, %struct.window_S* %95, i64 0, i32 121, i32 50, i64 %97, !dbg !6609
  %99 = bitcast %struct.sctx_T* %98 to i64*, !dbg !6611
  store i64 %45, i64* %99, align 8, !dbg !6611
  %100 = getelementptr inbounds %struct.window_S, %struct.window_S* %95, i64 0, i32 121, i32 50, i64 %97, i32 2, !dbg !6611
  store i64 %61, i64* %100, align 8, !dbg !6611
  %101 = getelementptr inbounds %struct.window_S, %struct.window_S* %95, i64 0, i32 121, i32 50, i64 %97, i32 3, !dbg !6611
  %102 = bitcast i32* %101 to i64*, !dbg !6611
  store i64 %47, i64* %102, align 8, !dbg !6611
  br label %103, !dbg !6609

; <label>:103:                                    ; preds = %75, %82, %91, %94
  store i32 1, i32* @need_mouse_correct, align 4, !dbg !6612, !tbaa !3060
  br i1 %20, label %104, label %120, !dbg !6613

; <label>:104:                                    ; preds = %103
  %105 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, !dbg !6614
  call void @llvm.dbg.value(metadata %struct.vimoption* %105, metadata !4275, metadata !DIExpression()) #11, !dbg !6616
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !6618
  %106 = load i32, i32* %43, align 16, !dbg !6619, !tbaa !4220
  %107 = icmp eq i32 %106, 0, !dbg !6620
  br i1 %107, label %115, label %108, !dbg !6621

; <label>:108:                                    ; preds = %104
  %109 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 3, !dbg !6622
  %110 = load i8*, i8** %109, align 8, !dbg !6622, !tbaa !3461
  %111 = icmp eq i8* %110, inttoptr (i64 -1 to i8*), !dbg !6623
  br i1 %111, label %112, label %117, !dbg !6624

; <label>:112:                                    ; preds = %108
  %113 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %105) #11, !dbg !6625
  %114 = getelementptr inbounds i8, i8* %113, i64 1376, !dbg !6625
  br label %117, !dbg !6626

; <label>:115:                                    ; preds = %104
  %116 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %105) #11, !dbg !6627
  br label %117, !dbg !6628

; <label>:117:                                    ; preds = %108, %112, %115
  %118 = phi i8* [ %114, %112 ], [ %116, %115 ], [ %110, %108 ]
  %119 = bitcast i8* %118 to i32*, !dbg !6629
  store i32 %2, i32* %119, align 4, !dbg !6630, !tbaa !3060
  br label %120, !dbg !6629

; <label>:120:                                    ; preds = %117, %103
  %121 = icmp eq i8* %1, bitcast (i32* @p_cp to i8*), !dbg !6631
  br i1 %121, label %122, label %150, !dbg !6633

; <label>:122:                                    ; preds = %120
  br label %123, !dbg !6634

; <label>:123:                                    ; preds = %122, %147
  %124 = phi i64 [ %148, %147 ], [ 0, %122 ]
  call void @llvm.dbg.value(metadata i64 %124, metadata !6641, metadata !DIExpression()) #11, !dbg !6643
  call void @llvm.dbg.value(metadata i64 %124, metadata !3476, metadata !DIExpression()) #11, !dbg !6644
  %125 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %124, i32 0, !dbg !6634
  %126 = load i8*, i8** %125, align 16, !dbg !6634, !tbaa !3453
  %127 = load i8, i8* %126, align 1, !dbg !6645, !tbaa !3150
  %128 = icmp eq i8 %127, 116, !dbg !6646
  br i1 %128, label %129, label %133, !dbg !6647

; <label>:129:                                    ; preds = %123
  %130 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !6648
  %131 = load i8, i8* %130, align 1, !dbg !6648, !tbaa !3150
  %132 = icmp eq i8 %131, 95, !dbg !6649
  br i1 %132, label %149, label %133, !dbg !6650

; <label>:133:                                    ; preds = %129, %123
  %134 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %124, i32 2, !dbg !6651
  %135 = load i64, i64* %134, align 16, !dbg !6651, !tbaa !3107
  %136 = and i64 %135, 2048, !dbg !6653
  %137 = icmp ne i64 %136, 0, !dbg !6653
  %138 = load i32, i32* @p_cp, align 4, !dbg !6654
  %139 = icmp ne i32 %138, 0, !dbg !6654
  %140 = and i1 %137, %139, !dbg !6655
  br i1 %140, label %145, label %141, !dbg !6655

; <label>:141:                                    ; preds = %133
  %142 = and i64 %135, 1024, !dbg !6656
  %143 = icmp ne i64 %142, 0, !dbg !6656
  %144 = or i1 %143, %139, !dbg !6657
  br i1 %144, label %147, label %145, !dbg !6657

; <label>:145:                                    ; preds = %141, %133
  %146 = trunc i64 %124 to i32, !dbg !6658
  tail call fastcc void @set_option_default(i32 %146, i32 1, i32 %138) #11, !dbg !6658
  br label %147, !dbg !6658

; <label>:147:                                    ; preds = %145, %141
  %148 = add nuw i64 %124, 1, !dbg !6659
  br label %123, !dbg !6660, !llvm.loop !6661

; <label>:149:                                    ; preds = %129
  tail call fastcc void @didset_options() #11, !dbg !6664
  tail call fastcc void @didset_options2() #11, !dbg !6665
  br label %150, !dbg !6666

; <label>:150:                                    ; preds = %149, %120
  %151 = icmp eq i8* %1, bitcast (i32* @p_lrm to i8*), !dbg !6667
  br i1 %151, label %152, label %156, !dbg !6668

; <label>:152:                                    ; preds = %150
  %153 = load i32, i32* @p_lrm, align 4, !dbg !6669, !tbaa !3060
  %154 = icmp eq i32 %153, 0, !dbg !6670
  %155 = zext i1 %154 to i32, !dbg !6670
  store i32 %155, i32* @p_lnr, align 4, !dbg !6671, !tbaa !3060
  br label %710, !dbg !6672

; <label>:156:                                    ; preds = %150
  %157 = icmp eq i8* %1, bitcast (i32* @p_lnr to i8*), !dbg !6673
  br i1 %157, label %158, label %162, !dbg !6674

; <label>:158:                                    ; preds = %156
  %159 = load i32, i32* @p_lnr, align 4, !dbg !6675, !tbaa !3060
  %160 = icmp eq i32 %159, 0, !dbg !6676
  %161 = zext i1 %160 to i32, !dbg !6676
  store i32 %161, i32* @p_lrm, align 4, !dbg !6677, !tbaa !3060
  br label %710, !dbg !6678

; <label>:162:                                    ; preds = %156
  %163 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !6679, !tbaa !3115
  %164 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 33, !dbg !6680
  %165 = icmp ne i32* %164, %6, !dbg !6681
  %166 = icmp ne i32 %2, 0, !dbg !6682
  %167 = or i1 %166, %165, !dbg !6683
  %168 = xor i1 %167, true, !dbg !6683
  %169 = icmp ne i32 %7, 0, !dbg !6684
  %170 = and i1 %169, %168, !dbg !6683
  br i1 %170, label %171, label %172, !dbg !6683

; <label>:171:                                    ; preds = %162
  tail call void @reset_cursorline() #11, !dbg !6685
  br label %710, !dbg !6685

; <label>:172:                                    ; preds = %162
  %173 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6686, !tbaa !3115
  %174 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 157, !dbg !6687
  %175 = icmp eq i32* %174, %6, !dbg !6688
  %176 = icmp eq i8* %1, bitcast (i32* @p_udf to i8*), !dbg !6689
  %177 = or i1 %176, %175, !dbg !6690
  br i1 %177, label %178, label %215, !dbg !6690

; <label>:178:                                    ; preds = %172
  %179 = load i32, i32* %174, align 8, !dbg !6691, !tbaa !6692
  %180 = load i32, i32* @p_udf, align 4, !dbg !6693
  %181 = or i32 %180, %179, !dbg !6694
  %182 = icmp eq i32 %181, 0, !dbg !6694
  br i1 %182, label %710, label %183, !dbg !6694

; <label>:183:                                    ; preds = %178
  %184 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0, !dbg !6695
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #11, !dbg !6695
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !2976, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata %struct.file_buffer* %173, metadata !2984, metadata !DIExpression()), !dbg !6697
  %185 = load i64, i64* bitcast (%struct.file_buffer** @firstbuf to i64*), align 8, !dbg !6698, !tbaa !3115
  store i64 %185, i64* bitcast (%struct.file_buffer** @curbuf to i64*), align 8, !dbg !6698, !tbaa !3115
  %186 = icmp eq i64 %185, 0, !dbg !6698
  br i1 %186, label %214, label %187, !dbg !6701

; <label>:187:                                    ; preds = %183
  %188 = icmp ne i32 %62, 0
  %189 = icmp eq i32 %3, 0
  %190 = or i1 %189, %188
  br label %191, !dbg !6701

; <label>:191:                                    ; preds = %187, %208
  %192 = phi i64 [ %185, %187 ], [ %212, %208 ]
  %193 = inttoptr i64 %192 to %struct.file_buffer*, !dbg !6698
  %194 = icmp eq %struct.file_buffer* %173, %193, !dbg !6702
  %195 = or i1 %194, %190, !dbg !6705
  br i1 %195, label %196, label %208, !dbg !6705

; <label>:196:                                    ; preds = %191
  %197 = call i32 @curbufIsChanged() #11, !dbg !6706
  %198 = icmp eq i32 %197, 0, !dbg !6706
  br i1 %198, label %199, label %208, !dbg !6707

; <label>:199:                                    ; preds = %196
  %200 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6708, !tbaa !3115
  %201 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %200, i64 0, i32 0, i32 1, !dbg !6709
  %202 = load %struct.memfile*, %struct.memfile** %201, align 8, !dbg !6709, !tbaa !6710
  %203 = icmp eq %struct.memfile* %202, null, !dbg !6711
  br i1 %203, label %208, label %204, !dbg !6712

; <label>:204:                                    ; preds = %199
  call void @u_compute_hash(i8* nonnull %184) #11, !dbg !6713
  %205 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6715, !tbaa !3115
  %206 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %205, i64 0, i32 9, !dbg !6716
  %207 = load i8*, i8** %206, align 8, !dbg !6716, !tbaa !6717
  call void @u_read_undo(i8* null, i8* nonnull %184, i8* %207) #11, !dbg !6718
  br label %208, !dbg !6719

; <label>:208:                                    ; preds = %191, %199, %196, %204
  %209 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6698, !tbaa !3115
  %210 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %209, i64 0, i32 1, !dbg !6698
  %211 = bitcast %struct.file_buffer** %210 to i64*, !dbg !6698
  %212 = load i64, i64* %211, align 8, !dbg !6698, !tbaa !3115
  store i64 %212, i64* bitcast (%struct.file_buffer** @curbuf to i64*), align 8, !dbg !6698, !tbaa !3115
  %213 = icmp eq i64 %212, 0, !dbg !6698
  br i1 %213, label %214, label %191, !dbg !6701, !llvm.loop !6720

; <label>:214:                                    ; preds = %208, %183
  store %struct.file_buffer* %173, %struct.file_buffer** @curbuf, align 8, !dbg !6722, !tbaa !3115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #11, !dbg !6723
  br label %710, !dbg !6724

; <label>:215:                                    ; preds = %172
  %216 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 121, !dbg !6725
  %217 = icmp eq i32* %216, %6, !dbg !6726
  br i1 %217, label %218, label %228, !dbg !6727

; <label>:218:                                    ; preds = %215
  %219 = load i32, i32* %6, align 8, !dbg !6728, !tbaa !6731
  %220 = icmp eq i32 %219, 0, !dbg !6732
  %221 = or i32 %219, %76, !dbg !6733
  %222 = icmp eq i32 %221, 0, !dbg !6733
  br i1 %222, label %223, label %224, !dbg !6733

; <label>:223:                                    ; preds = %218
  store i32 0, i32* @readonlymode, align 4, !dbg !6734, !tbaa !3060
  br label %224, !dbg !6735

; <label>:224:                                    ; preds = %218, %223
  br i1 %220, label %227, label %225, !dbg !6736

; <label>:225:                                    ; preds = %224
  %226 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 213, !dbg !6737
  store i32 0, i32* %226, align 4, !dbg !6739, !tbaa !6740
  br label %227, !dbg !6741

; <label>:227:                                    ; preds = %224, %225
  store i32 1, i32* @need_maketitle, align 4, !dbg !6742, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6745, !tbaa !3060
  br label %710, !dbg !6746

; <label>:228:                                    ; preds = %215
  %229 = icmp eq i8* %1, bitcast (i32* @p_mh to i8*), !dbg !6747
  br i1 %229, label %230, label %234, !dbg !6748

; <label>:230:                                    ; preds = %228
  %231 = load i32, i32* @p_mh, align 4, !dbg !6749, !tbaa !3060
  %232 = icmp eq i32 %231, 0, !dbg !6749
  br i1 %232, label %233, label %710, !dbg !6752

; <label>:233:                                    ; preds = %230
  tail call void @gui_mch_mousehide(i32 0) #11, !dbg !6753
  br label %710, !dbg !6753

; <label>:234:                                    ; preds = %228
  %235 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 117, !dbg !6754
  %236 = icmp eq i32* %235, %6, !dbg !6755
  br i1 %236, label %237, label %259, !dbg !6756

; <label>:237:                                    ; preds = %234
  %238 = load i32, i32* %6, align 8, !dbg !6757, !tbaa !6760
  %239 = icmp eq i32 %238, 0, !dbg !6761
  br i1 %239, label %258, label %240, !dbg !6762

; <label>:240:                                    ; preds = %237
  %241 = tail call i32 @term_in_normal_mode() #11, !dbg !6763
  %242 = icmp eq i32 %241, 0, !dbg !6763
  br i1 %242, label %243, label %255, !dbg !6764

; <label>:243:                                    ; preds = %240
  %244 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6765, !tbaa !3115
  %245 = tail call i32 @bt_terminal(%struct.file_buffer* %244) #11, !dbg !6766
  %246 = icmp eq i32 %245, 0, !dbg !6766
  br i1 %246, label %258, label %247, !dbg !6767

; <label>:247:                                    ; preds = %243
  %248 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6768, !tbaa !3115
  %249 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %248, i64 0, i32 229, !dbg !6769
  %250 = load %struct.terminal_S*, %struct.terminal_S** %249, align 8, !dbg !6769, !tbaa !6770
  %251 = icmp eq %struct.terminal_S* %250, null, !dbg !6771
  br i1 %251, label %258, label %252, !dbg !6772

; <label>:252:                                    ; preds = %247
  %253 = tail call i32 @term_is_finished(%struct.file_buffer* %248) #11, !dbg !6773
  %254 = icmp eq i32 %253, 0, !dbg !6773
  br i1 %254, label %255, label %258, !dbg !6774

; <label>:255:                                    ; preds = %252, %240
  %256 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !6775, !tbaa !3115
  %257 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %256, i64 0, i32 117, !dbg !6777
  store i32 0, i32* %257, align 8, !dbg !6778, !tbaa !6760
  br label %819, !dbg !6779

; <label>:258:                                    ; preds = %252, %247, %243, %237
  store i32 1, i32* @need_maketitle, align 4, !dbg !6780, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6782, !tbaa !3060
  br label %710, !dbg !6783

; <label>:259:                                    ; preds = %234
  %260 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 88, !dbg !6784
  %261 = icmp eq i32* %260, %6, !dbg !6785
  br i1 %261, label %262, label %263, !dbg !6786

; <label>:262:                                    ; preds = %259
  store i32 1, i32* @need_maketitle, align 4, !dbg !6787, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6790, !tbaa !3060
  br label %710, !dbg !6791

; <label>:263:                                    ; preds = %259
  %264 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 89, !dbg !6792
  %265 = icmp eq i32* %264, %6, !dbg !6793
  br i1 %265, label %266, label %267, !dbg !6794

; <label>:266:                                    ; preds = %263
  store i32 1, i32* @need_maketitle, align 4, !dbg !6795, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6798, !tbaa !3060
  br label %710, !dbg !6799

; <label>:267:                                    ; preds = %263
  %268 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 73, !dbg !6800
  %269 = icmp eq i32* %268, %6, !dbg !6801
  br i1 %269, label %270, label %271, !dbg !6802

; <label>:270:                                    ; preds = %267
  store i32 1, i32* @need_maketitle, align 4, !dbg !6803, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6806, !tbaa !3060
  br label %710, !dbg !6807

; <label>:271:                                    ; preds = %267
  %272 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 72, !dbg !6808
  %273 = icmp eq i32* %272, %6, !dbg !6809
  br i1 %273, label %274, label %276, !dbg !6810

; <label>:274:                                    ; preds = %271
  %275 = load i32, i32* %6, align 8, !dbg !6811, !tbaa !6813
  tail call void @set_options_bin(i32 %7, i32 %275, i32 %3), !dbg !6814
  store i32 1, i32* @need_maketitle, align 4, !dbg !6815, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !6817, !tbaa !3060
  br label %710, !dbg !6818

; <label>:276:                                    ; preds = %271
  %277 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 77, !dbg !6819
  %278 = icmp eq i32* %277, %6, !dbg !6820
  br i1 %278, label %279, label %286, !dbg !6821

; <label>:279:                                    ; preds = %276
  %280 = load i32, i32* %6, align 4, !dbg !6822, !tbaa !6823
  %281 = icmp eq i32 %7, %280, !dbg !6824
  br i1 %281, label %286, label %282, !dbg !6825

; <label>:282:                                    ; preds = %279
  %283 = icmp eq i32 %280, 0, !dbg !6826
  %284 = zext i1 %283 to i32, !dbg !6826
  %285 = tail call i32 @apply_autocmds(i32 %284, i8* null, i8* null, i32 1, %struct.file_buffer* nonnull %173) #11, !dbg !6828
  br label %710, !dbg !6829

; <label>:286:                                    ; preds = %279, %276
  %287 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 128, !dbg !6830
  %288 = icmp eq i32* %287, %6, !dbg !6831
  br i1 %288, label %289, label %297, !dbg !6832

; <label>:289:                                    ; preds = %286
  %290 = load i32, i32* %6, align 8, !dbg !6833, !tbaa !6836
  %291 = icmp ne i32 %290, 0, !dbg !6837
  %292 = load i64, i64* @p_uc, align 8, !dbg !6838
  %293 = icmp ne i64 %292, 0, !dbg !6838
  %294 = and i1 %291, %293, !dbg !6839
  br i1 %294, label %295, label %296, !dbg !6839

; <label>:295:                                    ; preds = %289
  tail call void @ml_open_file(%struct.file_buffer* nonnull %173) #11, !dbg !6840
  br label %710, !dbg !6840

; <label>:296:                                    ; preds = %289
  tail call void @mf_close_file(%struct.file_buffer* nonnull %173, i32 1) #11, !dbg !6841
  br label %710

; <label>:297:                                    ; preds = %286
  %298 = icmp eq i8* %1, bitcast (i32* @p_terse to i8*), !dbg !6842
  br i1 %298, label %299, label %323, !dbg !6843

; <label>:299:                                    ; preds = %297
  %300 = load i8*, i8** @p_shm, align 8, !dbg !6844, !tbaa !3115
  %301 = tail call i8* @vim_strchr(i8* %300, i32 115) #11, !dbg !6845
  call void @llvm.dbg.value(metadata i8* %301, metadata !2985, metadata !DIExpression()), !dbg !6846
  %302 = load i32, i32* @p_terse, align 4, !dbg !6847, !tbaa !3060
  %303 = icmp ne i32 %302, 0, !dbg !6847
  %304 = icmp eq i8* %301, null, !dbg !6849
  %305 = and i1 %304, %303, !dbg !6850
  br i1 %305, label %306, label %315, !dbg !6850

; <label>:306:                                    ; preds = %299
  %307 = load i8*, i8** @IObuff, align 8, !dbg !6851, !tbaa !3115
  %308 = load i8*, i8** @p_shm, align 8, !dbg !6851, !tbaa !3115
  %309 = tail call i8* @strcpy(i8* %307, i8* %308) #11, !dbg !6851
  %310 = load i8*, i8** @IObuff, align 8, !dbg !6853, !tbaa !3115
  %311 = tail call i64 @strlen(i8* %310), !dbg !6853
  %312 = getelementptr i8, i8* %310, i64 %311, !dbg !6853
  %313 = bitcast i8* %312 to i16*, !dbg !6853
  store i16 115, i16* %313, align 1, !dbg !6853
  %314 = load i8*, i8** @IObuff, align 8, !dbg !6854, !tbaa !3115
  tail call void @set_string_option_direct(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 -1, i8* %314, i32 1, i32 0) #11, !dbg !6855
  br label %710, !dbg !6856

; <label>:315:                                    ; preds = %299
  %316 = icmp eq i32 %302, 0, !dbg !6857
  %317 = icmp ne i8* %301, null, !dbg !6859
  %318 = and i1 %317, %316, !dbg !6860
  br i1 %318, label %319, label %710, !dbg !6860

; <label>:319:                                    ; preds = %315
  %320 = getelementptr inbounds i8, i8* %301, i64 1, !dbg !6861
  %321 = tail call i64 @strlen(i8* nonnull %320) #12, !dbg !6861
  %322 = add i64 %321, 1, !dbg !6861
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %301, i8* nonnull %320, i64 %322, i32 1, i1 false), !dbg !6861
  br label %710, !dbg !6861

; <label>:323:                                    ; preds = %297
  %324 = icmp eq i8* %1, bitcast (i32* @p_paste to i8*), !dbg !6862
  br i1 %324, label %325, label %517, !dbg !6863

; <label>:325:                                    ; preds = %323
  %326 = load i32, i32* @p_paste, align 4, !dbg !6864, !tbaa !3060
  %327 = icmp eq i32 %326, 0, !dbg !6864
  %328 = load i32, i32* @paste_option_changed.old_p_paste, align 4, !tbaa !3060
  %329 = icmp ne i32 %328, 0
  br i1 %327, label %431, label %330, !dbg !6868

; <label>:330:                                    ; preds = %325
  br i1 %329, label %394, label %331, !dbg !6869

; <label>:331:                                    ; preds = %330
  call void @llvm.dbg.value(metadata %struct.file_buffer** @firstbuf, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %332 = load %struct.file_buffer*, %struct.file_buffer** @firstbuf, align 8, !dbg !6872, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %332, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %333 = icmp eq %struct.file_buffer* %332, null, !dbg !6876
  br i1 %333, label %370, label %334, !dbg !6872

; <label>:334:                                    ; preds = %331
  br label %335, !dbg !6878

; <label>:335:                                    ; preds = %334, %365
  %336 = phi %struct.file_buffer* [ %368, %365 ], [ %332, %334 ]
  %337 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 133, !dbg !6878
  %338 = load i64, i64* %337, align 8, !dbg !6878, !tbaa !6880
  %339 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 135, !dbg !6881
  store i64 %338, i64* %339, align 8, !dbg !6882, !tbaa !6883
  %340 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 136, !dbg !6884
  %341 = load i64, i64* %340, align 8, !dbg !6884, !tbaa !6885
  %342 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 138, !dbg !6886
  store i64 %341, i64* %342, align 8, !dbg !6887, !tbaa !6888
  %343 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 125, !dbg !6889
  %344 = load i64, i64* %343, align 8, !dbg !6889, !tbaa !6890
  %345 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 126, !dbg !6891
  store i64 %344, i64* %345, align 8, !dbg !6892, !tbaa !6893
  %346 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 67, !dbg !6894
  %347 = load i32, i32* %346, align 8, !dbg !6894, !tbaa !6895
  %348 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 68, !dbg !6896
  store i32 %347, i32* %348, align 4, !dbg !6897, !tbaa !6898
  %349 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 90, !dbg !6899
  %350 = load i32, i32* %349, align 8, !dbg !6899, !tbaa !6900
  %351 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 92, !dbg !6901
  store i32 %350, i32* %351, align 8, !dbg !6902, !tbaa !6903
  %352 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 141, !dbg !6904
  %353 = load i8*, i8** %352, align 8, !dbg !6904, !tbaa !6906
  %354 = icmp eq i8* %353, null, !dbg !6907
  br i1 %354, label %356, label %355, !dbg !6908

; <label>:355:                                    ; preds = %335
  tail call void @vim_free(i8* nonnull %353) #11, !dbg !6909
  br label %356, !dbg !6909

; <label>:356:                                    ; preds = %355, %335
  %357 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 139, !dbg !6910
  %358 = load i8*, i8** %357, align 8, !dbg !6910, !tbaa !4088
  %359 = icmp eq i8* %358, null, !dbg !6911
  %360 = load i8*, i8** @empty_option, align 8, !dbg !6912
  %361 = icmp eq i8* %358, %360, !dbg !6913
  %362 = or i1 %359, %361, !dbg !6914
  br i1 %362, label %365, label %363, !dbg !6914

; <label>:363:                                    ; preds = %356
  %364 = tail call i8* @vim_strsave(i8* nonnull %358) #11, !dbg !6915
  br label %365, !dbg !6911

; <label>:365:                                    ; preds = %363, %356
  %366 = phi i8* [ %364, %363 ], [ null, %356 ], !dbg !6911
  store i8* %366, i8** %352, align 8, !dbg !6916, !tbaa !6906
  %367 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %336, i64 0, i32 1, !dbg !6876
  call void @llvm.dbg.value(metadata %struct.file_buffer** %367, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %368 = load %struct.file_buffer*, %struct.file_buffer** %367, align 8, !dbg !6872, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %368, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %369 = icmp eq %struct.file_buffer* %368, null, !dbg !6876
  br i1 %369, label %370, label %335, !dbg !6872, !llvm.loop !6917

; <label>:370:                                    ; preds = %365, %331
  %371 = load i32, i32* @p_sm, align 4, !dbg !6920, !tbaa !3060
  store i32 %371, i32* @paste_option_changed.save_sm, align 4, !dbg !6921, !tbaa !3060
  %372 = load i32, i32* @p_sta, align 4, !dbg !6922, !tbaa !3060
  store i32 %372, i32* @paste_option_changed.save_sta, align 4, !dbg !6923, !tbaa !3060
  %373 = load i32, i32* @p_ru, align 4, !dbg !6924, !tbaa !3060
  store i32 %373, i32* @paste_option_changed.save_ru, align 4, !dbg !6925, !tbaa !3060
  %374 = load i32, i32* @p_ri, align 4, !dbg !6926, !tbaa !3060
  store i32 %374, i32* @paste_option_changed.save_ri, align 4, !dbg !6927, !tbaa !3060
  %375 = load i32, i32* @p_hkmap, align 4, !dbg !6928, !tbaa !3060
  store i32 %375, i32* @paste_option_changed.save_hkmap, align 4, !dbg !6929, !tbaa !3060
  %376 = load i32, i32* @p_ai, align 4, !dbg !6930, !tbaa !3060
  store i32 %376, i32* @p_ai_nopaste, align 4, !dbg !6931, !tbaa !3060
  %377 = load i32, i32* @p_et, align 4, !dbg !6932, !tbaa !3060
  store i32 %377, i32* @p_et_nopaste, align 4, !dbg !6933, !tbaa !3060
  %378 = load i64, i64* @p_sts, align 8, !dbg !6934, !tbaa !4248
  store i64 %378, i64* @p_sts_nopaste, align 8, !dbg !6935, !tbaa !4248
  %379 = load i64, i64* @p_tw, align 8, !dbg !6936, !tbaa !4248
  store i64 %379, i64* @p_tw_nopaste, align 8, !dbg !6937, !tbaa !4248
  %380 = load i64, i64* @p_wm, align 8, !dbg !6938, !tbaa !4248
  store i64 %380, i64* @p_wm_nopaste, align 8, !dbg !6939, !tbaa !4248
  %381 = load i8*, i8** @p_vsts_nopaste, align 8, !dbg !6940, !tbaa !3115
  %382 = icmp eq i8* %381, null, !dbg !6940
  br i1 %382, label %384, label %383, !dbg !6942

; <label>:383:                                    ; preds = %370
  tail call void @vim_free(i8* nonnull %381) #11, !dbg !6943
  br label %384, !dbg !6943

; <label>:384:                                    ; preds = %383, %370
  %385 = load i8*, i8** @p_vsts, align 8, !dbg !6944, !tbaa !3115
  %386 = icmp eq i8* %385, null, !dbg !6944
  %387 = load i8*, i8** @empty_option, align 8, !dbg !6945
  %388 = icmp eq i8* %385, %387, !dbg !6946
  %389 = or i1 %386, %388, !dbg !6947
  br i1 %389, label %392, label %390, !dbg !6947

; <label>:390:                                    ; preds = %384
  %391 = tail call i8* @vim_strsave(i8* nonnull %385) #11, !dbg !6948
  br label %392, !dbg !6944

; <label>:392:                                    ; preds = %390, %384
  %393 = phi i8* [ %391, %390 ], [ null, %384 ], !dbg !6944
  store i8* %393, i8** @p_vsts_nopaste, align 8, !dbg !6949, !tbaa !3115
  br label %394, !dbg !6950

; <label>:394:                                    ; preds = %392, %330
  call void @llvm.dbg.value(metadata %struct.file_buffer** @firstbuf, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %395 = load %struct.file_buffer*, %struct.file_buffer** @firstbuf, align 8, !dbg !6951, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %395, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %396 = icmp eq %struct.file_buffer* %395, null, !dbg !6953
  br i1 %396, label %421, label %397, !dbg !6951

; <label>:397:                                    ; preds = %394
  br label %398, !dbg !6955

; <label>:398:                                    ; preds = %397, %417
  %399 = phi %struct.file_buffer* [ %419, %417 ], [ %395, %397 ]
  %400 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 133, !dbg !6955
  store i64 0, i64* %400, align 8, !dbg !6957, !tbaa !6880
  %401 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 136, !dbg !6958
  store i64 0, i64* %401, align 8, !dbg !6959, !tbaa !6885
  %402 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 125, !dbg !6960
  store i64 0, i64* %402, align 8, !dbg !6961, !tbaa !6890
  %403 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 67, !dbg !6962
  store i32 0, i32* %403, align 8, !dbg !6963, !tbaa !6895
  %404 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 90, !dbg !6964
  store i32 0, i32* %404, align 8, !dbg !6965, !tbaa !6900
  %405 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 139, !dbg !6966
  %406 = load i8*, i8** %405, align 8, !dbg !6966, !tbaa !4088
  %407 = icmp eq i8* %406, null, !dbg !6968
  br i1 %407, label %409, label %408, !dbg !6969

; <label>:408:                                    ; preds = %398
  tail call void @free_string_option(i8* nonnull %406) #11, !dbg !6970
  br label %409, !dbg !6970

; <label>:409:                                    ; preds = %408, %398
  %410 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !6971, !tbaa !3115
  %411 = bitcast i8** %405 to i64*, !dbg !6972
  store i64 %410, i64* %411, align 8, !dbg !6972, !tbaa !4088
  %412 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 140, !dbg !6973
  %413 = load i32*, i32** %412, align 8, !dbg !6973, !tbaa !4084
  %414 = icmp eq i32* %413, null, !dbg !6975
  br i1 %414, label %417, label %415, !dbg !6976

; <label>:415:                                    ; preds = %409
  %416 = bitcast i32* %413 to i8*, !dbg !6977
  tail call void @vim_free(i8* %416) #11, !dbg !6978
  br label %417, !dbg !6978

; <label>:417:                                    ; preds = %415, %409
  store i32* null, i32** %412, align 8, !dbg !6979, !tbaa !4084
  %418 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %399, i64 0, i32 1, !dbg !6953
  call void @llvm.dbg.value(metadata %struct.file_buffer** %418, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %419 = load %struct.file_buffer*, %struct.file_buffer** %418, align 8, !dbg !6951, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %419, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %420 = icmp eq %struct.file_buffer* %419, null, !dbg !6953
  br i1 %420, label %421, label %398, !dbg !6951, !llvm.loop !6980

; <label>:421:                                    ; preds = %417, %394
  store i32 0, i32* @p_sm, align 4, !dbg !6983, !tbaa !3060
  store i32 0, i32* @p_sta, align 4, !dbg !6984, !tbaa !3060
  %422 = load i32, i32* @p_ru, align 4, !dbg !6985, !tbaa !3060
  %423 = icmp eq i32 %422, 0, !dbg !6985
  br i1 %423, label %425, label %424, !dbg !6987

; <label>:424:                                    ; preds = %421
  tail call void @status_redraw_all() #11, !dbg !6988
  br label %425, !dbg !6988

; <label>:425:                                    ; preds = %424, %421
  store i32 0, i32* @p_ru, align 4, !dbg !6989, !tbaa !3060
  store i32 0, i32* @p_ri, align 4, !dbg !6990, !tbaa !3060
  store i32 0, i32* @p_hkmap, align 4, !dbg !6991, !tbaa !3060
  store i64 0, i64* @p_tw, align 8, !dbg !6992, !tbaa !4248
  store i64 0, i64* @p_wm, align 8, !dbg !6993, !tbaa !4248
  store i64 0, i64* @p_sts, align 8, !dbg !6994, !tbaa !4248
  store i32 0, i32* @p_ai, align 4, !dbg !6995, !tbaa !3060
  %426 = load i8*, i8** @p_vsts, align 8, !dbg !6996, !tbaa !3115
  %427 = icmp eq i8* %426, null, !dbg !6996
  br i1 %427, label %429, label %428, !dbg !6998

; <label>:428:                                    ; preds = %425
  tail call void @free_string_option(i8* nonnull %426) #11, !dbg !6999
  br label %429, !dbg !6999

; <label>:429:                                    ; preds = %428, %425
  %430 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !7000, !tbaa !3115
  store i64 %430, i64* bitcast (i8** @p_vsts to i64*), align 8, !dbg !7001, !tbaa !3115
  br label %515, !dbg !7002

; <label>:431:                                    ; preds = %325
  br i1 %329, label %432, label %515, !dbg !7003

; <label>:432:                                    ; preds = %431
  call void @llvm.dbg.value(metadata %struct.file_buffer** @firstbuf, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %433 = load %struct.file_buffer*, %struct.file_buffer** @firstbuf, align 8, !dbg !7004, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %433, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %434 = icmp eq %struct.file_buffer* %433, null, !dbg !7008
  br i1 %434, label %486, label %435, !dbg !7004

; <label>:435:                                    ; preds = %432
  br label %436, !dbg !7010

; <label>:436:                                    ; preds = %435, %482
  %437 = phi %struct.file_buffer* [ %484, %482 ], [ %433, %435 ]
  %438 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 135, !dbg !7010
  %439 = load i64, i64* %438, align 8, !dbg !7010, !tbaa !6883
  %440 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 133, !dbg !7012
  store i64 %439, i64* %440, align 8, !dbg !7013, !tbaa !6880
  %441 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 138, !dbg !7014
  %442 = load i64, i64* %441, align 8, !dbg !7014, !tbaa !6888
  %443 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 136, !dbg !7015
  store i64 %442, i64* %443, align 8, !dbg !7016, !tbaa !6885
  %444 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 126, !dbg !7017
  %445 = load i64, i64* %444, align 8, !dbg !7017, !tbaa !6893
  %446 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 125, !dbg !7018
  store i64 %445, i64* %446, align 8, !dbg !7019, !tbaa !6890
  %447 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 68, !dbg !7020
  %448 = load i32, i32* %447, align 4, !dbg !7020, !tbaa !6898
  %449 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 67, !dbg !7021
  store i32 %448, i32* %449, align 8, !dbg !7022, !tbaa !6895
  %450 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 92, !dbg !7023
  %451 = load i32, i32* %450, align 8, !dbg !7023, !tbaa !6903
  %452 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 90, !dbg !7024
  store i32 %451, i32* %452, align 8, !dbg !7025, !tbaa !6900
  %453 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 139, !dbg !7026
  %454 = load i8*, i8** %453, align 8, !dbg !7026, !tbaa !4088
  %455 = icmp eq i8* %454, null, !dbg !7028
  br i1 %455, label %457, label %456, !dbg !7029

; <label>:456:                                    ; preds = %436
  tail call void @free_string_option(i8* nonnull %454) #11, !dbg !7030
  br label %457, !dbg !7030

; <label>:457:                                    ; preds = %456, %436
  %458 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 141, !dbg !7031
  %459 = load i8*, i8** %458, align 8, !dbg !7031, !tbaa !6906
  %460 = icmp eq i8* %459, null, !dbg !7032
  br i1 %460, label %463, label %461, !dbg !7032

; <label>:461:                                    ; preds = %457
  %462 = tail call i8* @vim_strsave(i8* nonnull %459) #11, !dbg !7033
  br label %465, !dbg !7032

; <label>:463:                                    ; preds = %457
  %464 = load i8*, i8** @empty_option, align 8, !dbg !7034, !tbaa !3115
  br label %465, !dbg !7032

; <label>:465:                                    ; preds = %463, %461
  %466 = phi i8* [ %462, %461 ], [ %464, %463 ], !dbg !7032
  store i8* %466, i8** %453, align 8, !dbg !7035, !tbaa !4088
  %467 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 140, !dbg !7036
  %468 = load i32*, i32** %467, align 8, !dbg !7036, !tbaa !4084
  %469 = icmp eq i32* %468, null, !dbg !7038
  br i1 %469, label %473, label %470, !dbg !7039

; <label>:470:                                    ; preds = %465
  %471 = bitcast i32* %468 to i8*, !dbg !7040
  tail call void @vim_free(i8* %471) #11, !dbg !7041
  %472 = load i8*, i8** %453, align 8, !dbg !7042, !tbaa !4088
  br label %473, !dbg !7041

; <label>:473:                                    ; preds = %470, %465
  %474 = phi i8* [ %466, %465 ], [ %472, %470 ], !dbg !7042
  %475 = icmp eq i8* %474, null, !dbg !7044
  %476 = load i8*, i8** @empty_option, align 8, !dbg !7045
  %477 = icmp eq i8* %474, %476, !dbg !7046
  %478 = or i1 %475, %477, !dbg !7047
  br i1 %478, label %481, label %479, !dbg !7047

; <label>:479:                                    ; preds = %473
  %480 = tail call i32 @tabstop_set(i8* nonnull %474, i32** nonnull %467) #11, !dbg !7048
  br label %482, !dbg !7048

; <label>:481:                                    ; preds = %473
  store i32* null, i32** %467, align 8, !dbg !7049, !tbaa !4084
  br label %482

; <label>:482:                                    ; preds = %481, %479
  %483 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 1, !dbg !7008
  call void @llvm.dbg.value(metadata %struct.file_buffer** %483, metadata !3029, metadata !DIExpression(DW_OP_deref)) #11, !dbg !6871
  %484 = load %struct.file_buffer*, %struct.file_buffer** %483, align 8, !dbg !7004, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.file_buffer* %484, metadata !3029, metadata !DIExpression()) #11, !dbg !6871
  %485 = icmp eq %struct.file_buffer* %484, null, !dbg !7008
  br i1 %485, label %486, label %436, !dbg !7004, !llvm.loop !7050

; <label>:486:                                    ; preds = %482, %432
  %487 = load i32, i32* @paste_option_changed.save_sm, align 4, !dbg !7053, !tbaa !3060
  store i32 %487, i32* @p_sm, align 4, !dbg !7054, !tbaa !3060
  %488 = load i32, i32* @paste_option_changed.save_sta, align 4, !dbg !7055, !tbaa !3060
  store i32 %488, i32* @p_sta, align 4, !dbg !7056, !tbaa !3060
  %489 = load i32, i32* @p_ru, align 4, !dbg !7057, !tbaa !3060
  %490 = load i32, i32* @paste_option_changed.save_ru, align 4, !dbg !7059, !tbaa !3060
  %491 = icmp eq i32 %489, %490, !dbg !7060
  br i1 %491, label %494, label %492, !dbg !7061

; <label>:492:                                    ; preds = %486
  tail call void @status_redraw_all() #11, !dbg !7062
  %493 = load i32, i32* @paste_option_changed.save_ru, align 4, !dbg !7063, !tbaa !3060
  br label %494, !dbg !7062

; <label>:494:                                    ; preds = %492, %486
  %495 = phi i32 [ %489, %486 ], [ %493, %492 ], !dbg !7063
  store i32 %495, i32* @p_ru, align 4, !dbg !7064, !tbaa !3060
  %496 = load i32, i32* @paste_option_changed.save_ri, align 4, !dbg !7065, !tbaa !3060
  store i32 %496, i32* @p_ri, align 4, !dbg !7066, !tbaa !3060
  %497 = load i32, i32* @paste_option_changed.save_hkmap, align 4, !dbg !7067, !tbaa !3060
  store i32 %497, i32* @p_hkmap, align 4, !dbg !7068, !tbaa !3060
  %498 = load i32, i32* @p_ai_nopaste, align 4, !dbg !7069, !tbaa !3060
  store i32 %498, i32* @p_ai, align 4, !dbg !7070, !tbaa !3060
  %499 = load i32, i32* @p_et_nopaste, align 4, !dbg !7071, !tbaa !3060
  store i32 %499, i32* @p_et, align 4, !dbg !7072, !tbaa !3060
  %500 = load i64, i64* @p_sts_nopaste, align 8, !dbg !7073, !tbaa !4248
  store i64 %500, i64* @p_sts, align 8, !dbg !7074, !tbaa !4248
  %501 = load i64, i64* @p_tw_nopaste, align 8, !dbg !7075, !tbaa !4248
  store i64 %501, i64* @p_tw, align 8, !dbg !7076, !tbaa !4248
  %502 = load i64, i64* @p_wm_nopaste, align 8, !dbg !7077, !tbaa !4248
  store i64 %502, i64* @p_wm, align 8, !dbg !7078, !tbaa !4248
  %503 = load i8*, i8** @p_vsts, align 8, !dbg !7079, !tbaa !3115
  %504 = icmp eq i8* %503, null, !dbg !7079
  br i1 %504, label %506, label %505, !dbg !7081

; <label>:505:                                    ; preds = %494
  tail call void @free_string_option(i8* nonnull %503) #11, !dbg !7082
  br label %506, !dbg !7082

; <label>:506:                                    ; preds = %505, %494
  %507 = load i8*, i8** @p_vsts_nopaste, align 8, !dbg !7083, !tbaa !3115
  %508 = icmp eq i8* %507, null, !dbg !7083
  br i1 %508, label %511, label %509, !dbg !7083

; <label>:509:                                    ; preds = %506
  %510 = tail call i8* @vim_strsave(i8* nonnull %507) #11, !dbg !7084
  br label %513, !dbg !7083

; <label>:511:                                    ; preds = %506
  %512 = load i8*, i8** @empty_option, align 8, !dbg !7085, !tbaa !3115
  br label %513, !dbg !7083

; <label>:513:                                    ; preds = %511, %509
  %514 = phi i8* [ %510, %509 ], [ %512, %511 ], !dbg !7083
  store i8* %514, i8** @p_vsts, align 8, !dbg !7086, !tbaa !3115
  br label %515, !dbg !7087

; <label>:515:                                    ; preds = %429, %431, %513
  %516 = load i32, i32* @p_paste, align 4, !dbg !7088, !tbaa !3060
  store i32 %516, i32* @paste_option_changed.old_p_paste, align 4, !dbg !7089, !tbaa !3060
  br label %710, !dbg !7090

; <label>:517:                                    ; preds = %323
  %518 = icmp eq i8* %1, bitcast (i32* @p_im to i8*), !dbg !7091
  br i1 %518, label %519, label %537, !dbg !7092

; <label>:519:                                    ; preds = %517
  %520 = load i32, i32* @p_im, align 4, !dbg !7093, !tbaa !3060
  %521 = icmp eq i32 %520, 0, !dbg !7093
  br i1 %521, label %528, label %522, !dbg !7096

; <label>:522:                                    ; preds = %519
  %523 = load i32, i32* @State, align 4, !dbg !7097, !tbaa !3060
  %524 = and i32 %523, 16, !dbg !7100
  %525 = icmp eq i32 %524, 0, !dbg !7101
  br i1 %525, label %526, label %527, !dbg !7102

; <label>:526:                                    ; preds = %522
  store i32 1, i32* @need_start_insertmode, align 4, !dbg !7103, !tbaa !3060
  br label %527, !dbg !7104

; <label>:527:                                    ; preds = %526, %522
  store i32 0, i32* @stop_insert_mode, align 4, !dbg !7105, !tbaa !3060
  br label %710, !dbg !7106

; <label>:528:                                    ; preds = %519
  br i1 %169, label %529, label %710, !dbg !7107

; <label>:529:                                    ; preds = %528
  store i32 0, i32* @need_start_insertmode, align 4, !dbg !7108, !tbaa !3060
  store i32 1, i32* @stop_insert_mode, align 4, !dbg !7111, !tbaa !3060
  %530 = load i32, i32* @restart_edit, align 4, !dbg !7112, !tbaa !3060
  %531 = icmp ne i32 %530, 0, !dbg !7114
  %532 = load i32, i32* @mode_displayed, align 4, !dbg !7115
  %533 = icmp ne i32 %532, 0, !dbg !7115
  %534 = and i1 %531, %533, !dbg !7116
  br i1 %534, label %535, label %536, !dbg !7116

; <label>:535:                                    ; preds = %529
  store i32 1, i32* @clear_cmdline, align 4, !dbg !7117, !tbaa !3060
  br label %536, !dbg !7118

; <label>:536:                                    ; preds = %535, %529
  store i32 0, i32* @restart_edit, align 4, !dbg !7119, !tbaa !3060
  br label %710, !dbg !7120

; <label>:537:                                    ; preds = %517
  %538 = icmp eq i8* %1, bitcast (i32* @p_ic to i8*), !dbg !7121
  %539 = load i32, i32* @p_hls, align 4, !dbg !7122
  %540 = icmp ne i32 %539, 0, !dbg !7122
  %541 = and i1 %538, %540, !dbg !7123
  br i1 %541, label %542, label %543, !dbg !7123

; <label>:542:                                    ; preds = %537
  tail call void @redraw_all_later(i32 35) #11, !dbg !7124
  br label %710, !dbg !7126

; <label>:543:                                    ; preds = %537
  %544 = icmp eq i8* %1, bitcast (i32* @p_hls to i8*), !dbg !7127
  br i1 %544, label %545, label %546, !dbg !7128

; <label>:545:                                    ; preds = %543
  tail call void @set_no_hlsearch(i32 0) #11, !dbg !7129
  br label %710, !dbg !7131

; <label>:546:                                    ; preds = %543
  %547 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 38, !dbg !7132
  %548 = icmp eq i32* %547, %6, !dbg !7133
  br i1 %548, label %549, label %557, !dbg !7134

; <label>:549:                                    ; preds = %546
  %550 = load i32, i32* %6, align 8, !dbg !7135, !tbaa !7138
  %551 = icmp eq i32 %550, 0, !dbg !7139
  br i1 %551, label %710, label %552, !dbg !7140

; <label>:552:                                    ; preds = %549
  tail call void @do_check_scrollbind(i32 0) #11, !dbg !7141
  %553 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7143, !tbaa !3115
  %554 = getelementptr inbounds %struct.window_S, %struct.window_S* %553, i64 0, i32 19, !dbg !7144
  %555 = load i64, i64* %554, align 8, !dbg !7144, !tbaa !7145
  %556 = getelementptr inbounds %struct.window_S, %struct.window_S* %553, i64 0, i32 133, !dbg !7146
  store i64 %555, i64* %556, align 8, !dbg !7147, !tbaa !7148
  br label %710, !dbg !7149

; <label>:557:                                    ; preds = %546
  %558 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 27, !dbg !7150
  %559 = icmp eq i32* %558, %6, !dbg !7151
  br i1 %559, label %560, label %579, !dbg !7152

; <label>:560:                                    ; preds = %557
  %561 = load i32, i32* %6, align 8, !dbg !7153, !tbaa !7154
  %562 = icmp eq i32 %561, 0, !dbg !7155
  br i1 %562, label %710, label %563, !dbg !7156

; <label>:563:                                    ; preds = %560
  call void @llvm.dbg.value(metadata %struct.window_S** @firstwin, metadata !2997, metadata !DIExpression(DW_OP_deref)), !dbg !7157
  %564 = load %struct.window_S*, %struct.window_S** @firstwin, align 8, !dbg !7158, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %564, metadata !2997, metadata !DIExpression()), !dbg !7157
  %565 = icmp eq %struct.window_S* %564, null, !dbg !7160
  br i1 %565, label %710, label %566, !dbg !7158

; <label>:566:                                    ; preds = %563
  br label %571, !dbg !7162

; <label>:567:                                    ; preds = %571
  %568 = getelementptr inbounds %struct.window_S, %struct.window_S* %572, i64 0, i32 3, !dbg !7160
  %569 = load %struct.window_S*, %struct.window_S** %568, align 8, !dbg !7158, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %569, metadata !2997, metadata !DIExpression()), !dbg !7157
  %570 = icmp eq %struct.window_S* %569, null, !dbg !7160
  br i1 %570, label %710, label %571, !dbg !7158, !llvm.loop !7164

; <label>:571:                                    ; preds = %566, %567
  %572 = phi %struct.window_S* [ %569, %567 ], [ %564, %566 ]
  %573 = getelementptr inbounds %struct.window_S, %struct.window_S* %572, i64 0, i32 121, i32 27, !dbg !7162
  %574 = load i32, i32* %573, align 8, !dbg !7162, !tbaa !7154
  %575 = icmp eq i32 %574, 0, !dbg !7166
  %576 = icmp eq %struct.window_S* %572, %163, !dbg !7167
  %577 = or i1 %576, %575, !dbg !7168
  call void @llvm.dbg.value(metadata %struct.window_S** %568, metadata !2997, metadata !DIExpression(DW_OP_deref)), !dbg !7157
  br i1 %577, label %567, label %578, !dbg !7168

; <label>:578:                                    ; preds = %571
  store i32 0, i32* %6, align 8, !dbg !7169, !tbaa !7154
  br label %819

; <label>:579:                                    ; preds = %557
  %580 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 132, !dbg !7171
  %581 = icmp eq i32* %580, %6, !dbg !7172
  br i1 %581, label %582, label %586, !dbg !7173

; <label>:582:                                    ; preds = %579
  %583 = load i32, i32* %6, align 8, !dbg !7174, !tbaa !7176
  %584 = icmp ne i32 %583, 0, !dbg !7177
  %585 = zext i1 %584 to i32, !dbg !7177
  tail call void @set_fileformat(i32 %585, i32 %3) #11, !dbg !7178
  br label %710, !dbg !7179

; <label>:586:                                    ; preds = %579
  %587 = icmp eq i8* %1, bitcast (i32* @p_ta to i8*), !dbg !7180
  br i1 %587, label %588, label %593, !dbg !7181

; <label>:588:                                    ; preds = %586
  %589 = load i32, i32* @p_ta, align 4, !dbg !7182, !tbaa !3060
  %590 = icmp eq i32 %589, 0, !dbg !7182
  %591 = select i1 %590, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.335, i64 0, i64 0), !dbg !7182
  %592 = or i32 %3, 1, !dbg !7184
  tail call void @set_string_option_direct(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i32 -1, i8* %591, i32 %592, i32 0) #11, !dbg !7185
  br label %710, !dbg !7186

; <label>:593:                                    ; preds = %586
  %594 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 112, !dbg !7187
  %595 = bitcast i32* %594 to i8*, !dbg !7188
  %596 = icmp eq i8* %595, %1, !dbg !7189
  br i1 %596, label %597, label %599, !dbg !7190

; <label>:597:                                    ; preds = %593
  %598 = tail call i32 @buf_init_chartab(%struct.file_buffer* %173, i32 0) #11, !dbg !7191
  br label %710, !dbg !7193

; <label>:599:                                    ; preds = %593
  %600 = icmp eq i8* %1, bitcast (i32* @p_title to i8*), !dbg !7194
  %601 = icmp eq i8* %1, bitcast (i32* @p_icon to i8*), !dbg !7195
  %602 = or i1 %600, %601, !dbg !7196
  br i1 %602, label %603, label %610, !dbg !7196

; <label>:603:                                    ; preds = %599
  %604 = load i32, i32* @starting, align 4, !dbg !7197, !tbaa !3060
  %605 = icmp eq i32 %604, 2, !dbg !7202
  %606 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !7203
  %607 = icmp ne i32 %606, 0, !dbg !7204
  %608 = or i1 %605, %607, !dbg !7205
  br i1 %608, label %710, label %609, !dbg !7205

; <label>:609:                                    ; preds = %603
  tail call void @maketitle() #11, !dbg !7206
  br label %710, !dbg !7206

; <label>:610:                                    ; preds = %599
  %611 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 15, !dbg !7207
  %612 = icmp eq i32* %611, %6, !dbg !7208
  br i1 %612, label %613, label %616, !dbg !7209

; <label>:613:                                    ; preds = %610
  br i1 %166, label %615, label %614, !dbg !7210

; <label>:614:                                    ; preds = %613
  tail call void @save_file_ff(%struct.file_buffer* %173) #11, !dbg !7212
  br label %615, !dbg !7212

; <label>:615:                                    ; preds = %614, %613
  store i32 1, i32* @need_maketitle, align 4, !dbg !7214, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !7216, !tbaa !3060
  store i32 %2, i32* @modified_was_set, align 4, !dbg !7217, !tbaa !3060
  br label %710, !dbg !7218

; <label>:616:                                    ; preds = %610
  %617 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 41, !dbg !7219
  %618 = icmp eq i32* %617, %6, !dbg !7220
  br i1 %618, label %619, label %624, !dbg !7221

; <label>:619:                                    ; preds = %616
  %620 = load i32, i32* %6, align 4, !dbg !7222, !tbaa !7225
  %621 = icmp eq i32 %620, 0, !dbg !7226
  br i1 %621, label %710, label %622, !dbg !7227

; <label>:622:                                    ; preds = %619
  %623 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 26, !dbg !7228
  store i32 0, i32* %623, align 8, !dbg !7229, !tbaa !7230
  br label %710, !dbg !7231

; <label>:624:                                    ; preds = %616
  %625 = icmp eq i8* %1, bitcast (i32* @p_ea to i8*), !dbg !7232
  br i1 %625, label %626, label %631, !dbg !7233

; <label>:626:                                    ; preds = %624
  %627 = load i32, i32* @p_ea, align 4, !dbg !7234, !tbaa !3060
  %628 = icmp eq i32 %627, 0, !dbg !7234
  %629 = or i1 %169, %628, !dbg !7237
  br i1 %629, label %710, label %630, !dbg !7237

; <label>:630:                                    ; preds = %626
  tail call void @win_equal(%struct.window_S* %163, i32 0, i32 0) #11, !dbg !7238
  br label %710, !dbg !7238

; <label>:631:                                    ; preds = %624
  %632 = icmp eq i8* %1, bitcast (i32* @p_wiv to i8*), !dbg !7239
  br i1 %632, label %633, label %650, !dbg !7240

; <label>:633:                                    ; preds = %631
  %634 = load i32, i32* @p_wiv, align 4, !dbg !7241, !tbaa !3060
  %635 = icmp eq i32 %634, 0, !dbg !7241
  %636 = or i1 %169, %635, !dbg !7244
  br i1 %636, label %638, label %637, !dbg !7244

; <label>:637:                                    ; preds = %633
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1050, i64 0, i64 0), i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @term_strings, i64 0, i64 48), align 8, !dbg !7245, !tbaa !3115
  br label %645, !dbg !7246

; <label>:638:                                    ; preds = %633
  %639 = and i1 %169, %635, !dbg !7247
  br i1 %639, label %642, label %640, !dbg !7247

; <label>:640:                                    ; preds = %638
  %641 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @term_strings, i64 0, i64 48), align 8, !dbg !7249, !tbaa !3115
  br label %645, !dbg !7247

; <label>:642:                                    ; preds = %638
  %643 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !7250, !tbaa !3115
  store i64 %643, i64* bitcast (i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @term_strings, i64 0, i64 48) to i64*), align 8, !dbg !7251, !tbaa !3115
  %644 = inttoptr i64 %643 to i8*, !dbg !7252
  br label %645, !dbg !7252

; <label>:645:                                    ; preds = %640, %642, %637
  %646 = phi i8* [ %641, %640 ], [ %644, %642 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1050, i64 0, i64 0), %637 ], !dbg !7249
  %647 = load i8, i8* %646, align 1, !dbg !7253, !tbaa !3150
  %648 = icmp ne i8 %647, 0, !dbg !7254
  %649 = zext i1 %648 to i32, !dbg !7254
  store i32 %649, i32* @p_wiv, align 4, !dbg !7255, !tbaa !3060
  br label %710, !dbg !7256

; <label>:650:                                    ; preds = %631
  %651 = icmp eq i8* %1, bitcast (i32* @p_beval to i8*), !dbg !7257
  br i1 %651, label %652, label %665, !dbg !7258

; <label>:652:                                    ; preds = %650
  %653 = load i32, i32* @balloonEvalForTerm, align 4, !dbg !7259, !tbaa !3060
  %654 = icmp eq i32 %653, 0, !dbg !7259
  br i1 %654, label %655, label %710, !dbg !7262

; <label>:655:                                    ; preds = %652
  %656 = load i32, i32* @p_beval, align 4, !dbg !7263, !tbaa !3060
  %657 = icmp eq i32 %656, 0, !dbg !7263
  %658 = or i1 %169, %657, !dbg !7266
  br i1 %658, label %661, label %659, !dbg !7266

; <label>:659:                                    ; preds = %655
  %660 = load %struct.BalloonEvalStruct*, %struct.BalloonEvalStruct** @balloonEval, align 8, !dbg !7267, !tbaa !3115
  tail call void @gui_mch_enable_beval_area(%struct.BalloonEvalStruct* %660) #11, !dbg !7268
  br label %710, !dbg !7268

; <label>:661:                                    ; preds = %655
  %662 = and i1 %169, %657, !dbg !7269
  br i1 %662, label %663, label %710, !dbg !7269

; <label>:663:                                    ; preds = %661
  %664 = load %struct.BalloonEvalStruct*, %struct.BalloonEvalStruct** @balloonEval, align 8, !dbg !7271, !tbaa !3115
  tail call void @gui_mch_disable_beval_area(%struct.BalloonEvalStruct* %664) #11, !dbg !7272
  br label %710, !dbg !7272

; <label>:665:                                    ; preds = %650
  %666 = icmp eq i8* %1, bitcast (i32* @p_bevalterm to i8*), !dbg !7273
  br i1 %666, label %667, label %668, !dbg !7274

; <label>:667:                                    ; preds = %665
  tail call void @mch_bevalterm_changed() #11, !dbg !7275
  br label %710, !dbg !7277

; <label>:668:                                    ; preds = %665
  %669 = icmp eq i8* %1, bitcast (i32* @p_acd to i8*), !dbg !7278
  br i1 %669, label %670, label %674, !dbg !7279

; <label>:670:                                    ; preds = %668
  %671 = load i32, i32* @p_acd, align 4, !dbg !7280, !tbaa !3060
  %672 = icmp eq i32 %671, 0, !dbg !7280
  br i1 %672, label %710, label %673, !dbg !7284

; <label>:673:                                    ; preds = %670
  tail call void @do_autochdir() #11, !dbg !7280
  br label %710, !dbg !7280

; <label>:674:                                    ; preds = %668
  %675 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 4, !dbg !7285
  %676 = icmp eq i32* %675, %6, !dbg !7286
  br i1 %676, label %677, label %683, !dbg !7287

; <label>:677:                                    ; preds = %674
  tail call void @diff_buf_adjust(%struct.window_S* %163) #11, !dbg !7288
  %678 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7290, !tbaa !3115
  %679 = tail call i32 @foldmethodIsDiff(%struct.window_S* %678) #11, !dbg !7292
  %680 = icmp eq i32 %679, 0, !dbg !7292
  br i1 %680, label %710, label %681, !dbg !7293

; <label>:681:                                    ; preds = %677
  %682 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7294, !tbaa !3115
  tail call void @foldUpdateAll(%struct.window_S* %682) #11, !dbg !7295
  br label %710, !dbg !7295

; <label>:683:                                    ; preds = %674
  %684 = icmp eq i8* %1, bitcast (i32* @p_imdisable to i8*), !dbg !7296
  br i1 %684, label %685, label %698, !dbg !7297

; <label>:685:                                    ; preds = %683
  %686 = load i32, i32* @p_imdisable, align 4, !dbg !7298, !tbaa !3060
  %687 = icmp eq i32 %686, 0, !dbg !7298
  br i1 %687, label %689, label %688, !dbg !7301

; <label>:688:                                    ; preds = %685
  tail call void @im_set_active(i32 0) #11, !dbg !7302
  br label %710, !dbg !7302

; <label>:689:                                    ; preds = %685
  %690 = load i32, i32* @State, align 4, !dbg !7303, !tbaa !3060
  %691 = and i32 %690, 16, !dbg !7305
  %692 = icmp eq i32 %691, 0, !dbg !7305
  br i1 %692, label %710, label %693, !dbg !7306

; <label>:693:                                    ; preds = %689
  %694 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %173, i64 0, i32 61, !dbg !7307
  %695 = load i64, i64* %694, align 8, !dbg !7307, !tbaa !7308
  %696 = icmp eq i64 %695, 2, !dbg !7309
  %697 = zext i1 %696 to i32, !dbg !7309
  tail call void @im_set_active(i32 %697) #11, !dbg !7310
  br label %710, !dbg !7310

; <label>:698:                                    ; preds = %683
  %699 = getelementptr inbounds %struct.window_S, %struct.window_S* %163, i64 0, i32 121, i32 31, !dbg !7311
  %700 = icmp eq i32* %699, %6, !dbg !7312
  br i1 %700, label %701, label %710, !dbg !7313

; <label>:701:                                    ; preds = %698
  %702 = load i32, i32* %6, align 8, !dbg !7314, !tbaa !7315
  %703 = icmp eq i32 %702, 0, !dbg !7316
  br i1 %703, label %710, label %704, !dbg !7317

; <label>:704:                                    ; preds = %701
  %705 = tail call i8* @did_set_spelllang(%struct.window_S* nonnull %163) #11, !dbg !7318
  call void @llvm.dbg.value(metadata i8* %705, metadata !3007, metadata !DIExpression()), !dbg !7319
  %706 = icmp eq i8* %705, null, !dbg !7320
  br i1 %706, label %710, label %707, !dbg !7322

; <label>:707:                                    ; preds = %704
  %708 = tail call i8* @dcgettext(i8* null, i8* nonnull %705, i32 5) #11, !dbg !7323
  %709 = tail call i32 @emsg(i8* %708) #11, !dbg !7324
  br label %710, !dbg !7324

; <label>:710:                                    ; preds = %567, %563, %609, %603, %707, %704, %306, %315, %319, %178, %230, %549, %560, %619, %652, %670, %677, %689, %701, %158, %214, %233, %262, %270, %282, %528, %536, %527, %545, %588, %622, %645, %667, %681, %698, %688, %693, %673, %663, %661, %659, %630, %626, %615, %597, %582, %552, %542, %515, %295, %296, %274, %266, %258, %227, %171, %152
  %711 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7325, !tbaa !3115
  %712 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 0, !dbg !7327
  %713 = icmp eq i32* %712, %6, !dbg !7328
  br i1 %713, label %714, label %751, !dbg !7329

; <label>:714:                                    ; preds = %710
  %715 = load i32, i32* %6, align 8, !dbg !7330, !tbaa !7333
  %716 = icmp eq i32 %715, 0, !dbg !7334
  %717 = load i32, i32* @p_tbidi, align 4, !tbaa !3060
  %718 = icmp ne i32 %717, 0
  br i1 %716, label %741, label %719, !dbg !7335

; <label>:719:                                    ; preds = %714
  br i1 %718, label %729, label %720, !dbg !7336

; <label>:720:                                    ; preds = %719
  %721 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 28, !dbg !7338
  %722 = load i32, i32* %721, align 4, !dbg !7338, !tbaa !7342
  %723 = icmp eq i32 %722, 0, !dbg !7343
  br i1 %723, label %724, label %725, !dbg !7344

; <label>:724:                                    ; preds = %720
  store i32 1, i32* %721, align 4, !dbg !7345, !tbaa !7342
  call void @changed_window_setting() #11, !dbg !7347
  br label %725, !dbg !7348

; <label>:725:                                    ; preds = %720, %724
  %726 = load i32, i32* @p_arshape, align 4, !dbg !7349, !tbaa !3060
  %727 = icmp eq i32 %726, 0, !dbg !7349
  br i1 %727, label %728, label %729, !dbg !7351

; <label>:728:                                    ; preds = %725
  store i32 1, i32* @p_arshape, align 4, !dbg !7352, !tbaa !3060
  call void @redraw_later_clear() #11, !dbg !7354
  br label %729, !dbg !7355

; <label>:729:                                    ; preds = %725, %728, %719
  %730 = load i8*, i8** @p_enc, align 8, !dbg !7356, !tbaa !3115
  %731 = call i32 @strcmp(i8* %730, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1051, i64 0, i64 0)) #12, !dbg !7356
  %732 = icmp eq i32 %731, 0, !dbg !7358
  br i1 %732, label %739, label %733, !dbg !7359

; <label>:733:                                    ; preds = %729
  %734 = load i32, i32* getelementptr inbounds ([48 x i32], [48 x i32]* @highlight_attr, i64 0, i64 21), align 4, !dbg !7360, !tbaa !3060
  call void @msg_source(i32 %734) #11, !dbg !7362
  %735 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1052, i64 0, i64 0), i32 5) #11, !dbg !7363
  %736 = load i32, i32* getelementptr inbounds ([48 x i32], [48 x i32]* @highlight_attr, i64 0, i64 21), align 4, !dbg !7364, !tbaa !3060
  %737 = call i32 @msg_attr(i8* %735, i32 %736) #11, !dbg !7365
  %738 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1052, i64 0, i64 0), i32 5) #11, !dbg !7366
  call void @set_vim_var_string(i32 4, i8* %738, i32 -1) #11, !dbg !7367
  br label %739, !dbg !7368

; <label>:739:                                    ; preds = %729, %733
  store i32 1, i32* @p_deco, align 4, !dbg !7369, !tbaa !3060
  %740 = call i8* @set_option_value(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.484, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i64 0, i64 0), i32 4), !dbg !7370
  br label %793, !dbg !7371

; <label>:741:                                    ; preds = %714
  br i1 %718, label %747, label %742, !dbg !7372

; <label>:742:                                    ; preds = %741
  %743 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 28, !dbg !7374
  %744 = load i32, i32* %743, align 4, !dbg !7374, !tbaa !7342
  %745 = icmp eq i32 %744, 0, !dbg !7378
  br i1 %745, label %747, label %746, !dbg !7379

; <label>:746:                                    ; preds = %742
  store i32 0, i32* %743, align 4, !dbg !7380, !tbaa !7342
  call void @changed_window_setting() #11, !dbg !7382
  br label %747, !dbg !7383

; <label>:747:                                    ; preds = %742, %746, %741
  %748 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7384, !tbaa !3115
  %749 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %748, i64 0, i32 61, !dbg !7385
  %750 = bitcast i64* %749 to <2 x i64>*, !dbg !7386
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %750, align 8, !dbg !7386, !tbaa !4248
  br label %793

; <label>:751:                                    ; preds = %710
  %752 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 22, !dbg !7387
  %753 = icmp eq i32* %752, %6, !dbg !7389
  br i1 %753, label %760, label %754, !dbg !7390

; <label>:754:                                    ; preds = %751
  %755 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 23, !dbg !7391
  %756 = icmp eq i32* %755, %6, !dbg !7392
  %757 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !7393
  %758 = icmp ne i32 %757, 0, !dbg !7394
  %759 = and i1 %756, %758, !dbg !7395
  br i1 %759, label %763, label %785, !dbg !7395

; <label>:760:                                    ; preds = %751
  %761 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !7393, !tbaa !5672
  %762 = icmp eq i32 %761, 0, !dbg !7394
  br i1 %762, label %785, label %763, !dbg !7396

; <label>:763:                                    ; preds = %760, %754
  %764 = phi i32 [ %761, %760 ], [ %757, %754 ]
  %765 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 47, !dbg !7397
  %766 = load i8*, i8** %765, align 8, !dbg !7397, !tbaa !7398
  %767 = load i8, i8* %766, align 1, !dbg !7399, !tbaa !3150
  %768 = icmp eq i8 %767, 110, !dbg !7400
  br i1 %768, label %769, label %785, !dbg !7401

; <label>:769:                                    ; preds = %763
  %770 = getelementptr inbounds i8, i8* %766, i64 1, !dbg !7402
  %771 = load i8, i8* %770, align 1, !dbg !7403, !tbaa !3150
  %772 = icmp eq i8 %771, 117, !dbg !7404
  br i1 %772, label %773, label %785, !dbg !7405

; <label>:773:                                    ; preds = %769
  %774 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7406, !tbaa !3115
  %775 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %774, i64 0, i32 222, !dbg !7407
  %776 = load %struct.sign_entry*, %struct.sign_entry** %775, align 8, !dbg !7407, !tbaa !7408
  %777 = icmp eq %struct.sign_entry* %776, null, !dbg !7409
  br i1 %777, label %785, label %778, !dbg !7410

; <label>:778:                                    ; preds = %773
  %779 = load i32, i32* %752, align 8, !dbg !7411, !tbaa !7414
  %780 = icmp ne i32 %779, 0, !dbg !7415
  %781 = getelementptr inbounds %struct.window_S, %struct.window_S* %711, i64 0, i32 121, i32 23, !dbg !7416
  %782 = icmp eq i32* %781, %6, !dbg !7417
  %783 = and i1 %782, %780, !dbg !7418
  br i1 %783, label %793, label %784, !dbg !7418

; <label>:784:                                    ; preds = %778
  call void @redraw_all_later(i32 50) #11, !dbg !7419
  br label %793, !dbg !7419

; <label>:785:                                    ; preds = %760, %773, %769, %763, %754
  %786 = phi i32 [ 0, %760 ], [ %764, %773 ], [ %764, %769 ], [ %764, %763 ], [ %757, %754 ]
  %787 = icmp eq i8* %1, bitcast (i32* @p_tgc to i8*), !dbg !7420
  br i1 %787, label %788, label %793, !dbg !7422

; <label>:788:                                    ; preds = %785
  %789 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !7423
  %790 = or i32 %789, %786, !dbg !7426
  %791 = icmp eq i32 %790, 0, !dbg !7426
  br i1 %791, label %792, label %793, !dbg !7426

; <label>:792:                                    ; preds = %788
  call void @highlight_gui_started() #11, !dbg !7427
  br label %793, !dbg !7427

; <label>:793:                                    ; preds = %778, %788, %784, %792, %785, %739, %747
  %794 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 2, !dbg !7428
  %795 = load i64, i64* %794, align 16, !dbg !7429, !tbaa !3107
  %796 = or i64 %795, 256, !dbg !7429
  store i64 %796, i64* %794, align 16, !dbg !7429, !tbaa !3107
  %797 = sext i32 %3 to i64, !dbg !7430
  %798 = icmp ne i32 %7, 0, !dbg !7431
  %799 = zext i1 %798 to i64, !dbg !7432
  %800 = icmp ne i32 %44, 0, !dbg !7433
  %801 = zext i1 %800 to i64, !dbg !7434
  %802 = icmp ne i32 %2, 0, !dbg !7435
  %803 = zext i1 %802 to i64, !dbg !7436
  call fastcc void @apply_optionset_autocmd(i32 %0, i64 %797, i64 %799, i64 %801, i64 %803, i8* null), !dbg !7437
  call void @comp_col() #11, !dbg !7438
  %804 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7439, !tbaa !3115
  %805 = getelementptr inbounds %struct.window_S, %struct.window_S* %804, i64 0, i32 8, !dbg !7441
  %806 = load i32, i32* %805, align 8, !dbg !7441, !tbaa !7442
  %807 = icmp eq i32 %806, 2147483647, !dbg !7443
  br i1 %807, label %814, label %808, !dbg !7444

; <label>:808:                                    ; preds = %793
  %809 = load i64, i64* %794, align 16, !dbg !7445, !tbaa !3107
  %810 = and i64 %809, 67133440, !dbg !7446
  %811 = icmp eq i64 %810, 0, !dbg !7447
  br i1 %811, label %814, label %812, !dbg !7448

; <label>:812:                                    ; preds = %808
  %813 = getelementptr inbounds %struct.window_S, %struct.window_S* %804, i64 0, i32 9, !dbg !7449
  store i32 1, i32* %813, align 4, !dbg !7450, !tbaa !7451
  br label %814, !dbg !7452

; <label>:814:                                    ; preds = %808, %793, %812
  %815 = trunc i32 %3 to i8, !dbg !7453
  %816 = icmp sgt i8 %815, -1, !dbg !7453
  br i1 %816, label %817, label %819, !dbg !7455

; <label>:817:                                    ; preds = %814
  %818 = load i64, i64* %794, align 16, !dbg !7456, !tbaa !3107
  call void @check_redraw(i64 %818), !dbg !7457
  br label %819, !dbg !7457

; <label>:819:                                    ; preds = %814, %817, %578, %12, %255
  %820 = phi i8* [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1047, i64 0, i64 0), %255 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_secure, i64 0, i64 0), %12 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1049, i64 0, i64 0), %578 ], [ null, %817 ], [ null, %814 ]
  ret i8* %820, !dbg !7458
}

; Function Attrs: nounwind uwtable
define i32 @string_to_key(i8*, i32) local_unnamed_addr #0 !dbg !5517 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !5519, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %1, metadata !5520, metadata !DIExpression()), !dbg !7460
  %5 = load i8, i8* %0, align 1, !dbg !7461, !tbaa !3150
  switch i8 %5, label %46 [
    i8 60, label %6
    i8 94, label %37
  ], !dbg !7462

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !7463
  call void @llvm.dbg.value(metadata i8* %7, metadata !3910, metadata !DIExpression()) #11, !dbg !7464
  call void @llvm.dbg.value(metadata i32 1, metadata !3915, metadata !DIExpression()) #11, !dbg !7466
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !7467
  %8 = bitcast i32* %3 to i8*, !dbg !7468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11, !dbg !7468
  %9 = bitcast i8** %4 to i8*, !dbg !7469
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11, !dbg !7469
  call void @llvm.dbg.value(metadata i8* %7, metadata !3918, metadata !DIExpression()) #11, !dbg !7470
  store i8* %7, i8** %4, align 8, !dbg !7470, !tbaa !3115
  %10 = load i8, i8* %7, align 1, !dbg !7471, !tbaa !3150
  %11 = icmp eq i8 %10, 116, !dbg !7472
  br i1 %11, label %12, label %30, !dbg !7473

; <label>:12:                                     ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !7474
  %14 = load i8, i8* %13, align 1, !dbg !7474, !tbaa !3150
  %15 = icmp eq i8 %14, 95, !dbg !7475
  br i1 %15, label %16, label %30, !dbg !7476

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !7477
  %18 = load i8, i8* %17, align 1, !dbg !7477, !tbaa !3150
  %19 = zext i8 %18 to i32, !dbg !7477
  %20 = icmp eq i8 %18, 0, !dbg !7477
  br i1 %20, label %30, label %21, !dbg !7478

; <label>:21:                                     ; preds = %16
  %22 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !7479
  %23 = load i8, i8* %22, align 1, !dbg !7479, !tbaa !3150
  %24 = icmp eq i8 %23, 0, !dbg !7479
  br i1 %24, label %30, label %25, !dbg !7480

; <label>:25:                                     ; preds = %21
  %26 = zext i8 %23 to i32, !dbg !7479
  %27 = shl nuw nsw i32 %26, 8, !dbg !7481
  %28 = or i32 %27, %19, !dbg !7481
  %29 = sub nsw i32 0, %28, !dbg !7481
  call void @llvm.dbg.value(metadata i32 %29, metadata !3916, metadata !DIExpression()) #11, !dbg !7467
  br label %35, !dbg !7482

; <label>:30:                                     ; preds = %21, %16, %12, %6
  call void @llvm.dbg.value(metadata i8* %7, metadata !3918, metadata !DIExpression()) #11, !dbg !7470
  call void @llvm.dbg.value(metadata i8* %0, metadata !3918, metadata !DIExpression()) #11, !dbg !7470
  store i8* %0, i8** %4, align 8, !dbg !7483, !tbaa !3115
  call void @llvm.dbg.value(metadata i32 0, metadata !3917, metadata !DIExpression()) #11, !dbg !7484
  store i32 0, i32* %3, align 4, !dbg !7485, !tbaa !3060
  call void @llvm.dbg.value(metadata i32* %3, metadata !3917, metadata !DIExpression()) #11, !dbg !7484
  call void @llvm.dbg.value(metadata i8** %4, metadata !3918, metadata !DIExpression()) #11, !dbg !7470
  %31 = call i32 @find_special_key(i8** nonnull %4, i32* nonnull %3, i32 11, i32* null) #11, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %31, metadata !3916, metadata !DIExpression()) #11, !dbg !7467
  %32 = load i32, i32* %3, align 4, !dbg !7487, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %32, metadata !3917, metadata !DIExpression()) #11, !dbg !7484
  %33 = icmp eq i32 %32, 0, !dbg !7487
  %34 = select i1 %33, i32 %31, i32 0, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %34, metadata !3916, metadata !DIExpression()) #11, !dbg !7467
  br label %35, !dbg !7489

; <label>:35:                                     ; preds = %25, %30
  %36 = phi i32 [ %29, %25 ], [ %34, %30 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !3916, metadata !DIExpression()) #11, !dbg !7467
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11, !dbg !7490
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11, !dbg !7490
  br label %55, !dbg !7491

; <label>:37:                                     ; preds = %2
  %38 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !7492
  %39 = load i8, i8* %38, align 1, !dbg !7492, !tbaa !3150
  %40 = zext i8 %39 to i32, !dbg !7492
  %41 = add i8 %39, -97, !dbg !7492
  %42 = icmp ugt i8 %41, 25, !dbg !7492
  %43 = add nsw i32 %40, -32, !dbg !7492
  %44 = select i1 %42, i32 %40, i32 %43, !dbg !7492
  %45 = xor i32 %44, 64, !dbg !7492
  br label %55, !dbg !7493

; <label>:46:                                     ; preds = %2
  %47 = zext i8 %5 to i32, !dbg !7461
  %48 = icmp eq i32 %1, 0, !dbg !7494
  %49 = load i32, i32* @has_mbyte, align 4, !dbg !7496
  %50 = icmp eq i32 %49, 0, !dbg !7496
  %51 = or i1 %48, %50, !dbg !7497
  br i1 %51, label %55, label %52, !dbg !7497

; <label>:52:                                     ; preds = %46
  %53 = load i32 (i8*)*, i32 (i8*)** @mb_ptr2char, align 8, !dbg !7496, !tbaa !3115
  %54 = tail call i32 %53(i8* nonnull %0) #11, !dbg !7496
  br label %55, !dbg !7496

; <label>:55:                                     ; preds = %46, %52, %37, %35
  %56 = phi i32 [ %36, %35 ], [ %45, %37 ], [ %54, %52 ], [ %47, %46 ]
  ret i32 %56, !dbg !7498
}

declare void @vim_str2nr(i8*, i32*, i32*, i32, i64*, i64*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i8* @set_num_option(i32, i8*, i64, i8*, i64, i32) unnamed_addr #0 !dbg !7499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7503, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7504, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i64 %2, metadata !7505, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i8* %3, metadata !7506, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i64 %4, metadata !7507, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %5, metadata !7508, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i8* null, metadata !7509, metadata !DIExpression()), !dbg !7550
  %7 = bitcast i8* %1 to i64*, !dbg !7551
  %8 = load i64, i64* %7, align 8, !dbg !7551, !tbaa !4248
  call void @llvm.dbg.value(metadata i64 %8, metadata !7510, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i64 0, metadata !7511, metadata !DIExpression()), !dbg !7553
  %9 = load i64, i64* @Rows, align 8, !dbg !7554, !tbaa !4248
  call void @llvm.dbg.value(metadata i64 %9, metadata !7512, metadata !DIExpression()), !dbg !7555
  %10 = load i64, i64* @Columns, align 8, !dbg !7556, !tbaa !4248
  call void @llvm.dbg.value(metadata i64 %10, metadata !7513, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i64* %7, metadata !7514, metadata !DIExpression()), !dbg !7558
  %11 = load i32, i32* @secure, align 4, !dbg !7559, !tbaa !3060
  %12 = load i32, i32* @sandbox, align 4, !dbg !7561
  %13 = or i32 %12, %11, !dbg !7562
  %14 = icmp eq i32 %13, 0, !dbg !7562
  br i1 %14, label %21, label %15, !dbg !7562

; <label>:15:                                     ; preds = %6
  %16 = sext i32 %0 to i64, !dbg !7563
  %17 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %16, i32 2, !dbg !7564
  %18 = load i64, i64* %17, align 16, !dbg !7564, !tbaa !3107
  %19 = and i64 %18, 524288, !dbg !7565
  %20 = icmp eq i64 %19, 0, !dbg !7565
  br i1 %20, label %21, label %703, !dbg !7566

; <label>:21:                                     ; preds = %15, %6
  %22 = and i32 %5, 6, !dbg !7567
  %23 = icmp eq i32 %22, 0, !dbg !7569
  %24 = sext i32 %0 to i64
  br i1 %23, label %27, label %25, !dbg !7570

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 4, !dbg !7571
  br label %45, !dbg !7570

; <label>:27:                                     ; preds = %21
  %28 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, !dbg !7573
  call void @llvm.dbg.value(metadata %struct.vimoption* %28, metadata !4275, metadata !DIExpression()) #11, !dbg !7574
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !7576
  %29 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 4, !dbg !7577
  %30 = load i32, i32* %29, align 16, !dbg !7577, !tbaa !4220
  %31 = icmp eq i32 %30, 0, !dbg !7578
  br i1 %31, label %39, label %32, !dbg !7579

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 3, !dbg !7580
  %34 = load i8*, i8** %33, align 8, !dbg !7580, !tbaa !3461
  %35 = icmp eq i8* %34, inttoptr (i64 -1 to i8*), !dbg !7581
  br i1 %35, label %36, label %41, !dbg !7582

; <label>:36:                                     ; preds = %32
  %37 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %28) #11, !dbg !7583
  %38 = getelementptr inbounds i8, i8* %37, i64 1376, !dbg !7583
  br label %41, !dbg !7584

; <label>:39:                                     ; preds = %27
  %40 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %28) #11, !dbg !7585
  br label %41, !dbg !7586

; <label>:41:                                     ; preds = %32, %36, %39
  %42 = phi i8* [ %38, %36 ], [ %40, %39 ], [ %34, %32 ]
  %43 = bitcast i8* %42 to i64*, !dbg !7587
  %44 = load i64, i64* %43, align 8, !dbg !7587, !tbaa !4248
  call void @llvm.dbg.value(metadata i64 %44, metadata !7511, metadata !DIExpression()), !dbg !7553
  br label %45, !dbg !7588

; <label>:45:                                     ; preds = %25, %41
  %46 = phi i32* [ %26, %25 ], [ %29, %41 ], !dbg !7571
  %47 = phi i64 [ 0, %25 ], [ %44, %41 ]
  call void @llvm.dbg.value(metadata i64 %47, metadata !7511, metadata !DIExpression()), !dbg !7553
  store i64 %2, i64* %7, align 8, !dbg !7589, !tbaa !4248
  %48 = load i64, i64* bitcast (%struct.sctx_T* @current_sctx to i64*), align 8, !dbg !7590
  call void @llvm.dbg.value(metadata i64 %48, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !7591
  %49 = load i64, i64* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 2), align 8, !dbg !7590
  call void @llvm.dbg.value(metadata i64 %49, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !7591
  %50 = load i64, i64* bitcast (i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 3) to i64*), align 8, !dbg !7590
  call void @llvm.dbg.value(metadata i64 %50, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %0, metadata !4571, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %5, metadata !4572, metadata !DIExpression()), !dbg !7592
  %51 = icmp ne i32 %22, 0, !dbg !7593
  %52 = load i32, i32* %46, align 16, !dbg !7571, !tbaa !4220
  call void @llvm.dbg.value(metadata i32 %52, metadata !4575, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i64 %49, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !7595
  call void @llvm.dbg.value(metadata i64 %50, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !7595
  %53 = and i32 %5, 8, !dbg !7596
  %54 = icmp eq i32 %53, 0, !dbg !7596
  br i1 %54, label %55, label %63, !dbg !7597

; <label>:55:                                     ; preds = %45
  %56 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !7598, !tbaa !3217
  %57 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !7598, !tbaa !3229
  %58 = add nsw i32 %57, -1, !dbg !7598
  %59 = sext i32 %58 to i64, !dbg !7598
  %60 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %56, i64 %59, i32 0, !dbg !7598
  %61 = load i64, i64* %60, align 8, !dbg !7598, !tbaa !4588
  %62 = add nsw i64 %61, %49, !dbg !7599
  call void @llvm.dbg.value(metadata i64 %62, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !7595
  br label %63, !dbg !7600

; <label>:63:                                     ; preds = %55, %45
  %64 = phi i64 [ %49, %45 ], [ %62, %55 ]
  call void @llvm.dbg.value(metadata i64 %64, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !7595
  %65 = and i32 %5, 2, !dbg !7601
  %66 = icmp eq i32 %65, 0, !dbg !7601
  %67 = and i1 %51, %66, !dbg !7602
  %68 = xor i1 %67, true, !dbg !7602
  %69 = and i32 %52, 24576, !dbg !7603
  %70 = icmp eq i32 %69, 0, !dbg !7604
  %71 = or i1 %70, %68, !dbg !7602
  br i1 %71, label %72, label %78, !dbg !7602

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 6, !dbg !7605
  %74 = bitcast %struct.sctx_T* %73 to i64*, !dbg !7605
  store i64 %48, i64* %74, align 8, !dbg !7605
  %75 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 6, i32 2, !dbg !7605
  store i64 %64, i64* %75, align 8, !dbg !7605
  %76 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 6, i32 3, !dbg !7605
  %77 = bitcast i32* %76 to i64*, !dbg !7605
  store i64 %50, i64* %77, align 8, !dbg !7605
  br label %78, !dbg !7606

; <label>:78:                                     ; preds = %72, %63
  %79 = and i32 %5, 4, !dbg !7607
  %80 = icmp eq i32 %79, 0, !dbg !7607
  %81 = and i1 %51, %80, !dbg !7608
  br i1 %81, label %106, label %82, !dbg !7608

; <label>:82:                                     ; preds = %78
  %83 = and i32 %52, 16384, !dbg !7609
  %84 = icmp eq i32 %83, 0, !dbg !7609
  br i1 %84, label %94, label %85, !dbg !7610

; <label>:85:                                     ; preds = %82
  %86 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7611, !tbaa !3115
  %87 = and i32 %52, 4095, !dbg !7612
  %88 = zext i32 %87 to i64, !dbg !7611
  %89 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %86, i64 0, i32 66, i64 %88, !dbg !7611
  %90 = bitcast %struct.sctx_T* %89 to i64*, !dbg !7613
  store i64 %48, i64* %90, align 8, !dbg !7613
  %91 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %86, i64 0, i32 66, i64 %88, i32 2, !dbg !7613
  store i64 %64, i64* %91, align 8, !dbg !7613
  %92 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %86, i64 0, i32 66, i64 %88, i32 3, !dbg !7613
  %93 = bitcast i32* %92 to i64*, !dbg !7613
  store i64 %50, i64* %93, align 8, !dbg !7613
  br label %106, !dbg !7611

; <label>:94:                                     ; preds = %82
  %95 = and i32 %52, 8192, !dbg !7614
  %96 = icmp eq i32 %95, 0, !dbg !7614
  br i1 %96, label %106, label %97, !dbg !7615

; <label>:97:                                     ; preds = %94
  %98 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7616, !tbaa !3115
  %99 = and i32 %52, 4095, !dbg !7617
  %100 = zext i32 %99 to i64, !dbg !7616
  %101 = getelementptr inbounds %struct.window_S, %struct.window_S* %98, i64 0, i32 121, i32 50, i64 %100, !dbg !7616
  %102 = bitcast %struct.sctx_T* %101 to i64*, !dbg !7618
  store i64 %48, i64* %102, align 8, !dbg !7618
  %103 = getelementptr inbounds %struct.window_S, %struct.window_S* %98, i64 0, i32 121, i32 50, i64 %100, i32 2, !dbg !7618
  store i64 %64, i64* %103, align 8, !dbg !7618
  %104 = getelementptr inbounds %struct.window_S, %struct.window_S* %98, i64 0, i32 121, i32 50, i64 %100, i32 3, !dbg !7618
  %105 = bitcast i32* %104 to i64*, !dbg !7618
  store i64 %50, i64* %105, align 8, !dbg !7618
  br label %106, !dbg !7616

; <label>:106:                                    ; preds = %78, %85, %94, %97
  store i32 1, i32* @need_mouse_correct, align 4, !dbg !7619, !tbaa !3060
  %107 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7620, !tbaa !3115
  %108 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %107, i64 0, i32 122, !dbg !7622
  %109 = load i64, i64* %108, align 8, !dbg !7622, !tbaa !7623
  %110 = icmp slt i64 %109, 0, !dbg !7624
  br i1 %110, label %111, label %130, !dbg !7625

; <label>:111:                                    ; preds = %106
  %112 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %107, i64 0, i32 143, !dbg !7626
  %113 = load i32*, i32** %112, align 8, !dbg !7626, !tbaa !4093
  %114 = tail call i32 @tabstop_count(i32* %113) #11, !dbg !7628
  %115 = icmp sgt i32 %114, 0, !dbg !7629
  %116 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !tbaa !3115
  br i1 %115, label %117, label %123, !dbg !7628

; <label>:117:                                    ; preds = %111
  %118 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %116, i64 0, i32 143, !dbg !7630
  %119 = load i32*, i32** %118, align 8, !dbg !7630, !tbaa !4093
  %120 = tail call i32 @tabstop_first(i32* %119) #11, !dbg !7631
  %121 = sext i32 %120 to i64, !dbg !7631
  %122 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7632, !tbaa !3115
  br label %126, !dbg !7628

; <label>:123:                                    ; preds = %111
  %124 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %116, i64 0, i32 131, !dbg !7633
  %125 = load i64, i64* %124, align 8, !dbg !7633, !tbaa !7634
  br label %126, !dbg !7628

; <label>:126:                                    ; preds = %123, %117
  %127 = phi %struct.file_buffer* [ %122, %117 ], [ %116, %123 ], !dbg !7632
  %128 = phi i64 [ %121, %117 ], [ %125, %123 ], !dbg !7628
  %129 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %127, i64 0, i32 122, !dbg !7635
  store i64 %128, i64* %129, align 8, !dbg !7636, !tbaa !7623
  br label %130, !dbg !7637

; <label>:130:                                    ; preds = %126, %106
  %131 = phi %struct.file_buffer* [ %127, %126 ], [ %107, %106 ]
  %132 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %126 ], [ null, %106 ]
  call void @llvm.dbg.value(metadata i8* %132, metadata !7509, metadata !DIExpression()), !dbg !7550
  %133 = icmp eq i8* %1, bitcast (i64* @p_wh to i8*), !dbg !7638
  %134 = icmp eq i8* %1, bitcast (i64* @p_hh to i8*), !dbg !7639
  %135 = or i1 %133, %134, !dbg !7640
  br i1 %135, label %136, label %181, !dbg !7640

; <label>:136:                                    ; preds = %130
  %137 = load i64, i64* @p_wh, align 8, !dbg !7641, !tbaa !4248
  %138 = icmp slt i64 %137, 1, !dbg !7644
  br i1 %138, label %139, label %140, !dbg !7645

; <label>:139:                                    ; preds = %136
  store i64 1, i64* @p_wh, align 8, !dbg !7646, !tbaa !4248
  br label %140, !dbg !7648

; <label>:140:                                    ; preds = %139, %136
  %141 = phi i64 [ 1, %139 ], [ %137, %136 ], !dbg !7649
  %142 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %139 ], [ %132, %136 ]
  call void @llvm.dbg.value(metadata i8* %142, metadata !7509, metadata !DIExpression()), !dbg !7550
  %143 = load i64, i64* @p_wmh, align 8, !dbg !7651, !tbaa !4248
  %144 = icmp sgt i64 %143, %141, !dbg !7652
  br i1 %144, label %145, label %146, !dbg !7653

; <label>:145:                                    ; preds = %140
  store i64 %143, i64* @p_wh, align 8, !dbg !7654, !tbaa !4248
  br label %146, !dbg !7656

; <label>:146:                                    ; preds = %145, %140
  %147 = phi i64 [ %143, %145 ], [ %141, %140 ]
  %148 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_winheight, i64 0, i64 0), %145 ], [ %142, %140 ]
  call void @llvm.dbg.value(metadata i8* %148, metadata !7509, metadata !DIExpression()), !dbg !7550
  %149 = load i64, i64* @p_hh, align 8, !dbg !7657, !tbaa !4248
  %150 = icmp slt i64 %149, 0, !dbg !7659
  br i1 %150, label %151, label %152, !dbg !7660

; <label>:151:                                    ; preds = %146
  store i64 0, i64* @p_hh, align 8, !dbg !7661, !tbaa !4248
  br label %152, !dbg !7663

; <label>:152:                                    ; preds = %151, %146
  %153 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %151 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i8* %153, metadata !7509, metadata !DIExpression()), !dbg !7550
  %154 = load %struct.window_S*, %struct.window_S** @firstwin, align 8, !dbg !7664, !tbaa !3115
  %155 = load %struct.window_S*, %struct.window_S** @lastwin, align 8, !dbg !7664, !tbaa !3115
  %156 = icmp eq %struct.window_S* %154, %155, !dbg !7664
  br i1 %156, label %481, label %157, !dbg !7666

; <label>:157:                                    ; preds = %152
  br i1 %133, label %158, label %166, !dbg !7667

; <label>:158:                                    ; preds = %157
  %159 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7670, !tbaa !3115
  %160 = getelementptr inbounds %struct.window_S, %struct.window_S* %159, i64 0, i32 31, !dbg !7671
  %161 = load i32, i32* %160, align 4, !dbg !7671, !tbaa !7672
  %162 = sext i32 %161 to i64, !dbg !7670
  %163 = icmp sgt i64 %147, %162, !dbg !7673
  br i1 %163, label %164, label %166, !dbg !7674

; <label>:164:                                    ; preds = %158
  %165 = trunc i64 %147 to i32, !dbg !7675
  tail call void @win_setheight(i32 %165) #11, !dbg !7676
  br label %166, !dbg !7676

; <label>:166:                                    ; preds = %164, %158, %157
  br i1 %134, label %167, label %481, !dbg !7677

; <label>:167:                                    ; preds = %166
  %168 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7679, !tbaa !3115
  %169 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %168, i64 0, i32 214, !dbg !7680
  %170 = load i32, i32* %169, align 8, !dbg !7680, !tbaa !7681
  %171 = icmp eq i32 %170, 0, !dbg !7679
  br i1 %171, label %481, label %172, !dbg !7682

; <label>:172:                                    ; preds = %167
  %173 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7683, !tbaa !3115
  %174 = getelementptr inbounds %struct.window_S, %struct.window_S* %173, i64 0, i32 31, !dbg !7684
  %175 = load i32, i32* %174, align 4, !dbg !7684, !tbaa !7672
  %176 = sext i32 %175 to i64, !dbg !7683
  %177 = load i64, i64* @p_hh, align 8, !dbg !7685, !tbaa !4248
  %178 = icmp sgt i64 %177, %176, !dbg !7686
  br i1 %178, label %179, label %481, !dbg !7687

; <label>:179:                                    ; preds = %172
  %180 = trunc i64 %177 to i32, !dbg !7688
  tail call void @win_setheight(i32 %180) #11, !dbg !7689
  br label %481, !dbg !7689

; <label>:181:                                    ; preds = %130
  %182 = icmp eq i8* %1, bitcast (i64* @p_wmh to i8*), !dbg !7690
  br i1 %182, label %183, label %195, !dbg !7691

; <label>:183:                                    ; preds = %181
  %184 = load i64, i64* @p_wmh, align 8, !dbg !7692, !tbaa !4248
  %185 = icmp slt i64 %184, 0, !dbg !7695
  br i1 %185, label %186, label %187, !dbg !7696

; <label>:186:                                    ; preds = %183
  store i64 0, i64* @p_wmh, align 8, !dbg !7697, !tbaa !4248
  br label %187, !dbg !7699

; <label>:187:                                    ; preds = %186, %183
  %188 = phi i64 [ 0, %186 ], [ %184, %183 ], !dbg !7700
  %189 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %186 ], [ %132, %183 ]
  call void @llvm.dbg.value(metadata i8* %189, metadata !7509, metadata !DIExpression()), !dbg !7550
  %190 = load i64, i64* @p_wh, align 8, !dbg !7702, !tbaa !4248
  %191 = icmp sgt i64 %188, %190, !dbg !7703
  br i1 %191, label %192, label %193, !dbg !7704

; <label>:192:                                    ; preds = %187
  store i64 %190, i64* @p_wmh, align 8, !dbg !7705, !tbaa !4248
  br label %193, !dbg !7707

; <label>:193:                                    ; preds = %192, %187
  %194 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_winheight, i64 0, i64 0), %192 ], [ %189, %187 ]
  call void @llvm.dbg.value(metadata i8* %194, metadata !7509, metadata !DIExpression()), !dbg !7550
  tail call void @win_setminheight() #11, !dbg !7708
  br label %481, !dbg !7709

; <label>:195:                                    ; preds = %181
  %196 = icmp eq i8* %1, bitcast (i64* @p_wiw to i8*), !dbg !7710
  br i1 %196, label %197, label %221, !dbg !7711

; <label>:197:                                    ; preds = %195
  %198 = load i64, i64* @p_wiw, align 8, !dbg !7712, !tbaa !4248
  %199 = icmp slt i64 %198, 1, !dbg !7715
  br i1 %199, label %200, label %201, !dbg !7716

; <label>:200:                                    ; preds = %197
  store i64 1, i64* @p_wiw, align 8, !dbg !7717, !tbaa !4248
  br label %201, !dbg !7719

; <label>:201:                                    ; preds = %200, %197
  %202 = phi i64 [ 1, %200 ], [ %198, %197 ], !dbg !7720
  %203 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %200 ], [ %132, %197 ]
  call void @llvm.dbg.value(metadata i8* %203, metadata !7509, metadata !DIExpression()), !dbg !7550
  %204 = load i64, i64* @p_wmw, align 8, !dbg !7722, !tbaa !4248
  %205 = icmp sgt i64 %204, %202, !dbg !7723
  br i1 %205, label %206, label %207, !dbg !7724

; <label>:206:                                    ; preds = %201
  store i64 %204, i64* @p_wiw, align 8, !dbg !7725, !tbaa !4248
  br label %207, !dbg !7727

; <label>:207:                                    ; preds = %206, %201
  %208 = phi i64 [ %204, %206 ], [ %202, %201 ]
  %209 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_winwidth, i64 0, i64 0), %206 ], [ %203, %201 ]
  call void @llvm.dbg.value(metadata i8* %209, metadata !7509, metadata !DIExpression()), !dbg !7550
  %210 = load %struct.window_S*, %struct.window_S** @firstwin, align 8, !dbg !7728, !tbaa !3115
  %211 = load %struct.window_S*, %struct.window_S** @lastwin, align 8, !dbg !7728, !tbaa !3115
  %212 = icmp eq %struct.window_S* %210, %211, !dbg !7728
  br i1 %212, label %481, label %213, !dbg !7730

; <label>:213:                                    ; preds = %207
  %214 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7731, !tbaa !3115
  %215 = getelementptr inbounds %struct.window_S, %struct.window_S* %214, i64 0, i32 34, !dbg !7732
  %216 = load i32, i32* %215, align 8, !dbg !7732, !tbaa !7733
  %217 = sext i32 %216 to i64, !dbg !7731
  %218 = icmp sgt i64 %208, %217, !dbg !7734
  br i1 %218, label %219, label %481, !dbg !7735

; <label>:219:                                    ; preds = %213
  %220 = trunc i64 %208 to i32, !dbg !7736
  tail call void @win_setwidth(i32 %220) #11, !dbg !7737
  br label %481, !dbg !7737

; <label>:221:                                    ; preds = %195
  %222 = icmp eq i8* %1, bitcast (i64* @p_wmw to i8*), !dbg !7738
  br i1 %222, label %223, label %235, !dbg !7739

; <label>:223:                                    ; preds = %221
  %224 = load i64, i64* @p_wmw, align 8, !dbg !7740, !tbaa !4248
  %225 = icmp slt i64 %224, 0, !dbg !7743
  br i1 %225, label %226, label %227, !dbg !7744

; <label>:226:                                    ; preds = %223
  store i64 0, i64* @p_wmw, align 8, !dbg !7745, !tbaa !4248
  br label %227, !dbg !7747

; <label>:227:                                    ; preds = %226, %223
  %228 = phi i64 [ 0, %226 ], [ %224, %223 ], !dbg !7748
  %229 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %226 ], [ %132, %223 ]
  call void @llvm.dbg.value(metadata i8* %229, metadata !7509, metadata !DIExpression()), !dbg !7550
  %230 = load i64, i64* @p_wiw, align 8, !dbg !7750, !tbaa !4248
  %231 = icmp sgt i64 %228, %230, !dbg !7751
  br i1 %231, label %232, label %233, !dbg !7752

; <label>:232:                                    ; preds = %227
  store i64 %230, i64* @p_wmw, align 8, !dbg !7753, !tbaa !4248
  br label %233, !dbg !7755

; <label>:233:                                    ; preds = %232, %227
  %234 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_winwidth, i64 0, i64 0), %232 ], [ %229, %227 ]
  call void @llvm.dbg.value(metadata i8* %234, metadata !7509, metadata !DIExpression()), !dbg !7550
  tail call void @win_setminwidth() #11, !dbg !7756
  br label %481, !dbg !7757

; <label>:235:                                    ; preds = %221
  %236 = icmp eq i8* %1, bitcast (i64* @p_ls to i8*), !dbg !7758
  br i1 %236, label %237, label %238, !dbg !7759

; <label>:237:                                    ; preds = %235
  tail call void @last_status(i32 0) #11, !dbg !7760
  br label %481, !dbg !7762

; <label>:238:                                    ; preds = %235
  %239 = icmp eq i8* %1, bitcast (i64* @p_stal to i8*), !dbg !7763
  br i1 %239, label %240, label %241, !dbg !7764

; <label>:240:                                    ; preds = %238
  tail call void @shell_new_rows() #11, !dbg !7765
  br label %481, !dbg !7767

; <label>:241:                                    ; preds = %238
  %242 = icmp eq i8* %1, bitcast (i64* @p_linespace to i8*), !dbg !7768
  br i1 %242, label %243, label %250, !dbg !7769

; <label>:243:                                    ; preds = %241
  %244 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 1), align 4, !dbg !7770, !tbaa !5672
  %245 = icmp eq i32 %244, 0, !dbg !7773
  br i1 %245, label %481, label %246, !dbg !7774

; <label>:246:                                    ; preds = %243
  %247 = tail call i32 @gui_mch_adjust_charheight() #11, !dbg !7775
  %248 = icmp eq i32 %247, 1, !dbg !7776
  br i1 %248, label %249, label %481, !dbg !7777

; <label>:249:                                    ; preds = %246
  tail call void @gui_set_shellsize(i32 0, i32 0, i32 1) #11, !dbg !7778
  br label %481, !dbg !7778

; <label>:250:                                    ; preds = %241
  %251 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7779, !tbaa !3115
  %252 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 10, !dbg !7780
  %253 = icmp eq i64* %252, %7, !dbg !7781
  br i1 %253, label %254, label %259, !dbg !7782

; <label>:254:                                    ; preds = %250
  %255 = load i64, i64* %7, align 8, !dbg !7783, !tbaa !7786
  %256 = icmp slt i64 %255, 0, !dbg !7787
  br i1 %256, label %257, label %258, !dbg !7788

; <label>:257:                                    ; preds = %254
  store i64 0, i64* %7, align 8, !dbg !7789, !tbaa !7786
  br label %258, !dbg !7790

; <label>:258:                                    ; preds = %257, %254
  tail call void @newFoldLevel() #11, !dbg !7791
  br label %481, !dbg !7792

; <label>:259:                                    ; preds = %250
  %260 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 14, !dbg !7793
  %261 = icmp eq i64* %260, %7, !dbg !7794
  br i1 %261, label %262, label %263, !dbg !7795

; <label>:262:                                    ; preds = %259
  tail call void @foldUpdateAll(%struct.window_S* %251) #11, !dbg !7796
  br label %481, !dbg !7798

; <label>:263:                                    ; preds = %259
  %264 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 15, !dbg !7799
  %265 = icmp eq i64* %264, %7, !dbg !7800
  br i1 %265, label %266, label %275, !dbg !7801

; <label>:266:                                    ; preds = %263
  %267 = tail call i32 @foldmethodIsSyntax(%struct.window_S* %251) #11, !dbg !7802
  %268 = icmp eq i32 %267, 0, !dbg !7802
  br i1 %268, label %269, label %273, !dbg !7805

; <label>:269:                                    ; preds = %266
  %270 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7806, !tbaa !3115
  %271 = tail call i32 @foldmethodIsIndent(%struct.window_S* %270) #11, !dbg !7807
  %272 = icmp eq i32 %271, 0, !dbg !7807
  br i1 %272, label %481, label %273, !dbg !7808

; <label>:273:                                    ; preds = %269, %266
  %274 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7809, !tbaa !3115
  tail call void @foldUpdateAll(%struct.window_S* %274) #11, !dbg !7810
  br label %481, !dbg !7810

; <label>:275:                                    ; preds = %263
  %276 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 5, !dbg !7811
  %277 = icmp eq i64* %276, %7, !dbg !7812
  br i1 %277, label %278, label %285, !dbg !7813

; <label>:278:                                    ; preds = %275
  %279 = load i64, i64* %7, align 8, !dbg !7814, !tbaa !7817
  %280 = icmp slt i64 %279, 0, !dbg !7818
  br i1 %280, label %281, label %282, !dbg !7819

; <label>:281:                                    ; preds = %278
  store i64 0, i64* %7, align 8, !dbg !7820, !tbaa !7817
  br label %481, !dbg !7822

; <label>:282:                                    ; preds = %278
  %283 = icmp sgt i64 %279, 12, !dbg !7823
  br i1 %283, label %284, label %481, !dbg !7825

; <label>:284:                                    ; preds = %282
  store i64 12, i64* %7, align 8, !dbg !7826, !tbaa !7817
  br label %481, !dbg !7828

; <label>:285:                                    ; preds = %275
  %286 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 122, !dbg !7829
  %287 = icmp eq i64* %286, %7, !dbg !7830
  %288 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 131, !dbg !7831
  %289 = icmp eq i64* %288, %7, !dbg !7832
  %290 = or i1 %287, %289, !dbg !7833
  br i1 %290, label %291, label %304, !dbg !7833

; <label>:291:                                    ; preds = %285
  %292 = tail call i32 @foldmethodIsIndent(%struct.window_S* %251) #11, !dbg !7834
  %293 = icmp eq i32 %292, 0, !dbg !7834
  br i1 %293, label %296, label %294, !dbg !7837

; <label>:294:                                    ; preds = %291
  %295 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !7838, !tbaa !3115
  tail call void @foldUpdateAll(%struct.window_S* %295) #11, !dbg !7839
  br label %296, !dbg !7839

; <label>:296:                                    ; preds = %291, %294
  %297 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !7840, !tbaa !3115
  %298 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %297, i64 0, i32 122, !dbg !7842
  %299 = icmp eq i64* %298, %7, !dbg !7843
  br i1 %299, label %303, label %300, !dbg !7844

; <label>:300:                                    ; preds = %296
  %301 = load i64, i64* %298, align 8, !dbg !7845, !tbaa !7623
  %302 = icmp eq i64 %301, 0, !dbg !7846
  br i1 %302, label %303, label %481, !dbg !7847

; <label>:303:                                    ; preds = %300, %296
  tail call void @parse_cino(%struct.file_buffer* %297) #11, !dbg !7848
  br label %481, !dbg !7848

; <label>:304:                                    ; preds = %285
  %305 = icmp eq i8* %1, bitcast (i64* @p_mco to i8*), !dbg !7849
  br i1 %305, label %306, label %314, !dbg !7850

; <label>:306:                                    ; preds = %304
  %307 = load i64, i64* @p_mco, align 8, !dbg !7851, !tbaa !4248
  %308 = icmp sgt i64 %307, 6, !dbg !7854
  br i1 %308, label %311, label %309, !dbg !7855

; <label>:309:                                    ; preds = %306
  %310 = icmp slt i64 %307, 0, !dbg !7856
  br i1 %310, label %311, label %313, !dbg !7858

; <label>:311:                                    ; preds = %309, %306
  %312 = phi i64 [ 6, %306 ], [ 0, %309 ]
  store i64 %312, i64* @p_mco, align 8, !tbaa !4248
  br label %313, !dbg !7859

; <label>:313:                                    ; preds = %311, %309
  tail call void @screenclear() #11, !dbg !7859
  br label %481, !dbg !7860

; <label>:314:                                    ; preds = %304
  %315 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 61, !dbg !7861
  %316 = icmp eq i64* %315, %7, !dbg !7862
  br i1 %316, label %317, label %329, !dbg !7863

; <label>:317:                                    ; preds = %314
  %318 = load i64, i64* %7, align 8, !dbg !7864, !tbaa !7308
  %319 = icmp ugt i64 %318, 2, !dbg !7867
  br i1 %319, label %320, label %321, !dbg !7867

; <label>:320:                                    ; preds = %317
  store i64 0, i64* %7, align 8, !dbg !7868, !tbaa !7308
  br label %321, !dbg !7870

; <label>:321:                                    ; preds = %317, %320
  %322 = phi i64 [ 0, %320 ], [ %318, %317 ], !dbg !7871
  %323 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %320 ], [ %132, %317 ]
  call void @llvm.dbg.value(metadata i8* %323, metadata !7509, metadata !DIExpression()), !dbg !7550
  store i64 %322, i64* @p_iminsert, align 8, !dbg !7872, !tbaa !4248
  %324 = load i32, i32* @termcap_active, align 4, !dbg !7873, !tbaa !3060
  %325 = icmp eq i32 %324, 0, !dbg !7873
  br i1 %325, label %328, label %326, !dbg !7875

; <label>:326:                                    ; preds = %321
  %327 = tail call i32 @showmode() #11, !dbg !7876
  br label %328, !dbg !7876

; <label>:328:                                    ; preds = %321, %326
  tail call void @status_redraw_curbuf() #11, !dbg !7877
  br label %481, !dbg !7878

; <label>:329:                                    ; preds = %314
  %330 = icmp eq i8* %1, bitcast (i64* @p_imst to i8*), !dbg !7879
  br i1 %330, label %331, label %335, !dbg !7880

; <label>:331:                                    ; preds = %329
  %332 = load i64, i64* @p_imst, align 8, !dbg !7881, !tbaa !4248
  %333 = icmp ugt i64 %332, 1, !dbg !7884
  %334 = select i1 %333, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), i8* %132, !dbg !7884
  br label %481, !dbg !7884

; <label>:335:                                    ; preds = %329
  %336 = icmp eq i8* %1, bitcast (i64* @p_window to i8*), !dbg !7885
  br i1 %336, label %337, label %346, !dbg !7886

; <label>:337:                                    ; preds = %335
  %338 = load i64, i64* @p_window, align 8, !dbg !7887, !tbaa !4248
  %339 = icmp slt i64 %338, 1, !dbg !7890
  br i1 %339, label %340, label %341, !dbg !7891

; <label>:340:                                    ; preds = %337
  store i64 1, i64* @p_window, align 8, !dbg !7892, !tbaa !4248
  br label %481, !dbg !7893

; <label>:341:                                    ; preds = %337
  %342 = load i64, i64* @Rows, align 8, !dbg !7894, !tbaa !4248
  %343 = icmp slt i64 %338, %342, !dbg !7896
  br i1 %343, label %481, label %344, !dbg !7897

; <label>:344:                                    ; preds = %341
  %345 = add nsw i64 %342, -1, !dbg !7898
  store i64 %345, i64* @p_window, align 8, !dbg !7899, !tbaa !4248
  br label %481, !dbg !7900

; <label>:346:                                    ; preds = %335
  %347 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 62, !dbg !7901
  %348 = icmp eq i64* %347, %7, !dbg !7902
  br i1 %348, label %349, label %357, !dbg !7903

; <label>:349:                                    ; preds = %346
  %350 = load i64, i64* %7, align 8, !dbg !7904, !tbaa !7907
  %351 = add i64 %350, 1, !dbg !7908
  %352 = icmp ugt i64 %351, 3, !dbg !7908
  br i1 %352, label %353, label %354, !dbg !7908

; <label>:353:                                    ; preds = %349
  store i64 0, i64* %7, align 8, !dbg !7909, !tbaa !7907
  br label %354, !dbg !7911

; <label>:354:                                    ; preds = %349, %353
  %355 = phi i64 [ 0, %353 ], [ %350, %349 ], !dbg !7912
  %356 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %353 ], [ %132, %349 ]
  call void @llvm.dbg.value(metadata i8* %356, metadata !7509, metadata !DIExpression()), !dbg !7550
  store i64 %355, i64* @p_imsearch, align 8, !dbg !7913, !tbaa !4248
  br label %481, !dbg !7914

; <label>:357:                                    ; preds = %346
  %358 = icmp eq i8* %1, bitcast (i64* @p_titlelen to i8*), !dbg !7915
  br i1 %358, label %359, label %371, !dbg !7916

; <label>:359:                                    ; preds = %357
  %360 = load i64, i64* @p_titlelen, align 8, !dbg !7917, !tbaa !4248
  %361 = icmp slt i64 %360, 0, !dbg !7920
  br i1 %361, label %362, label %363, !dbg !7921

; <label>:362:                                    ; preds = %359
  store i64 85, i64* @p_titlelen, align 8, !dbg !7922, !tbaa !4248
  br label %363, !dbg !7924

; <label>:363:                                    ; preds = %362, %359
  %364 = phi i64 [ 85, %362 ], [ %360, %359 ], !dbg !7925
  %365 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %362 ], [ %132, %359 ]
  call void @llvm.dbg.value(metadata i8* %365, metadata !7509, metadata !DIExpression()), !dbg !7550
  %366 = load i32, i32* @starting, align 4, !dbg !7927, !tbaa !3060
  %367 = icmp eq i32 %366, 2, !dbg !7928
  %368 = icmp eq i64 %8, %364, !dbg !7929
  %369 = or i1 %367, %368, !dbg !7930
  br i1 %369, label %481, label %370, !dbg !7930

; <label>:370:                                    ; preds = %363
  store i32 1, i32* @need_maketitle, align 4, !dbg !7931, !tbaa !3060
  br label %481, !dbg !7932

; <label>:371:                                    ; preds = %357
  %372 = icmp eq i8* %1, bitcast (i64* @p_ch to i8*), !dbg !7933
  br i1 %372, label %373, label %404, !dbg !7934

; <label>:373:                                    ; preds = %371
  %374 = load i64, i64* @p_ch, align 8, !dbg !7935, !tbaa !4248
  %375 = icmp slt i64 %374, 1, !dbg !7938
  br i1 %375, label %376, label %377, !dbg !7939

; <label>:376:                                    ; preds = %373
  store i64 1, i64* @p_ch, align 8, !dbg !7940, !tbaa !4248
  br label %377, !dbg !7942

; <label>:377:                                    ; preds = %376, %373
  %378 = phi i64 [ 1, %376 ], [ %374, %373 ], !dbg !7943
  %379 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %376 ], [ %132, %373 ]
  call void @llvm.dbg.value(metadata i8* %379, metadata !7509, metadata !DIExpression()), !dbg !7550
  %380 = load i64, i64* @Rows, align 8, !dbg !7945, !tbaa !4248
  %381 = tail call i32 @min_rows() #11, !dbg !7946
  %382 = sext i32 %381 to i64, !dbg !7946
  %383 = add i64 %380, 1, !dbg !7947
  %384 = sub i64 %383, %382, !dbg !7948
  %385 = icmp sgt i64 %378, %384, !dbg !7949
  br i1 %385, label %388, label %386, !dbg !7950

; <label>:386:                                    ; preds = %377
  %387 = load i64, i64* @p_ch, align 8, !dbg !7951, !tbaa !4248
  br label %394, !dbg !7950

; <label>:388:                                    ; preds = %377
  %389 = load i64, i64* @Rows, align 8, !dbg !7953, !tbaa !4248
  %390 = tail call i32 @min_rows() #11, !dbg !7954
  %391 = sext i32 %390 to i64, !dbg !7954
  %392 = add i64 %389, 1, !dbg !7955
  %393 = sub i64 %392, %391, !dbg !7956
  store i64 %393, i64* @p_ch, align 8, !dbg !7957, !tbaa !4248
  br label %394, !dbg !7958

; <label>:394:                                    ; preds = %386, %388
  %395 = phi i64 [ %387, %386 ], [ %393, %388 ], !dbg !7951
  %396 = icmp eq i64 %395, %8, !dbg !7959
  br i1 %396, label %481, label %397, !dbg !7960

; <label>:397:                                    ; preds = %394
  %398 = load volatile i32, i32* @full_screen, align 4, !dbg !7961, !tbaa !3060
  %399 = icmp eq i32 %398, 0, !dbg !7961
  %400 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !7962
  %401 = icmp ne i32 %400, 0, !dbg !7963
  %402 = or i1 %399, %401, !dbg !7964
  br i1 %402, label %481, label %403, !dbg !7964

; <label>:403:                                    ; preds = %397
  tail call void @command_height() #11, !dbg !7965
  br label %481, !dbg !7965

; <label>:404:                                    ; preds = %371
  %405 = icmp eq i8* %1, bitcast (i64* @p_uc to i8*), !dbg !7966
  br i1 %405, label %406, label %417, !dbg !7967

; <label>:406:                                    ; preds = %404
  %407 = load i64, i64* @p_uc, align 8, !dbg !7968, !tbaa !4248
  %408 = icmp slt i64 %407, 0, !dbg !7971
  br i1 %408, label %409, label %410, !dbg !7972

; <label>:409:                                    ; preds = %406
  store i64 100, i64* @p_uc, align 8, !dbg !7973, !tbaa !4248
  br label %410, !dbg !7975

; <label>:410:                                    ; preds = %409, %406
  %411 = phi i64 [ 100, %409 ], [ %407, %406 ], !dbg !7976
  %412 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %409 ], [ %132, %406 ]
  call void @llvm.dbg.value(metadata i8* %412, metadata !7509, metadata !DIExpression()), !dbg !7550
  %413 = icmp eq i64 %411, 0, !dbg !7976
  %414 = icmp ne i64 %8, 0, !dbg !7978
  %415 = or i1 %414, %413, !dbg !7979
  br i1 %415, label %481, label %416, !dbg !7979

; <label>:416:                                    ; preds = %410
  tail call void @ml_open_files() #11, !dbg !7980
  br label %481, !dbg !7980

; <label>:417:                                    ; preds = %404
  %418 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 44, !dbg !7981
  %419 = icmp eq i64* %418, %7, !dbg !7982
  br i1 %419, label %420, label %427, !dbg !7983

; <label>:420:                                    ; preds = %417
  %421 = load i64, i64* %7, align 8, !dbg !7984, !tbaa !7987
  %422 = icmp slt i64 %421, 0, !dbg !7988
  br i1 %422, label %423, label %424, !dbg !7989

; <label>:423:                                    ; preds = %420
  store i64 0, i64* %7, align 8, !dbg !7990, !tbaa !7987
  br label %481, !dbg !7992

; <label>:424:                                    ; preds = %420
  %425 = icmp sgt i64 %421, 3, !dbg !7993
  br i1 %425, label %426, label %481, !dbg !7995

; <label>:426:                                    ; preds = %424
  store i64 3, i64* %7, align 8, !dbg !7996, !tbaa !7987
  br label %481, !dbg !7998

; <label>:427:                                    ; preds = %417
  %428 = icmp eq i8* %1, bitcast (i64* @p_ul to i8*), !dbg !7999
  br i1 %428, label %429, label %430, !dbg !8000

; <label>:429:                                    ; preds = %427
  store i64 %8, i64* @p_ul, align 8, !dbg !8001, !tbaa !4248
  tail call void @u_sync(i32 1) #11, !dbg !8003
  store i64 %2, i64* @p_ul, align 8, !dbg !8004, !tbaa !4248
  br label %481, !dbg !8005

; <label>:430:                                    ; preds = %427
  %431 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 156, !dbg !8006
  %432 = icmp eq i64* %431, %7, !dbg !8007
  br i1 %432, label %433, label %436, !dbg !8008

; <label>:433:                                    ; preds = %430
  store i64 %8, i64* %7, align 8, !dbg !8009, !tbaa !3431
  tail call void @u_sync(i32 1) #11, !dbg !8011
  %434 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8012, !tbaa !3115
  %435 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %434, i64 0, i32 156, !dbg !8013
  store i64 %2, i64* %435, align 8, !dbg !8014, !tbaa !3431
  br label %481, !dbg !8015

; <label>:436:                                    ; preds = %430
  %437 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 121, i32 24, !dbg !8016
  %438 = icmp eq i64* %437, %7, !dbg !8017
  br i1 %438, label %439, label %450, !dbg !8018

; <label>:439:                                    ; preds = %436
  %440 = load i64, i64* %7, align 8, !dbg !8019, !tbaa !8022
  %441 = icmp slt i64 %440, 1, !dbg !8023
  call void @llvm.dbg.value(metadata i8* %132, metadata !7509, metadata !DIExpression()), !dbg !7550
  br i1 %441, label %444, label %442, !dbg !8024

; <label>:442:                                    ; preds = %439
  %443 = icmp sgt i64 %440, 20, !dbg !8025
  br i1 %443, label %444, label %447, !dbg !8027

; <label>:444:                                    ; preds = %442, %439
  %445 = phi i64 [ 1, %439 ], [ 20, %442 ]
  %446 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %439 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %442 ]
  store i64 %445, i64* %7, align 8, !tbaa !8022
  br label %447, !dbg !8028

; <label>:447:                                    ; preds = %444, %442
  %448 = phi i8* [ %132, %442 ], [ %446, %444 ]
  call void @llvm.dbg.value(metadata i8* %448, metadata !7509, metadata !DIExpression()), !dbg !7550
  %449 = getelementptr inbounds %struct.window_S, %struct.window_S* %251, i64 0, i32 150, !dbg !8028
  store i64 0, i64* %449, align 8, !dbg !8029, !tbaa !8030
  br label %481, !dbg !8031

; <label>:450:                                    ; preds = %436
  %451 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %131, i64 0, i32 133, !dbg !8032
  %452 = icmp eq i64* %451, %7, !dbg !8033
  br i1 %452, label %453, label %481, !dbg !8034

; <label>:453:                                    ; preds = %450
  %454 = load i64, i64* %7, align 8, !dbg !8035, !tbaa !6880
  %455 = icmp slt i64 %454, 0, !dbg !8037
  br i1 %455, label %456, label %457, !dbg !8038

; <label>:456:                                    ; preds = %453
  store i64 0, i64* %7, align 8, !dbg !8039, !tbaa !6880
  br label %457, !dbg !8041

; <label>:457:                                    ; preds = %456, %453
  %458 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %456 ], [ %132, %453 ]
  call void @llvm.dbg.value(metadata i8* %458, metadata !7509, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata %struct.tabpage_S** @first_tabpage, metadata !7543, metadata !DIExpression(DW_OP_deref)), !dbg !8042
  %459 = load %struct.tabpage_S*, %struct.tabpage_S** @first_tabpage, align 8, !dbg !8043, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %459, metadata !7543, metadata !DIExpression()), !dbg !8042
  %460 = icmp eq %struct.tabpage_S* %459, null, !dbg !8045
  br i1 %460, label %481, label %461, !dbg !8043

; <label>:461:                                    ; preds = %457
  br label %462, !dbg !8047

; <label>:462:                                    ; preds = %461, %477
  %463 = phi %struct.tabpage_S* [ %479, %477 ], [ %459, %461 ]
  %464 = load %struct.tabpage_S*, %struct.tabpage_S** @curtab, align 8, !dbg !8047, !tbaa !3115
  %465 = icmp eq %struct.tabpage_S* %463, %464, !dbg !8047
  %466 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %463, i64 0, i32 4, !dbg !8047
  %467 = select i1 %465, %struct.window_S** @firstwin, %struct.window_S** %466, !dbg !8047
  call void @llvm.dbg.value(metadata %struct.window_S** %467, metadata !7515, metadata !DIExpression(DW_OP_deref)), !dbg !8049
  %468 = load %struct.window_S*, %struct.window_S** %467, align 8, !dbg !8047, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %468, metadata !7515, metadata !DIExpression()), !dbg !8049
  %469 = icmp eq %struct.window_S* %468, null, !dbg !8047
  br i1 %469, label %477, label %470, !dbg !8047

; <label>:470:                                    ; preds = %462
  br label %471, !dbg !8050

; <label>:471:                                    ; preds = %470, %471
  %472 = phi %struct.window_S* [ %475, %471 ], [ %468, %470 ]
  %473 = tail call i8* @check_colorcolumn(%struct.window_S* nonnull %472) #11, !dbg !8050
  %474 = getelementptr inbounds %struct.window_S, %struct.window_S* %472, i64 0, i32 3, !dbg !8052
  call void @llvm.dbg.value(metadata %struct.window_S** %474, metadata !7515, metadata !DIExpression(DW_OP_deref)), !dbg !8049
  %475 = load %struct.window_S*, %struct.window_S** %474, align 8, !dbg !8047, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.window_S* %475, metadata !7515, metadata !DIExpression()), !dbg !8049
  %476 = icmp eq %struct.window_S* %475, null, !dbg !8047
  br i1 %476, label %477, label %471, !dbg !8047, !llvm.loop !8053

; <label>:477:                                    ; preds = %471, %462
  %478 = getelementptr inbounds %struct.tabpage_S, %struct.tabpage_S* %463, i64 0, i32 0, !dbg !8045
  call void @llvm.dbg.value(metadata %struct.tabpage_S** %478, metadata !7543, metadata !DIExpression(DW_OP_deref)), !dbg !8042
  %479 = load %struct.tabpage_S*, %struct.tabpage_S** %478, align 8, !dbg !8043, !tbaa !3115
  call void @llvm.dbg.value(metadata %struct.tabpage_S* %479, metadata !7543, metadata !DIExpression()), !dbg !8042
  %480 = icmp eq %struct.tabpage_S* %479, null, !dbg !8045
  br i1 %480, label %481, label %462, !dbg !8043, !llvm.loop !8055

; <label>:481:                                    ; preds = %477, %457, %331, %167, %243, %269, %341, %363, %394, %193, %233, %240, %258, %273, %303, %300, %328, %344, %340, %370, %410, %416, %429, %447, %450, %433, %423, %426, %424, %403, %397, %354, %313, %281, %284, %282, %262, %246, %249, %237, %207, %213, %219, %152, %179, %172, %166
  %482 = phi i8* [ %153, %152 ], [ %153, %179 ], [ %153, %172 ], [ %153, %167 ], [ %153, %166 ], [ %194, %193 ], [ %209, %207 ], [ %209, %219 ], [ %209, %213 ], [ %234, %233 ], [ %132, %237 ], [ %132, %240 ], [ %132, %249 ], [ %132, %246 ], [ %132, %243 ], [ %132, %258 ], [ %132, %262 ], [ %132, %273 ], [ %132, %269 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %281 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %284 ], [ %132, %282 ], [ %132, %303 ], [ %132, %300 ], [ %132, %313 ], [ %323, %328 ], [ %132, %340 ], [ %132, %344 ], [ %132, %341 ], [ %356, %354 ], [ %365, %370 ], [ %365, %363 ], [ %379, %397 ], [ %379, %403 ], [ %379, %394 ], [ %412, %410 ], [ %412, %416 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %423 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %426 ], [ %132, %424 ], [ %132, %429 ], [ %132, %433 ], [ %448, %447 ], [ %132, %450 ], [ %334, %331 ], [ %458, %457 ], [ %458, %477 ]
  call void @llvm.dbg.value(metadata i8* %482, metadata !7509, metadata !DIExpression()), !dbg !7550
  %483 = load i64, i64* @Rows, align 8, !dbg !8057, !tbaa !4248
  %484 = tail call i32 @min_rows() #11, !dbg !8059
  %485 = sext i32 %484 to i64, !dbg !8059
  %486 = icmp slt i64 %483, %485, !dbg !8060
  br i1 %486, label %487, label %500, !dbg !8061

; <label>:487:                                    ; preds = %481
  %488 = load volatile i32, i32* @full_screen, align 4, !dbg !8062, !tbaa !3060
  %489 = icmp eq i32 %488, 0, !dbg !8062
  br i1 %489, label %500, label %490, !dbg !8063

; <label>:490:                                    ; preds = %487
  %491 = icmp eq i8* %3, null, !dbg !8064
  br i1 %491, label %496, label %492, !dbg !8067

; <label>:492:                                    ; preds = %490
  %493 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1058, i64 0, i64 0), i32 5) #11, !dbg !8068
  %494 = tail call i32 @min_rows() #11, !dbg !8070
  %495 = tail call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %3, i64 %4, i8* %493, i32 %494) #11, !dbg !8071
  call void @llvm.dbg.value(metadata i8* %3, metadata !7509, metadata !DIExpression()), !dbg !7550
  br label %496, !dbg !8072

; <label>:496:                                    ; preds = %490, %492
  %497 = phi i8* [ %3, %492 ], [ %482, %490 ]
  call void @llvm.dbg.value(metadata i8* %497, metadata !7509, metadata !DIExpression()), !dbg !7550
  %498 = tail call i32 @min_rows() #11, !dbg !8073
  %499 = sext i32 %498 to i64, !dbg !8073
  store i64 %499, i64* @Rows, align 8, !dbg !8074, !tbaa !4248
  br label %500, !dbg !8075

; <label>:500:                                    ; preds = %487, %496, %481
  %501 = phi i8* [ %497, %496 ], [ %482, %487 ], [ %482, %481 ]
  call void @llvm.dbg.value(metadata i8* %501, metadata !7509, metadata !DIExpression()), !dbg !7550
  %502 = load i64, i64* @Columns, align 8, !dbg !8076, !tbaa !4248
  %503 = icmp slt i64 %502, 12, !dbg !8078
  br i1 %503, label %504, label %514, !dbg !8079

; <label>:504:                                    ; preds = %500
  %505 = load volatile i32, i32* @full_screen, align 4, !dbg !8080, !tbaa !3060
  %506 = icmp eq i32 %505, 0, !dbg !8080
  br i1 %506, label %514, label %507, !dbg !8081

; <label>:507:                                    ; preds = %504
  %508 = icmp eq i8* %3, null, !dbg !8082
  br i1 %508, label %512, label %509, !dbg !8085

; <label>:509:                                    ; preds = %507
  %510 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1059, i64 0, i64 0), i32 5) #11, !dbg !8086
  %511 = tail call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %3, i64 %4, i8* %510, i32 12) #11, !dbg !8088
  call void @llvm.dbg.value(metadata i8* %3, metadata !7509, metadata !DIExpression()), !dbg !7550
  br label %512, !dbg !8089

; <label>:512:                                    ; preds = %507, %509
  %513 = phi i8* [ %3, %509 ], [ %501, %507 ]
  call void @llvm.dbg.value(metadata i8* %513, metadata !7509, metadata !DIExpression()), !dbg !7550
  store i64 12, i64* @Columns, align 8, !dbg !8090, !tbaa !4248
  br label %514, !dbg !8091

; <label>:514:                                    ; preds = %504, %512, %500
  %515 = phi i8* [ %513, %512 ], [ %501, %504 ], [ %501, %500 ]
  call void @llvm.dbg.value(metadata i8* %515, metadata !7509, metadata !DIExpression()), !dbg !7550
  tail call void @limit_screen_size() #11, !dbg !8092
  %516 = load i64, i64* @Rows, align 8, !dbg !8093, !tbaa !4248
  %517 = icmp eq i64 %9, %516, !dbg !8095
  %518 = load i64, i64* @Columns, align 8, !dbg !8096
  %519 = icmp eq i64 %10, %518, !dbg !8097
  %520 = and i1 %517, %519, !dbg !8098
  br i1 %520, label %561, label %521, !dbg !8098

; <label>:521:                                    ; preds = %514
  %522 = load i32, i32* @updating_screen, align 4, !dbg !8099, !tbaa !3060
  %523 = icmp eq i32 %522, 0, !dbg !8099
  br i1 %523, label %525, label %524, !dbg !8102

; <label>:524:                                    ; preds = %521
  store i64 %8, i64* %7, align 8, !dbg !8103, !tbaa !4248
  br label %545, !dbg !8104

; <label>:525:                                    ; preds = %521
  %526 = load volatile i32, i32* @full_screen, align 4, !dbg !8105, !tbaa !3060
  %527 = icmp eq i32 %526, 0, !dbg !8105
  %528 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !8107
  %529 = icmp ne i32 %528, 0, !dbg !8108
  %530 = or i1 %527, %529, !dbg !8109
  br i1 %530, label %534, label %531, !dbg !8109

; <label>:531:                                    ; preds = %525
  %532 = trunc i64 %518 to i32, !dbg !8110
  %533 = trunc i64 %516 to i32, !dbg !8111
  tail call void @set_shellsize(i32 %532, i32 %533, i32 1) #11, !dbg !8112
  br label %545, !dbg !8112

; <label>:534:                                    ; preds = %525
  tail call void @check_shellsize() #11, !dbg !8113
  %535 = load i32, i32* @cmdline_row, align 4, !dbg !8115, !tbaa !3060
  %536 = sext i32 %535 to i64, !dbg !8115
  %537 = load i64, i64* @Rows, align 8, !dbg !8117, !tbaa !4248
  %538 = load i64, i64* @p_ch, align 8, !dbg !8118, !tbaa !4248
  %539 = sub nsw i64 %537, %538, !dbg !8119
  %540 = icmp slt i64 %539, %536, !dbg !8120
  %541 = icmp sgt i64 %537, %538, !dbg !8121
  %542 = and i1 %541, %540, !dbg !8122
  br i1 %542, label %543, label %545, !dbg !8122

; <label>:543:                                    ; preds = %534
  %544 = trunc i64 %539 to i32, !dbg !8123
  store i32 %544, i32* @cmdline_row, align 4, !dbg !8124, !tbaa !3060
  br label %545, !dbg !8125

; <label>:545:                                    ; preds = %531, %543, %534, %524
  %546 = load i64, i64* @p_window, align 8, !dbg !8126, !tbaa !4248
  %547 = load i64, i64* @Rows, align 8, !dbg !8128, !tbaa !4248
  %548 = icmp slt i64 %546, %547, !dbg !8129
  br i1 %548, label %549, label %558, !dbg !8130

; <label>:549:                                    ; preds = %545
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), metadata !4631, metadata !DIExpression()) #11, !dbg !8131
  %550 = tail call i32 @findoption(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !8133
  call void @llvm.dbg.value(metadata i32 %550, metadata !4634, metadata !DIExpression()) #11, !dbg !8134
  %551 = icmp slt i32 %550, 0, !dbg !8135
  br i1 %551, label %558, label %552, !dbg !8136

; <label>:552:                                    ; preds = %549
  %553 = sext i32 %550 to i64, !dbg !8137
  %554 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %553, i32 2, !dbg !8138
  %555 = load i64, i64* %554, align 16, !dbg !8138, !tbaa !3107
  %556 = and i64 %555, 256, !dbg !8139
  %557 = icmp eq i64 %556, 0, !dbg !8139
  br i1 %557, label %558, label %561, !dbg !8140

; <label>:558:                                    ; preds = %549, %552, %545
  %559 = load i64, i64* @Rows, align 8, !dbg !8141, !tbaa !4248
  %560 = add nsw i64 %559, -1, !dbg !8142
  store i64 %560, i64* @p_window, align 8, !dbg !8143, !tbaa !4248
  br label %561, !dbg !8144

; <label>:561:                                    ; preds = %514, %552, %558
  %562 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8145, !tbaa !3115
  %563 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %562, i64 0, i32 131, !dbg !8147
  %564 = load i64, i64* %563, align 8, !dbg !8147, !tbaa !7634
  %565 = icmp slt i64 %564, 1, !dbg !8148
  br i1 %565, label %566, label %567, !dbg !8149

; <label>:566:                                    ; preds = %561
  store i64 8, i64* %563, align 8, !dbg !8150, !tbaa !7634
  br label %567, !dbg !8152

; <label>:567:                                    ; preds = %566, %561
  %568 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %566 ], [ %515, %561 ]
  call void @llvm.dbg.value(metadata i8* %568, metadata !7509, metadata !DIExpression()), !dbg !7550
  %569 = load i64, i64* @p_tm, align 8, !dbg !8153, !tbaa !4248
  %570 = icmp slt i64 %569, 0, !dbg !8155
  br i1 %570, label %571, label %572, !dbg !8156

; <label>:571:                                    ; preds = %567
  store i64 0, i64* @p_tm, align 8, !dbg !8157, !tbaa !4248
  br label %572, !dbg !8159

; <label>:572:                                    ; preds = %571, %567
  %573 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %571 ], [ %568, %567 ]
  call void @llvm.dbg.value(metadata i8* %573, metadata !7509, metadata !DIExpression()), !dbg !7550
  %574 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8160, !tbaa !3115
  %575 = getelementptr inbounds %struct.window_S, %struct.window_S* %574, i64 0, i32 121, i32 30, !dbg !8162
  %576 = load i64, i64* %575, align 8, !dbg !8162, !tbaa !8163
  %577 = icmp slt i64 %576, 1, !dbg !8164
  br i1 %577, label %585, label %578, !dbg !8165

; <label>:578:                                    ; preds = %572
  %579 = getelementptr inbounds %struct.window_S, %struct.window_S* %574, i64 0, i32 31, !dbg !8166
  %580 = load i32, i32* %579, align 4, !dbg !8166, !tbaa !7672
  %581 = sext i32 %580 to i64, !dbg !8167
  %582 = icmp sgt i64 %576, %581, !dbg !8168
  %583 = icmp sgt i32 %580, 0, !dbg !8169
  %584 = and i1 %583, %582, !dbg !8170
  br i1 %584, label %585, label %599, !dbg !8170

; <label>:585:                                    ; preds = %578, %572
  %586 = load volatile i32, i32* @full_screen, align 4, !dbg !8171, !tbaa !3060
  %587 = icmp eq i32 %586, 0, !dbg !8171
  br i1 %587, label %599, label %588, !dbg !8172

; <label>:588:                                    ; preds = %585
  %589 = icmp eq i64* %575, %7, !dbg !8173
  br i1 %589, label %590, label %593, !dbg !8176

; <label>:590:                                    ; preds = %588
  %591 = icmp eq i64 %576, 0, !dbg !8177
  %592 = select i1 %591, i8* %573, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @e_scroll, i64 0, i64 0), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %592, metadata !7509, metadata !DIExpression()), !dbg !7550
  tail call void @win_comp_scroll(%struct.window_S* %574) #11, !dbg !8181
  br label %599, !dbg !8182

; <label>:593:                                    ; preds = %588
  br i1 %577, label %594, label %595, !dbg !8183

; <label>:594:                                    ; preds = %593
  store i64 1, i64* %575, align 8, !dbg !8184, !tbaa !8163
  br label %599, !dbg !8186

; <label>:595:                                    ; preds = %593
  %596 = getelementptr inbounds %struct.window_S, %struct.window_S* %574, i64 0, i32 31, !dbg !8187
  %597 = load i32, i32* %596, align 4, !dbg !8187, !tbaa !7672
  %598 = sext i32 %597 to i64, !dbg !8188
  store i64 %598, i64* %575, align 8, !dbg !8189, !tbaa !8163
  br label %599

; <label>:599:                                    ; preds = %585, %590, %595, %594, %578
  %600 = phi i8* [ %592, %590 ], [ %573, %594 ], [ %573, %595 ], [ %573, %585 ], [ %573, %578 ]
  call void @llvm.dbg.value(metadata i8* %600, metadata !7509, metadata !DIExpression()), !dbg !7550
  %601 = load i64, i64* @p_hi, align 8, !dbg !8190, !tbaa !4248
  %602 = icmp slt i64 %601, 0, !dbg !8192
  br i1 %602, label %605, label %603, !dbg !8193

; <label>:603:                                    ; preds = %599
  %604 = icmp sgt i64 %601, 10000, !dbg !8194
  br i1 %604, label %605, label %608, !dbg !8196

; <label>:605:                                    ; preds = %603, %599
  %606 = phi i64 [ 0, %599 ], [ 10000, %603 ]
  %607 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %599 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %603 ]
  store i64 %606, i64* @p_hi, align 8, !tbaa !4248
  br label %608, !dbg !8197

; <label>:608:                                    ; preds = %605, %603
  %609 = phi i8* [ %600, %603 ], [ %607, %605 ]
  call void @llvm.dbg.value(metadata i8* %609, metadata !7509, metadata !DIExpression()), !dbg !7550
  %610 = load i64, i64* @p_re, align 8, !dbg !8197, !tbaa !4248
  %611 = icmp ugt i64 %610, 2, !dbg !8199
  br i1 %611, label %612, label %613, !dbg !8199

; <label>:612:                                    ; preds = %608
  store i64 0, i64* @p_re, align 8, !dbg !8200, !tbaa !4248
  br label %613, !dbg !8202

; <label>:613:                                    ; preds = %608, %612
  %614 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_invarg, i64 0, i64 0), %612 ], [ %609, %608 ]
  call void @llvm.dbg.value(metadata i8* %614, metadata !7509, metadata !DIExpression()), !dbg !7550
  %615 = load i64, i64* @p_report, align 8, !dbg !8203, !tbaa !4248
  %616 = icmp slt i64 %615, 0, !dbg !8205
  br i1 %616, label %617, label %618, !dbg !8206

; <label>:617:                                    ; preds = %613
  store i64 1, i64* @p_report, align 8, !dbg !8207, !tbaa !4248
  br label %618, !dbg !8209

; <label>:618:                                    ; preds = %617, %613
  %619 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %617 ], [ %614, %613 ]
  call void @llvm.dbg.value(metadata i8* %619, metadata !7509, metadata !DIExpression()), !dbg !7550
  %620 = load i64, i64* @p_sj, align 8, !dbg !8210, !tbaa !4248
  %621 = icmp sgt i64 %620, -101, !dbg !8212
  %622 = load i64, i64* @Rows, align 8, !dbg !8213
  %623 = icmp slt i64 %620, %622, !dbg !8214
  %624 = and i1 %621, %623, !dbg !8215
  br i1 %624, label %633, label %625, !dbg !8215

; <label>:625:                                    ; preds = %618
  %626 = load volatile i32, i32* @full_screen, align 4, !dbg !8216, !tbaa !3060
  %627 = icmp eq i32 %626, 0, !dbg !8216
  br i1 %627, label %633, label %628, !dbg !8217

; <label>:628:                                    ; preds = %625
  %629 = icmp eq i64 %622, %9, !dbg !8218
  br i1 %629, label %632, label %630, !dbg !8221

; <label>:630:                                    ; preds = %628
  %631 = sdiv i64 %622, 2, !dbg !8222
  store i64 %631, i64* @p_sj, align 8, !dbg !8223, !tbaa !4248
  br label %633, !dbg !8224

; <label>:632:                                    ; preds = %628
  store i64 1, i64* @p_sj, align 8, !dbg !8225, !tbaa !4248
  br label %633

; <label>:633:                                    ; preds = %618, %625, %630, %632
  %634 = phi i8* [ %619, %630 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_scroll, i64 0, i64 0), %632 ], [ %619, %625 ], [ %619, %618 ]
  call void @llvm.dbg.value(metadata i8* %634, metadata !7509, metadata !DIExpression()), !dbg !7550
  %635 = load i64, i64* @p_so, align 8, !dbg !8227, !tbaa !4248
  %636 = icmp slt i64 %635, 0, !dbg !8229
  br i1 %636, label %637, label %641, !dbg !8230

; <label>:637:                                    ; preds = %633
  %638 = load volatile i32, i32* @full_screen, align 4, !dbg !8231, !tbaa !3060
  %639 = icmp eq i32 %638, 0, !dbg !8231
  br i1 %639, label %641, label %640, !dbg !8232

; <label>:640:                                    ; preds = %637
  store i64 0, i64* @p_so, align 8, !dbg !8233, !tbaa !4248
  br label %641, !dbg !8235

; <label>:641:                                    ; preds = %637, %640, %633
  %642 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %640 ], [ %634, %637 ], [ %634, %633 ]
  call void @llvm.dbg.value(metadata i8* %642, metadata !7509, metadata !DIExpression()), !dbg !7550
  %643 = load i64, i64* @p_siso, align 8, !dbg !8236, !tbaa !4248
  %644 = icmp slt i64 %643, 0, !dbg !8238
  br i1 %644, label %645, label %649, !dbg !8239

; <label>:645:                                    ; preds = %641
  %646 = load volatile i32, i32* @full_screen, align 4, !dbg !8240, !tbaa !3060
  %647 = icmp eq i32 %646, 0, !dbg !8240
  br i1 %647, label %649, label %648, !dbg !8241

; <label>:648:                                    ; preds = %645
  store i64 0, i64* @p_siso, align 8, !dbg !8242, !tbaa !4248
  br label %649, !dbg !8244

; <label>:649:                                    ; preds = %645, %648, %641
  %650 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %648 ], [ %642, %645 ], [ %642, %641 ]
  call void @llvm.dbg.value(metadata i8* %650, metadata !7509, metadata !DIExpression()), !dbg !7550
  %651 = load i64, i64* @p_cwh, align 8, !dbg !8245, !tbaa !4248
  %652 = icmp slt i64 %651, 1, !dbg !8247
  br i1 %652, label %653, label %654, !dbg !8248

; <label>:653:                                    ; preds = %649
  store i64 1, i64* @p_cwh, align 8, !dbg !8249, !tbaa !4248
  br label %654, !dbg !8251

; <label>:654:                                    ; preds = %653, %649
  %655 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %653 ], [ %650, %649 ]
  call void @llvm.dbg.value(metadata i8* %655, metadata !7509, metadata !DIExpression()), !dbg !7550
  %656 = load i64, i64* @p_ut, align 8, !dbg !8252, !tbaa !4248
  %657 = icmp slt i64 %656, 0, !dbg !8254
  br i1 %657, label %658, label %659, !dbg !8255

; <label>:658:                                    ; preds = %654
  store i64 2000, i64* @p_ut, align 8, !dbg !8256, !tbaa !4248
  br label %659, !dbg !8258

; <label>:659:                                    ; preds = %658, %654
  %660 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %658 ], [ %655, %654 ]
  call void @llvm.dbg.value(metadata i8* %660, metadata !7509, metadata !DIExpression()), !dbg !7550
  %661 = load i64, i64* @p_ss, align 8, !dbg !8259, !tbaa !4248
  %662 = icmp slt i64 %661, 0, !dbg !8261
  br i1 %662, label %663, label %664, !dbg !8262

; <label>:663:                                    ; preds = %659
  store i64 0, i64* @p_ss, align 8, !dbg !8263, !tbaa !4248
  br label %664, !dbg !8265

; <label>:664:                                    ; preds = %663, %659
  %665 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_positive, i64 0, i64 0), %663 ], [ %660, %659 ]
  call void @llvm.dbg.value(metadata i8* %665, metadata !7509, metadata !DIExpression()), !dbg !7550
  br i1 %23, label %666, label %683, !dbg !8266

; <label>:666:                                    ; preds = %664
  %667 = load i64, i64* %7, align 8, !dbg !8267, !tbaa !4248
  %668 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, !dbg !8269
  call void @llvm.dbg.value(metadata %struct.vimoption* %668, metadata !4275, metadata !DIExpression()) #11, !dbg !8270
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !8272
  %669 = load i32, i32* %46, align 16, !dbg !8273, !tbaa !4220
  %670 = icmp eq i32 %669, 0, !dbg !8274
  br i1 %670, label %678, label %671, !dbg !8275

; <label>:671:                                    ; preds = %666
  %672 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 3, !dbg !8276
  %673 = load i8*, i8** %672, align 8, !dbg !8276, !tbaa !3461
  %674 = icmp eq i8* %673, inttoptr (i64 -1 to i8*), !dbg !8277
  br i1 %674, label %675, label %680, !dbg !8278

; <label>:675:                                    ; preds = %671
  %676 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %668) #11, !dbg !8279
  %677 = getelementptr inbounds i8, i8* %676, i64 1376, !dbg !8279
  br label %680, !dbg !8280

; <label>:678:                                    ; preds = %666
  %679 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %668) #11, !dbg !8281
  br label %680, !dbg !8282

; <label>:680:                                    ; preds = %671, %675, %678
  %681 = phi i8* [ %677, %675 ], [ %679, %678 ], [ %673, %671 ]
  %682 = bitcast i8* %681 to i64*, !dbg !8283
  store i64 %667, i64* %682, align 8, !dbg !8284, !tbaa !4248
  br label %683, !dbg !8283

; <label>:683:                                    ; preds = %680, %664
  %684 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %24, i32 2, !dbg !8285
  %685 = load i64, i64* %684, align 16, !dbg !8286, !tbaa !3107
  %686 = or i64 %685, 256, !dbg !8286
  store i64 %686, i64* %684, align 16, !dbg !8286, !tbaa !3107
  %687 = sext i32 %5 to i64, !dbg !8287
  tail call fastcc void @apply_optionset_autocmd(i32 %0, i64 %687, i64 %8, i64 %47, i64 %2, i8* %665), !dbg !8288
  tail call void @comp_col() #11, !dbg !8289
  %688 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8290, !tbaa !3115
  %689 = getelementptr inbounds %struct.window_S, %struct.window_S* %688, i64 0, i32 8, !dbg !8292
  %690 = load i32, i32* %689, align 8, !dbg !8292, !tbaa !7442
  %691 = icmp eq i32 %690, 2147483647, !dbg !8293
  br i1 %691, label %698, label %692, !dbg !8294

; <label>:692:                                    ; preds = %683
  %693 = load i64, i64* %684, align 16, !dbg !8295, !tbaa !3107
  %694 = and i64 %693, 67133440, !dbg !8296
  %695 = icmp eq i64 %694, 0, !dbg !8297
  br i1 %695, label %698, label %696, !dbg !8298

; <label>:696:                                    ; preds = %692
  %697 = getelementptr inbounds %struct.window_S, %struct.window_S* %688, i64 0, i32 9, !dbg !8299
  store i32 1, i32* %697, align 4, !dbg !8300, !tbaa !7451
  br label %698, !dbg !8301

; <label>:698:                                    ; preds = %692, %683, %696
  %699 = trunc i32 %5 to i8, !dbg !8302
  %700 = icmp sgt i8 %699, -1, !dbg !8302
  br i1 %700, label %701, label %703, !dbg !8304

; <label>:701:                                    ; preds = %698
  %702 = load i64, i64* %684, align 16, !dbg !8305, !tbaa !3107
  tail call void @check_redraw(i64 %702), !dbg !8306
  br label %703, !dbg !8306

; <label>:703:                                    ; preds = %698, %701, %15
  %704 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @e_secure, i64 0, i64 0), %15 ], [ %665, %701 ], [ %665, %698 ]
  ret i8* %704, !dbg !8307
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @get_varp(%struct.vimoption* nocapture readonly) unnamed_addr #0 !dbg !8308 {
  call void @llvm.dbg.value(metadata %struct.vimoption* %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 3, !dbg !8314
  %3 = load i8*, i8** %2, align 8, !dbg !8314, !tbaa !3461
  %4 = icmp eq i8* %3, null, !dbg !8316
  br i1 %4, label %629, label %5, !dbg !8317

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 4, !dbg !8318
  %7 = load i32, i32* %6, align 8, !dbg !8318, !tbaa !4220
  switch i32 %7, label %624 [
    i32 0, label %629
    i32 20507, label %8
    i32 20526, label %16
    i32 20536, label %24
    i32 20481, label %32
    i32 20553, label %39
    i32 20554, label %47
    i32 20483, label %55
    i32 12319, label %63
    i32 12320, label %70
    i32 20503, label %77
    i32 20504, label %85
    i32 20500, label %93
    i32 20501, label %101
    i32 20510, label %109
    i32 20485, label %117
    i32 20486, label %125
    i32 20487, label %133
    i32 20511, label %141
    i32 20496, label %149
    i32 12326, label %157
    i32 12327, label %165
    i32 20559, label %173
    i32 20528, label %180
    i32 20529, label %188
    i32 8194, label %196
    i32 8192, label %200
    i32 12289, label %204
    i32 8225, label %212
    i32 8226, label %216
    i32 8227, label %220
    i32 8228, label %224
    i32 8229, label %228
    i32 8203, label %232
    i32 8204, label %236
    i32 8205, label %240
    i32 8206, label %244
    i32 8207, label %248
    i32 8208, label %252
    i32 8209, label %256
    i32 8210, label %260
    i32 8211, label %264
    i32 8212, label %268
    i32 8213, label %272
    i32 8215, label %276
    i32 8216, label %280
    i32 8217, label %284
    i32 8232, label %288
    i32 8233, label %292
    i32 8218, label %296
    i32 8219, label %300
    i32 8220, label %304
    i32 8222, label %308
    i32 8234, label %312
    i32 8214, label %316
    i32 8200, label %320
    i32 8201, label %324
    i32 8202, label %328
    i32 8221, label %332
    i32 8199, label %336
    i32 8195, label %340
    i32 8196, label %344
    i32 8197, label %348
    i32 8198, label %352
    i32 16465, label %356
    i32 16384, label %360
    i32 16392, label %364
    i32 16394, label %368
    i32 16386, label %372
    i32 16388, label %376
    i32 16393, label %380
    i32 16395, label %384
    i32 16396, label %388
    i32 16397, label %392
    i32 16398, label %396
    i32 16399, label %400
    i32 16402, label %404
    i32 16401, label %408
    i32 16403, label %412
    i32 16406, label %416
    i32 16439, label %420
    i32 16456, label %424
    i32 16409, label %428
    i32 16410, label %432
    i32 16412, label %436
    i32 16413, label %440
    i32 16417, label %444
    i32 16420, label %448
    i32 16419, label %452
    i32 16418, label %456
    i32 16421, label %460
    i32 16422, label %464
    i32 16426, label %468
    i32 16427, label %472
    i32 16425, label %476
    i32 16423, label %480
    i32 16424, label %484
    i32 16416, label %488
    i32 16428, label %492
    i32 16431, label %496
    i32 16435, label %500
    i32 16437, label %504
    i32 16434, label %508
    i32 16436, label %512
    i32 16438, label %516
    i32 16441, label %520
    i32 16442, label %524
    i32 16443, label %528
    i32 16444, label %532
    i32 16445, label %536
    i32 16452, label %540
    i32 16453, label %544
    i32 16455, label %548
    i32 16446, label %552
    i32 16447, label %556
    i32 16448, label %560
    i32 16449, label %566
    i32 16450, label %572
    i32 16451, label %578
    i32 16454, label %584
    i32 16459, label %588
    i32 16460, label %592
    i32 16461, label %596
    i32 16462, label %600
    i32 16464, label %604
    i32 16429, label %608
    i32 8235, label %612
    i32 16466, label %616
    i32 16467, label %620
  ], !dbg !8319

; <label>:8:                                      ; preds = %5
  %9 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8320, !tbaa !3115
  %10 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %9, i64 0, i32 148, !dbg !8322
  %11 = load i8*, i8** %10, align 8, !dbg !8322, !tbaa !8323
  %12 = load i8, i8* %11, align 1, !dbg !8324, !tbaa !3150
  %13 = icmp eq i8 %12, 0, !dbg !8325
  %14 = bitcast i8** %10 to i8*, !dbg !8326
  %15 = select i1 %13, i8* %3, i8* %14, !dbg !8324
  br label %629, !dbg !8324

; <label>:16:                                     ; preds = %5
  %17 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8327, !tbaa !3115
  %18 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %17, i64 0, i32 111, !dbg !8328
  %19 = load i8*, i8** %18, align 8, !dbg !8328, !tbaa !8329
  %20 = load i8, i8* %19, align 1, !dbg !8330, !tbaa !3150
  %21 = icmp eq i8 %20, 0, !dbg !8331
  %22 = bitcast i8** %18 to i8*, !dbg !8332
  %23 = select i1 %21, i8* %3, i8* %22, !dbg !8330
  br label %629, !dbg !8330

; <label>:24:                                     ; preds = %5
  %25 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8333, !tbaa !3115
  %26 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %25, i64 0, i32 149, !dbg !8334
  %27 = load i8*, i8** %26, align 8, !dbg !8334, !tbaa !8335
  %28 = load i8, i8* %27, align 1, !dbg !8336, !tbaa !3150
  %29 = icmp eq i8 %28, 0, !dbg !8337
  %30 = bitcast i8** %26 to i8*, !dbg !8338
  %31 = select i1 %29, i8* %3, i8* %30, !dbg !8336
  br label %629, !dbg !8336

; <label>:32:                                     ; preds = %5
  %33 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8339, !tbaa !3115
  %34 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %33, i64 0, i32 150, !dbg !8340
  %35 = load i32, i32* %34, align 8, !dbg !8340, !tbaa !3428
  %36 = icmp sgt i32 %35, -1, !dbg !8341
  %37 = bitcast i32* %34 to i8*, !dbg !8342
  %38 = select i1 %36, i8* %37, i8* %3, !dbg !8339
  br label %629, !dbg !8339

; <label>:39:                                     ; preds = %5
  %40 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8343, !tbaa !3115
  %41 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %40, i64 0, i32 151, !dbg !8344
  %42 = load i8*, i8** %41, align 8, !dbg !8344, !tbaa !8345
  %43 = load i8, i8* %42, align 1, !dbg !8346, !tbaa !3150
  %44 = icmp eq i8 %43, 0, !dbg !8347
  %45 = bitcast i8** %41 to i8*, !dbg !8348
  %46 = select i1 %44, i8* %3, i8* %45, !dbg !8346
  br label %629, !dbg !8346

; <label>:47:                                     ; preds = %5
  %48 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8349, !tbaa !3115
  %49 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %48, i64 0, i32 152, !dbg !8350
  %50 = load i8*, i8** %49, align 8, !dbg !8350, !tbaa !8351
  %51 = load i8, i8* %50, align 1, !dbg !8352, !tbaa !3150
  %52 = icmp eq i8 %51, 0, !dbg !8353
  %53 = bitcast i8** %49 to i8*, !dbg !8354
  %54 = select i1 %52, i8* %3, i8* %53, !dbg !8352
  br label %629, !dbg !8352

; <label>:55:                                     ; preds = %5
  %56 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8355, !tbaa !3115
  %57 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %56, i64 0, i32 69, !dbg !8356
  %58 = load i8*, i8** %57, align 8, !dbg !8356, !tbaa !8357
  %59 = load i8, i8* %58, align 1, !dbg !8358, !tbaa !3150
  %60 = icmp eq i8 %59, 0, !dbg !8359
  %61 = bitcast i8** %57 to i8*, !dbg !8360
  %62 = select i1 %60, i8* %3, i8* %61, !dbg !8358
  br label %629, !dbg !8358

; <label>:63:                                     ; preds = %5
  %64 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8361, !tbaa !3115
  %65 = getelementptr inbounds %struct.window_S, %struct.window_S* %64, i64 0, i32 128, !dbg !8362
  %66 = load i64, i64* %65, align 8, !dbg !8362, !tbaa !8363
  %67 = icmp sgt i64 %66, -1, !dbg !8364
  %68 = bitcast i64* %65 to i8*, !dbg !8365
  %69 = select i1 %67, i8* %68, i8* %3, !dbg !8361
  br label %629, !dbg !8361

; <label>:70:                                     ; preds = %5
  %71 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8366, !tbaa !3115
  %72 = getelementptr inbounds %struct.window_S, %struct.window_S* %71, i64 0, i32 129, !dbg !8367
  %73 = load i64, i64* %72, align 8, !dbg !8367, !tbaa !8368
  %74 = icmp sgt i64 %73, -1, !dbg !8369
  %75 = bitcast i64* %72 to i8*, !dbg !8370
  %76 = select i1 %74, i8* %75, i8* %3, !dbg !8366
  br label %629, !dbg !8366

; <label>:77:                                     ; preds = %5
  %78 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8371, !tbaa !3115
  %79 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %78, i64 0, i32 100, !dbg !8372
  %80 = load i8*, i8** %79, align 8, !dbg !8372, !tbaa !8373
  %81 = load i8, i8* %80, align 1, !dbg !8374, !tbaa !3150
  %82 = icmp eq i8 %81, 0, !dbg !8375
  %83 = bitcast i8** %79 to i8*, !dbg !8376
  %84 = select i1 %82, i8* %3, i8* %83, !dbg !8374
  br label %629, !dbg !8374

; <label>:85:                                     ; preds = %5
  %86 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8377, !tbaa !3115
  %87 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %86, i64 0, i32 101, !dbg !8378
  %88 = load i8*, i8** %87, align 8, !dbg !8378, !tbaa !8379
  %89 = load i8, i8* %88, align 1, !dbg !8380, !tbaa !3150
  %90 = icmp eq i8 %89, 0, !dbg !8381
  %91 = bitcast i8** %87 to i8*, !dbg !8382
  %92 = select i1 %90, i8* %3, i8* %91, !dbg !8380
  br label %629, !dbg !8380

; <label>:93:                                     ; preds = %5
  %94 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8383, !tbaa !3115
  %95 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %94, i64 0, i32 154, !dbg !8384
  %96 = load i8*, i8** %95, align 8, !dbg !8384, !tbaa !8385
  %97 = load i8, i8* %96, align 1, !dbg !8386, !tbaa !3150
  %98 = icmp eq i8 %97, 0, !dbg !8387
  %99 = bitcast i8** %95 to i8*, !dbg !8388
  %100 = select i1 %98, i8* %3, i8* %99, !dbg !8386
  br label %629, !dbg !8386

; <label>:101:                                    ; preds = %5
  %102 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8389, !tbaa !3115
  %103 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %102, i64 0, i32 155, !dbg !8390
  %104 = load i8*, i8** %103, align 8, !dbg !8390, !tbaa !8391
  %105 = load i8, i8* %104, align 1, !dbg !8392, !tbaa !3150
  %106 = icmp eq i8 %105, 0, !dbg !8393
  %107 = bitcast i8** %103 to i8*, !dbg !8394
  %108 = select i1 %106, i8* %3, i8* %107, !dbg !8392
  br label %629, !dbg !8392

; <label>:109:                                    ; preds = %5
  %110 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8395, !tbaa !3115
  %111 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %110, i64 0, i32 107, !dbg !8396
  %112 = load i8*, i8** %111, align 8, !dbg !8396, !tbaa !8397
  %113 = load i8, i8* %112, align 1, !dbg !8398, !tbaa !3150
  %114 = icmp eq i8 %113, 0, !dbg !8399
  %115 = bitcast i8** %111 to i8*, !dbg !8400
  %116 = select i1 %114, i8* %3, i8* %115, !dbg !8398
  br label %629, !dbg !8398

; <label>:117:                                    ; preds = %5
  %118 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8401, !tbaa !3115
  %119 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %118, i64 0, i32 147, !dbg !8402
  %120 = load i8*, i8** %119, align 8, !dbg !8402, !tbaa !8403
  %121 = load i8, i8* %120, align 1, !dbg !8404, !tbaa !3150
  %122 = icmp eq i8 %121, 0, !dbg !8405
  %123 = bitcast i8** %119 to i8*, !dbg !8406
  %124 = select i1 %122, i8* %3, i8* %123, !dbg !8404
  br label %629, !dbg !8404

; <label>:125:                                    ; preds = %5
  %126 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8407, !tbaa !3115
  %127 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %126, i64 0, i32 145, !dbg !8408
  %128 = load i8*, i8** %127, align 8, !dbg !8408, !tbaa !8409
  %129 = load i8, i8* %128, align 1, !dbg !8410, !tbaa !3150
  %130 = icmp eq i8 %129, 0, !dbg !8411
  %131 = bitcast i8** %127 to i8*, !dbg !8412
  %132 = select i1 %130, i8* %3, i8* %131, !dbg !8410
  br label %629, !dbg !8410

; <label>:133:                                    ; preds = %5
  %134 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8413, !tbaa !3115
  %135 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %134, i64 0, i32 146, !dbg !8414
  %136 = load i8*, i8** %135, align 8, !dbg !8414, !tbaa !8415
  %137 = load i8, i8* %136, align 1, !dbg !8416, !tbaa !3150
  %138 = icmp eq i8 %137, 0, !dbg !8417
  %139 = bitcast i8** %135 to i8*, !dbg !8418
  %140 = select i1 %138, i8* %3, i8* %139, !dbg !8416
  br label %629, !dbg !8416

; <label>:141:                                    ; preds = %5
  %142 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8419, !tbaa !3115
  %143 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %142, i64 0, i32 209, !dbg !8420
  %144 = load i8*, i8** %143, align 8, !dbg !8420, !tbaa !8421
  %145 = load i8, i8* %144, align 1, !dbg !8422, !tbaa !3150
  %146 = icmp eq i8 %145, 0, !dbg !8423
  %147 = bitcast i8** %143 to i8*, !dbg !8424
  %148 = select i1 %146, i8* %3, i8* %147, !dbg !8422
  br label %629, !dbg !8422

; <label>:149:                                    ; preds = %5
  %150 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8425, !tbaa !3115
  %151 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %150, i64 0, i32 211, !dbg !8426
  %152 = load i8*, i8** %151, align 8, !dbg !8426, !tbaa !8427
  %153 = load i8, i8* %152, align 1, !dbg !8428, !tbaa !3150
  %154 = icmp eq i8 %153, 0, !dbg !8429
  %155 = bitcast i8** %151 to i8*, !dbg !8430
  %156 = select i1 %154, i8* %3, i8* %155, !dbg !8428
  br label %629, !dbg !8428

; <label>:157:                                    ; preds = %5
  %158 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8431, !tbaa !3115
  %159 = getelementptr inbounds %struct.window_S, %struct.window_S* %158, i64 0, i32 121, i32 36, !dbg !8432
  %160 = load i8*, i8** %159, align 8, !dbg !8432, !tbaa !8433
  %161 = load i8, i8* %160, align 1, !dbg !8434, !tbaa !3150
  %162 = icmp eq i8 %161, 0, !dbg !8435
  %163 = bitcast i8** %159 to i8*, !dbg !8436
  %164 = select i1 %162, i8* %3, i8* %163, !dbg !8434
  br label %629, !dbg !8434

; <label>:165:                                    ; preds = %5
  %166 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8437, !tbaa !3115
  %167 = getelementptr inbounds %struct.window_S, %struct.window_S* %166, i64 0, i32 121, i32 37, !dbg !8438
  %168 = load i8*, i8** %167, align 8, !dbg !8438, !tbaa !8439
  %169 = load i8, i8* %168, align 1, !dbg !8440, !tbaa !3150
  %170 = icmp eq i8 %169, 0, !dbg !8441
  %171 = bitcast i8** %167 to i8*, !dbg !8442
  %172 = select i1 %170, i8* %3, i8* %171, !dbg !8440
  br label %629, !dbg !8440

; <label>:173:                                    ; preds = %5
  %174 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8443, !tbaa !3115
  %175 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %174, i64 0, i32 156, !dbg !8444
  %176 = load i64, i64* %175, align 8, !dbg !8444, !tbaa !3431
  %177 = icmp eq i64 %176, -123456, !dbg !8445
  %178 = bitcast i64* %175 to i8*, !dbg !8446
  %179 = select i1 %177, i8* %3, i8* %178, !dbg !8443
  br label %629, !dbg !8443

; <label>:180:                                    ; preds = %5
  %181 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8447, !tbaa !3115
  %182 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %181, i64 0, i32 158, !dbg !8448
  %183 = load i8*, i8** %182, align 8, !dbg !8448, !tbaa !8449
  %184 = load i8, i8* %183, align 1, !dbg !8450, !tbaa !3150
  %185 = icmp eq i8 %184, 0, !dbg !8451
  %186 = bitcast i8** %182 to i8*, !dbg !8452
  %187 = select i1 %185, i8* %3, i8* %186, !dbg !8450
  br label %629, !dbg !8450

; <label>:188:                                    ; preds = %5
  %189 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8453, !tbaa !3115
  %190 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %189, i64 0, i32 113, !dbg !8454
  %191 = load i8*, i8** %190, align 8, !dbg !8454, !tbaa !8455
  %192 = load i8, i8* %191, align 1, !dbg !8456, !tbaa !3150
  %193 = icmp eq i8 %192, 0, !dbg !8457
  %194 = bitcast i8** %190 to i8*, !dbg !8458
  %195 = select i1 %193, i8* %3, i8* %194, !dbg !8456
  br label %629, !dbg !8456

; <label>:196:                                    ; preds = %5
  %197 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8459, !tbaa !3115
  %198 = getelementptr inbounds %struct.window_S, %struct.window_S* %197, i64 0, i32 121, i32 0, !dbg !8460
  %199 = bitcast i32* %198 to i8*, !dbg !8461
  br label %629, !dbg !8462

; <label>:200:                                    ; preds = %5
  %201 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8463, !tbaa !3115
  %202 = getelementptr inbounds %struct.window_S, %struct.window_S* %201, i64 0, i32 121, i32 20, !dbg !8464
  %203 = bitcast i32* %202 to i8*, !dbg !8465
  br label %629, !dbg !8466

; <label>:204:                                    ; preds = %5
  %205 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8467, !tbaa !3115
  %206 = getelementptr inbounds %struct.window_S, %struct.window_S* %205, i64 0, i32 121, i32 21, !dbg !8468
  %207 = load i8*, i8** %206, align 8, !dbg !8468, !tbaa !8469
  %208 = load i8, i8* %207, align 1, !dbg !8470, !tbaa !3150
  %209 = icmp eq i8 %208, 0, !dbg !8471
  %210 = bitcast i8** %206 to i8*, !dbg !8472
  %211 = select i1 %209, i8* %3, i8* %210, !dbg !8470
  br label %629, !dbg !8470

; <label>:212:                                    ; preds = %5
  %213 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8473, !tbaa !3115
  %214 = getelementptr inbounds %struct.window_S, %struct.window_S* %213, i64 0, i32 121, i32 31, !dbg !8474
  %215 = bitcast i32* %214 to i8*, !dbg !8475
  br label %629, !dbg !8476

; <label>:216:                                    ; preds = %5
  %217 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8477, !tbaa !3115
  %218 = getelementptr inbounds %struct.window_S, %struct.window_S* %217, i64 0, i32 121, i32 32, !dbg !8478
  %219 = bitcast i32* %218 to i8*, !dbg !8479
  br label %629, !dbg !8480

; <label>:220:                                    ; preds = %5
  %221 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8481, !tbaa !3115
  %222 = getelementptr inbounds %struct.window_S, %struct.window_S* %221, i64 0, i32 121, i32 33, !dbg !8482
  %223 = bitcast i32* %222 to i8*, !dbg !8483
  br label %629, !dbg !8484

; <label>:224:                                    ; preds = %5
  %225 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8485, !tbaa !3115
  %226 = getelementptr inbounds %struct.window_S, %struct.window_S* %225, i64 0, i32 121, i32 34, !dbg !8486
  %227 = bitcast i8** %226 to i8*, !dbg !8487
  br label %629, !dbg !8488

; <label>:228:                                    ; preds = %5
  %229 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8489, !tbaa !3115
  %230 = getelementptr inbounds %struct.window_S, %struct.window_S* %229, i64 0, i32 121, i32 35, !dbg !8490
  %231 = bitcast i8** %230 to i8*, !dbg !8491
  br label %629, !dbg !8492

; <label>:232:                                    ; preds = %5
  %233 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8493, !tbaa !3115
  %234 = getelementptr inbounds %struct.window_S, %struct.window_S* %233, i64 0, i32 121, i32 4, !dbg !8494
  %235 = bitcast i32* %234 to i8*, !dbg !8495
  br label %629, !dbg !8496

; <label>:236:                                    ; preds = %5
  %237 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8497, !tbaa !3115
  %238 = getelementptr inbounds %struct.window_S, %struct.window_S* %237, i64 0, i32 121, i32 5, !dbg !8498
  %239 = bitcast i64* %238 to i8*, !dbg !8499
  br label %629, !dbg !8500

; <label>:240:                                    ; preds = %5
  %241 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8501, !tbaa !3115
  %242 = getelementptr inbounds %struct.window_S, %struct.window_S* %241, i64 0, i32 121, i32 7, !dbg !8502
  %243 = bitcast i32* %242 to i8*, !dbg !8503
  br label %629, !dbg !8504

; <label>:244:                                    ; preds = %5
  %245 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8505, !tbaa !3115
  %246 = getelementptr inbounds %struct.window_S, %struct.window_S* %245, i64 0, i32 121, i32 9, !dbg !8506
  %247 = bitcast i8** %246 to i8*, !dbg !8507
  br label %629, !dbg !8508

; <label>:248:                                    ; preds = %5
  %249 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8509, !tbaa !3115
  %250 = getelementptr inbounds %struct.window_S, %struct.window_S* %249, i64 0, i32 121, i32 10, !dbg !8510
  %251 = bitcast i64* %250 to i8*, !dbg !8511
  br label %629, !dbg !8512

; <label>:252:                                    ; preds = %5
  %253 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8513, !tbaa !3115
  %254 = getelementptr inbounds %struct.window_S, %struct.window_S* %253, i64 0, i32 121, i32 12, !dbg !8514
  %255 = bitcast i8** %254 to i8*, !dbg !8515
  br label %629, !dbg !8516

; <label>:256:                                    ; preds = %5
  %257 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8517, !tbaa !3115
  %258 = getelementptr inbounds %struct.window_S, %struct.window_S* %257, i64 0, i32 121, i32 14, !dbg !8518
  %259 = bitcast i64* %258 to i8*, !dbg !8519
  br label %629, !dbg !8520

; <label>:260:                                    ; preds = %5
  %261 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8521, !tbaa !3115
  %262 = getelementptr inbounds %struct.window_S, %struct.window_S* %261, i64 0, i32 121, i32 15, !dbg !8522
  %263 = bitcast i64* %262 to i8*, !dbg !8523
  br label %629, !dbg !8524

; <label>:264:                                    ; preds = %5
  %265 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8525, !tbaa !3115
  %266 = getelementptr inbounds %struct.window_S, %struct.window_S* %265, i64 0, i32 121, i32 16, !dbg !8526
  %267 = bitcast i8** %266 to i8*, !dbg !8527
  br label %629, !dbg !8528

; <label>:268:                                    ; preds = %5
  %269 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8529, !tbaa !3115
  %270 = getelementptr inbounds %struct.window_S, %struct.window_S* %269, i64 0, i32 121, i32 17, !dbg !8530
  %271 = bitcast i8** %270 to i8*, !dbg !8531
  br label %629, !dbg !8532

; <label>:272:                                    ; preds = %5
  %273 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8533, !tbaa !3115
  %274 = getelementptr inbounds %struct.window_S, %struct.window_S* %273, i64 0, i32 121, i32 18, !dbg !8534
  %275 = bitcast i8** %274 to i8*, !dbg !8535
  br label %629, !dbg !8536

; <label>:276:                                    ; preds = %5
  %277 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8537, !tbaa !3115
  %278 = getelementptr inbounds %struct.window_S, %struct.window_S* %277, i64 0, i32 121, i32 22, !dbg !8538
  %279 = bitcast i32* %278 to i8*, !dbg !8539
  br label %629, !dbg !8540

; <label>:280:                                    ; preds = %5
  %281 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8541, !tbaa !3115
  %282 = getelementptr inbounds %struct.window_S, %struct.window_S* %281, i64 0, i32 121, i32 23, !dbg !8542
  %283 = bitcast i32* %282 to i8*, !dbg !8543
  br label %629, !dbg !8544

; <label>:284:                                    ; preds = %5
  %285 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8545, !tbaa !3115
  %286 = getelementptr inbounds %struct.window_S, %struct.window_S* %285, i64 0, i32 121, i32 24, !dbg !8546
  %287 = bitcast i64* %286 to i8*, !dbg !8547
  br label %629, !dbg !8548

; <label>:288:                                    ; preds = %5
  %289 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8549, !tbaa !3115
  %290 = getelementptr inbounds %struct.window_S, %struct.window_S* %289, i64 0, i32 121, i32 25, !dbg !8550
  %291 = bitcast i32* %290 to i8*, !dbg !8551
  br label %629, !dbg !8552

; <label>:292:                                    ; preds = %5
  %293 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8553, !tbaa !3115
  %294 = getelementptr inbounds %struct.window_S, %struct.window_S* %293, i64 0, i32 121, i32 26, !dbg !8554
  %295 = bitcast i32* %294 to i8*, !dbg !8555
  br label %629, !dbg !8556

; <label>:296:                                    ; preds = %5
  %297 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8557, !tbaa !3115
  %298 = getelementptr inbounds %struct.window_S, %struct.window_S* %297, i64 0, i32 121, i32 27, !dbg !8558
  %299 = bitcast i32* %298 to i8*, !dbg !8559
  br label %629, !dbg !8560

; <label>:300:                                    ; preds = %5
  %301 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8561, !tbaa !3115
  %302 = getelementptr inbounds %struct.window_S, %struct.window_S* %301, i64 0, i32 121, i32 28, !dbg !8562
  %303 = bitcast i32* %302 to i8*, !dbg !8563
  br label %629, !dbg !8564

; <label>:304:                                    ; preds = %5
  %305 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8565, !tbaa !3115
  %306 = getelementptr inbounds %struct.window_S, %struct.window_S* %305, i64 0, i32 121, i32 29, !dbg !8566
  %307 = bitcast i8** %306 to i8*, !dbg !8567
  br label %629, !dbg !8568

; <label>:308:                                    ; preds = %5
  %309 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8569, !tbaa !3115
  %310 = getelementptr inbounds %struct.window_S, %struct.window_S* %309, i64 0, i32 121, i32 30, !dbg !8570
  %311 = bitcast i64* %310 to i8*, !dbg !8571
  br label %629, !dbg !8572

; <label>:312:                                    ; preds = %5
  %313 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8573, !tbaa !3115
  %314 = getelementptr inbounds %struct.window_S, %struct.window_S* %313, i64 0, i32 121, i32 41, !dbg !8574
  %315 = bitcast i32* %314 to i8*, !dbg !8575
  br label %629, !dbg !8576

; <label>:316:                                    ; preds = %5
  %317 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8577, !tbaa !3115
  %318 = getelementptr inbounds %struct.window_S, %struct.window_S* %317, i64 0, i32 121, i32 19, !dbg !8578
  %319 = bitcast i32* %318 to i8*, !dbg !8579
  br label %629, !dbg !8580

; <label>:320:                                    ; preds = %5
  %321 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8581, !tbaa !3115
  %322 = getelementptr inbounds %struct.window_S, %struct.window_S* %321, i64 0, i32 121, i32 1, !dbg !8582
  %323 = bitcast i32* %322 to i8*, !dbg !8583
  br label %629, !dbg !8584

; <label>:324:                                    ; preds = %5
  %325 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8585, !tbaa !3115
  %326 = getelementptr inbounds %struct.window_S, %struct.window_S* %325, i64 0, i32 121, i32 2, !dbg !8586
  %327 = bitcast i8** %326 to i8*, !dbg !8587
  br label %629, !dbg !8588

; <label>:328:                                    ; preds = %5
  %329 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8589, !tbaa !3115
  %330 = getelementptr inbounds %struct.window_S, %struct.window_S* %329, i64 0, i32 121, i32 3, !dbg !8590
  %331 = bitcast i8** %330 to i8*, !dbg !8591
  br label %629, !dbg !8592

; <label>:332:                                    ; preds = %5
  %333 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8593, !tbaa !3115
  %334 = getelementptr inbounds %struct.window_S, %struct.window_S* %333, i64 0, i32 121, i32 38, !dbg !8594
  %335 = bitcast i32* %334 to i8*, !dbg !8595
  br label %629, !dbg !8596

; <label>:336:                                    ; preds = %5
  %337 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8597, !tbaa !3115
  %338 = getelementptr inbounds %struct.window_S, %struct.window_S* %337, i64 0, i32 121, i32 45, !dbg !8598
  %339 = bitcast i32* %338 to i8*, !dbg !8599
  br label %629, !dbg !8600

; <label>:340:                                    ; preds = %5
  %341 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8601, !tbaa !3115
  %342 = getelementptr inbounds %struct.window_S, %struct.window_S* %341, i64 0, i32 121, i32 43, !dbg !8602
  %343 = bitcast i8** %342 to i8*, !dbg !8603
  br label %629, !dbg !8604

; <label>:344:                                    ; preds = %5
  %345 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8605, !tbaa !3115
  %346 = getelementptr inbounds %struct.window_S, %struct.window_S* %345, i64 0, i32 121, i32 44, !dbg !8606
  %347 = bitcast i64* %346 to i8*, !dbg !8607
  br label %629, !dbg !8608

; <label>:348:                                    ; preds = %5
  %349 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8609, !tbaa !3115
  %350 = getelementptr inbounds %struct.window_S, %struct.window_S* %349, i64 0, i32 121, i32 48, !dbg !8610
  %351 = bitcast i8** %350 to i8*, !dbg !8611
  br label %629, !dbg !8612

; <label>:352:                                    ; preds = %5
  %353 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8613, !tbaa !3115
  %354 = getelementptr inbounds %struct.window_S, %struct.window_S* %353, i64 0, i32 121, i32 49, !dbg !8614
  %355 = bitcast i8** %354 to i8*, !dbg !8615
  br label %629, !dbg !8616

; <label>:356:                                    ; preds = %5
  %357 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8617, !tbaa !3115
  %358 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %357, i64 0, i32 159, !dbg !8618
  %359 = bitcast i64* %358 to i8*, !dbg !8619
  br label %629, !dbg !8620

; <label>:360:                                    ; preds = %5
  %361 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8621, !tbaa !3115
  %362 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %361, i64 0, i32 67, !dbg !8622
  %363 = bitcast i32* %362 to i8*, !dbg !8623
  br label %629, !dbg !8624

; <label>:364:                                    ; preds = %5
  %365 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8625, !tbaa !3115
  %366 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %365, i64 0, i32 72, !dbg !8626
  %367 = bitcast i32* %366 to i8*, !dbg !8627
  br label %629, !dbg !8628

; <label>:368:                                    ; preds = %5
  %369 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8629, !tbaa !3115
  %370 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %369, i64 0, i32 73, !dbg !8630
  %371 = bitcast i32* %370 to i8*, !dbg !8631
  br label %629, !dbg !8632

; <label>:372:                                    ; preds = %5
  %373 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8633, !tbaa !3115
  %374 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %373, i64 0, i32 74, !dbg !8634
  %375 = bitcast i8** %374 to i8*, !dbg !8635
  br label %629, !dbg !8636

; <label>:376:                                    ; preds = %5
  %377 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8637, !tbaa !3115
  %378 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %377, i64 0, i32 75, !dbg !8638
  %379 = bitcast i8** %378 to i8*, !dbg !8639
  br label %629, !dbg !8640

; <label>:380:                                    ; preds = %5
  %381 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8641, !tbaa !3115
  %382 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %381, i64 0, i32 77, !dbg !8642
  %383 = bitcast i32* %382 to i8*, !dbg !8643
  br label %629, !dbg !8644

; <label>:384:                                    ; preds = %5
  %385 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8645, !tbaa !3115
  %386 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %385, i64 0, i32 71, !dbg !8646
  %387 = bitcast i32* %386 to i8*, !dbg !8647
  br label %629, !dbg !8648

; <label>:388:                                    ; preds = %5
  %389 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8649, !tbaa !3115
  %390 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %389, i64 0, i32 78, !dbg !8650
  %391 = bitcast i32* %390 to i8*, !dbg !8651
  br label %629, !dbg !8652

; <label>:392:                                    ; preds = %5
  %393 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8653, !tbaa !3115
  %394 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %393, i64 0, i32 80, !dbg !8654
  %395 = bitcast i8** %394 to i8*, !dbg !8655
  br label %629, !dbg !8656

; <label>:396:                                    ; preds = %5
  %397 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8657, !tbaa !3115
  %398 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %397, i64 0, i32 79, !dbg !8658
  %399 = bitcast i8** %398 to i8*, !dbg !8659
  br label %629, !dbg !8660

; <label>:400:                                    ; preds = %5
  %401 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8661, !tbaa !3115
  %402 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %401, i64 0, i32 81, !dbg !8662
  %403 = bitcast i8** %402 to i8*, !dbg !8663
  br label %629, !dbg !8664

; <label>:404:                                    ; preds = %5
  %405 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8665, !tbaa !3115
  %406 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %405, i64 0, i32 82, !dbg !8666
  %407 = bitcast i8** %406 to i8*, !dbg !8667
  br label %629, !dbg !8668

; <label>:408:                                    ; preds = %5
  %409 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8669, !tbaa !3115
  %410 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %409, i64 0, i32 83, !dbg !8670
  %411 = bitcast i8** %410 to i8*, !dbg !8671
  br label %629, !dbg !8672

; <label>:412:                                    ; preds = %5
  %413 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8673, !tbaa !3115
  %414 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %413, i64 0, i32 84, !dbg !8674
  %415 = bitcast i8** %414 to i8*, !dbg !8675
  br label %629, !dbg !8676

; <label>:416:                                    ; preds = %5
  %417 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8677, !tbaa !3115
  %418 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %417, i64 0, i32 85, !dbg !8678
  %419 = bitcast i8** %418 to i8*, !dbg !8679
  br label %629, !dbg !8680

; <label>:420:                                    ; preds = %5
  %421 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8681, !tbaa !3115
  %422 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %421, i64 0, i32 86, !dbg !8682
  %423 = bitcast i8** %422 to i8*, !dbg !8683
  br label %629, !dbg !8684

; <label>:424:                                    ; preds = %5
  %425 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8685, !tbaa !3115
  %426 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %425, i64 0, i32 87, !dbg !8686
  %427 = bitcast i8** %426 to i8*, !dbg !8687
  br label %629, !dbg !8688

; <label>:428:                                    ; preds = %5
  %429 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8689, !tbaa !3115
  %430 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %429, i64 0, i32 88, !dbg !8690
  %431 = bitcast i32* %430 to i8*, !dbg !8691
  br label %629, !dbg !8692

; <label>:432:                                    ; preds = %5
  %433 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8693, !tbaa !3115
  %434 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %433, i64 0, i32 89, !dbg !8694
  %435 = bitcast i32* %434 to i8*, !dbg !8695
  br label %629, !dbg !8696

; <label>:436:                                    ; preds = %5
  %437 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8697, !tbaa !3115
  %438 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %437, i64 0, i32 90, !dbg !8698
  %439 = bitcast i32* %438 to i8*, !dbg !8699
  br label %629, !dbg !8700

; <label>:440:                                    ; preds = %5
  %441 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8701, !tbaa !3115
  %442 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %441, i64 0, i32 93, !dbg !8702
  %443 = bitcast i8** %442 to i8*, !dbg !8703
  br label %629, !dbg !8704

; <label>:444:                                    ; preds = %5
  %445 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8705, !tbaa !3115
  %446 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %445, i64 0, i32 94, !dbg !8706
  %447 = bitcast i8** %446 to i8*, !dbg !8707
  br label %629, !dbg !8708

; <label>:448:                                    ; preds = %5
  %449 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8709, !tbaa !3115
  %450 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %449, i64 0, i32 95, !dbg !8710
  %451 = bitcast i8** %450 to i8*, !dbg !8711
  br label %629, !dbg !8712

; <label>:452:                                    ; preds = %5
  %453 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8713, !tbaa !3115
  %454 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %453, i64 0, i32 96, !dbg !8714
  %455 = bitcast i8** %454 to i8*, !dbg !8715
  br label %629, !dbg !8716

; <label>:456:                                    ; preds = %5
  %457 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8717, !tbaa !3115
  %458 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %457, i64 0, i32 97, !dbg !8718
  %459 = bitcast i8** %458 to i8*, !dbg !8719
  br label %629, !dbg !8720

; <label>:460:                                    ; preds = %5
  %461 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8721, !tbaa !3115
  %462 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %461, i64 0, i32 61, !dbg !8722
  %463 = bitcast i64* %462 to i8*, !dbg !8723
  br label %629, !dbg !8724

; <label>:464:                                    ; preds = %5
  %465 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8725, !tbaa !3115
  %466 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %465, i64 0, i32 62, !dbg !8726
  %467 = bitcast i64* %466 to i8*, !dbg !8727
  br label %629, !dbg !8728

; <label>:468:                                    ; preds = %5
  %469 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8729, !tbaa !3115
  %470 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %469, i64 0, i32 98, !dbg !8730
  %471 = bitcast i32* %470 to i8*, !dbg !8731
  br label %629, !dbg !8732

; <label>:472:                                    ; preds = %5
  %473 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8733, !tbaa !3115
  %474 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %473, i64 0, i32 99, !dbg !8734
  %475 = bitcast i8** %474 to i8*, !dbg !8735
  br label %629, !dbg !8736

; <label>:476:                                    ; preds = %5
  %477 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8737, !tbaa !3115
  %478 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %477, i64 0, i32 102, !dbg !8738
  %479 = bitcast i8** %478 to i8*, !dbg !8739
  br label %629, !dbg !8740

; <label>:480:                                    ; preds = %5
  %481 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8741, !tbaa !3115
  %482 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %481, i64 0, i32 104, !dbg !8742
  %483 = bitcast i8** %482 to i8*, !dbg !8743
  br label %629, !dbg !8744

; <label>:484:                                    ; preds = %5
  %485 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8745, !tbaa !3115
  %486 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %485, i64 0, i32 106, !dbg !8746
  %487 = bitcast i8** %486 to i8*, !dbg !8747
  br label %629, !dbg !8748

; <label>:488:                                    ; preds = %5
  %489 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8749, !tbaa !3115
  %490 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %489, i64 0, i32 108, !dbg !8750
  %491 = bitcast i8** %490 to i8*, !dbg !8751
  br label %629, !dbg !8752

; <label>:492:                                    ; preds = %5
  %493 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8753, !tbaa !3115
  %494 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %493, i64 0, i32 110, !dbg !8754
  %495 = bitcast i8** %494 to i8*, !dbg !8755
  br label %629, !dbg !8756

; <label>:496:                                    ; preds = %5
  %497 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8757, !tbaa !3115
  %498 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %497, i64 0, i32 112, !dbg !8758
  %499 = bitcast i32* %498 to i8*, !dbg !8759
  br label %629, !dbg !8760

; <label>:500:                                    ; preds = %5
  %501 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8761, !tbaa !3115
  %502 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %501, i64 0, i32 115, !dbg !8762
  %503 = bitcast i32* %502 to i8*, !dbg !8763
  br label %629, !dbg !8764

; <label>:504:                                    ; preds = %5
  %505 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8765, !tbaa !3115
  %506 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %505, i64 0, i32 114, !dbg !8766
  %507 = bitcast i8** %506 to i8*, !dbg !8767
  br label %629, !dbg !8768

; <label>:508:                                    ; preds = %5
  %509 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8769, !tbaa !3115
  %510 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %509, i64 0, i32 117, !dbg !8770
  %511 = bitcast i32* %510 to i8*, !dbg !8771
  br label %629, !dbg !8772

; <label>:512:                                    ; preds = %5
  %513 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8773, !tbaa !3115
  %514 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %513, i64 0, i32 15, !dbg !8774
  %515 = bitcast i32* %514 to i8*, !dbg !8775
  br label %629, !dbg !8776

; <label>:516:                                    ; preds = %5
  %517 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8777, !tbaa !3115
  %518 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %517, i64 0, i32 118, !dbg !8778
  %519 = bitcast i8** %518 to i8*, !dbg !8779
  br label %629, !dbg !8780

; <label>:520:                                    ; preds = %5
  %521 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8781, !tbaa !3115
  %522 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %521, i64 0, i32 119, !dbg !8782
  %523 = bitcast i32* %522 to i8*, !dbg !8783
  br label %629, !dbg !8784

; <label>:524:                                    ; preds = %5
  %525 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8785, !tbaa !3115
  %526 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %525, i64 0, i32 120, !dbg !8786
  %527 = bitcast i8** %526 to i8*, !dbg !8787
  br label %629, !dbg !8788

; <label>:528:                                    ; preds = %5
  %529 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8789, !tbaa !3115
  %530 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %529, i64 0, i32 121, !dbg !8790
  %531 = bitcast i32* %530 to i8*, !dbg !8791
  br label %629, !dbg !8792

; <label>:532:                                    ; preds = %5
  %533 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8793, !tbaa !3115
  %534 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %533, i64 0, i32 124, !dbg !8794
  %535 = bitcast i32* %534 to i8*, !dbg !8795
  br label %629, !dbg !8796

; <label>:536:                                    ; preds = %5
  %537 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8797, !tbaa !3115
  %538 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %537, i64 0, i32 123, !dbg !8798
  %539 = bitcast i32* %538 to i8*, !dbg !8799
  br label %629, !dbg !8800

; <label>:540:                                    ; preds = %5
  %541 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8801, !tbaa !3115
  %542 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %541, i64 0, i32 125, !dbg !8802
  %543 = bitcast i64* %542 to i8*, !dbg !8803
  br label %629, !dbg !8804

; <label>:544:                                    ; preds = %5
  %545 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8805, !tbaa !3115
  %546 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %545, i64 0, i32 127, !dbg !8806
  %547 = bitcast i8** %546 to i8*, !dbg !8807
  br label %629, !dbg !8808

; <label>:548:                                    ; preds = %5
  %549 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8809, !tbaa !3115
  %550 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %549, i64 0, i32 128, !dbg !8810
  %551 = bitcast i32* %550 to i8*, !dbg !8811
  br label %629, !dbg !8812

; <label>:552:                                    ; preds = %5
  %553 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8813, !tbaa !3115
  %554 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %553, i64 0, i32 129, !dbg !8814
  %555 = bitcast i64* %554 to i8*, !dbg !8815
  br label %629, !dbg !8816

; <label>:556:                                    ; preds = %5
  %557 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8817, !tbaa !3115
  %558 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %557, i64 0, i32 130, !dbg !8818
  %559 = bitcast i8** %558 to i8*, !dbg !8819
  br label %629, !dbg !8820

; <label>:560:                                    ; preds = %5
  %561 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8821, !tbaa !3115
  %562 = getelementptr inbounds %struct.window_S, %struct.window_S* %561, i64 0, i32 4, !dbg !8822
  %563 = load %struct.synblock_T*, %struct.synblock_T** %562, align 8, !dbg !8822, !tbaa !4019
  %564 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %563, i64 0, i32 34, !dbg !8823
  %565 = bitcast i8** %564 to i8*, !dbg !8824
  br label %629, !dbg !8825

; <label>:566:                                    ; preds = %5
  %567 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8826, !tbaa !3115
  %568 = getelementptr inbounds %struct.window_S, %struct.window_S* %567, i64 0, i32 4, !dbg !8827
  %569 = load %struct.synblock_T*, %struct.synblock_T** %568, align 8, !dbg !8827, !tbaa !4019
  %570 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %569, i64 0, i32 36, !dbg !8828
  %571 = bitcast i8** %570 to i8*, !dbg !8829
  br label %629, !dbg !8830

; <label>:572:                                    ; preds = %5
  %573 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8831, !tbaa !3115
  %574 = getelementptr inbounds %struct.window_S, %struct.window_S* %573, i64 0, i32 4, !dbg !8832
  %575 = load %struct.synblock_T*, %struct.synblock_T** %574, align 8, !dbg !8832, !tbaa !4019
  %576 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %575, i64 0, i32 37, !dbg !8833
  %577 = bitcast i8** %576 to i8*, !dbg !8834
  br label %629, !dbg !8835

; <label>:578:                                    ; preds = %5
  %579 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8836, !tbaa !3115
  %580 = getelementptr inbounds %struct.window_S, %struct.window_S* %579, i64 0, i32 4, !dbg !8837
  %581 = load %struct.synblock_T*, %struct.synblock_T** %580, align 8, !dbg !8837, !tbaa !4019
  %582 = getelementptr inbounds %struct.synblock_T, %struct.synblock_T* %581, i64 0, i32 38, !dbg !8838
  %583 = bitcast i8** %582 to i8*, !dbg !8839
  br label %629, !dbg !8840

; <label>:584:                                    ; preds = %5
  %585 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8841, !tbaa !3115
  %586 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %585, i64 0, i32 122, !dbg !8842
  %587 = bitcast i64* %586 to i8*, !dbg !8843
  br label %629, !dbg !8844

; <label>:588:                                    ; preds = %5
  %589 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8845, !tbaa !3115
  %590 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %589, i64 0, i32 131, !dbg !8846
  %591 = bitcast i64* %590 to i8*, !dbg !8847
  br label %629, !dbg !8848

; <label>:592:                                    ; preds = %5
  %593 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8849, !tbaa !3115
  %594 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %593, i64 0, i32 133, !dbg !8850
  %595 = bitcast i64* %594 to i8*, !dbg !8851
  br label %629, !dbg !8852

; <label>:596:                                    ; preds = %5
  %597 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8853, !tbaa !3115
  %598 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %597, i64 0, i32 132, !dbg !8854
  %599 = bitcast i32* %598 to i8*, !dbg !8855
  br label %629, !dbg !8856

; <label>:600:                                    ; preds = %5
  %601 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8857, !tbaa !3115
  %602 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %601, i64 0, i32 157, !dbg !8858
  %603 = bitcast i32* %602 to i8*, !dbg !8859
  br label %629, !dbg !8860

; <label>:604:                                    ; preds = %5
  %605 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8861, !tbaa !3115
  %606 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %605, i64 0, i32 136, !dbg !8862
  %607 = bitcast i64* %606 to i8*, !dbg !8863
  br label %629, !dbg !8864

; <label>:608:                                    ; preds = %5
  %609 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8865, !tbaa !3115
  %610 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %609, i64 0, i32 144, !dbg !8866
  %611 = bitcast i8** %610 to i8*, !dbg !8867
  br label %629, !dbg !8868

; <label>:612:                                    ; preds = %5
  %613 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8869, !tbaa !3115
  %614 = getelementptr inbounds %struct.window_S, %struct.window_S* %613, i64 0, i32 121, i32 47, !dbg !8870
  %615 = bitcast i8** %614 to i8*, !dbg !8871
  br label %629, !dbg !8872

; <label>:616:                                    ; preds = %5
  %617 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8873, !tbaa !3115
  %618 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %617, i64 0, i32 139, !dbg !8874
  %619 = bitcast i8** %618 to i8*, !dbg !8875
  br label %629, !dbg !8876

; <label>:620:                                    ; preds = %5
  %621 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8877, !tbaa !3115
  %622 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %621, i64 0, i32 142, !dbg !8878
  %623 = bitcast i8** %622 to i8*, !dbg !8879
  br label %629, !dbg !8880

; <label>:624:                                    ; preds = %5
  %625 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1069, i64 0, i64 0), i32 5) #11, !dbg !8881
  tail call void @iemsg(i8* %625) #11, !dbg !8882
  %626 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8883, !tbaa !3115
  %627 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %626, i64 0, i32 136, !dbg !8884
  %628 = bitcast i64* %627 to i8*, !dbg !8885
  br label %629, !dbg !8886

; <label>:629:                                    ; preds
  %630 = phi i8* [ %628, %624 ], [ %623, %620 ], [ %619, %616 ], [ %615, %612 ], [ %611, %608 ], [ %607, %604 ], [ %603, %600 ], [ %599, %596 ], [ %595, %592 ], [ %591, %588 ], [ %587, %584 ], [ %583, %578 ], [ %577, %572 ], [ %571, %566 ], [ %565, %560 ], [ %559, %556 ], [ %555, %552 ], [ %551, %548 ], [ %547, %544 ], [ %543, %540 ], [ %539, %536 ], [ %535, %532 ], [ %531, %528 ], [ %527, %524 ], [ %523, %520 ], [ %519, %516 ], [ %515, %512 ], [ %511, %508 ], [ %507, %504 ], [ %503, %500 ], [ %499, %496 ], [ %495, %492 ], [ %491, %488 ], [ %487, %484 ], [ %483, %480 ], [ %479, %476 ], [ %475, %472 ], [ %471, %468 ], [ %467, %464 ], [ %463, %460 ], [ %459, %456 ], [ %455, %452 ], [ %451, %448 ], [ %447, %444 ], [ %443, %440 ], [ %439, %436 ], [ %435, %432 ], [ %431, %428 ], [ %427, %424 ], [ %423, %420 ], [ %419, %416 ], [ %415, %412 ], [ %411, %408 ], [ %407, %404 ], [ %403, %400 ], [ %399, %396 ], [ %395, %392 ], [ %391, %388 ], [ %387, %384 ], [ %383, %380 ], [ %379, %376 ], [ %375, %372 ], [ %371, %368 ], [ %367, %364 ], [ %363, %360 ], [ %359, %356 ], [ %355, %352 ], [ %351, %348 ], [ %347, %344 ], [ %343, %340 ], [ %339, %336 ], [ %335, %332 ], [ %331, %328 ], [ %327, %324 ], [ %323, %320 ], [ %319, %316 ], [ %315, %312 ], [ %311, %308 ], [ %307, %304 ], [ %303, %300 ], [ %299, %296 ], [ %295, %292 ], [ %291, %288 ], [ %287, %284 ], [ %283, %280 ], [ %279, %276 ], [ %275, %272 ], [ %271, %268 ], [ %267, %264 ], [ %263, %260 ], [ %259, %256 ], [ %255, %252 ], [ %251, %248 ], [ %247, %244 ], [ %243, %240 ], [ %239, %236 ], [ %235, %232 ], [ %231, %228 ], [ %227, %224 ], [ %223, %220 ], [ %219, %216 ], [ %215, %212 ], [ %203, %200 ], [ %199, %196 ], [ null, %1 ], [ %3, %5 ], [ %15, %8 ], [ %23, %16 ], [ %31, %24 ], [ %38, %32 ], [ %46, %39 ], [ %54, %47 ], [ %62, %55 ], [ %69, %63 ], [ %76, %70 ], [ %84, %77 ], [ %92, %85 ], [ %100, %93 ], [ %108, %101 ], [ %116, %109 ], [ %124, %117 ], [ %132, %125 ], [ %140, %133 ], [ %148, %141 ], [ %156, %149 ], [ %164, %157 ], [ %172, %165 ], [ %179, %173 ], [ %187, %180 ], [ %195, %188 ], [ %211, %204 ]
  ret i8* %630, !dbg !8887
}

declare i8* @gui_bg_default() local_unnamed_addr #3

declare i64 @getdigits(i8**) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i8* @did_set_string_option(i32, i8**, i32, i8*, i8*, i32, i32*) local_unnamed_addr #3

declare void @trigger_optionsset_string(i32, i32, i8*, i8*, i8*, i8*) local_unnamed_addr #3

declare i32 @add_termcap_entry(i8*, i32) local_unnamed_addr #3

declare void @add_termcode(i8*, i8*, i32) local_unnamed_addr #3

declare void @ttest(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @did_set_option(i32, i32, i32, i32) local_unnamed_addr #0 !dbg !6155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !6159, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32 %2, metadata !6160, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i32 %3, metadata !6161, metadata !DIExpression()), !dbg !8891
  %5 = sext i32 %0 to i64, !dbg !8892
  %6 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 2, !dbg !8893
  %7 = load i64, i64* %6, align 16, !dbg !8894, !tbaa !3107
  %8 = or i64 %7, 256, !dbg !8894
  store i64 %8, i64* %6, align 16, !dbg !8894, !tbaa !3107
  call void @llvm.dbg.value(metadata i32 %0, metadata !4525, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !8897
  %9 = and i32 %1, 4, !dbg !8898
  %10 = icmp eq i32 %9, 0, !dbg !8898
  br i1 %10, label %35, label %11, !dbg !8899

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 4, !dbg !8900
  %13 = load i32, i32* %12, align 16, !dbg !8900, !tbaa !4220
  switch i32 %13, label %35 [
    i32 12327, label %14
    i32 8211, label %17
    i32 8212, label %20
    i32 20511, label %23
    i32 16423, label %26
    i32 16416, label %29
    i32 16425, label %32
  ], !dbg !8901

; <label>:14:                                     ; preds = %11
  %15 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8902, !tbaa !3115
  %16 = getelementptr inbounds %struct.window_S, %struct.window_S* %15, i64 0, i32 123, !dbg !8903
  br label %35, !dbg !8904

; <label>:17:                                     ; preds = %11
  %18 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8905, !tbaa !3115
  %19 = getelementptr inbounds %struct.window_S, %struct.window_S* %18, i64 0, i32 124, !dbg !8906
  br label %35, !dbg !8907

; <label>:20:                                     ; preds = %11
  %21 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !8908, !tbaa !3115
  %22 = getelementptr inbounds %struct.window_S, %struct.window_S* %21, i64 0, i32 125, !dbg !8909
  br label %35, !dbg !8910

; <label>:23:                                     ; preds = %11
  %24 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8911, !tbaa !3115
  %25 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %24, i64 0, i32 210, !dbg !8912
  br label %35, !dbg !8913

; <label>:26:                                     ; preds = %11
  %27 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8914, !tbaa !3115
  %28 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %27, i64 0, i32 105, !dbg !8915
  br label %35, !dbg !8916

; <label>:29:                                     ; preds = %11
  %30 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8917, !tbaa !3115
  %31 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %30, i64 0, i32 109, !dbg !8918
  br label %35, !dbg !8919

; <label>:32:                                     ; preds = %11
  %33 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8920, !tbaa !3115
  %34 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %33, i64 0, i32 103, !dbg !8921
  br label %35, !dbg !8922

; <label>:35:                                     ; preds = %4, %11, %14, %17, %20, %23, %26, %29, %32
  %36 = phi i64* [ %34, %32 ], [ %31, %29 ], [ %28, %26 ], [ %25, %23 ], [ %22, %20 ], [ %19, %17 ], [ %16, %14 ], [ %6, %11 ], [ %6, %4 ]
  call void @llvm.dbg.value(metadata i64* %36, metadata !6162, metadata !DIExpression()), !dbg !8923
  %37 = icmp eq i32 %3, 0, !dbg !8924
  br i1 %37, label %38, label %48, !dbg !8925

; <label>:38:                                     ; preds = %35
  %39 = load i32, i32* @secure, align 4, !dbg !8926, !tbaa !3060
  %40 = load i32, i32* @sandbox, align 4, !dbg !8927
  %41 = and i32 %1, 8, !dbg !8928
  %42 = or i32 %39, %41, !dbg !8929
  %43 = or i32 %42, %40, !dbg !8929
  %44 = icmp eq i32 %43, 0, !dbg !8929
  br i1 %44, label %48, label %45, !dbg !8929

; <label>:45:                                     ; preds = %38
  %46 = load i64, i64* %36, align 8, !dbg !8930, !tbaa !4248
  %47 = or i64 %46, 8388608, !dbg !8931
  br label %53, !dbg !8932

; <label>:48:                                     ; preds = %38, %35
  %49 = icmp eq i32 %2, 0, !dbg !8933
  br i1 %49, label %55, label %50, !dbg !8934

; <label>:50:                                     ; preds = %48
  %51 = load i64, i64* %36, align 8, !dbg !8935, !tbaa !4248
  %52 = and i64 %51, -8388609, !dbg !8936
  br label %53, !dbg !8937

; <label>:53:                                     ; preds = %45, %50
  %54 = phi i64 [ %52, %50 ], [ %47, %45 ]
  store i64 %54, i64* %36, align 8, !tbaa !4248
  br label %55, !dbg !8938

; <label>:55:                                     ; preds = %53, %48
  ret void, !dbg !8938
}

declare i8* @skipwhite(i8*) local_unnamed_addr #3

declare void @vim_strncpy(i8*, i8*, i64) local_unnamed_addr #3

declare void @trans_characters(i8*, i32) local_unnamed_addr #3

declare i32 @emsg(i8*) local_unnamed_addr #3

declare void @cursor_on() local_unnamed_addr #3

declare void @out_flush() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @did_set_title() local_unnamed_addr #0 !dbg !7199 {
  %1 = load i32, i32* @starting, align 4, !dbg !8939, !tbaa !3060
  %2 = icmp eq i32 %1, 2, !dbg !8940
  %3 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !8941
  %4 = icmp ne i32 %3, 0, !dbg !8942
  %5 = or i1 %2, %4, !dbg !8943
  br i1 %5, label %7, label %6, !dbg !8943

; <label>:6:                                      ; preds = %0
  tail call void @maketitle() #11, !dbg !8944
  br label %7, !dbg !8944

; <label>:7:                                      ; preds = %0, %6
  ret void, !dbg !8945
}

declare void @maketitle() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @set_options_bin(i32, i32, i32) local_unnamed_addr #0 !dbg !8946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 %2, metadata !8950, metadata !DIExpression()), !dbg !8953
  %4 = icmp eq i32 %1, 0, !dbg !8954
  %5 = icmp ne i32 %0, 0
  br i1 %4, label %44, label %6, !dbg !8956

; <label>:6:                                      ; preds = %3
  %7 = and i32 %2, 2
  br i1 %5, label %32, label %8, !dbg !8957

; <label>:8:                                      ; preds = %6
  %9 = icmp eq i32 %7, 0, !dbg !8959
  br i1 %9, label %10, label %24, !dbg !8963

; <label>:10:                                     ; preds = %8
  %11 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !8964, !tbaa !3115
  %12 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 133, !dbg !8966
  %13 = load i64, i64* %12, align 8, !dbg !8966, !tbaa !6880
  %14 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 134, !dbg !8967
  store i64 %13, i64* %14, align 8, !dbg !8968, !tbaa !8969
  %15 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 136, !dbg !8970
  %16 = load i64, i64* %15, align 8, !dbg !8970, !tbaa !6885
  %17 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 137, !dbg !8971
  store i64 %16, i64* %17, align 8, !dbg !8972, !tbaa !8973
  %18 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 115, !dbg !8974
  %19 = load i32, i32* %18, align 8, !dbg !8974, !tbaa !8975
  %20 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 116, !dbg !8976
  store i32 %19, i32* %20, align 4, !dbg !8977, !tbaa !8978
  %21 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 90, !dbg !8979
  %22 = load i32, i32* %21, align 8, !dbg !8979, !tbaa !6900
  %23 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %11, i64 0, i32 91, !dbg !8980
  store i32 %22, i32* %23, align 4, !dbg !8981, !tbaa !8982
  br label %24, !dbg !8983

; <label>:24:                                     ; preds = %8, %10
  %25 = and i32 %2, 4, !dbg !8984
  %26 = icmp eq i32 %25, 0, !dbg !8984
  br i1 %26, label %27, label %32, !dbg !8986

; <label>:27:                                     ; preds = %24
  %28 = load i64, i64* @p_tw, align 8, !dbg !8987, !tbaa !4248
  store i64 %28, i64* @p_tw_nobin, align 8, !dbg !8989, !tbaa !4248
  %29 = load i64, i64* @p_wm, align 8, !dbg !8990, !tbaa !4248
  store i64 %29, i64* @p_wm_nobin, align 8, !dbg !8991, !tbaa !4248
  %30 = load i32, i32* @p_ml, align 4, !dbg !8992, !tbaa !3060
  store i32 %30, i32* @p_ml_nobin, align 4, !dbg !8993, !tbaa !3060
  %31 = load i32, i32* @p_et, align 4, !dbg !8994, !tbaa !3060
  store i32 %31, i32* @p_et_nobin, align 4, !dbg !8995, !tbaa !3060
  br label %32, !dbg !8996

; <label>:32:                                     ; preds = %6, %24, %27
  %33 = icmp eq i32 %7, 0, !dbg !8997
  br i1 %33, label %34, label %40, !dbg !8999

; <label>:34:                                     ; preds = %32
  %35 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9000, !tbaa !3115
  %36 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %35, i64 0, i32 133, !dbg !9002
  store i64 0, i64* %36, align 8, !dbg !9003, !tbaa !6880
  %37 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %35, i64 0, i32 136, !dbg !9004
  store i64 0, i64* %37, align 8, !dbg !9005, !tbaa !6885
  %38 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %35, i64 0, i32 115, !dbg !9006
  store i32 0, i32* %38, align 8, !dbg !9007, !tbaa !8975
  %39 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %35, i64 0, i32 90, !dbg !9008
  store i32 0, i32* %39, align 8, !dbg !9009, !tbaa !6900
  br label %40, !dbg !9010

; <label>:40:                                     ; preds = %32, %34
  %41 = and i32 %2, 4, !dbg !9011
  %42 = icmp eq i32 %41, 0, !dbg !9011
  br i1 %42, label %43, label %70, !dbg !9013

; <label>:43:                                     ; preds = %40
  store i64 0, i64* @p_tw, align 8, !dbg !9014, !tbaa !4248
  store i64 0, i64* @p_wm, align 8, !dbg !9016, !tbaa !4248
  store i32 0, i32* @p_ml, align 4, !dbg !9017, !tbaa !3060
  store i32 0, i32* @p_et, align 4, !dbg !9018, !tbaa !3060
  store i32 1, i32* @p_bin, align 4, !dbg !9019, !tbaa !3060
  br label %70, !dbg !9020

; <label>:44:                                     ; preds = %3
  br i1 %5, label %45, label %70, !dbg !9021

; <label>:45:                                     ; preds = %44
  %46 = and i32 %2, 2, !dbg !9022
  %47 = icmp eq i32 %46, 0, !dbg !9022
  br i1 %47, label %48, label %62, !dbg !9026

; <label>:48:                                     ; preds = %45
  %49 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9027, !tbaa !3115
  %50 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 134, !dbg !9029
  %51 = load i64, i64* %50, align 8, !dbg !9029, !tbaa !8969
  %52 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 133, !dbg !9030
  store i64 %51, i64* %52, align 8, !dbg !9031, !tbaa !6880
  %53 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 137, !dbg !9032
  %54 = load i64, i64* %53, align 8, !dbg !9032, !tbaa !8973
  %55 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 136, !dbg !9033
  store i64 %54, i64* %55, align 8, !dbg !9034, !tbaa !6885
  %56 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 116, !dbg !9035
  %57 = load i32, i32* %56, align 4, !dbg !9035, !tbaa !8978
  %58 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 115, !dbg !9036
  store i32 %57, i32* %58, align 8, !dbg !9037, !tbaa !8975
  %59 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 91, !dbg !9038
  %60 = load i32, i32* %59, align 4, !dbg !9038, !tbaa !8982
  %61 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 90, !dbg !9039
  store i32 %60, i32* %61, align 8, !dbg !9040, !tbaa !6900
  br label %62, !dbg !9041

; <label>:62:                                     ; preds = %45, %48
  %63 = and i32 %2, 4, !dbg !9042
  %64 = icmp eq i32 %63, 0, !dbg !9042
  br i1 %64, label %65, label %70, !dbg !9044

; <label>:65:                                     ; preds = %62
  %66 = load i64, i64* @p_tw_nobin, align 8, !dbg !9045, !tbaa !4248
  store i64 %66, i64* @p_tw, align 8, !dbg !9047, !tbaa !4248
  %67 = load i64, i64* @p_wm_nobin, align 8, !dbg !9048, !tbaa !4248
  store i64 %67, i64* @p_wm, align 8, !dbg !9049, !tbaa !4248
  %68 = load i32, i32* @p_ml_nobin, align 4, !dbg !9050, !tbaa !3060
  store i32 %68, i32* @p_ml, align 4, !dbg !9051, !tbaa !3060
  %69 = load i32, i32* @p_et_nobin, align 4, !dbg !9052, !tbaa !3060
  store i32 %69, i32* @p_et, align 4, !dbg !9053, !tbaa !3060
  br label %70, !dbg !9054

; <label>:70:                                     ; preds = %40, %62, %44, %65, %43
  ret void, !dbg !9055
}

declare void @check_string_option(i8**) local_unnamed_addr #3

; Function Attrs: nounwind readonly uwtable
define i32 @get_term_opt_idx(i8** readnone) local_unnamed_addr #7 !dbg !9056 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32 1, metadata !9061, metadata !DIExpression()), !dbg !9063
  %2 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 1, i32 0), align 16, !dbg !9064, !tbaa !3453
  %3 = icmp eq i8* %2, null, !dbg !9067
  br i1 %3, label %18, label %4, !dbg !9068

; <label>:4:                                      ; preds = %1
  %5 = bitcast i8** %0 to i8*
  br label %6, !dbg !9068

; <label>:6:                                      ; preds = %4, %11
  %7 = phi i64 [ 1, %4 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i64 %7, metadata !9061, metadata !DIExpression()), !dbg !9063
  %8 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 3, !dbg !9069
  %9 = load i8*, i8** %8, align 8, !dbg !9069, !tbaa !3461
  %10 = icmp eq i8* %9, %5, !dbg !9071
  br i1 %10, label %16, label %11, !dbg !9072

; <label>:11:                                     ; preds = %6
  %12 = add nuw i64 %7, 1, !dbg !9073
  %13 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %12, i32 0, !dbg !9064
  %14 = load i8*, i8** %13, align 16, !dbg !9064, !tbaa !3453
  %15 = icmp eq i8* %14, null, !dbg !9067
  br i1 %15, label %18, label %6, !dbg !9068, !llvm.loop !9074

; <label>:16:                                     ; preds = %6
  %17 = trunc i64 %7 to i32, !dbg !9072
  br label %18, !dbg !9076

; <label>:18:                                     ; preds = %11, %16, %1
  %19 = phi i32 [ -1, %1 ], [ %17, %16 ], [ -1, %11 ]
  ret i32 %19, !dbg !9076
}

; Function Attrs: nounwind uwtable
define i32 @set_term_option_alloced(i8** readnone) local_unnamed_addr #0 !dbg !9077 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !9079, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.value(metadata i8** %0, metadata !9060, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i32 1, metadata !9061, metadata !DIExpression()), !dbg !9084
  %2 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 1, i32 0), align 16, !dbg !9085, !tbaa !3453
  %3 = icmp eq i8* %2, null, !dbg !9086
  br i1 %3, label %25, label %4, !dbg !9087

; <label>:4:                                      ; preds = %1
  %5 = bitcast i8** %0 to i8*
  br label %6, !dbg !9087

; <label>:6:                                      ; preds = %11, %4
  %7 = phi i64 [ 1, %4 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i64 %7, metadata !9061, metadata !DIExpression()), !dbg !9084
  %8 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 3, !dbg !9088
  %9 = load i8*, i8** %8, align 8, !dbg !9088, !tbaa !3461
  %10 = icmp eq i8* %9, %5, !dbg !9089
  br i1 %10, label %16, label %11, !dbg !9090

; <label>:11:                                     ; preds = %6
  %12 = add nuw i64 %7, 1, !dbg !9091
  %13 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %12, i32 0, !dbg !9085
  %14 = load i8*, i8** %13, align 16, !dbg !9085, !tbaa !3453
  %15 = icmp eq i8* %14, null, !dbg !9086
  br i1 %15, label %25, label %6, !dbg !9087, !llvm.loop !9074

; <label>:16:                                     ; preds = %6
  %17 = trunc i64 %7 to i32, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %17, metadata !9080, metadata !DIExpression()), !dbg !9092
  %18 = icmp sgt i32 %17, -1, !dbg !9093
  br i1 %18, label %19, label %25, !dbg !9095

; <label>:19:                                     ; preds = %16
  %20 = shl i64 %7, 32, !dbg !9096
  %21 = ashr exact i64 %20, 32, !dbg !9096
  %22 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %21, i32 2, !dbg !9097
  %23 = load i64, i64* %22, align 16, !dbg !9098, !tbaa !3107
  %24 = or i64 %23, 8, !dbg !9098
  store i64 %24, i64* %22, align 16, !dbg !9098, !tbaa !3107
  br label %25, !dbg !9096

; <label>:25:                                     ; preds = %11, %1, %19, %16
  %26 = phi i32 [ %17, %19 ], [ %17, %16 ], [ -1, %1 ], [ -1, %11 ]
  ret i32 %26, !dbg !9099
}

; Function Attrs: nounwind uwtable
define i32 @was_set_insecurely(i8* nocapture readonly, i32) local_unnamed_addr #0 !dbg !9100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 %1, metadata !9103, metadata !DIExpression()), !dbg !9107
  %3 = tail call i32 @findoption(i8* %0), !dbg !9108
  call void @llvm.dbg.value(metadata i32 %3, metadata !9104, metadata !DIExpression()), !dbg !9109
  %4 = icmp sgt i32 %3, -1, !dbg !9110
  br i1 %4, label %5, label %41, !dbg !9112

; <label>:5:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !4525, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !9116
  %6 = and i32 %1, 4, !dbg !9117
  %7 = icmp eq i32 %6, 0, !dbg !9117
  %8 = sext i32 %3 to i64
  br i1 %7, label %33, label %9, !dbg !9118

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %8, i32 4, !dbg !9119
  %11 = load i32, i32* %10, align 16, !dbg !9119, !tbaa !4220
  switch i32 %11, label %33 [
    i32 12327, label %12
    i32 8211, label %15
    i32 8212, label %18
    i32 20511, label %21
    i32 16423, label %24
    i32 16416, label %27
    i32 16425, label %30
  ], !dbg !9120

; <label>:12:                                     ; preds = %9
  %13 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9121, !tbaa !3115
  %14 = getelementptr inbounds %struct.window_S, %struct.window_S* %13, i64 0, i32 123, !dbg !9122
  br label %35, !dbg !9123

; <label>:15:                                     ; preds = %9
  %16 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9124, !tbaa !3115
  %17 = getelementptr inbounds %struct.window_S, %struct.window_S* %16, i64 0, i32 124, !dbg !9125
  br label %35, !dbg !9126

; <label>:18:                                     ; preds = %9
  %19 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9127, !tbaa !3115
  %20 = getelementptr inbounds %struct.window_S, %struct.window_S* %19, i64 0, i32 125, !dbg !9128
  br label %35, !dbg !9129

; <label>:21:                                     ; preds = %9
  %22 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9130, !tbaa !3115
  %23 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %22, i64 0, i32 210, !dbg !9131
  br label %35, !dbg !9132

; <label>:24:                                     ; preds = %9
  %25 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9133, !tbaa !3115
  %26 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %25, i64 0, i32 105, !dbg !9134
  br label %35, !dbg !9135

; <label>:27:                                     ; preds = %9
  %28 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9136, !tbaa !3115
  %29 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %28, i64 0, i32 109, !dbg !9137
  br label %35, !dbg !9138

; <label>:30:                                     ; preds = %9
  %31 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9139, !tbaa !3115
  %32 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %31, i64 0, i32 103, !dbg !9140
  br label %35, !dbg !9141

; <label>:33:                                     ; preds = %9, %5
  %34 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %8, i32 2, !dbg !9142
  br label %35, !dbg !9143

; <label>:35:                                     ; preds = %12, %15, %18, %21, %24, %27, %30, %33
  %36 = phi i64* [ %34, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i64* %36, metadata !9105, metadata !DIExpression()), !dbg !9144
  %37 = load i64, i64* %36, align 8, !dbg !9145, !tbaa !4248
  %38 = lshr i64 %37, 23, !dbg !9146
  %39 = trunc i64 %38 to i32, !dbg !9146
  %40 = and i32 %39, 1, !dbg !9146
  br label %42, !dbg !9147

; <label>:41:                                     ; preds = %2
  tail call void @internal_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !9148
  br label %42, !dbg !9149

; <label>:42:                                     ; preds = %41, %35
  %43 = phi i32 [ %40, %35 ], [ -1, %41 ]
  ret i32 %43, !dbg !9150
}

declare void @internal_error(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind uwtable
define void @redraw_titles() local_unnamed_addr #9 !dbg !6743 {
  store i32 1, i32* @need_maketitle, align 4, !dbg !9151, !tbaa !3060
  store i32 1, i32* @redraw_tabline, align 4, !dbg !9152, !tbaa !3060
  ret void, !dbg !9153
}

; Function Attrs: nounwind uwtable
define i32 @valid_name(i8* nocapture readonly, i8*) local_unnamed_addr #0 !dbg !9154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9158, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i8* %1, metadata !9159, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i8* %0, metadata !9160, metadata !DIExpression()), !dbg !9163
  %3 = load i8, i8* %0, align 1, !dbg !9164, !tbaa !3150
  %4 = icmp eq i8 %3, 0, !dbg !9167
  br i1 %4, label %23, label %5, !dbg !9168

; <label>:5:                                      ; preds = %2
  br label %6, !dbg !9164

; <label>:6:                                      ; preds = %5, %19
  %7 = phi i8 [ %21, %19 ], [ %3, %5 ]
  %8 = phi i8* [ %20, %19 ], [ %0, %5 ]
  %9 = zext i8 %7 to i32, !dbg !9164
  call void @llvm.dbg.value(metadata i8* %8, metadata !9160, metadata !DIExpression()), !dbg !9163
  %10 = and i32 %9, 223, !dbg !9169
  %11 = add nsw i32 %10, -65, !dbg !9169
  %12 = icmp ult i32 %11, 26, !dbg !9169
  %13 = add nsw i32 %9, -48, !dbg !9169
  %14 = icmp ult i32 %13, 10, !dbg !9169
  %15 = or i1 %14, %12, !dbg !9169
  br i1 %15, label %19, label %16, !dbg !9169

; <label>:16:                                     ; preds = %6
  %17 = tail call i8* @vim_strchr(i8* %1, i32 %9) #11, !dbg !9171
  %18 = icmp eq i8* %17, null, !dbg !9172
  br i1 %18, label %23, label %19, !dbg !9173

; <label>:19:                                     ; preds = %6, %16
  %20 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !9174
  call void @llvm.dbg.value(metadata i8* %20, metadata !9160, metadata !DIExpression()), !dbg !9163
  %21 = load i8, i8* %20, align 1, !dbg !9164, !tbaa !3150
  %22 = icmp eq i8 %21, 0, !dbg !9167
  br i1 %22, label %23, label %6, !dbg !9168, !llvm.loop !9175

; <label>:23:                                     ; preds = %16, %19, %2
  %24 = phi i32 [ 1, %2 ], [ 1, %19 ], [ 0, %16 ]
  ret i32 %24, !dbg !9177
}

; Function Attrs: nounwind uwtable
define void @set_option_sctx_idx(i32, i32, %struct.sctx_T* byval nocapture readonly align 8) local_unnamed_addr #0 !dbg !4567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4571, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata i32 %1, metadata !4572, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.declare(metadata %struct.sctx_T* %2, metadata !4573, metadata !DIExpression()), !dbg !9180
  %4 = and i32 %1, 6, !dbg !9181
  %5 = icmp ne i32 %4, 0, !dbg !9182
  %6 = sext i32 %0 to i64, !dbg !9183
  %7 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 4, !dbg !9184
  %8 = load i32, i32* %7, align 16, !dbg !9184, !tbaa !4220
  call void @llvm.dbg.value(metadata i32 %8, metadata !4575, metadata !DIExpression()), !dbg !9185
  %9 = bitcast %struct.sctx_T* %2 to i64*, !dbg !9186
  %10 = load i64, i64* %9, align 8, !dbg !9186
  %11 = getelementptr inbounds %struct.sctx_T, %struct.sctx_T* %2, i64 0, i32 2, !dbg !9186
  %12 = load i64, i64* %11, align 8, !dbg !9186
  call void @llvm.dbg.value(metadata i64 %12, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9187
  %13 = getelementptr inbounds %struct.sctx_T, %struct.sctx_T* %2, i64 0, i32 3, !dbg !9186
  %14 = bitcast i32* %13 to i64*, !dbg !9186
  %15 = load i64, i64* %14, align 8, !dbg !9186
  call void @llvm.dbg.value(metadata i64 %15, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !9187
  %16 = and i32 %1, 8, !dbg !9188
  %17 = icmp eq i32 %16, 0, !dbg !9188
  br i1 %17, label %18, label %26, !dbg !9189

; <label>:18:                                     ; preds = %3
  %19 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !9190, !tbaa !3217
  %20 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !9190, !tbaa !3229
  %21 = add nsw i32 %20, -1, !dbg !9190
  %22 = sext i32 %21 to i64, !dbg !9190
  %23 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %19, i64 %22, i32 0, !dbg !9190
  %24 = load i64, i64* %23, align 8, !dbg !9190, !tbaa !4588
  %25 = add nsw i64 %24, %12, !dbg !9191
  call void @llvm.dbg.value(metadata i64 %25, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9187
  br label %26, !dbg !9192

; <label>:26:                                     ; preds = %3, %18
  %27 = phi i64 [ %12, %3 ], [ %25, %18 ]
  call void @llvm.dbg.value(metadata i64 %27, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9187
  %28 = and i32 %1, 2, !dbg !9193
  %29 = icmp eq i32 %28, 0, !dbg !9193
  %30 = and i1 %5, %29, !dbg !9194
  %31 = xor i1 %30, true, !dbg !9194
  %32 = and i32 %8, 24576, !dbg !9195
  %33 = icmp eq i32 %32, 0, !dbg !9196
  %34 = or i1 %33, %31, !dbg !9194
  br i1 %34, label %35, label %41, !dbg !9194

; <label>:35:                                     ; preds = %26
  %36 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, !dbg !9197
  %37 = bitcast %struct.sctx_T* %36 to i64*, !dbg !9197
  store i64 %10, i64* %37, align 8, !dbg !9197
  %38 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, i32 2, !dbg !9197
  store i64 %27, i64* %38, align 8, !dbg !9197
  %39 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 6, i32 3, !dbg !9197
  %40 = bitcast i32* %39 to i64*, !dbg !9197
  store i64 %15, i64* %40, align 8, !dbg !9197
  br label %41, !dbg !9198

; <label>:41:                                     ; preds = %26, %35
  %42 = and i32 %1, 4, !dbg !9199
  %43 = icmp eq i32 %42, 0, !dbg !9199
  %44 = and i1 %5, %43, !dbg !9200
  br i1 %44, label %69, label %45, !dbg !9200

; <label>:45:                                     ; preds = %41
  %46 = and i32 %8, 16384, !dbg !9201
  %47 = icmp eq i32 %46, 0, !dbg !9201
  br i1 %47, label %57, label %48, !dbg !9202

; <label>:48:                                     ; preds = %45
  %49 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9203, !tbaa !3115
  %50 = and i32 %8, 4095, !dbg !9204
  %51 = zext i32 %50 to i64, !dbg !9203
  %52 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 66, i64 %51, !dbg !9203
  %53 = bitcast %struct.sctx_T* %52 to i64*, !dbg !9205
  store i64 %10, i64* %53, align 8, !dbg !9205
  %54 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 66, i64 %51, i32 2, !dbg !9205
  store i64 %27, i64* %54, align 8, !dbg !9205
  %55 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %49, i64 0, i32 66, i64 %51, i32 3, !dbg !9205
  %56 = bitcast i32* %55 to i64*, !dbg !9205
  store i64 %15, i64* %56, align 8, !dbg !9205
  br label %69, !dbg !9203

; <label>:57:                                     ; preds = %45
  %58 = and i32 %8, 8192, !dbg !9206
  %59 = icmp eq i32 %58, 0, !dbg !9206
  br i1 %59, label %69, label %60, !dbg !9207

; <label>:60:                                     ; preds = %57
  %61 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9208, !tbaa !3115
  %62 = and i32 %8, 4095, !dbg !9209
  %63 = zext i32 %62 to i64, !dbg !9208
  %64 = getelementptr inbounds %struct.window_S, %struct.window_S* %61, i64 0, i32 121, i32 50, i64 %63, !dbg !9208
  %65 = bitcast %struct.sctx_T* %64 to i64*, !dbg !9210
  store i64 %10, i64* %65, align 8, !dbg !9210
  %66 = getelementptr inbounds %struct.window_S, %struct.window_S* %61, i64 0, i32 121, i32 50, i64 %63, i32 2, !dbg !9210
  store i64 %27, i64* %66, align 8, !dbg !9210
  %67 = getelementptr inbounds %struct.window_S, %struct.window_S* %61, i64 0, i32 121, i32 50, i64 %63, i32 3, !dbg !9210
  %68 = bitcast i32* %67 to i64*, !dbg !9210
  store i64 %15, i64* %68, align 8, !dbg !9210
  br label %69, !dbg !9208

; <label>:69:                                     ; preds = %41, %57, %48, %60
  ret void, !dbg !9211
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define void @set_term_option_sctx_idx(i8* readonly, i32) local_unnamed_addr #0 !dbg !9212 {
  %3 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9216, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata i32 %1, metadata !9217, metadata !DIExpression()), !dbg !9221
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0, !dbg !9222
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %4) #11, !dbg !9222
  call void @llvm.dbg.declare(metadata [5 x i8]* %3, metadata !9218, metadata !DIExpression()), !dbg !9223
  %5 = icmp eq i8* %0, null, !dbg !9224
  br i1 %5, label %15, label %6, !dbg !9226

; <label>:6:                                      ; preds = %2
  store i8 116, i8* %4, align 1, !dbg !9227, !tbaa !3150
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1, !dbg !9229
  store i8 95, i8* %7, align 1, !dbg !9230, !tbaa !3150
  %8 = load i8, i8* %0, align 1, !dbg !9231, !tbaa !3150
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2, !dbg !9232
  store i8 %8, i8* %9, align 1, !dbg !9233, !tbaa !3150
  %10 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !9234
  %11 = load i8, i8* %10, align 1, !dbg !9234, !tbaa !3150
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3, !dbg !9235
  store i8 %11, i8* %12, align 1, !dbg !9236, !tbaa !3150
  %13 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4, !dbg !9237
  store i8 0, i8* %13, align 1, !dbg !9238, !tbaa !3150
  %14 = call i32 @findoption(i8* nonnull %4), !dbg !9239
  call void @llvm.dbg.value(metadata i32 %14, metadata !9219, metadata !DIExpression()), !dbg !9240
  br label %15

; <label>:15:                                     ; preds = %2, %6
  %16 = phi i32 [ %14, %6 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9219, metadata !DIExpression()), !dbg !9240
  %17 = icmp sgt i32 %16, -1, !dbg !9241
  br i1 %17, label %18, label %35, !dbg !9243

; <label>:18:                                     ; preds = %15
  %19 = load i64, i64* bitcast (%struct.sctx_T* @current_sctx to i64*), align 8, !dbg !9244
  call void @llvm.dbg.value(metadata i64 %19, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !9246
  %20 = load i64, i64* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 2), align 8, !dbg !9244
  call void @llvm.dbg.value(metadata i64 %20, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9246
  %21 = load i64, i64* bitcast (i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 3) to i64*), align 8, !dbg !9244
  call void @llvm.dbg.value(metadata i64 %21, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !9246
  call void @llvm.dbg.value(metadata i32 %16, metadata !4571, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 2, metadata !4572, metadata !DIExpression()), !dbg !9247
  %22 = sext i32 %16 to i64, !dbg !9248
  call void @llvm.dbg.value(metadata i64 %20, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9249
  call void @llvm.dbg.value(metadata i64 %21, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !9249
  %23 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !9250, !tbaa !3217
  %24 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !9250, !tbaa !3229
  %25 = add nsw i32 %24, -1, !dbg !9250
  %26 = sext i32 %25 to i64, !dbg !9250
  %27 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %23, i64 %26, i32 0, !dbg !9250
  %28 = load i64, i64* %27, align 8, !dbg !9250, !tbaa !4588
  %29 = add nsw i64 %28, %20, !dbg !9251
  call void @llvm.dbg.value(metadata i64 %29, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9249
  call void @llvm.dbg.value(metadata i64 %29, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !9249
  %30 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %22, i32 6, !dbg !9252
  %31 = bitcast %struct.sctx_T* %30 to i64*, !dbg !9252
  store i64 %19, i64* %31, align 8, !dbg !9252
  %32 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %22, i32 6, i32 2, !dbg !9252
  store i64 %29, i64* %32, align 8, !dbg !9252
  %33 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %22, i32 6, i32 3, !dbg !9252
  %34 = bitcast i32* %33 to i64*, !dbg !9252
  store i64 %21, i64* %34, align 8, !dbg !9252
  br label %35, !dbg !9253

; <label>:35:                                     ; preds = %18, %15
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %4) #11, !dbg !9254
  ret void, !dbg !9254
}

; Function Attrs: nounwind uwtable
define void @check_redraw(i64) local_unnamed_addr #0 !dbg !9255 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !9259, metadata !DIExpression()), !dbg !9262
  %2 = and i64 %0, 28672, !dbg !9263
  %3 = icmp eq i64 %2, 28672, !dbg !9264
  %4 = and i64 %0, 24576, !dbg !9265
  %5 = icmp eq i64 %4, 24576, !dbg !9266
  %6 = and i64 %0, 4096, !dbg !9267
  %7 = icmp ne i64 %6, 0, !dbg !9267
  %8 = or i1 %7, %5, !dbg !9269
  br i1 %8, label %9, label %10, !dbg !9269

; <label>:9:                                      ; preds = %1
  tail call void @status_redraw_all() #11, !dbg !9270
  br label %10, !dbg !9270

; <label>:10:                                     ; preds = %1, %9
  %11 = and i64 %0, 16384, !dbg !9271
  %12 = icmp ne i64 %11, 0, !dbg !9271
  %13 = xor i1 %12, true, !dbg !9273
  %14 = and i64 %0, 8192, !dbg !9274
  %15 = icmp eq i64 %14, 0, !dbg !9274
  %16 = and i1 %15, %13, !dbg !9273
  br i1 %16, label %18, label %17, !dbg !9273

; <label>:17:                                     ; preds = %10
  tail call void @changed_window_setting() #11, !dbg !9275
  br label %18, !dbg !9275

; <label>:18:                                     ; preds = %10, %17
  br i1 %12, label %19, label %20, !dbg !9276

; <label>:19:                                     ; preds = %18
  tail call void @redraw_curbuf_later(i32 40) #11, !dbg !9277
  br label %20, !dbg !9277

; <label>:20:                                     ; preds = %19, %18
  %21 = and i64 %0, 268435456, !dbg !9279
  %22 = icmp eq i64 %21, 0, !dbg !9279
  br i1 %22, label %24, label %23, !dbg !9281

; <label>:23:                                     ; preds = %20
  tail call void @redraw_later(i32 40) #11, !dbg !9282
  br label %24, !dbg !9282

; <label>:24:                                     ; preds = %20, %23
  br i1 %3, label %25, label %26, !dbg !9283

; <label>:25:                                     ; preds = %24
  tail call void @redraw_all_later(i32 50) #11, !dbg !9284
  br label %28, !dbg !9284

; <label>:26:                                     ; preds = %24
  br i1 %5, label %27, label %28, !dbg !9286

; <label>:27:                                     ; preds = %26
  tail call void @redraw_all_later(i32 40) #11, !dbg !9287
  br label %28, !dbg !9287

; <label>:28:                                     ; preds = %26, %27, %25
  ret void, !dbg !9289
}

declare void @status_redraw_all() local_unnamed_addr #3

declare void @changed_window_setting() local_unnamed_addr #3

declare void @redraw_curbuf_later(i32) local_unnamed_addr #3

declare void @redraw_later(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @get_option_value(i8*, i64* nocapture, i8**, i32) local_unnamed_addr #0 !dbg !9290 {
  %5 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9295, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i64* %1, metadata !9296, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.value(metadata i8** %2, metadata !9297, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i32 %3, metadata !9298, metadata !DIExpression()), !dbg !9311
  %6 = tail call i32 @findoption(i8* %0), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %6, metadata !9299, metadata !DIExpression()), !dbg !9313
  %7 = icmp slt i32 %6, 0, !dbg !9314
  br i1 %7, label %8, label %43, !dbg !9315

; <label>:8:                                      ; preds = %4
  %9 = tail call i64 @strlen(i8* %0) #12, !dbg !9316
  %10 = icmp eq i64 %9, 4, !dbg !9317
  br i1 %10, label %11, label %97, !dbg !9318

; <label>:11:                                     ; preds = %8
  %12 = load i8, i8* %0, align 1, !dbg !9319, !tbaa !3150
  %13 = icmp eq i8 %12, 116, !dbg !9320
  br i1 %13, label %14, label %97, !dbg !9321

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !9322
  %16 = load i8, i8* %15, align 1, !dbg !9322, !tbaa !3150
  %17 = icmp eq i8 %16, 95, !dbg !9323
  br i1 %17, label %18, label %97, !dbg !9324

; <label>:18:                                     ; preds = %14
  call void @llvm.dbg.value(metadata i8* %0, metadata !3910, metadata !DIExpression()) #11, !dbg !9325
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()) #11, !dbg !9327
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()) #11, !dbg !9328
  call void @llvm.dbg.value(metadata i8* %0, metadata !3918, metadata !DIExpression()) #11, !dbg !9329
  %19 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !9330
  %20 = load i8, i8* %19, align 1, !dbg !9330, !tbaa !3150
  %21 = zext i8 %20 to i32, !dbg !9330
  %22 = icmp eq i8 %20, 0, !dbg !9330
  br i1 %22, label %97, label %23, !dbg !9331

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !9332
  %25 = load i8, i8* %24, align 1, !dbg !9332, !tbaa !3150
  %26 = icmp eq i8 %25, 0, !dbg !9332
  br i1 %26, label %97, label %27, !dbg !9333

; <label>:27:                                     ; preds = %23
  %28 = zext i8 %25 to i32, !dbg !9332
  %29 = shl nuw nsw i32 %28, 8, !dbg !9334
  %30 = or i32 %29, %21, !dbg !9334
  %31 = icmp eq i32 %30, 0, !dbg !9335
  br i1 %31, label %97, label %32, !dbg !9336

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0, !dbg !9337
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #11, !dbg !9337
  call void @llvm.dbg.declare(metadata [2 x i8]* %5, metadata !9304, metadata !DIExpression()), !dbg !9338
  store i8 %20, i8* %33, align 1, !dbg !9339, !tbaa !3150
  %34 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1, !dbg !9342
  store i8 %25, i8* %34, align 1, !dbg !9343, !tbaa !3150
  %35 = call i8* @find_termcode(i8* nonnull %33) #11, !dbg !9344
  call void @llvm.dbg.value(metadata i8* %35, metadata !9307, metadata !DIExpression()), !dbg !9345
  %36 = icmp eq i8* %35, null, !dbg !9346
  br i1 %36, label %41, label %37, !dbg !9348

; <label>:37:                                     ; preds = %32
  %38 = icmp eq i8** %2, null, !dbg !9349
  br i1 %38, label %42, label %39, !dbg !9352

; <label>:39:                                     ; preds = %37
  %40 = call i8* @vim_strsave(i8* nonnull %35) #11, !dbg !9353
  store i8* %40, i8** %2, align 8, !dbg !9354, !tbaa !3115
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11, !dbg !9355
  br label %97

; <label>:41:                                     ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11, !dbg !9355
  br label %97

; <label>:42:                                     ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11, !dbg !9355
  br label %97

; <label>:43:                                     ; preds = %4
  %44 = sext i32 %6 to i64, !dbg !9356
  %45 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %44, !dbg !9356
  %46 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %45, i32 %3), !dbg !9357
  call void @llvm.dbg.value(metadata i8* %46, metadata !9300, metadata !DIExpression()), !dbg !9358
  %47 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %44, i32 2, !dbg !9359
  %48 = load i64, i64* %47, align 16, !dbg !9359, !tbaa !3107
  %49 = and i64 %48, 4, !dbg !9361
  %50 = icmp eq i64 %49, 0, !dbg !9361
  %51 = icmp eq i8* %46, null
  br i1 %50, label %68, label %52, !dbg !9362

; <label>:52:                                     ; preds = %43
  br i1 %51, label %97, label %53, !dbg !9363

; <label>:53:                                     ; preds = %52
  %54 = icmp eq i8** %2, null, !dbg !9365
  br i1 %54, label %97, label %55, !dbg !9367

; <label>:55:                                     ; preds = %53
  %56 = bitcast i8* %46 to i8**, !dbg !9368
  %57 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9371, !tbaa !3115
  %58 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %57, i64 0, i32 110, !dbg !9372
  %59 = icmp eq i8** %58, %56, !dbg !9373
  %60 = load i8*, i8** %56, align 8, !tbaa !3115
  br i1 %59, label %61, label %66, !dbg !9374

; <label>:61:                                     ; preds = %55
  %62 = load i8, i8* %60, align 1, !dbg !9375, !tbaa !3150
  %63 = icmp eq i8 %62, 0, !dbg !9376
  br i1 %63, label %66, label %64, !dbg !9377

; <label>:64:                                     ; preds = %61
  %65 = tail call i8* @vim_strsave(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0)) #11, !dbg !9378
  store i8* %65, i8** %2, align 8, !dbg !9379, !tbaa !3115
  br label %97, !dbg !9380

; <label>:66:                                     ; preds = %55, %61
  %67 = tail call i8* @vim_strsave(i8* %60) #11, !dbg !9381
  store i8* %67, i8** %2, align 8, !dbg !9382, !tbaa !3115
  br label %97

; <label>:68:                                     ; preds = %43
  %69 = and i64 %48, 2
  br i1 %51, label %70, label %74, !dbg !9383

; <label>:70:                                     ; preds = %68
  %71 = lshr exact i64 %69, 1, !dbg !9384
  %72 = trunc i64 %71 to i32, !dbg !9384
  %73 = or i32 %72, 4, !dbg !9384
  br label %97, !dbg !9386

; <label>:74:                                     ; preds = %68
  %75 = icmp eq i64 %69, 0
  br i1 %75, label %79, label %76, !dbg !9387

; <label>:76:                                     ; preds = %74
  %77 = bitcast i8* %46 to i64*, !dbg !9388
  %78 = load i64, i64* %77, align 8, !dbg !9388, !tbaa !4248
  br label %90, !dbg !9390

; <label>:79:                                     ; preds = %74
  %80 = bitcast i8* %46 to i32*, !dbg !9391
  %81 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !9394, !tbaa !3115
  %82 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %81, i64 0, i32 15, !dbg !9395
  %83 = icmp eq i32* %82, %80, !dbg !9396
  br i1 %83, label %84, label %87, !dbg !9397

; <label>:84:                                     ; preds = %79
  %85 = tail call i32 @curbufIsChanged() #11, !dbg !9398
  %86 = sext i32 %85 to i64, !dbg !9398
  br label %90, !dbg !9399

; <label>:87:                                     ; preds = %79
  %88 = load i32, i32* %80, align 4, !dbg !9400, !tbaa !3060
  %89 = sext i32 %88 to i64, !dbg !9401
  br label %90

; <label>:90:                                     ; preds = %84, %87, %76
  %91 = phi i64 [ %86, %84 ], [ %89, %87 ], [ %78, %76 ]
  store i64 %91, i64* %1, align 8, !tbaa !4248
  %92 = load i64, i64* %47, align 16, !dbg !9402, !tbaa !3107
  %93 = lshr i64 %92, 1, !dbg !9403
  %94 = trunc i64 %93 to i32, !dbg !9403
  %95 = and i32 %94, 1, !dbg !9403
  %96 = add nuw nsw i32 %95, 1, !dbg !9403
  br label %97, !dbg !9404

; <label>:97:                                     ; preds = %18, %23, %66, %64, %53, %52, %42, %39, %41, %27, %14, %11, %8, %90, %70
  %98 = phi i32 [ %73, %70 ], [ %96, %90 ], [ 3, %42 ], [ 3, %39 ], [ 0, %41 ], [ 0, %27 ], [ 0, %14 ], [ 0, %11 ], [ 0, %8 ], [ 6, %52 ], [ 3, %53 ], [ 3, %64 ], [ 3, %66 ], [ 0, %23 ], [ 0, %18 ]
  ret i32 %98, !dbg !9405
}

declare i32 @curbufIsChanged() local_unnamed_addr #3

; Function Attrs: nounwind readonly uwtable
define i64 @get_option_flags(i32) local_unnamed_addr #7 !dbg !9406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = sext i32 %0 to i64, !dbg !9412
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 2, !dbg !9413
  %4 = load i64, i64* %3, align 16, !dbg !9413, !tbaa !3107
  ret i64 %4, !dbg !9414
}

; Function Attrs: nounwind uwtable
define void @set_option_flag(i32, i64) local_unnamed_addr #0 !dbg !9415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9419, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i64 %1, metadata !9420, metadata !DIExpression()), !dbg !9422
  %3 = sext i32 %0 to i64, !dbg !9423
  %4 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %3, i32 2, !dbg !9424
  %5 = load i64, i64* %4, align 16, !dbg !9425, !tbaa !3107
  %6 = or i64 %5, %1, !dbg !9425
  store i64 %6, i64* %4, align 16, !dbg !9425, !tbaa !3107
  ret void, !dbg !9426
}

; Function Attrs: nounwind uwtable
define void @clear_option_flag(i32, i64) local_unnamed_addr #0 !dbg !9427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9429, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i64 %1, metadata !9430, metadata !DIExpression()), !dbg !9432
  %3 = xor i64 %1, -1, !dbg !9433
  %4 = sext i32 %0 to i64, !dbg !9434
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 2, !dbg !9435
  %6 = load i64, i64* %5, align 16, !dbg !9436, !tbaa !3107
  %7 = and i64 %6, %3, !dbg !9436
  store i64 %7, i64* %5, align 16, !dbg !9436, !tbaa !3107
  ret void, !dbg !9437
}

; Function Attrs: nounwind readonly uwtable
define i32 @is_global_option(i32) local_unnamed_addr #7 !dbg !9438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9440, metadata !DIExpression()), !dbg !9441
  %2 = sext i32 %0 to i64, !dbg !9442
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 4, !dbg !9443
  %4 = load i32, i32* %3, align 16, !dbg !9443, !tbaa !4220
  %5 = icmp eq i32 %4, 0, !dbg !9444
  %6 = zext i1 %5 to i32, !dbg !9444
  ret i32 %6, !dbg !9445
}

; Function Attrs: nounwind readonly uwtable
define i32 @is_global_local_option(i32) local_unnamed_addr #7 !dbg !9446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9448, metadata !DIExpression()), !dbg !9449
  %2 = sext i32 %0 to i64, !dbg !9450
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 4, !dbg !9451
  %4 = load i32, i32* %3, align 16, !dbg !9451, !tbaa !4220
  %5 = and i32 %4, 4096, !dbg !9452
  ret i32 %5, !dbg !9453
}

; Function Attrs: nounwind readonly uwtable
define i32 @is_window_local_option(i32) local_unnamed_addr #7 !dbg !9454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9456, metadata !DIExpression()), !dbg !9457
  %2 = sext i32 %0 to i64, !dbg !9458
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 3, !dbg !9459
  %4 = load i8*, i8** %3, align 8, !dbg !9459, !tbaa !3461
  %5 = icmp eq i8* %4, inttoptr (i64 -1 to i8*), !dbg !9460
  %6 = zext i1 %5 to i32, !dbg !9460
  ret i32 %6, !dbg !9461
}

; Function Attrs: nounwind readonly uwtable
define i32 @is_hidden_option(i32) local_unnamed_addr #7 !dbg !9462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9464, metadata !DIExpression()), !dbg !9465
  %2 = sext i32 %0 to i64, !dbg !9466
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 3, !dbg !9467
  %4 = load i8*, i8** %3, align 8, !dbg !9467, !tbaa !3461
  %5 = icmp eq i8* %4, null, !dbg !9468
  %6 = zext i1 %5 to i32, !dbg !9468
  ret i32 %6, !dbg !9469
}

; Function Attrs: nounwind readonly uwtable
define i32 @is_crypt_key_option(i32) local_unnamed_addr #7 !dbg !9470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9472, metadata !DIExpression()), !dbg !9473
  %2 = sext i32 %0 to i64, !dbg !9474
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 4, !dbg !9475
  %4 = load i32, i32* %3, align 16, !dbg !9475, !tbaa !4220
  %5 = icmp eq i32 %4, 16428, !dbg !9476
  %6 = zext i1 %5 to i32, !dbg !9476
  ret i32 %6, !dbg !9477
}

declare i32 @semsg(i8*, ...) local_unnamed_addr #3

declare i8* @set_string_option(i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i8* @get_term_code(i8*) local_unnamed_addr #0 !dbg !9478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9482, metadata !DIExpression()), !dbg !9485
  %2 = load i8, i8* %0, align 1, !dbg !9486, !tbaa !3150
  %3 = icmp eq i8 %2, 116, !dbg !9488
  br i1 %3, label %4, label %29, !dbg !9489

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !9490
  %6 = load i8, i8* %5, align 1, !dbg !9490, !tbaa !3150
  %7 = icmp eq i8 %6, 95, !dbg !9491
  br i1 %7, label %8, label %29, !dbg !9492

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !9493
  %10 = load i8, i8* %9, align 1, !dbg !9493, !tbaa !3150
  %11 = icmp eq i8 %10, 0, !dbg !9494
  br i1 %11, label %29, label %12, !dbg !9495

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !9496
  %14 = load i8, i8* %13, align 1, !dbg !9496, !tbaa !3150
  %15 = icmp eq i8 %14, 0, !dbg !9497
  br i1 %15, label %29, label %16, !dbg !9498

; <label>:16:                                     ; preds = %12
  %17 = tail call i32 @findoption(i8* nonnull %0), !dbg !9499
  call void @llvm.dbg.value(metadata i32 %17, metadata !9483, metadata !DIExpression()), !dbg !9501
  %18 = icmp sgt i32 %17, -1, !dbg !9502
  br i1 %18, label %19, label %27, !dbg !9503

; <label>:19:                                     ; preds = %16
  %20 = sext i32 %17 to i64, !dbg !9504
  %21 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %20, !dbg !9504
  %22 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %21), !dbg !9506
  call void @llvm.dbg.value(metadata i8* %22, metadata !9484, metadata !DIExpression()), !dbg !9507
  %23 = icmp eq i8* %22, null, !dbg !9508
  br i1 %23, label %29, label %24, !dbg !9510

; <label>:24:                                     ; preds = %19
  %25 = bitcast i8* %22 to i8**, !dbg !9511
  %26 = load i8*, i8** %25, align 8, !dbg !9511, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %26, metadata !9484, metadata !DIExpression()), !dbg !9507
  br label %29, !dbg !9512

; <label>:27:                                     ; preds = %16
  %28 = tail call i8* @find_termcode(i8* nonnull %9) #11, !dbg !9513
  br label %29, !dbg !9514

; <label>:29:                                     ; preds = %24, %19, %8, %12, %1, %4, %27
  %30 = phi i8* [ %28, %27 ], [ null, %4 ], [ null, %1 ], [ null, %12 ], [ null, %8 ], [ %26, %24 ], [ null, %19 ]
  ret i8* %30, !dbg !9515
}

; Function Attrs: nounwind uwtable
define i8* @get_highlight_default() local_unnamed_addr #0 !dbg !9516 {
  %1 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84, i64 0, i64 0)), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %1, metadata !9520, metadata !DIExpression()), !dbg !9522
  %2 = icmp sgt i32 %1, -1, !dbg !9523
  br i1 %2, label %3, label %7, !dbg !9525

; <label>:3:                                      ; preds = %0
  %4 = sext i32 %1 to i64, !dbg !9526
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 5, i64 0, !dbg !9526
  %6 = load i8*, i8** %5, align 8, !dbg !9526, !tbaa !3115
  br label %7, !dbg !9527

; <label>:7:                                      ; preds = %0, %3
  %8 = phi i8* [ %6, %3 ], [ null, %0 ]
  ret i8* %8, !dbg !9528
}

; Function Attrs: nounwind uwtable
define i8* @get_encoding_default() local_unnamed_addr #0 !dbg !9529 {
  %1 = tail call i32 @findoption(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0)), !dbg !9532
  call void @llvm.dbg.value(metadata i32 %1, metadata !9531, metadata !DIExpression()), !dbg !9533
  %2 = icmp sgt i32 %1, -1, !dbg !9534
  br i1 %2, label %3, label %7, !dbg !9536

; <label>:3:                                      ; preds = %0
  %4 = sext i32 %1 to i64, !dbg !9537
  %5 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %4, i32 5, i64 0, !dbg !9537
  %6 = load i8*, i8** %5, align 8, !dbg !9537, !tbaa !3115
  br label %7, !dbg !9538

; <label>:7:                                      ; preds = %0, %3
  %8 = phi i8* [ %6, %3 ], [ null, %0 ]
  ret i8* %8, !dbg !9539
}

; Function Attrs: nounwind uwtable
define i32 @makeset(%struct._IO_FILE*, i32, i32) local_unnamed_addr #0 !dbg !9540 {
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9591, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 %1, metadata !9592, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i32 %2, metadata !9593, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i8* null, metadata !9597, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata i32 1, metadata !9600, metadata !DIExpression()), !dbg !9619
  %4 = and i32 %1, 2
  %5 = icmp ne i32 %4, 0
  %6 = and i32 %1, 256
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %1, 4
  %9 = icmp eq i32 %8, 0
  %10 = or i32 %4, %2
  %11 = icmp eq i32 %10, 0
  br label %12, !dbg !9620

; <label>:12:                                     ; preds = %220, %3
  %13 = phi i32 [ 1, %3 ], [ %221, %220 ]
  %14 = phi i8* [ null, %3 ], [ %18, %220 ]
  call void @llvm.dbg.value(metadata %struct.vimoption* getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), metadata !9594, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i8* %14, metadata !9597, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata i32 %13, metadata !9600, metadata !DIExpression()), !dbg !9619
  %15 = icmp eq i32 %13, 1
  br label %16, !dbg !9622

; <label>:16:                                     ; preds = %217, %12
  %17 = phi %struct.vimoption* [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %12 ], [ %219, %217 ]
  %18 = phi i8* [ %14, %12 ], [ %218, %217 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9597, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !9594, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !3489, metadata !DIExpression()), !dbg !9623
  %19 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 0, !dbg !9625
  %20 = load i8*, i8** %19, align 8, !dbg !9625, !tbaa !3453
  %21 = load i8, i8* %20, align 1, !dbg !9626, !tbaa !3150
  %22 = icmp eq i8 %21, 116, !dbg !9627
  br i1 %22, label %23, label %27, !dbg !9628

; <label>:23:                                     ; preds = %16
  %24 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !9629
  %25 = load i8, i8* %24, align 1, !dbg !9629, !tbaa !3150
  %26 = icmp eq i8 %25, 95, !dbg !9630
  br i1 %26, label %220, label %27, !dbg !9631

; <label>:27:                                     ; preds = %23, %16
  %28 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 2, !dbg !9632
  %29 = load i64, i64* %28, align 8, !dbg !9632, !tbaa !3107
  %30 = and i64 %29, 512, !dbg !9633
  %31 = icmp eq i64 %30, 0, !dbg !9633
  br i1 %31, label %32, label %217, !dbg !9634

; <label>:32:                                     ; preds = %27
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !3489, metadata !DIExpression()), !dbg !9635
  br i1 %22, label %33, label %37, !dbg !9637

; <label>:33:                                     ; preds = %32
  %34 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !9638
  %35 = load i8, i8* %34, align 1, !dbg !9638, !tbaa !3150
  %36 = icmp eq i8 %35, 95, !dbg !9639
  br i1 %36, label %217, label %37, !dbg !9640

; <label>:37:                                     ; preds = %33, %32
  %38 = and i64 %29, 16777216, !dbg !9641
  %39 = icmp ne i64 %38, 0, !dbg !9641
  %40 = xor i1 %15, %39, !dbg !9641
  br i1 %40, label %217, label %41, !dbg !9642

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 4, !dbg !9643
  %43 = load i32, i32* %42, align 8, !dbg !9643, !tbaa !4220
  %44 = or i32 %43, %4, !dbg !9645
  %45 = icmp eq i32 %44, 0, !dbg !9645
  br i1 %45, label %217, label %46, !dbg !9645

; <label>:46:                                     ; preds = %41
  br i1 %5, label %47, label %50, !dbg !9646

; <label>:47:                                     ; preds = %46
  %48 = and i64 %29, 2097152, !dbg !9648
  %49 = icmp eq i64 %48, 0, !dbg !9648
  br i1 %49, label %52, label %217, !dbg !9649

; <label>:50:                                     ; preds = %46
  %51 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %17, i32 %1), !dbg !9650
  call void @llvm.dbg.value(metadata i8* %51, metadata !9595, metadata !DIExpression()), !dbg !9651
  br label %92

; <label>:52:                                     ; preds = %47
  %53 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %17, i32 %1), !dbg !9650
  call void @llvm.dbg.value(metadata i8* %51, metadata !9595, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !4234, metadata !DIExpression()) #11, !dbg !9652
  call void @llvm.dbg.value(metadata i8* %51, metadata !4235, metadata !DIExpression()) #11, !dbg !9655
  call void @llvm.dbg.value(metadata i32 %56, metadata !4236, metadata !DIExpression()) #11, !dbg !9656
  %54 = icmp eq i8* %53, null, !dbg !9657
  br i1 %54, label %217, label %55, !dbg !9658

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* @p_cp, align 4, !dbg !9659, !tbaa !3060
  %57 = load i64, i64* %28, align 8, !dbg !9660, !tbaa !3107
  %58 = and i64 %57, 1024, !dbg !9661
  %59 = icmp eq i64 %58, 0, !dbg !9661
  %60 = icmp eq i32 %56, 0, !dbg !9662
  %61 = and i1 %60, %59, !dbg !9663
  %62 = and i64 %57, 2, !dbg !9664
  %63 = icmp eq i64 %62, 0, !dbg !9664
  br i1 %63, label %72, label %64, !dbg !9665

; <label>:64:                                     ; preds = %55
  %65 = bitcast i8* %53 to i64*, !dbg !9666
  %66 = load i64, i64* %65, align 8, !dbg !9666, !tbaa !4248
  %67 = zext i1 %61 to i64, !dbg !9667
  %68 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %67, !dbg !9667
  %69 = bitcast i8** %68 to i64*, !dbg !9667
  %70 = load i64, i64* %69, align 8, !dbg !9667, !tbaa !3115
  %71 = icmp eq i64 %66, %70, !dbg !9668
  br i1 %71, label %217, label %92, !dbg !9669

; <label>:72:                                     ; preds = %55
  %73 = and i64 %57, 1, !dbg !9670
  %74 = icmp eq i64 %73, 0, !dbg !9670
  br i1 %74, label %84, label %75, !dbg !9671

; <label>:75:                                     ; preds = %72
  %76 = bitcast i8* %53 to i32*, !dbg !9672
  %77 = load i32, i32* %76, align 4, !dbg !9672, !tbaa !3060
  %78 = zext i1 %61 to i64, !dbg !9673
  %79 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %78, !dbg !9673
  %80 = bitcast i8** %79 to i64*, !dbg !9673
  %81 = load i64, i64* %80, align 8, !dbg !9673, !tbaa !3115
  %82 = trunc i64 %81 to i32, !dbg !9674
  %83 = icmp eq i32 %77, %82, !dbg !9675
  br i1 %83, label %217, label %92, !dbg !9669

; <label>:84:                                     ; preds = %72
  %85 = bitcast i8* %53 to i8**, !dbg !9676
  %86 = load i8*, i8** %85, align 8, !dbg !9676, !tbaa !3115
  %87 = zext i1 %61 to i64, !dbg !9676
  %88 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %87, !dbg !9676
  %89 = load i8*, i8** %88, align 8, !dbg !9676, !tbaa !3115
  %90 = tail call i32 @strcmp(i8* %86, i8* %89) #12, !dbg !9676
  %91 = icmp eq i32 %90, 0, !dbg !9677
  br i1 %91, label %217, label %92, !dbg !9669

; <label>:92:                                     ; preds = %75, %64, %84, %50
  %93 = phi i8* [ %53, %84 ], [ %51, %50 ], [ %53, %64 ], [ %53, %75 ]
  br i1 %7, label %100, label %94, !dbg !9678

; <label>:94:                                     ; preds = %92
  %95 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 3, !dbg !9680
  %96 = load i8*, i8** %95, align 8, !dbg !9680, !tbaa !3461
  %97 = icmp eq i8* %96, bitcast (i8** @p_rtp to i8*), !dbg !9681
  %98 = icmp eq i8* %96, bitcast (i8** @p_pp to i8*), !dbg !9682
  %99 = or i1 %97, %98, !dbg !9683
  br i1 %99, label %217, label %100, !dbg !9683

; <label>:100:                                    ; preds = %94, %92
  call void @llvm.dbg.value(metadata i32 2, metadata !9599, metadata !DIExpression()), !dbg !9684
  %101 = load i32, i32* %42, align 8, !dbg !9685, !tbaa !4220
  %102 = icmp eq i32 %101, 0, !dbg !9687
  br i1 %102, label %153, label %103, !dbg !9688

; <label>:103:                                    ; preds = %100
  %104 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 3, !dbg !9689
  %105 = load i8*, i8** %104, align 8, !dbg !9689, !tbaa !3461
  %106 = icmp eq i8* %105, inttoptr (i64 -1 to i8*), !dbg !9692
  br i1 %106, label %107, label %153, !dbg !9693

; <label>:107:                                    ; preds = %103
  br i1 %9, label %217, label %108, !dbg !9694

; <label>:108:                                    ; preds = %107
  br i1 %11, label %109, label %153, !dbg !9696

; <label>:109:                                    ; preds = %108
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !4275, metadata !DIExpression()) #11, !dbg !9698
  call void @llvm.dbg.value(metadata i32 2, metadata !4276, metadata !DIExpression()) #11, !dbg !9701
  %110 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %17) #11, !dbg !9702
  %111 = getelementptr inbounds i8, i8* %110, i64 1376, !dbg !9702
  call void @llvm.dbg.value(metadata i8* %111, metadata !9596, metadata !DIExpression()), !dbg !9703
  %112 = load i32, i32* @p_cp, align 4, !dbg !9704, !tbaa !3060
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !4234, metadata !DIExpression()) #11, !dbg !9706
  call void @llvm.dbg.value(metadata i8* %111, metadata !4235, metadata !DIExpression()) #11, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %112, metadata !4236, metadata !DIExpression()) #11, !dbg !9709
  %113 = load i64, i64* %28, align 8, !dbg !9710, !tbaa !3107
  %114 = and i64 %113, 1024, !dbg !9711
  %115 = icmp eq i64 %114, 0, !dbg !9711
  %116 = icmp eq i32 %112, 0, !dbg !9712
  %117 = and i1 %116, %115, !dbg !9713
  %118 = and i64 %113, 2, !dbg !9714
  %119 = icmp eq i64 %118, 0, !dbg !9714
  br i1 %119, label %128, label %120, !dbg !9715

; <label>:120:                                    ; preds = %109
  %121 = bitcast i8* %111 to i64*, !dbg !9716
  %122 = load i64, i64* %121, align 8, !dbg !9716, !tbaa !4248
  %123 = zext i1 %117 to i64, !dbg !9717
  %124 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %123, !dbg !9717
  %125 = bitcast i8** %124 to i64*, !dbg !9717
  %126 = load i64, i64* %125, align 8, !dbg !9717, !tbaa !3115
  %127 = icmp eq i64 %122, %126, !dbg !9718
  br label %148, !dbg !9719

; <label>:128:                                    ; preds = %109
  %129 = and i64 %113, 1, !dbg !9720
  %130 = icmp eq i64 %129, 0, !dbg !9720
  br i1 %130, label %140, label %131, !dbg !9721

; <label>:131:                                    ; preds = %128
  %132 = bitcast i8* %111 to i32*, !dbg !9722
  %133 = load i32, i32* %132, align 4, !dbg !9722, !tbaa !3060
  %134 = zext i1 %117 to i64, !dbg !9723
  %135 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %134, !dbg !9723
  %136 = bitcast i8** %135 to i64*, !dbg !9723
  %137 = load i64, i64* %136, align 8, !dbg !9723, !tbaa !3115
  %138 = trunc i64 %137 to i32, !dbg !9724
  %139 = icmp eq i32 %133, %138, !dbg !9725
  br label %148, !dbg !9726

; <label>:140:                                    ; preds = %128
  %141 = bitcast i8* %111 to i8**, !dbg !9727
  %142 = load i8*, i8** %141, align 8, !dbg !9727, !tbaa !3115
  %143 = zext i1 %117 to i64, !dbg !9727
  %144 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 5, i64 %143, !dbg !9727
  %145 = load i8*, i8** %144, align 8, !dbg !9727, !tbaa !3115
  %146 = tail call i32 @strcmp(i8* %142, i8* %145) #12, !dbg !9727
  %147 = icmp eq i32 %146, 0, !dbg !9728
  br label %148, !dbg !9729

; <label>:148:                                    ; preds = %120, %131, %140
  %149 = phi i1 [ %127, %120 ], [ %139, %131 ], [ %147, %140 ]
  %150 = select i1 %149, i8* %93, i8* %111, !dbg !9730
  %151 = select i1 %149, i8* %18, i8* %93, !dbg !9730
  %152 = select i1 %149, i32 2, i32 1, !dbg !9730
  br label %153, !dbg !9730

; <label>:153:                                    ; preds = %148, %108, %100, %103
  %154 = phi i8* [ %93, %108 ], [ %93, %103 ], [ %93, %100 ], [ %150, %148 ]
  %155 = phi i8* [ %18, %108 ], [ %18, %103 ], [ %18, %100 ], [ %151, %148 ]
  %156 = phi i32 [ 2, %108 ], [ 2, %103 ], [ 2, %100 ], [ %152, %148 ]
  call void @llvm.dbg.value(metadata i32 %156, metadata !9599, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i8* %155, metadata !9597, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata i8* %154, metadata !9595, metadata !DIExpression()), !dbg !9651
  br label %157, !dbg !9731

; <label>:157:                                    ; preds = %153, %214
  %158 = phi i32 [ %156, %153 ], [ %215, %214 ]
  %159 = phi i8* [ %154, %153 ], [ %155, %214 ]
  call void @llvm.dbg.value(metadata i8* %159, metadata !9595, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %158, metadata !9599, metadata !DIExpression()), !dbg !9684
  %160 = icmp eq i32 %158, 1, !dbg !9732
  %161 = or i1 %5, %160, !dbg !9734
  %162 = select i1 %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), !dbg !9734
  call void @llvm.dbg.value(metadata i8* %162, metadata !9598, metadata !DIExpression()), !dbg !9735
  %163 = load i64, i64* %28, align 8, !dbg !9736, !tbaa !3107
  %164 = and i64 %163, 1, !dbg !9737
  %165 = icmp eq i64 %164, 0, !dbg !9737
  br i1 %165, label %179, label %166, !dbg !9738

; <label>:166:                                    ; preds = %157
  %167 = bitcast i8* %159 to i32*, !dbg !9739
  %168 = load i32, i32* %167, align 4, !dbg !9739, !tbaa !3060
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9742, metadata !DIExpression()) #11, !dbg !9750
  call void @llvm.dbg.value(metadata i8* %162, metadata !9747, metadata !DIExpression()) #11, !dbg !9752
  call void @llvm.dbg.value(metadata i8* %171, metadata !9748, metadata !DIExpression()) #11, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %168, metadata !9749, metadata !DIExpression()) #11, !dbg !9754
  %169 = icmp slt i32 %168, 0, !dbg !9755
  br i1 %169, label %214, label %170, !dbg !9757

; <label>:170:                                    ; preds = %166
  %171 = load i8*, i8** %19, align 8, !dbg !9758, !tbaa !3453
  %172 = icmp eq i32 %168, 0, !dbg !9759
  %173 = select i1 %172, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !9759
  %174 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1068, i64 0, i64 0), i8* %162, i8* %173, i8* %171) #11, !dbg !9761
  %175 = icmp slt i32 %174, 0, !dbg !9762
  br i1 %175, label %223, label %176, !dbg !9763

; <label>:176:                                    ; preds = %170
  %177 = tail call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9764
  %178 = icmp slt i32 %177, 0, !dbg !9765
  br i1 %178, label %223, label %214, !dbg !9766

; <label>:179:                                    ; preds = %157
  %180 = and i64 %163, 2, !dbg !9767
  %181 = icmp eq i64 %180, 0, !dbg !9767
  br i1 %181, label %187, label %182, !dbg !9768

; <label>:182:                                    ; preds = %179
  %183 = load i8*, i8** %19, align 8, !dbg !9769, !tbaa !3453
  %184 = bitcast i8* %159 to i64*, !dbg !9772
  %185 = tail call fastcc i32 @put_setnum(%struct._IO_FILE* %0, i8* %162, i8* %183, i64* %184), !dbg !9773
  %186 = icmp eq i32 %185, 0, !dbg !9774
  br i1 %186, label %223, label %214, !dbg !9775

; <label>:187:                                    ; preds = %179
  call void @llvm.dbg.value(metadata i32 0, metadata !9601, metadata !DIExpression()), !dbg !9776
  %188 = load i32, i32* %42, align 8, !dbg !9777, !tbaa !4220
  switch i32 %188, label %189 [
    i32 16447, label %191
    i32 16420, label %191
  ], !dbg !9779

; <label>:189:                                    ; preds = %187
  %190 = bitcast i8* %159 to i8**, !dbg !9780
  br label %202, !dbg !9779

; <label>:191:                                    ; preds = %187, %187
  %192 = load i8*, i8** %19, align 8, !dbg !9782, !tbaa !3453
  %193 = bitcast i8* %159 to i8**, !dbg !9785
  %194 = load i8*, i8** %193, align 8, !dbg !9785, !tbaa !3115
  %195 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i64 0, i64 0), i8* %192, i8* %194), !dbg !9786
  %196 = icmp slt i32 %195, 0, !dbg !9787
  br i1 %196, label %223, label %197, !dbg !9788

; <label>:197:                                    ; preds = %191
  %198 = tail call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9789
  %199 = icmp slt i32 %198, 0, !dbg !9790
  br i1 %199, label %223, label %200, !dbg !9791

; <label>:200:                                    ; preds = %197
  %201 = load i64, i64* %28, align 8, !dbg !9792, !tbaa !3107
  br label %202, !dbg !9791

; <label>:202:                                    ; preds = %189, %200
  %203 = phi i8** [ %190, %189 ], [ %193, %200 ], !dbg !9780
  %204 = phi i64 [ %163, %189 ], [ %201, %200 ], !dbg !9792
  %205 = phi i32 [ 0, %189 ], [ 1, %200 ]
  call void @llvm.dbg.value(metadata i32 %205, metadata !9601, metadata !DIExpression()), !dbg !9776
  %206 = load i8*, i8** %19, align 8, !dbg !9793, !tbaa !3453
  %207 = tail call fastcc i32 @put_setstring(%struct._IO_FILE* %0, i8* %162, i8* %206, i8** %203, i64 %204), !dbg !9794
  %208 = icmp eq i32 %207, 0, !dbg !9795
  br i1 %208, label %223, label %209, !dbg !9796

; <label>:209:                                    ; preds = %202
  %210 = icmp eq i32 %205, 0, !dbg !9797
  br i1 %210, label %214, label %211, !dbg !9799

; <label>:211:                                    ; preds = %209
  %212 = tail call i32 @put_line(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #11, !dbg !9800
  %213 = icmp eq i32 %212, 0, !dbg !9803
  br i1 %213, label %223, label %214, !dbg !9804

; <label>:214:                                    ; preds = %166, %209, %211, %176, %182
  %215 = add nuw nsw i32 %158, 1, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %215, metadata !9599, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i8* %155, metadata !9595, metadata !DIExpression()), !dbg !9651
  %216 = icmp ult i32 %215, 3, !dbg !9806
  br i1 %216, label %157, label %217, !dbg !9731, !llvm.loop !9807

; <label>:217:                                    ; preds = %214, %75, %64, %33, %84, %52, %41, %47, %107, %37, %27, %94
  %218 = phi i8* [ %18, %27 ], [ %18, %33 ], [ %18, %47 ], [ %18, %84 ], [ %18, %94 ], [ %18, %107 ], [ %18, %37 ], [ %18, %41 ], [ %18, %52 ], [ %18, %64 ], [ %18, %75 ], [ %155, %214 ]
  call void @llvm.dbg.value(metadata i8* %218, metadata !9597, metadata !DIExpression()), !dbg !9618
  %219 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 1, !dbg !9809
  call void @llvm.dbg.value(metadata %struct.vimoption* %219, metadata !9594, metadata !DIExpression()), !dbg !9621
  br label %16, !dbg !9810, !llvm.loop !9811

; <label>:220:                                    ; preds = %23
  %221 = add nsw i32 %13, -1, !dbg !9813
  call void @llvm.dbg.value(metadata i32 %221, metadata !9600, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %18, metadata !9597, metadata !DIExpression()), !dbg !9618
  %222 = icmp eq i32 %13, 0, !dbg !9814
  br i1 %222, label %223, label %12, !dbg !9620, !llvm.loop !9815

; <label>:223:                                    ; preds = %220, %170, %197, %191, %202, %211, %182, %176
  %224 = phi i32 [ 0, %176 ], [ 0, %182 ], [ 0, %211 ], [ 0, %202 ], [ 0, %191 ], [ 0, %197 ], [ 0, %170 ], [ 1, %220 ]
  ret i32 %224, !dbg !9817
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @put_setnum(%struct._IO_FILE*, i8*, i8*, i64* readonly) unnamed_addr #0 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9822, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i8* %1, metadata !9823, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %2, metadata !9824, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i64* %3, metadata !9825, metadata !DIExpression()), !dbg !9830
  %5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1066, i64 0, i64 0), i8* %1, i8* %2), !dbg !9831
  %6 = icmp slt i32 %5, 0, !dbg !9833
  br i1 %6, label %30, label %7, !dbg !9834

; <label>:7:                                      ; preds = %4
  call void @llvm.dbg.value(metadata i64* %3, metadata !9835, metadata !DIExpression()) #11, !dbg !9841
  %8 = icmp eq i64* %3, @p_wc, !dbg !9844
  %9 = icmp eq i64* %3, @p_wcm, !dbg !9846
  %10 = or i1 %8, %9, !dbg !9847
  br i1 %10, label %11, label %22, !dbg !9847

; <label>:11:                                     ; preds = %7
  %12 = load i64, i64* %3, align 8, !dbg !9848, !tbaa !4248
  %13 = icmp slt i64 %12, 0, !dbg !9850
  %14 = trunc i64 %12 to i32
  br i1 %13, label %18, label %15, !dbg !9852

; <label>:15:                                     ; preds = %11
  %16 = tail call i32 @find_special_key_in_table(i32 %14) #11, !dbg !9853
  %17 = icmp sgt i32 %16, -1, !dbg !9854
  br i1 %17, label %18, label %22, !dbg !9855

; <label>:18:                                     ; preds = %11, %15
  %19 = tail call i8* @get_special_key_name(i32 %14, i32 0) #11, !dbg !9856
  %20 = tail call i32 @fputs(i8* %19, %struct._IO_FILE* %0), !dbg !9859
  %21 = icmp slt i32 %20, 0, !dbg !9860
  br i1 %21, label %30, label %26, !dbg !9861

; <label>:22:                                     ; preds = %15, %7
  %23 = load i64, i64* %3, align 8, !dbg !9862, !tbaa !4248
  %24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1053, i64 0, i64 0), i64 %23), !dbg !9864
  %25 = icmp slt i32 %24, 0, !dbg !9865
  br i1 %25, label %30, label %26, !dbg !9866

; <label>:26:                                     ; preds = %22, %18
  %27 = tail call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9867
  %28 = lshr i32 %27, 31, !dbg !9869
  %29 = xor i32 %28, 1, !dbg !9869
  br label %30, !dbg !9869

; <label>:30:                                     ; preds = %26, %22, %18, %4
  %31 = phi i32 [ 0, %4 ], [ 0, %18 ], [ 0, %22 ], [ %29, %26 ]
  ret i32 %31, !dbg !9870
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

declare i32 @put_eol(%struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @put_setstring(%struct._IO_FILE*, i8*, i8*, i8** readonly, i64) unnamed_addr #0 !dbg !9871 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9875, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.value(metadata i8* %2, metadata !9877, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i8** %3, metadata !9878, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.value(metadata i64 %4, metadata !9879, metadata !DIExpression()), !dbg !9894
  %8 = bitcast i8** %6 to i8*, !dbg !9895
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11, !dbg !9895
  call void @llvm.dbg.value(metadata i8* null, metadata !9881, metadata !DIExpression()), !dbg !9896
  call void @llvm.dbg.value(metadata i8* null, metadata !9882, metadata !DIExpression()), !dbg !9897
  %9 = bitcast i8** %7 to i8*, !dbg !9898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11, !dbg !9898
  %10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1066, i64 0, i64 0), i8* %1, i8* %2), !dbg !9899
  %11 = icmp slt i32 %10, 0, !dbg !9901
  br i1 %11, label %86, label %12, !dbg !9902

; <label>:12:                                     ; preds = %5
  %13 = load i8*, i8** %3, align 8, !dbg !9903, !tbaa !3115
  %14 = icmp eq i8* %13, null, !dbg !9904
  br i1 %14, label %80, label %15, !dbg !9905

; <label>:15:                                     ; preds = %12
  %16 = icmp eq i8** %3, @p_pt, !dbg !9906
  br i1 %16, label %17, label %29, !dbg !9907

; <label>:17:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i8* %13, metadata !9880, metadata !DIExpression()), !dbg !9908
  store i8* %13, i8** %6, align 8, !dbg !9909, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %13, metadata !9880, metadata !DIExpression()), !dbg !9908
  %18 = load i8, i8* %13, align 1, !dbg !9911, !tbaa !3150
  %19 = icmp eq i8 %18, 0, !dbg !9912
  br i1 %19, label %80, label %20, !dbg !9913

; <label>:20:                                     ; preds = %17
  br label %25, !dbg !9914

; <label>:21:                                     ; preds = %25
  %22 = load i8*, i8** %6, align 8, !dbg !9916, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %22, metadata !9880, metadata !DIExpression()), !dbg !9908
  %23 = load i8, i8* %22, align 1, !dbg !9911, !tbaa !3150
  %24 = icmp eq i8 %23, 0, !dbg !9912
  br i1 %24, label %80, label %25, !dbg !9913, !llvm.loop !9917

; <label>:25:                                     ; preds = %20, %21
  call void @llvm.dbg.value(metadata i8** %6, metadata !9880, metadata !DIExpression()), !dbg !9908
  %26 = call i8* @str2special(i8** nonnull %6, i32 0) #11, !dbg !9914
  %27 = call i32 @put_escstr(%struct._IO_FILE* %0, i8* %26, i32 2) #11, !dbg !9919
  %28 = icmp eq i32 %27, 0, !dbg !9920
  br i1 %28, label %86, label %21, !dbg !9921

; <label>:29:                                     ; preds = %15
  %30 = and i64 %4, 16, !dbg !9922
  %31 = icmp eq i64 %30, 0, !dbg !9923
  br i1 %31, label %77, label %32, !dbg !9924

; <label>:32:                                     ; preds = %29
  %33 = tail call i64 @strlen(i8* nonnull %13) #12, !dbg !9925
  %34 = trunc i64 %33 to i32, !dbg !9926
  %35 = add nsw i32 %34, 1, !dbg !9927
  call void @llvm.dbg.value(metadata i32 %35, metadata !9884, metadata !DIExpression()), !dbg !9928
  %36 = sext i32 %35 to i64, !dbg !9929
  %37 = tail call i8* @alloc(i64 %36) #11, !dbg !9930
  call void @llvm.dbg.value(metadata i8* %37, metadata !9881, metadata !DIExpression()), !dbg !9896
  %38 = icmp eq i8* %37, null, !dbg !9931
  br i1 %38, label %84, label %39, !dbg !9933

; <label>:39:                                     ; preds = %32
  %40 = load i8*, i8** %3, align 8, !dbg !9934, !tbaa !3115
  tail call void @home_replace(%struct.file_buffer* null, i8* %40, i8* nonnull %37, i32 %35, i32 0) #11, !dbg !9935
  %41 = icmp sgt i32 %34, 4094, !dbg !9936
  %42 = trunc i64 %4 to i16, !dbg !9938
  %43 = icmp slt i16 %42, 0, !dbg !9938
  %44 = and i1 %43, %41, !dbg !9939
  br i1 %44, label %45, label %74, !dbg !9939

; <label>:45:                                     ; preds = %39
  %46 = load i8*, i8** %3, align 8, !dbg !9940, !tbaa !3115
  %47 = tail call i8* @vim_strchr(i8* %46, i32 44) #11, !dbg !9941
  %48 = icmp eq i8* %47, null, !dbg !9942
  br i1 %48, label %74, label %49, !dbg !9943

; <label>:49:                                     ; preds = %45
  %50 = tail call i8* @alloc(i64 %36) #11, !dbg !9944
  call void @llvm.dbg.value(metadata i8* %50, metadata !9882, metadata !DIExpression()), !dbg !9897
  %51 = icmp eq i8* %50, null, !dbg !9946
  br i1 %51, label %84, label %52, !dbg !9948

; <label>:52:                                     ; preds = %49
  %53 = tail call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9949
  %54 = icmp eq i32 %53, 0, !dbg !9951
  br i1 %54, label %84, label %55, !dbg !9952

; <label>:55:                                     ; preds = %52
  call void @llvm.dbg.value(metadata i8* %37, metadata !9883, metadata !DIExpression()), !dbg !9953
  store i8* %37, i8** %7, align 8, !dbg !9954, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %37, metadata !9883, metadata !DIExpression()), !dbg !9953
  %56 = load i8, i8* %37, align 1, !dbg !9955, !tbaa !3150
  %57 = icmp eq i8 %56, 0, !dbg !9956
  br i1 %57, label %73, label %58, !dbg !9957

; <label>:58:                                     ; preds = %55
  br label %63, !dbg !9958

; <label>:59:                                     ; preds = %70
  %60 = load i8*, i8** %7, align 8, !dbg !9961, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %60, metadata !9883, metadata !DIExpression()), !dbg !9953
  %61 = load i8, i8* %60, align 1, !dbg !9955, !tbaa !3150
  %62 = icmp eq i8 %61, 0, !dbg !9956
  br i1 %62, label %73, label %63, !dbg !9957, !llvm.loop !9962

; <label>:63:                                     ; preds = %58, %59
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1067, i64 0, i64 0), i8* %1, i8* %2), !dbg !9958
  %65 = icmp slt i32 %64, 0, !dbg !9964
  br i1 %65, label %84, label %66, !dbg !9965

; <label>:66:                                     ; preds = %63
  call void @llvm.dbg.value(metadata i8** %7, metadata !9883, metadata !DIExpression()), !dbg !9953
  %67 = call i32 @copy_option_part(i8** nonnull %7, i8* nonnull %50, i32 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !9966
  %68 = call i32 @put_escstr(%struct._IO_FILE* %0, i8* nonnull %50, i32 2) #11, !dbg !9967
  %69 = icmp eq i32 %68, 0, !dbg !9969
  br i1 %69, label %84, label %70, !dbg !9970

; <label>:70:                                     ; preds = %66
  %71 = call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9971
  %72 = icmp eq i32 %71, 0, !dbg !9972
  br i1 %72, label %84, label %59, !dbg !9973

; <label>:73:                                     ; preds = %59, %55
  call void @vim_free(i8* nonnull %37) #11, !dbg !9974
  call void @vim_free(i8* nonnull %50) #11, !dbg !9975
  call void @llvm.dbg.value(metadata i8* null, metadata !9882, metadata !DIExpression()), !dbg !9897
  br label %86

; <label>:74:                                     ; preds = %39, %45
  %75 = tail call i32 @put_escstr(%struct._IO_FILE* %0, i8* nonnull %37, i32 2) #11, !dbg !9976
  %76 = icmp eq i32 %75, 0, !dbg !9978
  tail call void @vim_free(i8* nonnull %37) #11, !dbg !9979
  call void @llvm.dbg.value(metadata i8* null, metadata !9882, metadata !DIExpression()), !dbg !9897
  br i1 %76, label %86, label %80

; <label>:77:                                     ; preds = %29
  %78 = tail call i32 @put_escstr(%struct._IO_FILE* %0, i8* nonnull %13, i32 2) #11, !dbg !9980
  %79 = icmp eq i32 %78, 0, !dbg !9982
  br i1 %79, label %86, label %80, !dbg !9983

; <label>:80:                                     ; preds = %21, %17, %74, %12, %77
  %81 = call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !9984
  %82 = lshr i32 %81, 31, !dbg !9986
  %83 = xor i32 %82, 1, !dbg !9986
  br label %86, !dbg !9986

; <label>:84:                                     ; preds = %66, %70, %63, %52, %49, %32
  %85 = phi i8* [ %50, %52 ], [ null, %49 ], [ null, %32 ], [ %50, %63 ], [ %50, %70 ], [ %50, %66 ]
  call void @vim_free(i8* %37) #11, !dbg !9987
  call void @vim_free(i8* %85) #11, !dbg !9988
  br label %86, !dbg !9989

; <label>:86:                                     ; preds = %25, %74, %73, %80, %77, %5, %84
  %87 = phi i32 [ 0, %74 ], [ 0, %84 ], [ 0, %5 ], [ 0, %77 ], [ %83, %80 ], [ 1, %73 ], [ 0, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11, !dbg !9990
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11, !dbg !9990
  ret i32 %87, !dbg !9990
}

declare i32 @put_line(%struct._IO_FILE*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @makefoldset(%struct._IO_FILE*) local_unnamed_addr #0 !dbg !9991 {
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %2 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !9997, !tbaa !3115
  %3 = getelementptr inbounds %struct.window_S, %struct.window_S* %2, i64 0, i32 121, i32 12, !dbg !9999
  %4 = tail call fastcc i32 @put_setstring(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0), i8** nonnull %3, i64 0), !dbg !10000
  %5 = icmp eq i32 %4, 0, !dbg !10001
  br i1 %5, label %50, label %6, !dbg !10002

; <label>:6:                                      ; preds = %1
  %7 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10003, !tbaa !3115
  %8 = getelementptr inbounds %struct.window_S, %struct.window_S* %7, i64 0, i32 121, i32 16, !dbg !10004
  %9 = tail call fastcc i32 @put_setstring(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i64 0, i64 0), i8** nonnull %8, i64 0), !dbg !10005
  %10 = icmp eq i32 %9, 0, !dbg !10006
  br i1 %10, label %50, label %11, !dbg !10007

; <label>:11:                                     ; preds = %6
  %12 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10008, !tbaa !3115
  %13 = getelementptr inbounds %struct.window_S, %struct.window_S* %12, i64 0, i32 121, i32 18, !dbg !10009
  %14 = tail call fastcc i32 @put_setstring(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i64 0, i64 0), i8** nonnull %13, i64 0), !dbg !10010
  %15 = icmp eq i32 %14, 0, !dbg !10011
  br i1 %15, label %50, label %16, !dbg !10012

; <label>:16:                                     ; preds = %11
  %17 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10013, !tbaa !3115
  %18 = getelementptr inbounds %struct.window_S, %struct.window_S* %17, i64 0, i32 121, i32 9, !dbg !10014
  %19 = tail call fastcc i32 @put_setstring(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i64 0, i64 0), i8** nonnull %18, i64 0), !dbg !10015
  %20 = icmp eq i32 %19, 0, !dbg !10016
  br i1 %20, label %50, label %21, !dbg !10017

; <label>:21:                                     ; preds = %16
  %22 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10018, !tbaa !3115
  %23 = getelementptr inbounds %struct.window_S, %struct.window_S* %22, i64 0, i32 121, i32 10, !dbg !10019
  %24 = tail call fastcc i32 @put_setnum(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0), i64* nonnull %23), !dbg !10020
  %25 = icmp eq i32 %24, 0, !dbg !10021
  br i1 %25, label %50, label %26, !dbg !10022

; <label>:26:                                     ; preds = %21
  %27 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10023, !tbaa !3115
  %28 = getelementptr inbounds %struct.window_S, %struct.window_S* %27, i64 0, i32 121, i32 14, !dbg !10024
  %29 = tail call fastcc i32 @put_setnum(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0), i64* nonnull %28), !dbg !10025
  %30 = icmp eq i32 %29, 0, !dbg !10026
  br i1 %30, label %50, label %31, !dbg !10027

; <label>:31:                                     ; preds = %26
  %32 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10028, !tbaa !3115
  %33 = getelementptr inbounds %struct.window_S, %struct.window_S* %32, i64 0, i32 121, i32 15, !dbg !10029
  %34 = tail call fastcc i32 @put_setnum(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i64 0, i64 0), i64* nonnull %33), !dbg !10030
  %35 = icmp eq i32 %34, 0, !dbg !10031
  br i1 %35, label %50, label %36, !dbg !10032

; <label>:36:                                     ; preds = %31
  %37 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !10033, !tbaa !3115
  %38 = getelementptr inbounds %struct.window_S, %struct.window_S* %37, i64 0, i32 121, i32 7, !dbg !10034
  %39 = load i32, i32* %38, align 4, !dbg !10034, !tbaa !10035
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !9742, metadata !DIExpression()) #11, !dbg !10036
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), metadata !9747, metadata !DIExpression()) #11, !dbg !10038
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), metadata !9748, metadata !DIExpression()) #11, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %39, metadata !9749, metadata !DIExpression()) #11, !dbg !10040
  %40 = icmp slt i32 %39, 0, !dbg !10041
  br i1 %40, label %50, label %41, !dbg !10042

; <label>:41:                                     ; preds = %36
  %42 = icmp eq i32 %39, 0, !dbg !10043
  %43 = select i1 %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !10043
  %44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1068, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0)) #11, !dbg !10044
  %45 = icmp slt i32 %44, 0, !dbg !10045
  br i1 %45, label %49, label %46, !dbg !10046

; <label>:46:                                     ; preds = %41
  %47 = tail call i32 @put_eol(%struct._IO_FILE* %0) #11, !dbg !10047
  %48 = icmp slt i32 %47, 0, !dbg !10048
  br i1 %48, label %49, label %50, !dbg !10049

; <label>:49:                                     ; preds = %41, %46
  br label %50, !dbg !10049

; <label>:50:                                     ; preds = %31, %26, %21, %16, %11, %6, %1, %36, %46, %49
  %51 = phi i32 [ 0, %49 ], [ 1, %46 ], [ 1, %36 ], [ 0, %1 ], [ 0, %6 ], [ 0, %11 ], [ 0, %16 ], [ 0, %21 ], [ 0, %26 ], [ 0, %31 ]
  ret i32 %51, !dbg !10049
}

; Function Attrs: nounwind uwtable
define void @clear_termoptions() local_unnamed_addr #0 !dbg !10050 {
  tail call void @mch_setmouse(i32 0) #11, !dbg !10051
  tail call void @mch_restore_title(i32 3) #11, !dbg !10052
  %1 = load i32, i32* getelementptr inbounds (%struct.Gui, %struct.Gui* @gui, i64 0, i32 2), align 8, !dbg !10053, !tbaa !4827
  %2 = icmp eq i32 %1, 0, !dbg !10055
  br i1 %2, label %4, label %3, !dbg !10056

; <label>:3:                                      ; preds = %0
  tail call void @clear_xterm_clip() #11, !dbg !10057
  br label %4, !dbg !10057

; <label>:4:                                      ; preds = %0, %3
  tail call void @stoptermcap() #11, !dbg !10058
  tail call void @free_termoptions(), !dbg !10059
  ret void, !dbg !10060
}

declare void @mch_setmouse(i32) local_unnamed_addr #3

declare void @mch_restore_title(i32) local_unnamed_addr #3

declare void @clear_xterm_clip() local_unnamed_addr #3

declare void @stoptermcap() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @free_termoptions() local_unnamed_addr #0 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.vimoption* getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), metadata !10063, metadata !DIExpression()), !dbg !10064
  %1 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !10065, !tbaa !3453
  %2 = icmp eq i8* %1, null, !dbg !10068
  br i1 %2, label %67, label %3, !dbg !10069

; <label>:3:                                      ; preds = %0
  br label %4, !dbg !10070

; <label>:4:                                      ; preds = %3, %62
  %5 = phi i8* [ %65, %62 ], [ %1, %3 ]
  %6 = phi %struct.vimoption* [ %63, %62 ], [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.vimoption* %6, metadata !3489, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata %struct.vimoption* %6, metadata !10063, metadata !DIExpression()), !dbg !10064
  %7 = load i8, i8* %5, align 1, !dbg !10070, !tbaa !3150
  %8 = icmp eq i8 %7, 116, !dbg !10074
  br i1 %8, label %9, label %62, !dbg !10075

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !10076
  %11 = load i8, i8* %10, align 1, !dbg !10076, !tbaa !3150
  %12 = icmp eq i8 %11, 95, !dbg !10077
  br i1 %12, label %13, label %62, !dbg !10078

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 2, !dbg !10079
  %15 = load i64, i64* %14, align 8, !dbg !10079, !tbaa !3107
  %16 = and i64 %15, 8, !dbg !10082
  %17 = icmp eq i64 %16, 0, !dbg !10082
  br i1 %17, label %24, label %18, !dbg !10083

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 3, !dbg !10084
  %20 = bitcast i8** %19 to i8***, !dbg !10084
  %21 = load i8**, i8*** %20, align 8, !dbg !10084, !tbaa !3461
  %22 = load i8*, i8** %21, align 8, !dbg !10085, !tbaa !3115
  tail call void @free_string_option(i8* %22) #11, !dbg !10086
  %23 = load i64, i64* %14, align 8, !dbg !10087, !tbaa !3107
  br label %24, !dbg !10086

; <label>:24:                                     ; preds = %13, %18
  %25 = phi i64 [ %15, %13 ], [ %23, %18 ], !dbg !10087
  %26 = trunc i64 %25 to i8, !dbg !10089
  %27 = icmp slt i8 %26, 0, !dbg !10089
  br i1 %27, label %28, label %32, !dbg !10090

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 5, i64 0, !dbg !10091
  %30 = load i8*, i8** %29, align 8, !dbg !10091, !tbaa !3115
  tail call void @free_string_option(i8* %30) #11, !dbg !10092
  %31 = load i64, i64* %14, align 8, !dbg !10093, !tbaa !3107
  br label %32, !dbg !10092

; <label>:32:                                     ; preds = %28, %24
  %33 = phi i64 [ %31, %28 ], [ %25, %24 ], !dbg !10093
  %34 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10094, !tbaa !3115
  %35 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 3, !dbg !10095
  %36 = bitcast i8** %35 to i64**, !dbg !10095
  %37 = load i64*, i64** %36, align 8, !dbg !10095, !tbaa !3461
  store i64 %34, i64* %37, align 8, !dbg !10096, !tbaa !3115
  %38 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10097, !tbaa !3115
  %39 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 5, !dbg !10098
  %40 = bitcast [2 x i8*]* %39 to i64*, !dbg !10099
  store i64 %38, i64* %40, align 8, !dbg !10099, !tbaa !3115
  %41 = and i64 %33, -137, !dbg !10093
  store i64 %41, i64* %14, align 8, !dbg !10093, !tbaa !3107
  %42 = ptrtoint %struct.vimoption* %6 to i64, !dbg !10100
  %43 = sub i64 %42, ptrtoint ([508 x %struct.vimoption]* @options to i64), !dbg !10100
  %44 = sdiv exact i64 %43, 80, !dbg !10100
  %45 = load i64, i64* bitcast (%struct.sctx_T* @current_sctx to i64*), align 8, !dbg !10101
  call void @llvm.dbg.value(metadata i64 %45, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !10103
  %46 = load i64, i64* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 2), align 8, !dbg !10101
  call void @llvm.dbg.value(metadata i64 %46, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !10103
  %47 = load i64, i64* bitcast (i32* getelementptr inbounds (%struct.sctx_T, %struct.sctx_T* @current_sctx, i64 0, i32 3) to i64*), align 8, !dbg !10101
  call void @llvm.dbg.value(metadata i64 %47, metadata !4573, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !10103
  call void @llvm.dbg.value(metadata i32 2, metadata !4572, metadata !DIExpression()), !dbg !10104
  %48 = shl i64 %44, 32, !dbg !10105
  %49 = ashr exact i64 %48, 32, !dbg !10105
  call void @llvm.dbg.value(metadata i64 %46, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !10106
  call void @llvm.dbg.value(metadata i64 %47, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !10106
  %50 = load %struct.estack_T*, %struct.estack_T** bitcast (i8** getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 4) to %struct.estack_T**), align 8, !dbg !10107, !tbaa !3217
  %51 = load i32, i32* getelementptr inbounds (%struct.growarray, %struct.growarray* @exestack, i64 0, i32 0), align 8, !dbg !10107, !tbaa !3229
  %52 = add nsw i32 %51, -1, !dbg !10107
  %53 = sext i32 %52 to i64, !dbg !10107
  %54 = getelementptr inbounds %struct.estack_T, %struct.estack_T* %50, i64 %53, i32 0, !dbg !10107
  %55 = load i64, i64* %54, align 8, !dbg !10107, !tbaa !4588
  %56 = add nsw i64 %55, %46, !dbg !10108
  call void @llvm.dbg.value(metadata i64 %56, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !10106
  call void @llvm.dbg.value(metadata i64 %56, metadata !4576, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !10106
  %57 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %49, i32 6, !dbg !10109
  %58 = bitcast %struct.sctx_T* %57 to i64*, !dbg !10109
  store i64 %45, i64* %58, align 8, !dbg !10109
  %59 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %49, i32 6, i32 2, !dbg !10109
  store i64 %56, i64* %59, align 8, !dbg !10109
  %60 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %49, i32 6, i32 3, !dbg !10109
  %61 = bitcast i32* %60 to i64*, !dbg !10109
  store i64 %47, i64* %61, align 8, !dbg !10109
  br label %62, !dbg !10110

; <label>:62:                                     ; preds = %9, %4, %32
  %63 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 1, !dbg !10111
  call void @llvm.dbg.value(metadata %struct.vimoption* %63, metadata !10063, metadata !DIExpression()), !dbg !10064
  %64 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %63, i64 0, i32 0, !dbg !10065
  %65 = load i8*, i8** %64, align 8, !dbg !10065, !tbaa !3453
  %66 = icmp eq i8* %65, null, !dbg !10068
  br i1 %66, label %67, label %4, !dbg !10069, !llvm.loop !10112

; <label>:67:                                     ; preds = %62, %0
  tail call void @clear_termcodes() #11, !dbg !10114
  ret void, !dbg !10115
}

declare void @clear_termcodes() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @free_one_termoption(i8* readnone) local_unnamed_addr #0 !dbg !10116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata %struct.vimoption* getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), metadata !10119, metadata !DIExpression()), !dbg !10121
  %2 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !10122, !tbaa !3453
  %3 = icmp eq i8* %2, null, !dbg !10125
  br i1 %3, label %33, label %4, !dbg !10126

; <label>:4:                                      ; preds = %1
  br label %5, !dbg !10127

; <label>:5:                                      ; preds = %4, %28
  %6 = phi %struct.vimoption* [ %29, %28 ], [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %4 ]
  call void @llvm.dbg.value(metadata %struct.vimoption* %6, metadata !10119, metadata !DIExpression()), !dbg !10121
  %7 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 3, !dbg !10127
  %8 = load i8*, i8** %7, align 8, !dbg !10127, !tbaa !3461
  %9 = icmp eq i8* %8, %0, !dbg !10129
  br i1 %9, label %10, label %28, !dbg !10130

; <label>:10:                                     ; preds = %5
  %11 = bitcast i8* %8 to i64*, !dbg !10130
  %12 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 2, !dbg !10131
  %13 = load i64, i64* %12, align 8, !dbg !10131, !tbaa !3107
  %14 = and i64 %13, 8, !dbg !10134
  %15 = icmp eq i64 %14, 0, !dbg !10134
  br i1 %15, label %23, label %16, !dbg !10135

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 3, !dbg !10127
  %18 = bitcast i8* %0 to i8**, !dbg !10136
  %19 = load i8*, i8** %18, align 8, !dbg !10136, !tbaa !3115
  tail call void @free_string_option(i8* %19) #11, !dbg !10137
  %20 = bitcast i8** %17 to i64**
  %21 = load i64*, i64** %20, align 8, !dbg !10138, !tbaa !3461
  %22 = load i64, i64* %12, align 8, !dbg !10139, !tbaa !3107
  br label %23, !dbg !10137

; <label>:23:                                     ; preds = %10, %16
  %24 = phi i64 [ %22, %16 ], [ %13, %10 ], !dbg !10139
  %25 = phi i64* [ %21, %16 ], [ %11, %10 ], !dbg !10138
  %26 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10140, !tbaa !3115
  store i64 %26, i64* %25, align 8, !dbg !10141, !tbaa !3115
  %27 = and i64 %24, -9, !dbg !10139
  store i64 %27, i64* %12, align 8, !dbg !10139, !tbaa !3107
  br label %33, !dbg !10142

; <label>:28:                                     ; preds = %5
  %29 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 1, !dbg !10143
  call void @llvm.dbg.value(metadata %struct.vimoption* %29, metadata !10119, metadata !DIExpression()), !dbg !10121
  %30 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %29, i64 0, i32 0, !dbg !10122
  %31 = load i8*, i8** %30, align 8, !dbg !10122, !tbaa !3453
  %32 = icmp eq i8* %31, null, !dbg !10125
  br i1 %32, label %33, label %5, !dbg !10126, !llvm.loop !10144

; <label>:33:                                     ; preds = %28, %1, %23
  ret void, !dbg !10146
}

; Function Attrs: nounwind uwtable
define void @set_term_defaults() local_unnamed_addr #0 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.vimoption* getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), metadata !10149, metadata !DIExpression()), !dbg !10150
  %1 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !10151, !tbaa !3453
  %2 = icmp eq i8* %1, null, !dbg !10154
  br i1 %2, label %47, label %3, !dbg !10155

; <label>:3:                                      ; preds = %0
  br label %4, !dbg !10156

; <label>:4:                                      ; preds = %3, %42
  %5 = phi i8* [ %45, %42 ], [ %1, %3 ]
  %6 = phi %struct.vimoption* [ %43, %42 ], [ getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.vimoption* %6, metadata !3489, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata %struct.vimoption* %6, metadata !10149, metadata !DIExpression()), !dbg !10150
  %7 = load i8, i8* %5, align 1, !dbg !10156, !tbaa !3150
  %8 = icmp eq i8 %7, 116, !dbg !10161
  br i1 %8, label %9, label %42, !dbg !10162

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !10163
  %11 = load i8, i8* %10, align 1, !dbg !10163, !tbaa !3150
  %12 = icmp eq i8 %11, 95, !dbg !10164
  br i1 %12, label %13, label %42, !dbg !10165

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 5, i64 0, !dbg !10166
  %15 = load i8*, i8** %14, align 8, !dbg !10166, !tbaa !3115
  %16 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 3, !dbg !10167
  %17 = bitcast i8** %16 to i8***, !dbg !10167
  %18 = load i8**, i8*** %17, align 8, !dbg !10167, !tbaa !3461
  %19 = load i8*, i8** %18, align 8, !dbg !10168, !tbaa !3115
  %20 = icmp eq i8* %15, %19, !dbg !10169
  br i1 %20, label %42, label %21, !dbg !10170

; <label>:21:                                     ; preds = %13
  %22 = ptrtoint i8* %19 to i64, !dbg !10170
  %23 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 0, i32 2, !dbg !10171
  %24 = load i64, i64* %23, align 8, !dbg !10171, !tbaa !3107
  %25 = trunc i64 %24 to i8, !dbg !10174
  %26 = icmp slt i8 %25, 0, !dbg !10174
  br i1 %26, label %27, label %33, !dbg !10175

; <label>:27:                                     ; preds = %21
  tail call void @free_string_option(i8* %15) #11, !dbg !10176
  %28 = load i64, i64* %23, align 8, !dbg !10178, !tbaa !3107
  %29 = and i64 %28, -129, !dbg !10178
  store i64 %29, i64* %23, align 8, !dbg !10178, !tbaa !3107
  %30 = bitcast i8** %16 to i64**
  %31 = load i64*, i64** %30, align 8, !dbg !10179, !tbaa !3461
  %32 = load i64, i64* %31, align 8, !dbg !10180, !tbaa !3115
  br label %33, !dbg !10181

; <label>:33:                                     ; preds = %21, %27
  %34 = phi i64 [ %29, %27 ], [ %24, %21 ], !dbg !10182
  %35 = phi i64 [ %32, %27 ], [ %22, %21 ], !dbg !10180
  %36 = bitcast i8** %14 to i64*, !dbg !10184
  store i64 %35, i64* %36, align 8, !dbg !10184, !tbaa !3115
  %37 = and i64 %34, 8, !dbg !10185
  %38 = icmp eq i64 %37, 0, !dbg !10185
  br i1 %38, label %42, label %39, !dbg !10186

; <label>:39:                                     ; preds = %33
  %40 = and i64 %34, -137, !dbg !10187
  %41 = or i64 %40, 128, !dbg !10187
  store i64 %41, i64* %23, align 8, !dbg !10187, !tbaa !3107
  br label %42, !dbg !10189

; <label>:42:                                     ; preds = %9, %4, %33, %13, %39
  %43 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %6, i64 1, !dbg !10190
  call void @llvm.dbg.value(metadata %struct.vimoption* %43, metadata !10149, metadata !DIExpression()), !dbg !10150
  %44 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %43, i64 0, i32 0, !dbg !10151
  %45 = load i8*, i8** %44, align 8, !dbg !10151, !tbaa !3453
  %46 = icmp eq i8* %45, null, !dbg !10154
  br i1 %46, label %47, label %4, !dbg !10155, !llvm.loop !10191

; <label>:47:                                     ; preds = %42, %0
  ret void, !dbg !10193
}

; Function Attrs: nounwind uwtable
define i8* @get_option_varp_scope(i32, i32) local_unnamed_addr #0 !dbg !10194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10198, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i32 %1, metadata !10199, metadata !DIExpression()), !dbg !10201
  %3 = sext i32 %0 to i64, !dbg !10202
  %4 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %3, !dbg !10202
  %5 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* nonnull %4, i32 %1), !dbg !10203
  ret i8* %5, !dbg !10204
}

; Function Attrs: nounwind readonly uwtable
define i8* @get_option_var(i32) local_unnamed_addr #7 !dbg !10205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10209, metadata !DIExpression()), !dbg !10210
  %2 = sext i32 %0 to i64, !dbg !10211
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 3, !dbg !10212
  %4 = load i8*, i8** %3, align 8, !dbg !10212, !tbaa !3461
  ret i8* %4, !dbg !10213
}

; Function Attrs: nounwind readonly uwtable
define i8* @get_option_fullname(i32) local_unnamed_addr #7 !dbg !10214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10216, metadata !DIExpression()), !dbg !10217
  %2 = sext i32 %0 to i64, !dbg !10218
  %3 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %2, i32 0, !dbg !10219
  %4 = load i8*, i8** %3, align 16, !dbg !10219, !tbaa !3453
  ret i8* %4, !dbg !10220
}

; Function Attrs: norecurse nounwind readonly uwtable
define i8* @get_equalprg() local_unnamed_addr #10 !dbg !10221 {
  %1 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !10222, !tbaa !3115
  %2 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1, i64 0, i32 148, !dbg !10224
  %3 = load i8*, i8** %2, align 8, !dbg !10224, !tbaa !8323
  %4 = load i8, i8* %3, align 1, !dbg !10225, !tbaa !3150
  %5 = icmp eq i8 %4, 0, !dbg !10226
  %6 = load i8*, i8** @p_ep, align 8, !dbg !10227
  %7 = select i1 %5, i8* %6, i8* %3, !dbg !10228
  ret i8* %7, !dbg !10229
}

; Function Attrs: nounwind uwtable
define void @win_copy_options(%struct.window_S* readonly, %struct.window_S*) local_unnamed_addr #0 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct.window_S* %0, metadata !10234, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.value(metadata %struct.window_S* %1, metadata !10235, metadata !DIExpression()), !dbg !10237
  %3 = getelementptr inbounds %struct.window_S, %struct.window_S* %0, i64 0, i32 121, !dbg !10238
  %4 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 121, !dbg !10239
  tail call void @copy_winopt(%struct.winopt_T* nonnull %3, %struct.winopt_T* nonnull %4), !dbg !10240
  %5 = getelementptr inbounds %struct.window_S, %struct.window_S* %0, i64 0, i32 122, !dbg !10241
  %6 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 122, !dbg !10242
  tail call void @copy_winopt(%struct.winopt_T* nonnull %5, %struct.winopt_T* nonnull %6), !dbg !10243
  call void @llvm.dbg.value(metadata %struct.window_S* %1, metadata !4052, metadata !DIExpression()) #11, !dbg !10244
  %7 = tail call i32 @briopt_check(%struct.window_S* %1) #11, !dbg !10246
  %8 = tail call i32 @fill_culopt_flags(i8* null, %struct.window_S* %1) #11, !dbg !10247
  %9 = tail call i8* @check_colorcolumn(%struct.window_S* %1) #11, !dbg !10248
  %10 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 121, i32 21, !dbg !10249
  %11 = tail call i8* @set_chars_option(%struct.window_S* %1, i8** nonnull %10) #11, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: nounwind uwtable
define void @copy_winopt(%struct.winopt_T* readonly, %struct.winopt_T*) local_unnamed_addr #0 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.winopt_T* %0, metadata !10257, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata %struct.winopt_T* %1, metadata !10258, metadata !DIExpression()), !dbg !10260
  %3 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 0, !dbg !10261
  %4 = load i32, i32* %3, align 8, !dbg !10261, !tbaa !10262
  %5 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 0, !dbg !10263
  store i32 %4, i32* %5, align 8, !dbg !10264, !tbaa !10262
  %6 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 20, !dbg !10265
  %7 = load i32, i32* %6, align 4, !dbg !10265, !tbaa !10266
  %8 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 20, !dbg !10267
  store i32 %7, i32* %8, align 4, !dbg !10268, !tbaa !10266
  %9 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 21, !dbg !10269
  %10 = load i8*, i8** %9, align 8, !dbg !10269, !tbaa !10270
  %11 = tail call i8* @vim_strsave(i8* %10) #11, !dbg !10271
  %12 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 21, !dbg !10272
  store i8* %11, i8** %12, align 8, !dbg !10273, !tbaa !10270
  %13 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 22, !dbg !10274
  %14 = load i32, i32* %13, align 8, !dbg !10274, !tbaa !10275
  %15 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 22, !dbg !10276
  store i32 %14, i32* %15, align 8, !dbg !10277, !tbaa !10275
  %16 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 23, !dbg !10278
  %17 = load i32, i32* %16, align 4, !dbg !10278, !tbaa !10279
  %18 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 23, !dbg !10280
  store i32 %17, i32* %18, align 4, !dbg !10281, !tbaa !10279
  %19 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 24, !dbg !10282
  %20 = load i64, i64* %19, align 8, !dbg !10282, !tbaa !10283
  %21 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 24, !dbg !10284
  store i64 %20, i64* %21, align 8, !dbg !10285, !tbaa !10283
  %22 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 28, !dbg !10286
  %23 = load i32, i32* %22, align 4, !dbg !10286, !tbaa !10287
  %24 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 28, !dbg !10288
  store i32 %23, i32* %24, align 4, !dbg !10289, !tbaa !10287
  %25 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 29, !dbg !10290
  %26 = load i8*, i8** %25, align 8, !dbg !10290, !tbaa !10291
  %27 = tail call i8* @vim_strsave(i8* %26) #11, !dbg !10292
  %28 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 29, !dbg !10293
  store i8* %27, i8** %28, align 8, !dbg !10294, !tbaa !10291
  %29 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 36, !dbg !10295
  %30 = load i8*, i8** %29, align 8, !dbg !10295, !tbaa !10296
  %31 = tail call i8* @vim_strsave(i8* %30) #11, !dbg !10297
  %32 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 36, !dbg !10298
  store i8* %31, i8** %32, align 8, !dbg !10299, !tbaa !10296
  %33 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 37, !dbg !10300
  %34 = load i8*, i8** %33, align 8, !dbg !10300, !tbaa !10301
  %35 = tail call i8* @vim_strsave(i8* %34) #11, !dbg !10302
  %36 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 37, !dbg !10303
  store i8* %35, i8** %36, align 8, !dbg !10304, !tbaa !10301
  %37 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 41, !dbg !10305
  %38 = load i32, i32* %37, align 4, !dbg !10305, !tbaa !10306
  %39 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 41, !dbg !10307
  store i32 %38, i32* %39, align 4, !dbg !10308, !tbaa !10306
  %40 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 42, !dbg !10309
  %41 = load i32, i32* %40, align 8, !dbg !10309, !tbaa !10310
  %42 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 42, !dbg !10311
  store i32 %41, i32* %42, align 8, !dbg !10312, !tbaa !10310
  %43 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 19, !dbg !10313
  %44 = load i32, i32* %43, align 8, !dbg !10313, !tbaa !10314
  %45 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 19, !dbg !10315
  store i32 %44, i32* %45, align 8, !dbg !10316, !tbaa !10314
  %46 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 1, !dbg !10317
  %47 = load i32, i32* %46, align 4, !dbg !10317, !tbaa !10318
  %48 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 1, !dbg !10319
  store i32 %47, i32* %48, align 4, !dbg !10320, !tbaa !10318
  %49 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 2, !dbg !10321
  %50 = load i8*, i8** %49, align 8, !dbg !10321, !tbaa !10322
  %51 = tail call i8* @vim_strsave(i8* %50) #11, !dbg !10323
  %52 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 2, !dbg !10324
  store i8* %51, i8** %52, align 8, !dbg !10325, !tbaa !10322
  %53 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 3, !dbg !10326
  %54 = load i8*, i8** %53, align 8, !dbg !10326, !tbaa !10327
  %55 = tail call i8* @vim_strsave(i8* %54) #11, !dbg !10328
  %56 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 3, !dbg !10329
  store i8* %55, i8** %56, align 8, !dbg !10330, !tbaa !10327
  %57 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 38, !dbg !10331
  %58 = load i32, i32* %57, align 8, !dbg !10331, !tbaa !10332
  %59 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 38, !dbg !10333
  store i32 %58, i32* %59, align 8, !dbg !10334, !tbaa !10332
  %60 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 40, !dbg !10335
  %61 = load i32, i32* %60, align 8, !dbg !10335, !tbaa !10336
  %62 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 40, !dbg !10337
  store i32 %61, i32* %62, align 8, !dbg !10338, !tbaa !10336
  %63 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 45, !dbg !10339
  %64 = load i32, i32* %63, align 8, !dbg !10339, !tbaa !10340
  %65 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 45, !dbg !10341
  store i32 %64, i32* %65, align 8, !dbg !10342, !tbaa !10340
  %66 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 46, !dbg !10343
  %67 = load i32, i32* %66, align 4, !dbg !10343, !tbaa !10344
  %68 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 46, !dbg !10345
  store i32 %67, i32* %68, align 4, !dbg !10346, !tbaa !10344
  %69 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 31, !dbg !10347
  %70 = load i32, i32* %69, align 8, !dbg !10347, !tbaa !10348
  %71 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 31, !dbg !10349
  store i32 %70, i32* %71, align 8, !dbg !10350, !tbaa !10348
  %72 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 32, !dbg !10351
  %73 = load i32, i32* %72, align 4, !dbg !10351, !tbaa !10352
  %74 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 32, !dbg !10353
  store i32 %73, i32* %74, align 4, !dbg !10354, !tbaa !10352
  %75 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 33, !dbg !10355
  %76 = load i32, i32* %75, align 8, !dbg !10355, !tbaa !10356
  %77 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 33, !dbg !10357
  store i32 %76, i32* %77, align 8, !dbg !10358, !tbaa !10356
  %78 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 34, !dbg !10359
  %79 = load i8*, i8** %78, align 8, !dbg !10359, !tbaa !10360
  %80 = tail call i8* @vim_strsave(i8* %79) #11, !dbg !10361
  %81 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 34, !dbg !10362
  store i8* %80, i8** %81, align 8, !dbg !10363, !tbaa !10360
  %82 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 35, !dbg !10364
  %83 = load i8*, i8** %82, align 8, !dbg !10364, !tbaa !10365
  %84 = tail call i8* @vim_strsave(i8* %83) #11, !dbg !10366
  %85 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 35, !dbg !10367
  store i8* %84, i8** %85, align 8, !dbg !10368, !tbaa !10365
  %86 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 4, !dbg !10369
  %87 = load i32, i32* %86, align 8, !dbg !10369, !tbaa !10370
  %88 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 4, !dbg !10371
  store i32 %87, i32* %88, align 8, !dbg !10372, !tbaa !10370
  %89 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 39, !dbg !10373
  %90 = load i32, i32* %89, align 4, !dbg !10373, !tbaa !10374
  %91 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 39, !dbg !10375
  store i32 %90, i32* %91, align 4, !dbg !10376, !tbaa !10374
  %92 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 43, !dbg !10377
  %93 = load i8*, i8** %92, align 8, !dbg !10377, !tbaa !10378
  %94 = tail call i8* @vim_strsave(i8* %93) #11, !dbg !10379
  %95 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 43, !dbg !10380
  store i8* %94, i8** %95, align 8, !dbg !10381, !tbaa !10378
  %96 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 44, !dbg !10382
  %97 = load i64, i64* %96, align 8, !dbg !10382, !tbaa !10383
  %98 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 44, !dbg !10384
  store i64 %97, i64* %98, align 8, !dbg !10385, !tbaa !10383
  %99 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 48, !dbg !10386
  %100 = load i8*, i8** %99, align 8, !dbg !10386, !tbaa !10387
  %101 = tail call i8* @vim_strsave(i8* %100) #11, !dbg !10388
  %102 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 48, !dbg !10389
  store i8* %101, i8** %102, align 8, !dbg !10390, !tbaa !10387
  %103 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 49, !dbg !10391
  %104 = load i8*, i8** %103, align 8, !dbg !10391, !tbaa !10392
  %105 = tail call i8* @vim_strsave(i8* %104) #11, !dbg !10393
  %106 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 49, !dbg !10394
  store i8* %105, i8** %106, align 8, !dbg !10395, !tbaa !10392
  %107 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 5, !dbg !10396
  %108 = load i64, i64* %107, align 8, !dbg !10396, !tbaa !10397
  %109 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 5, !dbg !10398
  store i64 %108, i64* %109, align 8, !dbg !10399, !tbaa !10397
  %110 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 6, !dbg !10400
  %111 = load i32, i32* %110, align 8, !dbg !10400, !tbaa !10401
  %112 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 6, !dbg !10402
  store i32 %111, i32* %112, align 8, !dbg !10403, !tbaa !10401
  %113 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 7, !dbg !10404
  %114 = load i32, i32* %113, align 4, !dbg !10404, !tbaa !10405
  %115 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 7, !dbg !10406
  store i32 %114, i32* %115, align 4, !dbg !10407, !tbaa !10405
  %116 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 8, !dbg !10408
  %117 = load i32, i32* %116, align 8, !dbg !10408, !tbaa !10409
  %118 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 8, !dbg !10410
  store i32 %117, i32* %118, align 8, !dbg !10411, !tbaa !10409
  %119 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 9, !dbg !10412
  %120 = load i8*, i8** %119, align 8, !dbg !10412, !tbaa !10413
  %121 = tail call i8* @vim_strsave(i8* %120) #11, !dbg !10414
  %122 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 9, !dbg !10415
  store i8* %121, i8** %122, align 8, !dbg !10416, !tbaa !10413
  %123 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 14, !dbg !10417
  %124 = load i64, i64* %123, align 8, !dbg !10417, !tbaa !10418
  %125 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 14, !dbg !10419
  store i64 %124, i64* %125, align 8, !dbg !10420, !tbaa !10418
  %126 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 10, !dbg !10421
  %127 = load i64, i64* %126, align 8, !dbg !10421, !tbaa !10422
  %128 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 10, !dbg !10423
  store i64 %127, i64* %128, align 8, !dbg !10424, !tbaa !10422
  %129 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 11, !dbg !10425
  %130 = load i32, i32* %129, align 8, !dbg !10425, !tbaa !10426
  %131 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 11, !dbg !10427
  store i32 %130, i32* %131, align 8, !dbg !10428, !tbaa !10426
  %132 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 12, !dbg !10429
  %133 = load i8*, i8** %132, align 8, !dbg !10429, !tbaa !10430
  %134 = tail call i8* @vim_strsave(i8* %133) #11, !dbg !10431
  %135 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 12, !dbg !10432
  store i8* %134, i8** %135, align 8, !dbg !10433, !tbaa !10430
  %136 = load i32, i32* %89, align 4, !dbg !10434, !tbaa !10374
  %137 = icmp eq i32 %136, 0, !dbg !10435
  br i1 %137, label %142, label %138, !dbg !10435

; <label>:138:                                    ; preds = %2
  %139 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 13, !dbg !10436
  %140 = load i8*, i8** %139, align 8, !dbg !10436, !tbaa !10437
  %141 = tail call i8* @vim_strsave(i8* %140) #11, !dbg !10438
  br label %144, !dbg !10435

; <label>:142:                                    ; preds = %2
  %143 = load i8*, i8** @empty_option, align 8, !dbg !10439, !tbaa !3115
  br label %144, !dbg !10435

; <label>:144:                                    ; preds = %142, %138
  %145 = phi i8* [ %141, %138 ], [ %143, %142 ], !dbg !10435
  %146 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 13, !dbg !10440
  store i8* %145, i8** %146, align 8, !dbg !10441, !tbaa !10437
  %147 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 15, !dbg !10442
  %148 = load i64, i64* %147, align 8, !dbg !10442, !tbaa !10443
  %149 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 15, !dbg !10444
  store i64 %148, i64* %149, align 8, !dbg !10445, !tbaa !10443
  %150 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 16, !dbg !10446
  %151 = load i8*, i8** %150, align 8, !dbg !10446, !tbaa !10447
  %152 = tail call i8* @vim_strsave(i8* %151) #11, !dbg !10448
  %153 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 16, !dbg !10449
  store i8* %152, i8** %153, align 8, !dbg !10450, !tbaa !10447
  %154 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 17, !dbg !10451
  %155 = load i8*, i8** %154, align 8, !dbg !10451, !tbaa !10452
  %156 = tail call i8* @vim_strsave(i8* %155) #11, !dbg !10453
  %157 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 17, !dbg !10454
  store i8* %156, i8** %157, align 8, !dbg !10455, !tbaa !10452
  %158 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 18, !dbg !10456
  %159 = load i8*, i8** %158, align 8, !dbg !10456, !tbaa !10457
  %160 = tail call i8* @vim_strsave(i8* %159) #11, !dbg !10458
  %161 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 18, !dbg !10459
  store i8* %160, i8** %161, align 8, !dbg !10460, !tbaa !10457
  %162 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 47, !dbg !10461
  %163 = load i8*, i8** %162, align 8, !dbg !10461, !tbaa !10462
  %164 = tail call i8* @vim_strsave(i8* %163) #11, !dbg !10463
  %165 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 47, !dbg !10464
  store i8* %164, i8** %165, align 8, !dbg !10465, !tbaa !10462
  %166 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %1, i64 0, i32 50, i64 0, !dbg !10466
  %167 = bitcast %struct.sctx_T* %166 to i8*, !dbg !10466
  %168 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 50, i64 0, !dbg !10466
  %169 = bitcast %struct.sctx_T* %168 to i8*, !dbg !10466
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull %167, i8* nonnull %169, i64 1056, i32 8, i1 false), !dbg !10466
  tail call fastcc void @check_winopt(%struct.winopt_T* nonnull %1), !dbg !10467
  ret void, !dbg !10468
}

; Function Attrs: nounwind uwtable
define void @after_copy_winopt(%struct.window_S*) local_unnamed_addr #0 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.window_S* %0, metadata !4052, metadata !DIExpression()), !dbg !10469
  %2 = tail call i32 @briopt_check(%struct.window_S* %0) #11, !dbg !10470
  %3 = tail call i32 @fill_culopt_flags(i8* null, %struct.window_S* %0), !dbg !10471
  %4 = tail call i8* @check_colorcolumn(%struct.window_S* %0) #11, !dbg !10472
  %5 = getelementptr inbounds %struct.window_S, %struct.window_S* %0, i64 0, i32 121, i32 21, !dbg !10473
  %6 = tail call i8* @set_chars_option(%struct.window_S* %0, i8** nonnull %5) #11, !dbg !10474
  ret void, !dbg !10475
}

declare i32 @briopt_check(%struct.window_S*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @fill_culopt_flags(i8* readonly, %struct.window_S* nocapture) local_unnamed_addr #0 !dbg !10476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10480, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct.window_S* %1, metadata !10481, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i8 0, metadata !10483, metadata !DIExpression()), !dbg !10486
  %3 = icmp eq i8* %0, null, !dbg !10487
  br i1 %3, label %4, label %7, !dbg !10489

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 121, i32 34, !dbg !10490
  %6 = load i8*, i8** %5, align 8, !dbg !10490, !tbaa !10491
  call void @llvm.dbg.value(metadata i8* %6, metadata !10482, metadata !DIExpression()), !dbg !10492
  br label %7, !dbg !10493

; <label>:7:                                      ; preds = %2, %4
  %8 = phi i8* [ %6, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !10482, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8 0, metadata !10483, metadata !DIExpression()), !dbg !10486
  %9 = load i8, i8* %8, align 1, !dbg !10494, !tbaa !3150
  %10 = icmp eq i8 %9, 0, !dbg !10495
  br i1 %10, label %51, label %11, !dbg !10496

; <label>:11:                                     ; preds = %7
  br label %12, !dbg !10497

; <label>:12:                                     ; preds = %11, %42
  %13 = phi i8 [ %40, %42 ], [ 0, %11 ]
  %14 = phi i8* [ %45, %42 ], [ %8, %11 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !10482, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8 %13, metadata !10483, metadata !DIExpression()), !dbg !10486
  %15 = tail call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i64 0, i64 0), i64 4) #12, !dbg !10497
  %16 = icmp eq i32 %15, 0, !dbg !10500
  br i1 %16, label %17, label %20, !dbg !10501

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !10502
  call void @llvm.dbg.value(metadata i8* %18, metadata !10482, metadata !DIExpression()), !dbg !10492
  %19 = or i8 %13, 1, !dbg !10504
  call void @llvm.dbg.value(metadata i8 %19, metadata !10483, metadata !DIExpression()), !dbg !10486
  br label %38, !dbg !10505

; <label>:20:                                     ; preds = %12
  %21 = tail call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), i64 4) #12, !dbg !10506
  %22 = icmp eq i32 %21, 0, !dbg !10508
  br i1 %22, label %23, label %26, !dbg !10509

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !10510
  call void @llvm.dbg.value(metadata i8* %24, metadata !10482, metadata !DIExpression()), !dbg !10492
  %25 = or i8 %13, 5, !dbg !10512
  call void @llvm.dbg.value(metadata i8 %25, metadata !10483, metadata !DIExpression()), !dbg !10486
  br label %38, !dbg !10513

; <label>:26:                                     ; preds = %20
  %27 = tail call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i64 6) #12, !dbg !10514
  %28 = icmp eq i32 %27, 0, !dbg !10516
  br i1 %28, label %29, label %32, !dbg !10517

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds i8, i8* %14, i64 6, !dbg !10518
  call void @llvm.dbg.value(metadata i8* %30, metadata !10482, metadata !DIExpression()), !dbg !10492
  %31 = or i8 %13, 4, !dbg !10520
  call void @llvm.dbg.value(metadata i8 %31, metadata !10483, metadata !DIExpression()), !dbg !10486
  br label %38, !dbg !10521

; <label>:32:                                     ; preds = %26
  %33 = tail call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.110, i64 0, i64 0), i64 10) #12, !dbg !10522
  %34 = icmp eq i32 %33, 0, !dbg !10524
  br i1 %34, label %35, label %38, !dbg !10525

; <label>:35:                                     ; preds = %32
  %36 = getelementptr inbounds i8, i8* %14, i64 10, !dbg !10526
  call void @llvm.dbg.value(metadata i8* %36, metadata !10482, metadata !DIExpression()), !dbg !10492
  %37 = or i8 %13, 2, !dbg !10528
  call void @llvm.dbg.value(metadata i8 %37, metadata !10483, metadata !DIExpression()), !dbg !10486
  br label %38, !dbg !10529

; <label>:38:                                     ; preds = %23, %32, %35, %29, %17
  %39 = phi i8* [ %18, %17 ], [ %24, %23 ], [ %30, %29 ], [ %36, %35 ], [ %14, %32 ]
  %40 = phi i8 [ %19, %17 ], [ %25, %23 ], [ %31, %29 ], [ %37, %35 ], [ %13, %32 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !10482, metadata !DIExpression()), !dbg !10492
  %41 = load i8, i8* %39, align 1, !dbg !10530, !tbaa !3150
  switch i8 %41, label %54 [
    i8 44, label %42
    i8 0, label %42
  ], !dbg !10532

; <label>:42:                                     ; preds = %38, %38
  %43 = icmp eq i8 %41, 44, !dbg !10533
  %44 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !10535
  %45 = select i1 %43, i8* %44, i8* %39, !dbg !10536
  call void @llvm.dbg.value(metadata i8 %40, metadata !10483, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i8* %45, metadata !10482, metadata !DIExpression()), !dbg !10492
  %46 = load i8, i8* %45, align 1, !dbg !10494, !tbaa !3150
  %47 = icmp eq i8 %46, 0, !dbg !10495
  br i1 %47, label %48, label %12, !dbg !10496, !llvm.loop !10537

; <label>:48:                                     ; preds = %42
  %49 = and i8 %40, 3, !dbg !10539
  %50 = icmp eq i8 %49, 3, !dbg !10539
  br i1 %50, label %54, label %51, !dbg !10539

; <label>:51:                                     ; preds = %7, %48
  %52 = phi i8 [ %40, %48 ], [ 0, %7 ]
  %53 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 127, !dbg !10541
  store i8 %52, i8* %53, align 8, !dbg !10542, !tbaa !10543
  br label %54, !dbg !10544

; <label>:54:                                     ; preds = %38, %48, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %48 ], [ 0, %38 ]
  ret i32 %55, !dbg !10545
}

declare i8* @check_colorcolumn(%struct.window_S*) local_unnamed_addr #3

declare i8* @set_chars_option(%struct.window_S*, i8**) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @check_winopt(%struct.winopt_T*) unnamed_addr #0 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct.winopt_T* %0, metadata !10550, metadata !DIExpression()), !dbg !10551
  %2 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 9, !dbg !10552
  tail call void @check_string_option(i8** nonnull %2) #11, !dbg !10553
  %3 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 12, !dbg !10554
  tail call void @check_string_option(i8** nonnull %3) #11, !dbg !10555
  %4 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 13, !dbg !10556
  tail call void @check_string_option(i8** nonnull %4) #11, !dbg !10557
  %5 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 16, !dbg !10558
  tail call void @check_string_option(i8** nonnull %5) #11, !dbg !10559
  %6 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 17, !dbg !10560
  tail call void @check_string_option(i8** nonnull %6) #11, !dbg !10561
  %7 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 18, !dbg !10562
  tail call void @check_string_option(i8** nonnull %7) #11, !dbg !10563
  %8 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 47, !dbg !10564
  tail call void @check_string_option(i8** nonnull %8) #11, !dbg !10565
  %9 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 29, !dbg !10566
  tail call void @check_string_option(i8** nonnull %9) #11, !dbg !10567
  %10 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 36, !dbg !10568
  tail call void @check_string_option(i8** nonnull %10) #11, !dbg !10569
  %11 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 37, !dbg !10570
  tail call void @check_string_option(i8** nonnull %11) #11, !dbg !10571
  %12 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 34, !dbg !10572
  tail call void @check_string_option(i8** nonnull %12) #11, !dbg !10573
  %13 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 35, !dbg !10574
  tail call void @check_string_option(i8** nonnull %13) #11, !dbg !10575
  %14 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 43, !dbg !10576
  tail call void @check_string_option(i8** nonnull %14) #11, !dbg !10577
  %15 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 48, !dbg !10578
  tail call void @check_string_option(i8** nonnull %15) #11, !dbg !10579
  %16 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 49, !dbg !10580
  tail call void @check_string_option(i8** nonnull %16) #11, !dbg !10581
  %17 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 2, !dbg !10582
  tail call void @check_string_option(i8** nonnull %17) #11, !dbg !10583
  %18 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 3, !dbg !10584
  tail call void @check_string_option(i8** nonnull %18) #11, !dbg !10585
  %19 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 21, !dbg !10586
  tail call void @check_string_option(i8** nonnull %19) #11, !dbg !10587
  ret void, !dbg !10588
}

; Function Attrs: nounwind uwtable
define void @clear_winopt(%struct.winopt_T*) local_unnamed_addr #0 !dbg !10589 {
  call void @llvm.dbg.value(metadata %struct.winopt_T* %0, metadata !10591, metadata !DIExpression()), !dbg !10592
  %2 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 9, !dbg !10593
  tail call void @clear_string_option(i8** nonnull %2) #11, !dbg !10594
  %3 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 12, !dbg !10595
  tail call void @clear_string_option(i8** nonnull %3) #11, !dbg !10596
  %4 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 13, !dbg !10597
  tail call void @clear_string_option(i8** nonnull %4) #11, !dbg !10598
  %5 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 16, !dbg !10599
  tail call void @clear_string_option(i8** nonnull %5) #11, !dbg !10600
  %6 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 17, !dbg !10601
  tail call void @clear_string_option(i8** nonnull %6) #11, !dbg !10602
  %7 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 18, !dbg !10603
  tail call void @clear_string_option(i8** nonnull %7) #11, !dbg !10604
  %8 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 47, !dbg !10605
  tail call void @clear_string_option(i8** nonnull %8) #11, !dbg !10606
  %9 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 2, !dbg !10607
  tail call void @clear_string_option(i8** nonnull %9) #11, !dbg !10608
  %10 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 3, !dbg !10609
  tail call void @clear_string_option(i8** nonnull %10) #11, !dbg !10610
  %11 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 29, !dbg !10611
  tail call void @clear_string_option(i8** nonnull %11) #11, !dbg !10612
  %12 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 36, !dbg !10613
  tail call void @clear_string_option(i8** nonnull %12) #11, !dbg !10614
  %13 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 37, !dbg !10615
  tail call void @clear_string_option(i8** nonnull %13) #11, !dbg !10616
  %14 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 34, !dbg !10617
  tail call void @clear_string_option(i8** nonnull %14) #11, !dbg !10618
  %15 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 35, !dbg !10619
  tail call void @clear_string_option(i8** nonnull %15) #11, !dbg !10620
  %16 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 43, !dbg !10621
  tail call void @clear_string_option(i8** nonnull %16) #11, !dbg !10622
  %17 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 48, !dbg !10623
  tail call void @clear_string_option(i8** nonnull %17) #11, !dbg !10624
  %18 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 49, !dbg !10625
  tail call void @clear_string_option(i8** nonnull %18) #11, !dbg !10626
  %19 = getelementptr inbounds %struct.winopt_T, %struct.winopt_T* %0, i64 0, i32 21, !dbg !10627
  tail call void @clear_string_option(i8** nonnull %19) #11, !dbg !10628
  ret void, !dbg !10629
}

declare void @clear_string_option(i8**) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @buf_copy_options(%struct.file_buffer*, i32) local_unnamed_addr #0 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct.file_buffer* %0, metadata !10634, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i32 %1, metadata !10635, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.value(metadata i32 1, metadata !10636, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i8* null, metadata !10637, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10639, metadata !DIExpression()), !dbg !10644
  %3 = load i8*, i8** @p_cpo, align 8, !dbg !10645, !tbaa !3115
  %4 = icmp eq i8* %3, null, !dbg !10647
  br i1 %4, label %682, label %5, !dbg !10648

; <label>:5:                                      ; preds = %2
  %6 = tail call i8* @vim_strchr(i8* nonnull %3, i32 83) #11, !dbg !10649
  %7 = icmp eq i8* %6, null, !dbg !10652
  %8 = and i32 %1, 1, !dbg !10653
  %9 = icmp eq i32 %8, 0, !dbg !10653
  %10 = or i1 %9, %7, !dbg !10654
  br i1 %10, label %11, label %23, !dbg !10654

; <label>:11:                                     ; preds = %5
  %12 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 65, !dbg !10655
  %13 = load i32, i32* %12, align 8, !dbg !10655, !tbaa !3410
  %14 = icmp eq i32 %13, 0, !dbg !10656
  br i1 %14, label %15, label %20, !dbg !10657

; <label>:15:                                     ; preds = %11
  br i1 %9, label %16, label %23, !dbg !10658

; <label>:16:                                     ; preds = %15
  %17 = load i8*, i8** @p_cpo, align 8, !dbg !10659, !tbaa !3115
  %18 = tail call i8* @vim_strchr(i8* %17, i32 115) #11, !dbg !10660
  %19 = icmp eq i8* %18, null, !dbg !10661
  br i1 %19, label %23, label %20, !dbg !10662

; <label>:20:                                     ; preds = %11, %16
  call void @llvm.dbg.value(metadata i32 0, metadata !10636, metadata !DIExpression()), !dbg !10642
  %21 = and i32 %1, 2, !dbg !10663
  %22 = icmp eq i32 %21, 0, !dbg !10663
  br i1 %22, label %682, label %23, !dbg !10665

; <label>:23:                                     ; preds = %5, %16, %15, %20
  %24 = phi i1 [ false, %20 ], [ true, %15 ], [ true, %16 ], [ true, %5 ]
  %25 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, !dbg !10666
  %26 = bitcast [84 x %struct.sctx_T]* %25 to i8*, !dbg !10666
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %26, i8 0, i64 2016, i32 8, i1 false), !dbg !10666
  %27 = load i1, i1* @init_buf_opt_idx.did_init_buf_opt_idx, align 4
  br i1 %27, label %51, label %28, !dbg !10668

; <label>:28:                                     ; preds = %23
  store i1 true, i1* @init_buf_opt_idx.did_init_buf_opt_idx, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3044, metadata !DIExpression()), !dbg !10670
  br label %29, !dbg !10671

; <label>:29:                                     ; preds = %49, %28
  %30 = phi i64 [ %50, %49 ], [ 0, %28 ]
  call void @llvm.dbg.value(metadata i64 %30, metadata !3044, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata i64 %30, metadata !3476, metadata !DIExpression()), !dbg !10673
  %31 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %30, i32 0, !dbg !10676
  %32 = load i8*, i8** %31, align 16, !dbg !10676, !tbaa !3453
  %33 = load i8, i8* %32, align 1, !dbg !10678, !tbaa !3150
  %34 = icmp eq i8 %33, 116, !dbg !10679
  br i1 %34, label %35, label %39, !dbg !10680

; <label>:35:                                     ; preds = %29
  %36 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !10681
  %37 = load i8, i8* %36, align 1, !dbg !10681, !tbaa !3150
  %38 = icmp eq i8 %37, 95, !dbg !10682
  br i1 %38, label %51, label %39, !dbg !10683

; <label>:39:                                     ; preds = %35, %29
  %40 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %30, i32 4, !dbg !10684
  %41 = load i32, i32* %40, align 16, !dbg !10684, !tbaa !4220
  %42 = and i32 %41, 16384, !dbg !10686
  %43 = icmp eq i32 %42, 0, !dbg !10686
  br i1 %43, label %49, label %44, !dbg !10687

; <label>:44:                                     ; preds = %39
  %45 = and i32 %41, 4095, !dbg !10688
  %46 = zext i32 %45 to i64, !dbg !10689
  %47 = getelementptr inbounds [84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 %46, !dbg !10689
  %48 = trunc i64 %30 to i32, !dbg !10690
  store i32 %48, i32* %47, align 4, !dbg !10690, !tbaa !3060
  br label %49, !dbg !10689

; <label>:49:                                     ; preds = %44, %39
  %50 = add nuw i64 %30, 1, !dbg !10691
  br label %29, !dbg !10692, !llvm.loop !10693

; <label>:51:                                     ; preds = %35, %23
  %52 = and i32 %1, 4, !dbg !10696
  %53 = icmp eq i32 %52, 0, !dbg !10696
  br i1 %53, label %58, label %54, !dbg !10697

; <label>:54:                                     ; preds = %51
  %55 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 214, !dbg !10698
  %56 = load i32, i32* %55, align 8, !dbg !10698, !tbaa !7681
  %57 = icmp eq i32 %56, 0, !dbg !10699
  br i1 %57, label %58, label %65, !dbg !10700

; <label>:58:                                     ; preds = %51, %54
  %59 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 65, !dbg !10701
  %60 = load i32, i32* %59, align 8, !dbg !10701, !tbaa !3410
  %61 = icmp eq i32 %60, 0, !dbg !10700
  br i1 %61, label %71, label %62, !dbg !10702

; <label>:62:                                     ; preds = %58
  %63 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 99, !dbg !10703
  %64 = load i8*, i8** %63, align 8, !dbg !10703, !tbaa !10706
  call void @llvm.dbg.value(metadata i8* %69, metadata !10637, metadata !DIExpression()), !dbg !10643
  store i8* null, i8** %63, align 8, !dbg !10707, !tbaa !10706
  call void @llvm.dbg.value(metadata i8* %69, metadata !10637, metadata !DIExpression()), !dbg !10643
  br label %102, !dbg !10708

; <label>:65:                                     ; preds = %54
  %66 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 65
  %67 = load i32, i32* %66, align 8, !dbg !10709, !tbaa !3410
  %68 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 99, !dbg !10703
  %69 = load i8*, i8** %68, align 8, !dbg !10703, !tbaa !10706
  call void @llvm.dbg.value(metadata i8* %69, metadata !10637, metadata !DIExpression()), !dbg !10643
  store i8* null, i8** %68, align 8, !dbg !10707, !tbaa !10706
  call void @llvm.dbg.value(metadata i8* %69, metadata !10637, metadata !DIExpression()), !dbg !10643
  %70 = icmp eq i32 %67, 0, !dbg !10711
  br i1 %70, label %71, label %102, !dbg !10708

; <label>:71:                                     ; preds = %58, %65
  %72 = phi i8* [ %69, %65 ], [ null, %58 ]
  %73 = phi i1 [ true, %65 ], [ false, %58 ]
  %74 = phi i32* [ %66, %65 ], [ %59, %58 ]
  tail call void @free_buf_options(%struct.file_buffer* nonnull %0, i32 1) #11, !dbg !10712
  %75 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 121, !dbg !10714
  store i32 0, i32* %75, align 8, !dbg !10715, !tbaa !6731
  %76 = load i32, i32* @p_tx, align 4, !dbg !10716, !tbaa !3060
  %77 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 132, !dbg !10717
  store i32 %76, i32* %77, align 8, !dbg !10718, !tbaa !7176
  %78 = load i8*, i8** @p_fenc, align 8, !dbg !10719, !tbaa !3115
  %79 = tail call i8* @vim_strsave(i8* %78) #11, !dbg !10720
  %80 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 93, !dbg !10721
  store i8* %79, i8** %80, align 8, !dbg !10722, !tbaa !10723
  %81 = load i8*, i8** @p_ffs, align 8, !dbg !10724, !tbaa !3115
  %82 = load i8, i8* %81, align 1, !dbg !10725, !tbaa !3150
  switch i8 %82, label %85 [
    i8 109, label %87
    i8 100, label %83
    i8 117, label %84
  ], !dbg !10726

; <label>:83:                                     ; preds = %71
  br label %87, !dbg !10727

; <label>:84:                                     ; preds = %71
  br label %87, !dbg !10729

; <label>:85:                                     ; preds = %71
  %86 = load i8*, i8** @p_ff, align 8, !dbg !10730, !tbaa !3115
  br label %87, !dbg !10731

; <label>:87:                                     ; preds = %71, %85, %84, %83
  %88 = phi i8* [ %86, %85 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i64 0, i64 0), %84 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), %83 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i64 0, i64 0), %71 ]
  %89 = tail call i8* @vim_strsave(i8* %88) #11, !dbg !10732
  %90 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 94
  store i8* %89, i8** %90, align 8, !tbaa !10733
  %91 = icmp eq i8* %89, null, !dbg !10734
  br i1 %91, label %96, label %92, !dbg !10736

; <label>:92:                                     ; preds = %87
  %93 = load i8, i8* %89, align 1, !dbg !10737, !tbaa !3150
  %94 = zext i8 %93 to i32, !dbg !10737
  %95 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 199, !dbg !10738
  store i32 %94, i32* %95, align 4, !dbg !10739, !tbaa !10740
  br label %96, !dbg !10741

; <label>:96:                                     ; preds = %87, %92
  %97 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10742, !tbaa !3115
  %98 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 74, !dbg !10743
  %99 = bitcast i8** %98 to i64*, !dbg !10744
  store i64 %97, i64* %99, align 8, !dbg !10744, !tbaa !10745
  %100 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 75, !dbg !10746
  %101 = bitcast i8** %100 to i64*, !dbg !10747
  store i64 %97, i64* %101, align 8, !dbg !10747, !tbaa !10748
  br label %105, !dbg !10749

; <label>:102:                                    ; preds = %62, %65
  %103 = phi i8* [ %64, %62 ], [ %69, %65 ]
  %104 = phi i32* [ %59, %62 ], [ %66, %65 ]
  tail call void @free_buf_options(%struct.file_buffer* nonnull %0, i32 0) #11, !dbg !10750
  br label %105

; <label>:105:                                    ; preds = %102, %96
  %106 = phi i8* [ %103, %102 ], [ %72, %96 ]
  %107 = phi i1 [ true, %102 ], [ %73, %96 ]
  %108 = phi i32* [ %104, %102 ], [ %74, %96 ]
  %109 = load i32, i32* @p_ai, align 4, !dbg !10751, !tbaa !3060
  %110 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 67, !dbg !10752
  store i32 %109, i32* %110, align 8, !dbg !10753, !tbaa !6895
  %111 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 0), align 16, !dbg !10754, !tbaa !3060
  %112 = sext i32 %111 to i64, !dbg !10754
  %113 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %112, i32 6, !dbg !10754
  %114 = bitcast %struct.sctx_T* %113 to i8*, !dbg !10754
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %26, i8* nonnull %114, i64 24, i32 8, i1 false), !dbg !10754, !tbaa.struct !10755
  %115 = load i32, i32* @p_ai_nopaste, align 4, !dbg !10756, !tbaa !3060
  %116 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 68, !dbg !10757
  store i32 %115, i32* %116, align 4, !dbg !10758, !tbaa !6898
  %117 = load i64, i64* @p_sw, align 8, !dbg !10759, !tbaa !4248
  %118 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 122, !dbg !10760
  store i64 %117, i64* %118, align 8, !dbg !10761, !tbaa !7623
  %119 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 70, !dbg !10762
  %120 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 70), align 8, !dbg !10762, !tbaa !3060
  %121 = sext i32 %120 to i64, !dbg !10762
  %122 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %121, i32 6, !dbg !10762
  %123 = bitcast %struct.sctx_T* %119 to i8*, !dbg !10762
  %124 = bitcast %struct.sctx_T* %122 to i8*, !dbg !10762
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %123, i8* nonnull %124, i64 24, i32 8, i1 false), !dbg !10762, !tbaa.struct !10755
  %125 = load i64, i64* @p_tw, align 8, !dbg !10763, !tbaa !4248
  %126 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 133, !dbg !10764
  store i64 %125, i64* %126, align 8, !dbg !10765, !tbaa !6880
  %127 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 76, !dbg !10766
  %128 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 76), align 16, !dbg !10766, !tbaa !3060
  %129 = sext i32 %128 to i64, !dbg !10766
  %130 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %129, i32 6, !dbg !10766
  %131 = bitcast %struct.sctx_T* %127 to i8*, !dbg !10766
  %132 = bitcast %struct.sctx_T* %130 to i8*, !dbg !10766
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %131, i8* nonnull %132, i64 24, i32 8, i1 false), !dbg !10766, !tbaa.struct !10755
  %133 = load i64, i64* @p_tw_nopaste, align 8, !dbg !10767, !tbaa !4248
  %134 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 135, !dbg !10768
  store i64 %133, i64* %134, align 8, !dbg !10769, !tbaa !6883
  %135 = load i64, i64* @p_tw_nobin, align 8, !dbg !10770, !tbaa !4248
  %136 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 134, !dbg !10771
  store i64 %135, i64* %136, align 8, !dbg !10772, !tbaa !8969
  %137 = load i64, i64* @p_wm, align 8, !dbg !10773, !tbaa !4248
  %138 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 136, !dbg !10774
  store i64 %137, i64* %138, align 8, !dbg !10775, !tbaa !6885
  %139 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 80, !dbg !10776
  %140 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 80), align 16, !dbg !10776, !tbaa !3060
  %141 = sext i32 %140 to i64, !dbg !10776
  %142 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %141, i32 6, !dbg !10776
  %143 = bitcast %struct.sctx_T* %139 to i8*, !dbg !10776
  %144 = bitcast %struct.sctx_T* %142 to i8*, !dbg !10776
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %143, i8* nonnull %144, i64 24, i32 8, i1 false), !dbg !10776, !tbaa.struct !10755
  %145 = load i64, i64* @p_wm_nopaste, align 8, !dbg !10777, !tbaa !4248
  %146 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 138, !dbg !10778
  store i64 %145, i64* %146, align 8, !dbg !10779, !tbaa !6888
  %147 = load i64, i64* @p_wm_nobin, align 8, !dbg !10780, !tbaa !4248
  %148 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 137, !dbg !10781
  store i64 %147, i64* %148, align 8, !dbg !10782, !tbaa !8973
  %149 = load i32, i32* @p_bin, align 4, !dbg !10783, !tbaa !3060
  %150 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 72, !dbg !10784
  store i32 %149, i32* %150, align 8, !dbg !10785, !tbaa !6813
  %151 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 8, !dbg !10786
  %152 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 8), align 16, !dbg !10786, !tbaa !3060
  %153 = sext i32 %152 to i64, !dbg !10786
  %154 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %153, i32 6, !dbg !10786
  %155 = bitcast %struct.sctx_T* %151 to i8*, !dbg !10786
  %156 = bitcast %struct.sctx_T* %154 to i8*, !dbg !10786
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %155, i8* nonnull %156, i64 24, i32 8, i1 false), !dbg !10786, !tbaa.struct !10755
  %157 = load i32, i32* @p_bomb, align 4, !dbg !10787, !tbaa !3060
  %158 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 73, !dbg !10788
  store i32 %157, i32* %158, align 4, !dbg !10789, !tbaa !10790
  %159 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 10, !dbg !10791
  %160 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 10), align 8, !dbg !10791, !tbaa !3060
  %161 = sext i32 %160 to i64, !dbg !10791
  %162 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %161, i32 6, !dbg !10791
  %163 = bitcast %struct.sctx_T* %159 to i8*, !dbg !10791
  %164 = bitcast %struct.sctx_T* %162 to i8*, !dbg !10791
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %163, i8* nonnull %164, i64 24, i32 8, i1 false), !dbg !10791, !tbaa.struct !10755
  %165 = load i32, i32* @p_fixeol, align 4, !dbg !10792, !tbaa !3060
  %166 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 89, !dbg !10793
  store i32 %165, i32* %166, align 4, !dbg !10794, !tbaa !10795
  %167 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 26, !dbg !10796
  %168 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 26), align 8, !dbg !10796, !tbaa !3060
  %169 = sext i32 %168 to i64, !dbg !10796
  %170 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %169, i32 6, !dbg !10796
  %171 = bitcast %struct.sctx_T* %167 to i8*, !dbg !10796
  %172 = bitcast %struct.sctx_T* %170 to i8*, !dbg !10796
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %171, i8* nonnull %172, i64 24, i32 8, i1 false), !dbg !10796, !tbaa.struct !10755
  %173 = load i32, i32* @p_et, align 4, !dbg !10797, !tbaa !3060
  %174 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 90, !dbg !10798
  store i32 %173, i32* %174, align 8, !dbg !10799, !tbaa !6900
  %175 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 28, !dbg !10800
  %176 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 28), align 16, !dbg !10800, !tbaa !3060
  %177 = sext i32 %176 to i64, !dbg !10800
  %178 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %177, i32 6, !dbg !10800
  %179 = bitcast %struct.sctx_T* %175 to i8*, !dbg !10800
  %180 = bitcast %struct.sctx_T* %178 to i8*, !dbg !10800
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %179, i8* nonnull %180, i64 24, i32 8, i1 false), !dbg !10800, !tbaa.struct !10755
  %181 = load i32, i32* @p_et_nobin, align 4, !dbg !10801, !tbaa !3060
  %182 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 91, !dbg !10802
  store i32 %181, i32* %182, align 4, !dbg !10803, !tbaa !8982
  %183 = load i32, i32* @p_et_nopaste, align 4, !dbg !10804, !tbaa !3060
  %184 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 92, !dbg !10805
  store i32 %183, i32* %184, align 8, !dbg !10806, !tbaa !6903
  %185 = load i32, i32* @p_ml, align 4, !dbg !10807, !tbaa !3060
  %186 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 115, !dbg !10808
  store i32 %185, i32* %186, align 8, !dbg !10809, !tbaa !8975
  %187 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 51, !dbg !10810
  %188 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 51), align 4, !dbg !10810, !tbaa !3060
  %189 = sext i32 %188 to i64, !dbg !10810
  %190 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %189, i32 6, !dbg !10810
  %191 = bitcast %struct.sctx_T* %187 to i8*, !dbg !10810
  %192 = bitcast %struct.sctx_T* %190 to i8*, !dbg !10810
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %191, i8* nonnull %192, i64 24, i32 8, i1 false), !dbg !10810, !tbaa.struct !10755
  %193 = load i32, i32* @p_ml_nobin, align 4, !dbg !10811, !tbaa !3060
  %194 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 116, !dbg !10812
  store i32 %193, i32* %194, align 4, !dbg !10813, !tbaa !8978
  %195 = load i32, i32* @p_inf, align 4, !dbg !10814, !tbaa !3060
  %196 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 98, !dbg !10815
  store i32 %195, i32* %196, align 8, !dbg !10816, !tbaa !10817
  %197 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 42, !dbg !10818
  %198 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 42), align 8, !dbg !10818, !tbaa !3060
  %199 = sext i32 %198 to i64, !dbg !10818
  %200 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %199, i32 6, !dbg !10818
  %201 = bitcast %struct.sctx_T* %197 to i8*, !dbg !10818
  %202 = bitcast %struct.sctx_T* %200 to i8*, !dbg !10818
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %201, i8* nonnull %202, i64 24, i32 8, i1 false), !dbg !10818, !tbaa.struct !10755
  %203 = load i32, i32* getelementptr inbounds (%struct.cmdmod_T, %struct.cmdmod_T* @cmdmod, i64 0, i32 0), align 8, !dbg !10819, !tbaa !4948
  %204 = and i32 %203, 8192, !dbg !10821
  %205 = icmp eq i32 %204, 0, !dbg !10821
  br i1 %205, label %208, label %206, !dbg !10822

; <label>:206:                                    ; preds = %105
  %207 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 128, !dbg !10823
  store i32 0, i32* %207, align 8, !dbg !10824, !tbaa !6836
  br label %211, !dbg !10825

; <label>:208:                                    ; preds = %105
  %209 = load i32, i32* @p_swf, align 4, !dbg !10826, !tbaa !3060
  %210 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 128, !dbg !10828
  store i32 %209, i32* %210, align 8, !dbg !10829, !tbaa !6836
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %201, i8* nonnull %202, i64 24, i32 8, i1 false), !dbg !10830, !tbaa.struct !10755
  br label %211

; <label>:211:                                    ; preds = %208, %206
  %212 = load i8*, i8** @p_cpt, align 8, !dbg !10831, !tbaa !3115
  %213 = tail call i8* @vim_strsave(i8* %212) #11, !dbg !10832
  %214 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 84, !dbg !10833
  store i8* %213, i8** %214, align 8, !dbg !10834, !tbaa !10835
  %215 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 19, !dbg !10836
  %216 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 19), align 4, !dbg !10836, !tbaa !3060
  %217 = sext i32 %216 to i64, !dbg !10836
  %218 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %217, i32 6, !dbg !10836
  %219 = bitcast %struct.sctx_T* %215 to i8*, !dbg !10836
  %220 = bitcast %struct.sctx_T* %218 to i8*, !dbg !10836
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %219, i8* nonnull %220, i64 24, i32 8, i1 false), !dbg !10836, !tbaa.struct !10755
  %221 = load i8*, i8** @p_cfu, align 8, !dbg !10837, !tbaa !3115
  %222 = tail call i8* @vim_strsave(i8* %221) #11, !dbg !10838
  %223 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 85, !dbg !10839
  store i8* %222, i8** %223, align 8, !dbg !10840, !tbaa !10841
  %224 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 22, !dbg !10842
  %225 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 22), align 8, !dbg !10842, !tbaa !3060
  %226 = sext i32 %225 to i64, !dbg !10842
  %227 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %226, i32 6, !dbg !10842
  %228 = bitcast %struct.sctx_T* %224 to i8*, !dbg !10842
  %229 = bitcast %struct.sctx_T* %227 to i8*, !dbg !10842
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %228, i8* nonnull %229, i64 24, i32 8, i1 false), !dbg !10842, !tbaa.struct !10755
  %230 = load i8*, i8** @p_ofu, align 8, !dbg !10843, !tbaa !3115
  %231 = tail call i8* @vim_strsave(i8* %230) #11, !dbg !10844
  %232 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 86, !dbg !10845
  store i8* %231, i8** %232, align 8, !dbg !10846, !tbaa !10847
  %233 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 55, !dbg !10848
  %234 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 55), align 4, !dbg !10848, !tbaa !3060
  %235 = sext i32 %234 to i64, !dbg !10848
  %236 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %235, i32 6, !dbg !10848
  %237 = bitcast %struct.sctx_T* %233 to i8*, !dbg !10848
  %238 = bitcast %struct.sctx_T* %236 to i8*, !dbg !10848
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %237, i8* nonnull %238, i64 24, i32 8, i1 false), !dbg !10848, !tbaa.struct !10755
  %239 = load i8*, i8** @p_tfu, align 8, !dbg !10849, !tbaa !3115
  %240 = tail call i8* @vim_strsave(i8* %239) #11, !dbg !10850
  %241 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 87, !dbg !10851
  store i8* %240, i8** %241, align 8, !dbg !10852, !tbaa !10853
  %242 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 72, !dbg !10854
  %243 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 72), align 16, !dbg !10854, !tbaa !3060
  %244 = sext i32 %243 to i64, !dbg !10854
  %245 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %244, i32 6, !dbg !10854
  %246 = bitcast %struct.sctx_T* %242 to i8*, !dbg !10854
  %247 = bitcast %struct.sctx_T* %245 to i8*, !dbg !10854
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %246, i8* nonnull %247, i64 24, i32 8, i1 false), !dbg !10854, !tbaa.struct !10755
  %248 = load i64, i64* @p_sts, align 8, !dbg !10855, !tbaa !4248
  %249 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 125, !dbg !10856
  store i64 %248, i64* %249, align 8, !dbg !10857, !tbaa !6890
  %250 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 68, !dbg !10858
  %251 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 68), align 16, !dbg !10858, !tbaa !3060
  %252 = sext i32 %251 to i64, !dbg !10858
  %253 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %252, i32 6, !dbg !10858
  %254 = bitcast %struct.sctx_T* %250 to i8*, !dbg !10858
  %255 = bitcast %struct.sctx_T* %253 to i8*, !dbg !10858
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %254, i8* nonnull %255, i64 24, i32 8, i1 false), !dbg !10858, !tbaa.struct !10755
  %256 = load i64, i64* @p_sts_nopaste, align 8, !dbg !10859, !tbaa !4248
  %257 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 126, !dbg !10860
  store i64 %256, i64* %257, align 8, !dbg !10861, !tbaa !6893
  %258 = load i8*, i8** @p_vsts, align 8, !dbg !10862, !tbaa !3115
  %259 = tail call i8* @vim_strsave(i8* %258) #11, !dbg !10863
  %260 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 139, !dbg !10864
  store i8* %259, i8** %260, align 8, !dbg !10865, !tbaa !4088
  %261 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 82, !dbg !10866
  %262 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 82), align 8, !dbg !10866, !tbaa !3060
  %263 = sext i32 %262 to i64, !dbg !10866
  %264 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %263, i32 6, !dbg !10866
  %265 = bitcast %struct.sctx_T* %261 to i8*, !dbg !10866
  %266 = bitcast %struct.sctx_T* %264 to i8*, !dbg !10866
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %265, i8* nonnull %266, i64 24, i32 8, i1 false), !dbg !10866, !tbaa.struct !10755
  %267 = load i8*, i8** @p_vsts, align 8, !dbg !10867, !tbaa !3115
  %268 = icmp eq i8* %267, null, !dbg !10867
  %269 = load i8*, i8** @empty_option, align 8, !dbg !10869
  %270 = icmp eq i8* %267, %269, !dbg !10870
  %271 = or i1 %268, %270, !dbg !10871
  %272 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 140
  br i1 %271, label %275, label %273, !dbg !10871

; <label>:273:                                    ; preds = %211
  %274 = tail call i32 @tabstop_set(i8* nonnull %267, i32** nonnull %272) #11, !dbg !10872
  br label %276, !dbg !10872

; <label>:275:                                    ; preds = %211
  store i32* null, i32** %272, align 8, !dbg !10873, !tbaa !4084
  br label %276

; <label>:276:                                    ; preds = %275, %273
  %277 = load i8*, i8** @p_vsts_nopaste, align 8, !dbg !10874, !tbaa !3115
  %278 = icmp eq i8* %277, null, !dbg !10874
  br i1 %278, label %281, label %279, !dbg !10874

; <label>:279:                                    ; preds = %276
  %280 = tail call i8* @vim_strsave(i8* nonnull %277) #11, !dbg !10875
  br label %281, !dbg !10874

; <label>:281:                                    ; preds = %276, %279
  %282 = phi i8* [ %280, %279 ], [ null, %276 ], !dbg !10874
  %283 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 141, !dbg !10876
  store i8* %282, i8** %283, align 8, !dbg !10877, !tbaa !6906
  %284 = load i32, i32* @p_sn, align 4, !dbg !10878, !tbaa !3060
  %285 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 123, !dbg !10879
  store i32 %284, i32* %285, align 8, !dbg !10880, !tbaa !10881
  %286 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 61, !dbg !10882
  %287 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 61), align 4, !dbg !10882, !tbaa !3060
  %288 = sext i32 %287 to i64, !dbg !10882
  %289 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %288, i32 6, !dbg !10882
  %290 = bitcast %struct.sctx_T* %286 to i8*, !dbg !10882
  %291 = bitcast %struct.sctx_T* %289 to i8*, !dbg !10882
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %290, i8* nonnull %291, i64 24, i32 8, i1 false), !dbg !10882, !tbaa.struct !10755
  %292 = load i8*, i8** @p_com, align 8, !dbg !10883, !tbaa !3115
  %293 = tail call i8* @vim_strsave(i8* %292) #11, !dbg !10884
  %294 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 82, !dbg !10885
  store i8* %293, i8** %294, align 8, !dbg !10886, !tbaa !10887
  %295 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 18, !dbg !10888
  %296 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 18), align 8, !dbg !10888, !tbaa !3060
  %297 = sext i32 %296 to i64, !dbg !10888
  %298 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %297, i32 6, !dbg !10888
  %299 = bitcast %struct.sctx_T* %295 to i8*, !dbg !10888
  %300 = bitcast %struct.sctx_T* %298 to i8*, !dbg !10888
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %299, i8* nonnull %300, i64 24, i32 8, i1 false), !dbg !10888, !tbaa.struct !10755
  %301 = load i8*, i8** @p_cms, align 8, !dbg !10889, !tbaa !3115
  %302 = tail call i8* @vim_strsave(i8* %301) #11, !dbg !10890
  %303 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 83, !dbg !10891
  store i8* %302, i8** %303, align 8, !dbg !10892, !tbaa !10893
  %304 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 17, !dbg !10894
  %305 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 17), align 4, !dbg !10894, !tbaa !3060
  %306 = sext i32 %305 to i64, !dbg !10894
  %307 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %306, i32 6, !dbg !10894
  %308 = bitcast %struct.sctx_T* %304 to i8*, !dbg !10894
  %309 = bitcast %struct.sctx_T* %307 to i8*, !dbg !10894
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %308, i8* nonnull %309, i64 24, i32 8, i1 false), !dbg !10894, !tbaa.struct !10755
  %310 = load i8*, i8** @p_fo, align 8, !dbg !10895, !tbaa !3115
  %311 = tail call i8* @vim_strsave(i8* %310) #11, !dbg !10896
  %312 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 96, !dbg !10897
  store i8* %311, i8** %312, align 8, !dbg !10898, !tbaa !10899
  %313 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 35, !dbg !10900
  %314 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 35), align 4, !dbg !10900, !tbaa !3060
  %315 = sext i32 %314 to i64, !dbg !10900
  %316 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %315, i32 6, !dbg !10900
  %317 = bitcast %struct.sctx_T* %313 to i8*, !dbg !10900
  %318 = bitcast %struct.sctx_T* %316 to i8*, !dbg !10900
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %317, i8* nonnull %318, i64 24, i32 8, i1 false), !dbg !10900, !tbaa.struct !10755
  %319 = load i8*, i8** @p_flp, align 8, !dbg !10901, !tbaa !3115
  %320 = tail call i8* @vim_strsave(i8* %319) #11, !dbg !10902
  %321 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 97, !dbg !10903
  store i8* %320, i8** %321, align 8, !dbg !10904, !tbaa !10905
  %322 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 34, !dbg !10906
  %323 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 34), align 8, !dbg !10906, !tbaa !3060
  %324 = sext i32 %323 to i64, !dbg !10906
  %325 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %324, i32 6, !dbg !10906
  %326 = bitcast %struct.sctx_T* %322 to i8*, !dbg !10906
  %327 = bitcast %struct.sctx_T* %325 to i8*, !dbg !10906
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %326, i8* nonnull %327, i64 24, i32 8, i1 false), !dbg !10906, !tbaa.struct !10755
  %328 = load i8*, i8** @p_nf, align 8, !dbg !10907, !tbaa !3115
  %329 = tail call i8* @vim_strsave(i8* %328) #11, !dbg !10908
  %330 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 118, !dbg !10909
  store i8* %329, i8** %330, align 8, !dbg !10910, !tbaa !10911
  %331 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 54, !dbg !10912
  %332 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 54), align 8, !dbg !10912, !tbaa !3060
  %333 = sext i32 %332 to i64, !dbg !10912
  %334 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %333, i32 6, !dbg !10912
  %335 = bitcast %struct.sctx_T* %331 to i8*, !dbg !10912
  %336 = bitcast %struct.sctx_T* %334 to i8*, !dbg !10912
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %335, i8* nonnull %336, i64 24, i32 8, i1 false), !dbg !10912, !tbaa.struct !10755
  %337 = load i8*, i8** @p_mps, align 8, !dbg !10913, !tbaa !3115
  %338 = tail call i8* @vim_strsave(i8* %337) #11, !dbg !10914
  %339 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 114, !dbg !10915
  store i8* %338, i8** %339, align 8, !dbg !10916, !tbaa !10917
  %340 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 53, !dbg !10918
  %341 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 53), align 4, !dbg !10918, !tbaa !3060
  %342 = sext i32 %341 to i64, !dbg !10918
  %343 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %342, i32 6, !dbg !10918
  %344 = bitcast %struct.sctx_T* %340 to i8*, !dbg !10918
  %345 = bitcast %struct.sctx_T* %343 to i8*, !dbg !10918
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %344, i8* nonnull %345, i64 24, i32 8, i1 false), !dbg !10918, !tbaa.struct !10755
  %346 = load i32, i32* @p_si, align 4, !dbg !10919, !tbaa !3060
  %347 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 124, !dbg !10920
  store i32 %346, i32* %347, align 4, !dbg !10921, !tbaa !10922
  %348 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 60, !dbg !10923
  %349 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 60), align 16, !dbg !10923, !tbaa !3060
  %350 = sext i32 %349 to i64, !dbg !10923
  %351 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %350, i32 6, !dbg !10923
  %352 = bitcast %struct.sctx_T* %348 to i8*, !dbg !10923
  %353 = bitcast %struct.sctx_T* %351 to i8*, !dbg !10923
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %352, i8* nonnull %353, i64 24, i32 8, i1 false), !dbg !10923, !tbaa.struct !10755
  %354 = load i32, i32* @p_ci, align 4, !dbg !10924, !tbaa !3060
  %355 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 71, !dbg !10925
  store i32 %354, i32* %355, align 4, !dbg !10926, !tbaa !10927
  %356 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 11, !dbg !10928
  %357 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 11), align 4, !dbg !10928, !tbaa !3060
  %358 = sext i32 %357 to i64, !dbg !10928
  %359 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %358, i32 6, !dbg !10928
  %360 = bitcast %struct.sctx_T* %356 to i8*, !dbg !10928
  %361 = bitcast %struct.sctx_T* %359 to i8*, !dbg !10928
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %360, i8* nonnull %361, i64 24, i32 8, i1 false), !dbg !10928, !tbaa.struct !10755
  %362 = load i32, i32* @p_cin, align 4, !dbg !10929, !tbaa !3060
  %363 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 78, !dbg !10930
  store i32 %362, i32* %363, align 8, !dbg !10931, !tbaa !10932
  %364 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 12, !dbg !10933
  %365 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 12), align 16, !dbg !10933, !tbaa !3060
  %366 = sext i32 %365 to i64, !dbg !10933
  %367 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %366, i32 6, !dbg !10933
  %368 = bitcast %struct.sctx_T* %364 to i8*, !dbg !10933
  %369 = bitcast %struct.sctx_T* %367 to i8*, !dbg !10933
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %368, i8* nonnull %369, i64 24, i32 8, i1 false), !dbg !10933, !tbaa.struct !10755
  %370 = load i8*, i8** @p_cink, align 8, !dbg !10934, !tbaa !3115
  %371 = tail call i8* @vim_strsave(i8* %370) #11, !dbg !10935
  %372 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 80, !dbg !10936
  store i8* %371, i8** %372, align 8, !dbg !10937, !tbaa !10938
  %373 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 13, !dbg !10939
  %374 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 13), align 4, !dbg !10939, !tbaa !3060
  %375 = sext i32 %374 to i64, !dbg !10939
  %376 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %375, i32 6, !dbg !10939
  %377 = bitcast %struct.sctx_T* %373 to i8*, !dbg !10939
  %378 = bitcast %struct.sctx_T* %376 to i8*, !dbg !10939
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %377, i8* nonnull %378, i64 24, i32 8, i1 false), !dbg !10939, !tbaa.struct !10755
  %379 = load i8*, i8** @p_cino, align 8, !dbg !10940, !tbaa !3115
  %380 = tail call i8* @vim_strsave(i8* %379) #11, !dbg !10941
  %381 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 79, !dbg !10942
  store i8* %380, i8** %381, align 8, !dbg !10943, !tbaa !10944
  %382 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 14, !dbg !10945
  %383 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 14), align 8, !dbg !10945, !tbaa !3060
  %384 = sext i32 %383 to i64, !dbg !10945
  %385 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %384, i32 6, !dbg !10945
  %386 = bitcast %struct.sctx_T* %382 to i8*, !dbg !10945
  %387 = bitcast %struct.sctx_T* %385 to i8*, !dbg !10945
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %386, i8* nonnull %387, i64 24, i32 8, i1 false), !dbg !10945, !tbaa.struct !10755
  %388 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10946, !tbaa !3115
  %389 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 95, !dbg !10947
  %390 = bitcast i8** %389 to i64*, !dbg !10948
  store i64 %388, i64* %390, align 8, !dbg !10948, !tbaa !10949
  %391 = load i32, i32* @p_pi, align 4, !dbg !10950, !tbaa !3060
  %392 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 119, !dbg !10951
  store i32 %391, i32* %392, align 8, !dbg !10952, !tbaa !10953
  %393 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 57, !dbg !10954
  %394 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 57), align 4, !dbg !10954, !tbaa !3060
  %395 = sext i32 %394 to i64, !dbg !10954
  %396 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %395, i32 6, !dbg !10954
  %397 = bitcast %struct.sctx_T* %393 to i8*, !dbg !10954
  %398 = bitcast %struct.sctx_T* %396 to i8*, !dbg !10954
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %397, i8* nonnull %398, i64 24, i32 8, i1 false), !dbg !10954, !tbaa.struct !10755
  %399 = load i8*, i8** @p_cinw, align 8, !dbg !10955, !tbaa !3115
  %400 = tail call i8* @vim_strsave(i8* %399) #11, !dbg !10956
  %401 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 81, !dbg !10957
  store i8* %400, i8** %401, align 8, !dbg !10958, !tbaa !10959
  %402 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 15, !dbg !10960
  %403 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 15), align 4, !dbg !10960, !tbaa !3060
  %404 = sext i32 %403 to i64, !dbg !10960
  %405 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %404, i32 6, !dbg !10960
  %406 = bitcast %struct.sctx_T* %402 to i8*, !dbg !10960
  %407 = bitcast %struct.sctx_T* %405 to i8*, !dbg !10960
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %406, i8* nonnull %407, i64 24, i32 8, i1 false), !dbg !10960, !tbaa.struct !10755
  %408 = load i32, i32* @p_lisp, align 4, !dbg !10961, !tbaa !3060
  %409 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 112, !dbg !10962
  store i32 %408, i32* %409, align 8, !dbg !10963, !tbaa !10964
  %410 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 47, !dbg !10965
  %411 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 47), align 4, !dbg !10965, !tbaa !3060
  %412 = sext i32 %411 to i64, !dbg !10965
  %413 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %412, i32 6, !dbg !10965
  %414 = bitcast %struct.sctx_T* %410 to i8*, !dbg !10965
  %415 = bitcast %struct.sctx_T* %413 to i8*, !dbg !10965
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %414, i8* nonnull %415, i64 24, i32 8, i1 false), !dbg !10965, !tbaa.struct !10755
  %416 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !10966, !tbaa !3115
  %417 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 130, !dbg !10967
  %418 = bitcast i8** %417 to i64*, !dbg !10968
  store i64 %416, i64* %418, align 8, !dbg !10968, !tbaa !10969
  %419 = load i64, i64* @p_smc, align 8, !dbg !10970, !tbaa !4248
  %420 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 129, !dbg !10971
  store i64 %419, i64* %420, align 8, !dbg !10972, !tbaa !10973
  %421 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 62, !dbg !10974
  %422 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 62), align 8, !dbg !10974, !tbaa !3060
  %423 = sext i32 %422 to i64, !dbg !10974
  %424 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %423, i32 6, !dbg !10974
  %425 = bitcast %struct.sctx_T* %421 to i8*, !dbg !10974
  %426 = bitcast %struct.sctx_T* %424 to i8*, !dbg !10974
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %425, i8* nonnull %426, i64 24, i32 8, i1 false), !dbg !10974, !tbaa.struct !10755
  %427 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, !dbg !10975
  %428 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, i32 41, !dbg !10976
  %429 = bitcast i8** %428 to i64*, !dbg !10977
  store i64 %416, i64* %429, align 8, !dbg !10977, !tbaa !10978
  %430 = load i8*, i8** @p_spc, align 8, !dbg !10979, !tbaa !3115
  %431 = tail call i8* @vim_strsave(i8* %430) #11, !dbg !10980
  %432 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, i32 34, !dbg !10981
  store i8* %431, i8** %432, align 8, !dbg !10982, !tbaa !10983
  %433 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 64, !dbg !10984
  %434 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 64), align 16, !dbg !10984, !tbaa !3060
  %435 = sext i32 %434 to i64, !dbg !10984
  %436 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %435, i32 6, !dbg !10984
  %437 = bitcast %struct.sctx_T* %433 to i8*, !dbg !10984
  %438 = bitcast %struct.sctx_T* %436 to i8*, !dbg !10984
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %437, i8* nonnull %438, i64 24, i32 8, i1 false), !dbg !10984, !tbaa.struct !10755
  %439 = tail call i8* @compile_cap_prog(%struct.synblock_T* nonnull %427) #11, !dbg !10985
  %440 = load i8*, i8** @p_spf, align 8, !dbg !10986, !tbaa !3115
  %441 = tail call i8* @vim_strsave(i8* %440) #11, !dbg !10987
  %442 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, i32 36, !dbg !10988
  store i8* %441, i8** %442, align 8, !dbg !10989, !tbaa !10990
  %443 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 65, !dbg !10991
  %444 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 65), align 4, !dbg !10991, !tbaa !3060
  %445 = sext i32 %444 to i64, !dbg !10991
  %446 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %445, i32 6, !dbg !10991
  %447 = bitcast %struct.sctx_T* %443 to i8*, !dbg !10991
  %448 = bitcast %struct.sctx_T* %446 to i8*, !dbg !10991
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %447, i8* nonnull %448, i64 24, i32 8, i1 false), !dbg !10991, !tbaa.struct !10755
  %449 = load i8*, i8** @p_spl, align 8, !dbg !10992, !tbaa !3115
  %450 = tail call i8* @vim_strsave(i8* %449) #11, !dbg !10993
  %451 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, i32 37, !dbg !10994
  store i8* %450, i8** %451, align 8, !dbg !10995, !tbaa !10996
  %452 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 66, !dbg !10997
  %453 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 66), align 8, !dbg !10997, !tbaa !3060
  %454 = sext i32 %453 to i64, !dbg !10997
  %455 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %454, i32 6, !dbg !10997
  %456 = bitcast %struct.sctx_T* %452 to i8*, !dbg !10997
  %457 = bitcast %struct.sctx_T* %455 to i8*, !dbg !10997
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %456, i8* nonnull %457, i64 24, i32 8, i1 false), !dbg !10997, !tbaa.struct !10755
  %458 = load i8*, i8** @p_spo, align 8, !dbg !10998, !tbaa !3115
  %459 = tail call i8* @vim_strsave(i8* %458) #11, !dbg !10999
  %460 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 221, i32 38, !dbg !11000
  store i8* %459, i8** %460, align 8, !dbg !11001, !tbaa !11002
  %461 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 67, !dbg !11003
  %462 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 67), align 4, !dbg !11003, !tbaa !3060
  %463 = sext i32 %462 to i64, !dbg !11003
  %464 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %463, i32 6, !dbg !11003
  %465 = bitcast %struct.sctx_T* %461 to i8*, !dbg !11003
  %466 = bitcast %struct.sctx_T* %464 to i8*, !dbg !11003
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %465, i8* nonnull %466, i64 24, i32 8, i1 false), !dbg !11003, !tbaa.struct !10755
  %467 = load i8*, i8** @p_inde, align 8, !dbg !11004, !tbaa !3115
  %468 = tail call i8* @vim_strsave(i8* %467) #11, !dbg !11005
  %469 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 104, !dbg !11006
  store i8* %468, i8** %469, align 8, !dbg !11007, !tbaa !11008
  %470 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 39, !dbg !11009
  %471 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 39), align 4, !dbg !11009, !tbaa !3060
  %472 = sext i32 %471 to i64, !dbg !11009
  %473 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %472, i32 6, !dbg !11009
  %474 = bitcast %struct.sctx_T* %470 to i8*, !dbg !11009
  %475 = bitcast %struct.sctx_T* %473 to i8*, !dbg !11009
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %474, i8* nonnull %475, i64 24, i32 8, i1 false), !dbg !11009, !tbaa.struct !10755
  %476 = load i8*, i8** @p_indk, align 8, !dbg !11010, !tbaa !3115
  %477 = tail call i8* @vim_strsave(i8* %476) #11, !dbg !11011
  %478 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 106, !dbg !11012
  store i8* %477, i8** %478, align 8, !dbg !11013, !tbaa !11014
  %479 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 40, !dbg !11015
  %480 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 40), align 16, !dbg !11015, !tbaa !3060
  %481 = sext i32 %480 to i64, !dbg !11015
  %482 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %481, i32 6, !dbg !11015
  %483 = bitcast %struct.sctx_T* %479 to i8*, !dbg !11015
  %484 = bitcast %struct.sctx_T* %482 to i8*, !dbg !11015
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %483, i8* nonnull %484, i64 24, i32 8, i1 false), !dbg !11015, !tbaa.struct !10755
  %485 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !11016, !tbaa !3115
  %486 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 107, !dbg !11017
  %487 = bitcast i8** %486 to i64*, !dbg !11018
  store i64 %485, i64* %487, align 8, !dbg !11018, !tbaa !8397
  %488 = load i8*, i8** @p_fex, align 8, !dbg !11019, !tbaa !3115
  %489 = tail call i8* @vim_strsave(i8* %488) #11, !dbg !11020
  %490 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 108, !dbg !11021
  store i8* %489, i8** %490, align 8, !dbg !11022, !tbaa !11023
  %491 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 32, !dbg !11024
  %492 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 32), align 16, !dbg !11024, !tbaa !3060
  %493 = sext i32 %492 to i64, !dbg !11024
  %494 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %493, i32 6, !dbg !11024
  %495 = bitcast %struct.sctx_T* %491 to i8*, !dbg !11024
  %496 = bitcast %struct.sctx_T* %494 to i8*, !dbg !11024
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %495, i8* nonnull %496, i64 24, i32 8, i1 false), !dbg !11024, !tbaa.struct !10755
  %497 = load i8*, i8** @p_key, align 8, !dbg !11025, !tbaa !3115
  %498 = tail call i8* @vim_strsave(i8* %497) #11, !dbg !11026
  %499 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 110, !dbg !11027
  store i8* %498, i8** %499, align 8, !dbg !11028, !tbaa !11029
  %500 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 44, !dbg !11030
  %501 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 44), align 16, !dbg !11030, !tbaa !3060
  %502 = sext i32 %501 to i64, !dbg !11030
  %503 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %502, i32 6, !dbg !11030
  %504 = bitcast %struct.sctx_T* %500 to i8*, !dbg !11030
  %505 = bitcast %struct.sctx_T* %503 to i8*, !dbg !11030
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %504, i8* nonnull %505, i64 24, i32 8, i1 false), !dbg !11030, !tbaa.struct !10755
  %506 = load i8*, i8** @p_sua, align 8, !dbg !11031, !tbaa !3115
  %507 = tail call i8* @vim_strsave(i8* %506) #11, !dbg !11032
  %508 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 127, !dbg !11033
  store i8* %507, i8** %508, align 8, !dbg !11034, !tbaa !11035
  %509 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 69, !dbg !11036
  %510 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 69), align 4, !dbg !11036, !tbaa !3060
  %511 = sext i32 %510 to i64, !dbg !11036
  %512 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %511, i32 6, !dbg !11036
  %513 = bitcast %struct.sctx_T* %509 to i8*, !dbg !11036
  %514 = bitcast %struct.sctx_T* %512 to i8*, !dbg !11036
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %513, i8* nonnull %514, i64 24, i32 8, i1 false), !dbg !11036, !tbaa.struct !10755
  %515 = load i8*, i8** @p_keymap, align 8, !dbg !11037, !tbaa !3115
  %516 = tail call i8* @vim_strsave(i8* %515) #11, !dbg !11038
  %517 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 144, !dbg !11039
  store i8* %516, i8** %517, align 8, !dbg !11040, !tbaa !11041
  %518 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 45, !dbg !11042
  %519 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 45), align 4, !dbg !11042, !tbaa !3060
  %520 = sext i32 %519 to i64, !dbg !11042
  %521 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %520, i32 6, !dbg !11042
  %522 = bitcast %struct.sctx_T* %518 to i8*, !dbg !11042
  %523 = bitcast %struct.sctx_T* %521 to i8*, !dbg !11042
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %522, i8* nonnull %523, i64 24, i32 8, i1 false), !dbg !11042, !tbaa.struct !10755
  %524 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 63, !dbg !11043
  %525 = load i16, i16* %524, align 8, !dbg !11044, !tbaa !11045
  %526 = or i16 %525, 1, !dbg !11044
  store i16 %526, i16* %524, align 8, !dbg !11044, !tbaa !11045
  %527 = load i64, i64* @p_twsl, align 8, !dbg !11046, !tbaa !4248
  %528 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 159, !dbg !11047
  store i64 %527, i64* %528, align 8, !dbg !11048, !tbaa !11049
  %529 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 81, !dbg !11050
  %530 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 81), align 4, !dbg !11050, !tbaa !3060
  %531 = sext i32 %530 to i64, !dbg !11050
  %532 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %531, i32 6, !dbg !11050
  %533 = bitcast %struct.sctx_T* %529 to i8*, !dbg !11050
  %534 = bitcast %struct.sctx_T* %532 to i8*, !dbg !11050
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %533, i8* nonnull %534, i64 24, i32 8, i1 false), !dbg !11050, !tbaa.struct !10755
  %535 = load i64, i64* @p_iminsert, align 8, !dbg !11051, !tbaa !4248
  %536 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 61, !dbg !11052
  store i64 %535, i64* %536, align 8, !dbg !11053, !tbaa !7308
  %537 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 37, !dbg !11054
  %538 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 37), align 4, !dbg !11054, !tbaa !3060
  %539 = sext i32 %538 to i64, !dbg !11054
  %540 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %539, i32 6, !dbg !11054
  %541 = bitcast %struct.sctx_T* %537 to i8*, !dbg !11054
  %542 = bitcast %struct.sctx_T* %540 to i8*, !dbg !11054
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %541, i8* nonnull %542, i64 24, i32 8, i1 false), !dbg !11054, !tbaa.struct !10755
  %543 = load i64, i64* @p_imsearch, align 8, !dbg !11055, !tbaa !4248
  %544 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 62, !dbg !11056
  store i64 %543, i64* %544, align 8, !dbg !11057, !tbaa !7907
  %545 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 38, !dbg !11058
  %546 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 38), align 8, !dbg !11058, !tbaa !3060
  %547 = sext i32 %546 to i64, !dbg !11058
  %548 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %547, i32 6, !dbg !11058
  %549 = bitcast %struct.sctx_T* %545 to i8*, !dbg !11058
  %550 = bitcast %struct.sctx_T* %548 to i8*, !dbg !11058
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %549, i8* nonnull %550, i64 24, i32 8, i1 false), !dbg !11058, !tbaa.struct !10755
  %551 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 150, !dbg !11059
  store i32 -1, i32* %551, align 8, !dbg !11060, !tbaa !3428
  %552 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 156, !dbg !11061
  store i64 -123456, i64* %552, align 8, !dbg !11062, !tbaa !3431
  %553 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !11063, !tbaa !3115
  %554 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 69, !dbg !11064
  %555 = bitcast i8** %554 to i64*, !dbg !11065
  store i64 %553, i64* %555, align 8, !dbg !11065, !tbaa !8357
  %556 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 70, !dbg !11066
  store i32 0, i32* %556, align 8, !dbg !11067, !tbaa !11068
  %557 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 145, !dbg !11069
  %558 = bitcast i8** %557 to i64*, !dbg !11070
  store i64 %553, i64* %558, align 8, !dbg !11070, !tbaa !8409
  %559 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 146, !dbg !11071
  %560 = bitcast i8** %559 to i64*, !dbg !11072
  store i64 %553, i64* %560, align 8, !dbg !11072, !tbaa !8415
  %561 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 147, !dbg !11073
  %562 = bitcast i8** %561 to i64*, !dbg !11074
  store i64 %553, i64* %562, align 8, !dbg !11074, !tbaa !8403
  %563 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 148, !dbg !11075
  %564 = bitcast i8** %563 to i64*, !dbg !11076
  store i64 %553, i64* %564, align 8, !dbg !11076, !tbaa !8323
  %565 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 111, !dbg !11077
  %566 = bitcast i8** %565 to i64*, !dbg !11078
  store i64 %553, i64* %566, align 8, !dbg !11078, !tbaa !8329
  %567 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 149, !dbg !11079
  %568 = bitcast i8** %567 to i64*, !dbg !11080
  store i64 %553, i64* %568, align 8, !dbg !11080, !tbaa !8335
  %569 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 151, !dbg !11081
  %570 = bitcast i8** %569 to i64*, !dbg !11082
  store i64 %553, i64* %570, align 8, !dbg !11082, !tbaa !8345
  %571 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 152, !dbg !11083
  %572 = bitcast i8** %571 to i64*, !dbg !11084
  store i64 %553, i64* %572, align 8, !dbg !11084, !tbaa !8351
  %573 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 153, !dbg !11085
  store i32 0, i32* %573, align 8, !dbg !11086, !tbaa !11087
  %574 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 100, !dbg !11088
  %575 = bitcast i8** %574 to i64*, !dbg !11089
  store i64 %553, i64* %575, align 8, !dbg !11089, !tbaa !8373
  %576 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 101, !dbg !11090
  %577 = bitcast i8** %576 to i64*, !dbg !11091
  store i64 %553, i64* %577, align 8, !dbg !11091, !tbaa !8379
  %578 = load i8*, i8** @p_inex, align 8, !dbg !11092, !tbaa !3115
  %579 = tail call i8* @vim_strsave(i8* %578) #11, !dbg !11093
  %580 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 102, !dbg !11094
  store i8* %579, i8** %580, align 8, !dbg !11095, !tbaa !11096
  %581 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 41, !dbg !11097
  %582 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 41), align 4, !dbg !11097, !tbaa !3060
  %583 = sext i32 %582 to i64, !dbg !11097
  %584 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %583, i32 6, !dbg !11097
  %585 = bitcast %struct.sctx_T* %581 to i8*, !dbg !11097
  %586 = bitcast %struct.sctx_T* %584 to i8*, !dbg !11097
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %585, i8* nonnull %586, i64 24, i32 8, i1 false), !dbg !11097, !tbaa.struct !10755
  %587 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !11098, !tbaa !3115
  %588 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 154, !dbg !11099
  %589 = bitcast i8** %588 to i64*, !dbg !11100
  store i64 %587, i64* %589, align 8, !dbg !11100, !tbaa !8385
  %590 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 155, !dbg !11101
  %591 = bitcast i8** %590 to i64*, !dbg !11102
  store i64 %587, i64* %591, align 8, !dbg !11102, !tbaa !8391
  %592 = load i8*, i8** @p_qe, align 8, !dbg !11103, !tbaa !3115
  %593 = tail call i8* @vim_strsave(i8* %592) #11, !dbg !11104
  %594 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 120, !dbg !11105
  store i8* %593, i8** %594, align 8, !dbg !11106, !tbaa !11107
  %595 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 58, !dbg !11108
  %596 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 58), align 8, !dbg !11108, !tbaa !3060
  %597 = sext i32 %596 to i64, !dbg !11108
  %598 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %597, i32 6, !dbg !11108
  %599 = bitcast %struct.sctx_T* %595 to i8*, !dbg !11108
  %600 = bitcast %struct.sctx_T* %598 to i8*, !dbg !11108
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %599, i8* nonnull %600, i64 24, i32 8, i1 false), !dbg !11108, !tbaa.struct !10755
  %601 = load i64, i64* bitcast (i8** @empty_option to i64*), align 8, !dbg !11109, !tbaa !3115
  %602 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 209, !dbg !11110
  %603 = bitcast i8** %602 to i64*, !dbg !11111
  store i64 %601, i64* %603, align 8, !dbg !11111, !tbaa !8421
  %604 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 211, !dbg !11112
  %605 = bitcast i8** %604 to i64*, !dbg !11113
  store i64 %601, i64* %605, align 8, !dbg !11113, !tbaa !8427
  %606 = load i32, i32* @p_udf, align 4, !dbg !11114, !tbaa !3060
  %607 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 157, !dbg !11115
  store i32 %606, i32* %607, align 8, !dbg !11116, !tbaa !6692
  %608 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 78, !dbg !11117
  %609 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 78), align 8, !dbg !11117, !tbaa !3060
  %610 = sext i32 %609 to i64, !dbg !11117
  %611 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %610, i32 6, !dbg !11117
  %612 = bitcast %struct.sctx_T* %608 to i8*, !dbg !11117
  %613 = bitcast %struct.sctx_T* %611 to i8*, !dbg !11117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %612, i8* nonnull %613, i64 24, i32 8, i1 false), !dbg !11117, !tbaa.struct !10755
  %614 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 158, !dbg !11118
  %615 = bitcast i8** %614 to i64*, !dbg !11119
  store i64 %601, i64* %615, align 8, !dbg !11119, !tbaa !8449
  %616 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 113, !dbg !11120
  %617 = bitcast i8** %616 to i64*, !dbg !11121
  store i64 %601, i64* %617, align 8, !dbg !11121, !tbaa !8455
  br i1 %107, label %618, label %632, !dbg !11122

; <label>:618:                                    ; preds = %281
  %619 = inttoptr i64 %601 to i8*, !dbg !11122
  %620 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 99, !dbg !11123
  store i8* %106, i8** %620, align 8, !dbg !11126, !tbaa !10706
  %621 = load i8*, i8** @p_vts, align 8, !dbg !11127, !tbaa !3115
  %622 = icmp eq i8* %621, null, !dbg !11127
  %623 = icmp eq i8* %621, %619, !dbg !11129
  %624 = or i1 %622, %623, !dbg !11130
  %625 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 143
  br i1 %624, label %631, label %626, !dbg !11130

; <label>:626:                                    ; preds = %618
  %627 = load i32*, i32** %625, align 8, !dbg !11131, !tbaa !4093
  %628 = icmp eq i32* %627, null, !dbg !11132
  br i1 %628, label %629, label %631, !dbg !11133

; <label>:629:                                    ; preds = %626
  %630 = tail call i32 @tabstop_set(i8* nonnull %621, i32** nonnull %625) #11, !dbg !11134
  call void @llvm.dbg.value(metadata i32 1, metadata !10639, metadata !DIExpression()), !dbg !10644
  br i1 %24, label %683, label %682, !dbg !11135

; <label>:631:                                    ; preds = %618, %626
  store i32* null, i32** %625, align 8, !dbg !11136, !tbaa !4093
  call void @llvm.dbg.value(metadata i32 1, metadata !10639, metadata !DIExpression()), !dbg !10644
  br i1 %24, label %687, label %682, !dbg !11135

; <label>:632:                                    ; preds = %281
  %633 = load i8*, i8** @p_isk, align 8, !dbg !11137, !tbaa !3115
  %634 = tail call i8* @vim_strsave(i8* %633) #11, !dbg !11139
  %635 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 99, !dbg !11140
  store i8* %634, i8** %635, align 8, !dbg !11141, !tbaa !10706
  %636 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 43, !dbg !11142
  %637 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 43), align 4, !dbg !11142, !tbaa !3060
  %638 = sext i32 %637 to i64, !dbg !11142
  %639 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %638, i32 6, !dbg !11142
  %640 = bitcast %struct.sctx_T* %636 to i8*, !dbg !11142
  %641 = bitcast %struct.sctx_T* %639 to i8*, !dbg !11142
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %640, i8* nonnull %641, i64 24, i32 8, i1 false), !dbg !11142, !tbaa.struct !10755
  call void @llvm.dbg.value(metadata i32 1, metadata !10639, metadata !DIExpression()), !dbg !10644
  %642 = load i64, i64* @p_ts, align 8, !dbg !11143, !tbaa !4248
  %643 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 131, !dbg !11144
  store i64 %642, i64* %643, align 8, !dbg !11145, !tbaa !7634
  %644 = load i8*, i8** @p_vts, align 8, !dbg !11146, !tbaa !3115
  %645 = tail call i8* @vim_strsave(i8* %644) #11, !dbg !11147
  %646 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 142, !dbg !11148
  store i8* %645, i8** %646, align 8, !dbg !11149, !tbaa !4097
  %647 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 83, !dbg !11150
  %648 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 83), align 4, !dbg !11150, !tbaa !3060
  %649 = sext i32 %648 to i64, !dbg !11150
  %650 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %649, i32 6, !dbg !11150
  %651 = bitcast %struct.sctx_T* %647 to i8*, !dbg !11150
  %652 = bitcast %struct.sctx_T* %650 to i8*, !dbg !11150
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %651, i8* nonnull %652, i64 24, i32 8, i1 false), !dbg !11150, !tbaa.struct !10755
  %653 = load i8*, i8** @p_vts, align 8, !dbg !11151, !tbaa !3115
  %654 = icmp eq i8* %653, null, !dbg !11151
  %655 = load i8*, i8** @empty_option, align 8, !dbg !11153
  %656 = icmp eq i8* %653, %655, !dbg !11154
  %657 = or i1 %654, %656, !dbg !11155
  %658 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 143
  br i1 %657, label %664, label %659, !dbg !11155

; <label>:659:                                    ; preds = %632
  %660 = load i32*, i32** %658, align 8, !dbg !11156, !tbaa !4093
  %661 = icmp eq i32* %660, null, !dbg !11157
  br i1 %661, label %662, label %664, !dbg !11158

; <label>:662:                                    ; preds = %659
  %663 = tail call i32 @tabstop_set(i8* nonnull %653, i32** nonnull %658) #11, !dbg !11159
  br label %665, !dbg !11159

; <label>:664:                                    ; preds = %632, %659
  store i32* null, i32** %658, align 8, !dbg !11160, !tbaa !4093
  br label %665

; <label>:665:                                    ; preds = %664, %662
  %666 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 214, !dbg !11161
  store i32 0, i32* %666, align 8, !dbg !11162, !tbaa !7681
  %667 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 75, !dbg !11163
  %668 = load i8*, i8** %667, align 8, !dbg !11163, !tbaa !10748
  %669 = load i8, i8* %668, align 1, !dbg !11165, !tbaa !3150
  %670 = icmp eq i8 %669, 104, !dbg !11166
  br i1 %670, label %671, label %672, !dbg !11167

; <label>:671:                                    ; preds = %665
  tail call void @clear_string_option(i8** nonnull %667) #11, !dbg !11168
  br label %672, !dbg !11168

; <label>:672:                                    ; preds = %665, %671
  %673 = load i32, i32* @p_ma, align 4, !dbg !11169, !tbaa !3060
  %674 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 117, !dbg !11170
  store i32 %673, i32* %674, align 8, !dbg !11171, !tbaa !6760
  %675 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 66, i64 50, !dbg !11172
  %676 = load i32, i32* getelementptr inbounds ([84 x i32], [84 x i32]* @buf_opt_idx, i64 0, i64 50), align 8, !dbg !11172, !tbaa !3060
  %677 = sext i32 %676 to i64, !dbg !11172
  %678 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %677, i32 6, !dbg !11172
  %679 = bitcast %struct.sctx_T* %675 to i8*, !dbg !11172
  %680 = bitcast %struct.sctx_T* %678 to i8*, !dbg !11172
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %679, i8* nonnull %680, i64 24, i32 8, i1 false), !dbg !11172, !tbaa.struct !10755
  call void @llvm.dbg.value(metadata i32 1, metadata !10639, metadata !DIExpression()), !dbg !10644
  br i1 %24, label %684, label %681, !dbg !11135

; <label>:681:                                    ; preds = %672
  tail call void @check_buf_options(%struct.file_buffer* nonnull %0) #11, !dbg !11173
  br label %685, !dbg !11174

; <label>:682:                                    ; preds = %2, %631, %629, %20
  tail call void @check_buf_options(%struct.file_buffer* %0) #11, !dbg !11173
  br label %688, !dbg !11174

; <label>:683:                                    ; preds = %629
  store i32 1, i32* %108, align 8, !dbg !11175, !tbaa !3410
  tail call void @check_buf_options(%struct.file_buffer* nonnull %0) #11, !dbg !11173
  br label %688, !dbg !11174

; <label>:684:                                    ; preds = %672
  store i32 1, i32* %108, align 8, !dbg !11175, !tbaa !3410
  tail call void @check_buf_options(%struct.file_buffer* nonnull %0) #11, !dbg !11173
  br label %685

; <label>:685:                                    ; preds = %684, %681
  %686 = tail call i32 @buf_init_chartab(%struct.file_buffer* nonnull %0, i32 0) #11, !dbg !11177
  br label %688, !dbg !11179

; <label>:687:                                    ; preds = %631
  store i32 1, i32* %108, align 8, !dbg !11175, !tbaa !3410
  tail call void @check_buf_options(%struct.file_buffer* nonnull %0) #11, !dbg !11173
  br label %688

; <label>:688:                                    ; preds = %683, %687, %682, %685
  ret void, !dbg !11180
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare void @free_buf_options(%struct.file_buffer*, i32) local_unnamed_addr #3

declare i32 @tabstop_set(i8*, i32**) local_unnamed_addr #3

declare i8* @compile_cap_prog(%struct.synblock_T*) local_unnamed_addr #3

declare i32 @buf_init_chartab(%struct.file_buffer*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @reset_modifiable() local_unnamed_addr #0 !dbg !11181 {
  %1 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11184, !tbaa !3115
  %2 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1, i64 0, i32 117, !dbg !11185
  store i32 0, i32* %2, align 8, !dbg !11186, !tbaa !6760
  store i32 0, i32* @p_ma, align 4, !dbg !11187, !tbaa !3060
  %3 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i64 0, i64 0)), !dbg !11188
  call void @llvm.dbg.value(metadata i32 %3, metadata !11183, metadata !DIExpression()), !dbg !11189
  %4 = icmp sgt i32 %3, -1, !dbg !11190
  br i1 %4, label %5, label %8, !dbg !11192

; <label>:5:                                      ; preds = %0
  %6 = sext i32 %3 to i64, !dbg !11193
  %7 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 5, i64 0, !dbg !11193
  store i8* null, i8** %7, align 8, !dbg !11194, !tbaa !3115
  br label %8, !dbg !11193

; <label>:8:                                      ; preds = %5, %0
  ret void, !dbg !11195
}

; Function Attrs: norecurse nounwind uwtable
define void @set_iminsert_global() local_unnamed_addr #9 !dbg !11196 {
  %1 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11197, !tbaa !3115
  %2 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1, i64 0, i32 61, !dbg !11198
  %3 = load i64, i64* %2, align 8, !dbg !11198, !tbaa !7308
  store i64 %3, i64* @p_iminsert, align 8, !dbg !11199, !tbaa !4248
  ret void, !dbg !11200
}

; Function Attrs: norecurse nounwind uwtable
define void @set_imsearch_global() local_unnamed_addr #9 !dbg !11201 {
  %1 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !11202, !tbaa !3115
  %2 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %1, i64 0, i32 62, !dbg !11203
  %3 = load i64, i64* %2, align 8, !dbg !11203, !tbaa !7907
  store i64 %3, i64* @p_imsearch, align 8, !dbg !11204, !tbaa !4248
  ret void, !dbg !11205
}

; Function Attrs: nounwind uwtable
define void @set_context_in_set_cmd(%struct.expand* nocapture, i8*, i32) local_unnamed_addr #0 !dbg !11206 {
  call void @llvm.dbg.value(metadata %struct.expand* %0, metadata !11210, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.value(metadata i8* %1, metadata !11211, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i32 %2, metadata !11212, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i64 0, metadata !11214, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 0, metadata !11215, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i32 0, metadata !11218, metadata !DIExpression()), !dbg !11225
  store i32 %2, i32* @expand_option_flags, align 4, !dbg !11226, !tbaa !3060
  %4 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 1, !dbg !11227
  store i32 4, i32* %4, align 8, !dbg !11228, !tbaa !11229
  %5 = load i8, i8* %1, align 1, !dbg !11231, !tbaa !3150
  %6 = icmp eq i8 %5, 0, !dbg !11233
  br i1 %6, label %7, label %9, !dbg !11234

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 0, !dbg !11235
  store i8* %1, i8** %8, align 8, !dbg !11237, !tbaa !11238
  br label %279, !dbg !11239

; <label>:9:                                      ; preds = %3
  %10 = tail call i64 @strlen(i8* nonnull %1) #12, !dbg !11240
  %11 = getelementptr inbounds i8, i8* %1, i64 %10, !dbg !11241
  %12 = getelementptr inbounds i8, i8* %11, i64 -1, !dbg !11242
  call void @llvm.dbg.value(metadata i8* %12, metadata !11216, metadata !DIExpression()), !dbg !11243
  %13 = load i8, i8* %12, align 1, !dbg !11244, !tbaa !3150
  %14 = icmp eq i8 %13, 32, !dbg !11246
  br i1 %14, label %15, label %22, !dbg !11247

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds i8, i8* %12, i64 -1, !dbg !11248
  %17 = load i8, i8* %16, align 1, !dbg !11249, !tbaa !3150
  %18 = icmp eq i8 %17, 92, !dbg !11250
  br i1 %18, label %22, label %19, !dbg !11251

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !11252
  %21 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 0, !dbg !11254
  store i8* %20, i8** %21, align 8, !dbg !11255, !tbaa !11238
  br label %279, !dbg !11256

; <label>:22:                                     ; preds = %15, %9
  call void @llvm.dbg.value(metadata i8* %12, metadata !11216, metadata !DIExpression()), !dbg !11243
  %23 = icmp ugt i8* %12, %1, !dbg !11257
  br i1 %23, label %24, label %52, !dbg !11258

; <label>:24:                                     ; preds = %22
  br label %25, !dbg !11259

; <label>:25:                                     ; preds = %24, %50
  %26 = phi i8 [ %51, %50 ], [ %13, %24 ], !dbg !11262
  %27 = phi i8* [ %48, %50 ], [ %12, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !11217, metadata !DIExpression()), !dbg !11263
  call void @llvm.dbg.value(metadata i8* %27, metadata !11216, metadata !DIExpression()), !dbg !11243
  switch i8 %26, label %36 [
    i8 32, label %28
    i8 44, label %28
  ], !dbg !11259

; <label>:28:                                     ; preds = %25, %25
  br label %31, !dbg !11264

; <label>:29:                                     ; preds = %31
  call void @llvm.dbg.value(metadata i8* %33, metadata !11217, metadata !DIExpression()), !dbg !11263
  %30 = icmp ugt i8* %33, %1, !dbg !11266
  br i1 %30, label %31, label %36, !dbg !11267, !llvm.loop !11268

; <label>:31:                                     ; preds = %28, %29
  %32 = phi i8* [ %33, %29 ], [ %27, %28 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !11217, metadata !DIExpression()), !dbg !11263
  %33 = getelementptr inbounds i8, i8* %32, i64 -1, !dbg !11264
  %34 = load i8, i8* %33, align 1, !dbg !11271, !tbaa !3150
  %35 = icmp eq i8 %34, 92, !dbg !11272
  call void @llvm.dbg.value(metadata i8* %33, metadata !11217, metadata !DIExpression()), !dbg !11263
  br i1 %35, label %29, label %36, !dbg !11269

; <label>:36:                                     ; preds = %29, %31, %25
  %37 = phi i8* [ %27, %25 ], [ %33, %29 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !11217, metadata !DIExpression()), !dbg !11263
  %38 = icmp eq i8 %26, 32, !dbg !11273
  br i1 %38, label %39, label %47, !dbg !11275

; <label>:39:                                     ; preds = %36
  %40 = ptrtoint i8* %27 to i64, !dbg !11276
  %41 = ptrtoint i8* %37 to i64, !dbg !11276
  %42 = sub i64 %40, %41, !dbg !11276
  %43 = and i64 %42, 1, !dbg !11277
  %44 = icmp eq i64 %43, 0, !dbg !11278
  br i1 %44, label %45, label %47, !dbg !11279

; <label>:45:                                     ; preds = %39
  %46 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !11280
  call void @llvm.dbg.value(metadata i8* %46, metadata !11216, metadata !DIExpression()), !dbg !11243
  br label %52, !dbg !11282

; <label>:47:                                     ; preds = %39, %36
  %48 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !11283
  call void @llvm.dbg.value(metadata i8* %48, metadata !11216, metadata !DIExpression()), !dbg !11243
  %49 = icmp ugt i8* %48, %1, !dbg !11257
  br i1 %49, label %50, label %52, !dbg !11258, !llvm.loop !11284

; <label>:50:                                     ; preds = %47
  %51 = load i8, i8* %48, align 1, !dbg !11262, !tbaa !3150
  br label %25, !dbg !11258

; <label>:52:                                     ; preds = %47, %22, %45
  %53 = phi i8* [ %46, %45 ], [ %12, %22 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !11216, metadata !DIExpression()), !dbg !11243
  %54 = tail call i32 @strncmp(i8* nonnull %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i64 2) #12, !dbg !11286
  %55 = icmp eq i32 %54, 0, !dbg !11288
  br i1 %55, label %56, label %61, !dbg !11289

; <label>:56:                                     ; preds = %52
  %57 = tail call i32 @strncmp(i8* nonnull %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i64 6) #12, !dbg !11290
  %58 = icmp eq i32 %57, 0, !dbg !11291
  br i1 %58, label %61, label %59, !dbg !11292

; <label>:59:                                     ; preds = %56
  store i32 5, i32* %4, align 8, !dbg !11293, !tbaa !11229
  %60 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !11295
  call void @llvm.dbg.value(metadata i8* %60, metadata !11216, metadata !DIExpression()), !dbg !11243
  br label %61, !dbg !11296

; <label>:61:                                     ; preds = %56, %59, %52
  %62 = phi i8* [ %60, %59 ], [ %53, %56 ], [ %53, %52 ]
  call void @llvm.dbg.value(metadata i8* %62, metadata !11216, metadata !DIExpression()), !dbg !11243
  %63 = tail call i32 @strncmp(i8* nonnull %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i64 3) #12, !dbg !11297
  %64 = icmp eq i32 %63, 0, !dbg !11299
  br i1 %64, label %65, label %67, !dbg !11300

; <label>:65:                                     ; preds = %61
  store i32 5, i32* %4, align 8, !dbg !11301, !tbaa !11229
  %66 = getelementptr inbounds i8, i8* %62, i64 3, !dbg !11303
  call void @llvm.dbg.value(metadata i8* %66, metadata !11216, metadata !DIExpression()), !dbg !11243
  br label %67, !dbg !11304

; <label>:67:                                     ; preds = %65, %61
  %68 = phi i8* [ %66, %65 ], [ %62, %61 ]
  call void @llvm.dbg.value(metadata i8* %68, metadata !11216, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.value(metadata i8* %68, metadata !11211, metadata !DIExpression()), !dbg !11221
  %69 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 0, !dbg !11305
  store i8* %68, i8** %69, align 8, !dbg !11306, !tbaa !11238
  %70 = load i8, i8* %68, align 1, !dbg !11307, !tbaa !3150
  switch i8 %70, label %108 [
    i8 60, label %71
    i8 116, label %90
  ], !dbg !11309

; <label>:71:                                     ; preds = %67
  br label %72, !dbg !11310

; <label>:72:                                     ; preds = %71, %75
  %73 = phi i8 [ %77, %75 ], [ %70, %71 ], !dbg !11312
  %74 = phi i8* [ %76, %75 ], [ %68, %71 ]
  call void @llvm.dbg.value(metadata i8* %74, metadata !11216, metadata !DIExpression()), !dbg !11243
  switch i8 %73, label %75 [
    i8 62, label %78
    i8 0, label %279
  ], !dbg !11310

; <label>:75:                                     ; preds = %72
  %76 = getelementptr inbounds i8, i8* %74, i64 1, !dbg !11313
  %77 = load i8, i8* %76, align 1, !dbg !11312, !tbaa !3150
  br label %72, !dbg !11310, !llvm.loop !11315

; <label>:78:                                     ; preds = %72
  %79 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !11317
  %80 = tail call i32 @get_special_key_code(i8* nonnull %79) #11, !dbg !11318
  call void @llvm.dbg.value(metadata i32 %80, metadata !11219, metadata !DIExpression()), !dbg !11319
  %81 = icmp eq i32 %80, 0, !dbg !11320
  br i1 %81, label %82, label %83, !dbg !11322

; <label>:82:                                     ; preds = %78
  store i32 0, i32* %4, align 8, !dbg !11323, !tbaa !11229
  br label %279, !dbg !11325

; <label>:83:                                     ; preds = %78
  %84 = getelementptr inbounds i8, i8* %74, i64 1, !dbg !11326
  call void @llvm.dbg.value(metadata i8* %84, metadata !11216, metadata !DIExpression()), !dbg !11243
  %85 = load i8, i8* %84, align 1, !dbg !11327, !tbaa !3150
  call void @llvm.dbg.value(metadata i32 1, metadata !11218, metadata !DIExpression()), !dbg !11225
  %86 = sub nsw i32 0, %80, !dbg !11328
  %87 = trunc i32 %86 to i8, !dbg !11328
  store i8 %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @expand_option_name, i64 0, i64 2), align 1, !dbg !11329, !tbaa !3150
  %88 = lshr i32 %86, 8, !dbg !11330
  %89 = trunc i32 %88 to i8, !dbg !11330
  br label %155, !dbg !11331

; <label>:90:                                     ; preds = %67
  %91 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !11332
  %92 = load i8, i8* %91, align 1, !dbg !11332, !tbaa !3150
  %93 = icmp eq i8 %92, 95, !dbg !11335
  br i1 %93, label %94, label %108, !dbg !11336

; <label>:94:                                     ; preds = %90
  %95 = getelementptr inbounds i8, i8* %68, i64 2, !dbg !11337
  call void @llvm.dbg.value(metadata i8* %95, metadata !11216, metadata !DIExpression()), !dbg !11243
  %96 = load i8, i8* %95, align 1, !dbg !11339, !tbaa !3150
  %97 = icmp eq i8 %96, 0, !dbg !11341
  %98 = getelementptr inbounds i8, i8* %68, i64 3, !dbg !11342
  %99 = select i1 %97, i8* %95, i8* %98, !dbg !11343
  call void @llvm.dbg.value(metadata i8* %99, metadata !11216, metadata !DIExpression()), !dbg !11243
  %100 = load i8, i8* %99, align 1, !dbg !11344, !tbaa !3150
  %101 = icmp eq i8 %100, 0, !dbg !11346
  br i1 %101, label %279, label %102, !dbg !11347

; <label>:102:                                    ; preds = %94
  %103 = getelementptr inbounds i8, i8* %99, i64 1, !dbg !11348
  call void @llvm.dbg.value(metadata i8* %103, metadata !11216, metadata !DIExpression()), !dbg !11243
  %104 = load i8, i8* %103, align 1, !dbg !11349, !tbaa !3150
  call void @llvm.dbg.value(metadata i32 1, metadata !11218, metadata !DIExpression()), !dbg !11225
  %105 = getelementptr inbounds i8, i8* %99, i64 -1, !dbg !11350
  %106 = load i8, i8* %105, align 1, !dbg !11350, !tbaa !3150
  store i8 %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @expand_option_name, i64 0, i64 2), align 1, !dbg !11351, !tbaa !3150
  %107 = load i8, i8* %99, align 1, !dbg !11352, !tbaa !3150
  br label %155, !dbg !11353

; <label>:108:                                    ; preds = %67, %90
  call void @llvm.dbg.value(metadata i8* %68, metadata !11216, metadata !DIExpression()), !dbg !11243
  %109 = zext i8 %70 to i32, !dbg !11354
  %110 = and i32 %109, 223, !dbg !11354
  %111 = add nsw i32 %110, -65, !dbg !11354
  %112 = icmp ult i32 %111, 26, !dbg !11354
  %113 = add nsw i32 %109, -48, !dbg !11354
  %114 = icmp ult i32 %113, 10, !dbg !11354
  %115 = or i1 %114, %112, !dbg !11354
  %116 = icmp eq i8 %70, 95, !dbg !11356
  %117 = or i1 %116, %115, !dbg !11354
  %118 = icmp eq i8 %70, 42, !dbg !11357
  %119 = or i1 %118, %117, !dbg !11354
  call void @llvm.dbg.value(metadata i8* %68, metadata !11216, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11243
  br i1 %119, label %120, label %136, !dbg !11354, !llvm.loop !11358

; <label>:120:                                    ; preds = %108
  br label %121, !dbg !11360

; <label>:121:                                    ; preds = %120, %121
  %122 = phi i8* [ %123, %121 ], [ %68, %120 ]
  %123 = getelementptr inbounds i8, i8* %122, i64 1, !dbg !11360
  %124 = load i8, i8* %123, align 1, !dbg !11354, !tbaa !3150
  call void @llvm.dbg.value(metadata i8* %123, metadata !11216, metadata !DIExpression()), !dbg !11243
  %125 = zext i8 %124 to i32, !dbg !11354
  %126 = and i32 %125, 223, !dbg !11354
  %127 = add nsw i32 %126, -65, !dbg !11354
  %128 = icmp ult i32 %127, 26, !dbg !11354
  %129 = add nsw i32 %125, -48, !dbg !11354
  %130 = icmp ult i32 %129, 10, !dbg !11354
  %131 = or i1 %130, %128, !dbg !11354
  %132 = icmp eq i8 %124, 95, !dbg !11356
  %133 = or i1 %132, %131, !dbg !11354
  %134 = icmp eq i8 %124, 42, !dbg !11357
  %135 = or i1 %134, %133, !dbg !11354
  call void @llvm.dbg.value(metadata i8* %123, metadata !11216, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11243
  br i1 %135, label %121, label %136, !dbg !11354, !llvm.loop !11358

; <label>:136:                                    ; preds = %121, %108
  %137 = phi i8 [ %70, %108 ], [ %124, %121 ]
  %138 = phi i8* [ %68, %108 ], [ %123, %121 ]
  %139 = icmp eq i8 %137, 0, !dbg !11361
  br i1 %139, label %279, label %140, !dbg !11363

; <label>:140:                                    ; preds = %136
  store i8 0, i8* %138, align 1, !dbg !11364, !tbaa !3150
  %141 = tail call i32 @findoption(i8* %68), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %141, metadata !11215, metadata !DIExpression()), !dbg !11224
  store i8 %137, i8* %138, align 1, !dbg !11366, !tbaa !3150
  %142 = icmp eq i32 %141, -1, !dbg !11367
  br i1 %142, label %148, label %143, !dbg !11369

; <label>:143:                                    ; preds = %140
  %144 = sext i32 %141 to i64, !dbg !11370
  %145 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %144, i32 3, !dbg !11371
  %146 = load i8*, i8** %145, align 8, !dbg !11371, !tbaa !3461
  %147 = icmp eq i8* %146, null, !dbg !11372
  br i1 %147, label %148, label %149, !dbg !11373

; <label>:148:                                    ; preds = %143, %140
  store i32 0, i32* %4, align 8, !dbg !11374, !tbaa !11229
  br label %279, !dbg !11376

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %144, i32 2, !dbg !11377
  %151 = load i64, i64* %150, align 16, !dbg !11377, !tbaa !3107
  call void @llvm.dbg.value(metadata i64 %151, metadata !11214, metadata !DIExpression()), !dbg !11223
  %152 = and i64 %151, 1, !dbg !11378
  %153 = icmp eq i64 %152, 0, !dbg !11378
  br i1 %153, label %159, label %154, !dbg !11380

; <label>:154:                                    ; preds = %149
  store i32 0, i32* %4, align 8, !dbg !11381, !tbaa !11229
  br label %279, !dbg !11383

; <label>:155:                                    ; preds = %83, %102
  %156 = phi i8 [ %107, %102 ], [ %89, %83 ]
  %157 = phi i8 [ %104, %102 ], [ %85, %83 ]
  %158 = phi i8* [ %103, %102 ], [ %84, %83 ]
  store i8 %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @expand_option_name, i64 0, i64 3), align 1, !tbaa !3150
  br label %159

; <label>:159:                                    ; preds = %155, %149
  %160 = phi i8 [ %137, %149 ], [ %157, %155 ]
  %161 = phi i64 [ %151, %149 ], [ 0, %155 ]
  %162 = phi i32 [ %141, %149 ], [ 0, %155 ]
  %163 = phi i8* [ %138, %149 ], [ %158, %155 ]
  %164 = phi i32 [ 0, %149 ], [ 1, %155 ]
  %165 = zext i8 %160 to i32
  call void @llvm.dbg.value(metadata i32 %164, metadata !11218, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i8* %163, metadata !11216, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.value(metadata i32 %162, metadata !11215, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i64 %161, metadata !11214, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %165, metadata !11213, metadata !DIExpression()), !dbg !11384
  switch i8 %160, label %172 [
    i8 94, label %166
    i8 45, label %166
    i8 43, label %166
  ], !dbg !11385

; <label>:166:                                    ; preds = %159, %159, %159
  %167 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !11387
  %168 = load i8, i8* %167, align 1, !dbg !11387, !tbaa !3150
  %169 = icmp eq i8 %168, 61, !dbg !11388
  %170 = select i1 %169, i32 61, i32 %165, !dbg !11389
  %171 = select i1 %169, i8* %167, i8* %163, !dbg !11389
  br label %172, !dbg !11389

; <label>:172:                                    ; preds = %166, %159
  %173 = phi i32 [ %165, %159 ], [ %170, %166 ]
  %174 = phi i8* [ %163, %159 ], [ %171, %166 ]
  call void @llvm.dbg.value(metadata i8* %174, metadata !11216, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.value(metadata i32 %173, metadata !11213, metadata !DIExpression()), !dbg !11384
  switch i32 %173, label %178 [
    i32 61, label %175
    i32 58, label %175
  ], !dbg !11390

; <label>:175:                                    ; preds = %172, %172
  %176 = load i32, i32* %4, align 8, !dbg !11392, !tbaa !11229
  %177 = icmp eq i32 %176, 5, !dbg !11393
  br i1 %177, label %178, label %179, !dbg !11394

; <label>:178:                                    ; preds = %172, %175
  store i32 -2, i32* %4, align 8, !dbg !11395, !tbaa !11229
  br label %279, !dbg !11397

; <label>:179:                                    ; preds = %175
  %180 = getelementptr inbounds i8, i8* %174, i64 1, !dbg !11398
  %181 = load i8, i8* %180, align 1, !dbg !11398, !tbaa !3150
  %182 = icmp eq i8 %181, 0, !dbg !11400
  br i1 %182, label %183, label %186, !dbg !11401

; <label>:183:                                    ; preds = %179
  store i32 7, i32* %4, align 8, !dbg !11402, !tbaa !11229
  %184 = icmp eq i32 %164, 0, !dbg !11404
  %185 = select i1 %184, i32 %162, i32 -1
  store i32 %185, i32* @expand_option_idx, align 4, !tbaa !3060
  store i8* %180, i8** %69, align 8, !dbg !11406, !tbaa !11238
  br label %279, !dbg !11407

; <label>:186:                                    ; preds = %179
  store i32 0, i32* %4, align 8, !dbg !11408, !tbaa !11229
  %187 = icmp eq i32 %164, 0, !dbg !11409
  %188 = and i64 %161, 2, !dbg !11411
  %189 = icmp eq i64 %188, 0, !dbg !11411
  %190 = and i1 %189, %187, !dbg !11412
  br i1 %190, label %191, label %279, !dbg !11412

; <label>:191:                                    ; preds = %186
  store i8* %180, i8** %69, align 8, !dbg !11413, !tbaa !11238
  %192 = and i64 %161, 16, !dbg !11414
  %193 = icmp eq i64 %192, 0, !dbg !11414
  br i1 %193, label %224, label %194, !dbg !11416

; <label>:194:                                    ; preds = %191
  %195 = sext i32 %162 to i64, !dbg !11417
  %196 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %195, i32 3, !dbg !11419
  %197 = load i8*, i8** %196, align 8, !dbg !11419, !tbaa !3461
  call void @llvm.dbg.value(metadata i8* %197, metadata !11216, metadata !DIExpression()), !dbg !11243
  %198 = icmp eq i8* %197, bitcast (i8** @p_bdir to i8*), !dbg !11420
  %199 = icmp eq i8* %197, bitcast (i8** @p_dir to i8*), !dbg !11422
  %200 = or i1 %198, %199, !dbg !11423
  %201 = icmp eq i8* %197, bitcast (i8** @p_path to i8*), !dbg !11424
  %202 = or i1 %201, %200, !dbg !11423
  %203 = icmp eq i8* %197, bitcast (i8** @p_pp to i8*), !dbg !11425
  %204 = or i1 %203, %202, !dbg !11423
  %205 = icmp eq i8* %197, bitcast (i8** @p_rtp to i8*), !dbg !11426
  %206 = or i1 %205, %204, !dbg !11423
  %207 = icmp eq i8* %197, bitcast (i8** @p_cdpath to i8*), !dbg !11427
  %208 = or i1 %207, %206, !dbg !11423
  %209 = icmp eq i8* %197, bitcast (i8** @p_vdir to i8*), !dbg !11428
  %210 = or i1 %209, %208, !dbg !11423
  br i1 %210, label %211, label %216, !dbg !11423

; <label>:211:                                    ; preds = %194
  store i32 3, i32* %4, align 8, !dbg !11429, !tbaa !11229
  %212 = or i1 %201, %207, !dbg !11431
  %213 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 5
  br i1 %212, label %214, label %215, !dbg !11431

; <label>:214:                                    ; preds = %211
  store i32 2, i32* %213, align 8, !dbg !11433, !tbaa !11434
  br label %224, !dbg !11435

; <label>:215:                                    ; preds = %211
  store i32 1, i32* %213, align 8, !dbg !11436, !tbaa !11434
  br label %224

; <label>:216:                                    ; preds = %194
  %217 = icmp eq i8* %197, bitcast (i8** @p_ft to i8*), !dbg !11437
  br i1 %217, label %218, label %219, !dbg !11439

; <label>:218:                                    ; preds = %216
  store i32 37, i32* %4, align 8, !dbg !11440, !tbaa !11229
  br label %224, !dbg !11442

; <label>:219:                                    ; preds = %216
  store i32 2, i32* %4, align 8, !dbg !11443, !tbaa !11229
  %220 = icmp eq i8* %197, bitcast (i8** @p_tags to i8*), !dbg !11445
  %221 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 5
  br i1 %220, label %222, label %223, !dbg !11447

; <label>:222:                                    ; preds = %219
  store i32 2, i32* %221, align 8, !dbg !11448, !tbaa !11434
  br label %224, !dbg !11449

; <label>:223:                                    ; preds = %219
  store i32 1, i32* %221, align 8, !dbg !11450, !tbaa !11434
  br label %224

; <label>:224:                                    ; preds = %191, %215, %214, %222, %223, %218
  %225 = tail call i64 @strlen(i8* %68) #12, !dbg !11451
  %226 = getelementptr inbounds i8, i8* %68, i64 %225, !dbg !11453
  call void @llvm.dbg.value(metadata i8* %226, metadata !11216, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11243
  %227 = getelementptr inbounds i8, i8* %226, i64 -1
  call void @llvm.dbg.value(metadata i8* %227, metadata !11216, metadata !DIExpression()), !dbg !11243
  %228 = icmp ugt i8* %227, %180, !dbg !11454
  br i1 %228, label %229, label %279, !dbg !11456

; <label>:229:                                    ; preds = %224
  %230 = sext i32 %162 to i64
  %231 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %230, i32 3
  %232 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 5
  %233 = trunc i64 %161 to i16
  %234 = icmp slt i16 %233, 0
  br label %235, !dbg !11456

; <label>:235:                                    ; preds = %229, %276
  %236 = phi i8* [ %227, %229 ], [ %277, %276 ]
  %237 = phi i8* [ %226, %229 ], [ %236, %276 ]
  %238 = load i8, i8* %236, align 1, !dbg !11457, !tbaa !3150
  switch i8 %238, label %268 [
    i8 32, label %239
    i8 44, label %239
  ], !dbg !11460

; <label>:239:                                    ; preds = %235, %235
  br label %242, !dbg !11461

; <label>:240:                                    ; preds = %242
  call void @llvm.dbg.value(metadata i8* %244, metadata !11217, metadata !DIExpression()), !dbg !11263
  %241 = icmp ugt i8* %244, %180, !dbg !11463
  br i1 %241, label %242, label %247, !dbg !11464, !llvm.loop !11465

; <label>:242:                                    ; preds = %239, %240
  %243 = phi i8* [ %244, %240 ], [ %236, %239 ]
  call void @llvm.dbg.value(metadata i8* %243, metadata !11217, metadata !DIExpression()), !dbg !11263
  %244 = getelementptr inbounds i8, i8* %243, i64 -1, !dbg !11461
  %245 = load i8, i8* %244, align 1, !dbg !11468, !tbaa !3150
  %246 = icmp eq i8 %245, 92, !dbg !11469
  call void @llvm.dbg.value(metadata i8* %244, metadata !11217, metadata !DIExpression()), !dbg !11263
  br i1 %246, label %240, label %247, !dbg !11466

; <label>:247:                                    ; preds = %242, %240
  %248 = phi i8* [ %243, %242 ], [ %244, %240 ]
  %249 = icmp eq i8 %238, 32, !dbg !11470
  br i1 %249, label %250, label %258, !dbg !11472

; <label>:250:                                    ; preds = %247
  %251 = load i32, i32* %232, align 8, !dbg !11473, !tbaa !11434
  %252 = icmp eq i32 %251, 2, !dbg !11474
  br i1 %252, label %253, label %268, !dbg !11475

; <label>:253:                                    ; preds = %250
  %254 = ptrtoint i8* %236 to i64, !dbg !11476
  %255 = ptrtoint i8* %248 to i64, !dbg !11476
  %256 = sub i64 %254, %255, !dbg !11476
  %257 = icmp slt i64 %256, 3, !dbg !11477
  br i1 %257, label %267, label %268, !dbg !11478

; <label>:258:                                    ; preds = %247
  %259 = icmp eq i8 %238, 44, !dbg !11479
  %260 = and i1 %234, %259, !dbg !11480
  br i1 %260, label %261, label %268, !dbg !11480

; <label>:261:                                    ; preds = %258
  %262 = ptrtoint i8* %236 to i64, !dbg !11481
  %263 = ptrtoint i8* %248 to i64, !dbg !11481
  %264 = sub i64 %262, %263, !dbg !11481
  %265 = and i64 %264, 1, !dbg !11482
  %266 = icmp eq i64 %265, 0, !dbg !11483
  br i1 %266, label %267, label %268, !dbg !11484

; <label>:267:                                    ; preds = %261, %253
  store i8* %237, i8** %69, align 8, !dbg !11485, !tbaa !11238
  br label %279, !dbg !11487

; <label>:268:                                    ; preds = %250, %253, %235, %258, %261
  %269 = load i8*, i8** %231, align 8, !dbg !11488, !tbaa !3461
  %270 = icmp eq i8* %269, bitcast (i8** @p_sps to i8*), !dbg !11490
  br i1 %270, label %271, label %276, !dbg !11491

; <label>:271:                                    ; preds = %268
  %272 = tail call i32 @strncmp(i8* nonnull %236, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i64 5) #12, !dbg !11492
  %273 = icmp eq i32 %272, 0, !dbg !11493
  br i1 %273, label %274, label %276, !dbg !11494

; <label>:274:                                    ; preds = %271
  %275 = getelementptr inbounds i8, i8* %237, i64 4, !dbg !11495
  store i8* %275, i8** %69, align 8, !dbg !11497, !tbaa !11238
  br label %279, !dbg !11498

; <label>:276:                                    ; preds = %268, %271
  call void @llvm.dbg.value(metadata i8* %236, metadata !11216, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11243
  %277 = getelementptr inbounds i8, i8* %236, i64 -1
  call void @llvm.dbg.value(metadata i8* %277, metadata !11216, metadata !DIExpression()), !dbg !11243
  %278 = icmp ugt i8* %277, %180, !dbg !11454
  br i1 %278, label %235, label %279, !dbg !11456, !llvm.loop !11499

; <label>:279:                                    ; preds = %72, %276, %224, %267, %274, %186, %136, %94, %183, %178, %154, %148, %82, %19, %7
  ret void, !dbg !11501
}

declare i32 @get_special_key_code(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @ExpandSettings(%struct.expand* nocapture readonly, %struct.regmatch_T*, i32* nocapture, i8*** nocapture) local_unnamed_addr #0 !dbg !2901 {
  %5 = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.expand* %0, metadata !2921, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata %struct.regmatch_T* %1, metadata !2922, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i32* %2, metadata !2923, metadata !DIExpression()), !dbg !11504
  call void @llvm.dbg.value(metadata i8*** %3, metadata !2924, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 0, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !2926, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 0, metadata !2929, metadata !DIExpression()), !dbg !11508
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0, !dbg !11509
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11, !dbg !11509
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !2933, metadata !DIExpression()), !dbg !11510
  %7 = getelementptr inbounds %struct.regmatch_T, %struct.regmatch_T* %1, i64 0, i32 3, !dbg !11511
  %8 = load i32, i32* %7, align 8, !dbg !11511, !tbaa !11512
  call void @llvm.dbg.value(metadata i32 %8, metadata !2934, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.value(metadata i32 0, metadata !2931, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 0, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 0, metadata !2926, metadata !DIExpression()), !dbg !11507
  %9 = getelementptr inbounds %struct.expand, %struct.expand* %0, i64 0, i32 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 1
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 2
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 3
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 4
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 5
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 6
  %16 = bitcast i8*** %3 to i8**
  br label %17, !dbg !11515

; <label>:17:                                     ; preds = %4, %225
  %18 = phi i32 [ 0, %4 ], [ %121, %225 ]
  %19 = phi i32 [ 0, %4 ], [ %226, %225 ]
  %20 = phi i32 [ 0, %4 ], [ %212, %225 ]
  %21 = phi i32 [ 0, %4 ], [ %211, %225 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !2926, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %20, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %19, metadata !2931, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 %18, metadata !2925, metadata !DIExpression()), !dbg !11506
  store i32 %8, i32* %7, align 8, !dbg !11517, !tbaa !11512
  %22 = load i32, i32* %9, align 8, !dbg !11520, !tbaa !11229
  %23 = icmp eq i32 %22, 5, !dbg !11522
  br i1 %23, label %42, label %24, !dbg !11523

; <label>:24:                                     ; preds = %17
  call void @llvm.dbg.value(metadata i32 0, metadata !2928, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %18, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %20, metadata !2929, metadata !DIExpression()), !dbg !11508
  %25 = icmp eq i32 %19, 0
  call void @llvm.dbg.value(metadata i64 0, metadata !2928, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %20, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %18, metadata !2925, metadata !DIExpression()), !dbg !11506
  %26 = call i32 @vim_regexec(%struct.regmatch_T* nonnull %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 0) #11, !dbg !11525
  %27 = icmp eq i32 %26, 0, !dbg !11525
  br i1 %27, label %37, label %28, !dbg !11530

; <label>:28:                                     ; preds = %24
  br i1 %25, label %29, label %31, !dbg !11531

; <label>:29:                                     ; preds = %28
  %30 = add nsw i32 %18, 1, !dbg !11533
  call void @llvm.dbg.value(metadata i32 %30, metadata !2925, metadata !DIExpression()), !dbg !11506
  br label %37, !dbg !11535

; <label>:31:                                     ; preds = %28
  %32 = call i8* @vim_strsave(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !11536
  %33 = load i8**, i8*** %3, align 8, !dbg !11537, !tbaa !3115
  %34 = add nsw i32 %20, 1, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %34, metadata !2929, metadata !DIExpression()), !dbg !11508
  %35 = sext i32 %20 to i64, !dbg !11539
  %36 = getelementptr inbounds i8*, i8** %33, i64 %35, !dbg !11539
  store i8* %32, i8** %36, align 8, !dbg !11540, !tbaa !3115
  br label %37

; <label>:37:                                     ; preds = %24, %31, %29
  %38 = phi i32 [ %20, %29 ], [ %34, %31 ], [ %20, %24 ]
  %39 = phi i32 [ %30, %29 ], [ %18, %31 ], [ %18, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %38, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i64 1, metadata !2928, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %38, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %39, metadata !2925, metadata !DIExpression()), !dbg !11506
  %40 = call i32 @vim_regexec(%struct.regmatch_T* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i32 0) #11, !dbg !11525
  %41 = icmp eq i32 %40, 0, !dbg !11525
  br i1 %41, label %42, label %230, !dbg !11530

; <label>:42:                                     ; preds = %37, %231, %237, %17
  %43 = phi i32 [ %20, %17 ], [ %38, %237 ], [ %234, %231 ], [ %38, %37 ]
  %44 = phi i32 [ %18, %17 ], [ %238, %237 ], [ %39, %231 ], [ %39, %37 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %43, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 0, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %21, metadata !2926, metadata !DIExpression()), !dbg !11507
  %45 = load i8*, i8** getelementptr inbounds ([508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 0, i32 0), align 16, !dbg !11542, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %45, metadata !2930, metadata !DIExpression()), !dbg !11545
  %46 = icmp eq i8* %45, null, !dbg !11546
  br i1 %46, label %118, label %47, !dbg !11547

; <label>:47:                                     ; preds = %42
  %48 = icmp eq i32 %19, 0
  br label %49, !dbg !11547

; <label>:49:                                     ; preds = %47, %110
  %50 = phi i64 [ 0, %47 ], [ %114, %110 ]
  %51 = phi i8* [ %45, %47 ], [ %116, %110 ]
  %52 = phi i32 [ %44, %47 ], [ %113, %110 ]
  %53 = phi i32 [ %43, %47 ], [ %112, %110 ]
  %54 = phi i32 [ %21, %47 ], [ %111, %110 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !2926, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i64 %50, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %53, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %52, metadata !2925, metadata !DIExpression()), !dbg !11506
  %55 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %50, i32 3, !dbg !11548
  %56 = load i8*, i8** %55, align 8, !dbg !11548, !tbaa !3461
  %57 = icmp eq i8* %56, null, !dbg !11551
  br i1 %57, label %110, label %58, !dbg !11552

; <label>:58:                                     ; preds = %49
  %59 = load i32, i32* %9, align 8, !dbg !11553, !tbaa !11229
  %60 = icmp eq i32 %59, 5, !dbg !11555
  br i1 %60, label %61, label %66, !dbg !11556

; <label>:61:                                     ; preds = %58
  %62 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %50, i32 2, !dbg !11557
  %63 = load i64, i64* %62, align 16, !dbg !11557, !tbaa !3107
  %64 = and i64 %63, 1, !dbg !11558
  %65 = icmp eq i64 %64, 0, !dbg !11558
  br i1 %65, label %110, label %66, !dbg !11559

; <label>:66:                                     ; preds = %61, %58
  call void @llvm.dbg.value(metadata i64 %50, metadata !3476, metadata !DIExpression()), !dbg !11560
  %67 = load i8, i8* %51, align 1, !dbg !11562, !tbaa !3150
  %68 = icmp eq i8 %67, 116, !dbg !11564
  br i1 %68, label %69, label %75, !dbg !11565

; <label>:69:                                     ; preds = %66
  %70 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !11566
  %71 = load i8, i8* %70, align 1, !dbg !11566, !tbaa !3150
  %72 = icmp eq i8 %71, 95, !dbg !11567
  %73 = icmp sgt i32 %52, 0, !dbg !11568
  %74 = and i1 %73, %72, !dbg !11570
  br i1 %74, label %110, label %75, !dbg !11570

; <label>:75:                                     ; preds = %66, %69
  %76 = phi i1 [ %72, %69 ], [ false, %66 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !2928, metadata !DIExpression()), !dbg !11524
  %77 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %51, i32 0) #11, !dbg !11571
  %78 = icmp eq i32 %77, 0, !dbg !11571
  br i1 %78, label %79, label %97, !dbg !11573

; <label>:79:                                     ; preds = %75
  %80 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %50, i32 1, !dbg !11574
  %81 = load i8*, i8** %80, align 8, !dbg !11574, !tbaa !3702
  %82 = icmp eq i8* %81, null, !dbg !11575
  br i1 %82, label %88, label %83, !dbg !11576

; <label>:83:                                     ; preds = %79
  %84 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %81, i32 0) #11, !dbg !11577
  %85 = icmp ne i32 %84, 0, !dbg !11577
  %86 = xor i1 %76, true, !dbg !11578
  %87 = or i1 %85, %86, !dbg !11578
  br i1 %87, label %96, label %89, !dbg !11578

; <label>:88:                                     ; preds = %79
  br i1 %76, label %89, label %110, !dbg !11579

; <label>:89:                                     ; preds = %83, %88
  store i8 60, i8* %6, align 16, !dbg !11580, !tbaa !3150
  store i8 116, i8* %10, align 1, !dbg !11583, !tbaa !3150
  store i8 95, i8* %11, align 2, !dbg !11584, !tbaa !3150
  %90 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !11585
  %91 = load i8, i8* %90, align 1, !dbg !11585, !tbaa !3150
  store i8 %91, i8* %12, align 1, !dbg !11586, !tbaa !3150
  %92 = getelementptr inbounds i8, i8* %51, i64 3, !dbg !11587
  %93 = load i8, i8* %92, align 1, !dbg !11587, !tbaa !3150
  store i8 %93, i8* %13, align 4, !dbg !11588, !tbaa !3150
  store i8 62, i8* %14, align 1, !dbg !11589, !tbaa !3150
  store i8 0, i8* %15, align 2, !dbg !11590, !tbaa !3150
  %94 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %6, i32 0) #11, !dbg !11591
  %95 = icmp eq i32 %94, 0, !dbg !11591
  call void @llvm.dbg.value(metadata i8* %51, metadata !2930, metadata !DIExpression()), !dbg !11545
  br i1 %95, label %110, label %97, !dbg !11593

; <label>:96:                                     ; preds = %83
  call void @llvm.dbg.value(metadata i8* %51, metadata !2930, metadata !DIExpression()), !dbg !11545
  br i1 %85, label %97, label %110, !dbg !11593

; <label>:97:                                     ; preds = %89, %75, %96
  %98 = phi i8* [ %51, %96 ], [ %6, %89 ], [ %51, %75 ]
  br i1 %48, label %99, label %104, !dbg !11594

; <label>:99:                                     ; preds = %97
  br i1 %76, label %100, label %102, !dbg !11597

; <label>:100:                                    ; preds = %99
  %101 = add nsw i32 %54, 1, !dbg !11600
  call void @llvm.dbg.value(metadata i32 %101, metadata !2926, metadata !DIExpression()), !dbg !11507
  br label %110, !dbg !11602

; <label>:102:                                    ; preds = %99
  %103 = add nsw i32 %52, 1, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %103, metadata !2925, metadata !DIExpression()), !dbg !11506
  br label %110

; <label>:104:                                    ; preds = %97
  %105 = call i8* @vim_strsave(i8* nonnull %98) #11, !dbg !11604
  %106 = load i8**, i8*** %3, align 8, !dbg !11605, !tbaa !3115
  %107 = add nsw i32 %53, 1, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %107, metadata !2929, metadata !DIExpression()), !dbg !11508
  %108 = sext i32 %53 to i64, !dbg !11607
  %109 = getelementptr inbounds i8*, i8** %106, i64 %108, !dbg !11607
  store i8* %105, i8** %109, align 8, !dbg !11608, !tbaa !3115
  br label %110

; <label>:110:                                    ; preds = %89, %88, %61, %96, %100, %102, %104, %69, %49
  %111 = phi i32 [ %54, %49 ], [ %54, %69 ], [ %101, %100 ], [ %54, %102 ], [ %54, %104 ], [ %54, %96 ], [ %54, %61 ], [ %54, %89 ], [ %54, %88 ]
  %112 = phi i32 [ %53, %49 ], [ %53, %69 ], [ %53, %100 ], [ %53, %102 ], [ %107, %104 ], [ %53, %96 ], [ %53, %61 ], [ %53, %89 ], [ %53, %88 ]
  %113 = phi i32 [ %52, %49 ], [ %52, %69 ], [ %52, %100 ], [ %103, %102 ], [ %52, %104 ], [ %52, %96 ], [ %52, %61 ], [ %52, %89 ], [ %52, %88 ]
  %114 = add nuw i64 %50, 1, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %113, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %112, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %111, metadata !2926, metadata !DIExpression()), !dbg !11507
  %115 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %114, i32 0, !dbg !11542
  %116 = load i8*, i8** %115, align 16, !dbg !11542, !tbaa !3453
  call void @llvm.dbg.value(metadata i8* %116, metadata !2930, metadata !DIExpression()), !dbg !11545
  %117 = icmp eq i8* %116, null, !dbg !11546
  br i1 %117, label %118, label %49, !dbg !11547, !llvm.loop !11610

; <label>:118:                                    ; preds = %110, %42
  %119 = phi i32 [ %21, %42 ], [ %111, %110 ]
  %120 = phi i32 [ %43, %42 ], [ %112, %110 ]
  %121 = phi i32 [ %44, %42 ], [ %113, %110 ]
  %122 = load i32, i32* %9, align 8, !dbg !11612, !tbaa !11229
  %123 = icmp ne i32 %122, 5, !dbg !11614
  %124 = icmp eq i32 %121, 0, !dbg !11615
  %125 = and i1 %124, %123, !dbg !11616
  br i1 %125, label %126, label %210, !dbg !11616

; <label>:126:                                    ; preds = %118
  call void @llvm.dbg.value(metadata i32 0, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %120, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %119, metadata !2926, metadata !DIExpression()), !dbg !11507
  %127 = call i8* @get_termcode(i32 0) #11, !dbg !11617
  call void @llvm.dbg.value(metadata i8* %127, metadata !2930, metadata !DIExpression()), !dbg !11545
  %128 = icmp eq i8* %127, null, !dbg !11621
  br i1 %128, label %177, label %129, !dbg !11622

; <label>:129:                                    ; preds = %126
  %130 = tail call i16** @__ctype_b_loc() #13, !dbg !11623
  %131 = icmp eq i32 %19, 0
  br label %132, !dbg !11622

; <label>:132:                                    ; preds = %129, %171
  %133 = phi i8* [ %127, %129 ], [ %175, %171 ]
  %134 = phi i32 [ %120, %129 ], [ %173, %171 ]
  %135 = phi i32 [ 0, %129 ], [ %174, %171 ]
  %136 = phi i32 [ %119, %129 ], [ %172, %171 ]
  call void @llvm.dbg.value(metadata i32 %136, metadata !2926, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %135, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %134, metadata !2929, metadata !DIExpression()), !dbg !11508
  %137 = load i16*, i16** %130, align 8, !dbg !11623, !tbaa !3115
  %138 = load i8, i8* %133, align 1, !dbg !11623, !tbaa !3150
  %139 = zext i8 %138 to i64, !dbg !11623
  %140 = getelementptr inbounds i16, i16* %137, i64 %139, !dbg !11623
  %141 = load i16, i16* %140, align 2, !dbg !11623, !tbaa !3628
  %142 = and i16 %141, 16384, !dbg !11623
  %143 = icmp eq i16 %142, 0, !dbg !11623
  br i1 %143, label %171, label %144, !dbg !11626

; <label>:144:                                    ; preds = %132
  %145 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !11627
  %146 = load i8, i8* %145, align 1, !dbg !11627, !tbaa !3150
  %147 = zext i8 %146 to i64, !dbg !11627
  %148 = getelementptr inbounds i16, i16* %137, i64 %147, !dbg !11627
  %149 = load i16, i16* %148, align 2, !dbg !11627, !tbaa !3628
  %150 = and i16 %149, 16384, !dbg !11627
  %151 = icmp eq i16 %150, 0, !dbg !11627
  br i1 %151, label %171, label %152, !dbg !11628

; <label>:152:                                    ; preds = %144
  store i8 116, i8* %6, align 16, !dbg !11629, !tbaa !3150
  store i8 95, i8* %10, align 1, !dbg !11630, !tbaa !3150
  %153 = load i8, i8* %133, align 1, !dbg !11631, !tbaa !3150
  store i8 %153, i8* %11, align 2, !dbg !11632, !tbaa !3150
  %154 = load i8, i8* %145, align 1, !dbg !11633, !tbaa !3150
  store i8 %154, i8* %12, align 1, !dbg !11634, !tbaa !3150
  store i8 0, i8* %13, align 4, !dbg !11635, !tbaa !3150
  call void @llvm.dbg.value(metadata i32 0, metadata !2928, metadata !DIExpression()), !dbg !11524
  %155 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %6, i32 0) #11, !dbg !11636
  %156 = icmp eq i32 %155, 0, !dbg !11636
  br i1 %156, label %157, label %162, !dbg !11638

; <label>:157:                                    ; preds = %152
  store i8 60, i8* %6, align 16, !dbg !11639, !tbaa !3150
  store i8 116, i8* %10, align 1, !dbg !11641, !tbaa !3150
  store i8 95, i8* %11, align 2, !dbg !11642, !tbaa !3150
  %158 = load i8, i8* %133, align 1, !dbg !11643, !tbaa !3150
  store i8 %158, i8* %12, align 1, !dbg !11644, !tbaa !3150
  %159 = load i8, i8* %145, align 1, !dbg !11645, !tbaa !3150
  store i8 %159, i8* %13, align 4, !dbg !11646, !tbaa !3150
  store i8 62, i8* %14, align 1, !dbg !11647, !tbaa !3150
  store i8 0, i8* %15, align 2, !dbg !11648, !tbaa !3150
  %160 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %6, i32 0) #11, !dbg !11649
  %161 = icmp eq i32 %160, 0, !dbg !11649
  br i1 %161, label %171, label %162, !dbg !11651

; <label>:162:                                    ; preds = %157, %152
  br i1 %131, label %163, label %165, !dbg !11652

; <label>:163:                                    ; preds = %162
  %164 = add nsw i32 %136, 1, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %164, metadata !2926, metadata !DIExpression()), !dbg !11507
  br label %171, !dbg !11657

; <label>:165:                                    ; preds = %162
  %166 = call i8* @vim_strsave(i8* nonnull %6) #11, !dbg !11658
  %167 = load i8**, i8*** %3, align 8, !dbg !11659, !tbaa !3115
  %168 = add nsw i32 %134, 1, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %168, metadata !2929, metadata !DIExpression()), !dbg !11508
  %169 = sext i32 %134 to i64, !dbg !11661
  %170 = getelementptr inbounds i8*, i8** %167, i64 %169, !dbg !11661
  store i8* %166, i8** %170, align 8, !dbg !11662, !tbaa !3115
  br label %171

; <label>:171:                                    ; preds = %157, %144, %132, %165, %163
  %172 = phi i32 [ %164, %163 ], [ %136, %165 ], [ %136, %157 ], [ %136, %144 ], [ %136, %132 ]
  %173 = phi i32 [ %134, %163 ], [ %168, %165 ], [ %134, %157 ], [ %134, %144 ], [ %134, %132 ]
  %174 = add nuw nsw i32 %135, 1, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %173, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %174, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %172, metadata !2926, metadata !DIExpression()), !dbg !11507
  %175 = call i8* @get_termcode(i32 %174) #11, !dbg !11617
  call void @llvm.dbg.value(metadata i8* %175, metadata !2930, metadata !DIExpression()), !dbg !11545
  %176 = icmp eq i8* %175, null, !dbg !11621
  br i1 %176, label %177, label %132, !dbg !11622, !llvm.loop !11664

; <label>:177:                                    ; preds = %171, %126
  %178 = phi i32 [ %119, %126 ], [ %172, %171 ]
  %179 = phi i32 [ %120, %126 ], [ %173, %171 ]
  store i32 1, i32* %7, align 8, !dbg !11666, !tbaa !11512
  call void @llvm.dbg.value(metadata i32 0, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %179, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %178, metadata !2926, metadata !DIExpression()), !dbg !11507
  %180 = call i8* @get_key_name(i32 0) #11, !dbg !11667
  call void @llvm.dbg.value(metadata i8* %180, metadata !2930, metadata !DIExpression()), !dbg !11545
  %181 = icmp eq i8* %180, null, !dbg !11670
  br i1 %181, label %210, label %182, !dbg !11671

; <label>:182:                                    ; preds = %177
  %183 = icmp eq i32 %19, 0
  br label %184, !dbg !11671

; <label>:184:                                    ; preds = %182, %204
  %185 = phi i8* [ %180, %182 ], [ %208, %204 ]
  %186 = phi i32 [ %179, %182 ], [ %206, %204 ]
  %187 = phi i32 [ 0, %182 ], [ %207, %204 ]
  %188 = phi i32 [ %178, %182 ], [ %205, %204 ]
  call void @llvm.dbg.value(metadata i32 %188, metadata !2926, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %187, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %186, metadata !2929, metadata !DIExpression()), !dbg !11508
  store i8 60, i8* %6, align 16, !dbg !11672, !tbaa !3150
  %189 = call i8* @strcpy(i8* nonnull %10, i8* nonnull %185) #11, !dbg !11674
  %190 = call i64 @strlen(i8* nonnull %6), !dbg !11675
  %191 = getelementptr [32 x i8], [32 x i8]* %5, i64 0, i64 %190, !dbg !11675
  %192 = bitcast i8* %191 to i16*, !dbg !11675
  store i16 62, i16* %192, align 1, !dbg !11675
  %193 = call i32 @vim_regexec(%struct.regmatch_T* %1, i8* nonnull %6, i32 0) #11, !dbg !11676
  %194 = icmp eq i32 %193, 0, !dbg !11676
  br i1 %194, label %204, label %195, !dbg !11678

; <label>:195:                                    ; preds = %184
  br i1 %183, label %196, label %198, !dbg !11679

; <label>:196:                                    ; preds = %195
  %197 = add nsw i32 %188, 1, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %197, metadata !2926, metadata !DIExpression()), !dbg !11507
  br label %204, !dbg !11683

; <label>:198:                                    ; preds = %195
  %199 = call i8* @vim_strsave(i8* nonnull %6) #11, !dbg !11684
  %200 = load i8**, i8*** %3, align 8, !dbg !11685, !tbaa !3115
  %201 = add nsw i32 %186, 1, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %201, metadata !2929, metadata !DIExpression()), !dbg !11508
  %202 = sext i32 %186 to i64, !dbg !11687
  %203 = getelementptr inbounds i8*, i8** %200, i64 %202, !dbg !11687
  store i8* %199, i8** %203, align 8, !dbg !11688, !tbaa !3115
  br label %204

; <label>:204:                                    ; preds = %184, %198, %196
  %205 = phi i32 [ %197, %196 ], [ %188, %198 ], [ %188, %184 ]
  %206 = phi i32 [ %186, %196 ], [ %201, %198 ], [ %186, %184 ]
  %207 = add nuw nsw i32 %187, 1, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %206, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %207, metadata !2927, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %205, metadata !2926, metadata !DIExpression()), !dbg !11507
  %208 = call i8* @get_key_name(i32 %207) #11, !dbg !11667
  call void @llvm.dbg.value(metadata i8* %208, metadata !2930, metadata !DIExpression()), !dbg !11545
  %209 = icmp eq i8* %208, null, !dbg !11670
  br i1 %209, label %210, label %184, !dbg !11671, !llvm.loop !11690

; <label>:210:                                    ; preds = %204, %177, %118
  %211 = phi i32 [ %119, %118 ], [ %178, %177 ], [ %205, %204 ]
  %212 = phi i32 [ %120, %118 ], [ %179, %177 ], [ %206, %204 ]
  %213 = icmp eq i32 %19, 0, !dbg !11692
  br i1 %213, label %214, label %225, !dbg !11694

; <label>:214:                                    ; preds = %210
  %215 = icmp sgt i32 %121, 0, !dbg !11695
  br i1 %215, label %218, label %216, !dbg !11698

; <label>:216:                                    ; preds = %214
  %217 = icmp sgt i32 %211, 0, !dbg !11699
  br i1 %217, label %218, label %228, !dbg !11701

; <label>:218:                                    ; preds = %216, %214
  %219 = phi i32 [ %121, %214 ], [ %211, %216 ]
  store i32 %219, i32* %2, align 4, !tbaa !3060
  %220 = sext i32 %219 to i64, !dbg !11702
  %221 = shl nsw i64 %220, 3, !dbg !11702
  %222 = call i8* @alloc(i64 %221) #11, !dbg !11702
  store i8* %222, i8** %16, align 8, !dbg !11703, !tbaa !3115
  %223 = icmp eq i8* %222, null, !dbg !11704
  br i1 %223, label %224, label %225, !dbg !11706

; <label>:224:                                    ; preds = %218
  store i8** bitcast ([1 x i8]* @.str to i8**), i8*** %3, align 8, !dbg !11707, !tbaa !3115
  br label %228, !dbg !11709

; <label>:225:                                    ; preds = %210, %218
  %226 = add nuw nsw i32 %19, 1, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %121, metadata !2925, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %226, metadata !2931, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 %212, metadata !2929, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %211, metadata !2926, metadata !DIExpression()), !dbg !11507
  %227 = icmp ult i32 %226, 2, !dbg !11711
  br i1 %227, label %17, label %228, !dbg !11515, !llvm.loop !11712

; <label>:228:                                    ; preds = %225, %216, %224
  %229 = phi i32 [ 0, %224 ], [ 1, %216 ], [ 1, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11, !dbg !11714
  ret i32 %229, !dbg !11714

; <label>:230:                                    ; preds = %37
  br i1 %25, label %237, label %231, !dbg !11531

; <label>:231:                                    ; preds = %230
  %232 = call i8* @vim_strsave(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !11536
  %233 = load i8**, i8*** %3, align 8, !dbg !11537, !tbaa !3115
  %234 = add nsw i32 %38, 1, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %234, metadata !2929, metadata !DIExpression()), !dbg !11508
  %235 = sext i32 %38 to i64, !dbg !11539
  %236 = getelementptr inbounds i8*, i8** %233, i64 %235, !dbg !11539
  store i8* %232, i8** %236, align 8, !dbg !11540, !tbaa !3115
  br label %42

; <label>:237:                                    ; preds = %230
  %238 = add nsw i32 %39, 1, !dbg !11533
  call void @llvm.dbg.value(metadata i32 %238, metadata !2925, metadata !DIExpression()), !dbg !11506
  br label %42, !dbg !11535
}

declare i32 @vim_regexec(%struct.regmatch_T*, i8*, i32) local_unnamed_addr #3

declare i8* @get_termcode(i32) local_unnamed_addr #3

declare i8* @get_key_name(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @ExpandOldSetting(i32* nocapture, i8*** nocapture) local_unnamed_addr #0 !dbg !11715 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11719, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i8*** %1, metadata !11720, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.value(metadata i8* null, metadata !11721, metadata !DIExpression()), !dbg !11725
  store i32 0, i32* %0, align 4, !dbg !11726, !tbaa !3060
  %3 = tail call i8* @alloc(i64 8) #11, !dbg !11727
  %4 = bitcast i8*** %1 to i8**, !dbg !11728
  store i8* %3, i8** %4, align 8, !dbg !11728, !tbaa !3115
  %5 = icmp eq i8* %3, null, !dbg !11729
  br i1 %5, label %40, label %6, !dbg !11731

; <label>:6:                                      ; preds = %2
  %7 = load i32, i32* @expand_option_idx, align 4, !dbg !11732, !tbaa !3060
  %8 = icmp slt i32 %7, 0, !dbg !11734
  br i1 %8, label %9, label %20, !dbg !11735

; <label>:9:                                      ; preds = %6
  %10 = tail call i8* @find_termcode(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @expand_option_name, i64 0, i64 2)) #11, !dbg !11736
  call void @llvm.dbg.value(metadata i8* %10, metadata !11721, metadata !DIExpression()), !dbg !11725
  %11 = icmp eq i8* %10, null, !dbg !11738
  br i1 %11, label %12, label %14, !dbg !11740

; <label>:12:                                     ; preds = %9
  %13 = tail call i32 @findoption(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @expand_option_name, i64 0, i64 0)), !dbg !11741
  store i32 %13, i32* @expand_option_idx, align 4, !dbg !11742, !tbaa !3060
  br label %16, !dbg !11743

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @expand_option_idx, align 4, !dbg !11744, !tbaa !3060
  br label %16, !dbg !11744

; <label>:16:                                     ; preds = %14, %12
  %17 = phi i32 [ %15, %14 ], [ %13, %12 ], !dbg !11744
  %18 = phi i8* [ %10, %14 ], [ null, %12 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !11721, metadata !DIExpression()), !dbg !11725
  %19 = icmp sgt i32 %17, -1, !dbg !11746
  br i1 %19, label %20, label %26, !dbg !11747

; <label>:20:                                     ; preds = %6, %16
  %21 = phi i32 [ %17, %16 ], [ %7, %6 ]
  %22 = sext i32 %21 to i64, !dbg !11748
  %23 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %22, !dbg !11748
  %24 = load i32, i32* @expand_option_flags, align 4, !dbg !11750, !tbaa !3060
  tail call fastcc void @option_value2string(%struct.vimoption* nonnull %23, i32 %24), !dbg !11751
  %25 = load i8*, i8** @NameBuff, align 8, !dbg !11752, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %25, metadata !11721, metadata !DIExpression()), !dbg !11725
  br label %29, !dbg !11753

; <label>:26:                                     ; preds = %16
  %27 = icmp eq i8* %18, null, !dbg !11754
  %28 = select i1 %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %18, !dbg !11756
  br label %29, !dbg !11756

; <label>:29:                                     ; preds = %26, %20
  %30 = phi i8* [ %25, %20 ], [ %28, %26 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !11721, metadata !DIExpression()), !dbg !11725
  %31 = load i8*, i8** @escape_chars, align 8, !dbg !11757, !tbaa !3115
  %32 = tail call i8* @vim_strsave_escaped(i8* %30, i8* %31) #11, !dbg !11758
  call void @llvm.dbg.value(metadata i8* %32, metadata !11722, metadata !DIExpression()), !dbg !11759
  %33 = icmp eq i8* %32, null, !dbg !11760
  %34 = load i8**, i8*** %1, align 8, !tbaa !3115
  br i1 %33, label %35, label %39, !dbg !11762

; <label>:35:                                     ; preds = %29
  %36 = icmp eq i8** %34, null, !dbg !11763
  br i1 %36, label %40, label %37, !dbg !11767

; <label>:37:                                     ; preds = %35
  %38 = bitcast i8** %34 to i8*, !dbg !11768
  tail call void @vim_free(i8* %38) #11, !dbg !11768
  store i8** null, i8*** %1, align 8, !dbg !11768, !tbaa !3115
  br label %40, !dbg !11768

; <label>:39:                                     ; preds = %29
  store i8* %32, i8** %34, align 8, !dbg !11770, !tbaa !3115
  store i32 1, i32* %0, align 4, !dbg !11771, !tbaa !3060
  br label %40, !dbg !11772

; <label>:40:                                     ; preds = %37, %35, %2, %39
  %41 = phi i32 [ 1, %39 ], [ 0, %2 ], [ 0, %35 ], [ 0, %37 ]
  ret i32 %41, !dbg !11773
}

; Function Attrs: nounwind uwtable
define internal fastcc void @option_value2string(%struct.vimoption* nocapture readonly, i32) unnamed_addr #0 !dbg !11774 {
  call void @llvm.dbg.value(metadata %struct.vimoption* %0, metadata !11776, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.value(metadata i32 %1, metadata !11777, metadata !DIExpression()), !dbg !11783
  %3 = tail call fastcc i8* @get_varp_scope(%struct.vimoption* %0, i32 %1), !dbg !11784
  call void @llvm.dbg.value(metadata i8* %3, metadata !11778, metadata !DIExpression()), !dbg !11785
  %4 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 2, !dbg !11786
  %5 = load i64, i64* %4, align 8, !dbg !11786, !tbaa !3107
  %6 = and i64 %5, 2, !dbg !11787
  %7 = icmp eq i64 %6, 0, !dbg !11787
  br i1 %7, label %38, label %8, !dbg !11788

; <label>:8:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i64 0, metadata !11779, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i8* %3, metadata !9835, metadata !DIExpression()) #11, !dbg !11790
  %9 = icmp eq i8* %3, bitcast (i64* @p_wc to i8*), !dbg !11793
  %10 = icmp eq i8* %3, bitcast (i64* @p_wcm to i8*), !dbg !11794
  %11 = or i1 %9, %10, !dbg !11795
  br i1 %11, label %15, label %12, !dbg !11795

; <label>:12:                                     ; preds = %8
  call void @llvm.dbg.value(metadata i64 %17, metadata !11779, metadata !DIExpression()), !dbg !11789
  %13 = load i8*, i8** @NameBuff, align 8, !tbaa !3115
  %14 = bitcast i8* %3 to i64*, !dbg !11796
  br label %33, !dbg !11798

; <label>:15:                                     ; preds = %8
  %16 = bitcast i8* %3 to i64*, !dbg !11799
  %17 = load i64, i64* %16, align 8, !dbg !11800, !tbaa !4248
  %18 = icmp slt i64 %17, 0, !dbg !11801
  %19 = trunc i64 %17 to i32
  br i1 %18, label %23, label %20, !dbg !11802

; <label>:20:                                     ; preds = %15
  %21 = tail call i32 @find_special_key_in_table(i32 %19) #11, !dbg !11803
  %22 = icmp sgt i32 %21, -1, !dbg !11804
  br i1 %22, label %23, label %27, !dbg !11805

; <label>:23:                                     ; preds = %15, %20
  %24 = load i8*, i8** @NameBuff, align 8, !dbg !11806, !tbaa !3115
  call void @llvm.dbg.value(metadata i64 %17, metadata !11779, metadata !DIExpression()), !dbg !11789
  %25 = tail call i8* @get_special_key_name(i32 %19, i32 0) #11, !dbg !11806
  %26 = tail call i8* @strcpy(i8* %24, i8* %25) #11, !dbg !11806
  br label %65, !dbg !11806

; <label>:27:                                     ; preds = %20
  call void @llvm.dbg.value(metadata i64 %17, metadata !11779, metadata !DIExpression()), !dbg !11789
  %28 = icmp eq i64 %17, 0, !dbg !11807
  %29 = load i8*, i8** @NameBuff, align 8, !tbaa !3115
  br i1 %28, label %33, label %30, !dbg !11798

; <label>:30:                                     ; preds = %27
  %31 = tail call i8* @transchar(i32 %19) #11, !dbg !11808
  %32 = tail call i8* @strcpy(i8* %29, i8* %31) #11, !dbg !11808
  br label %65, !dbg !11808

; <label>:33:                                     ; preds = %12, %27
  %34 = phi i64* [ %14, %12 ], [ %16, %27 ], !dbg !11796
  %35 = phi i8* [ %13, %12 ], [ %29, %27 ]
  %36 = load i64, i64* %34, align 8, !dbg !11796, !tbaa !4248
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1053, i64 0, i64 0), i64 %36) #11, !dbg !11809
  br label %65

; <label>:38:                                     ; preds = %2
  %39 = bitcast i8* %3 to i8**, !dbg !11810
  %40 = load i8*, i8** %39, align 8, !dbg !11810, !tbaa !3115
  call void @llvm.dbg.value(metadata i8* %40, metadata !11778, metadata !DIExpression()), !dbg !11785
  %41 = icmp eq i8* %40, null, !dbg !11812
  br i1 %41, label %42, label %44, !dbg !11814

; <label>:42:                                     ; preds = %38
  %43 = load i8*, i8** @NameBuff, align 8, !dbg !11815, !tbaa !3115
  store i8 0, i8* %43, align 1, !dbg !11816, !tbaa !3150
  br label %65, !dbg !11815

; <label>:44:                                     ; preds = %38
  %45 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %0, i64 0, i32 3, !dbg !11817
  %46 = load i8*, i8** %45, align 8, !dbg !11817, !tbaa !3461
  %47 = icmp eq i8* %46, bitcast (i8** @p_key to i8*), !dbg !11819
  br i1 %47, label %48, label %53, !dbg !11820

; <label>:48:                                     ; preds = %44
  %49 = load i8, i8* %40, align 1, !dbg !11821, !tbaa !3150
  %50 = icmp eq i8 %49, 0, !dbg !11821
  br i1 %50, label %53, label %51, !dbg !11822

; <label>:51:                                     ; preds = %48
  %52 = load i8*, i8** @NameBuff, align 8, !dbg !11823, !tbaa !3115
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0), i64 6, i32 1, i1 false), !dbg !11823
  br label %65, !dbg !11823

; <label>:53:                                     ; preds = %48, %44
  %54 = and i64 %5, 16, !dbg !11824
  %55 = icmp eq i64 %54, 0, !dbg !11824
  br i1 %55, label %58, label %56, !dbg !11826

; <label>:56:                                     ; preds = %53
  %57 = load i8*, i8** @NameBuff, align 8, !dbg !11827, !tbaa !3115
  tail call void @home_replace(%struct.file_buffer* null, i8* nonnull %40, i8* %57, i32 4096, i32 0) #11, !dbg !11828
  br label %65, !dbg !11828

; <label>:58:                                     ; preds = %53
  %59 = icmp eq i8* %46, bitcast (i8** @p_pt to i8*), !dbg !11829
  br i1 %59, label %60, label %63, !dbg !11831

; <label>:60:                                     ; preds = %58
  %61 = load i8*, i8** @p_pt, align 8, !dbg !11832, !tbaa !3115
  %62 = load i8*, i8** @NameBuff, align 8, !dbg !11833, !tbaa !3115
  tail call void @str2specialbuf(i8* %61, i8* %62, i32 4096) #11, !dbg !11834
  br label %65, !dbg !11834

; <label>:63:                                     ; preds = %58
  %64 = load i8*, i8** @NameBuff, align 8, !dbg !11835, !tbaa !3115
  tail call void @vim_strncpy(i8* %64, i8* nonnull %40, i64 4095) #11, !dbg !11836
  br label %65

; <label>:65:                                     ; preds = %23, %33, %30, %42, %56, %63, %60, %51
  ret void, !dbg !11837
}

declare i8* @vim_strsave_escaped(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @shortmess(i32) local_unnamed_addr #0 !dbg !11838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11840, metadata !DIExpression()), !dbg !11841
  %2 = load i8*, i8** @p_shm, align 8, !dbg !11842, !tbaa !3115
  %3 = icmp eq i8* %2, null, !dbg !11843
  br i1 %3, label %15, label %4, !dbg !11844

; <label>:4:                                      ; preds = %1
  %5 = tail call i8* @vim_strchr(i8* nonnull %2, i32 %0) #11, !dbg !11845
  %6 = icmp eq i8* %5, null, !dbg !11846
  br i1 %6, label %7, label %15, !dbg !11847

; <label>:7:                                      ; preds = %4
  %8 = load i8*, i8** @p_shm, align 8, !dbg !11848, !tbaa !3115
  %9 = tail call i8* @vim_strchr(i8* %8, i32 97) #11, !dbg !11849
  %10 = icmp eq i8* %9, null, !dbg !11850
  br i1 %10, label %15, label %11, !dbg !11851

; <label>:11:                                     ; preds = %7
  %12 = tail call i8* @vim_strchr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104, i64 0, i64 0), i32 %0) #11, !dbg !11852
  %13 = icmp ne i8* %12, null, !dbg !11853
  %14 = zext i1 %13 to i32
  br label %15

; <label>:15:                                     ; preds = %7, %4, %1, %11
  %16 = phi i32 [ 0, %1 ], [ 1, %4 ], [ 0, %7 ], [ %14, %11 ]
  ret i32 %16, !dbg !11854
}

; Function Attrs: nounwind uwtable
define void @vimrc_found(i8*, i8*) local_unnamed_addr #0 !dbg !11855 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11859, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i8* %1, metadata !11860, metadata !DIExpression()), !dbg !11865
  %4 = bitcast i32* %3 to i8*, !dbg !11866
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11, !dbg !11866
  call void @llvm.dbg.value(metadata i32 0, metadata !11862, metadata !DIExpression()), !dbg !11867
  store i32 0, i32* %3, align 4, !dbg !11867, !tbaa !3060
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), metadata !4631, metadata !DIExpression()) #11, !dbg !11868
  %5 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0)) #11, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %5, metadata !4634, metadata !DIExpression()) #11, !dbg !11872
  %6 = icmp slt i32 %5, 0, !dbg !11873
  br i1 %6, label %13, label %7, !dbg !11874

; <label>:7:                                      ; preds = %2
  %8 = sext i32 %5 to i64, !dbg !11875
  %9 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %8, i32 2, !dbg !11876
  %10 = load i64, i64* %9, align 16, !dbg !11876, !tbaa !3107
  %11 = and i64 %10, 256, !dbg !11877
  %12 = icmp eq i64 %11, 0, !dbg !11877
  br i1 %12, label %13, label %34, !dbg !11878

; <label>:13:                                     ; preds = %2, %7
  store i32 0, i32* @p_cp, align 4, !dbg !11879, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 0, metadata !11861, metadata !DIExpression()), !dbg !11881
  br label %14, !dbg !11882

; <label>:14:                                     ; preds = %31, %13
  %15 = phi i64 [ %32, %31 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !11861, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i64 %15, metadata !3476, metadata !DIExpression()), !dbg !11884
  %16 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %15, i32 0, !dbg !11887
  %17 = load i8*, i8** %16, align 16, !dbg !11887, !tbaa !3453
  %18 = load i8, i8* %17, align 1, !dbg !11889, !tbaa !3150
  %19 = icmp eq i8 %18, 116, !dbg !11890
  br i1 %19, label %20, label %24, !dbg !11891

; <label>:20:                                     ; preds = %14
  %21 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !11892
  %22 = load i8, i8* %21, align 1, !dbg !11892, !tbaa !3150
  %23 = icmp eq i8 %22, 95, !dbg !11893
  br i1 %23, label %33, label %24, !dbg !11894

; <label>:24:                                     ; preds = %20, %14
  %25 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %15, i32 2, !dbg !11895
  %26 = load i64, i64* %25, align 16, !dbg !11895, !tbaa !3107
  %27 = and i64 %26, 1280, !dbg !11897
  %28 = icmp eq i64 %27, 0, !dbg !11897
  br i1 %28, label %29, label %31, !dbg !11898

; <label>:29:                                     ; preds = %24
  %30 = trunc i64 %15 to i32, !dbg !11899
  tail call fastcc void @set_option_default(i32 %30, i32 1, i32 0), !dbg !11899
  br label %31, !dbg !11899

; <label>:31:                                     ; preds = %24, %29
  %32 = add nuw i64 %15, 1, !dbg !11900
  br label %14, !dbg !11901, !llvm.loop !11902

; <label>:33:                                     ; preds = %20
  tail call fastcc void @didset_options(), !dbg !11904
  tail call fastcc void @didset_options2(), !dbg !11905
  br label %34, !dbg !11906

; <label>:34:                                     ; preds = %7, %33
  %35 = icmp eq i8* %0, null, !dbg !11907
  br i1 %35, label %47, label %36, !dbg !11909

; <label>:36:                                     ; preds = %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !11862, metadata !DIExpression()), !dbg !11867
  %37 = call i8* @vim_getenv(i8* %1, i32* nonnull %3) #11, !dbg !11910
  call void @llvm.dbg.value(metadata i8* %37, metadata !11863, metadata !DIExpression()), !dbg !11912
  %38 = icmp eq i8* %37, null, !dbg !11913
  br i1 %38, label %39, label %43, !dbg !11915

; <label>:39:                                     ; preds = %36
  %40 = call i8* @FullName_save(i8* nonnull %0, i32 0) #11, !dbg !11916
  call void @llvm.dbg.value(metadata i8* %40, metadata !11863, metadata !DIExpression()), !dbg !11912
  %41 = icmp eq i8* %40, null, !dbg !11918
  br i1 %41, label %47, label %42, !dbg !11920

; <label>:42:                                     ; preds = %39
  call void @vim_setenv(i8* %1, i8* nonnull %40) #11, !dbg !11921
  call void @vim_free(i8* nonnull %40) #11, !dbg !11923
  br label %47, !dbg !11924

; <label>:43:                                     ; preds = %36
  %44 = load i32, i32* %3, align 4, !dbg !11925, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 %44, metadata !11862, metadata !DIExpression()), !dbg !11867
  %45 = icmp eq i32 %44, 0, !dbg !11925
  br i1 %45, label %47, label %46, !dbg !11927

; <label>:46:                                     ; preds = %43
  call void @vim_free(i8* nonnull %37) #11, !dbg !11928
  br label %47, !dbg !11928

; <label>:47:                                     ; preds = %39, %43, %34, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11, !dbg !11929
  ret void, !dbg !11929
}

declare i8* @FullName_save(i8*, i32) local_unnamed_addr #3

declare void @vim_setenv(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define void @change_compatible(i32) local_unnamed_addr #0 !dbg !11930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11932, metadata !DIExpression()), !dbg !11934
  %2 = load i32, i32* @p_cp, align 4, !dbg !11935, !tbaa !3060
  %3 = icmp eq i32 %2, %0, !dbg !11937
  br i1 %3, label %32, label %4, !dbg !11938

; <label>:4:                                      ; preds = %1
  store i32 %0, i32* @p_cp, align 4, !dbg !11939, !tbaa !3060
  call void @llvm.dbg.value(metadata i32 0, metadata !6641, metadata !DIExpression()) #11, !dbg !11941
  br label %5, !dbg !11943

; <label>:5:                                      ; preds = %29, %4
  %6 = phi i64 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i64 %6, metadata !6641, metadata !DIExpression()) #11, !dbg !11941
  call void @llvm.dbg.value(metadata i64 %6, metadata !3476, metadata !DIExpression()) #11, !dbg !11944
  %7 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 0, !dbg !11946
  %8 = load i8*, i8** %7, align 16, !dbg !11946, !tbaa !3453
  %9 = load i8, i8* %8, align 1, !dbg !11948, !tbaa !3150
  %10 = icmp eq i8 %9, 116, !dbg !11949
  br i1 %10, label %11, label %15, !dbg !11950

; <label>:11:                                     ; preds = %5
  %12 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11951
  %13 = load i8, i8* %12, align 1, !dbg !11951, !tbaa !3150
  %14 = icmp eq i8 %13, 95, !dbg !11952
  br i1 %14, label %31, label %15, !dbg !11953

; <label>:15:                                     ; preds = %11, %5
  %16 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %6, i32 2, !dbg !11954
  %17 = load i64, i64* %16, align 16, !dbg !11954, !tbaa !3107
  %18 = and i64 %17, 2048, !dbg !11955
  %19 = icmp ne i64 %18, 0, !dbg !11955
  %20 = load i32, i32* @p_cp, align 4, !dbg !11956
  %21 = icmp ne i32 %20, 0, !dbg !11956
  %22 = and i1 %19, %21, !dbg !11957
  br i1 %22, label %27, label %23, !dbg !11957

; <label>:23:                                     ; preds = %15
  %24 = and i64 %17, 1024, !dbg !11958
  %25 = icmp ne i64 %24, 0, !dbg !11958
  %26 = or i1 %25, %21, !dbg !11959
  br i1 %26, label %29, label %27, !dbg !11959

; <label>:27:                                     ; preds = %23, %15
  %28 = trunc i64 %6 to i32, !dbg !11960
  tail call fastcc void @set_option_default(i32 %28, i32 1, i32 %20) #11, !dbg !11960
  br label %29, !dbg !11960

; <label>:29:                                     ; preds = %27, %23
  %30 = add nuw i64 %6, 1, !dbg !11961
  br label %5, !dbg !11962, !llvm.loop !6661

; <label>:31:                                     ; preds = %11
  tail call fastcc void @didset_options() #11, !dbg !11963
  tail call fastcc void @didset_options2() #11, !dbg !11964
  br label %32, !dbg !11965

; <label>:32:                                     ; preds = %1, %31
  %33 = tail call i32 @findoption(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0)), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %33, metadata !11933, metadata !DIExpression()), !dbg !11967
  %34 = icmp sgt i32 %33, -1, !dbg !11968
  br i1 %34, label %35, label %40, !dbg !11970

; <label>:35:                                     ; preds = %32
  %36 = sext i32 %33 to i64, !dbg !11971
  %37 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %36, i32 2, !dbg !11972
  %38 = load i64, i64* %37, align 16, !dbg !11973, !tbaa !3107
  %39 = or i64 %38, 256, !dbg !11973
  store i64 %39, i64* %37, align 16, !dbg !11973, !tbaa !3107
  br label %40, !dbg !11971

; <label>:40:                                     ; preds = %35, %32
  ret void, !dbg !11974
}

; Function Attrs: nounwind uwtable
define i32 @reset_option_was_set(i8* nocapture readonly) local_unnamed_addr #0 !dbg !11975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11977, metadata !DIExpression()), !dbg !11979
  %2 = tail call i32 @findoption(i8* %0), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %2, metadata !11978, metadata !DIExpression()), !dbg !11981
  %3 = icmp sgt i32 %2, -1, !dbg !11982
  br i1 %3, label %4, label %9, !dbg !11984

; <label>:4:                                      ; preds = %1
  %5 = sext i32 %2 to i64, !dbg !11985
  %6 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %5, i32 2, !dbg !11987
  %7 = load i64, i64* %6, align 16, !dbg !11988, !tbaa !3107
  %8 = and i64 %7, -257, !dbg !11988
  store i64 %8, i64* %6, align 16, !dbg !11988, !tbaa !3107
  br label %9, !dbg !11989

; <label>:9:                                      ; preds = %1, %4
  %10 = phi i32 [ 1, %4 ], [ 0, %1 ]
  ret i32 %10, !dbg !11990
}

; Function Attrs: nounwind uwtable
define void @fill_breakat_flags() local_unnamed_addr #0 !dbg !4028 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4027, metadata !DIExpression()), !dbg !11991
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @breakat_flags, i64 0, i64 0), i8 0, i64 256, i32 16, i1 false), !dbg !11992
  %1 = load i8*, i8** @p_breakat, align 8, !dbg !11993, !tbaa !3115
  %2 = icmp eq i8* %1, null, !dbg !11994
  br i1 %2, label %15, label %3, !dbg !11995

; <label>:3:                                      ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !4030, metadata !DIExpression()), !dbg !11996
  %4 = load i8, i8* %1, align 1, !dbg !11997, !tbaa !3150
  %5 = icmp eq i8 %4, 0, !dbg !4049
  br i1 %5, label %15, label %6, !dbg !4049

; <label>:6:                                      ; preds = %3
  br label %7, !dbg !11998

; <label>:7:                                      ; preds = %6, %7
  %8 = phi i8 [ %13, %7 ], [ %4, %6 ]
  %9 = phi i8* [ %12, %7 ], [ %1, %6 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !4030, metadata !DIExpression()), !dbg !11996
  %10 = zext i8 %8 to i64, !dbg !11998
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @breakat_flags, i64 0, i64 %10, !dbg !11998
  store i8 1, i8* %11, align 1, !dbg !11999, !tbaa !3150
  %12 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !12000
  call void @llvm.dbg.value(metadata i8* %12, metadata !4030, metadata !DIExpression()), !dbg !11996
  %13 = load i8, i8* %12, align 1, !dbg !11997, !tbaa !3150
  %14 = icmp eq i8 %13, 0, !dbg !4049
  br i1 %14, label %15, label %7, !dbg !4049, !llvm.loop !4048

; <label>:15:                                     ; preds = %7, %3, %0
  ret void, !dbg !12001
}

; Function Attrs: nounwind uwtable
define i32 @can_bs(i32) local_unnamed_addr #0 !dbg !12002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %2 = icmp eq i32 %0, 115, !dbg !12006
  br i1 %2, label %3, label %7, !dbg !12008

; <label>:3:                                      ; preds = %1
  %4 = load %struct.file_buffer*, %struct.file_buffer** @curbuf, align 8, !dbg !12009, !tbaa !3115
  %5 = tail call i32 @bt_prompt(%struct.file_buffer* %4) #11, !dbg !12010
  %6 = icmp eq i32 %5, 0, !dbg !12010
  br i1 %6, label %7, label %18, !dbg !12011

; <label>:7:                                      ; preds = %3, %1
  %8 = load i8*, i8** @p_bs, align 8, !dbg !12012, !tbaa !3115
  %9 = load i8, i8* %8, align 1, !dbg !12013, !tbaa !3150
  switch i8 %9, label %15 [
    i8 51, label %18
    i8 50, label %10
    i8 49, label %12
    i8 48, label %14
  ], !dbg !12014

; <label>:10:                                     ; preds = %7
  %11 = icmp ne i32 %0, 112, !dbg !12015
  br label %18, !dbg !12017

; <label>:12:                                     ; preds = %7
  %13 = icmp ne i32 %0, 115, !dbg !12018
  br label %18, !dbg !12019

; <label>:14:                                     ; preds = %7
  br label %18, !dbg !12020

; <label>:15:                                     ; preds = %7
  %16 = tail call i8* @vim_strchr(i8* %8, i32 %0) #11, !dbg !12021
  %17 = icmp ne i8* %16, null, !dbg !12022
  br label %18, !dbg !12023

; <label>:18:                                     ; preds = %7, %3, %15, %14, %12, %10
  %19 = phi i1 [ %17, %15 ], [ false, %14 ], [ %13, %12 ], [ %11, %10 ], [ false, %3 ], [ true, %7 ]
  %20 = zext i1 %19 to i32
  ret i32 %20, !dbg !12024
}

declare i32 @bt_prompt(%struct.file_buffer*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly uwtable
define i64 @get_scrolloff_value() local_unnamed_addr #10 !dbg !12025 {
  %1 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12028, !tbaa !3115
  %2 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 129, !dbg !12029
  %3 = load i64, i64* %2, align 8, !dbg !12029, !tbaa !8368
  %4 = icmp slt i64 %3, 0, !dbg !12030
  %5 = load i64, i64* @p_so, align 8, !dbg !12031
  %6 = select i1 %4, i64 %5, i64 %3, !dbg !12028
  ret i64 %6, !dbg !12032
}

; Function Attrs: norecurse nounwind readonly uwtable
define i64 @get_sidescrolloff_value() local_unnamed_addr #10 !dbg !12033 {
  %1 = load %struct.window_S*, %struct.window_S** @curwin, align 8, !dbg !12034, !tbaa !3115
  %2 = getelementptr inbounds %struct.window_S, %struct.window_S* %1, i64 0, i32 128, !dbg !12035
  %3 = load i64, i64* %2, align 8, !dbg !12035, !tbaa !8363
  %4 = icmp slt i64 %3, 0, !dbg !12036
  %5 = load i64, i64* @p_siso, align 8, !dbg !12037
  %6 = select i1 %4, i64 %5, i64 %3, !dbg !12034
  ret i64 %6, !dbg !12038
}

; Function Attrs: nounwind readonly uwtable
define i32 @get_bkc_value(%struct.file_buffer* nocapture readonly) local_unnamed_addr #7 !dbg !12039 {
  call void @llvm.dbg.value(metadata %struct.file_buffer* %0, metadata !12043, metadata !DIExpression()), !dbg !12044
  %2 = getelementptr inbounds %struct.file_buffer, %struct.file_buffer* %0, i64 0, i32 70, !dbg !12045
  %3 = load i32, i32* %2, align 8, !dbg !12045, !tbaa !11068
  %4 = icmp eq i32 %3, 0, !dbg !12046
  %5 = load i32, i32* @bkc_flags, align 4, !dbg !12047
  %6 = select i1 %4, i32 %5, i32 %3, !dbg !12046
  ret i32 %6, !dbg !12048
}

; Function Attrs: nounwind readonly uwtable
define i8* @get_showbreak_value(%struct.window_S* nocapture readonly) local_unnamed_addr #7 !dbg !12049 {
  call void @llvm.dbg.value(metadata %struct.window_S* %0, metadata !12053, metadata !DIExpression()), !dbg !12054
  %2 = getelementptr inbounds %struct.window_S, %struct.window_S* %0, i64 0, i32 121, i32 36, !dbg !12055
  %3 = load i8*, i8** %2, align 8, !dbg !12055, !tbaa !8433
  %4 = icmp eq i8* %3, null, !dbg !12057
  br i1 %4, label %8, label %5, !dbg !12058

; <label>:5:                                      ; preds = %1
  %6 = load i8, i8* %3, align 1, !dbg !12059, !tbaa !3150
  %7 = icmp eq i8 %6, 0, !dbg !12060
  br i1 %7, label %8, label %10, !dbg !12061

; <label>:8:                                      ; preds = %5, %1
  %9 = load i8*, i8** @p_sbr, align 8, !dbg !12062, !tbaa !3115
  ret i8* %9, !dbg !12063

; <label>:10:                                     ; preds = %5
  %11 = tail call i32 @strcmp(i8* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i64 0, i64 0)) #12, !dbg !12064
  %12 = icmp eq i32 %11, 0, !dbg !12066
  %13 = load i8*, i8** @empty_option, align 8, !dbg !12067
  %14 = select i1 %12, i8* %13, i8* %3, !dbg !12068
  ret i8* %14, !dbg !12068
}

; Function Attrs: nounwind uwtable
define %struct.dictvar_S* @get_winbuf_options(i32) local_unnamed_addr #0 !dbg !12069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12073, metadata !DIExpression()), !dbg !12083
  %2 = tail call %struct.dictvar_S* @dict_alloc() #11, !dbg !12084
  call void @llvm.dbg.value(metadata %struct.dictvar_S* %2, metadata !12074, metadata !DIExpression()), !dbg !12085
  %3 = icmp eq %struct.dictvar_S* %2, null, !dbg !12086
  br i1 %3, label %56, label %4, !dbg !12088

; <label>:4:                                      ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !12075, metadata !DIExpression()), !dbg !12089
  %5 = icmp eq i32 %0, 0
  br label %6, !dbg !12090

; <label>:6:                                      ; preds = %54, %4
  %7 = phi i64 [ %55, %54 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i64 %7, metadata !12075, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i64 %7, metadata !3476, metadata !DIExpression()), !dbg !12091
  %8 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 0, !dbg !12093
  %9 = load i8*, i8** %8, align 16, !dbg !12093, !tbaa !3453
  %10 = load i8, i8* %9, align 1, !dbg !12095, !tbaa !3150
  %11 = icmp eq i8 %10, 116, !dbg !12096
  br i1 %11, label %12, label %16, !dbg !12097

; <label>:12:                                     ; preds = %6
  %13 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !12098
  %14 = load i8, i8* %13, align 1, !dbg !12098, !tbaa !3150
  %15 = icmp eq i8 %14, 95, !dbg !12099
  br i1 %15, label %56, label %16, !dbg !12100

; <label>:16:                                     ; preds = %12, %6
  %17 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, !dbg !12101
  call void @llvm.dbg.value(metadata %struct.vimoption* %17, metadata !12076, metadata !DIExpression()), !dbg !12102
  %18 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 4
  %19 = load i32, i32* %18, align 16, !tbaa !4220
  br i1 %5, label %23, label %20, !dbg !12103

; <label>:20:                                     ; preds = %16
  %21 = and i32 %19, 16384, !dbg !12104
  %22 = icmp eq i32 %21, 0, !dbg !12104
  br i1 %22, label %54, label %26, !dbg !12105

; <label>:23:                                     ; preds = %16
  %24 = and i32 %19, 8192, !dbg !12106
  %25 = icmp eq i32 %24, 0, !dbg !12106
  br i1 %25, label %54, label %26, !dbg !12107

; <label>:26:                                     ; preds = %20, %23
  %27 = tail call fastcc i8* @get_varp(%struct.vimoption* nonnull %17), !dbg !12108
  call void @llvm.dbg.value(metadata i8* %27, metadata !12080, metadata !DIExpression()), !dbg !12109
  %28 = icmp eq i8* %27, null, !dbg !12110
  br i1 %28, label %54, label %29, !dbg !12112

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %7, i32 2, !dbg !12113
  %31 = load i64, i64* %30, align 16, !dbg !12113, !tbaa !3107
  %32 = and i64 %31, 4, !dbg !12116
  %33 = icmp eq i64 %32, 0, !dbg !12116
  br i1 %33, label %40, label %34, !dbg !12117

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 0, !dbg !12118
  %36 = load i8*, i8** %35, align 16, !dbg !12118, !tbaa !3453
  %37 = bitcast i8* %27 to i8**, !dbg !12119
  %38 = load i8*, i8** %37, align 8, !dbg !12119, !tbaa !3115
  %39 = tail call i32 @dict_add_string(%struct.dictvar_S* nonnull %2, i8* %36, i8* %38) #11, !dbg !12120
  br label %54, !dbg !12120

; <label>:40:                                     ; preds = %29
  %41 = and i64 %31, 2, !dbg !12121
  %42 = icmp eq i64 %41, 0, !dbg !12121
  %43 = getelementptr inbounds %struct.vimoption, %struct.vimoption* %17, i64 0, i32 0
  %44 = load i8*, i8** %43, align 16, !tbaa !3453
  br i1 %42, label %49, label %45, !dbg !12123

; <label>:45:                                     ; preds = %40
  %46 = bitcast i8* %27 to i64*, !dbg !12124
  %47 = load i64, i64* %46, align 8, !dbg !12124, !tbaa !4248
  %48 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %2, i8* %44, i64 %47) #11, !dbg !12125
  br label %54, !dbg !12125

; <label>:49:                                     ; preds = %40
  %50 = bitcast i8* %27 to i32*, !dbg !12126
  %51 = load i32, i32* %50, align 4, !dbg !12126, !tbaa !3060
  %52 = sext i32 %51 to i64, !dbg !12126
  %53 = tail call i32 @dict_add_number(%struct.dictvar_S* nonnull %2, i8* %44, i64 %52) #11, !dbg !12127
  br label %54

; <label>:54:                                     ; preds = %20, %45, %49, %34, %26, %23
  %55 = add nuw i64 %7, 1, !dbg !12128
  br label %6, !dbg !12129, !llvm.loop !12130

; <label>:56:                                     ; preds = %12, %1
  %57 = phi %struct.dictvar_S* [ null, %1 ], [ %2, %12 ]
  ret %struct.dictvar_S* %57, !dbg !12132
}

declare %struct.dictvar_S* @dict_alloc() local_unnamed_addr #3

declare i32 @dict_add_string(%struct.dictvar_S*, i8*, i8*) local_unnamed_addr #3

declare i32 @dict_add_number(%struct.dictvar_S*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define i32 @magic_isset() local_unnamed_addr #0 !dbg !12133 {
  %1 = load i32, i32* @magic_overruled, align 4, !dbg !12136, !tbaa !3150
  switch i32 %1, label %3 [
    i32 1, label %8
    i32 2, label %2
  ], !dbg !12137

; <label>:2:                                      ; preds = %0
  br label %8, !dbg !12138

; <label>:3:                                      ; preds = %0
  %4 = tail call i32 @in_vim9script() #11, !dbg !12140
  %5 = icmp eq i32 %4, 0, !dbg !12140
  %6 = load i32, i32* @p_magic, align 4, !dbg !12142
  %7 = select i1 %5, i32 %6, i32 1, !dbg !12143
  ret i32 %7, !dbg !12143

; <label>:8:                                      ; preds = %0, %2
  %9 = phi i32 [ 0, %2 ], [ %1, %0 ]
  ret i32 %9, !dbg !12144
}

declare i32 @in_vim9script() local_unnamed_addr #3

declare void @win_comp_scroll(%struct.window_S*) local_unnamed_addr #3

declare void @parse_cino(%struct.file_buffer*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @getuid() local_unnamed_addr #6

declare void @expand_env_esc(i8*, i8*, i32, i32, i32, i8*) local_unnamed_addr #3

declare i32 @init_chartab() local_unnamed_addr #3

declare void @didset_string_options() local_unnamed_addr #3

declare i32 @spell_check_msm() local_unnamed_addr #3

declare i32 @spell_check_sps() local_unnamed_addr #3

declare i8* @did_set_spell_option(i32) local_unnamed_addr #3

declare i8* @check_cedit() local_unnamed_addr #3

declare i32 @highlight_changed() local_unnamed_addr #3

declare i32 @check_opt_wim() local_unnamed_addr #3

declare i8* @check_clipboard_option() local_unnamed_addr #3

declare void @reset_cursorline() local_unnamed_addr #3

declare void @u_compute_hash(i8*) local_unnamed_addr #3

declare void @u_read_undo(i8*, i8*, i8*) local_unnamed_addr #3

declare void @gui_mch_mousehide(i32) local_unnamed_addr #3

declare i32 @term_in_normal_mode() local_unnamed_addr #3

declare i32 @bt_terminal(%struct.file_buffer*) local_unnamed_addr #3

declare i32 @term_is_finished(%struct.file_buffer*) local_unnamed_addr #3

declare i32 @apply_autocmds(i32, i8*, i8*, i32, %struct.file_buffer*) local_unnamed_addr #3

declare void @ml_open_file(%struct.file_buffer*) local_unnamed_addr #3

declare void @mf_close_file(%struct.file_buffer*, i32) local_unnamed_addr #3

declare void @set_no_hlsearch(i32) local_unnamed_addr #3

declare void @do_check_scrollbind(i32) local_unnamed_addr #3

declare void @win_equal(%struct.window_S*, i32, i32) local_unnamed_addr #3

declare void @gui_mch_enable_beval_area(%struct.BalloonEvalStruct*) local_unnamed_addr #3

declare void @gui_mch_disable_beval_area(%struct.BalloonEvalStruct*) local_unnamed_addr #3

declare void @mch_bevalterm_changed() local_unnamed_addr #3

declare void @do_autochdir() local_unnamed_addr #3

declare void @diff_buf_adjust(%struct.window_S*) local_unnamed_addr #3

declare i32 @foldmethodIsDiff(%struct.window_S*) local_unnamed_addr #3

declare void @foldUpdateAll(%struct.window_S*) local_unnamed_addr #3

declare void @im_set_active(i32) local_unnamed_addr #3

declare i8* @did_set_spelllang(%struct.window_S*) local_unnamed_addr #3

declare void @redraw_later_clear() local_unnamed_addr #3

declare void @msg_source(i32) local_unnamed_addr #3

declare i32 @msg_attr(i8*, i32) local_unnamed_addr #3

declare void @set_vim_var_string(i32, i8*, i32) local_unnamed_addr #3

declare void @highlight_gui_started() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @apply_optionset_autocmd(i32, i64, i64, i64, i64, i8* readnone) unnamed_addr #0 !dbg !12145 {
  %7 = alloca [12 x i8], align 1
  %8 = alloca [12 x i8], align 1
  %9 = alloca [12 x i8], align 1
  %10 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12149, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i64 %1, metadata !12150, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i64 %2, metadata !12151, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata i64 %3, metadata !12152, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i64 %4, metadata !12153, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i8* %5, metadata !12154, metadata !DIExpression()), !dbg !12165
  %11 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 0, !dbg !12166
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #11, !dbg !12166
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !12155, metadata !DIExpression()), !dbg !12167
  %12 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0, !dbg !12166
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #11, !dbg !12166
  call void @llvm.dbg.declare(metadata [12 x i8]* %8, metadata !12157, metadata !DIExpression()), !dbg !12168
  %13 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 0, !dbg !12166
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #11, !dbg !12166
  call void @llvm.dbg.declare(metadata [12 x i8]* %9, metadata !12158, metadata !DIExpression()), !dbg !12169
  %14 = getelementptr inbounds [12 x i8], [12 x i8]* %10, i64 0, i64 0, !dbg !12166
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #11, !dbg !12166
  call void @llvm.dbg.declare(metadata [12 x i8]* %10, metadata !12159, metadata !DIExpression()), !dbg !12170
  %15 = load i32, i32* @starting, align 4, !dbg !12171, !tbaa !3060
  %16 = icmp ne i32 %15, 0, !dbg !12171
  %17 = icmp ne i8* %5, null, !dbg !12173
  %18 = or i1 %17, %16, !dbg !12174
  br i1 %18, label %49, label %19, !dbg !12174

; <label>:19:                                     ; preds = %6
  %20 = tail call i8* @get_vim_var_str(i32 66) #11, !dbg !12175
  %21 = load i8, i8* %20, align 1, !dbg !12176, !tbaa !3150
  %22 = icmp eq i8 %21, 0, !dbg !12177
  br i1 %22, label %23, label %49, !dbg !12178

; <label>:23:                                     ; preds = %19
  %24 = call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %11, i64 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1053, i64 0, i64 0), i64 %2) #11, !dbg !12179
  %25 = call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %12, i64 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1053, i64 0, i64 0), i64 %3) #11, !dbg !12180
  %26 = call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %13, i64 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1053, i64 0, i64 0), i64 %4) #11, !dbg !12181
  %27 = and i64 %1, 4, !dbg !12182
  %28 = icmp ne i64 %27, 0, !dbg !12183
  %29 = select i1 %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1055, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1056, i64 0, i64 0), !dbg !12183
  %30 = call i32 (i8*, i64, i8*, ...) @vim_snprintf(i8* nonnull %14, i64 12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1054, i64 0, i64 0), i8* %29) #11, !dbg !12184
  call void @set_vim_var_string(i32 61, i8* nonnull %13, i32 -1) #11, !dbg !12185
  call void @set_vim_var_string(i32 62, i8* nonnull %11, i32 -1) #11, !dbg !12186
  call void @set_vim_var_string(i32 66, i8* nonnull %14, i32 -1) #11, !dbg !12187
  br i1 %28, label %31, label %32, !dbg !12188

; <label>:31:                                     ; preds = %23
  call void @set_vim_var_string(i32 65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i32 -1) #11, !dbg !12189
  call void @set_vim_var_string(i32 63, i8* nonnull %11, i32 -1) #11, !dbg !12192
  br label %32, !dbg !12193

; <label>:32:                                     ; preds = %31, %23
  %33 = and i64 %1, 2, !dbg !12194
  %34 = icmp eq i64 %33, 0, !dbg !12194
  br i1 %34, label %36, label %35, !dbg !12196

; <label>:35:                                     ; preds = %32
  call void @set_vim_var_string(i32 65, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1057, i64 0, i64 0), i32 -1) #11, !dbg !12197
  call void @set_vim_var_string(i32 64, i8* nonnull %11, i32 -1) #11, !dbg !12199
  br label %36, !dbg !12200

; <label>:36:                                     ; preds = %32, %35
  %37 = and i64 %1, 6, !dbg !12201
  %38 = icmp eq i64 %37, 0, !dbg !12203
  br i1 %38, label %39, label %40, !dbg !12204

; <label>:39:                                     ; preds = %36
  call void @set_vim_var_string(i32 65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i64 0, i64 0), i32 -1) #11, !dbg !12205
  call void @set_vim_var_string(i32 63, i8* nonnull %11, i32 -1) #11, !dbg !12207
  call void @set_vim_var_string(i32 64, i8* nonnull %12, i32 -1) #11, !dbg !12208
  br label %40, !dbg !12209

; <label>:40:                                     ; preds = %39, %36
  %41 = and i64 %1, 8, !dbg !12210
  %42 = icmp eq i64 %41, 0, !dbg !12210
  br i1 %42, label %44, label %43, !dbg !12212

; <label>:43:                                     ; preds = %40
  call void @set_vim_var_string(i32 65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.549, i64 0, i64 0), i32 -1) #11, !dbg !12213
  call void @set_vim_var_string(i32 63, i8* nonnull %11, i32 -1) #11, !dbg !12215
  br label %44, !dbg !12216

; <label>:44:                                     ; preds = %40, %43
  %45 = sext i32 %0 to i64, !dbg !12217
  %46 = getelementptr inbounds [508 x %struct.vimoption], [508 x %struct.vimoption]* @options, i64 0, i64 %45, i32 0, !dbg !12218
  %47 = load i8*, i8** %46, align 16, !dbg !12218, !tbaa !3453
  %48 = call i32 @apply_autocmds(i32 66, i8* %47, i8* null, i32 0, %struct.file_buffer* null) #11, !dbg !12219
  call void @reset_v_option_vars() #11, !dbg !12220
  br label %49, !dbg !12221

; <label>:49:                                     ; preds = %6, %19, %44
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #11, !dbg !12221
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #11, !dbg !12221
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #11, !dbg !12221
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #11, !dbg !12221
  ret void, !dbg !12221
}

declare i8* @get_vim_var_str(i32) local_unnamed_addr #3

declare i32 @vim_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #3

declare void @reset_v_option_vars() local_unnamed_addr #3

declare i32 @tabstop_count(i32*) local_unnamed_addr #3

declare i32 @tabstop_first(i32*) local_unnamed_addr #3

declare void @win_setheight(i32) local_unnamed_addr #3

declare void @win_setminheight() local_unnamed_addr #3

declare void @win_setwidth(i32) local_unnamed_addr #3

declare void @win_setminwidth() local_unnamed_addr #3

declare void @last_status(i32) local_unnamed_addr #3

declare void @shell_new_rows() local_unnamed_addr #3

declare i32 @gui_mch_adjust_charheight() local_unnamed_addr #3

declare void @gui_set_shellsize(i32, i32, i32) local_unnamed_addr #3

declare void @newFoldLevel() local_unnamed_addr #3

declare i32 @foldmethodIsSyntax(%struct.window_S*) local_unnamed_addr #3

declare i32 @foldmethodIsIndent(%struct.window_S*) local_unnamed_addr #3

declare void @screenclear() local_unnamed_addr #3

declare i32 @showmode() local_unnamed_addr #3

declare void @status_redraw_curbuf() local_unnamed_addr #3

declare i32 @min_rows() local_unnamed_addr #3

declare void @command_height() local_unnamed_addr #3

declare void @ml_open_files() local_unnamed_addr #3

declare void @u_sync(i32) local_unnamed_addr #3

declare void @limit_screen_size() local_unnamed_addr #3

declare void @set_shellsize(i32, i32, i32) local_unnamed_addr #3

declare void @check_shellsize() local_unnamed_addr #3

declare i32 @find_special_key(i8**, i32*, i32, i32*) local_unnamed_addr #3

declare void @msg_puts_title(i8*) local_unnamed_addr #3

declare i32 @message_filtered(i8*) local_unnamed_addr #3

declare i32 @vim_strsize(i8*) local_unnamed_addr #3

declare void @ui_breakcheck() local_unnamed_addr #3

declare void @msg_puts(i8*) local_unnamed_addr #3

declare i32 @msg_outtrans(i8*) local_unnamed_addr #3

declare i32 @put_escstr(%struct._IO_FILE*, i8*, i32) local_unnamed_addr #3

declare i8* @str2special(i8**, i32) local_unnamed_addr #3

declare void @home_replace(%struct.file_buffer*, i8*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @copy_option_part(i8**, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) local_unnamed_addr #6

declare i8* @get_special_key_name(i32, i32) local_unnamed_addr #3

declare i32 @find_special_key_in_table(i32) local_unnamed_addr #3

declare void @iemsg(i8*) local_unnamed_addr #3

declare i8* @transchar(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

declare void @str2specialbuf(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3053, !3054, !3055}
!llvm.ident = !{!3056}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "p_vfile", scope: !2, file: !711, line: 1053, type: !1124, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.1-14 (tags/RELEASE_601/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1123, globals: !2859)
!3 = !DIFile(filename: "option.c", directory: "/home/sahil/vim/src")
!4 = !{!5, !23, !30, !36, !42, !49, !57, !62, !71, !76, !81, !88, !93, !675, !689, !695, !710, !758, !845, !857, !862, !871, !982, !1072}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1374, size: 32, elements: !7)
!6 = !DIFile(filename: "./structs.h", directory: "/home/sahil/vim/src")
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22}
!8 = !DIEnumerator(name: "VAR_UNKNOWN", value: 0)
!9 = !DIEnumerator(name: "VAR_ANY", value: 1)
!10 = !DIEnumerator(name: "VAR_VOID", value: 2)
!11 = !DIEnumerator(name: "VAR_BOOL", value: 3)
!12 = !DIEnumerator(name: "VAR_SPECIAL", value: 4)
!13 = !DIEnumerator(name: "VAR_NUMBER", value: 5)
!14 = !DIEnumerator(name: "VAR_FLOAT", value: 6)
!15 = !DIEnumerator(name: "VAR_STRING", value: 7)
!16 = !DIEnumerator(name: "VAR_BLOB", value: 8)
!17 = !DIEnumerator(name: "VAR_FUNC", value: 9)
!18 = !DIEnumerator(name: "VAR_PARTIAL", value: 10)
!19 = !DIEnumerator(name: "VAR_LIST", value: 11)
!20 = !DIEnumerator(name: "VAR_DICT", value: 12)
!21 = !DIEnumerator(name: "VAR_JOB", value: 13)
!22 = !DIEnumerator(name: "VAR_CHANNEL", value: 14)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1585, size: 32, elements: !24)
!24 = !{!25, !26, !27, !28, !29}
!25 = !DIEnumerator(name: "UF_NOT_COMPILED", value: 0)
!26 = !DIEnumerator(name: "UF_TO_BE_COMPILED", value: 1)
!27 = !DIEnumerator(name: "UF_COMPILING", value: 2)
!28 = !DIEnumerator(name: "UF_COMPILED", value: 3)
!29 = !DIEnumerator(name: "UF_COMPILE_ERROR", value: 4)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2061, size: 32, elements: !31)
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "JOB_FAILED", value: 0)
!33 = !DIEnumerator(name: "JOB_STARTED", value: 1)
!34 = !DIEnumerator(name: "JOB_ENDED", value: 2)
!35 = !DIEnumerator(name: "JOB_FINISHED", value: 3)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2140, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41}
!38 = !DIEnumerator(name: "MODE_NL", value: 0)
!39 = !DIEnumerator(name: "MODE_RAW", value: 1)
!40 = !DIEnumerator(name: "MODE_JSON", value: 2)
!41 = !DIEnumerator(name: "MODE_JS", value: 3)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2148, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48}
!44 = !DIEnumerator(name: "JIO_PIPE", value: 0)
!45 = !DIEnumerator(name: "JIO_NULL", value: 1)
!46 = !DIEnumerator(name: "JIO_FILE", value: 2)
!47 = !DIEnumerator(name: "JIO_BUFFER", value: 3)
!48 = !DIEnumerator(name: "JIO_OUT", value: 4)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2517, size: 32, elements: !50)
!50 = !{!51, !52, !53, !54, !55, !56}
!51 = !DIEnumerator(name: "POPPOS_BOTLEFT", value: 0)
!52 = !DIEnumerator(name: "POPPOS_TOPLEFT", value: 1)
!53 = !DIEnumerator(name: "POPPOS_BOTRIGHT", value: 2)
!54 = !DIEnumerator(name: "POPPOS_TOPRIGHT", value: 3)
!55 = !DIEnumerator(name: "POPPOS_CENTER", value: 4)
!56 = !DIEnumerator(name: "POPPOS_NONE", value: 5)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2526, size: 32, elements: !58)
!58 = !{!59, !60, !61}
!59 = !DIEnumerator(name: "POPCLOSE_NONE", value: 0)
!60 = !DIEnumerator(name: "POPCLOSE_BUTTON", value: 1)
!61 = !DIEnumerator(name: "POPCLOSE_CLICK", value: 2)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !63, line: 55, size: 32, elements: !64)
!63 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkvisual.h", directory: "/home/sahil/vim/src")
!64 = !{!65, !66, !67, !68, !69, !70}
!65 = !DIEnumerator(name: "GDK_VISUAL_STATIC_GRAY", value: 0)
!66 = !DIEnumerator(name: "GDK_VISUAL_GRAYSCALE", value: 1)
!67 = !DIEnumerator(name: "GDK_VISUAL_STATIC_COLOR", value: 2)
!68 = !DIEnumerator(name: "GDK_VISUAL_PSEUDO_COLOR", value: 3)
!69 = !DIEnumerator(name: "GDK_VISUAL_TRUE_COLOR", value: 4)
!70 = !DIEnumerator(name: "GDK_VISUAL_DIRECT_COLOR", value: 5)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 118, size: 32, elements: !73)
!72 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdktypes.h", directory: "/home/sahil/vim/src")
!73 = !{!74, !75}
!74 = !DIEnumerator(name: "GDK_LSB_FIRST", value: 0)
!75 = !DIEnumerator(name: "GDK_MSB_FIRST", value: 1)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 43, size: 32, elements: !78)
!77 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkfont.h", directory: "/home/sahil/vim/src")
!78 = !{!79, !80}
!79 = !DIEnumerator(name: "GDK_FONT_FONT", value: 0)
!80 = !DIEnumerator(name: "GDK_FONT_FONTSET", value: 1)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !82, line: 52, size: 32, elements: !83)
!82 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkrc.h", directory: "/home/sahil/vim/src")
!83 = !{!84, !85, !86, !87}
!84 = !DIEnumerator(name: "GTK_RC_FG", value: 1)
!85 = !DIEnumerator(name: "GTK_RC_BG", value: 2)
!86 = !DIEnumerator(name: "GTK_RC_TEXT", value: 4)
!87 = !DIEnumerator(name: "GTK_RC_BASE", value: 8)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 239, size: 32, elements: !90)
!89 = !DIFile(filename: "./optiondefs.h", directory: "/home/sahil/vim/src")
!90 = !{!91, !92}
!91 = !DIEnumerator(name: "PV_NONE", value: 0)
!92 = !DIEnumerator(name: "PV_MAXVAL", value: 65535)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CMD_index", file: !94, line: 110, size: 32, elements: !95)
!94 = !DIFile(filename: "./ex_cmds.h", directory: "/home/sahil/vim/src")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674}
!96 = !DIEnumerator(name: "CMD_append", value: 0)
!97 = !DIEnumerator(name: "CMD_abbreviate", value: 1)
!98 = !DIEnumerator(name: "CMD_abclear", value: 2)
!99 = !DIEnumerator(name: "CMD_aboveleft", value: 3)
!100 = !DIEnumerator(name: "CMD_all", value: 4)
!101 = !DIEnumerator(name: "CMD_amenu", value: 5)
!102 = !DIEnumerator(name: "CMD_anoremenu", value: 6)
!103 = !DIEnumerator(name: "CMD_args", value: 7)
!104 = !DIEnumerator(name: "CMD_argadd", value: 8)
!105 = !DIEnumerator(name: "CMD_argdelete", value: 9)
!106 = !DIEnumerator(name: "CMD_argdo", value: 10)
!107 = !DIEnumerator(name: "CMD_argedit", value: 11)
!108 = !DIEnumerator(name: "CMD_argglobal", value: 12)
!109 = !DIEnumerator(name: "CMD_arglocal", value: 13)
!110 = !DIEnumerator(name: "CMD_argument", value: 14)
!111 = !DIEnumerator(name: "CMD_ascii", value: 15)
!112 = !DIEnumerator(name: "CMD_autocmd", value: 16)
!113 = !DIEnumerator(name: "CMD_augroup", value: 17)
!114 = !DIEnumerator(name: "CMD_aunmenu", value: 18)
!115 = !DIEnumerator(name: "CMD_buffer", value: 19)
!116 = !DIEnumerator(name: "CMD_bNext", value: 20)
!117 = !DIEnumerator(name: "CMD_ball", value: 21)
!118 = !DIEnumerator(name: "CMD_badd", value: 22)
!119 = !DIEnumerator(name: "CMD_balt", value: 23)
!120 = !DIEnumerator(name: "CMD_bdelete", value: 24)
!121 = !DIEnumerator(name: "CMD_behave", value: 25)
!122 = !DIEnumerator(name: "CMD_belowright", value: 26)
!123 = !DIEnumerator(name: "CMD_bfirst", value: 27)
!124 = !DIEnumerator(name: "CMD_blast", value: 28)
!125 = !DIEnumerator(name: "CMD_bmodified", value: 29)
!126 = !DIEnumerator(name: "CMD_bnext", value: 30)
!127 = !DIEnumerator(name: "CMD_botright", value: 31)
!128 = !DIEnumerator(name: "CMD_bprevious", value: 32)
!129 = !DIEnumerator(name: "CMD_brewind", value: 33)
!130 = !DIEnumerator(name: "CMD_break", value: 34)
!131 = !DIEnumerator(name: "CMD_breakadd", value: 35)
!132 = !DIEnumerator(name: "CMD_breakdel", value: 36)
!133 = !DIEnumerator(name: "CMD_breaklist", value: 37)
!134 = !DIEnumerator(name: "CMD_browse", value: 38)
!135 = !DIEnumerator(name: "CMD_buffers", value: 39)
!136 = !DIEnumerator(name: "CMD_bufdo", value: 40)
!137 = !DIEnumerator(name: "CMD_bunload", value: 41)
!138 = !DIEnumerator(name: "CMD_bwipeout", value: 42)
!139 = !DIEnumerator(name: "CMD_change", value: 43)
!140 = !DIEnumerator(name: "CMD_cNext", value: 44)
!141 = !DIEnumerator(name: "CMD_cNfile", value: 45)
!142 = !DIEnumerator(name: "CMD_cabbrev", value: 46)
!143 = !DIEnumerator(name: "CMD_cabclear", value: 47)
!144 = !DIEnumerator(name: "CMD_cabove", value: 48)
!145 = !DIEnumerator(name: "CMD_caddbuffer", value: 49)
!146 = !DIEnumerator(name: "CMD_caddexpr", value: 50)
!147 = !DIEnumerator(name: "CMD_caddfile", value: 51)
!148 = !DIEnumerator(name: "CMD_cafter", value: 52)
!149 = !DIEnumerator(name: "CMD_call", value: 53)
!150 = !DIEnumerator(name: "CMD_catch", value: 54)
!151 = !DIEnumerator(name: "CMD_cbuffer", value: 55)
!152 = !DIEnumerator(name: "CMD_cbefore", value: 56)
!153 = !DIEnumerator(name: "CMD_cbelow", value: 57)
!154 = !DIEnumerator(name: "CMD_cbottom", value: 58)
!155 = !DIEnumerator(name: "CMD_cc", value: 59)
!156 = !DIEnumerator(name: "CMD_cclose", value: 60)
!157 = !DIEnumerator(name: "CMD_cd", value: 61)
!158 = !DIEnumerator(name: "CMD_cdo", value: 62)
!159 = !DIEnumerator(name: "CMD_center", value: 63)
!160 = !DIEnumerator(name: "CMD_cexpr", value: 64)
!161 = !DIEnumerator(name: "CMD_cfile", value: 65)
!162 = !DIEnumerator(name: "CMD_cfdo", value: 66)
!163 = !DIEnumerator(name: "CMD_cfirst", value: 67)
!164 = !DIEnumerator(name: "CMD_cgetfile", value: 68)
!165 = !DIEnumerator(name: "CMD_cgetbuffer", value: 69)
!166 = !DIEnumerator(name: "CMD_cgetexpr", value: 70)
!167 = !DIEnumerator(name: "CMD_chdir", value: 71)
!168 = !DIEnumerator(name: "CMD_changes", value: 72)
!169 = !DIEnumerator(name: "CMD_checkpath", value: 73)
!170 = !DIEnumerator(name: "CMD_checktime", value: 74)
!171 = !DIEnumerator(name: "CMD_chistory", value: 75)
!172 = !DIEnumerator(name: "CMD_clist", value: 76)
!173 = !DIEnumerator(name: "CMD_clast", value: 77)
!174 = !DIEnumerator(name: "CMD_close", value: 78)
!175 = !DIEnumerator(name: "CMD_clearjumps", value: 79)
!176 = !DIEnumerator(name: "CMD_cmap", value: 80)
!177 = !DIEnumerator(name: "CMD_cmapclear", value: 81)
!178 = !DIEnumerator(name: "CMD_cmenu", value: 82)
!179 = !DIEnumerator(name: "CMD_cnext", value: 83)
!180 = !DIEnumerator(name: "CMD_cnewer", value: 84)
!181 = !DIEnumerator(name: "CMD_cnfile", value: 85)
!182 = !DIEnumerator(name: "CMD_cnoremap", value: 86)
!183 = !DIEnumerator(name: "CMD_cnoreabbrev", value: 87)
!184 = !DIEnumerator(name: "CMD_cnoremenu", value: 88)
!185 = !DIEnumerator(name: "CMD_copy", value: 89)
!186 = !DIEnumerator(name: "CMD_colder", value: 90)
!187 = !DIEnumerator(name: "CMD_colorscheme", value: 91)
!188 = !DIEnumerator(name: "CMD_command", value: 92)
!189 = !DIEnumerator(name: "CMD_comclear", value: 93)
!190 = !DIEnumerator(name: "CMD_compiler", value: 94)
!191 = !DIEnumerator(name: "CMD_continue", value: 95)
!192 = !DIEnumerator(name: "CMD_confirm", value: 96)
!193 = !DIEnumerator(name: "CMD_const", value: 97)
!194 = !DIEnumerator(name: "CMD_copen", value: 98)
!195 = !DIEnumerator(name: "CMD_cprevious", value: 99)
!196 = !DIEnumerator(name: "CMD_cpfile", value: 100)
!197 = !DIEnumerator(name: "CMD_cquit", value: 101)
!198 = !DIEnumerator(name: "CMD_crewind", value: 102)
!199 = !DIEnumerator(name: "CMD_cscope", value: 103)
!200 = !DIEnumerator(name: "CMD_cstag", value: 104)
!201 = !DIEnumerator(name: "CMD_cunmap", value: 105)
!202 = !DIEnumerator(name: "CMD_cunabbrev", value: 106)
!203 = !DIEnumerator(name: "CMD_cunmenu", value: 107)
!204 = !DIEnumerator(name: "CMD_cwindow", value: 108)
!205 = !DIEnumerator(name: "CMD_delete", value: 109)
!206 = !DIEnumerator(name: "CMD_delmarks", value: 110)
!207 = !DIEnumerator(name: "CMD_debug", value: 111)
!208 = !DIEnumerator(name: "CMD_debuggreedy", value: 112)
!209 = !DIEnumerator(name: "CMD_def", value: 113)
!210 = !DIEnumerator(name: "CMD_defcompile", value: 114)
!211 = !DIEnumerator(name: "CMD_delcommand", value: 115)
!212 = !DIEnumerator(name: "CMD_delfunction", value: 116)
!213 = !DIEnumerator(name: "CMD_display", value: 117)
!214 = !DIEnumerator(name: "CMD_diffupdate", value: 118)
!215 = !DIEnumerator(name: "CMD_diffget", value: 119)
!216 = !DIEnumerator(name: "CMD_diffoff", value: 120)
!217 = !DIEnumerator(name: "CMD_diffpatch", value: 121)
!218 = !DIEnumerator(name: "CMD_diffput", value: 122)
!219 = !DIEnumerator(name: "CMD_diffsplit", value: 123)
!220 = !DIEnumerator(name: "CMD_diffthis", value: 124)
!221 = !DIEnumerator(name: "CMD_digraphs", value: 125)
!222 = !DIEnumerator(name: "CMD_disassemble", value: 126)
!223 = !DIEnumerator(name: "CMD_djump", value: 127)
!224 = !DIEnumerator(name: "CMD_dlist", value: 128)
!225 = !DIEnumerator(name: "CMD_doautocmd", value: 129)
!226 = !DIEnumerator(name: "CMD_doautoall", value: 130)
!227 = !DIEnumerator(name: "CMD_drop", value: 131)
!228 = !DIEnumerator(name: "CMD_dsearch", value: 132)
!229 = !DIEnumerator(name: "CMD_dsplit", value: 133)
!230 = !DIEnumerator(name: "CMD_edit", value: 134)
!231 = !DIEnumerator(name: "CMD_earlier", value: 135)
!232 = !DIEnumerator(name: "CMD_echo", value: 136)
!233 = !DIEnumerator(name: "CMD_echoerr", value: 137)
!234 = !DIEnumerator(name: "CMD_echohl", value: 138)
!235 = !DIEnumerator(name: "CMD_echomsg", value: 139)
!236 = !DIEnumerator(name: "CMD_echoconsole", value: 140)
!237 = !DIEnumerator(name: "CMD_echon", value: 141)
!238 = !DIEnumerator(name: "CMD_else", value: 142)
!239 = !DIEnumerator(name: "CMD_elseif", value: 143)
!240 = !DIEnumerator(name: "CMD_emenu", value: 144)
!241 = !DIEnumerator(name: "CMD_endif", value: 145)
!242 = !DIEnumerator(name: "CMD_enddef", value: 146)
!243 = !DIEnumerator(name: "CMD_endfunction", value: 147)
!244 = !DIEnumerator(name: "CMD_endfor", value: 148)
!245 = !DIEnumerator(name: "CMD_endtry", value: 149)
!246 = !DIEnumerator(name: "CMD_endwhile", value: 150)
!247 = !DIEnumerator(name: "CMD_enew", value: 151)
!248 = !DIEnumerator(name: "CMD_eval", value: 152)
!249 = !DIEnumerator(name: "CMD_ex", value: 153)
!250 = !DIEnumerator(name: "CMD_execute", value: 154)
!251 = !DIEnumerator(name: "CMD_exit", value: 155)
!252 = !DIEnumerator(name: "CMD_export", value: 156)
!253 = !DIEnumerator(name: "CMD_exusage", value: 157)
!254 = !DIEnumerator(name: "CMD_file", value: 158)
!255 = !DIEnumerator(name: "CMD_files", value: 159)
!256 = !DIEnumerator(name: "CMD_filetype", value: 160)
!257 = !DIEnumerator(name: "CMD_filter", value: 161)
!258 = !DIEnumerator(name: "CMD_find", value: 162)
!259 = !DIEnumerator(name: "CMD_final", value: 163)
!260 = !DIEnumerator(name: "CMD_finally", value: 164)
!261 = !DIEnumerator(name: "CMD_finish", value: 165)
!262 = !DIEnumerator(name: "CMD_first", value: 166)
!263 = !DIEnumerator(name: "CMD_fixdel", value: 167)
!264 = !DIEnumerator(name: "CMD_fold", value: 168)
!265 = !DIEnumerator(name: "CMD_foldclose", value: 169)
!266 = !DIEnumerator(name: "CMD_folddoopen", value: 170)
!267 = !DIEnumerator(name: "CMD_folddoclosed", value: 171)
!268 = !DIEnumerator(name: "CMD_foldopen", value: 172)
!269 = !DIEnumerator(name: "CMD_for", value: 173)
!270 = !DIEnumerator(name: "CMD_function", value: 174)
!271 = !DIEnumerator(name: "CMD_global", value: 175)
!272 = !DIEnumerator(name: "CMD_goto", value: 176)
!273 = !DIEnumerator(name: "CMD_grep", value: 177)
!274 = !DIEnumerator(name: "CMD_grepadd", value: 178)
!275 = !DIEnumerator(name: "CMD_gui", value: 179)
!276 = !DIEnumerator(name: "CMD_gvim", value: 180)
!277 = !DIEnumerator(name: "CMD_help", value: 181)
!278 = !DIEnumerator(name: "CMD_helpclose", value: 182)
!279 = !DIEnumerator(name: "CMD_helpfind", value: 183)
!280 = !DIEnumerator(name: "CMD_helpgrep", value: 184)
!281 = !DIEnumerator(name: "CMD_helptags", value: 185)
!282 = !DIEnumerator(name: "CMD_hardcopy", value: 186)
!283 = !DIEnumerator(name: "CMD_highlight", value: 187)
!284 = !DIEnumerator(name: "CMD_hide", value: 188)
!285 = !DIEnumerator(name: "CMD_history", value: 189)
!286 = !DIEnumerator(name: "CMD_insert", value: 190)
!287 = !DIEnumerator(name: "CMD_iabbrev", value: 191)
!288 = !DIEnumerator(name: "CMD_iabclear", value: 192)
!289 = !DIEnumerator(name: "CMD_if", value: 193)
!290 = !DIEnumerator(name: "CMD_ijump", value: 194)
!291 = !DIEnumerator(name: "CMD_ilist", value: 195)
!292 = !DIEnumerator(name: "CMD_imap", value: 196)
!293 = !DIEnumerator(name: "CMD_imapclear", value: 197)
!294 = !DIEnumerator(name: "CMD_imenu", value: 198)
!295 = !DIEnumerator(name: "CMD_import", value: 199)
!296 = !DIEnumerator(name: "CMD_inoremap", value: 200)
!297 = !DIEnumerator(name: "CMD_inoreabbrev", value: 201)
!298 = !DIEnumerator(name: "CMD_inoremenu", value: 202)
!299 = !DIEnumerator(name: "CMD_intro", value: 203)
!300 = !DIEnumerator(name: "CMD_isearch", value: 204)
!301 = !DIEnumerator(name: "CMD_isplit", value: 205)
!302 = !DIEnumerator(name: "CMD_iunmap", value: 206)
!303 = !DIEnumerator(name: "CMD_iunabbrev", value: 207)
!304 = !DIEnumerator(name: "CMD_iunmenu", value: 208)
!305 = !DIEnumerator(name: "CMD_join", value: 209)
!306 = !DIEnumerator(name: "CMD_jumps", value: 210)
!307 = !DIEnumerator(name: "CMD_k", value: 211)
!308 = !DIEnumerator(name: "CMD_keepmarks", value: 212)
!309 = !DIEnumerator(name: "CMD_keepjumps", value: 213)
!310 = !DIEnumerator(name: "CMD_keeppatterns", value: 214)
!311 = !DIEnumerator(name: "CMD_keepalt", value: 215)
!312 = !DIEnumerator(name: "CMD_list", value: 216)
!313 = !DIEnumerator(name: "CMD_lNext", value: 217)
!314 = !DIEnumerator(name: "CMD_lNfile", value: 218)
!315 = !DIEnumerator(name: "CMD_last", value: 219)
!316 = !DIEnumerator(name: "CMD_labove", value: 220)
!317 = !DIEnumerator(name: "CMD_language", value: 221)
!318 = !DIEnumerator(name: "CMD_laddexpr", value: 222)
!319 = !DIEnumerator(name: "CMD_laddbuffer", value: 223)
!320 = !DIEnumerator(name: "CMD_laddfile", value: 224)
!321 = !DIEnumerator(name: "CMD_lafter", value: 225)
!322 = !DIEnumerator(name: "CMD_later", value: 226)
!323 = !DIEnumerator(name: "CMD_lbuffer", value: 227)
!324 = !DIEnumerator(name: "CMD_lbefore", value: 228)
!325 = !DIEnumerator(name: "CMD_lbelow", value: 229)
!326 = !DIEnumerator(name: "CMD_lbottom", value: 230)
!327 = !DIEnumerator(name: "CMD_lcd", value: 231)
!328 = !DIEnumerator(name: "CMD_lchdir", value: 232)
!329 = !DIEnumerator(name: "CMD_lclose", value: 233)
!330 = !DIEnumerator(name: "CMD_lcscope", value: 234)
!331 = !DIEnumerator(name: "CMD_ldo", value: 235)
!332 = !DIEnumerator(name: "CMD_left", value: 236)
!333 = !DIEnumerator(name: "CMD_leftabove", value: 237)
!334 = !DIEnumerator(name: "CMD_let", value: 238)
!335 = !DIEnumerator(name: "CMD_lexpr", value: 239)
!336 = !DIEnumerator(name: "CMD_lfile", value: 240)
!337 = !DIEnumerator(name: "CMD_lfdo", value: 241)
!338 = !DIEnumerator(name: "CMD_lfirst", value: 242)
!339 = !DIEnumerator(name: "CMD_lgetfile", value: 243)
!340 = !DIEnumerator(name: "CMD_lgetbuffer", value: 244)
!341 = !DIEnumerator(name: "CMD_lgetexpr", value: 245)
!342 = !DIEnumerator(name: "CMD_lgrep", value: 246)
!343 = !DIEnumerator(name: "CMD_lgrepadd", value: 247)
!344 = !DIEnumerator(name: "CMD_lhelpgrep", value: 248)
!345 = !DIEnumerator(name: "CMD_lhistory", value: 249)
!346 = !DIEnumerator(name: "CMD_ll", value: 250)
!347 = !DIEnumerator(name: "CMD_llast", value: 251)
!348 = !DIEnumerator(name: "CMD_llist", value: 252)
!349 = !DIEnumerator(name: "CMD_lmap", value: 253)
!350 = !DIEnumerator(name: "CMD_lmapclear", value: 254)
!351 = !DIEnumerator(name: "CMD_lmake", value: 255)
!352 = !DIEnumerator(name: "CMD_lnoremap", value: 256)
!353 = !DIEnumerator(name: "CMD_lnext", value: 257)
!354 = !DIEnumerator(name: "CMD_lnewer", value: 258)
!355 = !DIEnumerator(name: "CMD_lnfile", value: 259)
!356 = !DIEnumerator(name: "CMD_loadview", value: 260)
!357 = !DIEnumerator(name: "CMD_loadkeymap", value: 261)
!358 = !DIEnumerator(name: "CMD_lockmarks", value: 262)
!359 = !DIEnumerator(name: "CMD_lockvar", value: 263)
!360 = !DIEnumerator(name: "CMD_lolder", value: 264)
!361 = !DIEnumerator(name: "CMD_lopen", value: 265)
!362 = !DIEnumerator(name: "CMD_lprevious", value: 266)
!363 = !DIEnumerator(name: "CMD_lpfile", value: 267)
!364 = !DIEnumerator(name: "CMD_lrewind", value: 268)
!365 = !DIEnumerator(name: "CMD_ltag", value: 269)
!366 = !DIEnumerator(name: "CMD_lunmap", value: 270)
!367 = !DIEnumerator(name: "CMD_lua", value: 271)
!368 = !DIEnumerator(name: "CMD_luado", value: 272)
!369 = !DIEnumerator(name: "CMD_luafile", value: 273)
!370 = !DIEnumerator(name: "CMD_lvimgrep", value: 274)
!371 = !DIEnumerator(name: "CMD_lvimgrepadd", value: 275)
!372 = !DIEnumerator(name: "CMD_lwindow", value: 276)
!373 = !DIEnumerator(name: "CMD_ls", value: 277)
!374 = !DIEnumerator(name: "CMD_move", value: 278)
!375 = !DIEnumerator(name: "CMD_mark", value: 279)
!376 = !DIEnumerator(name: "CMD_make", value: 280)
!377 = !DIEnumerator(name: "CMD_map", value: 281)
!378 = !DIEnumerator(name: "CMD_mapclear", value: 282)
!379 = !DIEnumerator(name: "CMD_marks", value: 283)
!380 = !DIEnumerator(name: "CMD_match", value: 284)
!381 = !DIEnumerator(name: "CMD_menu", value: 285)
!382 = !DIEnumerator(name: "CMD_menutranslate", value: 286)
!383 = !DIEnumerator(name: "CMD_messages", value: 287)
!384 = !DIEnumerator(name: "CMD_mkexrc", value: 288)
!385 = !DIEnumerator(name: "CMD_mksession", value: 289)
!386 = !DIEnumerator(name: "CMD_mkspell", value: 290)
!387 = !DIEnumerator(name: "CMD_mkvimrc", value: 291)
!388 = !DIEnumerator(name: "CMD_mkview", value: 292)
!389 = !DIEnumerator(name: "CMD_mode", value: 293)
!390 = !DIEnumerator(name: "CMD_mzscheme", value: 294)
!391 = !DIEnumerator(name: "CMD_mzfile", value: 295)
!392 = !DIEnumerator(name: "CMD_next", value: 296)
!393 = !DIEnumerator(name: "CMD_nbkey", value: 297)
!394 = !DIEnumerator(name: "CMD_nbclose", value: 298)
!395 = !DIEnumerator(name: "CMD_nbstart", value: 299)
!396 = !DIEnumerator(name: "CMD_new", value: 300)
!397 = !DIEnumerator(name: "CMD_nmap", value: 301)
!398 = !DIEnumerator(name: "CMD_nmapclear", value: 302)
!399 = !DIEnumerator(name: "CMD_nmenu", value: 303)
!400 = !DIEnumerator(name: "CMD_nnoremap", value: 304)
!401 = !DIEnumerator(name: "CMD_nnoremenu", value: 305)
!402 = !DIEnumerator(name: "CMD_noremap", value: 306)
!403 = !DIEnumerator(name: "CMD_noautocmd", value: 307)
!404 = !DIEnumerator(name: "CMD_nohlsearch", value: 308)
!405 = !DIEnumerator(name: "CMD_noreabbrev", value: 309)
!406 = !DIEnumerator(name: "CMD_noremenu", value: 310)
!407 = !DIEnumerator(name: "CMD_noswapfile", value: 311)
!408 = !DIEnumerator(name: "CMD_normal", value: 312)
!409 = !DIEnumerator(name: "CMD_number", value: 313)
!410 = !DIEnumerator(name: "CMD_nunmap", value: 314)
!411 = !DIEnumerator(name: "CMD_nunmenu", value: 315)
!412 = !DIEnumerator(name: "CMD_open", value: 316)
!413 = !DIEnumerator(name: "CMD_oldfiles", value: 317)
!414 = !DIEnumerator(name: "CMD_omap", value: 318)
!415 = !DIEnumerator(name: "CMD_omapclear", value: 319)
!416 = !DIEnumerator(name: "CMD_omenu", value: 320)
!417 = !DIEnumerator(name: "CMD_only", value: 321)
!418 = !DIEnumerator(name: "CMD_onoremap", value: 322)
!419 = !DIEnumerator(name: "CMD_onoremenu", value: 323)
!420 = !DIEnumerator(name: "CMD_options", value: 324)
!421 = !DIEnumerator(name: "CMD_ounmap", value: 325)
!422 = !DIEnumerator(name: "CMD_ounmenu", value: 326)
!423 = !DIEnumerator(name: "CMD_ownsyntax", value: 327)
!424 = !DIEnumerator(name: "CMD_print", value: 328)
!425 = !DIEnumerator(name: "CMD_packadd", value: 329)
!426 = !DIEnumerator(name: "CMD_packloadall", value: 330)
!427 = !DIEnumerator(name: "CMD_pclose", value: 331)
!428 = !DIEnumerator(name: "CMD_perl", value: 332)
!429 = !DIEnumerator(name: "CMD_perldo", value: 333)
!430 = !DIEnumerator(name: "CMD_pedit", value: 334)
!431 = !DIEnumerator(name: "CMD_pop", value: 335)
!432 = !DIEnumerator(name: "CMD_popup", value: 336)
!433 = !DIEnumerator(name: "CMD_ppop", value: 337)
!434 = !DIEnumerator(name: "CMD_preserve", value: 338)
!435 = !DIEnumerator(name: "CMD_previous", value: 339)
!436 = !DIEnumerator(name: "CMD_promptfind", value: 340)
!437 = !DIEnumerator(name: "CMD_promptrepl", value: 341)
!438 = !DIEnumerator(name: "CMD_profile", value: 342)
!439 = !DIEnumerator(name: "CMD_profdel", value: 343)
!440 = !DIEnumerator(name: "CMD_psearch", value: 344)
!441 = !DIEnumerator(name: "CMD_ptag", value: 345)
!442 = !DIEnumerator(name: "CMD_ptNext", value: 346)
!443 = !DIEnumerator(name: "CMD_ptfirst", value: 347)
!444 = !DIEnumerator(name: "CMD_ptjump", value: 348)
!445 = !DIEnumerator(name: "CMD_ptlast", value: 349)
!446 = !DIEnumerator(name: "CMD_ptnext", value: 350)
!447 = !DIEnumerator(name: "CMD_ptprevious", value: 351)
!448 = !DIEnumerator(name: "CMD_ptrewind", value: 352)
!449 = !DIEnumerator(name: "CMD_ptselect", value: 353)
!450 = !DIEnumerator(name: "CMD_put", value: 354)
!451 = !DIEnumerator(name: "CMD_pwd", value: 355)
!452 = !DIEnumerator(name: "CMD_python", value: 356)
!453 = !DIEnumerator(name: "CMD_pydo", value: 357)
!454 = !DIEnumerator(name: "CMD_pyfile", value: 358)
!455 = !DIEnumerator(name: "CMD_py3", value: 359)
!456 = !DIEnumerator(name: "CMD_py3do", value: 360)
!457 = !DIEnumerator(name: "CMD_python3", value: 361)
!458 = !DIEnumerator(name: "CMD_py3file", value: 362)
!459 = !DIEnumerator(name: "CMD_pyx", value: 363)
!460 = !DIEnumerator(name: "CMD_pyxdo", value: 364)
!461 = !DIEnumerator(name: "CMD_pythonx", value: 365)
!462 = !DIEnumerator(name: "CMD_pyxfile", value: 366)
!463 = !DIEnumerator(name: "CMD_quit", value: 367)
!464 = !DIEnumerator(name: "CMD_quitall", value: 368)
!465 = !DIEnumerator(name: "CMD_qall", value: 369)
!466 = !DIEnumerator(name: "CMD_read", value: 370)
!467 = !DIEnumerator(name: "CMD_recover", value: 371)
!468 = !DIEnumerator(name: "CMD_redo", value: 372)
!469 = !DIEnumerator(name: "CMD_redir", value: 373)
!470 = !DIEnumerator(name: "CMD_redraw", value: 374)
!471 = !DIEnumerator(name: "CMD_redrawstatus", value: 375)
!472 = !DIEnumerator(name: "CMD_redrawtabline", value: 376)
!473 = !DIEnumerator(name: "CMD_registers", value: 377)
!474 = !DIEnumerator(name: "CMD_resize", value: 378)
!475 = !DIEnumerator(name: "CMD_retab", value: 379)
!476 = !DIEnumerator(name: "CMD_return", value: 380)
!477 = !DIEnumerator(name: "CMD_rewind", value: 381)
!478 = !DIEnumerator(name: "CMD_right", value: 382)
!479 = !DIEnumerator(name: "CMD_rightbelow", value: 383)
!480 = !DIEnumerator(name: "CMD_runtime", value: 384)
!481 = !DIEnumerator(name: "CMD_ruby", value: 385)
!482 = !DIEnumerator(name: "CMD_rubydo", value: 386)
!483 = !DIEnumerator(name: "CMD_rubyfile", value: 387)
!484 = !DIEnumerator(name: "CMD_rundo", value: 388)
!485 = !DIEnumerator(name: "CMD_rviminfo", value: 389)
!486 = !DIEnumerator(name: "CMD_substitute", value: 390)
!487 = !DIEnumerator(name: "CMD_sNext", value: 391)
!488 = !DIEnumerator(name: "CMD_sargument", value: 392)
!489 = !DIEnumerator(name: "CMD_sall", value: 393)
!490 = !DIEnumerator(name: "CMD_sandbox", value: 394)
!491 = !DIEnumerator(name: "CMD_saveas", value: 395)
!492 = !DIEnumerator(name: "CMD_sbuffer", value: 396)
!493 = !DIEnumerator(name: "CMD_sbNext", value: 397)
!494 = !DIEnumerator(name: "CMD_sball", value: 398)
!495 = !DIEnumerator(name: "CMD_sbfirst", value: 399)
!496 = !DIEnumerator(name: "CMD_sblast", value: 400)
!497 = !DIEnumerator(name: "CMD_sbmodified", value: 401)
!498 = !DIEnumerator(name: "CMD_sbnext", value: 402)
!499 = !DIEnumerator(name: "CMD_sbprevious", value: 403)
!500 = !DIEnumerator(name: "CMD_sbrewind", value: 404)
!501 = !DIEnumerator(name: "CMD_scriptnames", value: 405)
!502 = !DIEnumerator(name: "CMD_scriptencoding", value: 406)
!503 = !DIEnumerator(name: "CMD_scriptversion", value: 407)
!504 = !DIEnumerator(name: "CMD_scscope", value: 408)
!505 = !DIEnumerator(name: "CMD_set", value: 409)
!506 = !DIEnumerator(name: "CMD_setfiletype", value: 410)
!507 = !DIEnumerator(name: "CMD_setglobal", value: 411)
!508 = !DIEnumerator(name: "CMD_setlocal", value: 412)
!509 = !DIEnumerator(name: "CMD_sfind", value: 413)
!510 = !DIEnumerator(name: "CMD_sfirst", value: 414)
!511 = !DIEnumerator(name: "CMD_shell", value: 415)
!512 = !DIEnumerator(name: "CMD_simalt", value: 416)
!513 = !DIEnumerator(name: "CMD_sign", value: 417)
!514 = !DIEnumerator(name: "CMD_silent", value: 418)
!515 = !DIEnumerator(name: "CMD_sleep", value: 419)
!516 = !DIEnumerator(name: "CMD_slast", value: 420)
!517 = !DIEnumerator(name: "CMD_smagic", value: 421)
!518 = !DIEnumerator(name: "CMD_smap", value: 422)
!519 = !DIEnumerator(name: "CMD_smapclear", value: 423)
!520 = !DIEnumerator(name: "CMD_smenu", value: 424)
!521 = !DIEnumerator(name: "CMD_snext", value: 425)
!522 = !DIEnumerator(name: "CMD_snomagic", value: 426)
!523 = !DIEnumerator(name: "CMD_snoremap", value: 427)
!524 = !DIEnumerator(name: "CMD_snoremenu", value: 428)
!525 = !DIEnumerator(name: "CMD_source", value: 429)
!526 = !DIEnumerator(name: "CMD_sort", value: 430)
!527 = !DIEnumerator(name: "CMD_split", value: 431)
!528 = !DIEnumerator(name: "CMD_spellgood", value: 432)
!529 = !DIEnumerator(name: "CMD_spelldump", value: 433)
!530 = !DIEnumerator(name: "CMD_spellinfo", value: 434)
!531 = !DIEnumerator(name: "CMD_spellrepall", value: 435)
!532 = !DIEnumerator(name: "CMD_spellrare", value: 436)
!533 = !DIEnumerator(name: "CMD_spellundo", value: 437)
!534 = !DIEnumerator(name: "CMD_spellwrong", value: 438)
!535 = !DIEnumerator(name: "CMD_sprevious", value: 439)
!536 = !DIEnumerator(name: "CMD_srewind", value: 440)
!537 = !DIEnumerator(name: "CMD_stop", value: 441)
!538 = !DIEnumerator(name: "CMD_stag", value: 442)
!539 = !DIEnumerator(name: "CMD_startinsert", value: 443)
!540 = !DIEnumerator(name: "CMD_startgreplace", value: 444)
!541 = !DIEnumerator(name: "CMD_startreplace", value: 445)
!542 = !DIEnumerator(name: "CMD_stopinsert", value: 446)
!543 = !DIEnumerator(name: "CMD_stjump", value: 447)
!544 = !DIEnumerator(name: "CMD_stselect", value: 448)
!545 = !DIEnumerator(name: "CMD_sunhide", value: 449)
!546 = !DIEnumerator(name: "CMD_sunmap", value: 450)
!547 = !DIEnumerator(name: "CMD_sunmenu", value: 451)
!548 = !DIEnumerator(name: "CMD_suspend", value: 452)
!549 = !DIEnumerator(name: "CMD_sview", value: 453)
!550 = !DIEnumerator(name: "CMD_swapname", value: 454)
!551 = !DIEnumerator(name: "CMD_syntax", value: 455)
!552 = !DIEnumerator(name: "CMD_syntime", value: 456)
!553 = !DIEnumerator(name: "CMD_syncbind", value: 457)
!554 = !DIEnumerator(name: "CMD_smile", value: 458)
!555 = !DIEnumerator(name: "CMD_t", value: 459)
!556 = !DIEnumerator(name: "CMD_tNext", value: 460)
!557 = !DIEnumerator(name: "CMD_tag", value: 461)
!558 = !DIEnumerator(name: "CMD_tags", value: 462)
!559 = !DIEnumerator(name: "CMD_tab", value: 463)
!560 = !DIEnumerator(name: "CMD_tabclose", value: 464)
!561 = !DIEnumerator(name: "CMD_tabdo", value: 465)
!562 = !DIEnumerator(name: "CMD_tabedit", value: 466)
!563 = !DIEnumerator(name: "CMD_tabfind", value: 467)
!564 = !DIEnumerator(name: "CMD_tabfirst", value: 468)
!565 = !DIEnumerator(name: "CMD_tabmove", value: 469)
!566 = !DIEnumerator(name: "CMD_tablast", value: 470)
!567 = !DIEnumerator(name: "CMD_tabnext", value: 471)
!568 = !DIEnumerator(name: "CMD_tabnew", value: 472)
!569 = !DIEnumerator(name: "CMD_tabonly", value: 473)
!570 = !DIEnumerator(name: "CMD_tabprevious", value: 474)
!571 = !DIEnumerator(name: "CMD_tabNext", value: 475)
!572 = !DIEnumerator(name: "CMD_tabrewind", value: 476)
!573 = !DIEnumerator(name: "CMD_tabs", value: 477)
!574 = !DIEnumerator(name: "CMD_tcd", value: 478)
!575 = !DIEnumerator(name: "CMD_tchdir", value: 479)
!576 = !DIEnumerator(name: "CMD_tcl", value: 480)
!577 = !DIEnumerator(name: "CMD_tcldo", value: 481)
!578 = !DIEnumerator(name: "CMD_tclfile", value: 482)
!579 = !DIEnumerator(name: "CMD_tearoff", value: 483)
!580 = !DIEnumerator(name: "CMD_terminal", value: 484)
!581 = !DIEnumerator(name: "CMD_tfirst", value: 485)
!582 = !DIEnumerator(name: "CMD_throw", value: 486)
!583 = !DIEnumerator(name: "CMD_tjump", value: 487)
!584 = !DIEnumerator(name: "CMD_tlast", value: 488)
!585 = !DIEnumerator(name: "CMD_tlmenu", value: 489)
!586 = !DIEnumerator(name: "CMD_tlnoremenu", value: 490)
!587 = !DIEnumerator(name: "CMD_tlunmenu", value: 491)
!588 = !DIEnumerator(name: "CMD_tmenu", value: 492)
!589 = !DIEnumerator(name: "CMD_tmap", value: 493)
!590 = !DIEnumerator(name: "CMD_tmapclear", value: 494)
!591 = !DIEnumerator(name: "CMD_tnext", value: 495)
!592 = !DIEnumerator(name: "CMD_tnoremap", value: 496)
!593 = !DIEnumerator(name: "CMD_topleft", value: 497)
!594 = !DIEnumerator(name: "CMD_tprevious", value: 498)
!595 = !DIEnumerator(name: "CMD_trewind", value: 499)
!596 = !DIEnumerator(name: "CMD_try", value: 500)
!597 = !DIEnumerator(name: "CMD_tselect", value: 501)
!598 = !DIEnumerator(name: "CMD_tunmenu", value: 502)
!599 = !DIEnumerator(name: "CMD_tunmap", value: 503)
!600 = !DIEnumerator(name: "CMD_undo", value: 504)
!601 = !DIEnumerator(name: "CMD_undojoin", value: 505)
!602 = !DIEnumerator(name: "CMD_undolist", value: 506)
!603 = !DIEnumerator(name: "CMD_unabbreviate", value: 507)
!604 = !DIEnumerator(name: "CMD_unhide", value: 508)
!605 = !DIEnumerator(name: "CMD_unlet", value: 509)
!606 = !DIEnumerator(name: "CMD_unlockvar", value: 510)
!607 = !DIEnumerator(name: "CMD_unmap", value: 511)
!608 = !DIEnumerator(name: "CMD_unmenu", value: 512)
!609 = !DIEnumerator(name: "CMD_unsilent", value: 513)
!610 = !DIEnumerator(name: "CMD_update", value: 514)
!611 = !DIEnumerator(name: "CMD_vglobal", value: 515)
!612 = !DIEnumerator(name: "CMD_var", value: 516)
!613 = !DIEnumerator(name: "CMD_version", value: 517)
!614 = !DIEnumerator(name: "CMD_verbose", value: 518)
!615 = !DIEnumerator(name: "CMD_vertical", value: 519)
!616 = !DIEnumerator(name: "CMD_visual", value: 520)
!617 = !DIEnumerator(name: "CMD_view", value: 521)
!618 = !DIEnumerator(name: "CMD_vimgrep", value: 522)
!619 = !DIEnumerator(name: "CMD_vimgrepadd", value: 523)
!620 = !DIEnumerator(name: "CMD_vim9cmd", value: 524)
!621 = !DIEnumerator(name: "CMD_vim9script", value: 525)
!622 = !DIEnumerator(name: "CMD_viusage", value: 526)
!623 = !DIEnumerator(name: "CMD_vmap", value: 527)
!624 = !DIEnumerator(name: "CMD_vmapclear", value: 528)
!625 = !DIEnumerator(name: "CMD_vmenu", value: 529)
!626 = !DIEnumerator(name: "CMD_vnoremap", value: 530)
!627 = !DIEnumerator(name: "CMD_vnew", value: 531)
!628 = !DIEnumerator(name: "CMD_vnoremenu", value: 532)
!629 = !DIEnumerator(name: "CMD_vsplit", value: 533)
!630 = !DIEnumerator(name: "CMD_vunmap", value: 534)
!631 = !DIEnumerator(name: "CMD_vunmenu", value: 535)
!632 = !DIEnumerator(name: "CMD_write", value: 536)
!633 = !DIEnumerator(name: "CMD_wNext", value: 537)
!634 = !DIEnumerator(name: "CMD_wall", value: 538)
!635 = !DIEnumerator(name: "CMD_while", value: 539)
!636 = !DIEnumerator(name: "CMD_winsize", value: 540)
!637 = !DIEnumerator(name: "CMD_wincmd", value: 541)
!638 = !DIEnumerator(name: "CMD_windo", value: 542)
!639 = !DIEnumerator(name: "CMD_winpos", value: 543)
!640 = !DIEnumerator(name: "CMD_wnext", value: 544)
!641 = !DIEnumerator(name: "CMD_wprevious", value: 545)
!642 = !DIEnumerator(name: "CMD_wq", value: 546)
!643 = !DIEnumerator(name: "CMD_wqall", value: 547)
!644 = !DIEnumerator(name: "CMD_wundo", value: 548)
!645 = !DIEnumerator(name: "CMD_wviminfo", value: 549)
!646 = !DIEnumerator(name: "CMD_xit", value: 550)
!647 = !DIEnumerator(name: "CMD_xall", value: 551)
!648 = !DIEnumerator(name: "CMD_xmap", value: 552)
!649 = !DIEnumerator(name: "CMD_xmapclear", value: 553)
!650 = !DIEnumerator(name: "CMD_xmenu", value: 554)
!651 = !DIEnumerator(name: "CMD_xnoremap", value: 555)
!652 = !DIEnumerator(name: "CMD_xnoremenu", value: 556)
!653 = !DIEnumerator(name: "CMD_xrestore", value: 557)
!654 = !DIEnumerator(name: "CMD_xunmap", value: 558)
!655 = !DIEnumerator(name: "CMD_xunmenu", value: 559)
!656 = !DIEnumerator(name: "CMD_yank", value: 560)
!657 = !DIEnumerator(name: "CMD_z", value: 561)
!658 = !DIEnumerator(name: "CMD_bang", value: 562)
!659 = !DIEnumerator(name: "CMD_pound", value: 563)
!660 = !DIEnumerator(name: "CMD_and", value: 564)
!661 = !DIEnumerator(name: "CMD_star", value: 565)
!662 = !DIEnumerator(name: "CMD_lshift", value: 566)
!663 = !DIEnumerator(name: "CMD_equal", value: 567)
!664 = !DIEnumerator(name: "CMD_rshift", value: 568)
!665 = !DIEnumerator(name: "CMD_at", value: 569)
!666 = !DIEnumerator(name: "CMD_block", value: 570)
!667 = !DIEnumerator(name: "CMD_endblock", value: 571)
!668 = !DIEnumerator(name: "CMD_tilde", value: 572)
!669 = !DIEnumerator(name: "CMD_Next", value: 573)
!670 = !DIEnumerator(name: "CMD_Print", value: 574)
!671 = !DIEnumerator(name: "CMD_X", value: 575)
!672 = !DIEnumerator(name: "CMD_SIZE", value: 576)
!673 = !DIEnumerator(name: "CMD_USER", value: -1)
!674 = !DIEnumerator(name: "CMD_USER_BUF", value: -2)
!675 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 68, size: 32, elements: !676)
!676 = !{!677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!677 = !DIEnumerator(name: "ADDR_LINES", value: 0)
!678 = !DIEnumerator(name: "ADDR_WINDOWS", value: 1)
!679 = !DIEnumerator(name: "ADDR_ARGUMENTS", value: 2)
!680 = !DIEnumerator(name: "ADDR_LOADED_BUFFERS", value: 3)
!681 = !DIEnumerator(name: "ADDR_BUFFERS", value: 4)
!682 = !DIEnumerator(name: "ADDR_TABS", value: 5)
!683 = !DIEnumerator(name: "ADDR_TABS_RELATIVE", value: 6)
!684 = !DIEnumerator(name: "ADDR_QUICKFIX_VALID", value: 7)
!685 = !DIEnumerator(name: "ADDR_QUICKFIX", value: 8)
!686 = !DIEnumerator(name: "ADDR_UNSIGNED", value: 9)
!687 = !DIEnumerator(name: "ADDR_OTHER", value: 10)
!688 = !DIEnumerator(name: "ADDR_NONE", value: 11)
!689 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1572, size: 32, elements: !690)
!690 = !{!691, !692, !693, !694}
!691 = !DIEnumerator(name: "GETLINE_NONE", value: 0)
!692 = !DIEnumerator(name: "GETLINE_CONCAT_CONT", value: 1)
!693 = !DIEnumerator(name: "GETLINE_CONCAT_CONTBAR", value: 2)
!694 = !DIEnumerator(name: "GETLINE_CONCAT_ALL", value: 3)
!695 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !696, line: 46, size: 32, elements: !697)
!696 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/sahil/vim/src")
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709}
!698 = !DIEnumerator(name: "_ISupper", value: 256)
!699 = !DIEnumerator(name: "_ISlower", value: 512)
!700 = !DIEnumerator(name: "_ISalpha", value: 1024)
!701 = !DIEnumerator(name: "_ISdigit", value: 2048)
!702 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!703 = !DIEnumerator(name: "_ISspace", value: 8192)
!704 = !DIEnumerator(name: "_ISprint", value: 16384)
!705 = !DIEnumerator(name: "_ISgraph", value: 32768)
!706 = !DIEnumerator(name: "_ISblank", value: 1)
!707 = !DIEnumerator(name: "_IScntrl", value: 2)
!708 = !DIEnumerator(name: "_ISpunct", value: 4)
!709 = !DIEnumerator(name: "_ISalnum", value: 8)
!710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !711, line: 1235, size: 32, elements: !712)
!711 = !DIFile(filename: "./option.h", directory: "/home/sahil/vim/src")
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757}
!713 = !DIEnumerator(name: "WV_LIST", value: 0)
!714 = !DIEnumerator(name: "WV_LCS", value: 1)
!715 = !DIEnumerator(name: "WV_ARAB", value: 2)
!716 = !DIEnumerator(name: "WV_COCU", value: 3)
!717 = !DIEnumerator(name: "WV_COLE", value: 4)
!718 = !DIEnumerator(name: "WV_TWK", value: 5)
!719 = !DIEnumerator(name: "WV_TWS", value: 6)
!720 = !DIEnumerator(name: "WV_CRBIND", value: 7)
!721 = !DIEnumerator(name: "WV_BRI", value: 8)
!722 = !DIEnumerator(name: "WV_BRIOPT", value: 9)
!723 = !DIEnumerator(name: "WV_WCR", value: 10)
!724 = !DIEnumerator(name: "WV_DIFF", value: 11)
!725 = !DIEnumerator(name: "WV_FDC", value: 12)
!726 = !DIEnumerator(name: "WV_FEN", value: 13)
!727 = !DIEnumerator(name: "WV_FDI", value: 14)
!728 = !DIEnumerator(name: "WV_FDL", value: 15)
!729 = !DIEnumerator(name: "WV_FDM", value: 16)
!730 = !DIEnumerator(name: "WV_FML", value: 17)
!731 = !DIEnumerator(name: "WV_FDN", value: 18)
!732 = !DIEnumerator(name: "WV_FDE", value: 19)
!733 = !DIEnumerator(name: "WV_FDT", value: 20)
!734 = !DIEnumerator(name: "WV_FMR", value: 21)
!735 = !DIEnumerator(name: "WV_LBR", value: 22)
!736 = !DIEnumerator(name: "WV_NU", value: 23)
!737 = !DIEnumerator(name: "WV_RNU", value: 24)
!738 = !DIEnumerator(name: "WV_NUW", value: 25)
!739 = !DIEnumerator(name: "WV_PVW", value: 26)
!740 = !DIEnumerator(name: "WV_RL", value: 27)
!741 = !DIEnumerator(name: "WV_RLC", value: 28)
!742 = !DIEnumerator(name: "WV_SCBIND", value: 29)
!743 = !DIEnumerator(name: "WV_SCROLL", value: 30)
!744 = !DIEnumerator(name: "WV_SISO", value: 31)
!745 = !DIEnumerator(name: "WV_SO", value: 32)
!746 = !DIEnumerator(name: "WV_SPELL", value: 33)
!747 = !DIEnumerator(name: "WV_CUC", value: 34)
!748 = !DIEnumerator(name: "WV_CUL", value: 35)
!749 = !DIEnumerator(name: "WV_CULOPT", value: 36)
!750 = !DIEnumerator(name: "WV_CC", value: 37)
!751 = !DIEnumerator(name: "WV_SBR", value: 38)
!752 = !DIEnumerator(name: "WV_STL", value: 39)
!753 = !DIEnumerator(name: "WV_WFH", value: 40)
!754 = !DIEnumerator(name: "WV_WFW", value: 41)
!755 = !DIEnumerator(name: "WV_WRAP", value: 42)
!756 = !DIEnumerator(name: "WV_SCL", value: 43)
!757 = !DIEnumerator(name: "WV_COUNT", value: 44)
!758 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !711, line: 1096, size: 32, elements: !759)
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844}
!760 = !DIEnumerator(name: "BV_AI", value: 0)
!761 = !DIEnumerator(name: "BV_AR", value: 1)
!762 = !DIEnumerator(name: "BV_BH", value: 2)
!763 = !DIEnumerator(name: "BV_BKC", value: 3)
!764 = !DIEnumerator(name: "BV_BT", value: 4)
!765 = !DIEnumerator(name: "BV_EFM", value: 5)
!766 = !DIEnumerator(name: "BV_GP", value: 6)
!767 = !DIEnumerator(name: "BV_MP", value: 7)
!768 = !DIEnumerator(name: "BV_BIN", value: 8)
!769 = !DIEnumerator(name: "BV_BL", value: 9)
!770 = !DIEnumerator(name: "BV_BOMB", value: 10)
!771 = !DIEnumerator(name: "BV_CI", value: 11)
!772 = !DIEnumerator(name: "BV_CIN", value: 12)
!773 = !DIEnumerator(name: "BV_CINK", value: 13)
!774 = !DIEnumerator(name: "BV_CINO", value: 14)
!775 = !DIEnumerator(name: "BV_CINW", value: 15)
!776 = !DIEnumerator(name: "BV_CM", value: 16)
!777 = !DIEnumerator(name: "BV_CMS", value: 17)
!778 = !DIEnumerator(name: "BV_COM", value: 18)
!779 = !DIEnumerator(name: "BV_CPT", value: 19)
!780 = !DIEnumerator(name: "BV_DICT", value: 20)
!781 = !DIEnumerator(name: "BV_TSR", value: 21)
!782 = !DIEnumerator(name: "BV_CFU", value: 22)
!783 = !DIEnumerator(name: "BV_DEF", value: 23)
!784 = !DIEnumerator(name: "BV_INC", value: 24)
!785 = !DIEnumerator(name: "BV_EOL", value: 25)
!786 = !DIEnumerator(name: "BV_FIXEOL", value: 26)
!787 = !DIEnumerator(name: "BV_EP", value: 27)
!788 = !DIEnumerator(name: "BV_ET", value: 28)
!789 = !DIEnumerator(name: "BV_FENC", value: 29)
!790 = !DIEnumerator(name: "BV_FP", value: 30)
!791 = !DIEnumerator(name: "BV_BEXPR", value: 31)
!792 = !DIEnumerator(name: "BV_FEX", value: 32)
!793 = !DIEnumerator(name: "BV_FF", value: 33)
!794 = !DIEnumerator(name: "BV_FLP", value: 34)
!795 = !DIEnumerator(name: "BV_FO", value: 35)
!796 = !DIEnumerator(name: "BV_FT", value: 36)
!797 = !DIEnumerator(name: "BV_IMI", value: 37)
!798 = !DIEnumerator(name: "BV_IMS", value: 38)
!799 = !DIEnumerator(name: "BV_INDE", value: 39)
!800 = !DIEnumerator(name: "BV_INDK", value: 40)
!801 = !DIEnumerator(name: "BV_INEX", value: 41)
!802 = !DIEnumerator(name: "BV_INF", value: 42)
!803 = !DIEnumerator(name: "BV_ISK", value: 43)
!804 = !DIEnumerator(name: "BV_KEY", value: 44)
!805 = !DIEnumerator(name: "BV_KMAP", value: 45)
!806 = !DIEnumerator(name: "BV_KP", value: 46)
!807 = !DIEnumerator(name: "BV_LISP", value: 47)
!808 = !DIEnumerator(name: "BV_LW", value: 48)
!809 = !DIEnumerator(name: "BV_MENC", value: 49)
!810 = !DIEnumerator(name: "BV_MA", value: 50)
!811 = !DIEnumerator(name: "BV_ML", value: 51)
!812 = !DIEnumerator(name: "BV_MOD", value: 52)
!813 = !DIEnumerator(name: "BV_MPS", value: 53)
!814 = !DIEnumerator(name: "BV_NF", value: 54)
!815 = !DIEnumerator(name: "BV_OFU", value: 55)
!816 = !DIEnumerator(name: "BV_PATH", value: 56)
!817 = !DIEnumerator(name: "BV_PI", value: 57)
!818 = !DIEnumerator(name: "BV_QE", value: 58)
!819 = !DIEnumerator(name: "BV_RO", value: 59)
!820 = !DIEnumerator(name: "BV_SI", value: 60)
!821 = !DIEnumerator(name: "BV_SN", value: 61)
!822 = !DIEnumerator(name: "BV_SMC", value: 62)
!823 = !DIEnumerator(name: "BV_SYN", value: 63)
!824 = !DIEnumerator(name: "BV_SPC", value: 64)
!825 = !DIEnumerator(name: "BV_SPF", value: 65)
!826 = !DIEnumerator(name: "BV_SPL", value: 66)
!827 = !DIEnumerator(name: "BV_SPO", value: 67)
!828 = !DIEnumerator(name: "BV_STS", value: 68)
!829 = !DIEnumerator(name: "BV_SUA", value: 69)
!830 = !DIEnumerator(name: "BV_SW", value: 70)
!831 = !DIEnumerator(name: "BV_SWF", value: 71)
!832 = !DIEnumerator(name: "BV_TFU", value: 72)
!833 = !DIEnumerator(name: "BV_TAGS", value: 73)
!834 = !DIEnumerator(name: "BV_TC", value: 74)
!835 = !DIEnumerator(name: "BV_TS", value: 75)
!836 = !DIEnumerator(name: "BV_TW", value: 76)
!837 = !DIEnumerator(name: "BV_TX", value: 77)
!838 = !DIEnumerator(name: "BV_UDF", value: 78)
!839 = !DIEnumerator(name: "BV_UL", value: 79)
!840 = !DIEnumerator(name: "BV_WM", value: 80)
!841 = !DIEnumerator(name: "BV_TWSL", value: 81)
!842 = !DIEnumerator(name: "BV_VSTS", value: 82)
!843 = !DIEnumerator(name: "BV_VTS", value: 83)
!844 = !DIEnumerator(name: "BV_COUNT", value: 84)
!845 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 2022, size: 32, elements: !846)
!846 = !{!847, !848, !849, !850, !851, !852, !853, !854, !855, !856}
!847 = !DIEnumerator(name: "ETYPE_TOP", value: 0)
!848 = !DIEnumerator(name: "ETYPE_SCRIPT", value: 1)
!849 = !DIEnumerator(name: "ETYPE_UFUNC", value: 2)
!850 = !DIEnumerator(name: "ETYPE_AUCMD", value: 3)
!851 = !DIEnumerator(name: "ETYPE_MODELINE", value: 4)
!852 = !DIEnumerator(name: "ETYPE_EXCEPT", value: 5)
!853 = !DIEnumerator(name: "ETYPE_ARGS", value: 6)
!854 = !DIEnumerator(name: "ETYPE_ENV", value: 7)
!855 = !DIEnumerator(name: "ETYPE_INTERNAL", value: 8)
!856 = !DIEnumerator(name: "ETYPE_SPELL", value: 9)
!857 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 985, size: 32, elements: !858)
!858 = !{!859, !860, !861}
!859 = !DIEnumerator(name: "ET_USER", value: 0)
!860 = !DIEnumerator(name: "ET_ERROR", value: 1)
!861 = !DIEnumerator(name: "ET_INTERRUPT", value: 2)
!862 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !711, line: 64, size: 32, elements: !863)
!863 = !{!864, !865, !866, !867, !868, !869, !870}
!864 = !DIEnumerator(name: "gov_unknown", value: 0)
!865 = !DIEnumerator(name: "gov_bool", value: 1)
!866 = !DIEnumerator(name: "gov_number", value: 2)
!867 = !DIEnumerator(name: "gov_string", value: 3)
!868 = !DIEnumerator(name: "gov_hidden_bool", value: 4)
!869 = !DIEnumerator(name: "gov_hidden_number", value: 5)
!870 = !DIEnumerator(name: "gov_hidden_string", value: 6)
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "auto_event", file: !872, line: 1242, size: 32, elements: !873)
!872 = !DIFile(filename: "./vim.h", directory: "/home/sahil/vim/src")
!873 = !{!874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981}
!874 = !DIEnumerator(name: "EVENT_BUFADD", value: 0)
!875 = !DIEnumerator(name: "EVENT_BUFDELETE", value: 1)
!876 = !DIEnumerator(name: "EVENT_BUFENTER", value: 2)
!877 = !DIEnumerator(name: "EVENT_BUFFILEPOST", value: 3)
!878 = !DIEnumerator(name: "EVENT_BUFFILEPRE", value: 4)
!879 = !DIEnumerator(name: "EVENT_BUFHIDDEN", value: 5)
!880 = !DIEnumerator(name: "EVENT_BUFLEAVE", value: 6)
!881 = !DIEnumerator(name: "EVENT_BUFNEW", value: 7)
!882 = !DIEnumerator(name: "EVENT_BUFNEWFILE", value: 8)
!883 = !DIEnumerator(name: "EVENT_BUFREADCMD", value: 9)
!884 = !DIEnumerator(name: "EVENT_BUFREADPOST", value: 10)
!885 = !DIEnumerator(name: "EVENT_BUFREADPRE", value: 11)
!886 = !DIEnumerator(name: "EVENT_BUFUNLOAD", value: 12)
!887 = !DIEnumerator(name: "EVENT_BUFWINENTER", value: 13)
!888 = !DIEnumerator(name: "EVENT_BUFWINLEAVE", value: 14)
!889 = !DIEnumerator(name: "EVENT_BUFWIPEOUT", value: 15)
!890 = !DIEnumerator(name: "EVENT_BUFWRITECMD", value: 16)
!891 = !DIEnumerator(name: "EVENT_BUFWRITEPOST", value: 17)
!892 = !DIEnumerator(name: "EVENT_BUFWRITEPRE", value: 18)
!893 = !DIEnumerator(name: "EVENT_CMDLINECHANGED", value: 19)
!894 = !DIEnumerator(name: "EVENT_CMDLINEENTER", value: 20)
!895 = !DIEnumerator(name: "EVENT_CMDLINELEAVE", value: 21)
!896 = !DIEnumerator(name: "EVENT_CMDUNDEFINED", value: 22)
!897 = !DIEnumerator(name: "EVENT_CMDWINENTER", value: 23)
!898 = !DIEnumerator(name: "EVENT_CMDWINLEAVE", value: 24)
!899 = !DIEnumerator(name: "EVENT_COLORSCHEME", value: 25)
!900 = !DIEnumerator(name: "EVENT_COLORSCHEMEPRE", value: 26)
!901 = !DIEnumerator(name: "EVENT_COMPLETECHANGED", value: 27)
!902 = !DIEnumerator(name: "EVENT_COMPLETEDONE", value: 28)
!903 = !DIEnumerator(name: "EVENT_COMPLETEDONEPRE", value: 29)
!904 = !DIEnumerator(name: "EVENT_CURSORHOLD", value: 30)
!905 = !DIEnumerator(name: "EVENT_CURSORHOLDI", value: 31)
!906 = !DIEnumerator(name: "EVENT_CURSORMOVED", value: 32)
!907 = !DIEnumerator(name: "EVENT_CURSORMOVEDI", value: 33)
!908 = !DIEnumerator(name: "EVENT_DIFFUPDATED", value: 34)
!909 = !DIEnumerator(name: "EVENT_DIRCHANGED", value: 35)
!910 = !DIEnumerator(name: "EVENT_ENCODINGCHANGED", value: 36)
!911 = !DIEnumerator(name: "EVENT_EXITPRE", value: 37)
!912 = !DIEnumerator(name: "EVENT_FILEAPPENDCMD", value: 38)
!913 = !DIEnumerator(name: "EVENT_FILEAPPENDPOST", value: 39)
!914 = !DIEnumerator(name: "EVENT_FILEAPPENDPRE", value: 40)
!915 = !DIEnumerator(name: "EVENT_FILECHANGEDRO", value: 41)
!916 = !DIEnumerator(name: "EVENT_FILECHANGEDSHELL", value: 42)
!917 = !DIEnumerator(name: "EVENT_FILECHANGEDSHELLPOST", value: 43)
!918 = !DIEnumerator(name: "EVENT_FILEREADCMD", value: 44)
!919 = !DIEnumerator(name: "EVENT_FILEREADPOST", value: 45)
!920 = !DIEnumerator(name: "EVENT_FILEREADPRE", value: 46)
!921 = !DIEnumerator(name: "EVENT_FILETYPE", value: 47)
!922 = !DIEnumerator(name: "EVENT_FILEWRITECMD", value: 48)
!923 = !DIEnumerator(name: "EVENT_FILEWRITEPOST", value: 49)
!924 = !DIEnumerator(name: "EVENT_FILEWRITEPRE", value: 50)
!925 = !DIEnumerator(name: "EVENT_FILTERREADPOST", value: 51)
!926 = !DIEnumerator(name: "EVENT_FILTERREADPRE", value: 52)
!927 = !DIEnumerator(name: "EVENT_FILTERWRITEPOST", value: 53)
!928 = !DIEnumerator(name: "EVENT_FILTERWRITEPRE", value: 54)
!929 = !DIEnumerator(name: "EVENT_FOCUSGAINED", value: 55)
!930 = !DIEnumerator(name: "EVENT_FOCUSLOST", value: 56)
!931 = !DIEnumerator(name: "EVENT_FUNCUNDEFINED", value: 57)
!932 = !DIEnumerator(name: "EVENT_GUIENTER", value: 58)
!933 = !DIEnumerator(name: "EVENT_GUIFAILED", value: 59)
!934 = !DIEnumerator(name: "EVENT_INSERTCHANGE", value: 60)
!935 = !DIEnumerator(name: "EVENT_INSERTCHARPRE", value: 61)
!936 = !DIEnumerator(name: "EVENT_INSERTENTER", value: 62)
!937 = !DIEnumerator(name: "EVENT_INSERTLEAVEPRE", value: 63)
!938 = !DIEnumerator(name: "EVENT_INSERTLEAVE", value: 64)
!939 = !DIEnumerator(name: "EVENT_MENUPOPUP", value: 65)
!940 = !DIEnumerator(name: "EVENT_OPTIONSET", value: 66)
!941 = !DIEnumerator(name: "EVENT_QUICKFIXCMDPOST", value: 67)
!942 = !DIEnumerator(name: "EVENT_QUICKFIXCMDPRE", value: 68)
!943 = !DIEnumerator(name: "EVENT_QUITPRE", value: 69)
!944 = !DIEnumerator(name: "EVENT_REMOTEREPLY", value: 70)
!945 = !DIEnumerator(name: "EVENT_SAFESTATE", value: 71)
!946 = !DIEnumerator(name: "EVENT_SAFESTATEAGAIN", value: 72)
!947 = !DIEnumerator(name: "EVENT_SESSIONLOADPOST", value: 73)
!948 = !DIEnumerator(name: "EVENT_SHELLCMDPOST", value: 74)
!949 = !DIEnumerator(name: "EVENT_SHELLFILTERPOST", value: 75)
!950 = !DIEnumerator(name: "EVENT_SIGUSR1", value: 76)
!951 = !DIEnumerator(name: "EVENT_SOURCECMD", value: 77)
!952 = !DIEnumerator(name: "EVENT_SOURCEPRE", value: 78)
!953 = !DIEnumerator(name: "EVENT_SOURCEPOST", value: 79)
!954 = !DIEnumerator(name: "EVENT_SPELLFILEMISSING", value: 80)
!955 = !DIEnumerator(name: "EVENT_STDINREADPOST", value: 81)
!956 = !DIEnumerator(name: "EVENT_STDINREADPRE", value: 82)
!957 = !DIEnumerator(name: "EVENT_SWAPEXISTS", value: 83)
!958 = !DIEnumerator(name: "EVENT_SYNTAX", value: 84)
!959 = !DIEnumerator(name: "EVENT_TABCLOSED", value: 85)
!960 = !DIEnumerator(name: "EVENT_TABENTER", value: 86)
!961 = !DIEnumerator(name: "EVENT_TABLEAVE", value: 87)
!962 = !DIEnumerator(name: "EVENT_TABNEW", value: 88)
!963 = !DIEnumerator(name: "EVENT_TERMCHANGED", value: 89)
!964 = !DIEnumerator(name: "EVENT_TERMINALOPEN", value: 90)
!965 = !DIEnumerator(name: "EVENT_TERMINALWINOPEN", value: 91)
!966 = !DIEnumerator(name: "EVENT_TERMRESPONSE", value: 92)
!967 = !DIEnumerator(name: "EVENT_TEXTCHANGED", value: 93)
!968 = !DIEnumerator(name: "EVENT_TEXTCHANGEDI", value: 94)
!969 = !DIEnumerator(name: "EVENT_TEXTCHANGEDP", value: 95)
!970 = !DIEnumerator(name: "EVENT_TEXTYANKPOST", value: 96)
!971 = !DIEnumerator(name: "EVENT_USER", value: 97)
!972 = !DIEnumerator(name: "EVENT_VIMENTER", value: 98)
!973 = !DIEnumerator(name: "EVENT_VIMLEAVE", value: 99)
!974 = !DIEnumerator(name: "EVENT_VIMLEAVEPRE", value: 100)
!975 = !DIEnumerator(name: "EVENT_VIMRESIZED", value: 101)
!976 = !DIEnumerator(name: "EVENT_WINENTER", value: 102)
!977 = !DIEnumerator(name: "EVENT_WINLEAVE", value: 103)
!978 = !DIEnumerator(name: "EVENT_WINNEW", value: 104)
!979 = !DIEnumerator(name: "EVENT_VIMSUSPEND", value: 105)
!980 = !DIEnumerator(name: "EVENT_VIMRESUME", value: 106)
!981 = !DIEnumerator(name: "NUM_EVENTS", value: 107)
!982 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SpecialKey", file: !983, line: 26, size: 32, elements: !984)
!983 = !DIFile(filename: "./term.h", directory: "/home/sahil/vim/src")
!984 = !{!985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071}
!985 = !DIEnumerator(name: "KS_NAME", value: 0)
!986 = !DIEnumerator(name: "KS_CE", value: 1)
!987 = !DIEnumerator(name: "KS_AL", value: 2)
!988 = !DIEnumerator(name: "KS_CAL", value: 3)
!989 = !DIEnumerator(name: "KS_DL", value: 4)
!990 = !DIEnumerator(name: "KS_CDL", value: 5)
!991 = !DIEnumerator(name: "KS_CS", value: 6)
!992 = !DIEnumerator(name: "KS_CL", value: 7)
!993 = !DIEnumerator(name: "KS_CD", value: 8)
!994 = !DIEnumerator(name: "KS_UT", value: 9)
!995 = !DIEnumerator(name: "KS_DA", value: 10)
!996 = !DIEnumerator(name: "KS_DB", value: 11)
!997 = !DIEnumerator(name: "KS_VI", value: 12)
!998 = !DIEnumerator(name: "KS_VE", value: 13)
!999 = !DIEnumerator(name: "KS_VS", value: 14)
!1000 = !DIEnumerator(name: "KS_CVS", value: 15)
!1001 = !DIEnumerator(name: "KS_CSH", value: 16)
!1002 = !DIEnumerator(name: "KS_CRC", value: 17)
!1003 = !DIEnumerator(name: "KS_CRS", value: 18)
!1004 = !DIEnumerator(name: "KS_ME", value: 19)
!1005 = !DIEnumerator(name: "KS_MR", value: 20)
!1006 = !DIEnumerator(name: "KS_MD", value: 21)
!1007 = !DIEnumerator(name: "KS_SE", value: 22)
!1008 = !DIEnumerator(name: "KS_SO", value: 23)
!1009 = !DIEnumerator(name: "KS_CZH", value: 24)
!1010 = !DIEnumerator(name: "KS_CZR", value: 25)
!1011 = !DIEnumerator(name: "KS_UE", value: 26)
!1012 = !DIEnumerator(name: "KS_US", value: 27)
!1013 = !DIEnumerator(name: "KS_UCE", value: 28)
!1014 = !DIEnumerator(name: "KS_UCS", value: 29)
!1015 = !DIEnumerator(name: "KS_STE", value: 30)
!1016 = !DIEnumerator(name: "KS_STS", value: 31)
!1017 = !DIEnumerator(name: "KS_MS", value: 32)
!1018 = !DIEnumerator(name: "KS_CM", value: 33)
!1019 = !DIEnumerator(name: "KS_SR", value: 34)
!1020 = !DIEnumerator(name: "KS_CRI", value: 35)
!1021 = !DIEnumerator(name: "KS_VB", value: 36)
!1022 = !DIEnumerator(name: "KS_KS", value: 37)
!1023 = !DIEnumerator(name: "KS_KE", value: 38)
!1024 = !DIEnumerator(name: "KS_TI", value: 39)
!1025 = !DIEnumerator(name: "KS_CTI", value: 40)
!1026 = !DIEnumerator(name: "KS_TE", value: 41)
!1027 = !DIEnumerator(name: "KS_CTE", value: 42)
!1028 = !DIEnumerator(name: "KS_BC", value: 43)
!1029 = !DIEnumerator(name: "KS_CCS", value: 44)
!1030 = !DIEnumerator(name: "KS_CCO", value: 45)
!1031 = !DIEnumerator(name: "KS_CSF", value: 46)
!1032 = !DIEnumerator(name: "KS_CSB", value: 47)
!1033 = !DIEnumerator(name: "KS_XS", value: 48)
!1034 = !DIEnumerator(name: "KS_XN", value: 49)
!1035 = !DIEnumerator(name: "KS_MB", value: 50)
!1036 = !DIEnumerator(name: "KS_CAF", value: 51)
!1037 = !DIEnumerator(name: "KS_CAB", value: 52)
!1038 = !DIEnumerator(name: "KS_CAU", value: 53)
!1039 = !DIEnumerator(name: "KS_LE", value: 54)
!1040 = !DIEnumerator(name: "KS_ND", value: 55)
!1041 = !DIEnumerator(name: "KS_CIS", value: 56)
!1042 = !DIEnumerator(name: "KS_CIE", value: 57)
!1043 = !DIEnumerator(name: "KS_CSC", value: 58)
!1044 = !DIEnumerator(name: "KS_CEC", value: 59)
!1045 = !DIEnumerator(name: "KS_TS", value: 60)
!1046 = !DIEnumerator(name: "KS_FS", value: 61)
!1047 = !DIEnumerator(name: "KS_CWP", value: 62)
!1048 = !DIEnumerator(name: "KS_CGP", value: 63)
!1049 = !DIEnumerator(name: "KS_CWS", value: 64)
!1050 = !DIEnumerator(name: "KS_CRV", value: 65)
!1051 = !DIEnumerator(name: "KS_RFG", value: 66)
!1052 = !DIEnumerator(name: "KS_RBG", value: 67)
!1053 = !DIEnumerator(name: "KS_CSI", value: 68)
!1054 = !DIEnumerator(name: "KS_CEI", value: 69)
!1055 = !DIEnumerator(name: "KS_CSR", value: 70)
!1056 = !DIEnumerator(name: "KS_CSV", value: 71)
!1057 = !DIEnumerator(name: "KS_OP", value: 72)
!1058 = !DIEnumerator(name: "KS_U7", value: 73)
!1059 = !DIEnumerator(name: "KS_8F", value: 74)
!1060 = !DIEnumerator(name: "KS_8B", value: 75)
!1061 = !DIEnumerator(name: "KS_8U", value: 76)
!1062 = !DIEnumerator(name: "KS_CBE", value: 77)
!1063 = !DIEnumerator(name: "KS_CBD", value: 78)
!1064 = !DIEnumerator(name: "KS_CPS", value: 79)
!1065 = !DIEnumerator(name: "KS_CPE", value: 80)
!1066 = !DIEnumerator(name: "KS_CST", value: 81)
!1067 = !DIEnumerator(name: "KS_CRT", value: 82)
!1068 = !DIEnumerator(name: "KS_SSI", value: 83)
!1069 = !DIEnumerator(name: "KS_SRI", value: 84)
!1070 = !DIEnumerator(name: "KS_FD", value: 85)
!1071 = !DIEnumerator(name: "KS_FE", value: 86)
!1072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 1363, size: 32, elements: !1073)
!1073 = !{!1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1074 = !DIEnumerator(name: "HLF_8", value: 0)
!1075 = !DIEnumerator(name: "HLF_EOB", value: 1)
!1076 = !DIEnumerator(name: "HLF_AT", value: 2)
!1077 = !DIEnumerator(name: "HLF_D", value: 3)
!1078 = !DIEnumerator(name: "HLF_E", value: 4)
!1079 = !DIEnumerator(name: "HLF_H", value: 5)
!1080 = !DIEnumerator(name: "HLF_I", value: 6)
!1081 = !DIEnumerator(name: "HLF_L", value: 7)
!1082 = !DIEnumerator(name: "HLF_M", value: 8)
!1083 = !DIEnumerator(name: "HLF_CM", value: 9)
!1084 = !DIEnumerator(name: "HLF_N", value: 10)
!1085 = !DIEnumerator(name: "HLF_LNA", value: 11)
!1086 = !DIEnumerator(name: "HLF_LNB", value: 12)
!1087 = !DIEnumerator(name: "HLF_CLN", value: 13)
!1088 = !DIEnumerator(name: "HLF_R", value: 14)
!1089 = !DIEnumerator(name: "HLF_S", value: 15)
!1090 = !DIEnumerator(name: "HLF_SNC", value: 16)
!1091 = !DIEnumerator(name: "HLF_C", value: 17)
!1092 = !DIEnumerator(name: "HLF_T", value: 18)
!1093 = !DIEnumerator(name: "HLF_V", value: 19)
!1094 = !DIEnumerator(name: "HLF_VNC", value: 20)
!1095 = !DIEnumerator(name: "HLF_W", value: 21)
!1096 = !DIEnumerator(name: "HLF_WM", value: 22)
!1097 = !DIEnumerator(name: "HLF_FL", value: 23)
!1098 = !DIEnumerator(name: "HLF_FC", value: 24)
!1099 = !DIEnumerator(name: "HLF_ADD", value: 25)
!1100 = !DIEnumerator(name: "HLF_CHD", value: 26)
!1101 = !DIEnumerator(name: "HLF_DED", value: 27)
!1102 = !DIEnumerator(name: "HLF_TXD", value: 28)
!1103 = !DIEnumerator(name: "HLF_CONCEAL", value: 29)
!1104 = !DIEnumerator(name: "HLF_SC", value: 30)
!1105 = !DIEnumerator(name: "HLF_SPB", value: 31)
!1106 = !DIEnumerator(name: "HLF_SPC", value: 32)
!1107 = !DIEnumerator(name: "HLF_SPR", value: 33)
!1108 = !DIEnumerator(name: "HLF_SPL", value: 34)
!1109 = !DIEnumerator(name: "HLF_PNI", value: 35)
!1110 = !DIEnumerator(name: "HLF_PSI", value: 36)
!1111 = !DIEnumerator(name: "HLF_PSB", value: 37)
!1112 = !DIEnumerator(name: "HLF_PST", value: 38)
!1113 = !DIEnumerator(name: "HLF_TP", value: 39)
!1114 = !DIEnumerator(name: "HLF_TPS", value: 40)
!1115 = !DIEnumerator(name: "HLF_TPF", value: 41)
!1116 = !DIEnumerator(name: "HLF_CUC", value: 42)
!1117 = !DIEnumerator(name: "HLF_CUL", value: 43)
!1118 = !DIEnumerator(name: "HLF_MC", value: 44)
!1119 = !DIEnumerator(name: "HLF_QFL", value: 45)
!1120 = !DIEnumerator(name: "HLF_ST", value: 46)
!1121 = !DIEnumerator(name: "HLF_STNC", value: 47)
!1122 = !DIEnumerator(name: "HLF_COUNT", value: 48)
!1123 = !{!1124, !1127, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1139, !1140, !1141, !1142, !1143, !1144, !1441, !2847}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_u", file: !872, line: 324, baseType: !1126)
!1126 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1130 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1131 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "long_i", file: !872, line: 346, baseType: !1130)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "linenr_T", file: !872, line: 1687, baseType: !1130)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1137, line: 62, baseType: !1138)
!1137 = !DIFile(filename: "/usr/lib/llvm-6.0/lib/clang/6.0.1/include/stddef.h", directory: "/home/sahil/vim/src")
!1138 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1139 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1140 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "idopt_T", file: !89, line: 243, baseType: !88)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "estack_T", file: !6, line: 2050, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2035, size: 448, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1152, !2846}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "es_lnum", scope: !1146, file: !6, line: 2036, baseType: !1130, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "es_name", scope: !1146, file: !6, line: 2037, baseType: !1124, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "es_type", scope: !1146, file: !6, line: 2038, baseType: !1151, size: 32, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "etype_T", file: !6, line: 2033, baseType: !845)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "es_info", scope: !1146, file: !6, line: 2046, baseType: !1153, size: 64, offset: 192)
!1153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1146, file: !6, line: 2039, size: 64, elements: !1154)
!1154 = !{!1155, !1165, !2819, !2823}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "sctx", scope: !1153, file: !6, line: 2040, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sctx_T", file: !6, line: 92, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 85, size: 192, elements: !1159)
!1159 = !{!1160, !1162, !1163, !1164}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "sc_sid", scope: !1158, file: !6, line: 87, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "scid_T", file: !6, line: 62, baseType: !1131)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "sc_seq", scope: !1158, file: !6, line: 88, baseType: !1131, size: 32, offset: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sc_lnum", scope: !1158, file: !6, line: 89, baseType: !1135, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sc_version", scope: !1158, file: !6, line: 91, baseType: !1131, size: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ufunc", scope: !1153, file: !6, line: 2042, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "ufunc_T", file: !6, line: 1658, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1597, size: 3072, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1176, !1177, !1186, !1187, !1202, !1203, !1204, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2816, !2817}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "uf_varargs", scope: !1168, file: !6, line: 1599, baseType: !1131, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "uf_flags", scope: !1168, file: !6, line: 1600, baseType: !1131, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "uf_calls", scope: !1168, file: !6, line: 1601, baseType: !1131, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "uf_cleared", scope: !1168, file: !6, line: 1602, baseType: !1131, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "uf_def_status", scope: !1168, file: !6, line: 1603, baseType: !1175, size: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_status_T", file: !6, line: 1591, baseType: !23)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "uf_dfunc_idx", scope: !1168, file: !6, line: 1604, baseType: !1131, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "uf_args", scope: !1168, file: !6, line: 1605, baseType: !1178, size: 192, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "garray_T", file: !6, line: 55, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "growarray", file: !6, line: 48, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1185}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ga_len", scope: !1179, file: !6, line: 50, baseType: !1131, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ga_maxlen", scope: !1179, file: !6, line: 51, baseType: !1131, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ga_itemsize", scope: !1179, file: !6, line: 52, baseType: !1131, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ga_growsize", scope: !1179, file: !6, line: 53, baseType: !1131, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ga_data", scope: !1179, file: !6, line: 54, baseType: !1129, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "uf_def_args", scope: !1168, file: !6, line: 1606, baseType: !1178, size: 192, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "uf_arg_types", scope: !1168, file: !6, line: 1609, baseType: !1188, size: 64, offset: 576)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "type_T", file: !6, line: 1394, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "type_S", file: !6, line: 1395, size: 192, elements: !1192)
!1192 = !{!1193, !1195, !1198, !1199, !1200, !1201}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "tt_type", scope: !1191, file: !6, line: 1396, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "vartype_T", file: !6, line: 1391, baseType: !5)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "tt_argcount", scope: !1191, file: !6, line: 1397, baseType: !1196, size: 8, offset: 32)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_T", file: !6, line: 1342, baseType: !1197)
!1197 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "tt_min_argcount", scope: !1191, file: !6, line: 1398, baseType: !1128, size: 8, offset: 40)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "tt_flags", scope: !1191, file: !6, line: 1399, baseType: !1128, size: 8, offset: 48)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "tt_member", scope: !1191, file: !6, line: 1400, baseType: !1189, size: 64, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "tt_args", scope: !1191, file: !6, line: 1401, baseType: !1188, size: 64, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "uf_ret_type", scope: !1168, file: !6, line: 1610, baseType: !1189, size: 64, offset: 640)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "uf_type_list", scope: !1168, file: !6, line: 1611, baseType: !1178, size: 192, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "uf_partial", scope: !1168, file: !6, line: 1612, baseType: !1205, size: 64, offset: 896)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "partial_T", file: !6, line: 1348, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partial_S", file: !6, line: 1994, size: 832, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1223, !1233, !1234, !2758, !2759}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pt_refcount", scope: !1207, file: !6, line: 1996, baseType: !1131, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pt_name", scope: !1207, file: !6, line: 1997, baseType: !1124, size: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pt_func", scope: !1207, file: !6, line: 1999, baseType: !1166, size: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pt_auto", scope: !1207, file: !6, line: 2001, baseType: !1131, size: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pt_outer", scope: !1207, file: !6, line: 2005, baseType: !1214, size: 256, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "outer_T", file: !6, line: 1986, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "outer_S", file: !6, line: 1987, size: 256, elements: !1216)
!1216 = !{!1217, !1219, !1220, !1222}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "out_stack", scope: !1215, file: !6, line: 1988, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame_idx", scope: !1215, file: !6, line: 1989, baseType: !1131, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "out_up", scope: !1215, file: !6, line: 1990, baseType: !1221, size: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "out_up_is_copy", scope: !1215, file: !6, line: 1991, baseType: !1131, size: 32, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pt_funcstack", scope: !1207, file: !6, line: 2007, baseType: !1224, size: 64, offset: 512)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "funcstack_T", file: !6, line: 1984, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funcstack_S", file: !6, line: 1972, size: 320, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fs_ga", scope: !1226, file: !6, line: 1974, baseType: !1178, size: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "fs_var_offset", scope: !1226, file: !6, line: 1978, baseType: !1131, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "fs_refcount", scope: !1226, file: !6, line: 1981, baseType: !1131, size: 32, offset: 224)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "fs_min_refcount", scope: !1226, file: !6, line: 1982, baseType: !1131, size: 32, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "fs_copyID", scope: !1226, file: !6, line: 1983, baseType: !1131, size: 32, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pt_argc", scope: !1207, file: !6, line: 2010, baseType: !1131, size: 32, offset: 576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pt_argv", scope: !1207, file: !6, line: 2011, baseType: !1235, size: 64, offset: 640)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "typval_T", file: !6, line: 1432, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1412, size: 128, elements: !1238)
!1238 = !{!1239, !1240, !1241}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "v_type", scope: !1237, file: !6, line: 1414, baseType: !1194, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "v_lock", scope: !1237, file: !6, line: 1415, baseType: !1128, size: 8, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "vval", scope: !1237, file: !6, line: 1431, baseType: !1242, size: 64, offset: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1237, file: !6, line: 1416, size: 64, elements: !1243)
!1243 = !{!1244, !1247, !1250, !1251, !1295, !1330, !1331, !2749, !2750}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "v_number", scope: !1242, file: !6, line: 1418, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "varnumber_T", file: !6, line: 1327, baseType: !1246)
!1246 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "v_float", scope: !1242, file: !6, line: 1420, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_T", file: !6, line: 1344, baseType: !1249)
!1249 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "v_string", scope: !1242, file: !6, line: 1422, baseType: !1124, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "v_list", scope: !1242, file: !6, line: 1423, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "list_T", file: !6, line: 1346, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listvar_S", file: !6, line: 1471, size: 768, elements: !1255)
!1255 = !{!1256, !1264, !1271, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lv_first", scope: !1254, file: !6, line: 1473, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "listitem_T", file: !6, line: 1446, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listitem_S", file: !6, line: 1448, size: 256, elements: !1260)
!1260 = !{!1261, !1262, !1263}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "li_next", scope: !1259, file: !6, line: 1450, baseType: !1257, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "li_prev", scope: !1259, file: !6, line: 1451, baseType: !1257, size: 64, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "li_tv", scope: !1259, file: !6, line: 1452, baseType: !1236, size: 128, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "lv_watch", scope: !1254, file: !6, line: 1474, baseType: !1265, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "listwatch_T", file: !6, line: 1456, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listwatch_S", file: !6, line: 1458, size: 128, elements: !1268)
!1268 = !{!1269, !1270}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "lw_item", scope: !1267, file: !6, line: 1460, baseType: !1257, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "lw_next", scope: !1267, file: !6, line: 1461, baseType: !1265, size: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lv_u", scope: !1254, file: !6, line: 1487, baseType: !1272, size: 192, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1254, file: !6, line: 1475, size: 192, elements: !1273)
!1273 = !{!1274, !1280}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "nonmat", scope: !1272, file: !6, line: 1481, baseType: !1275, size: 192)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !6, line: 1476, size: 192, elements: !1276)
!1276 = !{!1277, !1278, !1279}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "lv_start", scope: !1275, file: !6, line: 1478, baseType: !1245, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "lv_end", scope: !1275, file: !6, line: 1479, baseType: !1245, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "lv_stride", scope: !1275, file: !6, line: 1480, baseType: !1131, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1272, file: !6, line: 1486, baseType: !1281, size: 192)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !6, line: 1482, size: 192, elements: !1282)
!1282 = !{!1283, !1284, !1285}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "lv_last", scope: !1281, file: !6, line: 1483, baseType: !1257, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "lv_idx_item", scope: !1281, file: !6, line: 1484, baseType: !1257, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "lv_idx", scope: !1281, file: !6, line: 1485, baseType: !1131, size: 32, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "lv_type", scope: !1254, file: !6, line: 1488, baseType: !1189, size: 64, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "lv_copylist", scope: !1254, file: !6, line: 1489, baseType: !1252, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "lv_used_next", scope: !1254, file: !6, line: 1490, baseType: !1252, size: 64, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "lv_used_prev", scope: !1254, file: !6, line: 1491, baseType: !1252, size: 64, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "lv_refcount", scope: !1254, file: !6, line: 1492, baseType: !1131, size: 32, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "lv_len", scope: !1254, file: !6, line: 1493, baseType: !1131, size: 32, offset: 608)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "lv_with_items", scope: !1254, file: !6, line: 1494, baseType: !1131, size: 32, offset: 640)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "lv_copyID", scope: !1254, file: !6, line: 1496, baseType: !1131, size: 32, offset: 672)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "lv_lock", scope: !1254, file: !6, line: 1497, baseType: !1128, size: 8, offset: 704)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "v_dict", scope: !1242, file: !6, line: 1424, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict_T", file: !6, line: 1347, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictvar_S", file: !6, line: 1545, size: 2816, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !1304, !1326, !1327, !1328, !1329}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dv_lock", scope: !1298, file: !6, line: 1547, baseType: !1128, size: 8)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dv_scope", scope: !1298, file: !6, line: 1548, baseType: !1128, size: 8, offset: 8)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dv_refcount", scope: !1298, file: !6, line: 1549, baseType: !1131, size: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dv_copyID", scope: !1298, file: !6, line: 1550, baseType: !1131, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dv_hashtab", scope: !1298, file: !6, line: 1551, baseType: !1305, size: 2432, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashtab_T", file: !6, line: 1290, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashtable_S", file: !6, line: 1277, size: 2432, elements: !1307)
!1307 = !{!1308, !1310, !1311, !1312, !1313, !1314, !1315, !1322}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ht_mask", scope: !1306, file: !6, line: 1279, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "long_u", file: !872, line: 345, baseType: !1138)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "ht_used", scope: !1306, file: !6, line: 1281, baseType: !1309, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ht_filled", scope: !1306, file: !6, line: 1282, baseType: !1309, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ht_changed", scope: !1306, file: !6, line: 1283, baseType: !1131, size: 32, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ht_locked", scope: !1306, file: !6, line: 1284, baseType: !1131, size: 32, offset: 224)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ht_error", scope: !1306, file: !6, line: 1285, baseType: !1131, size: 32, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ht_array", scope: !1306, file: !6, line: 1287, baseType: !1316, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashitem_T", file: !6, line: 1265, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashitem_S", file: !6, line: 1261, size: 128, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "hi_hash", scope: !1318, file: !6, line: 1263, baseType: !1309, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "hi_key", scope: !1318, file: !6, line: 1264, baseType: !1124, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ht_smallarray", scope: !1306, file: !6, line: 1289, baseType: !1323, size: 2048, offset: 384)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 2048, elements: !1324)
!1324 = !{!1325}
!1325 = !DISubrange(count: 16)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dv_type", scope: !1298, file: !6, line: 1552, baseType: !1189, size: 64, offset: 2560)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dv_copydict", scope: !1298, file: !6, line: 1553, baseType: !1296, size: 64, offset: 2624)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dv_used_next", scope: !1298, file: !6, line: 1554, baseType: !1296, size: 64, offset: 2688)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dv_used_prev", scope: !1298, file: !6, line: 1555, baseType: !1296, size: 64, offset: 2752)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "v_partial", scope: !1242, file: !6, line: 1425, baseType: !1205, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "v_job", scope: !1242, file: !6, line: 1427, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "job_T", file: !6, line: 1365, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "jobvar_S", file: !6, line: 2072, size: 1024, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1343, !1344, !1345, !1347, !1348, !1349, !1350, !1357, !2650, !2651, !2652, !2748}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "jv_next", scope: !1334, file: !6, line: 2074, baseType: !1332, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "jv_prev", scope: !1334, file: !6, line: 2075, baseType: !1332, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "jv_pid", scope: !1334, file: !6, line: 2077, baseType: !1339, size: 32, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1340, line: 97, baseType: !1341)
!1340 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/sahil/vim/src")
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !1342, line: 154, baseType: !1131)
!1342 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/sahil/vim/src")
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "jv_tty_in", scope: !1334, file: !6, line: 2083, baseType: !1124, size: 64, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "jv_tty_out", scope: !1334, file: !6, line: 2084, baseType: !1124, size: 64, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "jv_status", scope: !1334, file: !6, line: 2085, baseType: !1346, size: 32, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "jobstatus_T", file: !6, line: 2067, baseType: !30)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "jv_stoponexit", scope: !1334, file: !6, line: 2086, baseType: !1124, size: 64, offset: 384)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "jv_termsig", scope: !1334, file: !6, line: 2088, baseType: !1124, size: 64, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "jv_exitval", scope: !1334, file: !6, line: 2093, baseType: !1131, size: 32, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "jv_exit_cb", scope: !1334, file: !6, line: 2094, baseType: !1351, size: 192, offset: 576)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "callback_T", file: !6, line: 1360, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 1356, size: 192, elements: !1353)
!1353 = !{!1354, !1355, !1356}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cb_name", scope: !1352, file: !6, line: 1357, baseType: !1124, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "cb_partial", scope: !1352, file: !6, line: 1358, baseType: !1205, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "cb_free_name", scope: !1352, file: !6, line: 1359, baseType: !1131, size: 32, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "jv_in_buf", scope: !1334, file: !6, line: 2096, baseType: !1358, size: 64, offset: 768)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "buf_T", file: !6, line: 63, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_buffer", file: !6, line: 2629, size: 73152, elements: !1361)
!1361 = !{!1362, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1470, !1473, !1474, !1478, !1479, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !2323, !2324, !2325, !2330, !2331, !2332, !2336, !2344, !2345, !2346, !2347, !2348, !2350, !2351, !2352, !2353, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2597, !2598, !2599, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2633, !2634, !2635, !2636, !2637, !2644, !2645, !2649}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "b_ml", scope: !1360, file: !6, line: 2631, baseType: !1363, size: 832)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "memline_T", file: !6, line: 766, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "memline", file: !6, line: 737, size: 832, elements: !1365)
!1365 = !{!1366, !1367, !1428, !1437, !1438, !1439, !1440, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1455, !1456}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_count", scope: !1364, file: !6, line: 739, baseType: !1135, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "ml_mfp", scope: !1364, file: !6, line: 741, baseType: !1368, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "memfile_T", file: !6, line: 459, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "memfile", file: !6, line: 671, size: 9856, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1396, !1397, !1398, !1399, !1400, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1425, !1426, !1427}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mf_fname", scope: !1370, file: !6, line: 673, baseType: !1124, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mf_ffname", scope: !1370, file: !6, line: 674, baseType: !1124, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "mf_fd", scope: !1370, file: !6, line: 675, baseType: !1131, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "mf_flags", scope: !1370, file: !6, line: 676, baseType: !1131, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "mf_reopen", scope: !1370, file: !6, line: 677, baseType: !1131, size: 32, offset: 192)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mf_free_first", scope: !1370, file: !6, line: 678, baseType: !1378, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "bhdr_T", file: !6, line: 458, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_hdr", file: !6, line: 506, size: 448, elements: !1381)
!1381 = !{!1382, !1391, !1392, !1393, !1394, !1395}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "bh_hashitem", scope: !1380, file: !6, line: 508, baseType: !1383, size: 192)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "mf_hashitem_T", file: !6, line: 469, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mf_hashitem_S", file: !6, line: 471, size: 192, elements: !1385)
!1385 = !{!1386, !1388, !1389}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_next", scope: !1384, file: !6, line: 473, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_prev", scope: !1384, file: !6, line: 474, baseType: !1387, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "mhi_key", scope: !1384, file: !6, line: 475, baseType: !1390, size: 64, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "blocknr_T", file: !6, line: 460, baseType: !1130)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bh_next", scope: !1380, file: !6, line: 511, baseType: !1378, size: 64, offset: 192)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bh_prev", scope: !1380, file: !6, line: 512, baseType: !1378, size: 64, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "bh_data", scope: !1380, file: !6, line: 513, baseType: !1124, size: 64, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "bh_page_count", scope: !1380, file: !6, line: 514, baseType: !1131, size: 32, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bh_flags", scope: !1380, file: !6, line: 518, baseType: !1128, size: 8, offset: 416)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_first", scope: !1370, file: !6, line: 679, baseType: !1378, size: 64, offset: 320)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_last", scope: !1370, file: !6, line: 680, baseType: !1378, size: 64, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_count", scope: !1370, file: !6, line: 681, baseType: !1140, size: 32, offset: 448)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "mf_used_count_max", scope: !1370, file: !6, line: 682, baseType: !1140, size: 32, offset: 480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "mf_hash", scope: !1370, file: !6, line: 683, baseType: !1401, size: 4352, offset: 512)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "mf_hashtab_T", file: !6, line: 489, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mf_hashtab_S", file: !6, line: 480, size: 4352, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1408, !1412}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mht_mask", scope: !1402, file: !6, line: 482, baseType: !1309, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "mht_count", scope: !1402, file: !6, line: 484, baseType: !1309, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "mht_buckets", scope: !1402, file: !6, line: 485, baseType: !1407, size: 64, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "mht_small_buckets", scope: !1402, file: !6, line: 487, baseType: !1409, size: 4096, offset: 192)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1387, size: 4096, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "mht_fixed", scope: !1402, file: !6, line: 488, baseType: !1128, size: 8, offset: 4288)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mf_trans", scope: !1370, file: !6, line: 684, baseType: !1401, size: 4352, offset: 4864)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mf_blocknr_max", scope: !1370, file: !6, line: 685, baseType: !1390, size: 64, offset: 9216)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "mf_blocknr_min", scope: !1370, file: !6, line: 686, baseType: !1390, size: 64, offset: 9280)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mf_neg_count", scope: !1370, file: !6, line: 687, baseType: !1390, size: 64, offset: 9344)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mf_infile_count", scope: !1370, file: !6, line: 688, baseType: !1390, size: 64, offset: 9408)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "mf_page_size", scope: !1370, file: !6, line: 689, baseType: !1140, size: 32, offset: 9472)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "mf_dirty", scope: !1370, file: !6, line: 690, baseType: !1131, size: 32, offset: 9504)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mf_buffer", scope: !1370, file: !6, line: 692, baseType: !1358, size: 64, offset: 9536)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mf_seed", scope: !1370, file: !6, line: 693, baseType: !1422, size: 64, offset: 9600)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 64, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 8)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_key", scope: !1370, file: !6, line: 697, baseType: !1124, size: 64, offset: 9664)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_cm", scope: !1370, file: !6, line: 698, baseType: !1131, size: 32, offset: 9728)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mf_old_seed", scope: !1370, file: !6, line: 699, baseType: !1422, size: 64, offset: 9760)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack", scope: !1364, file: !6, line: 743, baseType: !1429, size: 64, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "infoptr_T", file: !6, line: 717, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "info_pointer", file: !6, line: 711, size: 256, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ip_bnum", scope: !1431, file: !6, line: 713, baseType: !1390, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ip_low", scope: !1431, file: !6, line: 714, baseType: !1135, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ip_high", scope: !1431, file: !6, line: 715, baseType: !1135, size: 64, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ip_index", scope: !1431, file: !6, line: 716, baseType: !1131, size: 32, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack_top", scope: !1364, file: !6, line: 744, baseType: !1131, size: 32, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "ml_stack_size", scope: !1364, file: !6, line: 745, baseType: !1131, size: 32, offset: 224)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !1364, file: !6, line: 751, baseType: !1131, size: 32, offset: 256)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_len", scope: !1364, file: !6, line: 753, baseType: !1441, size: 32, offset: 288)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "colnr_T", file: !872, line: 1688, baseType: !1131)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_lnum", scope: !1364, file: !6, line: 754, baseType: !1135, size: 64, offset: 320)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ml_line_ptr", scope: !1364, file: !6, line: 755, baseType: !1124, size: 64, offset: 384)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked", scope: !1364, file: !6, line: 757, baseType: !1378, size: 64, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_low", scope: !1364, file: !6, line: 758, baseType: !1135, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_high", scope: !1364, file: !6, line: 759, baseType: !1135, size: 64, offset: 576)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ml_locked_lineadd", scope: !1364, file: !6, line: 760, baseType: !1131, size: 32, offset: 640)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ml_chunksize", scope: !1364, file: !6, line: 762, baseType: !1449, size: 64, offset: 704)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksize_T", file: !6, line: 724, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ml_chunksize", file: !6, line: 720, size: 128, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "mlcs_numlines", scope: !1451, file: !6, line: 722, baseType: !1131, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mlcs_totalsize", scope: !1451, file: !6, line: 723, baseType: !1130, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ml_numchunks", scope: !1364, file: !6, line: 763, baseType: !1131, size: 32, offset: 768)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ml_usedchunks", scope: !1364, file: !6, line: 764, baseType: !1131, size: 32, offset: 800)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "b_next", scope: !1360, file: !6, line: 2634, baseType: !1358, size: 64, offset: 832)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "b_prev", scope: !1360, file: !6, line: 2635, baseType: !1358, size: 64, offset: 896)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "b_nwindows", scope: !1360, file: !6, line: 2637, baseType: !1131, size: 32, offset: 960)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "b_flags", scope: !1360, file: !6, line: 2639, baseType: !1131, size: 32, offset: 992)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "b_locked", scope: !1360, file: !6, line: 2640, baseType: !1131, size: 32, offset: 1024)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "b_locked_split", scope: !1360, file: !6, line: 2642, baseType: !1131, size: 32, offset: 1056)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "b_ffname", scope: !1360, file: !6, line: 2651, baseType: !1124, size: 64, offset: 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "b_sfname", scope: !1360, file: !6, line: 2652, baseType: !1124, size: 64, offset: 1152)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "b_fname", scope: !1360, file: !6, line: 2654, baseType: !1124, size: 64, offset: 1216)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "b_dev_valid", scope: !1360, file: !6, line: 2658, baseType: !1131, size: 32, offset: 1280)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "b_dev", scope: !1360, file: !6, line: 2659, baseType: !1468, size: 64, offset: 1344)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1340, line: 59, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1342, line: 145, baseType: !1138)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "b_ino", scope: !1360, file: !6, line: 2660, baseType: !1471, size: 64, offset: 1408)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1340, line: 47, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1342, line: 148, baseType: !1138)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "b_fnum", scope: !1360, file: !6, line: 2667, baseType: !1131, size: 32, offset: 1472)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "b_key", scope: !1360, file: !6, line: 2668, baseType: !1475, size: 72, offset: 1504)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 72, elements: !1476)
!1476 = !{!1477}
!1477 = !DISubrange(count: 9)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "b_changed", scope: !1360, file: !6, line: 2672, baseType: !1131, size: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "b_ct_di", scope: !1360, file: !6, line: 2674, baseType: !1480, size: 320, offset: 1664)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictitem16_T", file: !6, line: 1532, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictitem16_S", file: !6, line: 1526, size: 320, elements: !1482)
!1482 = !{!1483, !1484, !1485}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "di_tv", scope: !1481, file: !6, line: 1528, baseType: !1236, size: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "di_flags", scope: !1481, file: !6, line: 1529, baseType: !1125, size: 8, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "di_key", scope: !1481, file: !6, line: 1530, baseType: !1486, size: 136, offset: 136)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 136, elements: !1487)
!1487 = !{!1488}
!1488 = !DISubrange(count: 17)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_changedtick", scope: !1360, file: !6, line: 2679, baseType: !1245, size: 64, offset: 1984)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_changedtick_pum", scope: !1360, file: !6, line: 2681, baseType: !1245, size: 64, offset: 2048)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "b_saving", scope: !1360, file: !6, line: 2684, baseType: !1131, size: 32, offset: 2112)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_set", scope: !1360, file: !6, line: 2691, baseType: !1131, size: 32, offset: 2144)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_top", scope: !1360, file: !6, line: 2693, baseType: !1135, size: 64, offset: 2176)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_bot", scope: !1360, file: !6, line: 2694, baseType: !1135, size: 64, offset: 2240)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "b_mod_xlines", scope: !1360, file: !6, line: 2696, baseType: !1130, size: 64, offset: 2304)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "b_wininfo", scope: !1360, file: !6, line: 2699, baseType: !1497, size: 64, offset: 2368)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "wininfo_T", file: !6, line: 60, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wininfo_S", file: !6, line: 325, size: 11648, elements: !1500)
!1500 = !{!1501, !1502, !1503, !2318, !2319, !2320, !2321, !2322}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "wi_next", scope: !1499, file: !6, line: 327, baseType: !1497, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "wi_prev", scope: !1499, file: !6, line: 328, baseType: !1497, size: 64, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "wi_win", scope: !1499, file: !6, line: 329, baseType: !1504, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "win_T", file: !6, line: 59, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "window_S", file: !6, line: 3365, size: 72064, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1675, !1676, !1691, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1748, !1749, !1750, !1751, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1774, !1775, !1777, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1798, !1799, !1800, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1862, !1863, !1864, !1865, !1866, !2119, !2127, !2128, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2208, !2209, !2210, !2211, !2229, !2230, !2231, !2232, !2273, !2274, !2286, !2287, !2288, !2289, !2290, !2310, !2311, !2312, !2313, !2317}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "w_id", scope: !1506, file: !6, line: 3367, baseType: !1131, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "w_buffer", scope: !1506, file: !6, line: 3369, baseType: !1358, size: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev", scope: !1506, file: !6, line: 3371, baseType: !1504, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "w_next", scope: !1506, file: !6, line: 3372, baseType: !1504, size: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "w_s", scope: !1506, file: !6, line: 3375, baseType: !1513, size: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "synblock_T", file: !6, line: 2618, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2542, size: 9920, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1532, !1533, !1534, !1535, !1536, !1603, !1611, !1612, !1613, !1614, !1615, !1651, !1652, !1653, !1654, !1655, !1656, !1658, !1659, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1674}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "b_keywtab", scope: !1515, file: !6, line: 2544, baseType: !1305, size: 2432)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "b_keywtab_ic", scope: !1515, file: !6, line: 2545, baseType: !1305, size: 2432, offset: 2432)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_error", scope: !1515, file: !6, line: 2546, baseType: !1131, size: 32, offset: 4864)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_slow", scope: !1515, file: !6, line: 2548, baseType: !1131, size: 32, offset: 4896)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_ic", scope: !1515, file: !6, line: 2550, baseType: !1131, size: 32, offset: 4928)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_foldlevel", scope: !1515, file: !6, line: 2551, baseType: !1131, size: 32, offset: 4960)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_spell", scope: !1515, file: !6, line: 2552, baseType: !1131, size: 32, offset: 4992)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_patterns", scope: !1515, file: !6, line: 2553, baseType: !1178, size: 192, offset: 5056)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_clusters", scope: !1515, file: !6, line: 2554, baseType: !1178, size: 192, offset: 5248)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_cluster_id", scope: !1515, file: !6, line: 2555, baseType: !1131, size: 32, offset: 5440)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "b_nospell_cluster_id", scope: !1515, file: !6, line: 2556, baseType: !1131, size: 32, offset: 5472)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_containedin", scope: !1515, file: !6, line: 2557, baseType: !1131, size: 32, offset: 5504)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_flags", scope: !1515, file: !6, line: 2559, baseType: !1131, size: 32, offset: 5536)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_id", scope: !1515, file: !6, line: 2560, baseType: !1531, size: 16, offset: 5568)
!1531 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_minlines", scope: !1515, file: !6, line: 2561, baseType: !1130, size: 64, offset: 5632)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_maxlines", scope: !1515, file: !6, line: 2562, baseType: !1130, size: 64, offset: 5696)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_sync_linebreaks", scope: !1515, file: !6, line: 2563, baseType: !1130, size: 64, offset: 5760)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_pat", scope: !1515, file: !6, line: 2564, baseType: !1124, size: 64, offset: 5824)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_prog", scope: !1515, file: !6, line: 2565, baseType: !1537, size: 64, offset: 5888)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "regprog_T", file: !1539, line: 56, baseType: !1540)
!1539 = !DIFile(filename: "./regexp.h", directory: "/home/sahil/vim/src")
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regprog", file: !1539, line: 49, size: 192, elements: !1541)
!1541 = !{!1542, !1599, !1600, !1601, !1602}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1540, file: !1539, line: 51, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "regengine_T", file: !1539, line: 42, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regengine", file: !1539, line: 167, size: 320, elements: !1546)
!1546 = !{!1547, !1551, !1555, !1570, !1598}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "regcomp", scope: !1545, file: !1539, line: 169, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!1537, !1124, !1131}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "regfree", scope: !1545, file: !1539, line: 170, baseType: !1552, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1537}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "regexec_nl", scope: !1545, file: !1539, line: 171, baseType: !1556, size: 64, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!1131, !1559, !1124, !1441, !1131}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_T", file: !1539, line: 137, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 131, size: 1408, elements: !1562)
!1562 = !{!1563, !1564, !1568, !1569}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "regprog", scope: !1561, file: !1539, line: 133, baseType: !1537, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "startp", scope: !1561, file: !1539, line: 134, baseType: !1565, size: 640, offset: 64)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1124, size: 640, elements: !1566)
!1566 = !{!1567}
!1567 = !DISubrange(count: 10)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "endp", scope: !1561, file: !1539, line: 135, baseType: !1565, size: 640, offset: 704)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rm_ic", scope: !1561, file: !1539, line: 136, baseType: !1131, size: 32, offset: 1344)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "regexec_multi", scope: !1545, file: !1539, line: 172, baseType: !1571, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1130, !1574, !1504, !1358, !1135, !1441, !1589, !1142}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmmatch_T", file: !1539, line: 154, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 147, size: 2688, elements: !1577)
!1577 = !{!1578, !1579, !1586, !1587, !1588}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "regprog", scope: !1576, file: !1539, line: 149, baseType: !1537, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "startpos", scope: !1576, file: !1539, line: 150, baseType: !1580, size: 1280, offset: 64)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 1280, elements: !1566)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "lpos_T", file: !6, line: 41, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 37, size: 128, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1582, file: !6, line: 39, baseType: !1135, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1582, file: !6, line: 40, baseType: !1441, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "endpos", scope: !1576, file: !1539, line: 151, baseType: !1580, size: 1280, offset: 1344)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rmm_ic", scope: !1576, file: !1539, line: 152, baseType: !1131, size: 32, offset: 2624)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "rmm_maxcol", scope: !1576, file: !1539, line: 153, baseType: !1441, size: 32, offset: 2656)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "proftime_T", file: !872, line: 1786, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1592, line: 8, size: 128, elements: !1593)
!1592 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "/home/sahil/vim/src")
!1593 = !{!1594, !1596}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1591, file: !1592, line: 10, baseType: !1595, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1342, line: 160, baseType: !1130)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1591, file: !1592, line: 11, baseType: !1597, size: 64, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !1342, line: 162, baseType: !1130)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1545, file: !1539, line: 173, baseType: !1124, size: 64, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "regflags", scope: !1540, file: !1539, line: 52, baseType: !1140, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "re_engine", scope: !1540, file: !1539, line: 53, baseType: !1140, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "re_flags", scope: !1540, file: !1539, line: 54, baseType: !1140, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "re_in_use", scope: !1540, file: !1539, line: 55, baseType: !1131, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_time", scope: !1515, file: !6, line: 2567, baseType: !1604, size: 384, offset: 5952)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "syn_time_T", file: !6, line: 2475, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2470, size: 384, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !1605, file: !6, line: 2471, baseType: !1590, size: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "slowest", scope: !1605, file: !6, line: 2472, baseType: !1590, size: 128, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1605, file: !6, line: 2473, baseType: !1130, size: 64, offset: 256)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1605, file: !6, line: 2474, baseType: !1130, size: 64, offset: 320)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_linecont_ic", scope: !1515, file: !6, line: 2569, baseType: !1131, size: 32, offset: 6336)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_topgrp", scope: !1515, file: !6, line: 2570, baseType: !1131, size: 32, offset: 6368)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_conceal", scope: !1515, file: !6, line: 2572, baseType: !1131, size: 32, offset: 6400)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_folditems", scope: !1515, file: !6, line: 2575, baseType: !1131, size: 32, offset: 6432)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_array", scope: !1515, file: !6, line: 2592, baseType: !1616, size: 64, offset: 6464)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "synstate_T", file: !6, line: 1061, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syn_state", file: !6, line: 1063, size: 1728, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1644, !1645, !1646, !1648, !1650}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next", scope: !1618, file: !6, line: 1065, baseType: !1616, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "sst_lnum", scope: !1618, file: !6, line: 1066, baseType: !1135, size: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "sst_union", scope: !1618, file: !6, line: 1071, baseType: !1623, size: 1344, offset: 128)
!1623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !6, line: 1067, size: 1344, elements: !1624)
!1624 = !{!1625, !1643}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "sst_stack", scope: !1623, file: !6, line: 1069, baseType: !1626, size: 1344)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 1344, elements: !1641)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "bufstate_T", file: !6, line: 1055, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_state", file: !6, line: 1046, size: 192, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633, !1634}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bs_idx", scope: !1628, file: !6, line: 1048, baseType: !1131, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bs_flags", scope: !1628, file: !6, line: 1049, baseType: !1131, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bs_seqnr", scope: !1628, file: !6, line: 1051, baseType: !1131, size: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bs_cchar", scope: !1628, file: !6, line: 1052, baseType: !1131, size: 32, offset: 96)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "bs_extmatch", scope: !1628, file: !6, line: 1054, baseType: !1635, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_extmatch_T", file: !1539, line: 165, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1539, line: 161, size: 704, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1637, file: !1539, line: 163, baseType: !1531, size: 16)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !1637, file: !1539, line: 164, baseType: !1565, size: 640, offset: 64)
!1641 = !{!1642}
!1642 = !DISubrange(count: 7)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "sst_ga", scope: !1623, file: !6, line: 1070, baseType: !1178, size: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next_flags", scope: !1618, file: !6, line: 1072, baseType: !1131, size: 32, offset: 1472)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "sst_stacksize", scope: !1618, file: !6, line: 1073, baseType: !1131, size: 32, offset: 1504)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sst_next_list", scope: !1618, file: !6, line: 1074, baseType: !1647, size: 64, offset: 1536)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sst_tick", scope: !1618, file: !6, line: 1076, baseType: !1649, size: 16, offset: 1600)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "disptick_T", file: !872, line: 1689, baseType: !1139)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "sst_change_lnum", scope: !1618, file: !6, line: 1077, baseType: !1135, size: 64, offset: 1664)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_len", scope: !1515, file: !6, line: 2593, baseType: !1131, size: 32, offset: 6528)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_first", scope: !1515, file: !6, line: 2594, baseType: !1616, size: 64, offset: 6592)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_firstfree", scope: !1515, file: !6, line: 2595, baseType: !1616, size: 64, offset: 6656)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_freecount", scope: !1515, file: !6, line: 2596, baseType: !1131, size: 32, offset: 6720)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_check_lnum", scope: !1515, file: !6, line: 2597, baseType: !1135, size: 64, offset: 6784)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "b_sst_lasttick", scope: !1515, file: !6, line: 2598, baseType: !1657, size: 16, offset: 6848)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "short_u", file: !872, line: 325, baseType: !1139)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "b_langp", scope: !1515, file: !6, line: 2603, baseType: !1178, size: 192, offset: 6912)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_ismw", scope: !1515, file: !6, line: 2604, baseType: !1660, size: 2048, offset: 7104)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 2048, elements: !1661)
!1661 = !{!1662}
!1662 = !DISubrange(count: 256)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell_ismw_mb", scope: !1515, file: !6, line: 2605, baseType: !1124, size: 64, offset: 9152)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spc", scope: !1515, file: !6, line: 2606, baseType: !1124, size: 64, offset: 9216)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "b_cap_prog", scope: !1515, file: !6, line: 2607, baseType: !1537, size: 64, offset: 9280)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spf", scope: !1515, file: !6, line: 2608, baseType: !1124, size: 64, offset: 9344)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spl", scope: !1515, file: !6, line: 2609, baseType: !1124, size: 64, offset: 9408)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_spo", scope: !1515, file: !6, line: 2610, baseType: !1124, size: 64, offset: 9472)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "b_cjk", scope: !1515, file: !6, line: 2611, baseType: !1131, size: 32, offset: 9536)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_chartab", scope: !1515, file: !6, line: 2616, baseType: !1671, size: 256, offset: 9568)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 256, elements: !1672)
!1672 = !{!1673}
!1673 = !DISubrange(count: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "b_syn_isk", scope: !1515, file: !6, line: 2617, baseType: !1124, size: 64, offset: 9856)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "w_closing", scope: !1506, file: !6, line: 3378, baseType: !1131, size: 32, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "w_frame", scope: !1506, file: !6, line: 3381, baseType: !1677, size: 64, offset: 384)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "frame_T", file: !6, line: 61, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frame_S", file: !6, line: 3231, size: 512, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_layout", scope: !1679, file: !6, line: 3233, baseType: !1128, size: 8)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "fr_width", scope: !1679, file: !6, line: 3234, baseType: !1131, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "fr_newwidth", scope: !1679, file: !6, line: 3235, baseType: !1131, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "fr_height", scope: !1679, file: !6, line: 3236, baseType: !1131, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "fr_newheight", scope: !1679, file: !6, line: 3237, baseType: !1131, size: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "fr_parent", scope: !1679, file: !6, line: 3238, baseType: !1677, size: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "fr_next", scope: !1679, file: !6, line: 3239, baseType: !1677, size: 64, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "fr_prev", scope: !1679, file: !6, line: 3241, baseType: !1677, size: 64, offset: 320)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fr_child", scope: !1679, file: !6, line: 3244, baseType: !1677, size: 64, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "fr_win", scope: !1679, file: !6, line: 3245, baseType: !1504, size: 64, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor", scope: !1506, file: !6, line: 3383, baseType: !1692, size: 128, offset: 448)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "pos_T", file: !6, line: 31, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 26, size: 128, elements: !1694)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !1693, file: !6, line: 28, baseType: !1135, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1693, file: !6, line: 29, baseType: !1441, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "coladd", scope: !1693, file: !6, line: 30, baseType: !1441, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "w_curswant", scope: !1506, file: !6, line: 3385, baseType: !1441, size: 32, offset: 576)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "w_set_curswant", scope: !1506, file: !6, line: 3389, baseType: !1131, size: 32, offset: 608)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "w_last_cursorline", scope: !1506, file: !6, line: 3394, baseType: !1135, size: 64, offset: 640)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_mode", scope: !1506, file: !6, line: 3400, baseType: !1128, size: 8, offset: 704)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_lnum", scope: !1506, file: !6, line: 3401, baseType: !1135, size: 64, offset: 768)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_fcol", scope: !1506, file: !6, line: 3402, baseType: !1441, size: 32, offset: 832)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_cursor_lcol", scope: !1506, file: !6, line: 3403, baseType: !1441, size: 32, offset: 864)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_lnum", scope: !1506, file: !6, line: 3404, baseType: !1135, size: 64, offset: 896)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_visual_col", scope: !1506, file: !6, line: 3405, baseType: !1441, size: 32, offset: 960)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_curswant", scope: !1506, file: !6, line: 3406, baseType: !1441, size: 32, offset: 992)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "w_lcs_chars", scope: !1506, file: !6, line: 3408, baseType: !1709, size: 352, offset: 1024)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "lcs_chars_T", file: !6, line: 3358, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3343, size: 352, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "eol", scope: !1710, file: !6, line: 3345, baseType: !1131, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1710, file: !6, line: 3346, baseType: !1131, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !1710, file: !6, line: 3347, baseType: !1131, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "nbsp", scope: !1710, file: !6, line: 3348, baseType: !1131, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !1710, file: !6, line: 3349, baseType: !1131, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "tab1", scope: !1710, file: !6, line: 3350, baseType: !1131, size: 32, offset: 160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "tab2", scope: !1710, file: !6, line: 3351, baseType: !1131, size: 32, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "tab3", scope: !1710, file: !6, line: 3352, baseType: !1131, size: 32, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "trail", scope: !1710, file: !6, line: 3353, baseType: !1131, size: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "lead", scope: !1710, file: !6, line: 3354, baseType: !1131, size: 32, offset: 288)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "conceal", scope: !1710, file: !6, line: 3356, baseType: !1131, size: 32, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline", scope: !1506, file: !6, line: 3414, baseType: !1135, size: 64, offset: 1408)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_was_set", scope: !1506, file: !6, line: 3416, baseType: !1128, size: 8, offset: 1472)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "w_botline", scope: !1506, file: !6, line: 3419, baseType: !1135, size: 64, offset: 1536)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "w_topfill", scope: !1506, file: !6, line: 3423, baseType: !1131, size: 32, offset: 1600)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_topfill", scope: !1506, file: !6, line: 3424, baseType: !1131, size: 32, offset: 1632)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "w_botfill", scope: !1506, file: !6, line: 3425, baseType: !1131, size: 32, offset: 1664)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "w_old_botfill", scope: !1506, file: !6, line: 3427, baseType: !1131, size: 32, offset: 1696)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "w_leftcol", scope: !1506, file: !6, line: 3429, baseType: !1441, size: 32, offset: 1728)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "w_skipcol", scope: !1506, file: !6, line: 3432, baseType: !1441, size: 32, offset: 1760)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "w_empty_rows", scope: !1506, file: !6, line: 3435, baseType: !1131, size: 32, offset: 1792)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "w_filler_rows", scope: !1506, file: !6, line: 3437, baseType: !1131, size: 32, offset: 1824)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "w_winrow", scope: !1506, file: !6, line: 3445, baseType: !1131, size: 32, offset: 1856)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "w_height", scope: !1506, file: !6, line: 3446, baseType: !1131, size: 32, offset: 1888)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "w_status_height", scope: !1506, file: !6, line: 3449, baseType: !1131, size: 32, offset: 1920)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "w_wincol", scope: !1506, file: !6, line: 3450, baseType: !1131, size: 32, offset: 1952)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "w_width", scope: !1506, file: !6, line: 3451, baseType: !1131, size: 32, offset: 1984)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "w_vsep_width", scope: !1506, file: !6, line: 3452, baseType: !1131, size: 32, offset: 2016)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "w_save_cursor", scope: !1506, file: !6, line: 3454, baseType: !1741, size: 320, offset: 2048)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "pos_save_T", file: !6, line: 3330, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3324, size: 320, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_save", scope: !1742, file: !6, line: 3326, baseType: !1131, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "w_topline_corr", scope: !1742, file: !6, line: 3327, baseType: !1131, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor_save", scope: !1742, file: !6, line: 3328, baseType: !1692, size: 128, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "w_cursor_corr", scope: !1742, file: !6, line: 3329, baseType: !1692, size: 128, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_flags", scope: !1506, file: !6, line: 3457, baseType: !1131, size: 32, offset: 2368)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_handled", scope: !1506, file: !6, line: 3458, baseType: !1131, size: 32, offset: 2400)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_title", scope: !1506, file: !6, line: 3459, baseType: !1124, size: 64, offset: 2432)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_pos", scope: !1506, file: !6, line: 3460, baseType: !1752, size: 32, offset: 2496)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "poppos_T", file: !6, line: 2524, baseType: !49)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_fixed", scope: !1506, file: !6, line: 3461, baseType: !1131, size: 32, offset: 2528)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_type", scope: !1506, file: !6, line: 3462, baseType: !1131, size: 32, offset: 2560)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_win", scope: !1506, file: !6, line: 3463, baseType: !1504, size: 64, offset: 2624)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_id", scope: !1506, file: !6, line: 3464, baseType: !1131, size: 32, offset: 2688)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "w_zindex", scope: !1506, file: !6, line: 3465, baseType: !1131, size: 32, offset: 2720)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "w_minheight", scope: !1506, file: !6, line: 3466, baseType: !1131, size: 32, offset: 2752)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "w_minwidth", scope: !1506, file: !6, line: 3467, baseType: !1131, size: 32, offset: 2784)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxheight", scope: !1506, file: !6, line: 3468, baseType: !1131, size: 32, offset: 2816)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxwidth", scope: !1506, file: !6, line: 3469, baseType: !1131, size: 32, offset: 2848)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "w_maxwidth_opt", scope: !1506, file: !6, line: 3470, baseType: !1131, size: 32, offset: 2880)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "w_wantline", scope: !1506, file: !6, line: 3471, baseType: !1131, size: 32, offset: 2912)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "w_wantcol", scope: !1506, file: !6, line: 3472, baseType: !1131, size: 32, offset: 2944)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "w_firstline", scope: !1506, file: !6, line: 3473, baseType: !1131, size: 32, offset: 2976)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "w_want_scrollbar", scope: !1506, file: !6, line: 3474, baseType: !1131, size: 32, offset: 3008)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "w_has_scrollbar", scope: !1506, file: !6, line: 3475, baseType: !1131, size: 32, offset: 3040)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "w_scrollbar_highlight", scope: !1506, file: !6, line: 3476, baseType: !1124, size: 64, offset: 3072)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "w_thumb_highlight", scope: !1506, file: !6, line: 3477, baseType: !1124, size: 64, offset: 3136)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_padding", scope: !1506, file: !6, line: 3478, baseType: !1771, size: 128, offset: 3200)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 128, elements: !1772)
!1772 = !{!1773}
!1773 = !DISubrange(count: 4)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_border", scope: !1506, file: !6, line: 3479, baseType: !1771, size: 128, offset: 3328)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "w_border_highlight", scope: !1506, file: !6, line: 3480, baseType: !1776, size: 256, offset: 3456)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1124, size: 256, elements: !1772)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "w_border_char", scope: !1506, file: !6, line: 3481, baseType: !1778, size: 256, offset: 3712)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 256, elements: !1423)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_leftoff", scope: !1506, file: !6, line: 3483, baseType: !1131, size: 32, offset: 3968)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_rightoff", scope: !1506, file: !6, line: 3484, baseType: !1131, size: 32, offset: 4000)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_last_changedtick", scope: !1506, file: !6, line: 3485, baseType: !1245, size: 64, offset: 4032)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_changedtick", scope: !1506, file: !6, line: 3487, baseType: !1245, size: 64, offset: 4096)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_prop_topline", scope: !1506, file: !6, line: 3490, baseType: !1131, size: 32, offset: 4160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_last_curline", scope: !1506, file: !6, line: 3493, baseType: !1135, size: 64, offset: 4224)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "w_close_cb", scope: !1506, file: !6, line: 3495, baseType: !1351, size: 192, offset: 4288)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_cb", scope: !1506, file: !6, line: 3496, baseType: !1351, size: 192, offset: 4480)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_errors", scope: !1506, file: !6, line: 3497, baseType: !1131, size: 32, offset: 4672)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "w_filter_mode", scope: !1506, file: !6, line: 3498, baseType: !1131, size: 32, offset: 4704)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_curwin", scope: !1506, file: !6, line: 3500, baseType: !1504, size: 64, offset: 4736)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_lnum", scope: !1506, file: !6, line: 3501, baseType: !1135, size: 64, offset: 4800)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mincol", scope: !1506, file: !6, line: 3502, baseType: !1441, size: 32, offset: 4864)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_maxcol", scope: !1506, file: !6, line: 3503, baseType: !1441, size: 32, offset: 4896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_row", scope: !1506, file: !6, line: 3504, baseType: !1131, size: 32, offset: 4928)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_mincol", scope: !1506, file: !6, line: 3505, baseType: !1131, size: 32, offset: 4960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mouse_maxcol", scope: !1506, file: !6, line: 3506, baseType: !1131, size: 32, offset: 4992)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_close", scope: !1506, file: !6, line: 3507, baseType: !1797, size: 32, offset: 5024)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "popclose_T", file: !6, line: 2530, baseType: !57)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask", scope: !1506, file: !6, line: 3509, baseType: !1252, size: 64, offset: 5056)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_cells", scope: !1506, file: !6, line: 3510, baseType: !1124, size: 64, offset: 5120)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_height", scope: !1506, file: !6, line: 3511, baseType: !1131, size: 32, offset: 5184)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_mask_width", scope: !1506, file: !6, line: 3512, baseType: !1131, size: 32, offset: 5216)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "w_popup_timer", scope: !1506, file: !6, line: 3514, baseType: !1803, size: 64, offset: 5248)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "timer_T", file: !6, line: 2478, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_S", file: !6, line: 2479, size: 704, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "tr_id", scope: !1805, file: !6, line: 2481, baseType: !1130, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tr_next", scope: !1805, file: !6, line: 2483, baseType: !1803, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tr_prev", scope: !1805, file: !6, line: 2484, baseType: !1803, size: 64, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tr_due", scope: !1805, file: !6, line: 2485, baseType: !1590, size: 128, offset: 192)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tr_firing", scope: !1805, file: !6, line: 2486, baseType: !1128, size: 8, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tr_paused", scope: !1805, file: !6, line: 2487, baseType: !1128, size: 8, offset: 328)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tr_repeat", scope: !1805, file: !6, line: 2488, baseType: !1131, size: 32, offset: 352)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tr_interval", scope: !1805, file: !6, line: 2489, baseType: !1130, size: 64, offset: 384)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tr_callback", scope: !1805, file: !6, line: 2490, baseType: !1351, size: 192, offset: 448)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tr_emsg_count", scope: !1805, file: !6, line: 2491, baseType: !1131, size: 32, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "w_flags", scope: !1506, file: !6, line: 3517, baseType: !1131, size: 32, offset: 5312)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid", scope: !1506, file: !6, line: 3534, baseType: !1131, size: 32, offset: 5344)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid_cursor", scope: !1506, file: !6, line: 3535, baseType: !1692, size: 128, offset: 5376)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "w_valid_leftcol", scope: !1506, file: !6, line: 3537, baseType: !1441, size: 32, offset: 5504)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_height", scope: !1506, file: !6, line: 3543, baseType: !1131, size: 32, offset: 5536)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_folded", scope: !1506, file: !6, line: 3545, baseType: !1131, size: 32, offset: 5568)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "w_cline_row", scope: !1506, file: !6, line: 3548, baseType: !1131, size: 32, offset: 5600)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "w_virtcol", scope: !1506, file: !6, line: 3550, baseType: !1441, size: 32, offset: 5632)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "w_wrow", scope: !1506, file: !6, line: 3562, baseType: !1131, size: 32, offset: 5664)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "w_wcol", scope: !1506, file: !6, line: 3562, baseType: !1131, size: 32, offset: 5696)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "w_lines_valid", scope: !1506, file: !6, line: 3574, baseType: !1131, size: 32, offset: 5728)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "w_lines", scope: !1506, file: !6, line: 3575, baseType: !1829, size: 64, offset: 5760)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "wline_T", file: !6, line: 3225, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "w_line", file: !6, line: 3216, size: 192, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "wl_lnum", scope: !1831, file: !6, line: 3218, baseType: !1135, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "wl_size", scope: !1831, file: !6, line: 3219, baseType: !1657, size: 16, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "wl_valid", scope: !1831, file: !6, line: 3220, baseType: !1128, size: 8, offset: 80)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "wl_folded", scope: !1831, file: !6, line: 3222, baseType: !1128, size: 8, offset: 88)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "wl_lastlnum", scope: !1831, file: !6, line: 3223, baseType: !1135, size: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "w_folds", scope: !1506, file: !6, line: 3578, baseType: !1178, size: 192, offset: 5824)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "w_fold_manual", scope: !1506, file: !6, line: 3579, baseType: !1128, size: 8, offset: 6016)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "w_foldinvalid", scope: !1506, file: !6, line: 3581, baseType: !1128, size: 8, offset: 6024)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth", scope: !1506, file: !6, line: 3585, baseType: !1131, size: 32, offset: 6048)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "w_redr_type", scope: !1506, file: !6, line: 3593, baseType: !1131, size: 32, offset: 6080)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "w_upd_rows", scope: !1506, file: !6, line: 3594, baseType: !1131, size: 32, offset: 6112)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "w_redraw_top", scope: !1506, file: !6, line: 3596, baseType: !1135, size: 64, offset: 6144)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "w_redraw_bot", scope: !1506, file: !6, line: 3597, baseType: !1135, size: 64, offset: 6208)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "w_redr_status", scope: !1506, file: !6, line: 3598, baseType: !1131, size: 32, offset: 6272)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_cursor", scope: !1506, file: !6, line: 3602, baseType: !1692, size: 128, offset: 6336)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_virtcol", scope: !1506, file: !6, line: 3603, baseType: !1441, size: 32, offset: 6464)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_topline", scope: !1506, file: !6, line: 3604, baseType: !1135, size: 64, offset: 6528)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_line_count", scope: !1506, file: !6, line: 3605, baseType: !1135, size: 64, offset: 6592)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_topfill", scope: !1506, file: !6, line: 3607, baseType: !1131, size: 32, offset: 6656)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "w_ru_empty", scope: !1506, file: !6, line: 3609, baseType: !1128, size: 8, offset: 6688)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "w_alt_fnum", scope: !1506, file: !6, line: 3612, baseType: !1131, size: 32, offset: 6720)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "w_alist", scope: !1506, file: !6, line: 3614, baseType: !1855, size: 64, offset: 6784)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "alist_T", file: !6, line: 863, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arglist", file: !6, line: 858, size: 256, elements: !1858)
!1858 = !{!1859, !1860, !1861}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "al_ga", scope: !1857, file: !6, line: 860, baseType: !1178, size: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "al_refcount", scope: !1857, file: !6, line: 861, baseType: !1131, size: 32, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1857, file: !6, line: 862, baseType: !1131, size: 32, offset: 224)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "w_arg_idx", scope: !1506, file: !6, line: 3615, baseType: !1131, size: 32, offset: 6848)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "w_arg_idx_invalid", scope: !1506, file: !6, line: 3617, baseType: !1131, size: 32, offset: 6880)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "w_localdir", scope: !1506, file: !6, line: 3619, baseType: !1124, size: 64, offset: 6912)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "w_prevdir", scope: !1506, file: !6, line: 3621, baseType: !1124, size: 64, offset: 6976)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar", scope: !1506, file: !6, line: 3623, baseType: !1867, size: 64, offset: 7040)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "vimmenu_T", file: !6, line: 67, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VimMenu", file: !6, line: 3889, size: 1984, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1884, !1885, !1886, !1887, !1889, !1890, !1892, !1893, !1894, !1895, !2116, !2117, !2118}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !1869, file: !6, line: 3891, baseType: !1131, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1869, file: !6, line: 3892, baseType: !1131, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1869, file: !6, line: 3893, baseType: !1124, size: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "dname", scope: !1869, file: !6, line: 3894, baseType: !1124, size: 64, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "en_name", scope: !1869, file: !6, line: 3896, baseType: !1124, size: 64, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "en_dname", scope: !1869, file: !6, line: 3898, baseType: !1124, size: 64, offset: 256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "mnemonic", scope: !1869, file: !6, line: 3901, baseType: !1131, size: 32, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "actext", scope: !1869, file: !6, line: 3902, baseType: !1124, size: 64, offset: 384)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1869, file: !6, line: 3903, baseType: !1131, size: 32, offset: 448)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1869, file: !6, line: 3905, baseType: !1881, size: 64, offset: 512)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{null, !1867}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !1869, file: !6, line: 3908, baseType: !1124, size: 64, offset: 576)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "iconidx", scope: !1869, file: !6, line: 3909, baseType: !1131, size: 32, offset: 640)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "icon_builtin", scope: !1869, file: !6, line: 3910, baseType: !1131, size: 32, offset: 672)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "strings", scope: !1869, file: !6, line: 3912, baseType: !1888, size: 512, offset: 704)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1124, size: 512, elements: !1423)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "noremap", scope: !1869, file: !6, line: 3913, baseType: !1778, size: 256, offset: 1216)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "silent", scope: !1869, file: !6, line: 3914, baseType: !1891, size: 64, offset: 1472)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 64, elements: !1423)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1869, file: !6, line: 3915, baseType: !1867, size: 64, offset: 1536)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1869, file: !6, line: 3916, baseType: !1867, size: 64, offset: 1600)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1869, file: !6, line: 3917, baseType: !1867, size: 64, offset: 1664)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1869, file: !6, line: 3923, baseType: !1896, size: 64, offset: 1728)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkWidget", file: !1898, line: 69, baseType: !1899)
!1898 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkstyle.h", directory: "/home/sahil/vim/src")
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkWidget", file: !1900, line: 530, size: 768, elements: !1901)
!1900 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkwidget.h", directory: "/home/sahil/vim/src")
!1901 = !{!1902, !1938, !1940, !1942, !1943, !1946, !2097, !2103, !2112, !2115}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1899, file: !1900, line: 538, baseType: !1903, size: 256)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkObject", file: !1904, line: 49, baseType: !1905)
!1904 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtktypeutils.h", directory: "/home/sahil/vim/src")
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkObject", file: !1906, line: 107, size: 256, elements: !1907)
!1906 = !DIFile(filename: "/usr/include/gtk-2.0/gtk/gtkobject.h", directory: "/home/sahil/vim/src")
!1907 = !{!1908, !1936}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1905, file: !1906, line: 109, baseType: !1909, size: 192)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "GInitiallyUnowned", file: !1910, line: 189, baseType: !1911)
!1910 = !DIFile(filename: "/usr/include/glib-2.0/gobject/gobject.h", directory: "/home/sahil/vim/src")
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GObject", file: !1910, line: 245, size: 192, elements: !1912)
!1912 = !{!1913, !1927, !1931}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "g_type_instance", scope: !1911, file: !1910, line: 247, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "GTypeInstance", file: !1915, line: 393, baseType: !1916)
!1915 = !DIFile(filename: "/usr/include/glib-2.0/gobject/gtype.h", directory: "/home/sahil/vim/src")
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GTypeInstance", file: !1915, line: 418, size: 64, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "g_class", scope: !1916, file: !1915, line: 421, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "GTypeClass", file: !1915, line: 391, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GTypeClass", file: !1915, line: 408, size: 64, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "g_type", scope: !1921, file: !1915, line: 411, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "GType", file: !1915, line: 384, baseType: !1925)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "gsize", file: !1926, line: 78, baseType: !1138)
!1926 = !DIFile(filename: "/usr/lib/x86_64-linux-gnu/glib-2.0/include/glibconfig.h", directory: "/home/sahil/vim/src")
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1911, file: !1910, line: 250, baseType: !1928, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint", file: !1930, line: 55, baseType: !1140)
!1930 = !DIFile(filename: "/usr/include/glib-2.0/glib/gtypes.h", directory: "/home/sahil/vim/src")
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "qdata", scope: !1911, file: !1910, line: 251, baseType: !1932, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "GData", file: !1934, line: 36, baseType: !1935)
!1934 = !DIFile(filename: "/usr/include/glib-2.0/glib/gdataset.h", directory: "/home/sahil/vim/src")
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "_GData", file: !1934, line: 36, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1905, file: !1906, line: 116, baseType: !1937, size: 32, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint32", file: !1926, line: 52, baseType: !1140)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "private_flags", scope: !1899, file: !1900, line: 545, baseType: !1939, size: 16, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint16", file: !1926, line: 44, baseType: !1139)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1899, file: !1900, line: 550, baseType: !1941, size: 8, offset: 272)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "guint8", file: !1926, line: 41, baseType: !1126)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "saved_state", scope: !1899, file: !1900, line: 558, baseType: !1941, size: 8, offset: 280)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1899, file: !1900, line: 566, baseType: !1944, size: 64, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "gchar", file: !1930, line: 46, baseType: !1128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1899, file: !1900, line: 575, baseType: !1947, size: 64, offset: 384)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkStyle", file: !1898, line: 54, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkStyle", file: !1898, line: 73, size: 7872, elements: !1950)
!1950 = !{!1951, !1953, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1979, !1981, !1982, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2044, !2045, !2046, !2047, !2056, !2057, !2094, !2095, !2096}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1949, file: !1898, line: 75, baseType: !1952, size: 192)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "GObject", file: !1910, line: 187, baseType: !1911)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !1949, file: !1898, line: 79, baseType: !1954, size: 480, offset: 192)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 480, elements: !1963)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkColor", file: !72, line: 102, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkColor", file: !1957, line: 46, size: 96, elements: !1958)
!1957 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkcolor.h", directory: "/home/sahil/vim/src")
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !1956, file: !1957, line: 48, baseType: !1937, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1956, file: !1957, line: 49, baseType: !1939, size: 16, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1956, file: !1957, line: 50, baseType: !1939, size: 16, offset: 48)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1956, file: !1957, line: 51, baseType: !1939, size: 16, offset: 64)
!1963 = !{!1964}
!1964 = !DISubrange(count: 5)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !1949, file: !1898, line: 80, baseType: !1954, size: 480, offset: 672)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "light", scope: !1949, file: !1898, line: 81, baseType: !1954, size: 480, offset: 1152)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "dark", scope: !1949, file: !1898, line: 82, baseType: !1954, size: 480, offset: 1632)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !1949, file: !1898, line: 83, baseType: !1954, size: 480, offset: 2112)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1949, file: !1898, line: 84, baseType: !1954, size: 480, offset: 2592)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1949, file: !1898, line: 85, baseType: !1954, size: 480, offset: 3072)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "text_aa", scope: !1949, file: !1898, line: 86, baseType: !1954, size: 480, offset: 3552)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1949, file: !1898, line: 88, baseType: !1955, size: 96, offset: 4032)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1949, file: !1898, line: 89, baseType: !1955, size: 96, offset: 4128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "font_desc", scope: !1949, file: !1898, line: 90, baseType: !1975, size: 64, offset: 4224)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PangoFontDescription", file: !1977, line: 41, baseType: !1978)
!1977 = !DIFile(filename: "/usr/include/pango-1.0/pango/pango-font.h", directory: "/home/sahil/vim/src")
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PangoFontDescription", file: !1977, line: 41, flags: DIFlagFwdDecl)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "xthickness", scope: !1949, file: !1898, line: 92, baseType: !1980, size: 32, offset: 4288)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "gint", file: !1930, line: 49, baseType: !1131)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ythickness", scope: !1949, file: !1898, line: 93, baseType: !1980, size: 32, offset: 4320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "fg_gc", scope: !1949, file: !1898, line: 95, baseType: !1983, size: 320, offset: 4352)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1984, size: 320, elements: !1963)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkGC", file: !72, line: 106, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkGC", file: !1987, line: 189, size: 384, elements: !1988)
!1987 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkgc.h", directory: "/home/sahil/vim/src")
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1986, file: !1987, line: 191, baseType: !1952, size: 192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "clip_x_origin", scope: !1986, file: !1987, line: 193, baseType: !1980, size: 32, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "clip_y_origin", scope: !1986, file: !1987, line: 194, baseType: !1980, size: 32, offset: 224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ts_x_origin", scope: !1986, file: !1987, line: 195, baseType: !1980, size: 32, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ts_y_origin", scope: !1986, file: !1987, line: 196, baseType: !1980, size: 32, offset: 288)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1986, file: !1987, line: 198, baseType: !1995, size: 64, offset: 320)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkColormap", file: !72, line: 103, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkColormap", file: !1957, line: 68, size: 448, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2003, !2025}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !1997, file: !1957, line: 71, baseType: !1952, size: 192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1997, file: !1957, line: 74, baseType: !1980, size: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1997, file: !1957, line: 75, baseType: !2002, size: 64, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !1997, file: !1957, line: 78, baseType: !2004, size: 64, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkVisual", file: !72, line: 109, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkVisual", file: !63, line: 77, size: 640, elements: !2007)
!2007 = !{!2008, !2009, !2011, !2012, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !2006, file: !63, line: 79, baseType: !1952, size: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2006, file: !63, line: 81, baseType: !2010, size: 32, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkVisualType", file: !63, line: 63, baseType: !62)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2006, file: !63, line: 82, baseType: !1980, size: 32, offset: 224)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !2006, file: !63, line: 83, baseType: !2013, size: 32, offset: 256)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkByteOrder", file: !72, line: 122, baseType: !71)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "colormap_size", scope: !2006, file: !63, line: 84, baseType: !1980, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_rgb", scope: !2006, file: !63, line: 85, baseType: !1980, size: 32, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "red_mask", scope: !2006, file: !63, line: 87, baseType: !1937, size: 32, offset: 352)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "red_shift", scope: !2006, file: !63, line: 88, baseType: !1980, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "red_prec", scope: !2006, file: !63, line: 89, baseType: !1980, size: 32, offset: 416)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "green_mask", scope: !2006, file: !63, line: 91, baseType: !1937, size: 32, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "green_shift", scope: !2006, file: !63, line: 92, baseType: !1980, size: 32, offset: 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "green_prec", scope: !2006, file: !63, line: 93, baseType: !1980, size: 32, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "blue_mask", scope: !2006, file: !63, line: 95, baseType: !1937, size: 32, offset: 544)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "blue_shift", scope: !2006, file: !63, line: 96, baseType: !1980, size: 32, offset: 576)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "blue_prec", scope: !2006, file: !63, line: 97, baseType: !1980, size: 32, offset: 608)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_data", scope: !1997, file: !1957, line: 80, baseType: !2026, size: 64, offset: 384)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpointer", file: !1930, line: 103, baseType: !1129)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "bg_gc", scope: !1949, file: !1898, line: 96, baseType: !1983, size: 320, offset: 4672)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "light_gc", scope: !1949, file: !1898, line: 97, baseType: !1983, size: 320, offset: 4992)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "dark_gc", scope: !1949, file: !1898, line: 98, baseType: !1983, size: 320, offset: 5312)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "mid_gc", scope: !1949, file: !1898, line: 99, baseType: !1983, size: 320, offset: 5632)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "text_gc", scope: !1949, file: !1898, line: 100, baseType: !1983, size: 320, offset: 5952)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "base_gc", scope: !1949, file: !1898, line: 101, baseType: !1983, size: 320, offset: 6272)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "text_aa_gc", scope: !1949, file: !1898, line: 102, baseType: !1983, size: 320, offset: 6592)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "black_gc", scope: !1949, file: !1898, line: 103, baseType: !1984, size: 64, offset: 6912)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "white_gc", scope: !1949, file: !1898, line: 104, baseType: !1984, size: 64, offset: 6976)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "bg_pixmap", scope: !1949, file: !1898, line: 106, baseType: !2037, size: 320, offset: 7040)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2038, size: 320, elements: !1963)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkPixmap", file: !72, line: 113, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkDrawable", file: !2041, line: 53, size: 192, elements: !2042)
!2041 = !DIFile(filename: "/usr/include/gtk-2.0/gdk/gdkdrawable.h", directory: "/home/sahil/vim/src")
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !2040, file: !2041, line: 55, baseType: !1952, size: 192)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "attach_count", scope: !1949, file: !1898, line: 110, baseType: !1980, size: 32, offset: 7360)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1949, file: !1898, line: 112, baseType: !1980, size: 32, offset: 7392)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1949, file: !1898, line: 113, baseType: !1995, size: 64, offset: 7424)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "private_font", scope: !1949, file: !1898, line: 114, baseType: !2048, size: 64, offset: 7488)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkFont", file: !72, line: 105, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkFont", file: !77, line: 49, size: 96, elements: !2051)
!2051 = !{!2052, !2054, !2055}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2050, file: !77, line: 51, baseType: !2053, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkFontType", file: !77, line: 47, baseType: !76)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ascent", scope: !2050, file: !77, line: 52, baseType: !1980, size: 32, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "descent", scope: !2050, file: !77, line: 53, baseType: !1980, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "private_font_desc", scope: !1949, file: !1898, line: 115, baseType: !1975, size: 64, offset: 7552)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "rc_style", scope: !1949, file: !1898, line: 118, baseType: !2058, size: 64, offset: 7616)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRcStyle", file: !1898, line: 57, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkRcStyle", file: !82, line: 60, size: 3072, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2066, !2067, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2084, !2092, !2093}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "parent_instance", scope: !2060, file: !82, line: 62, baseType: !1952, size: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2060, file: !82, line: 66, baseType: !1944, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "bg_pixmap_name", scope: !2060, file: !82, line: 67, baseType: !2065, size: 320, offset: 256)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1944, size: 320, elements: !1963)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "font_desc", scope: !2060, file: !82, line: 68, baseType: !1975, size: 64, offset: 576)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "color_flags", scope: !2060, file: !82, line: 70, baseType: !2068, size: 160, offset: 640)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 160, elements: !1963)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRcFlags", file: !82, line: 58, baseType: !81)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !2060, file: !82, line: 71, baseType: !1954, size: 480, offset: 800)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !2060, file: !82, line: 72, baseType: !1954, size: 480, offset: 1280)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2060, file: !82, line: 73, baseType: !1954, size: 480, offset: 1760)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2060, file: !82, line: 74, baseType: !1954, size: 480, offset: 2240)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "xthickness", scope: !2060, file: !82, line: 76, baseType: !1980, size: 32, offset: 2720)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ythickness", scope: !2060, file: !82, line: 77, baseType: !1980, size: 32, offset: 2752)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "rc_properties", scope: !2060, file: !82, line: 80, baseType: !2077, size: 64, offset: 2816)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "GArray", file: !2079, line: 37, baseType: !2080)
!2079 = !DIFile(filename: "/usr/include/glib-2.0/glib/garray.h", directory: "/home/sahil/vim/src")
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GArray", file: !2079, line: 41, size: 128, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2080, file: !2079, line: 43, baseType: !1944, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2080, file: !2079, line: 44, baseType: !1929, size: 32, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "rc_style_lists", scope: !2060, file: !82, line: 83, baseType: !2085, size: 64, offset: 2880)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSList", file: !2087, line: 37, baseType: !2088)
!2087 = !DIFile(filename: "/usr/include/glib-2.0/glib/gslist.h", directory: "/home/sahil/vim/src")
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GSList", file: !2087, line: 39, size: 128, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2088, file: !2087, line: 41, baseType: !2026, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2088, file: !2087, line: 42, baseType: !2085, size: 64, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "icon_factories", scope: !2060, file: !82, line: 85, baseType: !2085, size: 64, offset: 2944)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "engine_specified", scope: !2060, file: !82, line: 87, baseType: !1929, size: 1, offset: 3008, flags: DIFlagBitField, extraData: i64 3008)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "styles", scope: !1949, file: !1898, line: 120, baseType: !2085, size: 64, offset: 7680)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "property_cache", scope: !1949, file: !1898, line: 121, baseType: !2077, size: 64, offset: 7744)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "icon_factories", scope: !1949, file: !1898, line: 122, baseType: !2085, size: 64, offset: 7808)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "requisition", scope: !1899, file: !1900, line: 579, baseType: !2098, size: 64, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkRequisition", file: !1900, line: 478, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GtkRequisition", file: !1900, line: 519, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2099, file: !1900, line: 521, baseType: !1980, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2099, file: !1900, line: 522, baseType: !1980, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "allocation", scope: !1899, file: !1900, line: 583, baseType: !2104, size: 128, offset: 512)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "GtkAllocation", file: !1900, line: 498, baseType: !2105)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkRectangle", file: !72, line: 69, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GdkRectangle", file: !72, line: 200, size: 128, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2106, file: !72, line: 202, baseType: !1980, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2106, file: !72, line: 203, baseType: !1980, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2106, file: !72, line: 204, baseType: !1980, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2106, file: !72, line: 205, baseType: !1980, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1899, file: !1900, line: 589, baseType: !2113, size: 64, offset: 640)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "GdkWindow", file: !72, line: 114, baseType: !2040)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1899, file: !1900, line: 593, baseType: !1896, size: 64, offset: 704)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "submenu_id", scope: !1869, file: !6, line: 3924, baseType: !1896, size: 64, offset: 1792)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "tearoff_handle", scope: !1869, file: !6, line: 3926, baseType: !1896, size: 64, offset: 1856)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1869, file: !6, line: 3928, baseType: !1896, size: 64, offset: 1920)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar_items", scope: !1506, file: !6, line: 3624, baseType: !2120, size: 64, offset: 7104)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "winbar_item_T", file: !6, line: 3337, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3333, size: 128, elements: !2123)
!2123 = !{!2124, !2125, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "wb_startcol", scope: !2122, file: !6, line: 3334, baseType: !1131, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "wb_endcol", scope: !2122, file: !6, line: 3335, baseType: !1131, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "wb_menu", scope: !2122, file: !6, line: 3336, baseType: !1867, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "w_winbar_height", scope: !1506, file: !6, line: 3625, baseType: !1131, size: 32, offset: 7168)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "w_onebuf_opt", scope: !1506, file: !6, line: 3635, baseType: !2129, size: 11008, offset: 7232)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "winopt_T", file: !6, line: 313, baseType: !2130)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 172, size: 11008, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "wo_arab", scope: !2130, file: !6, line: 175, baseType: !1131, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "wo_bri", scope: !2130, file: !6, line: 179, baseType: !1131, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "wo_briopt", scope: !2130, file: !6, line: 181, baseType: !1124, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wcr", scope: !2130, file: !6, line: 184, baseType: !1124, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "wo_diff", scope: !2130, file: !6, line: 187, baseType: !1131, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdc", scope: !2130, file: !6, line: 191, baseType: !1130, size: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdc_save", scope: !2130, file: !6, line: 193, baseType: !1131, size: 32, offset: 320)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fen", scope: !2130, file: !6, line: 195, baseType: !1131, size: 32, offset: 352)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fen_save", scope: !2130, file: !6, line: 197, baseType: !1131, size: 32, offset: 384)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdi", scope: !2130, file: !6, line: 199, baseType: !1124, size: 64, offset: 448)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdl", scope: !2130, file: !6, line: 201, baseType: !1130, size: 64, offset: 512)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdl_save", scope: !2130, file: !6, line: 203, baseType: !1131, size: 32, offset: 576)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdm", scope: !2130, file: !6, line: 205, baseType: !1124, size: 64, offset: 640)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdm_save", scope: !2130, file: !6, line: 207, baseType: !1124, size: 64, offset: 704)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fml", scope: !2130, file: !6, line: 209, baseType: !1130, size: 64, offset: 768)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdn", scope: !2130, file: !6, line: 211, baseType: !1130, size: 64, offset: 832)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fde", scope: !2130, file: !6, line: 214, baseType: !1124, size: 64, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fdt", scope: !2130, file: !6, line: 216, baseType: !1124, size: 64, offset: 960)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "wo_fmr", scope: !2130, file: !6, line: 219, baseType: !1124, size: 64, offset: 1024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "wo_lbr", scope: !2130, file: !6, line: 223, baseType: !1131, size: 32, offset: 1088)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "wo_list", scope: !2130, file: !6, line: 226, baseType: !1131, size: 32, offset: 1120)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "wo_lcs", scope: !2130, file: !6, line: 228, baseType: !1124, size: 64, offset: 1152)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "wo_nu", scope: !2130, file: !6, line: 230, baseType: !1131, size: 32, offset: 1216)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rnu", scope: !2130, file: !6, line: 232, baseType: !1131, size: 32, offset: 1248)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "wo_nuw", scope: !2130, file: !6, line: 235, baseType: !1130, size: 64, offset: 1280)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wfh", scope: !2130, file: !6, line: 238, baseType: !1131, size: 32, offset: 1344)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wfw", scope: !2130, file: !6, line: 240, baseType: !1131, size: 32, offset: 1376)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "wo_pvw", scope: !2130, file: !6, line: 243, baseType: !1131, size: 32, offset: 1408)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rl", scope: !2130, file: !6, line: 247, baseType: !1131, size: 32, offset: 1440)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "wo_rlc", scope: !2130, file: !6, line: 249, baseType: !1124, size: 64, offset: 1472)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scr", scope: !2130, file: !6, line: 252, baseType: !1130, size: 64, offset: 1536)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "wo_spell", scope: !2130, file: !6, line: 255, baseType: !1131, size: 32, offset: 1600)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cuc", scope: !2130, file: !6, line: 259, baseType: !1131, size: 32, offset: 1632)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cul", scope: !2130, file: !6, line: 261, baseType: !1131, size: 32, offset: 1664)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "wo_culopt", scope: !2130, file: !6, line: 263, baseType: !1124, size: 64, offset: 1728)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cc", scope: !2130, file: !6, line: 265, baseType: !1124, size: 64, offset: 1792)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "wo_sbr", scope: !2130, file: !6, line: 269, baseType: !1124, size: 64, offset: 1856)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "wo_stl", scope: !2130, file: !6, line: 273, baseType: !1124, size: 64, offset: 1920)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scb", scope: !2130, file: !6, line: 276, baseType: !1131, size: 32, offset: 1984)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "wo_diff_saved", scope: !2130, file: !6, line: 278, baseType: !1131, size: 32, offset: 2016)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scb_save", scope: !2130, file: !6, line: 280, baseType: !1131, size: 32, offset: 2048)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wrap", scope: !2130, file: !6, line: 282, baseType: !1131, size: 32, offset: 2080)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "wo_wrap_save", scope: !2130, file: !6, line: 285, baseType: !1131, size: 32, offset: 2112)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cocu", scope: !2130, file: !6, line: 289, baseType: !1124, size: 64, offset: 2176)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "wo_cole", scope: !2130, file: !6, line: 291, baseType: !1130, size: 64, offset: 2240)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "wo_crb", scope: !2130, file: !6, line: 294, baseType: !1131, size: 32, offset: 2304)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "wo_crb_save", scope: !2130, file: !6, line: 296, baseType: !1131, size: 32, offset: 2336)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "wo_scl", scope: !2130, file: !6, line: 299, baseType: !1124, size: 64, offset: 2368)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "wo_twk", scope: !2130, file: !6, line: 303, baseType: !1124, size: 64, offset: 2432)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "wo_tws", scope: !2130, file: !6, line: 305, baseType: !1124, size: 64, offset: 2496)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "wo_script_ctx", scope: !2130, file: !6, line: 310, baseType: !2183, size: 8448, offset: 2560)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1157, size: 8448, elements: !2184)
!2184 = !{!2185}
!2185 = !DISubrange(count: 44)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "w_allbuf_opt", scope: !1506, file: !6, line: 3636, baseType: !2129, size: 11008, offset: 18240)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_stl_flags", scope: !1506, file: !6, line: 3640, baseType: !1309, size: 64, offset: 29248)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_fde_flags", scope: !1506, file: !6, line: 3643, baseType: !1309, size: 64, offset: 29312)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_fdt_flags", scope: !1506, file: !6, line: 3644, baseType: !1309, size: 64, offset: 29376)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_cc_cols", scope: !1506, file: !6, line: 3647, baseType: !1142, size: 64, offset: 29440)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_culopt_flags", scope: !1506, file: !6, line: 3648, baseType: !1125, size: 8, offset: 29504)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_siso", scope: !1506, file: !6, line: 3650, baseType: !1130, size: 64, offset: 29568)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "w_p_so", scope: !1506, file: !6, line: 3651, baseType: !1130, size: 64, offset: 29632)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_min", scope: !1506, file: !6, line: 3654, baseType: !1131, size: 32, offset: 29696)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_shift", scope: !1506, file: !6, line: 3655, baseType: !1131, size: 32, offset: 29728)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "w_briopt_sbr", scope: !1506, file: !6, line: 3656, baseType: !1131, size: 32, offset: 29760)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "w_scbind_pos", scope: !1506, file: !6, line: 3662, baseType: !1130, size: 64, offset: 29824)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "w_winvar", scope: !1506, file: !6, line: 3665, baseType: !2199, size: 192, offset: 29888)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictitem_T", file: !6, line: 1519, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictitem_S", file: !6, line: 1513, size: 192, elements: !2201)
!2201 = !{!2202, !2203, !2204}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "di_tv", scope: !2200, file: !6, line: 1515, baseType: !1236, size: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "di_flags", scope: !2200, file: !6, line: 1516, baseType: !1125, size: 8, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "di_key", scope: !2200, file: !6, line: 1517, baseType: !2205, size: 8, offset: 136)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 8, elements: !2206)
!2206 = !{!2207}
!2207 = !DISubrange(count: 1)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "w_vars", scope: !1506, file: !6, line: 3666, baseType: !1296, size: 64, offset: 30080)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "w_pcmark", scope: !1506, file: !6, line: 3674, baseType: !1692, size: 128, offset: 30144)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev_pcmark", scope: !1506, file: !6, line: 3675, baseType: !1692, size: 128, offset: 30272)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplist", scope: !1506, file: !6, line: 3681, baseType: !2212, size: 32000, offset: 30400)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2213, size: 32000, elements: !2227)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "xfmark_T", file: !6, line: 153, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xfilemark", file: !6, line: 146, size: 320, elements: !2215)
!2215 = !{!2216, !2222, !2223}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "fmark", scope: !2214, file: !6, line: 148, baseType: !2217, size: 192)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmark_T", file: !6, line: 143, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "filemark", file: !6, line: 139, size: 192, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !2218, file: !6, line: 141, baseType: !1692, size: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "fnum", scope: !2218, file: !6, line: 142, baseType: !1131, size: 32, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !2214, file: !6, line: 149, baseType: !1124, size: 64, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "time_set", scope: !2214, file: !6, line: 151, baseType: !2224, size: 64, offset: 256)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_T", file: !872, line: 1809, baseType: !2225)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !2226, line: 7, baseType: !1595)
!2226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "/home/sahil/vim/src")
!2227 = !{!2228}
!2228 = !DISubrange(count: 100)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplistlen", scope: !1506, file: !6, line: 3682, baseType: !1131, size: 32, offset: 62400)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "w_jumplistidx", scope: !1506, file: !6, line: 3683, baseType: !1131, size: 32, offset: 62432)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "w_changelistidx", scope: !1506, file: !6, line: 3685, baseType: !1131, size: 32, offset: 62464)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "w_match_head", scope: !1506, file: !6, line: 3689, baseType: !2233, size: 64, offset: 62528)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "matchitem_T", file: !6, line: 3306, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "matchitem", file: !6, line: 3307, size: 7360, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2257, !2271, !2272}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2235, file: !6, line: 3309, baseType: !2233, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2235, file: !6, line: 3310, baseType: !1131, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2235, file: !6, line: 3311, baseType: !1131, size: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !2235, file: !6, line: 3312, baseType: !1124, size: 64, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2235, file: !6, line: 3313, baseType: !1575, size: 2688, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2235, file: !6, line: 3314, baseType: !2243, size: 1216, offset: 2880)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "posmatch_T", file: !6, line: 3293, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posmatch", file: !6, line: 3294, size: 1216, elements: !2245)
!2245 = !{!2246, !2254, !2255, !2256}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2244, file: !6, line: 3296, baseType: !2247, size: 1024)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2248, size: 1024, elements: !1423)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "llpos_T", file: !6, line: 3287, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3282, size: 128, elements: !2250)
!2250 = !{!2251, !2252, !2253}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !2249, file: !6, line: 3284, baseType: !1135, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2249, file: !6, line: 3285, baseType: !1441, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2249, file: !6, line: 3286, baseType: !1131, size: 32, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2244, file: !6, line: 3297, baseType: !1131, size: 32, offset: 1024)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "toplnum", scope: !2244, file: !6, line: 3298, baseType: !1135, size: 64, offset: 1088)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "botlnum", scope: !2244, file: !6, line: 3299, baseType: !1135, size: 64, offset: 1152)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "hl", scope: !2235, file: !6, line: 3315, baseType: !2258, size: 3200, offset: 4096)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "match_T", file: !6, line: 3274, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 3258, size: 3200, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2259, file: !6, line: 3260, baseType: !1575, size: 2688)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2259, file: !6, line: 3262, baseType: !1358, size: 64, offset: 2688)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "lnum", scope: !2259, file: !6, line: 3263, baseType: !1135, size: 64, offset: 2752)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2259, file: !6, line: 3264, baseType: !1131, size: 32, offset: 2816)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "attr_cur", scope: !2259, file: !6, line: 3265, baseType: !1131, size: 32, offset: 2848)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "first_lnum", scope: !2259, file: !6, line: 3266, baseType: !1135, size: 64, offset: 2880)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "startcol", scope: !2259, file: !6, line: 3267, baseType: !1441, size: 32, offset: 2944)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "endcol", scope: !2259, file: !6, line: 3268, baseType: !1441, size: 32, offset: 2976)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "is_addpos", scope: !2259, file: !6, line: 3269, baseType: !1131, size: 32, offset: 3008)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "tm", scope: !2259, file: !6, line: 3272, baseType: !1590, size: 128, offset: 3072)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "hlg_id", scope: !2235, file: !6, line: 3316, baseType: !1131, size: 32, offset: 7296)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "conceal_char", scope: !2235, file: !6, line: 3318, baseType: !1131, size: 32, offset: 7328)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "w_next_match_id", scope: !1506, file: !6, line: 3690, baseType: !1131, size: 32, offset: 62592)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstack", scope: !1506, file: !6, line: 3699, baseType: !2275, size: 7680, offset: 62656)
!2275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2276, size: 7680, elements: !2284)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "taggy_T", file: !6, line: 165, baseType: !2277)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "taggy", file: !6, line: 158, size: 384, elements: !2278)
!2278 = !{!2279, !2280, !2281, !2282, !2283}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "tagname", scope: !2277, file: !6, line: 160, baseType: !1124, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "fmark", scope: !2277, file: !6, line: 161, baseType: !2217, size: 192, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cur_match", scope: !2277, file: !6, line: 162, baseType: !1131, size: 32, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "cur_fnum", scope: !2277, file: !6, line: 163, baseType: !1131, size: 32, offset: 288)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2277, file: !6, line: 164, baseType: !1124, size: 64, offset: 320)
!2284 = !{!2285}
!2285 = !DISubrange(count: 20)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstackidx", scope: !1506, file: !6, line: 3700, baseType: !1131, size: 32, offset: 70336)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "w_tagstacklen", scope: !1506, file: !6, line: 3701, baseType: !1131, size: 32, offset: 70368)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "w_fraction", scope: !1506, file: !6, line: 3709, baseType: !1131, size: 32, offset: 70400)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "w_prev_fraction_row", scope: !1506, file: !6, line: 3710, baseType: !1131, size: 32, offset: 70432)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "w_scrollbars", scope: !1506, file: !6, line: 3713, baseType: !2291, size: 1280, offset: 70464)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2292, size: 1280, elements: !2308)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "scrollbar_T", file: !2293, line: 196, baseType: !2294)
!2293 = !DIFile(filename: "./gui.h", directory: "/home/sahil/vim/src")
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GuiScrollbar", file: !2293, line: 157, size: 640, elements: !2295)
!2295 = !{!2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !2294, file: !2293, line: 159, baseType: !1130, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2294, file: !2293, line: 160, baseType: !1504, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2294, file: !2293, line: 161, baseType: !1131, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2294, file: !2293, line: 162, baseType: !1130, size: 64, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2293, line: 166, baseType: !1130, size: 64, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2294, file: !2293, line: 167, baseType: !1130, size: 64, offset: 320)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2294, file: !2293, line: 170, baseType: !1131, size: 32, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2294, file: !2293, line: 171, baseType: !1131, size: 32, offset: 416)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2294, file: !2293, line: 172, baseType: !1131, size: 32, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "status_height", scope: !2294, file: !2293, line: 173, baseType: !1131, size: 32, offset: 480)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2294, file: !2293, line: 178, baseType: !1896, size: 64, offset: 512)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "handler_id", scope: !2294, file: !2293, line: 179, baseType: !1138, size: 64, offset: 576)
!2308 = !{!2309}
!2309 = !DISubrange(count: 2)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth_line_count", scope: !1506, file: !6, line: 3716, baseType: !1135, size: 64, offset: 71744)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "w_nuw_cached", scope: !1506, file: !6, line: 3718, baseType: !1130, size: 64, offset: 71808)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "w_nrwidth_width", scope: !1506, file: !6, line: 3719, baseType: !1131, size: 32, offset: 71872)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "w_llist", scope: !1506, file: !6, line: 3723, baseType: !2314, size: 64, offset: 71936)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "qf_info_T", file: !6, line: 2464, baseType: !2316)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "qf_info_S", file: !6, line: 2464, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "w_llist_ref", scope: !1506, file: !6, line: 3728, baseType: !2314, size: 64, offset: 72000)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "wi_fpos", scope: !1499, file: !6, line: 330, baseType: !1692, size: 128, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "wi_optset", scope: !1499, file: !6, line: 331, baseType: !1131, size: 32, offset: 320)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "wi_opt", scope: !1499, file: !6, line: 332, baseType: !2129, size: 11008, offset: 384)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "wi_fold_manual", scope: !1499, file: !6, line: 334, baseType: !1131, size: 32, offset: 11392)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "wi_folds", scope: !1499, file: !6, line: 335, baseType: !1178, size: 192, offset: 11456)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "b_mtime", scope: !1360, file: !6, line: 2701, baseType: !1130, size: 64, offset: 2432)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "b_mtime_read", scope: !1360, file: !6, line: 2702, baseType: !1130, size: 64, offset: 2496)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "b_orig_size", scope: !1360, file: !6, line: 2703, baseType: !2326, size: 64, offset: 2560)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_T", file: !872, line: 384, baseType: !2327)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2328, line: 63, baseType: !2329)
!2328 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/sahil/vim/src")
!2329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1342, line: 152, baseType: !1130)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "b_orig_mode", scope: !1360, file: !6, line: 2704, baseType: !1131, size: 32, offset: 2624)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_used", scope: !1360, file: !6, line: 2706, baseType: !2224, size: 64, offset: 2688)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "b_namedm", scope: !1360, file: !6, line: 2710, baseType: !2333, size: 3328, offset: 2752)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 3328, elements: !2334)
!2334 = !{!2335}
!2335 = !DISubrange(count: 26)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "b_visual", scope: !1360, file: !6, line: 2713, baseType: !2337, size: 320, offset: 6080)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "visualinfo_T", file: !6, line: 361, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 355, size: 320, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "vi_start", scope: !2338, file: !6, line: 357, baseType: !1692, size: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "vi_end", scope: !2338, file: !6, line: 358, baseType: !1692, size: 128, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "vi_mode", scope: !2338, file: !6, line: 359, baseType: !1131, size: 32, offset: 256)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "vi_curswant", scope: !2338, file: !6, line: 360, baseType: !1441, size: 32, offset: 288)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "b_visual_mode_eval", scope: !1360, file: !6, line: 2715, baseType: !1131, size: 32, offset: 6400)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_cursor", scope: !1360, file: !6, line: 2718, baseType: !1692, size: 128, offset: 6464)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_insert", scope: !1360, file: !6, line: 2720, baseType: !1692, size: 128, offset: 6592)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_change", scope: !1360, file: !6, line: 2721, baseType: !1692, size: 128, offset: 6720)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "b_changelist", scope: !1360, file: !6, line: 2727, baseType: !2349, size: 12800, offset: 6848)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 12800, elements: !2227)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "b_changelistlen", scope: !1360, file: !6, line: 2728, baseType: !1131, size: 32, offset: 19648)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "b_new_change", scope: !1360, file: !6, line: 2729, baseType: !1131, size: 32, offset: 19680)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "b_chartab", scope: !1360, file: !6, line: 2736, baseType: !1671, size: 256, offset: 19712)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "b_maphash", scope: !1360, file: !6, line: 2739, baseType: !2354, size: 16384, offset: 19968)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 16384, elements: !1661)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "mapblock_T", file: !6, line: 1218, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mapblock", file: !6, line: 1219, size: 704, elements: !2358)
!2358 = !{!2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "m_next", scope: !2357, file: !6, line: 1221, baseType: !2355, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "m_keys", scope: !2357, file: !6, line: 1222, baseType: !1124, size: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "m_str", scope: !2357, file: !6, line: 1223, baseType: !1124, size: 64, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "m_orig_str", scope: !2357, file: !6, line: 1224, baseType: !1124, size: 64, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "m_keylen", scope: !2357, file: !6, line: 1225, baseType: !1131, size: 32, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "m_mode", scope: !2357, file: !6, line: 1226, baseType: !1131, size: 32, offset: 288)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "m_simplified", scope: !2357, file: !6, line: 1227, baseType: !1131, size: 32, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "m_noremap", scope: !2357, file: !6, line: 1229, baseType: !1131, size: 32, offset: 352)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "m_silent", scope: !2357, file: !6, line: 1230, baseType: !1128, size: 8, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "m_nowait", scope: !2357, file: !6, line: 1231, baseType: !1128, size: 8, offset: 392)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "m_script_ctx", scope: !2357, file: !6, line: 1233, baseType: !1157, size: 192, offset: 448)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "m_expr", scope: !2357, file: !6, line: 1234, baseType: !1128, size: 8, offset: 640)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "b_first_abbr", scope: !1360, file: !6, line: 2742, baseType: !2355, size: 64, offset: 36352)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "b_ucmds", scope: !1360, file: !6, line: 2745, baseType: !1178, size: 192, offset: 36416)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_start", scope: !1360, file: !6, line: 2747, baseType: !1692, size: 128, offset: 36608)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_start_orig", scope: !1360, file: !6, line: 2748, baseType: !1692, size: 128, offset: 36736)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "b_op_end", scope: !1360, file: !6, line: 2749, baseType: !1692, size: 128, offset: 36864)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "b_marks_read", scope: !1360, file: !6, line: 2752, baseType: !1131, size: 32, offset: 36992)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_oldhead", scope: !1360, file: !6, line: 2758, baseType: !2378, size: 64, offset: 37056)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_header_T", file: !6, line: 376, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u_header", file: !6, line: 390, size: 4544, elements: !2381)
!2381 = !{!2382, !2387, !2392, !2397, !2402, !2403, !2404, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "uh_next", scope: !2380, file: !6, line: 397, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !6, line: 394, size: 64, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2383, file: !6, line: 395, baseType: !2378, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2383, file: !6, line: 396, baseType: !1130, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "uh_prev", scope: !2380, file: !6, line: 401, baseType: !2388, size: 64, offset: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !6, line: 398, size: 64, elements: !2389)
!2389 = !{!2390, !2391}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2388, file: !6, line: 399, baseType: !2378, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2388, file: !6, line: 400, baseType: !1130, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "uh_alt_next", scope: !2380, file: !6, line: 405, baseType: !2393, size: 64, offset: 128)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !6, line: 402, size: 64, elements: !2394)
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2393, file: !6, line: 403, baseType: !2378, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2393, file: !6, line: 404, baseType: !1130, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "uh_alt_prev", scope: !2380, file: !6, line: 409, baseType: !2398, size: 64, offset: 192)
!2398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !6, line: 406, size: 64, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2398, file: !6, line: 407, baseType: !2378, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2398, file: !6, line: 408, baseType: !1130, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "uh_seq", scope: !2380, file: !6, line: 410, baseType: !1130, size: 64, offset: 256)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "uh_walk", scope: !2380, file: !6, line: 411, baseType: !1131, size: 32, offset: 320)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "uh_entry", scope: !2380, file: !6, line: 412, baseType: !2405, size: 64, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_entry_T", file: !6, line: 375, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u_entry", file: !6, line: 377, size: 384, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2420}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ue_next", scope: !2407, file: !6, line: 379, baseType: !2405, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ue_top", scope: !2407, file: !6, line: 380, baseType: !1135, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ue_bot", scope: !2407, file: !6, line: 381, baseType: !1135, size: 64, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ue_lcount", scope: !2407, file: !6, line: 382, baseType: !1135, size: 64, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ue_array", scope: !2407, file: !6, line: 383, baseType: !2414, size: 64, offset: 256)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "undoline_T", file: !6, line: 373, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 369, size: 128, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ul_line", scope: !2416, file: !6, line: 370, baseType: !1124, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ul_len", scope: !2416, file: !6, line: 371, baseType: !1130, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ue_size", scope: !2407, file: !6, line: 384, baseType: !1130, size: 64, offset: 320)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "uh_getbot_entry", scope: !2380, file: !6, line: 413, baseType: !2405, size: 64, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "uh_cursor", scope: !2380, file: !6, line: 414, baseType: !1692, size: 128, offset: 512)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "uh_cursor_vcol", scope: !2380, file: !6, line: 415, baseType: !1130, size: 64, offset: 640)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "uh_flags", scope: !2380, file: !6, line: 416, baseType: !1131, size: 32, offset: 704)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "uh_namedm", scope: !2380, file: !6, line: 417, baseType: !2333, size: 3328, offset: 768)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "uh_visual", scope: !2380, file: !6, line: 418, baseType: !2337, size: 320, offset: 4096)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "uh_time", scope: !2380, file: !6, line: 419, baseType: !2224, size: 64, offset: 4416)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "uh_save_nr", scope: !2380, file: !6, line: 420, baseType: !1130, size: 64, offset: 4480)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_newhead", scope: !1360, file: !6, line: 2759, baseType: !2378, size: 64, offset: 37120)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_curhead", scope: !1360, file: !6, line: 2761, baseType: !2378, size: 64, offset: 37184)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_numhead", scope: !1360, file: !6, line: 2762, baseType: !1131, size: 32, offset: 37248)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_synced", scope: !1360, file: !6, line: 2763, baseType: !1131, size: 32, offset: 37280)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_seq_last", scope: !1360, file: !6, line: 2764, baseType: !1130, size: 64, offset: 37312)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_save_nr_last", scope: !1360, file: !6, line: 2765, baseType: !1130, size: 64, offset: 37376)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_seq_cur", scope: !1360, file: !6, line: 2766, baseType: !1130, size: 64, offset: 37440)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_time_cur", scope: !1360, file: !6, line: 2767, baseType: !2224, size: 64, offset: 37504)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_save_nr_cur", scope: !1360, file: !6, line: 2768, baseType: !1130, size: 64, offset: 37568)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_ptr", scope: !1360, file: !6, line: 2773, baseType: !2415, size: 128, offset: 37632)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_lnum", scope: !1360, file: !6, line: 2774, baseType: !1135, size: 64, offset: 37760)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "b_u_line_colnr", scope: !1360, file: !6, line: 2775, baseType: !1441, size: 32, offset: 37824)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "b_scanned", scope: !1360, file: !6, line: 2777, baseType: !1131, size: 32, offset: 37856)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_iminsert", scope: !1360, file: !6, line: 2780, baseType: !1130, size: 64, offset: 37888)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_imsearch", scope: !1360, file: !6, line: 2781, baseType: !1130, size: 64, offset: 37952)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "b_kmap_state", scope: !1360, file: !6, line: 2789, baseType: !1531, size: 16, offset: 38016)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "b_kmap_ga", scope: !1360, file: !6, line: 2792, baseType: !1178, size: 192, offset: 38080)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_initialized", scope: !1360, file: !6, line: 2800, baseType: !1131, size: 32, offset: 38272)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_script_ctx", scope: !1360, file: !6, line: 2803, baseType: !2448, size: 16128, offset: 38336)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1157, size: 16128, elements: !2449)
!2449 = !{!2450}
!2450 = !DISubrange(count: 84)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ai", scope: !1360, file: !6, line: 2806, baseType: !1131, size: 32, offset: 54464)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ai_nopaste", scope: !1360, file: !6, line: 2807, baseType: !1131, size: 32, offset: 54496)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bkc", scope: !1360, file: !6, line: 2808, baseType: !1124, size: 64, offset: 54528)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "b_bkc_flags", scope: !1360, file: !6, line: 2809, baseType: !1140, size: 32, offset: 54592)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ci", scope: !1360, file: !6, line: 2810, baseType: !1131, size: 32, offset: 54624)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bin", scope: !1360, file: !6, line: 2811, baseType: !1131, size: 32, offset: 54656)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bomb", scope: !1360, file: !6, line: 2812, baseType: !1131, size: 32, offset: 54688)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bh", scope: !1360, file: !6, line: 2813, baseType: !1124, size: 64, offset: 54720)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bt", scope: !1360, file: !6, line: 2814, baseType: !1124, size: 64, offset: 54784)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_qf_entry", scope: !1360, file: !6, line: 2818, baseType: !1131, size: 32, offset: 54848)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bl", scope: !1360, file: !6, line: 2820, baseType: !1131, size: 32, offset: 54880)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cin", scope: !1360, file: !6, line: 2822, baseType: !1131, size: 32, offset: 54912)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cino", scope: !1360, file: !6, line: 2823, baseType: !1124, size: 64, offset: 54976)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cink", scope: !1360, file: !6, line: 2824, baseType: !1124, size: 64, offset: 55040)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cinw", scope: !1360, file: !6, line: 2827, baseType: !1124, size: 64, offset: 55104)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_com", scope: !1360, file: !6, line: 2829, baseType: !1124, size: 64, offset: 55168)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cms", scope: !1360, file: !6, line: 2831, baseType: !1124, size: 64, offset: 55232)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cpt", scope: !1360, file: !6, line: 2833, baseType: !1124, size: 64, offset: 55296)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cfu", scope: !1360, file: !6, line: 2838, baseType: !1124, size: 64, offset: 55360)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ofu", scope: !1360, file: !6, line: 2839, baseType: !1124, size: 64, offset: 55424)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tfu", scope: !1360, file: !6, line: 2842, baseType: !1124, size: 64, offset: 55488)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_eol", scope: !1360, file: !6, line: 2844, baseType: !1131, size: 32, offset: 55552)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fixeol", scope: !1360, file: !6, line: 2845, baseType: !1131, size: 32, offset: 55584)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et", scope: !1360, file: !6, line: 2846, baseType: !1131, size: 32, offset: 55616)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et_nobin", scope: !1360, file: !6, line: 2847, baseType: !1131, size: 32, offset: 55648)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_et_nopaste", scope: !1360, file: !6, line: 2848, baseType: !1131, size: 32, offset: 55680)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fenc", scope: !1360, file: !6, line: 2849, baseType: !1124, size: 64, offset: 55744)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ff", scope: !1360, file: !6, line: 2850, baseType: !1124, size: 64, offset: 55808)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ft", scope: !1360, file: !6, line: 2851, baseType: !1124, size: 64, offset: 55872)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fo", scope: !1360, file: !6, line: 2852, baseType: !1124, size: 64, offset: 55936)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_flp", scope: !1360, file: !6, line: 2853, baseType: !1124, size: 64, offset: 56000)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inf", scope: !1360, file: !6, line: 2854, baseType: !1131, size: 32, offset: 56064)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_isk", scope: !1360, file: !6, line: 2855, baseType: !1124, size: 64, offset: 56128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_def", scope: !1360, file: !6, line: 2857, baseType: !1124, size: 64, offset: 56192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inc", scope: !1360, file: !6, line: 2858, baseType: !1124, size: 64, offset: 56256)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inex", scope: !1360, file: !6, line: 2860, baseType: !1124, size: 64, offset: 56320)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inex_flags", scope: !1360, file: !6, line: 2861, baseType: !1309, size: 64, offset: 56384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inde", scope: !1360, file: !6, line: 2865, baseType: !1124, size: 64, offset: 56448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_inde_flags", scope: !1360, file: !6, line: 2866, baseType: !1309, size: 64, offset: 56512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_indk", scope: !1360, file: !6, line: 2867, baseType: !1124, size: 64, offset: 56576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fp", scope: !1360, file: !6, line: 2869, baseType: !1124, size: 64, offset: 56640)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fex", scope: !1360, file: !6, line: 2871, baseType: !1124, size: 64, offset: 56704)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_fex_flags", scope: !1360, file: !6, line: 2872, baseType: !1309, size: 64, offset: 56768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_key", scope: !1360, file: !6, line: 2875, baseType: !1124, size: 64, offset: 56832)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_kp", scope: !1360, file: !6, line: 2877, baseType: !1124, size: 64, offset: 56896)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_lisp", scope: !1360, file: !6, line: 2879, baseType: !1131, size: 32, offset: 56960)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_menc", scope: !1360, file: !6, line: 2881, baseType: !1124, size: 64, offset: 57024)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_mps", scope: !1360, file: !6, line: 2882, baseType: !1124, size: 64, offset: 57088)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ml", scope: !1360, file: !6, line: 2883, baseType: !1131, size: 32, offset: 57152)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ml_nobin", scope: !1360, file: !6, line: 2884, baseType: !1131, size: 32, offset: 57184)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ma", scope: !1360, file: !6, line: 2885, baseType: !1131, size: 32, offset: 57216)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_nf", scope: !1360, file: !6, line: 2886, baseType: !1124, size: 64, offset: 57280)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_pi", scope: !1360, file: !6, line: 2887, baseType: !1131, size: 32, offset: 57344)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_qe", scope: !1360, file: !6, line: 2889, baseType: !1124, size: 64, offset: 57408)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ro", scope: !1360, file: !6, line: 2891, baseType: !1131, size: 32, offset: 57472)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sw", scope: !1360, file: !6, line: 2892, baseType: !1130, size: 64, offset: 57536)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sn", scope: !1360, file: !6, line: 2893, baseType: !1131, size: 32, offset: 57600)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_si", scope: !1360, file: !6, line: 2895, baseType: !1131, size: 32, offset: 57632)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sts", scope: !1360, file: !6, line: 2897, baseType: !1130, size: 64, offset: 57664)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sts_nopaste", scope: !1360, file: !6, line: 2898, baseType: !1130, size: 64, offset: 57728)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_sua", scope: !1360, file: !6, line: 2900, baseType: !1124, size: 64, offset: 57792)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_swf", scope: !1360, file: !6, line: 2902, baseType: !1131, size: 32, offset: 57856)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_smc", scope: !1360, file: !6, line: 2904, baseType: !1130, size: 64, offset: 57920)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_syn", scope: !1360, file: !6, line: 2905, baseType: !1124, size: 64, offset: 57984)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ts", scope: !1360, file: !6, line: 2907, baseType: !1130, size: 64, offset: 58048)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tx", scope: !1360, file: !6, line: 2908, baseType: !1131, size: 32, offset: 58112)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw", scope: !1360, file: !6, line: 2909, baseType: !1130, size: 64, offset: 58176)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw_nobin", scope: !1360, file: !6, line: 2910, baseType: !1130, size: 64, offset: 58240)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tw_nopaste", scope: !1360, file: !6, line: 2911, baseType: !1130, size: 64, offset: 58304)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm", scope: !1360, file: !6, line: 2912, baseType: !1130, size: 64, offset: 58368)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm_nobin", scope: !1360, file: !6, line: 2913, baseType: !1130, size: 64, offset: 58432)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_wm_nopaste", scope: !1360, file: !6, line: 2914, baseType: !1130, size: 64, offset: 58496)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts", scope: !1360, file: !6, line: 2916, baseType: !1124, size: 64, offset: 58560)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts_array", scope: !1360, file: !6, line: 2917, baseType: !1142, size: 64, offset: 58624)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vsts_nopaste", scope: !1360, file: !6, line: 2918, baseType: !1124, size: 64, offset: 58688)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vts", scope: !1360, file: !6, line: 2919, baseType: !1124, size: 64, offset: 58752)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_vts_array", scope: !1360, file: !6, line: 2920, baseType: !1142, size: 64, offset: 58816)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_keymap", scope: !1360, file: !6, line: 2923, baseType: !1124, size: 64, offset: 58880)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_gp", scope: !1360, file: !6, line: 2930, baseType: !1124, size: 64, offset: 58944)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_mp", scope: !1360, file: !6, line: 2931, baseType: !1124, size: 64, offset: 59008)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_efm", scope: !1360, file: !6, line: 2932, baseType: !1124, size: 64, offset: 59072)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ep", scope: !1360, file: !6, line: 2934, baseType: !1124, size: 64, offset: 59136)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_path", scope: !1360, file: !6, line: 2935, baseType: !1124, size: 64, offset: 59200)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ar", scope: !1360, file: !6, line: 2936, baseType: !1131, size: 32, offset: 59264)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tags", scope: !1360, file: !6, line: 2937, baseType: !1124, size: 64, offset: 59328)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tc", scope: !1360, file: !6, line: 2938, baseType: !1124, size: 64, offset: 59392)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "b_tc_flags", scope: !1360, file: !6, line: 2939, baseType: !1140, size: 32, offset: 59456)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_dict", scope: !1360, file: !6, line: 2940, baseType: !1124, size: 64, offset: 59520)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_tsr", scope: !1360, file: !6, line: 2941, baseType: !1124, size: 64, offset: 59584)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_ul", scope: !1360, file: !6, line: 2942, baseType: !1130, size: 64, offset: 59648)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_udf", scope: !1360, file: !6, line: 2944, baseType: !1131, size: 32, offset: 59712)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_lw", scope: !1360, file: !6, line: 2947, baseType: !1124, size: 64, offset: 59776)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_twsl", scope: !1360, file: !6, line: 2950, baseType: !1130, size: 64, offset: 59840)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_level", scope: !1360, file: !6, line: 2959, baseType: !1131, size: 32, offset: 59904)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_imag", scope: !1360, file: !6, line: 2960, baseType: !1131, size: 32, offset: 59936)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_no_brace", scope: !1360, file: !6, line: 2961, baseType: !1131, size: 32, offset: 59968)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_first_open", scope: !1360, file: !6, line: 2962, baseType: !1131, size: 32, offset: 60000)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_extra", scope: !1360, file: !6, line: 2963, baseType: !1131, size: 32, offset: 60032)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_close_extra", scope: !1360, file: !6, line: 2964, baseType: !1131, size: 32, offset: 60064)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_open_left_imag", scope: !1360, file: !6, line: 2965, baseType: !1131, size: 32, offset: 60096)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_jump_label", scope: !1360, file: !6, line: 2966, baseType: !1131, size: 32, offset: 60128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case", scope: !1360, file: !6, line: 2967, baseType: !1131, size: 32, offset: 60160)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case_code", scope: !1360, file: !6, line: 2968, baseType: !1131, size: 32, offset: 60192)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_case_break", scope: !1360, file: !6, line: 2969, baseType: !1131, size: 32, offset: 60224)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_param", scope: !1360, file: !6, line: 2970, baseType: !1131, size: 32, offset: 60256)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_func_type", scope: !1360, file: !6, line: 2971, baseType: !1131, size: 32, offset: 60288)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_comment", scope: !1360, file: !6, line: 2972, baseType: !1131, size: 32, offset: 60320)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_in_comment", scope: !1360, file: !6, line: 2973, baseType: !1131, size: 32, offset: 60352)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_in_comment2", scope: !1360, file: !6, line: 2974, baseType: !1131, size: 32, offset: 60384)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_baseclass", scope: !1360, file: !6, line: 2975, baseType: !1131, size: 32, offset: 60416)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_continuation", scope: !1360, file: !6, line: 2976, baseType: !1131, size: 32, offset: 60448)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed", scope: !1360, file: !6, line: 2977, baseType: !1131, size: 32, offset: 60480)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed2", scope: !1360, file: !6, line: 2978, baseType: !1131, size: 32, offset: 60512)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_noignore", scope: !1360, file: !6, line: 2979, baseType: !1131, size: 32, offset: 60544)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_wrapped", scope: !1360, file: !6, line: 2980, baseType: !1131, size: 32, offset: 60576)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_unclosed_whiteok", scope: !1360, file: !6, line: 2981, baseType: !1131, size: 32, offset: 60608)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_matching_paren", scope: !1360, file: !6, line: 2982, baseType: !1131, size: 32, offset: 60640)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_paren_prev", scope: !1360, file: !6, line: 2983, baseType: !1131, size: 32, offset: 60672)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_maxparen", scope: !1360, file: !6, line: 2984, baseType: !1131, size: 32, offset: 60704)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_maxcomment", scope: !1360, file: !6, line: 2985, baseType: !1131, size: 32, offset: 60736)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_scopedecl", scope: !1360, file: !6, line: 2986, baseType: !1131, size: 32, offset: 60768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_scopedecl_code", scope: !1360, file: !6, line: 2987, baseType: !1131, size: 32, offset: 60800)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_java", scope: !1360, file: !6, line: 2988, baseType: !1131, size: 32, offset: 60832)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_js", scope: !1360, file: !6, line: 2989, baseType: !1131, size: 32, offset: 60864)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_keep_case_label", scope: !1360, file: !6, line: 2990, baseType: !1131, size: 32, offset: 60896)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_hash_comment", scope: !1360, file: !6, line: 2991, baseType: !1131, size: 32, offset: 60928)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_namespace", scope: !1360, file: !6, line: 2992, baseType: !1131, size: 32, offset: 60960)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_if_for_while", scope: !1360, file: !6, line: 2993, baseType: !1131, size: 32, offset: 60992)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_cpp_extern_c", scope: !1360, file: !6, line: 2994, baseType: !1131, size: 32, offset: 61024)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "b_ind_pragma", scope: !1360, file: !6, line: 2995, baseType: !1131, size: 32, offset: 61056)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "b_no_eol_lnum", scope: !1360, file: !6, line: 2998, baseType: !1135, size: 64, offset: 61120)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_eol", scope: !1360, file: !6, line: 3001, baseType: !1131, size: 32, offset: 61184)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_ffc", scope: !1360, file: !6, line: 3002, baseType: !1131, size: 32, offset: 61216)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_fenc", scope: !1360, file: !6, line: 3003, baseType: !1124, size: 64, offset: 61248)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "b_bad_char", scope: !1360, file: !6, line: 3004, baseType: !1131, size: 32, offset: 61312)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "b_start_bomb", scope: !1360, file: !6, line: 3005, baseType: !1131, size: 32, offset: 61344)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "b_bufvar", scope: !1360, file: !6, line: 3008, baseType: !2199, size: 192, offset: 61376)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "b_vars", scope: !1360, file: !6, line: 3009, baseType: !1296, size: 64, offset: 61568)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "b_listener", scope: !1360, file: !6, line: 3011, baseType: !2590, size: 64, offset: 61632)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "listener_T", file: !6, line: 2411, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listener_S", file: !6, line: 2412, size: 320, elements: !2593)
!2593 = !{!2594, !2595, !2596}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "lr_next", scope: !2592, file: !6, line: 2414, baseType: !2590, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "lr_id", scope: !2592, file: !6, line: 2415, baseType: !1131, size: 32, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "lr_callback", scope: !2592, file: !6, line: 2416, baseType: !1351, size: 192, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "b_recorded_changes", scope: !1360, file: !6, line: 3012, baseType: !1252, size: 64, offset: 61696)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_textprop", scope: !1360, file: !6, line: 3015, baseType: !1131, size: 32, offset: 61760)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "b_proptypes", scope: !1360, file: !6, line: 3016, baseType: !2600, size: 64, offset: 61824)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bexpr", scope: !1360, file: !6, line: 3020, baseType: !1124, size: 64, offset: 61888)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_bexpr_flags", scope: !1360, file: !6, line: 3021, baseType: !1309, size: 64, offset: 61952)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "b_p_cm", scope: !1360, file: !6, line: 3024, baseType: !1124, size: 64, offset: 62016)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "b_may_swap", scope: !1360, file: !6, line: 3030, baseType: !1131, size: 32, offset: 62080)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "b_did_warn", scope: !1360, file: !6, line: 3031, baseType: !1131, size: 32, offset: 62112)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "b_help", scope: !1360, file: !6, line: 3038, baseType: !1131, size: 32, offset: 62144)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "b_spell", scope: !1360, file: !6, line: 3041, baseType: !1131, size: 32, offset: 62176)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "b_shortname", scope: !1360, file: !6, line: 3046, baseType: !1131, size: 32, offset: 62208)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_text", scope: !1360, file: !6, line: 3049, baseType: !1124, size: 64, offset: 62272)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_callback", scope: !1360, file: !6, line: 3050, baseType: !1351, size: 192, offset: 62336)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_interrupt", scope: !1360, file: !6, line: 3051, baseType: !1351, size: 192, offset: 62528)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "b_prompt_insert", scope: !1360, file: !6, line: 3052, baseType: !1131, size: 32, offset: 62720)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "b_s", scope: !1360, file: !6, line: 3080, baseType: !1514, size: 9920, offset: 62784)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "b_signlist", scope: !1360, file: !6, line: 3086, baseType: !2615, size: 64, offset: 72704)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sign_entry_T", file: !6, line: 820, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sign_entry", file: !6, line: 821, size: 384, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2631, !2632}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "se_id", scope: !2617, file: !6, line: 823, baseType: !1131, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "se_typenr", scope: !2617, file: !6, line: 824, baseType: !1131, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "se_priority", scope: !2617, file: !6, line: 825, baseType: !1131, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "se_lnum", scope: !2617, file: !6, line: 826, baseType: !1135, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "se_group", scope: !2617, file: !6, line: 827, baseType: !2624, size: 64, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "signgroup_T", file: !6, line: 818, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signgroup_S", file: !6, line: 813, size: 64, elements: !2627)
!2627 = !{!2628, !2629, !2630}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "sg_next_sign_id", scope: !2626, file: !6, line: 815, baseType: !1131, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "sg_refcount", scope: !2626, file: !6, line: 816, baseType: !1657, size: 16, offset: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "sg_name", scope: !2626, file: !6, line: 817, baseType: !2205, size: 8, offset: 48)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "se_next", scope: !2617, file: !6, line: 828, baseType: !2615, size: 64, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "se_prev", scope: !2617, file: !6, line: 829, baseType: !2615, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "b_has_sign_column", scope: !1360, file: !6, line: 3088, baseType: !1131, size: 32, offset: 72768)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "b_netbeans_file", scope: !1360, file: !6, line: 3095, baseType: !1131, size: 32, offset: 72800)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "b_was_netbeans_file", scope: !1360, file: !6, line: 3096, baseType: !1131, size: 32, offset: 72832)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "b_write_to_channel", scope: !1360, file: !6, line: 3099, baseType: !1131, size: 32, offset: 72864)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "b_cryptstate", scope: !1360, file: !6, line: 3104, baseType: !2638, size: 64, offset: 72896)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "cryptstate_T", file: !6, line: 2503, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2500, size: 128, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "method_nr", scope: !2640, file: !6, line: 2501, baseType: !1131, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "method_state", scope: !2640, file: !6, line: 2502, baseType: !1129, size: 64, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "b_mapped_ctrl_c", scope: !1360, file: !6, line: 3107, baseType: !1131, size: 32, offset: 72960)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "b_term", scope: !1360, file: !6, line: 3110, baseType: !2646, size: 64, offset: 73024)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "term_T", file: !6, line: 64, baseType: !2648)
!2648 = !DICompositeType(tag: DW_TAG_structure_type, name: "terminal_S", file: !6, line: 64, flags: DIFlagFwdDecl)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "b_diff_failed", scope: !1360, file: !6, line: 3114, baseType: !1131, size: 32, offset: 73088)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "jv_refcount", scope: !1334, file: !6, line: 2098, baseType: !1131, size: 32, offset: 832)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "jv_copyID", scope: !1334, file: !6, line: 2099, baseType: !1131, size: 32, offset: 864)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "jv_channel", scope: !1334, file: !6, line: 2101, baseType: !2653, size: 64, offset: 896)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "channel_T", file: !6, line: 1370, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "channel_S", file: !6, line: 2225, size: 11008, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ch_next", scope: !2655, file: !6, line: 2226, baseType: !2653, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ch_prev", scope: !2655, file: !6, line: 2227, baseType: !2653, size: 64, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ch_id", scope: !2655, file: !6, line: 2229, baseType: !1131, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ch_last_msg_id", scope: !2655, file: !6, line: 2230, baseType: !1131, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ch_part", scope: !2655, file: !6, line: 2232, baseType: !2662, size: 9728, offset: 192)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2663, size: 9728, elements: !1772)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "chanpart_T", file: !6, line: 2223, baseType: !2664)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 2177, size: 2432, elements: !2665)
!2665 = !{!2666, !2668, !2669, !2671, !2673, !2674, !2683, !2692, !2693, !2694, !2695, !2696, !2697, !2705, !2714, !2715, !2722, !2723, !2724, !2725, !2726}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ch_fd", scope: !2664, file: !6, line: 2178, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "sock_T", file: !872, line: 1816, baseType: !1131)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ch_inputHandler", scope: !2664, file: !6, line: 2188, baseType: !1980, size: 32, offset: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mode", scope: !2664, file: !6, line: 2191, baseType: !2670, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "ch_mode_T", file: !6, line: 2146, baseType: !36)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ch_io", scope: !2664, file: !6, line: 2192, baseType: !2672, size: 32, offset: 96)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "job_io_T", file: !6, line: 2154, baseType: !42)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ch_timeout", scope: !2664, file: !6, line: 2193, baseType: !1131, size: 32, offset: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ch_head", scope: !2664, file: !6, line: 2195, baseType: !2675, size: 256, offset: 192)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "readq_T", file: !6, line: 1366, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readq_S", file: !6, line: 2108, size: 256, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2682}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "rq_buffer", scope: !2676, file: !6, line: 2110, baseType: !1124, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "rq_buflen", scope: !2676, file: !6, line: 2111, baseType: !1309, size: 64, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "rq_next", scope: !2676, file: !6, line: 2112, baseType: !2681, size: 64, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "rq_prev", scope: !2676, file: !6, line: 2113, baseType: !2681, size: 64, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ch_json_head", scope: !2664, file: !6, line: 2196, baseType: !2684, size: 256, offset: 448)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "jsonq_T", file: !6, line: 1368, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "jsonq_S", file: !6, line: 2123, size: 256, elements: !2686)
!2686 = !{!2687, !2688, !2690, !2691}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "jq_value", scope: !2685, file: !6, line: 2125, baseType: !1235, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "jq_next", scope: !2685, file: !6, line: 2126, baseType: !2689, size: 64, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "jq_prev", scope: !2685, file: !6, line: 2127, baseType: !2689, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "jq_no_callback", scope: !2685, file: !6, line: 2128, baseType: !1131, size: 32, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ch_block_ids", scope: !2664, file: !6, line: 2197, baseType: !1178, size: 192, offset: 704)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ch_wait_len", scope: !2664, file: !6, line: 2203, baseType: !1136, size: 64, offset: 896)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ch_deadline", scope: !2664, file: !6, line: 2207, baseType: !1591, size: 128, offset: 960)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ch_block_write", scope: !2664, file: !6, line: 2209, baseType: !1131, size: 32, offset: 1088)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nonblocking", scope: !2664, file: !6, line: 2211, baseType: !1131, size: 32, offset: 1120)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ch_writeque", scope: !2664, file: !6, line: 2212, baseType: !2698, size: 320, offset: 1152)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "writeq_T", file: !6, line: 1367, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeq_S", file: !6, line: 2116, size: 320, elements: !2700)
!2700 = !{!2701, !2702, !2704}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "wq_ga", scope: !2699, file: !6, line: 2118, baseType: !1178, size: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "wq_next", scope: !2699, file: !6, line: 2119, baseType: !2703, size: 64, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "wq_prev", scope: !2699, file: !6, line: 2120, baseType: !2703, size: 64, offset: 256)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ch_cb_head", scope: !2664, file: !6, line: 2214, baseType: !2706, size: 384, offset: 1472)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbq_T", file: !6, line: 1369, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbq_S", file: !6, line: 2131, size: 384, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2713}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "cq_callback", scope: !2707, file: !6, line: 2133, baseType: !1351, size: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "cq_seq_nr", scope: !2707, file: !6, line: 2134, baseType: !1131, size: 32, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "cq_next", scope: !2707, file: !6, line: 2135, baseType: !2712, size: 64, offset: 256)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "cq_prev", scope: !2707, file: !6, line: 2136, baseType: !2712, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ch_callback", scope: !2664, file: !6, line: 2215, baseType: !1351, size: 192, offset: 1856)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ch_bufref", scope: !2664, file: !6, line: 2217, baseType: !2716, size: 128, offset: 2048)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "bufref_T", file: !6, line: 102, baseType: !2717)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 98, size: 128, elements: !2718)
!2718 = !{!2719, !2720, !2721}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "br_buf", scope: !2717, file: !6, line: 99, baseType: !1358, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "br_fnum", scope: !2717, file: !6, line: 100, baseType: !1131, size: 32, offset: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "br_buf_free_count", scope: !2717, file: !6, line: 101, baseType: !1131, size: 32, offset: 96)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nomodifiable", scope: !2664, file: !6, line: 2218, baseType: !1131, size: 32, offset: 2176)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nomod_error", scope: !2664, file: !6, line: 2219, baseType: !1131, size: 32, offset: 2208)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_append", scope: !2664, file: !6, line: 2220, baseType: !1131, size: 32, offset: 2240)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_top", scope: !2664, file: !6, line: 2221, baseType: !1135, size: 64, offset: 2304)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ch_buf_bot", scope: !2664, file: !6, line: 2222, baseType: !1135, size: 64, offset: 2368)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ch_write_text_mode", scope: !2655, file: !6, line: 2233, baseType: !1131, size: 32, offset: 9920)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ch_hostname", scope: !2655, file: !6, line: 2235, baseType: !1127, size: 64, offset: 9984)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ch_port", scope: !2655, file: !6, line: 2236, baseType: !1131, size: 32, offset: 10048)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ch_to_be_closed", scope: !2655, file: !6, line: 2238, baseType: !1131, size: 32, offset: 10080)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ch_to_be_freed", scope: !2655, file: !6, line: 2241, baseType: !1131, size: 32, offset: 10112)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ch_error", scope: !2655, file: !6, line: 2243, baseType: !1131, size: 32, offset: 10144)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nb_close_cb", scope: !2655, file: !6, line: 2249, baseType: !2734, size: 64, offset: 10176)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{null}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ch_callback", scope: !2655, file: !6, line: 2256, baseType: !1351, size: 192, offset: 10240)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ch_close_cb", scope: !2655, file: !6, line: 2257, baseType: !1351, size: 192, offset: 10432)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ch_drop_never", scope: !2655, file: !6, line: 2258, baseType: !1131, size: 32, offset: 10624)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "ch_keep_open", scope: !2655, file: !6, line: 2259, baseType: !1131, size: 32, offset: 10656)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ch_nonblock", scope: !2655, file: !6, line: 2260, baseType: !1131, size: 32, offset: 10688)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ch_job", scope: !2655, file: !6, line: 2262, baseType: !1332, size: 64, offset: 10752)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ch_job_killed", scope: !2655, file: !6, line: 2265, baseType: !1131, size: 32, offset: 10816)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ch_anonymous_pipe", scope: !2655, file: !6, line: 2267, baseType: !1131, size: 32, offset: 10848)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ch_killing", scope: !2655, file: !6, line: 2268, baseType: !1131, size: 32, offset: 10880)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ch_refcount", scope: !2655, file: !6, line: 2270, baseType: !1131, size: 32, offset: 10912)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ch_copyID", scope: !2655, file: !6, line: 2271, baseType: !1131, size: 32, offset: 10944)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "jv_argv", scope: !1334, file: !6, line: 2102, baseType: !1132, size: 64, offset: 960)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "v_channel", scope: !1242, file: !6, line: 1428, baseType: !2653, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "v_blob", scope: !1242, file: !6, line: 1430, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "blob_T", file: !6, line: 1349, baseType: !2753)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blobvar_S", file: !6, line: 1561, size: 256, elements: !2754)
!2754 = !{!2755, !2756, !2757}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "bv_ga", scope: !2753, file: !6, line: 1563, baseType: !1178, size: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "bv_refcount", scope: !2753, file: !6, line: 1564, baseType: !1131, size: 32, offset: 192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "bv_lock", scope: !2753, file: !6, line: 1565, baseType: !1128, size: 8, offset: 224)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "pt_dict", scope: !1207, file: !6, line: 2013, baseType: !1296, size: 64, offset: 704)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pt_copyID", scope: !1207, file: !6, line: 2014, baseType: !1131, size: 32, offset: 768)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "uf_va_name", scope: !1168, file: !6, line: 1615, baseType: !1124, size: 64, offset: 960)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "uf_va_type", scope: !1168, file: !6, line: 1616, baseType: !1189, size: 64, offset: 1024)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "uf_func_type", scope: !1168, file: !6, line: 1617, baseType: !1189, size: 64, offset: 1088)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "uf_block_depth", scope: !1168, file: !6, line: 1618, baseType: !1131, size: 32, offset: 1152)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "uf_block_ids", scope: !1168, file: !6, line: 1619, baseType: !1142, size: 64, offset: 1216)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "uf_lines", scope: !1168, file: !6, line: 1626, baseType: !1178, size: 192, offset: 1280)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "uf_profiling", scope: !1168, file: !6, line: 1628, baseType: !1131, size: 32, offset: 1472)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "uf_prof_initialized", scope: !1168, file: !6, line: 1629, baseType: !1131, size: 32, offset: 1504)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_count", scope: !1168, file: !6, line: 1631, baseType: !1131, size: 32, offset: 1536)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_total", scope: !1168, file: !6, line: 1632, baseType: !1590, size: 128, offset: 1600)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_self", scope: !1168, file: !6, line: 1633, baseType: !1590, size: 128, offset: 1728)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tm_children", scope: !1168, file: !6, line: 1634, baseType: !1590, size: 128, offset: 1856)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_count", scope: !1168, file: !6, line: 1636, baseType: !1142, size: 64, offset: 1984)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_total", scope: !1168, file: !6, line: 1637, baseType: !1589, size: 64, offset: 2048)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_self", scope: !1168, file: !6, line: 1638, baseType: !1589, size: 64, offset: 2112)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_start", scope: !1168, file: !6, line: 1639, baseType: !1590, size: 128, offset: 2176)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_children", scope: !1168, file: !6, line: 1640, baseType: !1590, size: 128, offset: 2304)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_wait", scope: !1168, file: !6, line: 1641, baseType: !1590, size: 128, offset: 2432)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_idx", scope: !1168, file: !6, line: 1642, baseType: !1131, size: 32, offset: 2560)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "uf_tml_execed", scope: !1168, file: !6, line: 1643, baseType: !1131, size: 32, offset: 2592)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "uf_script_ctx", scope: !1168, file: !6, line: 1645, baseType: !1157, size: 192, offset: 2624)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "uf_script_ctx_version", scope: !1168, file: !6, line: 1648, baseType: !1131, size: 32, offset: 2816)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "uf_refcount", scope: !1168, file: !6, line: 1649, baseType: !1131, size: 32, offset: 2848)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "uf_scoped", scope: !1168, file: !6, line: 1651, baseType: !2784, size: 64, offset: 2880)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "funccall_T", file: !6, line: 1582, baseType: !2786)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funccall_S", file: !6, line: 1682, size: 17280, elements: !2787)
!2787 = !{!2788, !2789, !2790, !2791, !2800, !2801, !2802, !2803, !2804, !2805, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2786, file: !6, line: 1684, baseType: !1166, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "linenr", scope: !2786, file: !6, line: 1685, baseType: !1131, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "returned", scope: !2786, file: !6, line: 1686, baseType: !1131, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "fixvar", scope: !2786, file: !6, line: 1691, baseType: !2792, size: 4608, offset: 128)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2793, size: 4608, elements: !2798)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2786, file: !6, line: 1687, size: 384, elements: !2794)
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2793, file: !6, line: 1689, baseType: !2199, size: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "room", scope: !2793, file: !6, line: 1690, baseType: !2797, size: 160, offset: 192)
!2797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 160, elements: !2284)
!2798 = !{!2799}
!2799 = !DISubrange(count: 12)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "l_vars", scope: !2786, file: !6, line: 1692, baseType: !1297, size: 2816, offset: 4736)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "l_vars_var", scope: !2786, file: !6, line: 1693, baseType: !2199, size: 192, offset: 7552)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "l_avars", scope: !2786, file: !6, line: 1694, baseType: !1297, size: 2816, offset: 7744)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "l_avars_var", scope: !2786, file: !6, line: 1695, baseType: !2199, size: 192, offset: 10560)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "l_varlist", scope: !2786, file: !6, line: 1696, baseType: !1253, size: 768, offset: 10752)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "l_listitems", scope: !2786, file: !6, line: 1697, baseType: !2806, size: 5120, offset: 11520)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 5120, elements: !2284)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "rettv", scope: !2786, file: !6, line: 1698, baseType: !1235, size: 64, offset: 16640)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "breakpoint", scope: !2786, file: !6, line: 1699, baseType: !1135, size: 64, offset: 16704)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_tick", scope: !2786, file: !6, line: 1700, baseType: !1131, size: 32, offset: 16768)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2786, file: !6, line: 1701, baseType: !1131, size: 32, offset: 16800)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "prof_child", scope: !2786, file: !6, line: 1703, baseType: !1590, size: 128, offset: 16832)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2786, file: !6, line: 1705, baseType: !2784, size: 64, offset: 16960)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "fc_refcount", scope: !2786, file: !6, line: 1709, baseType: !1131, size: 32, offset: 17024)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "fc_copyID", scope: !2786, file: !6, line: 1711, baseType: !1131, size: 32, offset: 17056)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "fc_funcs", scope: !2786, file: !6, line: 1712, baseType: !1178, size: 192, offset: 17088)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "uf_name_exp", scope: !1168, file: !6, line: 1653, baseType: !1124, size: 64, offset: 2944)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "uf_name", scope: !1168, file: !6, line: 1655, baseType: !2818, size: 32, offset: 3008)
!2818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 32, elements: !1772)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "aucmd", scope: !1153, file: !6, line: 2044, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "AutoPatCmd", file: !6, line: 2017, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "AutoPatCmd_S", file: !6, line: 2017, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "except", scope: !1153, file: !6, line: 2045, baseType: !2824, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "except_T", file: !6, line: 996, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vim_exception", file: !6, line: 997, size: 384, elements: !2827)
!2827 = !{!2828, !2830, !2831, !2843, !2844, !2845}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2826, file: !6, line: 999, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "except_type_T", file: !6, line: 990, baseType: !857)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2826, file: !6, line: 1000, baseType: !1127, size: 64, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "messages", scope: !2826, file: !6, line: 1001, baseType: !2832, size: 64, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msglist", file: !6, line: 972, size: 384, elements: !2834)
!2834 = !{!2835, !2838, !2839, !2840, !2841, !2842}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2833, file: !6, line: 974, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "msglist_T", file: !6, line: 971, baseType: !2833)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !2833, file: !6, line: 975, baseType: !1127, size: 64, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "throw_msg", scope: !2833, file: !6, line: 976, baseType: !1127, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "sfile", scope: !2833, file: !6, line: 977, baseType: !1124, size: 64, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "slnum", scope: !2833, file: !6, line: 978, baseType: !1130, size: 64, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "msg_compiling", scope: !2833, file: !6, line: 979, baseType: !1131, size: 32, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "throw_name", scope: !2826, file: !6, line: 1002, baseType: !1124, size: 64, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "throw_lnum", scope: !2826, file: !6, line: 1003, baseType: !1135, size: 64, offset: 256)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "caught", scope: !2826, file: !6, line: 1004, baseType: !2824, size: 64, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "es_save_sctx", scope: !1146, file: !6, line: 2048, baseType: !1157, size: 192, offset: 256)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vimoption", file: !89, line: 265, size: 640, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856, !2858}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "fullname", scope: !2849, file: !89, line: 267, baseType: !1127, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "shortname", scope: !2849, file: !89, line: 268, baseType: !1127, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2849, file: !89, line: 269, baseType: !1309, size: 64, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2849, file: !89, line: 270, baseType: !1124, size: 64, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "indir", scope: !2849, file: !89, line: 273, baseType: !1141, size: 32, offset: 256)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "def_val", scope: !2849, file: !89, line: 275, baseType: !2857, size: 128, offset: 320)
!2857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1124, size: 128, elements: !2308)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "script_ctx", scope: !2849, file: !89, line: 277, baseType: !1157, size: 192, offset: 448)
!2859 = !{!0, !2860, !2885, !2899, !2936, !2938, !2940, !2942, !2944, !2946, !2948, !2950, !2952, !2954, !2956, !2959, !2964, !3025, !3030, !3032, !3034, !3036, !3038, !3040, !3045, !3047, !3050}
!2860 = !DIGlobalVariableExpression(var: !2861, expr: !DIExpression())
!2861 = distinct !DIGlobalVariable(name: "names", scope: !2862, file: !3, line: 136, type: !2884, isLocal: true, isDefinition: true)
!2862 = distinct !DISubprogram(name: "set_init_1", scope: !3, file: !3, line: 75, type: !2863, isLocal: false, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2865)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{null, !1131}
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2872, !2873, !2874, !2875, !2877, !2878, !2879, !2880, !2881}
!2866 = !DILocalVariable(name: "clean_arg", arg: 1, scope: !2862, file: !3, line: 75, type: !1131)
!2867 = !DILocalVariable(name: "p", scope: !2862, file: !3, line: 77, type: !1124)
!2868 = !DILocalVariable(name: "opt_idx", scope: !2862, file: !3, line: 78, type: !1131)
!2869 = !DILocalVariable(name: "n", scope: !2862, file: !3, line: 79, type: !1309)
!2870 = !DILocalVariable(name: "len", scope: !2871, file: !3, line: 140, type: !1131)
!2871 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 134, column: 5)
!2872 = !DILocalVariable(name: "ga", scope: !2871, file: !3, line: 141, type: !1178)
!2873 = !DILocalVariable(name: "mustfree", scope: !2871, file: !3, line: 142, type: !1131)
!2874 = !DILocalVariable(name: "item", scope: !2871, file: !3, line: 143, type: !1124)
!2875 = !DILocalVariable(name: "cdpath", scope: !2876, file: !3, line: 227, type: !1124)
!2876 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 226, column: 5)
!2877 = !DILocalVariable(name: "buf", scope: !2876, file: !3, line: 228, type: !1124)
!2878 = !DILocalVariable(name: "i", scope: !2876, file: !3, line: 229, type: !1131)
!2879 = !DILocalVariable(name: "j", scope: !2876, file: !3, line: 230, type: !1131)
!2880 = !DILocalVariable(name: "mustfree", scope: !2876, file: !3, line: 231, type: !1131)
!2881 = !DILocalVariable(name: "save_enc", scope: !2882, file: !3, line: 437, type: !1124)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 436, column: 5)
!2883 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 435, column: 9)
!2884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 256, elements: !1772)
!2885 = !DIGlobalVariableExpression(var: !2886, expr: !DIExpression())
!2886 = distinct !DIGlobalVariable(name: "quick_tab", scope: !2887, file: !3, line: 3779, type: !2896, isLocal: true, isDefinition: true)
!2887 = distinct !DISubprogram(name: "findoption", scope: !3, file: !3, line: 3775, type: !2888, isLocal: false, isDefinition: true, scopeLine: 3776, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2890)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!1131, !1124}
!2890 = !{!2891, !2892, !2893, !2894, !2895}
!2891 = !DILocalVariable(name: "arg", arg: 1, scope: !2887, file: !3, line: 3775, type: !1124)
!2892 = !DILocalVariable(name: "opt_idx", scope: !2887, file: !3, line: 3777, type: !1131)
!2893 = !DILocalVariable(name: "s", scope: !2887, file: !3, line: 3778, type: !1127)
!2894 = !DILocalVariable(name: "p", scope: !2887, file: !3, line: 3778, type: !1127)
!2895 = !DILocalVariable(name: "is_term_opt", scope: !2887, file: !3, line: 3780, type: !1131)
!2896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 432, elements: !2897)
!2897 = !{!2898}
!2898 = !DISubrange(count: 27)
!2899 = !DIGlobalVariableExpression(var: !2900, expr: !DIExpression())
!2900 = distinct !DIGlobalVariable(name: "names", scope: !2901, file: !3, line: 6299, type: !2935, isLocal: true, isDefinition: true)
!2901 = distinct !DISubprogram(name: "ExpandSettings", scope: !3, file: !3, line: 6284, type: !2902, isLocal: false, isDefinition: true, scopeLine: 6289, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2920)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!1131, !2904, !1559, !1142, !2919}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_typedef, name: "expand_T", file: !6, line: 589, baseType: !2906)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expand", file: !6, line: 570, size: 640, elements: !2907)
!2907 = !{!2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "xp_pattern", scope: !2906, file: !6, line: 572, baseType: !1124, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "xp_context", scope: !2906, file: !6, line: 573, baseType: !1131, size: 32, offset: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "xp_pattern_len", scope: !2906, file: !6, line: 574, baseType: !1131, size: 32, offset: 96)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "xp_arg", scope: !2906, file: !6, line: 576, baseType: !1124, size: 64, offset: 128)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "xp_script_ctx", scope: !2906, file: !6, line: 577, baseType: !1157, size: 192, offset: 192)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "xp_backslash", scope: !2906, file: !6, line: 579, baseType: !1131, size: 32, offset: 384)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "xp_shell", scope: !2906, file: !6, line: 581, baseType: !1131, size: 32, offset: 416)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "xp_numfiles", scope: !2906, file: !6, line: 584, baseType: !1131, size: 32, offset: 448)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "xp_col", scope: !2906, file: !6, line: 586, baseType: !1131, size: 32, offset: 480)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "xp_files", scope: !2906, file: !6, line: 587, baseType: !1133, size: 64, offset: 512)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "xp_line", scope: !2906, file: !6, line: 588, baseType: !1124, size: 64, offset: 576)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934}
!2921 = !DILocalVariable(name: "xp", arg: 1, scope: !2901, file: !3, line: 6285, type: !2904)
!2922 = !DILocalVariable(name: "regmatch", arg: 2, scope: !2901, file: !3, line: 6286, type: !1559)
!2923 = !DILocalVariable(name: "num_file", arg: 3, scope: !2901, file: !3, line: 6287, type: !1142)
!2924 = !DILocalVariable(name: "file", arg: 4, scope: !2901, file: !3, line: 6288, type: !2919)
!2925 = !DILocalVariable(name: "num_normal", scope: !2901, file: !3, line: 6290, type: !1131)
!2926 = !DILocalVariable(name: "num_term", scope: !2901, file: !3, line: 6291, type: !1131)
!2927 = !DILocalVariable(name: "opt_idx", scope: !2901, file: !3, line: 6292, type: !1131)
!2928 = !DILocalVariable(name: "match", scope: !2901, file: !3, line: 6293, type: !1131)
!2929 = !DILocalVariable(name: "count", scope: !2901, file: !3, line: 6294, type: !1131)
!2930 = !DILocalVariable(name: "str", scope: !2901, file: !3, line: 6295, type: !1124)
!2931 = !DILocalVariable(name: "loop", scope: !2901, file: !3, line: 6296, type: !1131)
!2932 = !DILocalVariable(name: "is_term_opt", scope: !2901, file: !3, line: 6297, type: !1131)
!2933 = !DILocalVariable(name: "name_buf", scope: !2901, file: !3, line: 6298, type: !1671)
!2934 = !DILocalVariable(name: "ic", scope: !2901, file: !3, line: 6300, type: !1131)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 128, elements: !2308)
!2936 = !DIGlobalVariableExpression(var: !2937, expr: !DIExpression())
!2937 = distinct !DIGlobalVariable(name: "p_et_nobin", scope: !2, file: !89, line: 250, type: !1131, isLocal: true, isDefinition: true)
!2938 = !DIGlobalVariableExpression(var: !2939, expr: !DIExpression())
!2939 = distinct !DIGlobalVariable(name: "p_ml_nobin", scope: !2, file: !89, line: 251, type: !1131, isLocal: true, isDefinition: true)
!2940 = !DIGlobalVariableExpression(var: !2941, expr: !DIExpression())
!2941 = distinct !DIGlobalVariable(name: "p_tw_nobin", scope: !2, file: !89, line: 252, type: !1130, isLocal: true, isDefinition: true)
!2942 = !DIGlobalVariableExpression(var: !2943, expr: !DIExpression())
!2943 = distinct !DIGlobalVariable(name: "p_wm_nobin", scope: !2, file: !89, line: 253, type: !1130, isLocal: true, isDefinition: true)
!2944 = !DIGlobalVariableExpression(var: !2945, expr: !DIExpression())
!2945 = distinct !DIGlobalVariable(name: "p_ai_nopaste", scope: !2, file: !89, line: 256, type: !1131, isLocal: true, isDefinition: true)
!2946 = !DIGlobalVariableExpression(var: !2947, expr: !DIExpression())
!2947 = distinct !DIGlobalVariable(name: "p_et_nopaste", scope: !2, file: !89, line: 257, type: !1131, isLocal: true, isDefinition: true)
!2948 = !DIGlobalVariableExpression(var: !2949, expr: !DIExpression())
!2949 = distinct !DIGlobalVariable(name: "p_sts_nopaste", scope: !2, file: !89, line: 258, type: !1130, isLocal: true, isDefinition: true)
!2950 = !DIGlobalVariableExpression(var: !2951, expr: !DIExpression())
!2951 = distinct !DIGlobalVariable(name: "p_tw_nopaste", scope: !2, file: !89, line: 259, type: !1130, isLocal: true, isDefinition: true)
!2952 = !DIGlobalVariableExpression(var: !2953, expr: !DIExpression())
!2953 = distinct !DIGlobalVariable(name: "p_wm_nopaste", scope: !2, file: !89, line: 260, type: !1130, isLocal: true, isDefinition: true)
!2954 = !DIGlobalVariableExpression(var: !2955, expr: !DIExpression())
!2955 = distinct !DIGlobalVariable(name: "p_vsts_nopaste", scope: !2, file: !89, line: 262, type: !1124, isLocal: true, isDefinition: true)
!2956 = !DIGlobalVariableExpression(var: !2957, expr: !DIExpression())
!2957 = distinct !DIGlobalVariable(name: "buf_opt_idx", scope: !2, file: !3, line: 5668, type: !2958, isLocal: true, isDefinition: true)
!2958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 2688, elements: !2449)
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "options", scope: !2, file: !89, line: 319, type: !2961, isLocal: true, isDefinition: true)
!2961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, size: 325120, elements: !2962)
!2962 = !{!2963}
!2963 = !DISubrange(count: 508)
!2964 = !DIGlobalVariableExpression(var: !2965, expr: !DIExpression())
!2965 = distinct !DIGlobalVariable(name: "w_arabic", scope: !2966, file: !3, line: 3059, type: !1127, isLocal: true, isDefinition: true)
!2966 = distinct !DISubprogram(name: "set_bool_option", scope: !3, file: !3, line: 2601, type: !2967, isLocal: true, isDefinition: true, scopeLine: 2606, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !2969)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!1127, !1131, !1124, !1131, !1131}
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976, !2984, !2985, !2997, !3007}
!2970 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !2966, file: !3, line: 2602, type: !1131)
!2971 = !DILocalVariable(name: "varp", arg: 2, scope: !2966, file: !3, line: 2603, type: !1124)
!2972 = !DILocalVariable(name: "value", arg: 3, scope: !2966, file: !3, line: 2604, type: !1131)
!2973 = !DILocalVariable(name: "opt_flags", arg: 4, scope: !2966, file: !3, line: 2605, type: !1131)
!2974 = !DILocalVariable(name: "old_value", scope: !2966, file: !3, line: 2607, type: !1131)
!2975 = !DILocalVariable(name: "old_global_value", scope: !2966, file: !3, line: 2609, type: !1131)
!2976 = !DILocalVariable(name: "hash", scope: !2977, file: !3, line: 2674, type: !1671)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 2673, column: 2)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 2672, column: 6)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2668, column: 5)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 2667, column: 14)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 2661, column: 14)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 2655, column: 14)
!2983 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2652, column: 9)
!2984 = !DILocalVariable(name: "save_curbuf", scope: !2977, file: !3, line: 2675, type: !1358)
!2985 = !DILocalVariable(name: "p", scope: !2986, file: !3, line: 2783, type: !1124)
!2986 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 2782, column: 5)
!2987 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 2781, column: 14)
!2988 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 2770, column: 14)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 2763, column: 14)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 2754, column: 14)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 2747, column: 14)
!2992 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 2742, column: 14)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 2737, column: 14)
!2994 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2720, column: 14)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 2712, column: 14)
!2996 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2696, column: 14)
!2997 = !DILocalVariable(name: "win", scope: !2998, file: !3, line: 2856, type: !1504)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 2855, column: 2)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 2854, column: 6)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 2853, column: 5)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 2852, column: 14)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 2841, column: 14)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 2833, column: 14)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2826, column: 14)
!3005 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 2806, column: 14)
!3006 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 2800, column: 14)
!3007 = !DILocalVariable(name: "errmsg", scope: !3008, file: !3, line: 3022, type: !1127)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 3021, column: 2)
!3009 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 3020, column: 6)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 3019, column: 5)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 3018, column: 14)
!3012 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 3004, column: 14)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2991, column: 14)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 2982, column: 14)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2975, column: 14)
!3016 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 2963, column: 14)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 2949, column: 14)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 2943, column: 14)
!3019 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 2937, column: 14)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 2901, column: 14)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 2895, column: 14)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2887, column: 14)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 2875, column: 14)
!3024 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 2869, column: 14)
!3025 = !DIGlobalVariableExpression(var: !3026, expr: !DIExpression())
!3026 = distinct !DIGlobalVariable(name: "old_p_paste", scope: !3027, file: !3, line: 6581, type: !1131, isLocal: true, isDefinition: true)
!3027 = distinct !DISubprogram(name: "paste_option_changed", scope: !3, file: !3, line: 6579, type: !2735, isLocal: true, isDefinition: true, scopeLine: 6580, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3028)
!3028 = !{!3029}
!3029 = !DILocalVariable(name: "buf", scope: !3027, file: !3, line: 6591, type: !1358)
!3030 = !DIGlobalVariableExpression(var: !3031, expr: !DIExpression())
!3031 = distinct !DIGlobalVariable(name: "save_sm", scope: !3027, file: !3, line: 6582, type: !1131, isLocal: true, isDefinition: true)
!3032 = !DIGlobalVariableExpression(var: !3033, expr: !DIExpression())
!3033 = distinct !DIGlobalVariable(name: "save_sta", scope: !3027, file: !3, line: 6583, type: !1131, isLocal: true, isDefinition: true)
!3034 = !DIGlobalVariableExpression(var: !3035, expr: !DIExpression())
!3035 = distinct !DIGlobalVariable(name: "save_ru", scope: !3027, file: !3, line: 6585, type: !1131, isLocal: true, isDefinition: true)
!3036 = !DIGlobalVariableExpression(var: !3037, expr: !DIExpression())
!3037 = distinct !DIGlobalVariable(name: "save_ri", scope: !3027, file: !3, line: 6588, type: !1131, isLocal: true, isDefinition: true)
!3038 = !DIGlobalVariableExpression(var: !3039, expr: !DIExpression())
!3039 = distinct !DIGlobalVariable(name: "save_hkmap", scope: !3027, file: !3, line: 6589, type: !1131, isLocal: true, isDefinition: true)
!3040 = !DIGlobalVariableExpression(var: !3041, expr: !DIExpression())
!3041 = distinct !DIGlobalVariable(name: "did_init_buf_opt_idx", scope: !3042, file: !3, line: 5677, type: !1131, isLocal: true, isDefinition: true)
!3042 = distinct !DISubprogram(name: "init_buf_opt_idx", scope: !3, file: !3, line: 5675, type: !2735, isLocal: true, isDefinition: true, scopeLine: 5676, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3043)
!3043 = !{!3044}
!3044 = !DILocalVariable(name: "i", scope: !3042, file: !3, line: 5678, type: !1131)
!3045 = !DIGlobalVariableExpression(var: !3046, expr: !DIExpression())
!3046 = distinct !DIGlobalVariable(name: "expand_option_flags", scope: !2, file: !3, line: 6070, type: !1131, isLocal: true, isDefinition: true)
!3047 = !DIGlobalVariableExpression(var: !3048, expr: !DIExpression())
!3048 = distinct !DIGlobalVariable(name: "expand_option_name", scope: !2, file: !3, line: 6069, type: !3049, isLocal: true, isDefinition: true)
!3049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 40, elements: !1963)
!3050 = !DIGlobalVariableExpression(var: !3051, expr: !DIExpression())
!3051 = distinct !DIGlobalVariable(name: "expand_option_idx", scope: !2, file: !3, line: 6068, type: !1131, isLocal: true, isDefinition: true)
!3052 = !DIGlobalVariableExpression(var: !3041, expr: !DIExpression(DW_OP_deref, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3053 = !{i32 2, !"Dwarf Version", i32 4}
!3054 = !{i32 2, !"Debug Info Version", i32 3}
!3055 = !{i32 1, !"wchar_size", i32 4}
!3056 = !{!"clang version 6.0.1-14 (tags/RELEASE_601/final)"}
!3057 = !DILocation(line: 75, column: 16, scope: !2862)
!3058 = !DILocation(line: 82, column: 5, scope: !2862)
!3059 = !DILocation(line: 86, column: 10, scope: !2862)
!3060 = !{!3061, !3061, i64 0}
!3061 = !{!"int", !3062, i64 0}
!3062 = !{!"omnipotent char", !3063, i64 0}
!3063 = !{!"Simple C/C++ TBAA"}
!3064 = !DILocation(line: 89, column: 9, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 89, column: 9)
!3066 = !DILocation(line: 89, column: 43, scope: !3065)
!3067 = !DILocation(line: 89, column: 9, scope: !2862)
!3068 = !DILocalVariable(name: "name", arg: 1, scope: !3069, file: !3, line: 674, type: !1127)
!3069 = distinct !DISubprogram(name: "set_string_default", scope: !3, file: !3, line: 674, type: !3070, isLocal: false, isDefinition: true, scopeLine: 675, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3072)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null, !1127, !1124}
!3072 = !{!3068, !3073}
!3073 = !DILocalVariable(name: "val", arg: 2, scope: !3069, file: !3, line: 674, type: !1124)
!3074 = !DILocation(line: 674, column: 26, scope: !3069, inlinedAt: !3075)
!3075 = distinct !DILocation(line: 91, column: 2, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 90, column: 5)
!3077 = !DILocation(line: 674, column: 40, scope: !3069, inlinedAt: !3075)
!3078 = !DILocalVariable(name: "name", arg: 1, scope: !3079, file: !3, line: 651, type: !1127)
!3079 = distinct !DISubprogram(name: "set_string_default_esc", scope: !3, file: !3, line: 651, type: !3080, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3082)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{null, !1127, !1124, !1131}
!3082 = !{!3078, !3083, !3084, !3085, !3086}
!3083 = !DILocalVariable(name: "val", arg: 2, scope: !3079, file: !3, line: 651, type: !1124)
!3084 = !DILocalVariable(name: "escape", arg: 3, scope: !3079, file: !3, line: 651, type: !1131)
!3085 = !DILocalVariable(name: "p", scope: !3079, file: !3, line: 653, type: !1124)
!3086 = !DILocalVariable(name: "opt_idx", scope: !3079, file: !3, line: 654, type: !1131)
!3087 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3088)
!3088 = distinct !DILocation(line: 676, column: 5, scope: !3069, inlinedAt: !3075)
!3089 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3088)
!3090 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3088)
!3091 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3088)
!3092 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 656, column: 9)
!3093 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3088)
!3094 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3088)
!3095 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 660, column: 9)
!3096 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3088)
!3097 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3088)
!3098 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 661, column: 5)
!3099 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3088)
!3100 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3088)
!3101 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 663, column: 6)
!3102 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3088)
!3103 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3088)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 665, column: 10)
!3105 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 664, column: 2)
!3106 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3088)
!3107 = !{!3108, !3110, i64 16}
!3108 = !{!"vimoption", !3109, i64 0, !3109, i64 8, !3110, i64 16, !3109, i64 24, !3062, i64 32, !3062, i64 40, !3111, i64 56}
!3109 = !{!"any pointer", !3062, i64 0}
!3110 = !{!"long", !3062, i64 0}
!3111 = !{!"", !3061, i64 0, !3061, i64 4, !3110, i64 8, !3061, i64 16}
!3112 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3088)
!3113 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3088)
!3114 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3088)
!3115 = !{!3109, !3109, i64 0}
!3116 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3088)
!3117 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3088)
!3118 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3088)
!3119 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3088)
!3120 = !DILocation(line: 674, column: 26, scope: !3069, inlinedAt: !3121)
!3121 = distinct !DILocation(line: 92, column: 2, scope: !3076)
!3122 = !DILocation(line: 674, column: 40, scope: !3069, inlinedAt: !3121)
!3123 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3124)
!3124 = distinct !DILocation(line: 676, column: 5, scope: !3069, inlinedAt: !3121)
!3125 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3124)
!3126 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3124)
!3127 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3124)
!3128 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3124)
!3129 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3124)
!3130 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3124)
!3131 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3124)
!3132 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3124)
!3133 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3124)
!3134 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3124)
!3135 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3124)
!3136 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3124)
!3137 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3124)
!3138 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3124)
!3139 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3124)
!3140 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3124)
!3141 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3124)
!3142 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3124)
!3143 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3124)
!3144 = !DILocation(line: 99, column: 15, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 99, column: 9)
!3146 = !DILocation(line: 77, column: 13, scope: !2862)
!3147 = !DILocation(line: 99, column: 46, scope: !3145)
!3148 = !DILocation(line: 99, column: 54, scope: !3145)
!3149 = !DILocation(line: 99, column: 57, scope: !3145)
!3150 = !{!3062, !3062, i64 0}
!3151 = !DILocation(line: 99, column: 60, scope: !3145)
!3152 = !DILocation(line: 99, column: 9, scope: !2862)
!3153 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3154)
!3154 = distinct !DILocation(line: 126, column: 2, scope: !3145)
!3155 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3154)
!3156 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3154)
!3157 = !DILocation(line: 656, column: 19, scope: !3092, inlinedAt: !3154)
!3158 = !DILocation(line: 656, column: 40, scope: !3092, inlinedAt: !3154)
!3159 = !DILocation(line: 656, column: 9, scope: !3079, inlinedAt: !3154)
!3160 = !DILocation(line: 657, column: 6, scope: !3092, inlinedAt: !3154)
!3161 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3154)
!3162 = !DILocation(line: 657, column: 2, scope: !3092, inlinedAt: !3154)
!3163 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3154)
!3164 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3154)
!3165 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3154)
!3166 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3154)
!3167 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3154)
!3168 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3154)
!3169 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3154)
!3170 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3154)
!3171 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3154)
!3172 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3154)
!3173 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3154)
!3174 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3154)
!3175 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3154)
!3176 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3154)
!3177 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3154)
!3178 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3154)
!3179 = !DILocation(line: 141, column: 2, scope: !2871)
!3180 = !DILocation(line: 142, column: 2, scope: !2871)
!3181 = !DILocation(line: 145, column: 12, scope: !2871)
!3182 = !DILocation(line: 78, column: 10, scope: !2862)
!3183 = !DILocation(line: 141, column: 11, scope: !2871)
!3184 = !DILocation(line: 147, column: 2, scope: !2871)
!3185 = !DILocation(line: 79, column: 12, scope: !2862)
!3186 = !DILocation(line: 148, column: 2, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 148, column: 2)
!3188 = !DILocation(line: 142, column: 7, scope: !2871)
!3189 = !DILocation(line: 150, column: 15, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 149, column: 2)
!3191 = distinct !DILexicalBlock(scope: !3187, file: !3, line: 148, column: 2)
!3192 = !DILocation(line: 152, column: 11, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 152, column: 10)
!3194 = !DILocation(line: 152, column: 10, scope: !3193)
!3195 = !DILocation(line: 152, column: 20, scope: !3193)
!3196 = !DILocation(line: 152, column: 10, scope: !3190)
!3197 = !DILocation(line: 160, column: 7, scope: !3193)
!3198 = !DILocation(line: 161, column: 12, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 161, column: 10)
!3200 = !DILocation(line: 161, column: 20, scope: !3199)
!3201 = !DILocation(line: 161, column: 23, scope: !3199)
!3202 = !DILocation(line: 161, column: 26, scope: !3199)
!3203 = !DILocation(line: 161, column: 10, scope: !3190)
!3204 = !DILocation(line: 164, column: 14, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 162, column: 6)
!3206 = !DILocation(line: 164, column: 9, scope: !3205)
!3207 = !DILocation(line: 164, column: 24, scope: !3205)
!3208 = !DILocation(line: 140, column: 7, scope: !2871)
!3209 = !DILocation(line: 165, column: 16, scope: !3205)
!3210 = !DILocation(line: 165, column: 10, scope: !3205)
!3211 = !DILocation(line: 143, column: 11, scope: !2871)
!3212 = !DILocation(line: 166, column: 3, scope: !3205)
!3213 = !DILocation(line: 167, column: 3, scope: !3205)
!3214 = !DILocation(line: 168, column: 3, scope: !3205)
!3215 = !DILocation(line: 169, column: 24, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 169, column: 7)
!3217 = !{!3218, !3109, i64 16}
!3218 = !{!"growarray", !3061, i64 0, !3061, i64 4, !3061, i64 8, !3061, i64 12, !3109, i64 16}
!3219 = !DILocation(line: 169, column: 56, scope: !3216)
!3220 = !DILocation(line: 169, column: 7, scope: !3216)
!3221 = !DILocation(line: 170, column: 10, scope: !3216)
!3222 = !DILocation(line: 171, column: 4, scope: !3216)
!3223 = !DILocation(line: 171, column: 7, scope: !3216)
!3224 = !DILocation(line: 171, column: 25, scope: !3216)
!3225 = !DILocation(line: 169, column: 7, scope: !3205)
!3226 = !DILocation(line: 173, column: 14, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 173, column: 11)
!3228 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 172, column: 3)
!3229 = !{!3218, !3061, i64 0}
!3230 = !DILocation(line: 173, column: 21, scope: !3227)
!3231 = !DILocation(line: 173, column: 11, scope: !3228)
!3232 = !DILocation(line: 174, column: 4, scope: !3227)
!3233 = !DILocation(line: 175, column: 7, scope: !3228)
!3234 = !DILocation(line: 176, column: 17, scope: !3228)
!3235 = !DILocation(line: 177, column: 3, scope: !3228)
!3236 = !DILocation(line: 178, column: 3, scope: !3205)
!3237 = !DILocation(line: 179, column: 6, scope: !3205)
!3238 = !DILocation(line: 180, column: 10, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 180, column: 10)
!3240 = !DILocation(line: 180, column: 10, scope: !3190)
!3241 = !DILocation(line: 181, column: 3, scope: !3239)
!3242 = !DILocation(line: 148, column: 58, scope: !3191)
!3243 = !DILocation(line: 148, column: 16, scope: !3191)
!3244 = distinct !{!3244, !3186, !3245}
!3245 = !DILocation(line: 182, column: 2, scope: !3187)
!3246 = !DILocation(line: 183, column: 9, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 183, column: 6)
!3248 = !DILocation(line: 183, column: 17, scope: !3247)
!3249 = !DILocation(line: 183, column: 6, scope: !2871)
!3250 = !DILocation(line: 674, column: 26, scope: !3069, inlinedAt: !3251)
!3251 = distinct !DILocation(line: 185, column: 6, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 184, column: 2)
!3253 = !DILocation(line: 674, column: 40, scope: !3069, inlinedAt: !3251)
!3254 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3255)
!3255 = distinct !DILocation(line: 676, column: 5, scope: !3069, inlinedAt: !3251)
!3256 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3255)
!3257 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3255)
!3258 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3255)
!3259 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3255)
!3260 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3255)
!3261 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3255)
!3262 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3255)
!3263 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3255)
!3264 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3255)
!3265 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3255)
!3266 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3255)
!3267 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3255)
!3268 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3255)
!3269 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3255)
!3270 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3255)
!3271 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3255)
!3272 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3255)
!3273 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3255)
!3274 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3255)
!3275 = !DILocation(line: 186, column: 18, scope: !3252)
!3276 = !DILocation(line: 186, column: 6, scope: !3252)
!3277 = !DILocation(line: 187, column: 2, scope: !3252)
!3278 = !DILocation(line: 188, column: 5, scope: !2862)
!3279 = !DILocation(line: 194, column: 15, scope: !2862)
!3280 = !DILocation(line: 195, column: 17, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 195, column: 9)
!3282 = !DILocation(line: 195, column: 9, scope: !2862)
!3283 = !DILocation(line: 207, column: 11, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 200, column: 2)
!3285 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 196, column: 5)
!3286 = !DILocation(line: 207, column: 32, scope: !3284)
!3287 = !DILocation(line: 212, column: 45, scope: !3284)
!3288 = !DILocation(line: 212, column: 6, scope: !3284)
!3289 = !DILocation(line: 212, column: 43, scope: !3284)
!3290 = !DILocation(line: 213, column: 16, scope: !3284)
!3291 = !DILocation(line: 214, column: 18, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 214, column: 10)
!3293 = !DILocation(line: 214, column: 10, scope: !3284)
!3294 = !DILocation(line: 220, column: 7, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 215, column: 6)
!3296 = !DILocation(line: 220, column: 44, scope: !3295)
!3297 = !DILocation(line: 221, column: 6, scope: !3295)
!3298 = !DILocation(line: 231, column: 2, scope: !2876)
!3299 = !DILocation(line: 231, column: 6, scope: !2876)
!3300 = !DILocation(line: 234, column: 11, scope: !2876)
!3301 = !DILocation(line: 227, column: 10, scope: !2876)
!3302 = !DILocation(line: 235, column: 13, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 235, column: 6)
!3304 = !DILocation(line: 235, column: 6, scope: !2876)
!3305 = !DILocation(line: 237, column: 19, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 236, column: 2)
!3307 = !DILocation(line: 237, column: 34, scope: !3306)
!3308 = !DILocation(line: 237, column: 40, scope: !3306)
!3309 = !DILocation(line: 237, column: 12, scope: !3306)
!3310 = !DILocation(line: 228, column: 10, scope: !2876)
!3311 = !DILocation(line: 238, column: 14, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 238, column: 10)
!3313 = !DILocation(line: 238, column: 10, scope: !3306)
!3314 = !DILocation(line: 240, column: 10, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 239, column: 6)
!3316 = !DILocation(line: 230, column: 6, scope: !2876)
!3317 = !DILocation(line: 229, column: 6, scope: !2876)
!3318 = !DILocation(line: 242, column: 15, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 242, column: 3)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 242, column: 3)
!3321 = !DILocation(line: 242, column: 25, scope: !3319)
!3322 = !DILocation(line: 242, column: 3, scope: !3320)
!3323 = !DILocation(line: 244, column: 11, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 244, column: 11)
!3325 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 243, column: 3)
!3326 = !DILocation(line: 244, column: 11, scope: !3325)
!3327 = !DILocation(line: 248, column: 8, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 248, column: 8)
!3329 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 247, column: 7)
!3330 = !DILocation(line: 248, column: 25, scope: !3328)
!3331 = !DILocation(line: 249, column: 13, scope: !3328)
!3332 = !DILocation(line: 249, column: 8, scope: !3328)
!3333 = !DILocation(line: 249, column: 17, scope: !3328)
!3334 = !DILocation(line: 250, column: 15, scope: !3329)
!3335 = !DILocation(line: 242, column: 33, scope: !3319)
!3336 = distinct !{!3336, !3322, !3337}
!3337 = !DILocation(line: 252, column: 3, scope: !3320)
!3338 = !DILocation(line: 253, column: 3, scope: !3315)
!3339 = !DILocation(line: 253, column: 10, scope: !3315)
!3340 = !DILocation(line: 254, column: 13, scope: !3315)
!3341 = !DILocation(line: 255, column: 15, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 255, column: 7)
!3343 = !DILocation(line: 255, column: 7, scope: !3315)
!3344 = !DILocation(line: 257, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 256, column: 3)
!3346 = !DILocation(line: 257, column: 44, scope: !3345)
!3347 = !DILocation(line: 258, column: 24, scope: !3345)
!3348 = !DILocation(line: 258, column: 30, scope: !3345)
!3349 = !DILocation(line: 259, column: 3, scope: !3345)
!3350 = !DILocation(line: 261, column: 7, scope: !3342)
!3351 = !DILocation(line: 263, column: 10, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 263, column: 10)
!3353 = !DILocation(line: 263, column: 10, scope: !3306)
!3354 = !DILocation(line: 264, column: 3, scope: !3352)
!3355 = !DILocation(line: 266, column: 5, scope: !2862)
!3356 = !DILocation(line: 674, column: 26, scope: !3069, inlinedAt: !3357)
!3357 = distinct !DILocation(line: 294, column: 5, scope: !2862)
!3358 = !DILocation(line: 674, column: 40, scope: !3069, inlinedAt: !3357)
!3359 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3360)
!3360 = distinct !DILocation(line: 676, column: 5, scope: !3069, inlinedAt: !3357)
!3361 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3360)
!3362 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3360)
!3363 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3360)
!3364 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3360)
!3365 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3360)
!3366 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3360)
!3367 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3360)
!3368 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3360)
!3369 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3360)
!3370 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3360)
!3371 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3360)
!3372 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3360)
!3373 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3360)
!3374 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3360)
!3375 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3360)
!3376 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3360)
!3377 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3360)
!3378 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3360)
!3379 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3360)
!3380 = !DILocation(line: 312, column: 5, scope: !2862)
!3381 = !DILocation(line: 315, column: 9, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 315, column: 9)
!3383 = !DILocation(line: 315, column: 9, scope: !2862)
!3384 = !DILocation(line: 317, column: 12, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 316, column: 5)
!3386 = !DILocation(line: 318, column: 14, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 318, column: 6)
!3388 = !DILocation(line: 318, column: 6, scope: !3385)
!3389 = !DILocation(line: 320, column: 6, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 319, column: 2)
!3391 = !DILocation(line: 320, column: 43, scope: !3390)
!3392 = !DILocation(line: 321, column: 12, scope: !3390)
!3393 = !DILocation(line: 322, column: 2, scope: !3390)
!3394 = !DILocation(line: 323, column: 12, scope: !3385)
!3395 = !DILocation(line: 324, column: 14, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 324, column: 6)
!3397 = !DILocation(line: 324, column: 6, scope: !3385)
!3398 = !DILocation(line: 326, column: 6, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 325, column: 2)
!3400 = !DILocation(line: 326, column: 43, scope: !3399)
!3401 = !DILocation(line: 327, column: 11, scope: !3399)
!3402 = !DILocation(line: 328, column: 2, scope: !3399)
!3403 = !DILocation(line: 333, column: 9, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 333, column: 9)
!3405 = !DILocation(line: 333, column: 9, scope: !2862)
!3406 = !DILocation(line: 334, column: 2, scope: !3404)
!3407 = !DILocation(line: 337, column: 5, scope: !2862)
!3408 = !DILocation(line: 337, column: 13, scope: !2862)
!3409 = !DILocation(line: 337, column: 29, scope: !2862)
!3410 = !{!3411, !3061, i64 4784}
!3411 = !{!"file_buffer", !3412, i64 0, !3109, i64 104, !3109, i64 112, !3061, i64 120, !3061, i64 124, !3061, i64 128, !3061, i64 132, !3109, i64 136, !3109, i64 144, !3109, i64 152, !3061, i64 160, !3110, i64 168, !3110, i64 176, !3061, i64 184, !3062, i64 188, !3061, i64 200, !3413, i64 208, !3415, i64 248, !3415, i64 256, !3061, i64 264, !3061, i64 268, !3110, i64 272, !3110, i64 280, !3110, i64 288, !3109, i64 296, !3110, i64 304, !3110, i64 312, !3110, i64 320, !3061, i64 328, !3110, i64 336, !3062, i64 344, !3416, i64 760, !3061, i64 800, !3417, i64 808, !3417, i64 824, !3417, i64 840, !3062, i64 856, !3061, i64 2456, !3061, i64 2460, !3062, i64 2464, !3062, i64 2496, !3109, i64 4544, !3218, i64 4552, !3417, i64 4576, !3417, i64 4592, !3417, i64 4608, !3061, i64 4624, !3109, i64 4632, !3109, i64 4640, !3109, i64 4648, !3061, i64 4656, !3061, i64 4660, !3110, i64 4664, !3110, i64 4672, !3110, i64 4680, !3110, i64 4688, !3110, i64 4696, !3418, i64 4704, !3110, i64 4720, !3061, i64 4728, !3061, i64 4732, !3110, i64 4736, !3110, i64 4744, !3419, i64 4752, !3218, i64 4760, !3061, i64 4784, !3062, i64 4792, !3061, i64 6808, !3061, i64 6812, !3109, i64 6816, !3061, i64 6824, !3061, i64 6828, !3061, i64 6832, !3061, i64 6836, !3109, i64 6840, !3109, i64 6848, !3061, i64 6856, !3061, i64 6860, !3061, i64 6864, !3109, i64 6872, !3109, i64 6880, !3109, i64 6888, !3109, i64 6896, !3109, i64 6904, !3109, i64 6912, !3109, i64 6920, !3109, i64 6928, !3109, i64 6936, !3061, i64 6944, !3061, i64 6948, !3061, i64 6952, !3061, i64 6956, !3061, i64 6960, !3109, i64 6968, !3109, i64 6976, !3109, i64 6984, !3109, i64 6992, !3109, i64 7000, !3061, i64 7008, !3109, i64 7016, !3109, i64 7024, !3109, i64 7032, !3109, i64 7040, !3110, i64 7048, !3109, i64 7056, !3110, i64 7064, !3109, i64 7072, !3109, i64 7080, !3109, i64 7088, !3110, i64 7096, !3109, i64 7104, !3109, i64 7112, !3061, i64 7120, !3109, i64 7128, !3109, i64 7136, !3061, i64 7144, !3061, i64 7148, !3061, i64 7152, !3109, i64 7160, !3061, i64 7168, !3109, i64 7176, !3061, i64 7184, !3110, i64 7192, !3061, i64 7200, !3061, i64 7204, !3110, i64 7208, !3110, i64 7216, !3109, i64 7224, !3061, i64 7232, !3110, i64 7240, !3109, i64 7248, !3110, i64 7256, !3061, i64 7264, !3110, i64 7272, !3110, i64 7280, !3110, i64 7288, !3110, i64 7296, !3110, i64 7304, !3110, i64 7312, !3109, i64 7320, !3109, i64 7328, !3109, i64 7336, !3109, i64 7344, !3109, i64 7352, !3109, i64 7360, !3109, i64 7368, !3109, i64 7376, !3109, i64 7384, !3109, i64 7392, !3109, i64 7400, !3061, i64 7408, !3109, i64 7416, !3109, i64 7424, !3061, i64 7432, !3109, i64 7440, !3109, i64 7448, !3110, i64 7456, !3061, i64 7464, !3109, i64 7472, !3110, i64 7480, !3061, i64 7488, !3061, i64 7492, !3061, i64 7496, !3061, i64 7500, !3061, i64 7504, !3061, i64 7508, !3061, i64 7512, !3061, i64 7516, !3061, i64 7520, !3061, i64 7524, !3061, i64 7528, !3061, i64 7532, !3061, i64 7536, !3061, i64 7540, !3061, i64 7544, !3061, i64 7548, !3061, i64 7552, !3061, i64 7556, !3061, i64 7560, !3061, i64 7564, !3061, i64 7568, !3061, i64 7572, !3061, i64 7576, !3061, i64 7580, !3061, i64 7584, !3061, i64 7588, !3061, i64 7592, !3061, i64 7596, !3061, i64 7600, !3061, i64 7604, !3061, i64 7608, !3061, i64 7612, !3061, i64 7616, !3061, i64 7620, !3061, i64 7624, !3061, i64 7628, !3061, i64 7632, !3110, i64 7640, !3061, i64 7648, !3061, i64 7652, !3109, i64 7656, !3061, i64 7664, !3061, i64 7668, !3420, i64 7672, !3109, i64 7696, !3109, i64 7704, !3109, i64 7712, !3061, i64 7720, !3109, i64 7728, !3109, i64 7736, !3110, i64 7744, !3109, i64 7752, !3061, i64 7760, !3061, i64 7764, !3061, i64 7768, !3061, i64 7772, !3061, i64 7776, !3109, i64 7784, !3421, i64 7792, !3421, i64 7816, !3061, i64 7840, !3422, i64 7848, !3109, i64 9088, !3061, i64 9096, !3061, i64 9100, !3061, i64 9104, !3061, i64 9108, !3109, i64 9112, !3061, i64 9120, !3109, i64 9128, !3061, i64 9136}
!3412 = !{!"memline", !3110, i64 0, !3109, i64 8, !3109, i64 16, !3061, i64 24, !3061, i64 28, !3061, i64 32, !3061, i64 36, !3110, i64 40, !3109, i64 48, !3109, i64 56, !3110, i64 64, !3110, i64 72, !3061, i64 80, !3109, i64 88, !3061, i64 96, !3061, i64 100}
!3413 = !{!"dictitem16_S", !3414, i64 0, !3062, i64 16, !3062, i64 17}
!3414 = !{!"", !3062, i64 0, !3062, i64 4, !3062, i64 8}
!3415 = !{!"long long", !3062, i64 0}
!3416 = !{!"", !3417, i64 0, !3417, i64 16, !3061, i64 32, !3061, i64 36}
!3417 = !{!"", !3110, i64 0, !3061, i64 8, !3061, i64 12}
!3418 = !{!"", !3109, i64 0, !3110, i64 8}
!3419 = !{!"short", !3062, i64 0}
!3420 = !{!"dictitem_S", !3414, i64 0, !3062, i64 16, !3062, i64 17}
!3421 = !{!"", !3109, i64 0, !3109, i64 8, !3061, i64 16}
!3422 = !{!"", !3423, i64 0, !3423, i64 304, !3061, i64 608, !3061, i64 612, !3061, i64 616, !3061, i64 620, !3061, i64 624, !3218, i64 632, !3218, i64 656, !3061, i64 680, !3061, i64 684, !3061, i64 688, !3061, i64 692, !3419, i64 696, !3110, i64 704, !3110, i64 712, !3110, i64 720, !3109, i64 728, !3109, i64 736, !3424, i64 744, !3061, i64 792, !3061, i64 796, !3061, i64 800, !3061, i64 804, !3109, i64 808, !3061, i64 816, !3109, i64 824, !3109, i64 832, !3061, i64 840, !3110, i64 848, !3419, i64 856, !3218, i64 864, !3062, i64 888, !3109, i64 1144, !3109, i64 1152, !3109, i64 1160, !3109, i64 1168, !3109, i64 1176, !3109, i64 1184, !3061, i64 1192, !3062, i64 1196, !3109, i64 1232}
!3423 = !{!"hashtable_S", !3110, i64 0, !3110, i64 8, !3110, i64 16, !3061, i64 24, !3061, i64 28, !3061, i64 32, !3109, i64 40, !3062, i64 48}
!3424 = !{!"", !3425, i64 0, !3425, i64 16, !3110, i64 32, !3110, i64 40}
!3425 = !{!"timeval", !3110, i64 0, !3110, i64 8}
!3426 = !DILocation(line: 338, column: 13, scope: !2862)
!3427 = !DILocation(line: 338, column: 20, scope: !2862)
!3428 = !{!3411, !3061, i64 7408}
!3429 = !DILocation(line: 339, column: 13, scope: !2862)
!3430 = !DILocation(line: 339, column: 20, scope: !2862)
!3431 = !{!3411, !3110, i64 7456}
!3432 = !DILocation(line: 340, column: 5, scope: !2862)
!3433 = !DILocation(line: 341, column: 23, scope: !2862)
!3434 = !DILocalVariable(name: "win", arg: 1, scope: !3435, file: !3, line: 5568, type: !1504)
!3435 = distinct !DISubprogram(name: "check_win_options", scope: !3, file: !3, line: 5568, type: !3436, isLocal: true, isDefinition: true, scopeLine: 5569, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3438)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !1504}
!3438 = !{!3434}
!3439 = !DILocation(line: 5568, column: 26, scope: !3435, inlinedAt: !3440)
!3440 = distinct !DILocation(line: 341, column: 5, scope: !2862)
!3441 = !DILocation(line: 5570, column: 24, scope: !3435, inlinedAt: !3440)
!3442 = !DILocation(line: 5570, column: 5, scope: !3435, inlinedAt: !3440)
!3443 = !DILocation(line: 5571, column: 24, scope: !3435, inlinedAt: !3440)
!3444 = !DILocation(line: 5571, column: 5, scope: !3435, inlinedAt: !3440)
!3445 = !DILocalVariable(name: "opt_idx", scope: !3446, file: !3, line: 2364, type: !1131)
!3446 = distinct !DISubprogram(name: "check_options", scope: !3, file: !3, line: 2362, type: !2735, isLocal: false, isDefinition: true, scopeLine: 2363, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3447)
!3447 = !{!3445}
!3448 = !DILocation(line: 2364, column: 10, scope: !3446, inlinedAt: !3449)
!3449 = distinct !DILocation(line: 342, column: 5, scope: !2862)
!3450 = !DILocation(line: 2366, column: 40, scope: !3451, inlinedAt: !3449)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 2366, column: 5)
!3452 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2366, column: 5)
!3453 = !{!3108, !3109, i64 0}
!3454 = !DILocation(line: 2366, column: 49, scope: !3451, inlinedAt: !3449)
!3455 = !DILocation(line: 2366, column: 5, scope: !3452, inlinedAt: !3449)
!3456 = !DILocation(line: 2367, column: 24, scope: !3457, inlinedAt: !3449)
!3457 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 2367, column: 6)
!3458 = !DILocation(line: 2367, column: 30, scope: !3457, inlinedAt: !3449)
!3459 = !DILocation(line: 2367, column: 42, scope: !3457, inlinedAt: !3449)
!3460 = !DILocation(line: 2367, column: 62, scope: !3457, inlinedAt: !3449)
!3461 = !{!3108, !3109, i64 24}
!3462 = !DILocation(line: 2367, column: 66, scope: !3457, inlinedAt: !3449)
!3463 = !DILocation(line: 2367, column: 6, scope: !3451, inlinedAt: !3449)
!3464 = !DILocation(line: 2368, column: 37, scope: !3457, inlinedAt: !3449)
!3465 = !DILocation(line: 2368, column: 26, scope: !3457, inlinedAt: !3449)
!3466 = !DILocation(line: 2368, column: 6, scope: !3457, inlinedAt: !3449)
!3467 = !DILocation(line: 2366, column: 65, scope: !3451, inlinedAt: !3449)
!3468 = !DILocation(line: 2366, column: 23, scope: !3451, inlinedAt: !3449)
!3469 = distinct !{!3469, !3470, !3471}
!3470 = !DILocation(line: 2366, column: 5, scope: !3452)
!3471 = !DILocation(line: 2368, column: 66, scope: !3452)
!3472 = !DILocation(line: 345, column: 5, scope: !2862)
!3473 = !DILocation(line: 350, column: 5, scope: !2862)
!3474 = !DILocation(line: 362, column: 10, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 362, column: 5)
!3476 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !3477, file: !3, line: 4963, type: !1131)
!3477 = distinct !DISubprogram(name: "istermoption_idx", scope: !3, file: !3, line: 4963, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4964, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1131, !1131}
!3480 = !{!3476}
!3481 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !3482)
!3482 = distinct !DILocation(line: 362, column: 24, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 362, column: 5)
!3484 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !3490)
!3485 = distinct !DISubprogram(name: "istermoption", scope: !3, file: !3, line: 4954, type: !3486, isLocal: true, isDefinition: true, scopeLine: 4955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!1131, !2848}
!3488 = !{!3489}
!3489 = !DILocalVariable(name: "p", arg: 1, scope: !3485, file: !3, line: 4954, type: !2848)
!3490 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !3482)
!3491 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !3490)
!3492 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !3490)
!3493 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !3490)
!3494 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !3490)
!3495 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !3490)
!3496 = !DILocation(line: 362, column: 5, scope: !3475)
!3497 = !DILocation(line: 364, column: 24, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 364, column: 6)
!3499 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 363, column: 5)
!3500 = !DILocation(line: 364, column: 30, scope: !3498)
!3501 = !DILocation(line: 365, column: 12, scope: !3498)
!3502 = !DILocation(line: 365, column: 32, scope: !3498)
!3503 = !DILocation(line: 365, column: 36, scope: !3498)
!3504 = !DILocation(line: 364, column: 6, scope: !3499)
!3505 = !DILocation(line: 366, column: 20, scope: !3498)
!3506 = !DILocation(line: 366, column: 6, scope: !3498)
!3507 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !3508, file: !3, line: 2267, type: !1131)
!3508 = distinct !DISubprogram(name: "option_expand", scope: !3, file: !3, line: 2267, type: !3509, isLocal: true, isDefinition: true, scopeLine: 2268, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3511)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!1124, !1131, !1124}
!3511 = !{!3507, !3512}
!3512 = !DILocalVariable(name: "val", arg: 2, scope: !3508, file: !3, line: 2267, type: !1124)
!3513 = !DILocation(line: 2267, column: 19, scope: !3508, inlinedAt: !3514)
!3514 = distinct !DILocation(line: 368, column: 10, scope: !3498)
!3515 = !DILocation(line: 2267, column: 36, scope: !3508, inlinedAt: !3514)
!3516 = !DILocation(line: 2270, column: 34, scope: !3517, inlinedAt: !3514)
!3517 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 2270, column: 9)
!3518 = !DILocation(line: 2270, column: 46, scope: !3517, inlinedAt: !3514)
!3519 = !DILocation(line: 2270, column: 66, scope: !3517, inlinedAt: !3514)
!3520 = !DILocation(line: 2270, column: 70, scope: !3517, inlinedAt: !3514)
!3521 = !DILocation(line: 2270, column: 9, scope: !3508, inlinedAt: !3514)
!3522 = !DILocation(line: 2279, column: 8, scope: !3523, inlinedAt: !3514)
!3523 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 2278, column: 9)
!3524 = !DILocation(line: 2287, column: 25, scope: !3508, inlinedAt: !3514)
!3525 = !DILocation(line: 2288, column: 38, scope: !3508, inlinedAt: !3514)
!3526 = !DILocation(line: 2290, column: 38, scope: !3508, inlinedAt: !3514)
!3527 = !DILocation(line: 2290, column: 6, scope: !3508, inlinedAt: !3514)
!3528 = !DILocation(line: 2287, column: 5, scope: !3508, inlinedAt: !3514)
!3529 = !DILocation(line: 2293, column: 9, scope: !3530, inlinedAt: !3514)
!3530 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 2293, column: 9)
!3531 = !DILocation(line: 2293, column: 31, scope: !3530, inlinedAt: !3514)
!3532 = !DILocation(line: 369, column: 8, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 369, column: 6)
!3534 = !DILocation(line: 369, column: 16, scope: !3533)
!3535 = !DILocation(line: 369, column: 24, scope: !3533)
!3536 = !DILocation(line: 369, column: 40, scope: !3533)
!3537 = !DILocation(line: 369, column: 6, scope: !3499)
!3538 = !DILocation(line: 371, column: 35, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 370, column: 2)
!3540 = !DILocation(line: 371, column: 39, scope: !3539)
!3541 = !DILocation(line: 376, column: 27, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 376, column: 10)
!3543 = !DILocation(line: 376, column: 33, scope: !3542)
!3544 = !DILocation(line: 376, column: 10, scope: !3539)
!3545 = !DILocation(line: 377, column: 12, scope: !3542)
!3546 = !DILocation(line: 377, column: 3, scope: !3542)
!3547 = !DILocation(line: 379, column: 29, scope: !3539)
!3548 = !DILocation(line: 378, column: 43, scope: !3539)
!3549 = !DILocation(line: 380, column: 2, scope: !3539)
!3550 = !DILocation(line: 362, column: 58, scope: !3483)
!3551 = !DILocation(line: 362, column: 5, scope: !3483)
!3552 = distinct !{!3552, !3496, !3553}
!3553 = !DILocation(line: 381, column: 5, scope: !3475)
!3554 = !DILocation(line: 383, column: 18, scope: !2862)
!3555 = !DILocation(line: 383, column: 5, scope: !2862)
!3556 = !DILocation(line: 391, column: 9, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 391, column: 9)
!3558 = !DILocation(line: 391, column: 40, scope: !3557)
!3559 = !DILocation(line: 391, column: 9, scope: !2862)
!3560 = !DILocation(line: 392, column: 2, scope: !3557)
!3561 = !DILocation(line: 395, column: 5, scope: !2862)
!3562 = !DILocation(line: 434, column: 9, scope: !2862)
!3563 = !DILocation(line: 435, column: 11, scope: !2883)
!3564 = !DILocation(line: 435, column: 9, scope: !2862)
!3565 = !DILocation(line: 441, column: 13, scope: !2882)
!3566 = !DILocation(line: 437, column: 10, scope: !2882)
!3567 = !DILocation(line: 442, column: 8, scope: !2882)
!3568 = !DILocation(line: 443, column: 6, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 443, column: 6)
!3570 = !DILocation(line: 443, column: 31, scope: !3569)
!3571 = !DILocation(line: 443, column: 6, scope: !2882)
!3572 = !DILocation(line: 448, column: 14, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 444, column: 2)
!3574 = !DILocation(line: 448, column: 12, scope: !3573)
!3575 = !DILocation(line: 449, column: 6, scope: !3573)
!3576 = !DILocation(line: 450, column: 2, scope: !3573)
!3577 = !DILocation(line: 451, column: 6, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 451, column: 6)
!3579 = !DILocation(line: 451, column: 16, scope: !3578)
!3580 = !DILocation(line: 451, column: 6, scope: !2882)
!3581 = !DILocation(line: 453, column: 16, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 452, column: 2)
!3583 = !DILocation(line: 454, column: 18, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 454, column: 10)
!3585 = !DILocation(line: 454, column: 10, scope: !3582)
!3586 = !DILocation(line: 456, column: 42, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 455, column: 6)
!3588 = !DILocation(line: 456, column: 3, scope: !3587)
!3589 = !DILocation(line: 456, column: 20, scope: !3587)
!3590 = !DILocation(line: 456, column: 40, scope: !3587)
!3591 = !DILocation(line: 457, column: 20, scope: !3587)
!3592 = !DILocation(line: 457, column: 26, scope: !3587)
!3593 = !DILocation(line: 458, column: 6, scope: !3587)
!3594 = !DILocation(line: 520, column: 15, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 519, column: 2)
!3596 = !DILocation(line: 520, column: 6, scope: !3595)
!3597 = !DILocation(line: 521, column: 12, scope: !3595)
!3598 = !DILocation(line: 527, column: 26, scope: !2862)
!3599 = !DILocation(line: 527, column: 5, scope: !2862)
!3600 = !DILocation(line: 529, column: 1, scope: !2862)
!3601 = !DILocation(line: 674, column: 26, scope: !3069)
!3602 = !DILocation(line: 674, column: 40, scope: !3069)
!3603 = !DILocation(line: 651, column: 30, scope: !3079, inlinedAt: !3604)
!3604 = distinct !DILocation(line: 676, column: 5, scope: !3069)
!3605 = !DILocation(line: 651, column: 44, scope: !3079, inlinedAt: !3604)
!3606 = !DILocation(line: 651, column: 53, scope: !3079, inlinedAt: !3604)
!3607 = !DILocation(line: 659, column: 6, scope: !3092, inlinedAt: !3604)
!3608 = !DILocation(line: 653, column: 13, scope: !3079, inlinedAt: !3604)
!3609 = !DILocation(line: 660, column: 11, scope: !3095, inlinedAt: !3604)
!3610 = !DILocation(line: 660, column: 9, scope: !3079, inlinedAt: !3604)
!3611 = !DILocation(line: 662, column: 12, scope: !3098, inlinedAt: !3604)
!3612 = !DILocation(line: 654, column: 10, scope: !3079, inlinedAt: !3604)
!3613 = !DILocation(line: 663, column: 14, scope: !3101, inlinedAt: !3604)
!3614 = !DILocation(line: 663, column: 6, scope: !3098, inlinedAt: !3604)
!3615 = !DILocation(line: 665, column: 10, scope: !3104, inlinedAt: !3604)
!3616 = !DILocation(line: 665, column: 27, scope: !3104, inlinedAt: !3604)
!3617 = !DILocation(line: 665, column: 33, scope: !3104, inlinedAt: !3604)
!3618 = !DILocation(line: 665, column: 10, scope: !3105, inlinedAt: !3604)
!3619 = !DILocation(line: 666, column: 12, scope: !3104, inlinedAt: !3604)
!3620 = !DILocation(line: 666, column: 3, scope: !3104, inlinedAt: !3604)
!3621 = !DILocation(line: 668, column: 29, scope: !3105, inlinedAt: !3604)
!3622 = !DILocation(line: 667, column: 43, scope: !3105, inlinedAt: !3604)
!3623 = !DILocation(line: 669, column: 2, scope: !3105, inlinedAt: !3604)
!3624 = !DILocation(line: 677, column: 1, scope: !3069)
!3625 = !DILocation(line: 3775, column: 20, scope: !2887)
!3626 = !DILocation(line: 3787, column: 9, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3787, column: 9)
!3628 = !{!3419, !3419, i64 0}
!3629 = !DILocation(line: 3787, column: 22, scope: !3627)
!3630 = !DILocation(line: 3787, column: 9, scope: !2887)
!3631 = !DILocation(line: 3778, column: 19, scope: !2887)
!3632 = !DILocation(line: 3777, column: 14, scope: !2887)
!3633 = !DILocation(line: 3790, column: 42, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 3790, column: 2)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 3790, column: 2)
!3636 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 3788, column: 5)
!3637 = !DILocation(line: 3778, column: 15, scope: !2887)
!3638 = !DILocation(line: 3790, column: 52, scope: !3634)
!3639 = !DILocation(line: 3790, column: 2, scope: !3635)
!3640 = !DILocation(line: 3789, column: 17, scope: !3636)
!3641 = !DILocation(line: 3792, column: 10, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 3792, column: 10)
!3643 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 3791, column: 2)
!3644 = !DILocation(line: 3792, column: 18, scope: !3642)
!3645 = !DILocation(line: 3792, column: 15, scope: !3642)
!3646 = !DILocation(line: 3792, column: 10, scope: !3643)
!3647 = !DILocation(line: 3794, column: 12, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 3794, column: 7)
!3649 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 3793, column: 6)
!3650 = !DILocation(line: 3794, column: 19, scope: !3648)
!3651 = !DILocation(line: 3794, column: 22, scope: !3648)
!3652 = !DILocation(line: 3794, column: 27, scope: !3648)
!3653 = !DILocation(line: 3794, column: 7, scope: !3649)
!3654 = !DILocation(line: 3795, column: 23, scope: !3648)
!3655 = !DILocation(line: 3795, column: 21, scope: !3648)
!3656 = !DILocation(line: 3795, column: 7, scope: !3648)
!3657 = !DILocation(line: 3797, column: 37, scope: !3648)
!3658 = !DILocation(line: 3797, column: 17, scope: !3648)
!3659 = !DILocation(line: 3797, column: 7, scope: !3648)
!3660 = !DILocation(line: 3797, column: 35, scope: !3648)
!3661 = !DILocation(line: 3790, column: 68, scope: !3634)
!3662 = distinct !{!3662, !3639, !3663}
!3663 = !DILocation(line: 3800, column: 2, scope: !3635)
!3664 = !DILocation(line: 3809, column: 9, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3809, column: 9)
!3666 = !DILocation(line: 3809, column: 22, scope: !3665)
!3667 = !DILocation(line: 3813, column: 27, scope: !2887)
!3668 = !DILocation(line: 3813, column: 34, scope: !2887)
!3669 = !DILocation(line: 3813, column: 37, scope: !2887)
!3670 = !DILocation(line: 3813, column: 44, scope: !2887)
!3671 = !DILocation(line: 3814, column: 9, scope: !2887)
!3672 = !DILocation(line: 3817, column: 22, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3814, column: 9)
!3674 = !DILocation(line: 3817, column: 12, scope: !3673)
!3675 = !DILocation(line: 3818, column: 18, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 3818, column: 5)
!3677 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3818, column: 5)
!3678 = !DILocation(line: 3818, column: 35, scope: !3676)
!3679 = !DILocation(line: 3818, column: 45, scope: !3676)
!3680 = !DILocation(line: 3818, column: 5, scope: !3677)
!3681 = !DILocation(line: 3820, column: 6, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 3820, column: 6)
!3683 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 3819, column: 5)
!3684 = !DILocation(line: 3820, column: 21, scope: !3682)
!3685 = !DILocation(line: 3820, column: 6, scope: !3683)
!3686 = !DILocation(line: 3818, column: 61, scope: !3676)
!3687 = distinct !{!3687, !3680, !3688}
!3688 = !DILocation(line: 3822, column: 5, scope: !3677)
!3689 = !DILocation(line: 3823, column: 19, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3823, column: 9)
!3691 = !DILocation(line: 3825, column: 22, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 3824, column: 5)
!3693 = !DILocation(line: 3825, column: 12, scope: !3692)
!3694 = !DILocation(line: 3826, column: 10, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 3826, column: 2)
!3696 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 3826, column: 2)
!3697 = !DILocation(line: 3826, column: 27, scope: !3695)
!3698 = !DILocation(line: 3826, column: 36, scope: !3695)
!3699 = !DILocation(line: 3826, column: 2, scope: !3696)
!3700 = !DILocation(line: 3828, column: 27, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 3827, column: 2)
!3702 = !{!3108, !3109, i64 8}
!3703 = !DILocation(line: 3829, column: 12, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 3829, column: 10)
!3705 = !DILocation(line: 3829, column: 20, scope: !3704)
!3706 = !DILocation(line: 3829, column: 23, scope: !3704)
!3707 = !DILocation(line: 3829, column: 38, scope: !3704)
!3708 = !DILocation(line: 3829, column: 10, scope: !3701)
!3709 = !DILocation(line: 3826, column: 52, scope: !3695)
!3710 = distinct !{!3710, !3699, !3711}
!3711 = !DILocation(line: 3832, column: 2, scope: !3696)
!3712 = !DILocation(line: 3834, column: 11, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 3834, column: 9)
!3714 = !DILocation(line: 3834, column: 9, scope: !2887)
!3715 = !DILocation(line: 3836, column: 5, scope: !2887)
!3716 = !DILocation(line: 3837, column: 1, scope: !2887)
!3717 = distinct !DISubprogram(name: "find_dup_item", scope: !3, file: !3, line: 684, type: !3718, isLocal: true, isDefinition: true, scopeLine: 685, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3720)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{!1124, !1124, !1124, !1309}
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726}
!3721 = !DILocalVariable(name: "origval", arg: 1, scope: !3717, file: !3, line: 684, type: !1124)
!3722 = !DILocalVariable(name: "newval", arg: 2, scope: !3717, file: !3, line: 684, type: !1124)
!3723 = !DILocalVariable(name: "flags", arg: 3, scope: !3717, file: !3, line: 684, type: !1309)
!3724 = !DILocalVariable(name: "bs", scope: !3717, file: !3, line: 686, type: !1131)
!3725 = !DILocalVariable(name: "newlen", scope: !3717, file: !3, line: 687, type: !1136)
!3726 = !DILocalVariable(name: "s", scope: !3717, file: !3, line: 688, type: !1124)
!3727 = !DILocation(line: 684, column: 23, scope: !3717)
!3728 = !DILocation(line: 684, column: 40, scope: !3717)
!3729 = !DILocation(line: 684, column: 55, scope: !3717)
!3730 = !DILocation(line: 686, column: 13, scope: !3717)
!3731 = !DILocation(line: 690, column: 17, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 690, column: 9)
!3733 = !DILocation(line: 690, column: 9, scope: !3717)
!3734 = !DILocation(line: 693, column: 14, scope: !3717)
!3735 = !DILocation(line: 687, column: 13, scope: !3717)
!3736 = !DILocation(line: 688, column: 14, scope: !3717)
!3737 = !DILocation(line: 694, column: 23, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 694, column: 5)
!3739 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 694, column: 5)
!3740 = !DILocation(line: 694, column: 26, scope: !3738)
!3741 = !DILocation(line: 694, column: 5, scope: !3739)
!3742 = !DILocation(line: 697, column: 12, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 696, column: 6)
!3744 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 695, column: 5)
!3745 = !DILocation(line: 697, column: 7, scope: !3743)
!3746 = !DILocation(line: 698, column: 11, scope: !3743)
!3747 = !DILocation(line: 698, column: 17, scope: !3743)
!3748 = !DILocation(line: 698, column: 32, scope: !3743)
!3749 = !DILocation(line: 698, column: 24, scope: !3743)
!3750 = !DILocation(line: 699, column: 6, scope: !3743)
!3751 = !DILocation(line: 699, column: 33, scope: !3743)
!3752 = !DILocation(line: 700, column: 3, scope: !3743)
!3753 = !DILocation(line: 701, column: 7, scope: !3743)
!3754 = !DILocation(line: 701, column: 10, scope: !3743)
!3755 = !DILocation(line: 702, column: 7, scope: !3743)
!3756 = !DILocation(line: 707, column: 9, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 707, column: 6)
!3758 = !DILocation(line: 708, column: 7, scope: !3757)
!3759 = !DILocation(line: 708, column: 10, scope: !3757)
!3760 = !DILocation(line: 708, column: 16, scope: !3757)
!3761 = !DILocation(line: 709, column: 7, scope: !3757)
!3762 = !DILocation(line: 709, column: 10, scope: !3757)
!3763 = !DILocation(line: 709, column: 16, scope: !3757)
!3764 = !DILocation(line: 710, column: 3, scope: !3757)
!3765 = !DILocation(line: 710, column: 9, scope: !3757)
!3766 = !DILocation(line: 711, column: 7, scope: !3757)
!3767 = !DILocation(line: 711, column: 10, scope: !3757)
!3768 = !DILocation(line: 711, column: 16, scope: !3757)
!3769 = !DILocation(line: 707, column: 6, scope: !3744)
!3770 = !DILocation(line: 712, column: 6, scope: !3757)
!3771 = !DILocation(line: 694, column: 34, scope: !3738)
!3772 = distinct !{!3772, !3741, !3773}
!3773 = !DILocation(line: 715, column: 5, scope: !3739)
!3774 = !DILocation(line: 717, column: 1, scope: !3717)
!3775 = distinct !DISubprogram(name: "set_options_default", scope: !3, file: !3, line: 619, type: !2863, isLocal: true, isDefinition: true, scopeLine: 621, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3776)
!3776 = !{!3777, !3778, !3779, !3780}
!3777 = !DILocalVariable(name: "opt_flags", arg: 1, scope: !3775, file: !3, line: 620, type: !1131)
!3778 = !DILocalVariable(name: "i", scope: !3775, file: !3, line: 622, type: !1131)
!3779 = !DILocalVariable(name: "wp", scope: !3775, file: !3, line: 623, type: !1504)
!3780 = !DILocalVariable(name: "tp", scope: !3775, file: !3, line: 624, type: !3781)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_typedef, name: "tabpage_T", file: !6, line: 3158, baseType: !3783)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tabpage_S", file: !6, line: 3159, size: 1920, elements: !3784)
!3784 = !{!3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3799, !3800, !3801, !3810, !3812, !3813, !3814, !3816, !3817}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "tp_next", scope: !3783, file: !6, line: 3161, baseType: !3781, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "tp_topframe", scope: !3783, file: !6, line: 3162, baseType: !1677, size: 64, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "tp_curwin", scope: !3783, file: !6, line: 3163, baseType: !1504, size: 64, offset: 128)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prevwin", scope: !3783, file: !6, line: 3164, baseType: !1504, size: 64, offset: 192)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "tp_firstwin", scope: !3783, file: !6, line: 3165, baseType: !1504, size: 64, offset: 256)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "tp_lastwin", scope: !3783, file: !6, line: 3166, baseType: !1504, size: 64, offset: 320)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "tp_first_popupwin", scope: !3783, file: !6, line: 3168, baseType: !1504, size: 64, offset: 384)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "tp_old_Rows", scope: !3783, file: !6, line: 3170, baseType: !1130, size: 64, offset: 448)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "tp_old_Columns", scope: !3783, file: !6, line: 3171, baseType: !1130, size: 64, offset: 512)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "tp_ch_used", scope: !3783, file: !6, line: 3172, baseType: !1130, size: 64, offset: 576)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prev_which_scrollbars", scope: !3783, file: !6, line: 3175, baseType: !3796, size: 96, offset: 640)
!3796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 96, elements: !3797)
!3797 = !{!3798}
!3798 = !DISubrange(count: 3)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "tp_localdir", scope: !3783, file: !6, line: 3179, baseType: !1124, size: 64, offset: 768)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "tp_prevdir", scope: !3783, file: !6, line: 3181, baseType: !1124, size: 64, offset: 832)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "tp_first_diff", scope: !3783, file: !6, line: 3184, baseType: !3802, size: 64, offset: 896)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_typedef, name: "diff_T", file: !6, line: 3139, baseType: !3804)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "diffblock_S", file: !6, line: 3140, size: 1088, elements: !3805)
!3805 = !{!3806, !3807, !3809}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "df_next", scope: !3804, file: !6, line: 3142, baseType: !3802, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "df_lnum", scope: !3804, file: !6, line: 3143, baseType: !3808, size: 512, offset: 64)
!3808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 512, elements: !1423)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "df_count", scope: !3804, file: !6, line: 3144, baseType: !3808, size: 512, offset: 576)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diffbuf", scope: !3783, file: !6, line: 3185, baseType: !3811, size: 512, offset: 960)
!3811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1358, size: 512, elements: !1423)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diff_invalid", scope: !3783, file: !6, line: 3186, baseType: !1131, size: 32, offset: 1472)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "tp_diff_update", scope: !3783, file: !6, line: 3187, baseType: !1131, size: 32, offset: 1504)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "tp_snapshot", scope: !3783, file: !6, line: 3189, baseType: !3815, size: 128, offset: 1536)
!3815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1677, size: 128, elements: !2308)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "tp_winvar", scope: !3783, file: !6, line: 3191, baseType: !2199, size: 192, offset: 1664)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vars", scope: !3783, file: !6, line: 3192, baseType: !1296, size: 64, offset: 1856)
!3818 = !DILocation(line: 620, column: 10, scope: !3775)
!3819 = !DILocation(line: 622, column: 10, scope: !3775)
!3820 = !DILocation(line: 626, column: 10, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 626, column: 5)
!3822 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !3823)
!3823 = distinct !DILocation(line: 626, column: 18, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 626, column: 5)
!3825 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !3826)
!3826 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !3823)
!3827 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !3826)
!3828 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !3826)
!3829 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !3826)
!3830 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !3826)
!3831 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !3826)
!3832 = !DILocation(line: 626, column: 5, scope: !3821)
!3833 = !DILocation(line: 627, column: 19, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 627, column: 6)
!3835 = !DILocation(line: 627, column: 25, scope: !3834)
!3836 = !DILocation(line: 628, column: 3, scope: !3834)
!3837 = !DILocation(line: 629, column: 7, scope: !3834)
!3838 = !DILocation(line: 629, column: 22, scope: !3834)
!3839 = !DILocation(line: 629, column: 26, scope: !3834)
!3840 = !DILocation(line: 631, column: 22, scope: !3834)
!3841 = !DILocation(line: 631, column: 4, scope: !3834)
!3842 = !DILocation(line: 632, column: 22, scope: !3834)
!3843 = !DILocation(line: 635, column: 39, scope: !3834)
!3844 = !DILocation(line: 635, column: 6, scope: !3834)
!3845 = !DILocation(line: 626, column: 40, scope: !3824)
!3846 = !DILocation(line: 626, column: 5, scope: !3824)
!3847 = distinct !{!3847, !3832, !3848}
!3848 = !DILocation(line: 635, column: 43, scope: !3821)
!3849 = !DILocation(line: 624, column: 16, scope: !3775)
!3850 = !DILocation(line: 638, column: 5, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 638, column: 5)
!3852 = !DILocation(line: 638, column: 5, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 638, column: 5)
!3854 = !DILocation(line: 638, column: 5, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 638, column: 5)
!3856 = !DILocation(line: 623, column: 12, scope: !3775)
!3857 = !DILocation(line: 639, column: 2, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 638, column: 5)
!3859 = !DILocation(line: 638, column: 5, scope: !3858)
!3860 = distinct !{!3860, !3854, !3861}
!3861 = !DILocation(line: 639, column: 20, scope: !3855)
!3862 = distinct !{!3862, !3850, !3863}
!3863 = !DILocation(line: 639, column: 20, scope: !3851)
!3864 = !DILocation(line: 641, column: 16, scope: !3775)
!3865 = !DILocation(line: 641, column: 5, scope: !3775)
!3866 = !DILocation(line: 643, column: 1, scope: !3775)
!3867 = distinct !DISubprogram(name: "set_option_value", scope: !3, file: !3, line: 4219, type: !3868, isLocal: false, isDefinition: true, scopeLine: 4224, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!1127, !1124, !1130, !1124, !1131}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3881, !3885}
!3871 = !DILocalVariable(name: "name", arg: 1, scope: !3867, file: !3, line: 4220, type: !1124)
!3872 = !DILocalVariable(name: "number", arg: 2, scope: !3867, file: !3, line: 4221, type: !1130)
!3873 = !DILocalVariable(name: "string", arg: 3, scope: !3867, file: !3, line: 4222, type: !1124)
!3874 = !DILocalVariable(name: "opt_flags", arg: 4, scope: !3867, file: !3, line: 4223, type: !1131)
!3875 = !DILocalVariable(name: "opt_idx", scope: !3867, file: !3, line: 4225, type: !1131)
!3876 = !DILocalVariable(name: "varp", scope: !3867, file: !3, line: 4226, type: !1124)
!3877 = !DILocalVariable(name: "flags", scope: !3867, file: !3, line: 4227, type: !1309)
!3878 = !DILocalVariable(name: "key", scope: !3879, file: !3, line: 4232, type: !1131)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 4231, column: 5)
!3880 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 4230, column: 9)
!3881 = !DILocalVariable(name: "key_name", scope: !3882, file: !3, line: 4237, type: !3884)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 4236, column: 2)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 4234, column: 6)
!3884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 16, elements: !2308)
!3885 = !DILocalVariable(name: "idx", scope: !3886, file: !3, line: 4278, type: !1131)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 4277, column: 3)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 4276, column: 7)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 4275, column: 6)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 4274, column: 10)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 4272, column: 2)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 4269, column: 6)
!3892 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 4259, column: 5)
!3893 = !DILocation(line: 4220, column: 13, scope: !3867)
!3894 = !DILocation(line: 4221, column: 10, scope: !3867)
!3895 = !DILocation(line: 4222, column: 13, scope: !3867)
!3896 = !DILocation(line: 4223, column: 10, scope: !3867)
!3897 = !DILocation(line: 4229, column: 15, scope: !3867)
!3898 = !DILocation(line: 4225, column: 10, scope: !3867)
!3899 = !DILocation(line: 4230, column: 17, scope: !3880)
!3900 = !DILocation(line: 4230, column: 9, scope: !3867)
!3901 = !DILocation(line: 4234, column: 6, scope: !3883)
!3902 = !DILocation(line: 4234, column: 19, scope: !3883)
!3903 = !DILocation(line: 4234, column: 24, scope: !3883)
!3904 = !DILocation(line: 4234, column: 27, scope: !3883)
!3905 = !DILocation(line: 4234, column: 35, scope: !3883)
!3906 = !DILocation(line: 4234, column: 42, scope: !3883)
!3907 = !DILocation(line: 4234, column: 45, scope: !3883)
!3908 = !DILocation(line: 4234, column: 53, scope: !3883)
!3909 = !DILocation(line: 4235, column: 3, scope: !3883)
!3910 = !DILocalVariable(name: "arg_arg", arg: 1, scope: !3911, file: !3, line: 4358, type: !1124)
!3911 = distinct !DISubprogram(name: "find_key_option", scope: !3, file: !3, line: 4358, type: !3912, isLocal: true, isDefinition: true, scopeLine: 4359, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !3914)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!1131, !1124, !1131}
!3914 = !{!3910, !3915, !3916, !3917, !3918}
!3915 = !DILocalVariable(name: "has_lt", arg: 2, scope: !3911, file: !3, line: 4358, type: !1131)
!3916 = !DILocalVariable(name: "key", scope: !3911, file: !3, line: 4360, type: !1131)
!3917 = !DILocalVariable(name: "modifiers", scope: !3911, file: !3, line: 4361, type: !1131)
!3918 = !DILocalVariable(name: "arg", scope: !3911, file: !3, line: 4362, type: !1124)
!3919 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !3920)
!3920 = distinct !DILocation(line: 4235, column: 13, scope: !3883)
!3921 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !3920)
!3922 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !3920)
!3923 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !3920)
!3924 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !3920)
!3925 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 4368, column: 9)
!3926 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !3920)
!3927 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !3920)
!3928 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !3920)
!3929 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !3920)
!3930 = !DILocation(line: 4235, column: 43, scope: !3883)
!3931 = !DILocation(line: 4234, column: 6, scope: !3879)
!3932 = !DILocation(line: 4237, column: 6, scope: !3882)
!3933 = !DILocation(line: 4237, column: 13, scope: !3882)
!3934 = !DILocation(line: 4241, column: 15, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 4240, column: 6)
!3936 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 4239, column: 10)
!3937 = !DILocation(line: 4242, column: 3, scope: !3935)
!3938 = !DILocation(line: 4242, column: 15, scope: !3935)
!3939 = !DILocation(line: 4249, column: 6, scope: !3882)
!3940 = !DILocation(line: 4250, column: 10, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 4250, column: 10)
!3942 = !DILocation(line: 4250, column: 10, scope: !3882)
!3943 = !DILocation(line: 4251, column: 3, scope: !3941)
!3944 = !DILocation(line: 4252, column: 6, scope: !3882)
!3945 = !DILocation(line: 4254, column: 2, scope: !3883)
!3946 = !DILocation(line: 4256, column: 8, scope: !3879)
!3947 = !DILocation(line: 4256, column: 2, scope: !3879)
!3948 = !DILocation(line: 4260, column: 10, scope: !3892)
!3949 = !DILocation(line: 4260, column: 27, scope: !3892)
!3950 = !DILocation(line: 4227, column: 12, scope: !3867)
!3951 = !DILocation(line: 4263, column: 6, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 4263, column: 6)
!3953 = !DILocation(line: 4263, column: 14, scope: !3952)
!3954 = !DILocation(line: 4263, column: 28, scope: !3952)
!3955 = !DILocation(line: 4263, column: 18, scope: !3952)
!3956 = !DILocation(line: 4265, column: 11, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 4264, column: 2)
!3958 = !DILocation(line: 4265, column: 6, scope: !3957)
!3959 = !DILocation(line: 4266, column: 6, scope: !3957)
!3960 = !DILocation(line: 4269, column: 12, scope: !3891)
!3961 = !DILocation(line: 4269, column: 6, scope: !3892)
!3962 = !DILocation(line: 4270, column: 13, scope: !3891)
!3963 = !DILocation(line: 4270, column: 6, scope: !3891)
!3964 = !DILocation(line: 4273, column: 13, scope: !3890)
!3965 = !DILocation(line: 4226, column: 13, scope: !3867)
!3966 = !DILocation(line: 4274, column: 15, scope: !3889)
!3967 = !DILocation(line: 4274, column: 10, scope: !3890)
!3968 = !DILocation(line: 4276, column: 14, scope: !3887)
!3969 = !DILocation(line: 4276, column: 29, scope: !3887)
!3970 = !DILocation(line: 4276, column: 19, scope: !3887)
!3971 = !DILocation(line: 4282, column: 21, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 4282, column: 7)
!3973 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 4282, column: 7)
!3974 = !DILocation(line: 4278, column: 11, scope: !3886)
!3975 = !DILocation(line: 4282, column: 33, scope: !3972)
!3976 = !DILocation(line: 4282, column: 41, scope: !3972)
!3977 = !DILocation(line: 4282, column: 7, scope: !3973)
!3978 = distinct !{!3978, !3977, !3979}
!3979 = !DILocation(line: 4283, column: 4, scope: !3973)
!3980 = !DILocation(line: 4284, column: 23, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 4284, column: 11)
!3982 = !DILocation(line: 4284, column: 37, scope: !3981)
!3983 = !DILocation(line: 4284, column: 30, scope: !3981)
!3984 = !DILocation(line: 4289, column: 10, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 4285, column: 7)
!3986 = !DILocation(line: 4289, column: 4, scope: !3985)
!3987 = !DILocation(line: 4295, column: 13, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 4295, column: 7)
!3989 = !DILocation(line: 4295, column: 7, scope: !3888)
!3990 = !DILocation(line: 4296, column: 14, scope: !3988)
!3991 = !DILocation(line: 4296, column: 7, scope: !3988)
!3992 = !DILocation(line: 4299, column: 45, scope: !3988)
!3993 = !DILocation(line: 4299, column: 14, scope: !3988)
!3994 = !DILocation(line: 4299, column: 7, scope: !3988)
!3995 = !DILocation(line: 4305, column: 1, scope: !3867)
!3996 = !DILocation(line: 2364, column: 10, scope: !3446)
!3997 = !DILocation(line: 2366, column: 40, scope: !3451)
!3998 = !DILocation(line: 2366, column: 49, scope: !3451)
!3999 = !DILocation(line: 2367, column: 24, scope: !3457)
!4000 = !DILocation(line: 2367, column: 30, scope: !3457)
!4001 = !DILocation(line: 2367, column: 42, scope: !3457)
!4002 = !DILocation(line: 2367, column: 62, scope: !3457)
!4003 = !DILocation(line: 2367, column: 66, scope: !3457)
!4004 = !DILocation(line: 2367, column: 6, scope: !3451)
!4005 = !DILocation(line: 2368, column: 37, scope: !3457)
!4006 = !DILocation(line: 2368, column: 26, scope: !3457)
!4007 = !DILocation(line: 2368, column: 6, scope: !3457)
!4008 = !DILocation(line: 2366, column: 65, scope: !3451)
!4009 = !DILocation(line: 2366, column: 23, scope: !3451)
!4010 = !DILocation(line: 2369, column: 1, scope: !3446)
!4011 = distinct !DISubprogram(name: "didset_options", scope: !3, file: !3, line: 2304, type: !2735, isLocal: true, isDefinition: true, scopeLine: 2305, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!4012 = !{}
!4013 = !DILocation(line: 2307, column: 11, scope: !4011)
!4014 = !DILocation(line: 2309, column: 5, scope: !4011)
!4015 = !DILocation(line: 2312, column: 11, scope: !4011)
!4016 = !DILocation(line: 2313, column: 11, scope: !4011)
!4017 = !DILocation(line: 2314, column: 28, scope: !4011)
!4018 = !DILocation(line: 2314, column: 36, scope: !4011)
!4019 = !{!4020, !3109, i64 32}
!4020 = !{!"window_S", !3061, i64 0, !3109, i64 8, !3109, i64 16, !3109, i64 24, !3109, i64 32, !3061, i64 40, !3109, i64 48, !3417, i64 56, !3061, i64 72, !3061, i64 76, !3110, i64 80, !3062, i64 88, !3110, i64 96, !3061, i64 104, !3061, i64 108, !3110, i64 112, !3061, i64 120, !3061, i64 124, !4021, i64 128, !3110, i64 176, !3062, i64 184, !3110, i64 192, !3061, i64 200, !3061, i64 204, !3061, i64 208, !3061, i64 212, !3061, i64 216, !3061, i64 220, !3061, i64 224, !3061, i64 228, !3061, i64 232, !3061, i64 236, !3061, i64 240, !3061, i64 244, !3061, i64 248, !3061, i64 252, !4022, i64 256, !3061, i64 296, !3061, i64 300, !3109, i64 304, !3062, i64 312, !3061, i64 316, !3061, i64 320, !3109, i64 328, !3061, i64 336, !3061, i64 340, !3061, i64 344, !3061, i64 348, !3061, i64 352, !3061, i64 356, !3061, i64 360, !3061, i64 364, !3061, i64 368, !3061, i64 372, !3061, i64 376, !3061, i64 380, !3109, i64 384, !3109, i64 392, !3062, i64 400, !3062, i64 416, !3062, i64 432, !3062, i64 464, !3061, i64 496, !3061, i64 500, !3415, i64 504, !3415, i64 512, !3061, i64 520, !3110, i64 528, !3421, i64 536, !3421, i64 560, !3061, i64 584, !3061, i64 588, !3109, i64 592, !3110, i64 600, !3061, i64 608, !3061, i64 612, !3061, i64 616, !3061, i64 620, !3061, i64 624, !3062, i64 628, !3109, i64 632, !3109, i64 640, !3061, i64 648, !3061, i64 652, !3109, i64 656, !3061, i64 664, !3061, i64 668, !3417, i64 672, !3061, i64 688, !3061, i64 692, !3061, i64 696, !3061, i64 700, !3061, i64 704, !3061, i64 708, !3061, i64 712, !3061, i64 716, !3109, i64 720, !3218, i64 728, !3062, i64 752, !3062, i64 753, !3061, i64 756, !3061, i64 760, !3061, i64 764, !3110, i64 768, !3110, i64 776, !3061, i64 784, !3417, i64 792, !3061, i64 808, !3110, i64 816, !3110, i64 824, !3061, i64 832, !3062, i64 836, !3061, i64 840, !3109, i64 848, !3061, i64 856, !3061, i64 860, !3109, i64 864, !3109, i64 872, !3109, i64 880, !3109, i64 888, !3061, i64 896, !4023, i64 904, !4023, i64 2280, !3110, i64 3656, !3110, i64 3664, !3110, i64 3672, !3109, i64 3680, !3062, i64 3688, !3110, i64 3696, !3110, i64 3704, !3061, i64 3712, !3061, i64 3716, !3061, i64 3720, !3110, i64 3728, !3420, i64 3736, !3109, i64 3760, !3417, i64 3768, !3417, i64 3784, !3062, i64 3800, !3061, i64 7800, !3061, i64 7804, !3061, i64 7808, !3109, i64 7816, !3061, i64 7824, !3062, i64 7832, !3061, i64 8792, !3061, i64 8796, !3061, i64 8800, !3061, i64 8804, !3062, i64 8808, !3110, i64 8968, !3110, i64 8976, !3061, i64 8984, !3109, i64 8992, !3109, i64 9000}
!4021 = !{!"", !3061, i64 0, !3061, i64 4, !3061, i64 8, !3061, i64 12, !3061, i64 16, !3061, i64 20, !3061, i64 24, !3061, i64 28, !3061, i64 32, !3061, i64 36, !3061, i64 40}
!4022 = !{!"", !3061, i64 0, !3061, i64 4, !3417, i64 8, !3417, i64 24}
!4023 = !{!"", !3061, i64 0, !3061, i64 4, !3109, i64 8, !3109, i64 16, !3061, i64 24, !3110, i64 32, !3061, i64 40, !3061, i64 44, !3061, i64 48, !3109, i64 56, !3110, i64 64, !3061, i64 72, !3109, i64 80, !3109, i64 88, !3110, i64 96, !3110, i64 104, !3109, i64 112, !3109, i64 120, !3109, i64 128, !3061, i64 136, !3061, i64 140, !3109, i64 144, !3061, i64 152, !3061, i64 156, !3110, i64 160, !3061, i64 168, !3061, i64 172, !3061, i64 176, !3061, i64 180, !3109, i64 184, !3110, i64 192, !3061, i64 200, !3061, i64 204, !3061, i64 208, !3109, i64 216, !3109, i64 224, !3109, i64 232, !3109, i64 240, !3061, i64 248, !3061, i64 252, !3061, i64 256, !3061, i64 260, !3061, i64 264, !3109, i64 272, !3110, i64 280, !3061, i64 288, !3061, i64 292, !3109, i64 296, !3109, i64 304, !3109, i64 312, !3062, i64 320}
!4024 = !DILocation(line: 2314, column: 11, scope: !4011)
!4025 = !DILocation(line: 2315, column: 11, scope: !4011)
!4026 = !DILocation(line: 2319, column: 11, scope: !4011)
!4027 = !DILocalVariable(name: "i", scope: !4028, file: !3, line: 6865, type: !1131)
!4028 = distinct !DISubprogram(name: "fill_breakat_flags", scope: !3, file: !3, line: 6862, type: !2735, isLocal: false, isDefinition: true, scopeLine: 6863, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4029)
!4029 = !{!4030, !4027}
!4030 = !DILocalVariable(name: "p", scope: !4028, file: !3, line: 6864, type: !1124)
!4031 = !DILocation(line: 6865, column: 10, scope: !4028, inlinedAt: !4032)
!4032 = distinct !DILocation(line: 2323, column: 5, scope: !4011)
!4033 = !DILocation(line: 6868, column: 19, scope: !4034, inlinedAt: !4032)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 6867, column: 5)
!4035 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 6867, column: 5)
!4036 = !DILocation(line: 6870, column: 9, scope: !4037, inlinedAt: !4032)
!4037 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 6870, column: 9)
!4038 = !DILocation(line: 6870, column: 19, scope: !4037, inlinedAt: !4032)
!4039 = !DILocation(line: 6870, column: 9, scope: !4028, inlinedAt: !4032)
!4040 = !DILocation(line: 6864, column: 13, scope: !4028, inlinedAt: !4032)
!4041 = !DILocation(line: 6871, column: 22, scope: !4042, inlinedAt: !4032)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 6871, column: 2)
!4043 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 6871, column: 2)
!4044 = !DILocation(line: 6871, column: 2, scope: !4043, inlinedAt: !4032)
!4045 = !DILocation(line: 6872, column: 6, scope: !4042, inlinedAt: !4032)
!4046 = !DILocation(line: 6872, column: 24, scope: !4042, inlinedAt: !4032)
!4047 = !DILocation(line: 6871, column: 27, scope: !4042, inlinedAt: !4032)
!4048 = distinct !{!4048, !4049, !4050}
!4049 = !DILocation(line: 6871, column: 2, scope: !4043)
!4050 = !DILocation(line: 6872, column: 26, scope: !4043)
!4051 = !DILocation(line: 2325, column: 23, scope: !4011)
!4052 = !DILocalVariable(name: "wp", arg: 1, scope: !4053, file: !3, line: 5457, type: !1504)
!4053 = distinct !DISubprogram(name: "after_copy_winopt", scope: !3, file: !3, line: 5457, type: !3436, isLocal: false, isDefinition: true, scopeLine: 5458, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4054)
!4054 = !{!4052}
!4055 = !DILocation(line: 5457, column: 26, scope: !4053, inlinedAt: !4056)
!4056 = distinct !DILocation(line: 2325, column: 5, scope: !4011)
!4057 = !DILocation(line: 5460, column: 5, scope: !4053, inlinedAt: !4056)
!4058 = !DILocation(line: 5463, column: 5, scope: !4053, inlinedAt: !4056)
!4059 = !DILocation(line: 5464, column: 5, scope: !4053, inlinedAt: !4056)
!4060 = !DILocation(line: 5466, column: 31, scope: !4053, inlinedAt: !4056)
!4061 = !DILocation(line: 5466, column: 5, scope: !4053, inlinedAt: !4056)
!4062 = !DILocation(line: 2326, column: 1, scope: !4011)
!4063 = !DILocation(line: 4963, column: 22, scope: !3477)
!4064 = !DILocation(line: 4965, column: 26, scope: !3477)
!4065 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !4066)
!4066 = distinct !DILocation(line: 4965, column: 12, scope: !3477)
!4067 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !4066)
!4068 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !4066)
!4069 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !4066)
!4070 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !4066)
!4071 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !4066)
!4072 = !DILocation(line: 4965, column: 5, scope: !3477)
!4073 = distinct !DISubprogram(name: "didset_options2", scope: !3, file: !3, line: 2332, type: !2735, isLocal: true, isDefinition: true, scopeLine: 2333, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!4074 = !DILocation(line: 2335, column: 11, scope: !4073)
!4075 = !DILocation(line: 2338, column: 5, scope: !4073)
!4076 = !DILocation(line: 2341, column: 28, scope: !4073)
!4077 = !DILocation(line: 2341, column: 45, scope: !4073)
!4078 = !DILocation(line: 2341, column: 11, scope: !4073)
!4079 = !DILocation(line: 2344, column: 28, scope: !4073)
!4080 = !DILocation(line: 2344, column: 11, scope: !4073)
!4081 = !DILocation(line: 2348, column: 11, scope: !4073)
!4082 = !DILocation(line: 2351, column: 14, scope: !4073)
!4083 = !DILocation(line: 2351, column: 22, scope: !4073)
!4084 = !{!3411, !3109, i64 7328}
!4085 = !DILocation(line: 2351, column: 5, scope: !4073)
!4086 = !DILocation(line: 2352, column: 17, scope: !4073)
!4087 = !DILocation(line: 2352, column: 25, scope: !4073)
!4088 = !{!3411, !3109, i64 7320}
!4089 = !DILocation(line: 2352, column: 44, scope: !4073)
!4090 = !DILocation(line: 2352, column: 5, scope: !4073)
!4091 = !DILocation(line: 2353, column: 14, scope: !4073)
!4092 = !DILocation(line: 2353, column: 22, scope: !4073)
!4093 = !{!3411, !3109, i64 7352}
!4094 = !DILocation(line: 2353, column: 5, scope: !4073)
!4095 = !DILocation(line: 2354, column: 17, scope: !4073)
!4096 = !DILocation(line: 2354, column: 25, scope: !4073)
!4097 = !{!3411, !3109, i64 7344}
!4098 = !DILocation(line: 2354, column: 44, scope: !4073)
!4099 = !DILocation(line: 2354, column: 5, scope: !4073)
!4100 = !DILocation(line: 2356, column: 1, scope: !4073)
!4101 = distinct !DISubprogram(name: "set_helplang_default", scope: !3, file: !3, line: 1037, type: !4102, isLocal: false, isDefinition: true, scopeLine: 1038, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{null, !1124}
!4104 = !{!4105, !4106}
!4105 = !DILocalVariable(name: "lang", arg: 1, scope: !4101, file: !3, line: 1037, type: !1124)
!4106 = !DILocalVariable(name: "idx", scope: !4101, file: !3, line: 1039, type: !1131)
!4107 = !DILocation(line: 1037, column: 30, scope: !4101)
!4108 = !DILocation(line: 1041, column: 14, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1041, column: 9)
!4110 = !DILocation(line: 1041, column: 22, scope: !4109)
!4111 = !DILocation(line: 1041, column: 25, scope: !4109)
!4112 = !DILocation(line: 1041, column: 38, scope: !4109)
!4113 = !DILocation(line: 1041, column: 9, scope: !4101)
!4114 = !DILocation(line: 1043, column: 11, scope: !4101)
!4115 = !DILocation(line: 1039, column: 10, scope: !4101)
!4116 = !DILocation(line: 1044, column: 13, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1044, column: 9)
!4118 = !DILocation(line: 1044, column: 18, scope: !4117)
!4119 = !DILocation(line: 1044, column: 23, scope: !4117)
!4120 = !DILocation(line: 1044, column: 36, scope: !4117)
!4121 = !DILocation(line: 1044, column: 42, scope: !4117)
!4122 = !DILocation(line: 1044, column: 9, scope: !4101)
!4123 = !DILocation(line: 1046, column: 25, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1046, column: 6)
!4125 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1045, column: 5)
!4126 = !DILocation(line: 1046, column: 6, scope: !4125)
!4127 = !DILocation(line: 1047, column: 25, scope: !4124)
!4128 = !DILocation(line: 1047, column: 6, scope: !4124)
!4129 = !DILocation(line: 1048, column: 10, scope: !4125)
!4130 = !DILocation(line: 1048, column: 8, scope: !4125)
!4131 = !DILocation(line: 1049, column: 12, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1049, column: 6)
!4133 = !DILocation(line: 1049, column: 6, scope: !4125)
!4134 = !DILocation(line: 1050, column: 14, scope: !4132)
!4135 = !DILocation(line: 1050, column: 12, scope: !4132)
!4136 = !DILocation(line: 1050, column: 6, scope: !4132)
!4137 = !DILocation(line: 1054, column: 10, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1054, column: 10)
!4139 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1052, column: 2)
!4140 = !DILocation(line: 1054, column: 36, scope: !4138)
!4141 = !DILocation(line: 1054, column: 41, scope: !4138)
!4142 = !DILocation(line: 1054, column: 44, scope: !4138)
!4143 = !DILocation(line: 1054, column: 58, scope: !4138)
!4144 = !DILocation(line: 1054, column: 10, scope: !4139)
!4145 = !DILocation(line: 1056, column: 14, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1055, column: 6)
!4147 = !DILocation(line: 1056, column: 12, scope: !4146)
!4148 = !DILocation(line: 1057, column: 14, scope: !4146)
!4149 = !DILocation(line: 1058, column: 6, scope: !4146)
!4150 = !DILocation(line: 1060, column: 15, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1060, column: 15)
!4152 = !DILocation(line: 1060, column: 34, scope: !4151)
!4153 = !DILocation(line: 1062, column: 12, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 1061, column: 6)
!4155 = !DILocation(line: 1063, column: 3, scope: !4154)
!4156 = !DILocation(line: 1064, column: 6, scope: !4154)
!4157 = !DILocation(line: 1065, column: 6, scope: !4139)
!4158 = !DILocation(line: 1065, column: 15, scope: !4139)
!4159 = !DILocation(line: 1067, column: 21, scope: !4125)
!4160 = !DILocation(line: 1068, column: 5, scope: !4125)
!4161 = !DILocation(line: 1069, column: 1, scope: !4101)
!4162 = distinct !DISubprogram(name: "set_number_default", scope: !3, file: !3, line: 724, type: !4163, isLocal: false, isDefinition: true, scopeLine: 725, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4165)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{null, !1127, !1130}
!4165 = !{!4166, !4167, !4168}
!4166 = !DILocalVariable(name: "name", arg: 1, scope: !4162, file: !3, line: 724, type: !1127)
!4167 = !DILocalVariable(name: "val", arg: 2, scope: !4162, file: !3, line: 724, type: !1130)
!4168 = !DILocalVariable(name: "opt_idx", scope: !4162, file: !3, line: 726, type: !1131)
!4169 = !DILocation(line: 724, column: 26, scope: !4162)
!4170 = !DILocation(line: 724, column: 37, scope: !4162)
!4171 = !DILocation(line: 728, column: 15, scope: !4162)
!4172 = !DILocation(line: 726, column: 10, scope: !4162)
!4173 = !DILocation(line: 729, column: 17, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 729, column: 9)
!4175 = !DILocation(line: 729, column: 9, scope: !4162)
!4176 = !DILocation(line: 730, column: 41, scope: !4174)
!4177 = !DILocation(line: 730, column: 2, scope: !4174)
!4178 = !DILocation(line: 730, column: 39, scope: !4174)
!4179 = !DILocation(line: 731, column: 1, scope: !4162)
!4180 = distinct !DISubprogram(name: "set_local_options_default", scope: !3, file: !3, line: 739, type: !4181, isLocal: false, isDefinition: true, scopeLine: 740, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{null, !1504, !1131}
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4192}
!4184 = !DILocalVariable(name: "wp", arg: 1, scope: !4180, file: !3, line: 739, type: !1504)
!4185 = !DILocalVariable(name: "do_buffer", arg: 2, scope: !4180, file: !3, line: 739, type: !1131)
!4186 = !DILocalVariable(name: "save_curwin", scope: !4180, file: !3, line: 741, type: !1504)
!4187 = !DILocalVariable(name: "i", scope: !4180, file: !3, line: 742, type: !1131)
!4188 = !DILocalVariable(name: "p", scope: !4189, file: !3, line: 750, type: !2848)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 749, column: 5)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 748, column: 5)
!4191 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 748, column: 5)
!4192 = !DILocalVariable(name: "varp", scope: !4189, file: !3, line: 751, type: !1124)
!4193 = !DILocation(line: 739, column: 34, scope: !4180)
!4194 = !DILocation(line: 739, column: 42, scope: !4180)
!4195 = !DILocation(line: 741, column: 26, scope: !4180)
!4196 = !DILocation(line: 741, column: 12, scope: !4180)
!4197 = !DILocation(line: 744, column: 12, scope: !4180)
!4198 = !DILocation(line: 745, column: 22, scope: !4180)
!4199 = !{!4020, !3109, i64 8}
!4200 = !DILocation(line: 745, column: 12, scope: !4180)
!4201 = !DILocation(line: 746, column: 5, scope: !4180)
!4202 = !DILocation(line: 742, column: 10, scope: !4180)
!4203 = !DILocation(line: 748, column: 10, scope: !4191)
!4204 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !4205)
!4205 = distinct !DILocation(line: 748, column: 18, scope: !4190)
!4206 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !4207)
!4207 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !4205)
!4208 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !4207)
!4209 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !4207)
!4210 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !4207)
!4211 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !4207)
!4212 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !4207)
!4213 = !DILocation(line: 748, column: 5, scope: !4191)
!4214 = !DILocation(line: 750, column: 29, scope: !4189)
!4215 = !DILocation(line: 750, column: 23, scope: !4189)
!4216 = !DILocation(line: 751, column: 22, scope: !4189)
!4217 = !DILocation(line: 751, column: 15, scope: !4189)
!4218 = !DILocation(line: 753, column: 9, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 753, column: 6)
!4220 = !{!3108, !3062, i64 32}
!4221 = !DILocation(line: 753, column: 15, scope: !4219)
!4222 = !DILocation(line: 754, column: 3, scope: !4219)
!4223 = !DILocation(line: 754, column: 30, scope: !4219)
!4224 = !DILocation(line: 754, column: 40, scope: !4219)
!4225 = !DILocation(line: 754, column: 17, scope: !4219)
!4226 = !DILocation(line: 755, column: 19, scope: !4219)
!4227 = !DILocation(line: 755, column: 25, scope: !4219)
!4228 = !DILocation(line: 4507, column: 14, scope: !4229, inlinedAt: !4238)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 4507, column: 9)
!4230 = distinct !DISubprogram(name: "optval_default", scope: !3, file: !3, line: 4503, type: !4231, isLocal: true, isDefinition: true, scopeLine: 4504, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4233)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!1131, !2848, !1124, !1131}
!4233 = !{!4234, !4235, !4236, !4237}
!4234 = !DILocalVariable(name: "p", arg: 1, scope: !4230, file: !3, line: 4503, type: !2848)
!4235 = !DILocalVariable(name: "varp", arg: 2, scope: !4230, file: !3, line: 4503, type: !1124)
!4236 = !DILocalVariable(name: "compatible", arg: 3, scope: !4230, file: !3, line: 4503, type: !1131)
!4237 = !DILocalVariable(name: "dvi", scope: !4230, file: !3, line: 4505, type: !1131)
!4238 = distinct !DILocation(line: 756, column: 7, scope: !4219)
!4239 = !DILocation(line: 756, column: 3, scope: !4219)
!4240 = !DILocation(line: 4503, column: 34, scope: !4230, inlinedAt: !4238)
!4241 = !DILocation(line: 4503, column: 45, scope: !4230, inlinedAt: !4238)
!4242 = !DILocation(line: 4503, column: 55, scope: !4230, inlinedAt: !4238)
!4243 = !DILocation(line: 4509, column: 22, scope: !4230, inlinedAt: !4238)
!4244 = !DILocation(line: 4510, column: 18, scope: !4245, inlinedAt: !4238)
!4245 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 4510, column: 9)
!4246 = !DILocation(line: 4510, column: 9, scope: !4230, inlinedAt: !4238)
!4247 = !DILocation(line: 4511, column: 10, scope: !4245, inlinedAt: !4238)
!4248 = !{!3110, !3110, i64 0}
!4249 = !DILocation(line: 4511, column: 41, scope: !4245, inlinedAt: !4238)
!4250 = !DILocation(line: 4511, column: 24, scope: !4245, inlinedAt: !4238)
!4251 = !DILocation(line: 753, column: 6, scope: !4189)
!4252 = !DILocation(line: 4512, column: 18, scope: !4253, inlinedAt: !4238)
!4253 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 4512, column: 9)
!4254 = !DILocation(line: 4512, column: 9, scope: !4230, inlinedAt: !4238)
!4255 = !DILocation(line: 4515, column: 10, scope: !4253, inlinedAt: !4238)
!4256 = !DILocation(line: 4515, column: 45, scope: !4253, inlinedAt: !4238)
!4257 = !DILocation(line: 4515, column: 26, scope: !4253, inlinedAt: !4238)
!4258 = !DILocation(line: 4515, column: 23, scope: !4253, inlinedAt: !4238)
!4259 = !DILocation(line: 4517, column: 13, scope: !4230, inlinedAt: !4238)
!4260 = !DILocation(line: 4517, column: 55, scope: !4230, inlinedAt: !4238)
!4261 = !DILocation(line: 757, column: 6, scope: !4219)
!4262 = !DILocation(line: 748, column: 40, scope: !4190)
!4263 = !DILocation(line: 748, column: 5, scope: !4190)
!4264 = distinct !{!4264, !4213, !4265}
!4265 = !DILocation(line: 758, column: 5, scope: !4191)
!4266 = !DILocation(line: 760, column: 5, scope: !4180)
!4267 = !DILocation(line: 761, column: 12, scope: !4180)
!4268 = !DILocation(line: 762, column: 22, scope: !4180)
!4269 = !DILocation(line: 762, column: 12, scope: !4180)
!4270 = !DILocation(line: 763, column: 1, scope: !4180)
!4271 = distinct !DISubprogram(name: "get_varp_scope", scope: !3, file: !3, line: 5088, type: !4272, isLocal: true, isDefinition: true, scopeLine: 5089, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4274)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!1124, !2848, !1131}
!4274 = !{!4275, !4276}
!4275 = !DILocalVariable(name: "p", arg: 1, scope: !4271, file: !3, line: 5088, type: !2848)
!4276 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !4271, file: !3, line: 5088, type: !1131)
!4277 = !DILocation(line: 5088, column: 34, scope: !4271)
!4278 = !DILocation(line: 5088, column: 41, scope: !4271)
!4279 = !DILocation(line: 5090, column: 20, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 5090, column: 9)
!4281 = !DILocation(line: 5090, column: 34, scope: !4280)
!4282 = !DILocation(line: 5090, column: 40, scope: !4280)
!4283 = !DILocation(line: 5090, column: 46, scope: !4280)
!4284 = !DILocation(line: 5090, column: 9, scope: !4271)
!4285 = !DILocation(line: 5092, column: 9, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 5092, column: 6)
!4287 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 5091, column: 5)
!4288 = !DILocation(line: 5092, column: 13, scope: !4286)
!4289 = !DILocation(line: 5092, column: 6, scope: !4287)
!4290 = !DILocation(line: 5093, column: 23, scope: !4286)
!4291 = !DILocation(line: 5093, column: 6, scope: !4286)
!4292 = !DILocation(line: 5096, column: 20, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 5096, column: 9)
!4294 = !DILocation(line: 5096, column: 33, scope: !4293)
!4295 = !DILocation(line: 5096, column: 45, scope: !4293)
!4296 = !DILocation(line: 5096, column: 51, scope: !4293)
!4297 = !DILocation(line: 5096, column: 9, scope: !4271)
!4298 = !DILocation(line: 5098, column: 2, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 5097, column: 5)
!4300 = !DILocation(line: 5100, column: 39, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 5099, column: 2)
!4302 = !DILocation(line: 5100, column: 47, scope: !4301)
!4303 = !DILocation(line: 5100, column: 27, scope: !4301)
!4304 = !DILocation(line: 5100, column: 20, scope: !4301)
!4305 = !DILocation(line: 5102, column: 39, scope: !4301)
!4306 = !DILocation(line: 5102, column: 47, scope: !4301)
!4307 = !DILocation(line: 5102, column: 27, scope: !4301)
!4308 = !DILocation(line: 5102, column: 20, scope: !4301)
!4309 = !DILocation(line: 5103, column: 39, scope: !4301)
!4310 = !DILocation(line: 5103, column: 47, scope: !4301)
!4311 = !DILocation(line: 5103, column: 27, scope: !4301)
!4312 = !DILocation(line: 5103, column: 20, scope: !4301)
!4313 = !DILocation(line: 5104, column: 39, scope: !4301)
!4314 = !DILocation(line: 5104, column: 47, scope: !4301)
!4315 = !DILocation(line: 5104, column: 27, scope: !4301)
!4316 = !DILocation(line: 5104, column: 20, scope: !4301)
!4317 = !DILocation(line: 5106, column: 39, scope: !4301)
!4318 = !DILocation(line: 5106, column: 47, scope: !4301)
!4319 = !DILocation(line: 5106, column: 27, scope: !4301)
!4320 = !DILocation(line: 5106, column: 20, scope: !4301)
!4321 = !DILocation(line: 5107, column: 39, scope: !4301)
!4322 = !DILocation(line: 5107, column: 47, scope: !4301)
!4323 = !DILocation(line: 5107, column: 27, scope: !4301)
!4324 = !DILocation(line: 5107, column: 20, scope: !4301)
!4325 = !DILocation(line: 5108, column: 39, scope: !4301)
!4326 = !DILocation(line: 5108, column: 47, scope: !4301)
!4327 = !DILocation(line: 5108, column: 27, scope: !4301)
!4328 = !DILocation(line: 5108, column: 20, scope: !4301)
!4329 = !DILocation(line: 5109, column: 39, scope: !4301)
!4330 = !DILocation(line: 5109, column: 47, scope: !4301)
!4331 = !DILocation(line: 5109, column: 27, scope: !4301)
!4332 = !DILocation(line: 5109, column: 20, scope: !4301)
!4333 = !DILocation(line: 5110, column: 39, scope: !4301)
!4334 = !DILocation(line: 5110, column: 47, scope: !4301)
!4335 = !DILocation(line: 5110, column: 27, scope: !4301)
!4336 = !DILocation(line: 5110, column: 20, scope: !4301)
!4337 = !DILocation(line: 5111, column: 39, scope: !4301)
!4338 = !DILocation(line: 5111, column: 47, scope: !4301)
!4339 = !DILocation(line: 5111, column: 27, scope: !4301)
!4340 = !DILocation(line: 5111, column: 20, scope: !4301)
!4341 = !DILocation(line: 5112, column: 46, scope: !4301)
!4342 = !DILocation(line: 5112, column: 54, scope: !4301)
!4343 = !DILocation(line: 5112, column: 34, scope: !4301)
!4344 = !DILocation(line: 5112, column: 27, scope: !4301)
!4345 = !DILocation(line: 5113, column: 46, scope: !4301)
!4346 = !DILocation(line: 5113, column: 54, scope: !4301)
!4347 = !DILocation(line: 5113, column: 34, scope: !4301)
!4348 = !DILocation(line: 5113, column: 27, scope: !4301)
!4349 = !DILocation(line: 5115, column: 39, scope: !4301)
!4350 = !DILocation(line: 5115, column: 47, scope: !4301)
!4351 = !DILocation(line: 5115, column: 27, scope: !4301)
!4352 = !DILocation(line: 5115, column: 20, scope: !4301)
!4353 = !DILocation(line: 5116, column: 39, scope: !4301)
!4354 = !DILocation(line: 5116, column: 47, scope: !4301)
!4355 = !DILocation(line: 5116, column: 27, scope: !4301)
!4356 = !DILocation(line: 5116, column: 20, scope: !4301)
!4357 = !DILocation(line: 5118, column: 39, scope: !4301)
!4358 = !DILocation(line: 5118, column: 47, scope: !4301)
!4359 = !DILocation(line: 5118, column: 27, scope: !4301)
!4360 = !DILocation(line: 5118, column: 20, scope: !4301)
!4361 = !DILocation(line: 5119, column: 39, scope: !4301)
!4362 = !DILocation(line: 5119, column: 47, scope: !4301)
!4363 = !DILocation(line: 5119, column: 27, scope: !4301)
!4364 = !DILocation(line: 5119, column: 20, scope: !4301)
!4365 = !DILocation(line: 5121, column: 40, scope: !4301)
!4366 = !DILocation(line: 5121, column: 48, scope: !4301)
!4367 = !DILocation(line: 5121, column: 28, scope: !4301)
!4368 = !DILocation(line: 5121, column: 21, scope: !4301)
!4369 = !DILocation(line: 5124, column: 39, scope: !4301)
!4370 = !DILocation(line: 5124, column: 47, scope: !4301)
!4371 = !DILocation(line: 5124, column: 27, scope: !4301)
!4372 = !DILocation(line: 5124, column: 20, scope: !4301)
!4373 = !DILocation(line: 5127, column: 39, scope: !4301)
!4374 = !DILocation(line: 5127, column: 47, scope: !4301)
!4375 = !DILocation(line: 5127, column: 27, scope: !4301)
!4376 = !DILocation(line: 5127, column: 20, scope: !4301)
!4377 = !DILocation(line: 5130, column: 39, scope: !4301)
!4378 = !DILocation(line: 5130, column: 47, scope: !4301)
!4379 = !DILocation(line: 5130, column: 27, scope: !4301)
!4380 = !DILocation(line: 5130, column: 20, scope: !4301)
!4381 = !DILocation(line: 5132, column: 39, scope: !4301)
!4382 = !DILocation(line: 5132, column: 47, scope: !4301)
!4383 = !DILocation(line: 5132, column: 27, scope: !4301)
!4384 = !DILocation(line: 5132, column: 20, scope: !4301)
!4385 = !DILocation(line: 5134, column: 39, scope: !4301)
!4386 = !DILocation(line: 5134, column: 47, scope: !4301)
!4387 = !DILocation(line: 5134, column: 27, scope: !4301)
!4388 = !DILocation(line: 5134, column: 20, scope: !4301)
!4389 = !DILocation(line: 5136, column: 39, scope: !4301)
!4390 = !DILocation(line: 5136, column: 47, scope: !4301)
!4391 = !DILocation(line: 5136, column: 27, scope: !4301)
!4392 = !DILocation(line: 5136, column: 20, scope: !4301)
!4393 = !DILocation(line: 5137, column: 39, scope: !4301)
!4394 = !DILocation(line: 5137, column: 47, scope: !4301)
!4395 = !DILocation(line: 5137, column: 27, scope: !4301)
!4396 = !DILocation(line: 5137, column: 20, scope: !4301)
!4397 = !DILocation(line: 5138, column: 38, scope: !4301)
!4398 = !DILocation(line: 5138, column: 46, scope: !4301)
!4399 = !DILocation(line: 5138, column: 26, scope: !4301)
!4400 = !DILocation(line: 5138, column: 19, scope: !4301)
!4401 = !DILocation(line: 5143, column: 12, scope: !4271)
!4402 = !DILocation(line: 5143, column: 5, scope: !4271)
!4403 = !DILocation(line: 5144, column: 1, scope: !4271)
!4404 = distinct !DISubprogram(name: "set_option_default", scope: !3, file: !3, line: 536, type: !4405, isLocal: true, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4407)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{null, !1131, !1131, !1131}
!4407 = !{!4408, !4409, !4410, !4411, !4412, !4413, !4414, !4416, !4417}
!4408 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !4404, file: !3, line: 537, type: !1131)
!4409 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !4404, file: !3, line: 538, type: !1131)
!4410 = !DILocalVariable(name: "compatible", arg: 3, scope: !4404, file: !3, line: 539, type: !1131)
!4411 = !DILocalVariable(name: "varp", scope: !4404, file: !3, line: 541, type: !1124)
!4412 = !DILocalVariable(name: "dvi", scope: !4404, file: !3, line: 542, type: !1131)
!4413 = !DILocalVariable(name: "flags", scope: !4404, file: !3, line: 543, type: !1309)
!4414 = !DILocalVariable(name: "flagsp", scope: !4404, file: !3, line: 544, type: !4415)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!4416 = !DILocalVariable(name: "both", scope: !4404, file: !3, line: 545, type: !1131)
!4417 = !DILocalVariable(name: "def_val", scope: !4418, file: !3, line: 573, type: !1130)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 572, column: 6)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 569, column: 10)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 568, column: 2)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 567, column: 11)
!4422 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 552, column: 6)
!4423 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 550, column: 5)
!4424 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 549, column: 9)
!4425 = !DILocation(line: 537, column: 10, scope: !4404)
!4426 = !DILocation(line: 538, column: 10, scope: !4404)
!4427 = !DILocation(line: 539, column: 10, scope: !4404)
!4428 = !DILocation(line: 545, column: 28, scope: !4404)
!4429 = !DILocation(line: 545, column: 56, scope: !4404)
!4430 = !DILocation(line: 547, column: 29, scope: !4404)
!4431 = !DILocation(line: 547, column: 48, scope: !4404)
!4432 = !DILocation(line: 547, column: 12, scope: !4404)
!4433 = !DILocation(line: 541, column: 13, scope: !4404)
!4434 = !DILocation(line: 548, column: 30, scope: !4404)
!4435 = !DILocation(line: 543, column: 12, scope: !4404)
!4436 = !DILocation(line: 549, column: 14, scope: !4424)
!4437 = !DILocation(line: 549, column: 9, scope: !4404)
!4438 = !DILocation(line: 551, column: 16, scope: !4423)
!4439 = !DILocation(line: 551, column: 28, scope: !4423)
!4440 = !DILocation(line: 551, column: 8, scope: !4423)
!4441 = !DILocation(line: 552, column: 12, scope: !4422)
!4442 = !DILocation(line: 552, column: 6, scope: !4423)
!4443 = !DILocation(line: 556, column: 27, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 556, column: 10)
!4445 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 553, column: 2)
!4446 = !DILocation(line: 556, column: 33, scope: !4444)
!4447 = !DILocation(line: 556, column: 10, scope: !4445)
!4448 = !DILocation(line: 558, column: 6, scope: !4444)
!4449 = !DILocation(line: 557, column: 3, scope: !4444)
!4450 = !DILocation(line: 561, column: 18, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 561, column: 7)
!4452 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 560, column: 6)
!4453 = !DILocation(line: 561, column: 40, scope: !4451)
!4454 = !DILocation(line: 561, column: 30, scope: !4451)
!4455 = !DILocation(line: 562, column: 26, scope: !4451)
!4456 = !DILocation(line: 562, column: 7, scope: !4451)
!4457 = !DILocation(line: 564, column: 26, scope: !4452)
!4458 = !DILocation(line: 563, column: 22, scope: !4452)
!4459 = !DILocation(line: 563, column: 20, scope: !4452)
!4460 = !DILocation(line: 567, column: 17, scope: !4421)
!4461 = !DILocation(line: 567, column: 11, scope: !4422)
!4462 = !DILocation(line: 569, column: 27, scope: !4419)
!4463 = !DILocation(line: 569, column: 33, scope: !4419)
!4464 = !DILocation(line: 569, column: 10, scope: !4420)
!4465 = !DILocation(line: 570, column: 19, scope: !4419)
!4466 = !DILocation(line: 570, column: 3, scope: !4419)
!4467 = !DILocation(line: 573, column: 32, scope: !4418)
!4468 = !DILocation(line: 573, column: 8, scope: !4418)
!4469 = !DILocation(line: 575, column: 7, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 575, column: 7)
!4471 = !DILocation(line: 575, column: 24, scope: !4470)
!4472 = !DILocation(line: 575, column: 32, scope: !4470)
!4473 = !DILocation(line: 575, column: 20, scope: !4470)
!4474 = !DILocation(line: 576, column: 32, scope: !4470)
!4475 = !DILocation(line: 576, column: 20, scope: !4470)
!4476 = !DILocation(line: 576, column: 4, scope: !4470)
!4477 = !DILocation(line: 583, column: 7, scope: !4418)
!4478 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !4479)
!4479 = distinct !DILocation(line: 584, column: 16, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 583, column: 7)
!4481 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !4479)
!4482 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !4479)
!4483 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !4479)
!4484 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !4479)
!4485 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !4479)
!4486 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !4479)
!4487 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !4479)
!4488 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !4479)
!4489 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !4479)
!4490 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !4479)
!4491 = !DILocation(line: 584, column: 7, scope: !4480)
!4492 = !DILocation(line: 584, column: 64, scope: !4480)
!4493 = !DILocation(line: 592, column: 40, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 589, column: 2)
!4495 = !DILocation(line: 592, column: 21, scope: !4494)
!4496 = !DILocation(line: 592, column: 6, scope: !4494)
!4497 = !DILocation(line: 592, column: 19, scope: !4494)
!4498 = !DILocation(line: 595, column: 27, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 595, column: 10)
!4500 = !DILocation(line: 595, column: 33, scope: !4499)
!4501 = !DILocation(line: 595, column: 42, scope: !4499)
!4502 = !DILocation(line: 595, column: 45, scope: !4499)
!4503 = !DILocation(line: 595, column: 54, scope: !4499)
!4504 = !DILocation(line: 595, column: 10, scope: !4494)
!4505 = !DILocation(line: 596, column: 16, scope: !4499)
!4506 = !DILocation(line: 596, column: 3, scope: !4499)
!4507 = !DILocation(line: 599, column: 10, scope: !4494)
!4508 = !DILocation(line: 601, column: 9, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 599, column: 10)
!4510 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !4511)
!4511 = distinct !DILocation(line: 600, column: 11, scope: !4509)
!4512 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !4511)
!4513 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !4511)
!4514 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !4511)
!4515 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !4511)
!4516 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !4511)
!4517 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !4511)
!4518 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !4511)
!4519 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !4511)
!4520 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !4511)
!4521 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !4511)
!4522 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !4511)
!4523 = !DILocation(line: 600, column: 3, scope: !4509)
!4524 = !DILocation(line: 600, column: 59, scope: !4509)
!4525 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !4526, file: !3, line: 2428, type: !1131)
!4526 = distinct !DISubprogram(name: "insecure_flag", scope: !3, file: !3, line: 2428, type: !4527, isLocal: true, isDefinition: true, scopeLine: 2429, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4529)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{!4415, !1131, !1131}
!4529 = !{!4525, !4530}
!4530 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !4526, file: !3, line: 2428, type: !1131)
!4531 = !DILocation(line: 2428, column: 19, scope: !4526, inlinedAt: !4532)
!4532 = distinct !DILocation(line: 605, column: 11, scope: !4423)
!4533 = !DILocation(line: 2428, column: 32, scope: !4526, inlinedAt: !4532)
!4534 = !DILocation(line: 2430, column: 19, scope: !4535, inlinedAt: !4532)
!4535 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2430, column: 9)
!4536 = !DILocation(line: 2430, column: 9, scope: !4526, inlinedAt: !4532)
!4537 = !DILocation(line: 2431, column: 32, scope: !4535, inlinedAt: !4532)
!4538 = !DILocation(line: 2431, column: 2, scope: !4535, inlinedAt: !4532)
!4539 = !DILocation(line: 2434, column: 27, scope: !4540, inlinedAt: !4532)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 2432, column: 2)
!4541 = !DILocation(line: 2434, column: 35, scope: !4540, inlinedAt: !4532)
!4542 = !DILocation(line: 2434, column: 19, scope: !4540, inlinedAt: !4532)
!4543 = !DILocation(line: 2438, column: 27, scope: !4540, inlinedAt: !4532)
!4544 = !DILocation(line: 2438, column: 35, scope: !4540, inlinedAt: !4532)
!4545 = !DILocation(line: 2438, column: 19, scope: !4540, inlinedAt: !4532)
!4546 = !DILocation(line: 2439, column: 27, scope: !4540, inlinedAt: !4532)
!4547 = !DILocation(line: 2439, column: 35, scope: !4540, inlinedAt: !4532)
!4548 = !DILocation(line: 2439, column: 19, scope: !4540, inlinedAt: !4532)
!4549 = !DILocation(line: 2442, column: 29, scope: !4540, inlinedAt: !4532)
!4550 = !DILocation(line: 2442, column: 37, scope: !4540, inlinedAt: !4532)
!4551 = !DILocation(line: 2442, column: 21, scope: !4540, inlinedAt: !4532)
!4552 = !DILocation(line: 2445, column: 28, scope: !4540, inlinedAt: !4532)
!4553 = !DILocation(line: 2445, column: 36, scope: !4540, inlinedAt: !4532)
!4554 = !DILocation(line: 2445, column: 20, scope: !4540, inlinedAt: !4532)
!4555 = !DILocation(line: 2447, column: 27, scope: !4540, inlinedAt: !4532)
!4556 = !DILocation(line: 2447, column: 35, scope: !4540, inlinedAt: !4532)
!4557 = !DILocation(line: 2447, column: 19, scope: !4540, inlinedAt: !4532)
!4558 = !DILocation(line: 2449, column: 28, scope: !4540, inlinedAt: !4532)
!4559 = !DILocation(line: 2449, column: 36, scope: !4540, inlinedAt: !4532)
!4560 = !DILocation(line: 2449, column: 20, scope: !4540, inlinedAt: !4532)
!4561 = !DILocation(line: 544, column: 13, scope: !4404)
!4562 = !DILocation(line: 606, column: 12, scope: !4423)
!4563 = !DILocation(line: 606, column: 20, scope: !4423)
!4564 = !DILocation(line: 606, column: 10, scope: !4423)
!4565 = !DILocation(line: 607, column: 5, scope: !4423)
!4566 = !DILocation(line: 2491, column: 25, scope: !4567, inlinedAt: !4577)
!4567 = distinct !DISubprogram(name: "set_option_sctx_idx", scope: !3, file: !3, line: 2491, type: !4568, isLocal: false, isDefinition: true, scopeLine: 2492, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4570)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{null, !1131, !1131, !1157}
!4570 = !{!4571, !4572, !4573, !4574, !4575, !4576}
!4571 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !4567, file: !3, line: 2491, type: !1131)
!4572 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !4567, file: !3, line: 2491, type: !1131)
!4573 = !DILocalVariable(name: "script_ctx", arg: 3, scope: !4567, file: !3, line: 2491, type: !1157)
!4574 = !DILocalVariable(name: "both", scope: !4567, file: !3, line: 2493, type: !1131)
!4575 = !DILocalVariable(name: "indir", scope: !4567, file: !3, line: 2494, type: !1131)
!4576 = !DILocalVariable(name: "new_script_ctx", scope: !4567, file: !3, line: 2495, type: !1157)
!4577 = distinct !DILocation(line: 610, column: 5, scope: !4404)
!4578 = !DILocation(line: 2491, column: 56, scope: !4567, inlinedAt: !4577)
!4579 = !DILocation(line: 2491, column: 38, scope: !4567, inlinedAt: !4577)
!4580 = !DILocation(line: 2493, column: 56, scope: !4567, inlinedAt: !4577)
!4581 = !DILocation(line: 2494, column: 40, scope: !4567, inlinedAt: !4577)
!4582 = !DILocation(line: 2494, column: 10, scope: !4567, inlinedAt: !4577)
!4583 = !DILocation(line: 2495, column: 12, scope: !4567, inlinedAt: !4577)
!4584 = !DILocation(line: 2498, column: 21, scope: !4585, inlinedAt: !4577)
!4585 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2498, column: 9)
!4586 = !DILocation(line: 2498, column: 9, scope: !4567, inlinedAt: !4577)
!4587 = !DILocation(line: 2499, column: 28, scope: !4585, inlinedAt: !4577)
!4588 = !{!4589, !3110, i64 0}
!4589 = !{!"", !3110, i64 0, !3109, i64 8, !3062, i64 16, !3062, i64 24, !3111, i64 32}
!4590 = !DILocation(line: 2499, column: 25, scope: !4585, inlinedAt: !4577)
!4591 = !DILocation(line: 2499, column: 2, scope: !4585, inlinedAt: !4577)
!4592 = !DILocation(line: 2503, column: 28, scope: !4593, inlinedAt: !4577)
!4593 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2503, column: 9)
!4594 = !DILocation(line: 2503, column: 14, scope: !4593, inlinedAt: !4577)
!4595 = !DILocation(line: 2503, column: 52, scope: !4593, inlinedAt: !4577)
!4596 = !DILocation(line: 2503, column: 71, scope: !4593, inlinedAt: !4577)
!4597 = !DILocation(line: 2504, column: 32, scope: !4593, inlinedAt: !4577)
!4598 = !DILocation(line: 2504, column: 2, scope: !4593, inlinedAt: !4577)
!4599 = !DILocation(line: 2505, column: 28, scope: !4600, inlinedAt: !4577)
!4600 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2505, column: 9)
!4601 = !DILocation(line: 2505, column: 14, scope: !4600, inlinedAt: !4577)
!4602 = !DILocation(line: 2507, column: 12, scope: !4603, inlinedAt: !4577)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2507, column: 6)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 2506, column: 5)
!4605 = !DILocation(line: 2507, column: 6, scope: !4604, inlinedAt: !4577)
!4606 = !DILocation(line: 2508, column: 6, scope: !4603, inlinedAt: !4577)
!4607 = !DILocation(line: 2508, column: 35, scope: !4603, inlinedAt: !4577)
!4608 = !DILocation(line: 2508, column: 48, scope: !4603, inlinedAt: !4577)
!4609 = !DILocation(line: 2509, column: 17, scope: !4610, inlinedAt: !4577)
!4610 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 2509, column: 11)
!4611 = !DILocation(line: 2509, column: 11, scope: !4603, inlinedAt: !4577)
!4612 = !DILocation(line: 2510, column: 6, scope: !4610, inlinedAt: !4577)
!4613 = !DILocation(line: 2510, column: 35, scope: !4610, inlinedAt: !4577)
!4614 = !DILocation(line: 2510, column: 48, scope: !4610, inlinedAt: !4577)
!4615 = !DILocation(line: 612, column: 1, scope: !4404)
!4616 = distinct !DISubprogram(name: "set_init_2", scope: !3, file: !3, line: 798, type: !2735, isLocal: false, isDefinition: true, scopeLine: 799, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4617)
!4617 = !{!4618}
!4618 = !DILocalVariable(name: "idx", scope: !4616, file: !3, line: 800, type: !1131)
!4619 = !DILocation(line: 806, column: 11, scope: !4616)
!4620 = !DILocation(line: 800, column: 10, scope: !4616)
!4621 = !DILocation(line: 807, column: 13, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 807, column: 9)
!4623 = !DILocation(line: 807, column: 18, scope: !4622)
!4624 = !DILocation(line: 807, column: 23, scope: !4622)
!4625 = !DILocation(line: 807, column: 36, scope: !4622)
!4626 = !DILocation(line: 807, column: 42, scope: !4622)
!4627 = !DILocation(line: 807, column: 9, scope: !4616)
!4628 = !DILocation(line: 808, column: 37, scope: !4622)
!4629 = !DILocation(line: 808, column: 2, scope: !4622)
!4630 = !DILocation(line: 809, column: 5, scope: !4616)
!4631 = !DILocalVariable(name: "name", arg: 1, scope: !4632, file: !3, line: 6807, type: !1124)
!4632 = distinct !DISubprogram(name: "option_was_set", scope: !3, file: !3, line: 6807, type: !2888, isLocal: false, isDefinition: true, scopeLine: 6808, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4633)
!4633 = !{!4631, !4634}
!4634 = !DILocalVariable(name: "idx", scope: !4632, file: !3, line: 6809, type: !1131)
!4635 = !DILocation(line: 6807, column: 24, scope: !4632, inlinedAt: !4636)
!4636 = distinct !DILocation(line: 815, column: 10, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 815, column: 9)
!4638 = !DILocation(line: 6811, column: 11, scope: !4632, inlinedAt: !4636)
!4639 = !DILocation(line: 6809, column: 9, scope: !4632, inlinedAt: !4636)
!4640 = !DILocation(line: 6812, column: 13, scope: !4641, inlinedAt: !4636)
!4641 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 6812, column: 9)
!4642 = !DILocation(line: 6812, column: 9, scope: !4632, inlinedAt: !4636)
!4643 = !DILocation(line: 6814, column: 9, scope: !4644, inlinedAt: !4636)
!4644 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 6814, column: 9)
!4645 = !DILocation(line: 6814, column: 22, scope: !4644, inlinedAt: !4636)
!4646 = !DILocation(line: 815, column: 10, scope: !4637)
!4647 = !DILocation(line: 815, column: 9, scope: !4616)
!4648 = !DILocation(line: 817, column: 34, scope: !4616)
!4649 = !DILocation(line: 816, column: 13, scope: !4637)
!4650 = !DILocation(line: 816, column: 18, scope: !4637)
!4651 = !DILocation(line: 816, column: 11, scope: !4637)
!4652 = !DILocation(line: 816, column: 2, scope: !4637)
!4653 = !DILocation(line: 724, column: 26, scope: !4162, inlinedAt: !4654)
!4654 = distinct !DILocation(line: 817, column: 5, scope: !4616)
!4655 = !DILocation(line: 724, column: 37, scope: !4162, inlinedAt: !4654)
!4656 = !DILocation(line: 728, column: 15, scope: !4162, inlinedAt: !4654)
!4657 = !DILocation(line: 726, column: 10, scope: !4162, inlinedAt: !4654)
!4658 = !DILocation(line: 729, column: 17, scope: !4174, inlinedAt: !4654)
!4659 = !DILocation(line: 729, column: 9, scope: !4162, inlinedAt: !4654)
!4660 = !DILocation(line: 817, column: 39, scope: !4616)
!4661 = !DILocation(line: 730, column: 41, scope: !4174, inlinedAt: !4654)
!4662 = !DILocation(line: 730, column: 2, scope: !4174, inlinedAt: !4654)
!4663 = !DILocation(line: 730, column: 39, scope: !4174, inlinedAt: !4654)
!4664 = !DILocation(line: 826, column: 11, scope: !4616)
!4665 = !DILocation(line: 827, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 827, column: 9)
!4667 = !DILocation(line: 827, column: 18, scope: !4666)
!4668 = !DILocation(line: 827, column: 23, scope: !4666)
!4669 = !DILocation(line: 827, column: 36, scope: !4666)
!4670 = !DILocation(line: 827, column: 42, scope: !4666)
!4671 = !DILocation(line: 828, column: 8, scope: !4666)
!4672 = !DILocation(line: 828, column: 12, scope: !4666)
!4673 = !DILocation(line: 828, column: 11, scope: !4666)
!4674 = !DILocation(line: 828, column: 30, scope: !4666)
!4675 = !DILocation(line: 827, column: 9, scope: !4616)
!4676 = !DILocation(line: 830, column: 2, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 829, column: 5)
!4678 = !DILocation(line: 833, column: 21, scope: !4677)
!4679 = !DILocation(line: 834, column: 5, scope: !4677)
!4680 = !DILocation(line: 838, column: 5, scope: !4616)
!4681 = !DILocation(line: 841, column: 5, scope: !4616)
!4682 = !DILocation(line: 844, column: 11, scope: !4616)
!4683 = !DILocation(line: 846, column: 1, scope: !4616)
!4684 = !DILocation(line: 6807, column: 24, scope: !4632)
!4685 = !DILocation(line: 6811, column: 11, scope: !4632)
!4686 = !DILocation(line: 6809, column: 9, scope: !4632)
!4687 = !DILocation(line: 6812, column: 13, scope: !4641)
!4688 = !DILocation(line: 6812, column: 9, scope: !4632)
!4689 = !DILocation(line: 6814, column: 9, scope: !4644)
!4690 = !DILocation(line: 6814, column: 22, scope: !4644)
!4691 = !DILocation(line: 6816, column: 5, scope: !4632)
!4692 = !DILocation(line: 6817, column: 1, scope: !4632)
!4693 = distinct !DISubprogram(name: "set_init_3", scope: !3, file: !3, line: 852, type: !2735, isLocal: false, isDefinition: true, scopeLine: 853, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4694)
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700}
!4695 = !DILocalVariable(name: "p", scope: !4693, file: !3, line: 860, type: !1124)
!4696 = !DILocalVariable(name: "idx_srr", scope: !4693, file: !3, line: 861, type: !1131)
!4697 = !DILocalVariable(name: "do_srr", scope: !4693, file: !3, line: 862, type: !1131)
!4698 = !DILocalVariable(name: "idx_sp", scope: !4693, file: !3, line: 864, type: !1131)
!4699 = !DILocalVariable(name: "do_sp", scope: !4693, file: !3, line: 865, type: !1131)
!4700 = !DILocalVariable(name: "idx_ffs", scope: !4701, file: !3, line: 1019, type: !1131)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1018, column: 5)
!4702 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1017, column: 9)
!4703 = !DILocation(line: 868, column: 15, scope: !4693)
!4704 = !DILocation(line: 861, column: 13, scope: !4693)
!4705 = !DILocation(line: 869, column: 17, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 869, column: 9)
!4707 = !DILocation(line: 869, column: 9, scope: !4693)
!4708 = !DILocation(line: 872, column: 13, scope: !4706)
!4709 = !DILocation(line: 872, column: 30, scope: !4706)
!4710 = !DILocation(line: 872, column: 11, scope: !4706)
!4711 = !DILocation(line: 862, column: 13, scope: !4693)
!4712 = !DILocation(line: 874, column: 14, scope: !4693)
!4713 = !DILocation(line: 864, column: 13, scope: !4693)
!4714 = !DILocation(line: 875, column: 16, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 875, column: 9)
!4716 = !DILocation(line: 875, column: 9, scope: !4693)
!4717 = !DILocation(line: 878, column: 12, scope: !4715)
!4718 = !DILocation(line: 878, column: 28, scope: !4715)
!4719 = !DILocation(line: 878, column: 10, scope: !4715)
!4720 = !DILocation(line: 865, column: 13, scope: !4693)
!4721 = !DILocation(line: 880, column: 9, scope: !4693)
!4722 = !DILocation(line: 860, column: 14, scope: !4693)
!4723 = !DILocation(line: 881, column: 11, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 881, column: 9)
!4725 = !DILocation(line: 881, column: 9, scope: !4693)
!4726 = !DILocation(line: 887, column: 10, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 887, column: 10)
!4728 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 882, column: 5)
!4729 = !DILocation(line: 887, column: 29, scope: !4727)
!4730 = !DILocation(line: 888, column: 3, scope: !4727)
!4731 = !DILocation(line: 888, column: 6, scope: !4727)
!4732 = !DILocation(line: 888, column: 26, scope: !4727)
!4733 = !DILocation(line: 887, column: 10, scope: !4728)
!4734 = !DILocation(line: 896, column: 10, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 896, column: 10)
!4736 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 894, column: 2)
!4737 = !DILocation(line: 896, column: 10, scope: !4736)
!4738 = !DILocation(line: 901, column: 8, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 897, column: 6)
!4740 = !DILocation(line: 903, column: 3, scope: !4739)
!4741 = !DILocation(line: 903, column: 39, scope: !4739)
!4742 = !DILocation(line: 904, column: 6, scope: !4739)
!4743 = !DILocation(line: 906, column: 10, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 906, column: 10)
!4745 = !DILocation(line: 906, column: 10, scope: !4736)
!4746 = !DILocation(line: 908, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 907, column: 6)
!4748 = !DILocation(line: 909, column: 3, scope: !4747)
!4749 = !DILocation(line: 909, column: 40, scope: !4747)
!4750 = !DILocation(line: 910, column: 6, scope: !4747)
!4751 = !DILocation(line: 914, column: 17, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 914, column: 17)
!4753 = !DILocation(line: 914, column: 35, scope: !4752)
!4754 = !DILocation(line: 915, column: 7, scope: !4752)
!4755 = !DILocation(line: 915, column: 10, scope: !4752)
!4756 = !DILocation(line: 915, column: 29, scope: !4752)
!4757 = !DILocation(line: 916, column: 7, scope: !4752)
!4758 = !DILocation(line: 916, column: 10, scope: !4752)
!4759 = !DILocation(line: 916, column: 30, scope: !4752)
!4760 = !DILocation(line: 917, column: 7, scope: !4752)
!4761 = !DILocation(line: 917, column: 10, scope: !4752)
!4762 = !DILocation(line: 917, column: 31, scope: !4752)
!4763 = !DILocation(line: 918, column: 7, scope: !4752)
!4764 = !DILocation(line: 918, column: 10, scope: !4752)
!4765 = !DILocation(line: 918, column: 29, scope: !4752)
!4766 = !DILocation(line: 919, column: 7, scope: !4752)
!4767 = !DILocation(line: 919, column: 10, scope: !4752)
!4768 = !DILocation(line: 919, column: 34, scope: !4752)
!4769 = !DILocation(line: 920, column: 7, scope: !4752)
!4770 = !DILocation(line: 920, column: 10, scope: !4752)
!4771 = !DILocation(line: 920, column: 30, scope: !4752)
!4772 = !DILocation(line: 921, column: 7, scope: !4752)
!4773 = !DILocation(line: 921, column: 10, scope: !4752)
!4774 = !DILocation(line: 921, column: 30, scope: !4752)
!4775 = !DILocation(line: 914, column: 17, scope: !4727)
!4776 = !DILocation(line: 936, column: 7, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 936, column: 7)
!4778 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 934, column: 6)
!4779 = !DILocation(line: 936, column: 7, scope: !4778)
!4780 = !DILocation(line: 941, column: 12, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 937, column: 3)
!4782 = !DILocation(line: 943, column: 7, scope: !4781)
!4783 = !DILocation(line: 943, column: 43, scope: !4781)
!4784 = !DILocation(line: 944, column: 3, scope: !4781)
!4785 = !DILocation(line: 946, column: 7, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 946, column: 7)
!4787 = !DILocation(line: 946, column: 7, scope: !4778)
!4788 = !DILocation(line: 948, column: 13, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 947, column: 3)
!4790 = !DILocation(line: 949, column: 7, scope: !4789)
!4791 = !DILocation(line: 949, column: 44, scope: !4789)
!4792 = !DILocation(line: 950, column: 3, scope: !4789)
!4793 = !DILocation(line: 952, column: 2, scope: !4728)
!4794 = !DILocation(line: 953, column: 5, scope: !4728)
!4795 = !DILocation(line: 1017, column: 9, scope: !4702)
!4796 = !{!3411, !3110, i64 0}
!4797 = !DILocation(line: 1017, column: 9, scope: !4693)
!4798 = !DILocation(line: 1019, column: 16, scope: !4701)
!4799 = !DILocation(line: 1019, column: 6, scope: !4701)
!4800 = !DILocation(line: 1022, column: 14, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 1022, column: 6)
!4802 = !DILocation(line: 1022, column: 19, scope: !4801)
!4803 = !DILocation(line: 1022, column: 23, scope: !4801)
!4804 = !DILocation(line: 1022, column: 40, scope: !4801)
!4805 = !DILocation(line: 1022, column: 46, scope: !4801)
!4806 = !DILocation(line: 1022, column: 6, scope: !4701)
!4807 = !DILocation(line: 1023, column: 21, scope: !4801)
!4808 = !DILocation(line: 1023, column: 6, scope: !4801)
!4809 = !DILocation(line: 1027, column: 5, scope: !4693)
!4810 = !DILocation(line: 1029, column: 1, scope: !4693)
!4811 = distinct !DISubprogram(name: "set_title_defaults", scope: !3, file: !3, line: 1081, type: !2735, isLocal: false, isDefinition: true, scopeLine: 1082, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4812)
!4812 = !{!4813, !4814}
!4813 = !DILocalVariable(name: "idx1", scope: !4811, file: !3, line: 1083, type: !1131)
!4814 = !DILocalVariable(name: "val", scope: !4811, file: !3, line: 1084, type: !1130)
!4815 = !DILocation(line: 1091, column: 12, scope: !4811)
!4816 = !DILocation(line: 1083, column: 13, scope: !4811)
!4817 = !DILocation(line: 1092, column: 14, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 1092, column: 9)
!4819 = !DILocation(line: 1092, column: 19, scope: !4818)
!4820 = !DILocation(line: 1092, column: 24, scope: !4818)
!4821 = !DILocation(line: 1092, column: 38, scope: !4818)
!4822 = !DILocation(line: 1092, column: 44, scope: !4818)
!4823 = !DILocation(line: 1092, column: 9, scope: !4811)
!4824 = !DILocation(line: 1095, column: 10, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 1095, column: 6)
!4826 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1093, column: 5)
!4827 = !{!4828, !3061, i64 8}
!4828 = !{!"Gui", !3061, i64 0, !3061, i64 4, !3061, i64 8, !3061, i64 12, !3061, i64 16, !3061, i64 20, !3061, i64 24, !3109, i64 32, !3061, i64 40, !3061, i64 44, !3061, i64 48, !3061, i64 52, !3061, i64 56, !3062, i64 60, !3061, i64 64, !3061, i64 68, !3061, i64 72, !3061, i64 76, !3061, i64 80, !3061, i64 84, !3061, i64 88, !3061, i64 92, !3061, i64 96, !3061, i64 100, !3061, i64 104, !3062, i64 108, !4829, i64 112, !3062, i64 192, !3061, i64 204, !3061, i64 208, !3061, i64 212, !3061, i64 216, !3061, i64 220, !3061, i64 224, !3109, i64 232, !3061, i64 240, !3109, i64 248, !3110, i64 256, !3110, i64 264, !3110, i64 272, !3110, i64 280, !3061, i64 288, !3109, i64 296, !3109, i64 304, !3109, i64 312, !3109, i64 320, !3109, i64 328, !3109, i64 336, !3109, i64 344, !3109, i64 352, !3109, i64 360, !3109, i64 368, !3109, i64 376, !3109, i64 384, !3109, i64 392, !3109, i64 400, !3109, i64 408, !3109, i64 416, !3109, i64 424, !3109, i64 432, !3061, i64 440, !3109, i64 448, !3109, i64 456}
!4829 = !{!"GuiScrollbar", !3110, i64 0, !3109, i64 8, !3061, i64 16, !3110, i64 24, !3110, i64 32, !3110, i64 40, !3061, i64 48, !3061, i64 52, !3061, i64 56, !3061, i64 60, !3109, i64 64, !3110, i64 72}
!4830 = !DILocation(line: 1095, column: 26, scope: !4825)
!4831 = !DILocation(line: 1095, column: 19, scope: !4825)
!4832 = !DILocation(line: 1099, column: 12, scope: !4825)
!4833 = !DILocation(line: 1084, column: 13, scope: !4811)
!4834 = !DILocation(line: 1100, column: 38, scope: !4826)
!4835 = !DILocation(line: 1100, column: 2, scope: !4826)
!4836 = !DILocation(line: 1100, column: 36, scope: !4826)
!4837 = !DILocation(line: 1101, column: 12, scope: !4826)
!4838 = !DILocation(line: 1101, column: 10, scope: !4826)
!4839 = !DILocation(line: 1102, column: 5, scope: !4826)
!4840 = !DILocation(line: 1103, column: 12, scope: !4811)
!4841 = !DILocation(line: 1104, column: 14, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 1104, column: 9)
!4843 = !DILocation(line: 1104, column: 19, scope: !4842)
!4844 = !DILocation(line: 1104, column: 24, scope: !4842)
!4845 = !DILocation(line: 1104, column: 38, scope: !4842)
!4846 = !DILocation(line: 1104, column: 44, scope: !4842)
!4847 = !DILocation(line: 1104, column: 9, scope: !4811)
!4848 = !DILocation(line: 1107, column: 10, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1107, column: 6)
!4850 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1105, column: 5)
!4851 = !DILocation(line: 1107, column: 26, scope: !4849)
!4852 = !DILocation(line: 1107, column: 19, scope: !4849)
!4853 = !DILocation(line: 1111, column: 12, scope: !4849)
!4854 = !DILocation(line: 1112, column: 38, scope: !4850)
!4855 = !DILocation(line: 1112, column: 2, scope: !4850)
!4856 = !DILocation(line: 1112, column: 36, scope: !4850)
!4857 = !DILocation(line: 1113, column: 11, scope: !4850)
!4858 = !DILocation(line: 1113, column: 9, scope: !4850)
!4859 = !DILocation(line: 1114, column: 5, scope: !4850)
!4860 = !DILocation(line: 1115, column: 1, scope: !4811)
!4861 = distinct !DISubprogram(name: "ex_set", scope: !3, file: !3, line: 1119, type: !4862, isLocal: false, isDefinition: true, scopeLine: 1120, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4936)
!4862 = !DISubroutineType(types: !4863)
!4863 = !{null, !4864}
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_typedef, name: "exarg_T", file: !94, line: 85, baseType: !4866)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exarg", file: !94, line: 1861, size: 1472, elements: !4867)
!4867 = !{!4868, !4869, !4870, !4871, !4872, !4873, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4902, !4903}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4866, file: !94, line: 1863, baseType: !1124, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "nextcmd", scope: !4866, file: !94, line: 1864, baseType: !1124, size: 64, offset: 64)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4866, file: !94, line: 1865, baseType: !1124, size: 64, offset: 128)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "cmdlinep", scope: !4866, file: !94, line: 1866, baseType: !1133, size: 64, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "cmdline_tofree", scope: !4866, file: !94, line: 1868, baseType: !1124, size: 64, offset: 256)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "cmdidx", scope: !4866, file: !94, line: 1870, baseType: !4874, size: 32, offset: 320)
!4874 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmdidx_T", file: !94, line: 1856, baseType: !93)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "argt", scope: !4866, file: !94, line: 1871, baseType: !1130, size: 64, offset: 384)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !4866, file: !94, line: 1872, baseType: !1131, size: 32, offset: 448)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "forceit", scope: !4866, file: !94, line: 1873, baseType: !1131, size: 32, offset: 480)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "addr_count", scope: !4866, file: !94, line: 1874, baseType: !1131, size: 32, offset: 512)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "line1", scope: !4866, file: !94, line: 1875, baseType: !1135, size: 64, offset: 576)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "line2", scope: !4866, file: !94, line: 1876, baseType: !1135, size: 64, offset: 640)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "addr_type", scope: !4866, file: !94, line: 1877, baseType: !4882, size: 32, offset: 704)
!4882 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmd_addr_T", file: !94, line: 81, baseType: !675)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4866, file: !94, line: 1878, baseType: !1131, size: 32, offset: 736)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "do_ecmd_cmd", scope: !4866, file: !94, line: 1879, baseType: !1124, size: 64, offset: 768)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "do_ecmd_lnum", scope: !4866, file: !94, line: 1880, baseType: !1135, size: 64, offset: 832)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "append", scope: !4866, file: !94, line: 1881, baseType: !1131, size: 32, offset: 896)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "usefilter", scope: !4866, file: !94, line: 1882, baseType: !1131, size: 32, offset: 928)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "amount", scope: !4866, file: !94, line: 1883, baseType: !1131, size: 32, offset: 960)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "regname", scope: !4866, file: !94, line: 1884, baseType: !1131, size: 32, offset: 992)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "force_bin", scope: !4866, file: !94, line: 1885, baseType: !1131, size: 32, offset: 1024)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "read_edit", scope: !4866, file: !94, line: 1886, baseType: !1131, size: 32, offset: 1056)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "force_ff", scope: !4866, file: !94, line: 1887, baseType: !1131, size: 32, offset: 1088)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "force_enc", scope: !4866, file: !94, line: 1888, baseType: !1131, size: 32, offset: 1120)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "bad_char", scope: !4866, file: !94, line: 1889, baseType: !1131, size: 32, offset: 1152)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "useridx", scope: !4866, file: !94, line: 1890, baseType: !1131, size: 32, offset: 1184)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "errmsg", scope: !4866, file: !94, line: 1891, baseType: !1127, size: 64, offset: 1216)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "getline", scope: !4866, file: !94, line: 1892, baseType: !4898, size: 64, offset: 1280)
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4899, size: 64)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!1124, !1131, !1129, !1131, !4901}
!4901 = !DIDerivedType(tag: DW_TAG_typedef, name: "getline_opt_T", file: !6, line: 1577, baseType: !689)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4866, file: !94, line: 1893, baseType: !1129, size: 64, offset: 1344)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "cstack", scope: !4866, file: !94, line: 1895, baseType: !4904, size: 64, offset: 1408)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DIDerivedType(tag: DW_TAG_typedef, name: "cstack_T", file: !6, line: 921, baseType: !4906)
!4906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 904, size: 12672, elements: !4907)
!4907 = !{!4908, !4912, !4914, !4920, !4921, !4923, !4924, !4925, !4926, !4927, !4928, !4935}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "cs_flags", scope: !4906, file: !6, line: 905, baseType: !4909, size: 800)
!4909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 800, elements: !4910)
!4910 = !{!4911}
!4911 = !DISubrange(count: 50)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "cs_pending", scope: !4906, file: !6, line: 906, baseType: !4913, size: 400, offset: 800)
!4913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 400, elements: !4910)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "cs_pend", scope: !4906, file: !6, line: 910, baseType: !4915, size: 3200, offset: 1216)
!4915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4906, file: !6, line: 907, size: 3200, elements: !4916)
!4916 = !{!4917, !4919}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "csp_rv", scope: !4915, file: !6, line: 908, baseType: !4918, size: 3200)
!4918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 3200, elements: !4910)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "csp_ex", scope: !4915, file: !6, line: 909, baseType: !4918, size: 3200)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "cs_forinfo", scope: !4906, file: !6, line: 911, baseType: !4918, size: 3200, offset: 4416)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "cs_line", scope: !4906, file: !6, line: 912, baseType: !4922, size: 1600, offset: 7616)
!4922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 1600, elements: !4910)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "cs_block_id", scope: !4906, file: !6, line: 913, baseType: !4922, size: 1600, offset: 9216)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "cs_script_var_len", scope: !4906, file: !6, line: 914, baseType: !4922, size: 1600, offset: 10816)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "cs_idx", scope: !4906, file: !6, line: 916, baseType: !1131, size: 32, offset: 12416)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "cs_looplevel", scope: !4906, file: !6, line: 917, baseType: !1131, size: 32, offset: 12448)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "cs_trylevel", scope: !4906, file: !6, line: 918, baseType: !1131, size: 32, offset: 12480)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "cs_emsg_silent_list", scope: !4906, file: !6, line: 919, baseType: !4929, size: 64, offset: 12544)
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!4930 = !DIDerivedType(tag: DW_TAG_typedef, name: "eslist_T", file: !6, line: 891, baseType: !4931)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eslist_elem", file: !6, line: 892, size: 128, elements: !4932)
!4932 = !{!4933, !4934}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "saved_emsg_silent", scope: !4931, file: !6, line: 894, baseType: !1131, size: 32)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4931, file: !6, line: 895, baseType: !4929, size: 64, offset: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "cs_lflags", scope: !4906, file: !6, line: 920, baseType: !1128, size: 8, offset: 12608)
!4936 = !{!4937, !4938}
!4937 = !DILocalVariable(name: "eap", arg: 1, scope: !4861, file: !3, line: 1119, type: !4864)
!4938 = !DILocalVariable(name: "flags", scope: !4861, file: !3, line: 1121, type: !1131)
!4939 = !DILocation(line: 1119, column: 17, scope: !4861)
!4940 = !DILocation(line: 1121, column: 10, scope: !4861)
!4941 = !DILocation(line: 1123, column: 14, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1123, column: 9)
!4943 = !{!4944, !3062, i64 40}
!4944 = !{!"exarg", !3109, i64 0, !3109, i64 8, !3109, i64 16, !3109, i64 24, !3109, i64 32, !3062, i64 40, !3110, i64 48, !3061, i64 56, !3061, i64 60, !3061, i64 64, !3110, i64 72, !3110, i64 80, !3062, i64 88, !3061, i64 92, !3109, i64 96, !3110, i64 104, !3061, i64 112, !3061, i64 116, !3061, i64 120, !3061, i64 124, !3061, i64 128, !3061, i64 132, !3061, i64 136, !3061, i64 140, !3061, i64 144, !3061, i64 148, !3109, i64 152, !3109, i64 160, !3109, i64 168, !3109, i64 176}
!4945 = !DILocation(line: 1123, column: 9, scope: !4861)
!4946 = !DILocation(line: 1128, column: 17, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1128, column: 9)
!4948 = !{!4949, !3061, i64 0}
!4949 = !{!"", !3061, i64 0, !3061, i64 4, !3061, i64 8, !4950, i64 16, !3061, i64 192, !3061, i64 196, !3109, i64 200, !3061, i64 208, !3110, i64 216, !3061, i64 224, !3061, i64 228, !3061, i64 232}
!4950 = !{!"", !3109, i64 0, !3062, i64 8, !3062, i64 88, !3061, i64 168}
!4951 = !DILocation(line: 1128, column: 28, scope: !4947)
!4952 = !DILocation(line: 1128, column: 52, scope: !4947)
!4953 = !DILocation(line: 1128, column: 43, scope: !4947)
!4954 = !DILocation(line: 1129, column: 2, scope: !4947)
!4955 = !DILocation(line: 1133, column: 11, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1133, column: 6)
!4957 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 1132, column: 5)
!4958 = !{!4944, !3061, i64 60}
!4959 = !DILocation(line: 1133, column: 6, scope: !4956)
!4960 = !DILocation(line: 1134, column: 12, scope: !4956)
!4961 = !DILocation(line: 1133, column: 6, scope: !4957)
!4962 = !DILocation(line: 1135, column: 20, scope: !4957)
!4963 = !{!4944, !3109, i64 0}
!4964 = !DILocation(line: 1135, column: 8, scope: !4957)
!4965 = !DILocation(line: 1137, column: 1, scope: !4861)
!4966 = distinct !DISubprogram(name: "do_set", scope: !3, file: !3, line: 1155, type: !3912, isLocal: false, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4967)
!4967 = !{!4968, !4969, !4970, !4971, !4972, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992, !5001, !5003, !5004, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5025, !5026}
!4968 = !DILocalVariable(name: "arg", arg: 1, scope: !4966, file: !3, line: 1156, type: !1124)
!4969 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !4966, file: !3, line: 1157, type: !1131)
!4970 = !DILocalVariable(name: "opt_idx", scope: !4966, file: !3, line: 1159, type: !1131)
!4971 = !DILocalVariable(name: "errmsg", scope: !4966, file: !3, line: 1160, type: !1127)
!4972 = !DILocalVariable(name: "errbuf", scope: !4966, file: !3, line: 1161, type: !4973)
!4973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 640, elements: !4974)
!4974 = !{!4975}
!4975 = !DISubrange(count: 80)
!4976 = !DILocalVariable(name: "startarg", scope: !4966, file: !3, line: 1162, type: !1124)
!4977 = !DILocalVariable(name: "prefix", scope: !4966, file: !3, line: 1163, type: !1131)
!4978 = !DILocalVariable(name: "nextchar", scope: !4966, file: !3, line: 1164, type: !1131)
!4979 = !DILocalVariable(name: "afterchar", scope: !4966, file: !3, line: 1165, type: !1131)
!4980 = !DILocalVariable(name: "len", scope: !4966, file: !3, line: 1166, type: !1131)
!4981 = !DILocalVariable(name: "i", scope: !4966, file: !3, line: 1167, type: !1131)
!4982 = !DILocalVariable(name: "value", scope: !4966, file: !3, line: 1168, type: !1245)
!4983 = !DILocalVariable(name: "key", scope: !4966, file: !3, line: 1169, type: !1131)
!4984 = !DILocalVariable(name: "flags", scope: !4966, file: !3, line: 1170, type: !1309)
!4985 = !DILocalVariable(name: "varp", scope: !4966, file: !3, line: 1171, type: !1124)
!4986 = !DILocalVariable(name: "did_show", scope: !4966, file: !3, line: 1172, type: !1131)
!4987 = !DILocalVariable(name: "adding", scope: !4966, file: !3, line: 1173, type: !1131)
!4988 = !DILocalVariable(name: "prepending", scope: !4966, file: !3, line: 1174, type: !1131)
!4989 = !DILocalVariable(name: "removing", scope: !4966, file: !3, line: 1175, type: !1131)
!4990 = !DILocalVariable(name: "cp_val", scope: !4966, file: !3, line: 1176, type: !1131)
!4991 = !DILocalVariable(name: "key_name", scope: !4966, file: !3, line: 1177, type: !3884)
!4992 = !DILocalVariable(name: "p", scope: !4993, file: !3, line: 1459, type: !1124)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1458, column: 3)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1439, column: 7)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 1428, column: 6)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1424, column: 10)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 1222, column: 2)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1214, column: 11)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1191, column: 6)
!5000 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 1187, column: 5)
!5001 = !DILocalVariable(name: "value_is_replaced", scope: !5002, file: !3, line: 1476, type: !1131)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 1475, column: 6)
!5003 = !DILocalVariable(name: "value_checked", scope: !5002, file: !3, line: 1477, type: !1131)
!5004 = !DILocalVariable(name: "save_arg", scope: !5005, file: !3, line: 1609, type: !1124)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1608, column: 7)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1607, column: 16)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1537, column: 11)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1529, column: 3)
!5009 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1479, column: 7)
!5010 = !DILocalVariable(name: "s", scope: !5005, file: !3, line: 1610, type: !1124)
!5011 = !DILocalVariable(name: "oldval", scope: !5005, file: !3, line: 1611, type: !1124)
!5012 = !DILocalVariable(name: "newval", scope: !5005, file: !3, line: 1612, type: !1124)
!5013 = !DILocalVariable(name: "origval", scope: !5005, file: !3, line: 1613, type: !1124)
!5014 = !DILocalVariable(name: "origval_l", scope: !5005, file: !3, line: 1614, type: !1124)
!5015 = !DILocalVariable(name: "origval_g", scope: !5005, file: !3, line: 1615, type: !1124)
!5016 = !DILocalVariable(name: "saved_origval", scope: !5005, file: !3, line: 1617, type: !1124)
!5017 = !DILocalVariable(name: "saved_origval_l", scope: !5005, file: !3, line: 1618, type: !1124)
!5018 = !DILocalVariable(name: "saved_origval_g", scope: !5005, file: !3, line: 1619, type: !1124)
!5019 = !DILocalVariable(name: "saved_newval", scope: !5005, file: !3, line: 1620, type: !1124)
!5020 = !DILocalVariable(name: "newlen", scope: !5005, file: !3, line: 1622, type: !1140)
!5021 = !DILocalVariable(name: "comma", scope: !5005, file: !3, line: 1623, type: !1131)
!5022 = !DILocalVariable(name: "new_value_alloced", scope: !5005, file: !3, line: 1624, type: !1131)
!5023 = !DILocalVariable(name: "p", scope: !5024, file: !3, line: 1995, type: !4415)
!5024 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1994, column: 4)
!5025 = !DILocalVariable(name: "secure_saved", scope: !5024, file: !3, line: 1996, type: !1131)
!5026 = !DILocalVariable(name: "p", scope: !5027, file: !3, line: 2039, type: !1124)
!5027 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 2038, column: 7)
!5028 = !DILocation(line: 1156, column: 13, scope: !4966)
!5029 = !DILocation(line: 1157, column: 10, scope: !4966)
!5030 = !DILocation(line: 1161, column: 5, scope: !4966)
!5031 = !DILocation(line: 1161, column: 10, scope: !4966)
!5032 = !DILocation(line: 1167, column: 5, scope: !4966)
!5033 = !DILocation(line: 1168, column: 5, scope: !4966)
!5034 = !DILocation(line: 1171, column: 13, scope: !4966)
!5035 = !DILocation(line: 1172, column: 10, scope: !4966)
!5036 = !DILocation(line: 1176, column: 10, scope: !4966)
!5037 = !DILocation(line: 1177, column: 5, scope: !4966)
!5038 = !DILocation(line: 1177, column: 12, scope: !4966)
!5039 = !DILocation(line: 1179, column: 9, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 1179, column: 9)
!5041 = !DILocation(line: 1179, column: 14, scope: !5040)
!5042 = !DILocation(line: 1179, column: 9, scope: !4966)
!5043 = !DILocation(line: 1181, column: 2, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1180, column: 5)
!5045 = !DILocation(line: 1183, column: 2, scope: !5044)
!5046 = !DILocation(line: 1186, column: 5, scope: !4966)
!5047 = !DILocation(line: 1160, column: 11, scope: !4966)
!5048 = !DILocation(line: 1162, column: 13, scope: !4966)
!5049 = !DILocation(line: 1191, column: 6, scope: !4999)
!5050 = !DILocation(line: 1191, column: 29, scope: !4999)
!5051 = !DILocation(line: 1191, column: 34, scope: !4999)
!5052 = !DILocation(line: 1191, column: 38, scope: !4999)
!5053 = !DILocation(line: 1192, column: 7, scope: !4999)
!5054 = !DILocation(line: 1198, column: 10, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1193, column: 2)
!5056 = !DILocation(line: 1199, column: 10, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1199, column: 10)
!5058 = !DILocation(line: 1199, column: 15, scope: !5057)
!5059 = !DILocation(line: 1199, column: 10, scope: !5055)
!5060 = !DILocation(line: 1201, column: 3, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1200, column: 6)
!5062 = !DILocation(line: 1203, column: 3, scope: !5061)
!5063 = !DILocation(line: 1204, column: 3, scope: !5061)
!5064 = !DILocation(line: 1205, column: 3, scope: !5061)
!5065 = !DILocation(line: 1206, column: 3, scope: !5061)
!5066 = !DILocation(line: 1207, column: 6, scope: !5061)
!5067 = !DILocation(line: 1210, column: 3, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1209, column: 6)
!5069 = !DILocation(line: 1214, column: 11, scope: !4998)
!5070 = !DILocation(line: 1214, column: 43, scope: !4998)
!5071 = !DILocation(line: 1216, column: 6, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 1215, column: 2)
!5073 = !DILocation(line: 1217, column: 6, scope: !5072)
!5074 = !DILocation(line: 1219, column: 10, scope: !5072)
!5075 = !DILocation(line: 1220, column: 2, scope: !5072)
!5076 = !DILocation(line: 1163, column: 10, scope: !4966)
!5077 = !DILocation(line: 1224, column: 10, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1224, column: 10)
!5079 = !DILocation(line: 1224, column: 32, scope: !5078)
!5080 = !DILocation(line: 1224, column: 37, scope: !5078)
!5081 = !DILocation(line: 1224, column: 40, scope: !5078)
!5082 = !DILocation(line: 1224, column: 66, scope: !5078)
!5083 = !DILocation(line: 1224, column: 10, scope: !4997)
!5084 = !DILocation(line: 1227, column: 7, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1225, column: 6)
!5086 = !DILocation(line: 1228, column: 6, scope: !5085)
!5087 = !DILocation(line: 1229, column: 15, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1229, column: 15)
!5089 = !DILocation(line: 1229, column: 38, scope: !5088)
!5090 = !DILocation(line: 1229, column: 15, scope: !5078)
!5091 = !DILocation(line: 1232, column: 7, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1230, column: 6)
!5093 = !DILocation(line: 1233, column: 6, scope: !5092)
!5094 = !DILocation(line: 1237, column: 11, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1237, column: 10)
!5096 = !DILocation(line: 1169, column: 10, scope: !4966)
!5097 = !DILocation(line: 1237, column: 10, scope: !5095)
!5098 = !DILocation(line: 1237, column: 10, scope: !4997)
!5099 = !DILocation(line: 1159, column: 10, scope: !4966)
!5100 = !DILocation(line: 1241, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1241, column: 7)
!5102 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1238, column: 6)
!5103 = !DILocation(line: 1241, column: 14, scope: !5101)
!5104 = !DILocation(line: 1241, column: 21, scope: !5101)
!5105 = !DILocation(line: 1241, column: 24, scope: !5101)
!5106 = !DILocation(line: 1241, column: 31, scope: !5101)
!5107 = !DILocation(line: 1241, column: 38, scope: !5101)
!5108 = !DILocation(line: 1241, column: 41, scope: !5101)
!5109 = !DILocation(line: 1241, column: 48, scope: !5101)
!5110 = !DILocation(line: 1241, column: 51, scope: !5101)
!5111 = !DILocation(line: 1241, column: 7, scope: !5102)
!5112 = !DILocation(line: 1246, column: 30, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1244, column: 3)
!5114 = !DILocation(line: 1246, column: 14, scope: !5113)
!5115 = !DILocation(line: 1166, column: 10, scope: !4966)
!5116 = !DILocation(line: 1247, column: 4, scope: !5113)
!5117 = !DILocation(line: 1246, column: 7, scope: !5113)
!5118 = distinct !{!5118, !5117, !5119}
!5119 = !DILocation(line: 1247, column: 6, scope: !5113)
!5120 = !DILocation(line: 1249, column: 7, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1249, column: 7)
!5122 = !DILocation(line: 1249, column: 16, scope: !5121)
!5123 = !DILocation(line: 1249, column: 7, scope: !5102)
!5124 = !DILocation(line: 1254, column: 12, scope: !5102)
!5125 = !DILocation(line: 1255, column: 7, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1255, column: 7)
!5127 = !DILocation(line: 1255, column: 14, scope: !5126)
!5128 = !DILocation(line: 1255, column: 21, scope: !5126)
!5129 = !DILocation(line: 1255, column: 24, scope: !5126)
!5130 = !DILocation(line: 1255, column: 31, scope: !5126)
!5131 = !DILocation(line: 1255, column: 7, scope: !5102)
!5132 = !DILocation(line: 1257, column: 10, scope: !5102)
!5133 = !DILocation(line: 1257, column: 3, scope: !5102)
!5134 = !DILocation(line: 1257, column: 14, scope: !5102)
!5135 = !DILocation(line: 1258, column: 7, scope: !5102)
!5136 = !DILocation(line: 1256, column: 17, scope: !5126)
!5137 = !DILocation(line: 1258, column: 15, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1258, column: 7)
!5139 = !DILocation(line: 1259, column: 29, scope: !5138)
!5140 = !DILocation(line: 1259, column: 33, scope: !5138)
!5141 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !5142)
!5142 = distinct !DILocation(line: 1259, column: 13, scope: !5138)
!5143 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !5142)
!5144 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !5142)
!5145 = !DILocation(line: 4361, column: 5, scope: !3911, inlinedAt: !5142)
!5146 = !DILocation(line: 4362, column: 5, scope: !3911, inlinedAt: !5142)
!5147 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !5142)
!5148 = !DILocation(line: 4368, column: 9, scope: !3925, inlinedAt: !5142)
!5149 = !DILocation(line: 4368, column: 16, scope: !3925, inlinedAt: !5142)
!5150 = !DILocation(line: 4368, column: 23, scope: !3925, inlinedAt: !5142)
!5151 = !DILocation(line: 4368, column: 26, scope: !3925, inlinedAt: !5142)
!5152 = !DILocation(line: 4368, column: 33, scope: !3925, inlinedAt: !5142)
!5153 = !DILocation(line: 4368, column: 40, scope: !3925, inlinedAt: !5142)
!5154 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !5142)
!5155 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !5142)
!5156 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !5142)
!5157 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !5142)
!5158 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !5142)
!5159 = !DILocation(line: 4369, column: 2, scope: !3925, inlinedAt: !5142)
!5160 = !DILocation(line: 4372, column: 2, scope: !5161, inlinedAt: !5142)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 4371, column: 5)
!5162 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 4370, column: 14)
!5163 = !DILocation(line: 4361, column: 10, scope: !3911, inlinedAt: !5142)
!5164 = !DILocation(line: 4373, column: 12, scope: !5161, inlinedAt: !5142)
!5165 = !DILocation(line: 4374, column: 8, scope: !5161, inlinedAt: !5142)
!5166 = !DILocation(line: 4376, column: 6, scope: !5167, inlinedAt: !5142)
!5167 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 4376, column: 6)
!5168 = !DILocation(line: 4376, column: 6, scope: !5161, inlinedAt: !5142)
!5169 = !DILocation(line: 4378, column: 5, scope: !5161, inlinedAt: !5142)
!5170 = !DILocation(line: 4380, column: 1, scope: !3911, inlinedAt: !5142)
!5171 = !DILocation(line: 1259, column: 7, scope: !5138)
!5172 = !DILocation(line: 1267, column: 24, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1267, column: 7)
!5174 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1262, column: 6)
!5175 = !DILocation(line: 1267, column: 31, scope: !5173)
!5176 = !DILocation(line: 1267, column: 38, scope: !5173)
!5177 = !DILocation(line: 1267, column: 41, scope: !5173)
!5178 = !DILocation(line: 1267, column: 48, scope: !5173)
!5179 = !DILocation(line: 1267, column: 51, scope: !5173)
!5180 = !DILocation(line: 1267, column: 7, scope: !5174)
!5181 = !DILocation(line: 1270, column: 14, scope: !5173)
!5182 = !DILocation(line: 1270, column: 50, scope: !5173)
!5183 = distinct !{!5183, !5184, !5185}
!5184 = !DILocation(line: 1270, column: 7, scope: !5173)
!5185 = !DILocation(line: 1271, column: 6, scope: !5173)
!5186 = !DILocation(line: 1271, column: 4, scope: !5173)
!5187 = !DILocation(line: 1272, column: 14, scope: !5174)
!5188 = !DILocation(line: 1273, column: 12, scope: !5174)
!5189 = !DILocation(line: 1274, column: 24, scope: !5174)
!5190 = !DILocation(line: 1274, column: 13, scope: !5174)
!5191 = !DILocation(line: 1275, column: 3, scope: !5174)
!5192 = !DILocation(line: 1275, column: 12, scope: !5174)
!5193 = !DILocation(line: 1276, column: 15, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1276, column: 7)
!5195 = !DILocation(line: 1276, column: 7, scope: !5174)
!5196 = !DILocation(line: 1277, column: 29, scope: !5194)
!5197 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !5198)
!5198 = distinct !DILocation(line: 1277, column: 13, scope: !5194)
!5199 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !5198)
!5200 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !5198)
!5201 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !5198)
!5202 = !DILocation(line: 4368, column: 9, scope: !3925, inlinedAt: !5198)
!5203 = !DILocation(line: 4368, column: 16, scope: !3925, inlinedAt: !5198)
!5204 = !DILocation(line: 4368, column: 23, scope: !3925, inlinedAt: !5198)
!5205 = !DILocation(line: 4368, column: 26, scope: !3925, inlinedAt: !5198)
!5206 = !DILocation(line: 4368, column: 33, scope: !3925, inlinedAt: !5198)
!5207 = !DILocation(line: 4368, column: 40, scope: !3925, inlinedAt: !5198)
!5208 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !5198)
!5209 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !5198)
!5210 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !5198)
!5211 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !5198)
!5212 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !5198)
!5213 = !DILocation(line: 4369, column: 2, scope: !3925, inlinedAt: !5198)
!5214 = !DILocation(line: 1281, column: 18, scope: !4997)
!5215 = !DILocation(line: 1284, column: 6, scope: !4997)
!5216 = !DILocation(line: 1284, column: 13, scope: !4997)
!5217 = !DILocation(line: 1285, column: 3, scope: !4997)
!5218 = distinct !{!5218, !5215, !5219}
!5219 = !DILocation(line: 1285, column: 5, scope: !4997)
!5220 = !DILocation(line: 1290, column: 37, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1290, column: 10)
!5222 = !DILocation(line: 1290, column: 29, scope: !5221)
!5223 = !DILocation(line: 1290, column: 42, scope: !5221)
!5224 = !DILocation(line: 1290, column: 10, scope: !4997)
!5225 = !DILocation(line: 1292, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1291, column: 6)
!5227 = !DILocation(line: 1174, column: 10, scope: !4966)
!5228 = !DILocation(line: 1301, column: 3, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 1298, column: 3)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 1297, column: 12)
!5231 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1292, column: 7)
!5232 = !DILocation(line: 1175, column: 10, scope: !4966)
!5233 = !DILocation(line: 1306, column: 3, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 1303, column: 3)
!5235 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 1302, column: 12)
!5236 = !DILocation(line: 1308, column: 17, scope: !4997)
!5237 = !DILocation(line: 1173, column: 10, scope: !4966)
!5238 = !DILocation(line: 1164, column: 10, scope: !4966)
!5239 = !DILocation(line: 1310, column: 18, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1310, column: 10)
!5241 = !DILocation(line: 1310, column: 31, scope: !5240)
!5242 = !DILocation(line: 1310, column: 24, scope: !5240)
!5243 = !DILocation(line: 1316, column: 18, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1316, column: 10)
!5245 = !DILocation(line: 1316, column: 10, scope: !4997)
!5246 = !DILocation(line: 1318, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 1318, column: 7)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1317, column: 6)
!5249 = !DILocation(line: 1318, column: 24, scope: !5247)
!5250 = !DILocation(line: 1318, column: 28, scope: !5247)
!5251 = !DILocation(line: 1318, column: 7, scope: !5248)
!5252 = !DILocation(line: 1322, column: 11, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 1322, column: 11)
!5254 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 1319, column: 3)
!5255 = !DILocation(line: 1322, column: 51, scope: !5253)
!5256 = !DILocation(line: 1323, column: 8, scope: !5253)
!5257 = !DILocation(line: 1323, column: 31, scope: !5253)
!5258 = !DILocation(line: 1323, column: 37, scope: !5253)
!5259 = !DILocation(line: 1324, column: 17, scope: !5253)
!5260 = !DILocation(line: 1324, column: 5, scope: !5253)
!5261 = !DILocation(line: 1329, column: 28, scope: !5248)
!5262 = !DILocation(line: 1170, column: 12, scope: !4966)
!5263 = !DILocation(line: 1330, column: 10, scope: !5248)
!5264 = !DILocation(line: 1331, column: 6, scope: !5248)
!5265 = !DILocation(line: 1335, column: 11, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1335, column: 7)
!5267 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1333, column: 6)
!5268 = !DILocation(line: 1335, column: 7, scope: !5267)
!5269 = !DILocation(line: 1337, column: 21, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 1336, column: 3)
!5271 = !DILocation(line: 1337, column: 19, scope: !5270)
!5272 = !DILocation(line: 1338, column: 21, scope: !5270)
!5273 = !DILocation(line: 1338, column: 19, scope: !5270)
!5274 = !DILocation(line: 1339, column: 3, scope: !5270)
!5275 = !DILocation(line: 1342, column: 19, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 1341, column: 3)
!5277 = !DILocation(line: 1343, column: 21, scope: !5276)
!5278 = !DILocation(line: 1343, column: 19, scope: !5276)
!5279 = !DILocation(line: 1350, column: 6, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1349, column: 10)
!5281 = !DILocation(line: 1350, column: 18, scope: !5280)
!5282 = !DILocation(line: 1350, column: 22, scope: !5280)
!5283 = !DILocation(line: 1350, column: 25, scope: !5280)
!5284 = !DILocation(line: 1350, column: 42, scope: !5280)
!5285 = !DILocation(line: 1350, column: 46, scope: !5280)
!5286 = !DILocation(line: 1349, column: 10, scope: !4997)
!5287 = !DILocation(line: 1354, column: 34, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1354, column: 10)
!5289 = !DILocation(line: 1355, column: 12, scope: !5288)
!5290 = !DILocation(line: 1355, column: 29, scope: !5288)
!5291 = !DILocation(line: 1355, column: 33, scope: !5288)
!5292 = !DILocation(line: 1354, column: 10, scope: !4997)
!5293 = !DILocation(line: 1359, column: 10, scope: !4997)
!5294 = !DILocation(line: 1361, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1361, column: 7)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1360, column: 6)
!5297 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1359, column: 10)
!5298 = !DILocation(line: 1361, column: 7, scope: !5296)
!5299 = !DILocation(line: 1366, column: 14, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1366, column: 7)
!5301 = !DILocation(line: 1366, column: 27, scope: !5300)
!5302 = !DILocation(line: 1366, column: 23, scope: !5300)
!5303 = !DILocation(line: 1375, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1375, column: 7)
!5305 = !DILocation(line: 1375, column: 15, scope: !5304)
!5306 = !{!4020, !3061, i64 928}
!5307 = !DILocation(line: 1376, column: 4, scope: !5304)
!5308 = !DILocation(line: 1379, column: 8, scope: !5304)
!5309 = !DILocation(line: 1379, column: 25, scope: !5304)
!5310 = !DILocation(line: 1379, column: 41, scope: !5304)
!5311 = !DILocation(line: 1388, column: 10, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1388, column: 10)
!5313 = !DILocation(line: 1388, column: 18, scope: !5312)
!5314 = !DILocation(line: 1388, column: 33, scope: !5312)
!5315 = !DILocation(line: 1388, column: 23, scope: !5312)
!5316 = !DILocation(line: 1395, column: 10, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1395, column: 10)
!5318 = !DILocation(line: 1395, column: 51, scope: !5317)
!5319 = !DILocation(line: 1395, column: 10, scope: !4997)
!5320 = !DILocation(line: 1397, column: 7, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1396, column: 6)
!5322 = !DILocation(line: 1398, column: 12, scope: !5321)
!5323 = !DILocation(line: 1399, column: 16, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 1399, column: 7)
!5325 = !DILocation(line: 1399, column: 23, scope: !5324)
!5326 = !DILocation(line: 1399, column: 26, scope: !5324)
!5327 = !DILocation(line: 1399, column: 33, scope: !5324)
!5328 = !DILocation(line: 1399, column: 40, scope: !5324)
!5329 = !DILocation(line: 1399, column: 43, scope: !5324)
!5330 = !DILocation(line: 1399, column: 50, scope: !5324)
!5331 = !DILocation(line: 1399, column: 7, scope: !5321)
!5332 = !DILocation(line: 1401, column: 11, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1401, column: 11)
!5334 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 1400, column: 3)
!5335 = !DILocation(line: 1401, column: 18, scope: !5333)
!5336 = !DILocation(line: 1401, column: 11, scope: !5334)
!5337 = !DILocation(line: 1404, column: 8, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 1402, column: 7)
!5339 = !DILocation(line: 1405, column: 7, scope: !5338)
!5340 = !DILocation(line: 1409, column: 8, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 1407, column: 7)
!5342 = !DILocation(line: 1412, column: 7, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 1412, column: 7)
!5344 = !DILocation(line: 1412, column: 46, scope: !5343)
!5345 = !DILocation(line: 1413, column: 4, scope: !5343)
!5346 = !DILocation(line: 1413, column: 7, scope: !5343)
!5347 = !DILocation(line: 1413, column: 21, scope: !5343)
!5348 = !DILocation(line: 1424, column: 19, scope: !4996)
!5349 = !DILocation(line: 1425, column: 7, scope: !4996)
!5350 = !DILocation(line: 1425, column: 18, scope: !4996)
!5351 = !DILocation(line: 1426, column: 4, scope: !4996)
!5352 = !DILocation(line: 1479, column: 13, scope: !5009)
!5353 = !DILocation(line: 1426, column: 7, scope: !4996)
!5354 = !DILocation(line: 1426, column: 46, scope: !4996)
!5355 = !DILocation(line: 1427, column: 15, scope: !4996)
!5356 = !DILocation(line: 1427, column: 4, scope: !4996)
!5357 = !DILocation(line: 1432, column: 7, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1432, column: 7)
!5359 = !DILocation(line: 1432, column: 7, scope: !4995)
!5360 = !DILocation(line: 1433, column: 7, scope: !5358)
!5361 = !DILocation(line: 1436, column: 7, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 1435, column: 3)
!5363 = !DILocation(line: 1439, column: 7, scope: !4995)
!5364 = !DILocation(line: 1441, column: 19, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1440, column: 3)
!5366 = !DILocation(line: 1441, column: 7, scope: !5365)
!5367 = !DILocation(line: 1443, column: 11, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1443, column: 11)
!5369 = !DILocation(line: 1443, column: 21, scope: !5368)
!5370 = !DILocation(line: 1443, column: 11, scope: !5365)
!5371 = !DILocation(line: 1446, column: 33, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 1446, column: 8)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1444, column: 7)
!5374 = !DILocation(line: 1446, column: 13, scope: !5372)
!5375 = !DILocation(line: 1446, column: 8, scope: !5373)
!5376 = !DILocation(line: 1447, column: 38, scope: !5372)
!5377 = !DILocation(line: 1447, column: 8, scope: !5372)
!5378 = !DILocation(line: 1448, column: 35, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1448, column: 13)
!5380 = !DILocation(line: 1448, column: 41, scope: !5379)
!5381 = !DILocation(line: 1448, column: 13, scope: !5372)
!5382 = !DILocation(line: 1449, column: 21, scope: !5379)
!5383 = !DILocation(line: 1450, column: 39, scope: !5379)
!5384 = !DILocation(line: 1449, column: 8, scope: !5379)
!5385 = !DILocation(line: 1451, column: 41, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1451, column: 13)
!5387 = !DILocation(line: 1451, column: 13, scope: !5379)
!5388 = !DILocation(line: 1452, column: 21, scope: !5386)
!5389 = !DILocation(line: 1453, column: 39, scope: !5386)
!5390 = !DILocation(line: 1452, column: 8, scope: !5386)
!5391 = !DILocation(line: 1461, column: 11, scope: !4993)
!5392 = !DILocation(line: 1459, column: 19, scope: !4993)
!5393 = !DILocation(line: 1462, column: 13, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1462, column: 11)
!5395 = !DILocation(line: 1462, column: 11, scope: !4993)
!5396 = !DILocation(line: 1468, column: 10, scope: !5394)
!5397 = !DILocation(line: 1471, column: 16, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1470, column: 7)
!5399 = !DILocation(line: 1471, column: 4, scope: !5398)
!5400 = !DILocation(line: 1471, column: 27, scope: !5398)
!5401 = !DILocation(line: 1476, column: 28, scope: !5002)
!5402 = !DILocation(line: 1476, column: 43, scope: !5002)
!5403 = !DILocation(line: 1476, column: 39, scope: !5002)
!5404 = !DILocation(line: 1476, column: 53, scope: !5002)
!5405 = !DILocation(line: 1477, column: 3, scope: !5002)
!5406 = !DILocation(line: 1477, column: 7, scope: !5002)
!5407 = !DILocation(line: 1479, column: 7, scope: !5002)
!5408 = !DILocation(line: 1481, column: 27, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1481, column: 11)
!5410 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1480, column: 3)
!5411 = !DILocation(line: 1493, column: 12, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1492, column: 11)
!5413 = !DILocation(line: 1493, column: 27, scope: !5412)
!5414 = !DILocation(line: 1168, column: 17, scope: !4966)
!5415 = !DILocation(line: 1493, column: 10, scope: !5412)
!5416 = !{!3415, !3415, i64 0}
!5417 = !DILocation(line: 1493, column: 4, scope: !5412)
!5418 = !DILocation(line: 1495, column: 31, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 1494, column: 16)
!5420 = !DILocation(line: 1496, column: 15, scope: !5419)
!5421 = !DILocation(line: 1496, column: 27, scope: !5419)
!5422 = !DILocation(line: 1496, column: 7, scope: !5419)
!5423 = !DILocation(line: 1495, column: 12, scope: !5419)
!5424 = !DILocation(line: 1495, column: 10, scope: !5419)
!5425 = !DILocation(line: 1495, column: 4, scope: !5419)
!5426 = !DILocation(line: 1501, column: 8, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1501, column: 8)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1499, column: 7)
!5429 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 1498, column: 16)
!5430 = !DILocation(line: 1501, column: 24, scope: !5427)
!5431 = !DILocation(line: 1501, column: 32, scope: !5427)
!5432 = !DILocation(line: 1501, column: 20, scope: !5427)
!5433 = !DILocation(line: 1502, column: 11, scope: !5427)
!5434 = !DILocation(line: 1503, column: 14, scope: !5427)
!5435 = !DILocation(line: 1503, column: 8, scope: !5427)
!5436 = !DILocation(line: 1505, column: 41, scope: !5427)
!5437 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !5438)
!5438 = distinct !DILocation(line: 1505, column: 24, scope: !5427)
!5439 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !5438)
!5440 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !5438)
!5441 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !5438)
!5442 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !5438)
!5443 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !5438)
!5444 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !5438)
!5445 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !5438)
!5446 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !5438)
!5447 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !5438)
!5448 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !5438)
!5449 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !5438)
!5450 = !DILocation(line: 1505, column: 16, scope: !5427)
!5451 = !DILocation(line: 1505, column: 14, scope: !5427)
!5452 = !DILocation(line: 1514, column: 24, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 1514, column: 8)
!5454 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1509, column: 7)
!5455 = !DILocation(line: 1519, column: 15, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 1519, column: 8)
!5457 = !DILocation(line: 1519, column: 8, scope: !5454)
!5458 = !DILocation(line: 1520, column: 16, scope: !5456)
!5459 = !DILocation(line: 1520, column: 31, scope: !5456)
!5460 = !DILocation(line: 1520, column: 14, scope: !5456)
!5461 = !DILocation(line: 1520, column: 8, scope: !5456)
!5462 = !DILocation(line: 1522, column: 16, scope: !5456)
!5463 = !DILocation(line: 1522, column: 14, scope: !5456)
!5464 = !DILocation(line: 1525, column: 52, scope: !5410)
!5465 = !DILocation(line: 1525, column: 47, scope: !5410)
!5466 = !DILocation(line: 1525, column: 16, scope: !5410)
!5467 = !DILocation(line: 1527, column: 3, scope: !5410)
!5468 = !DILocation(line: 1530, column: 11, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1530, column: 11)
!5470 = !DILocation(line: 1530, column: 50, scope: !5469)
!5471 = !DILocation(line: 1531, column: 25, scope: !5469)
!5472 = !DILocation(line: 1531, column: 15, scope: !5469)
!5473 = !DILocation(line: 1537, column: 17, scope: !5007)
!5474 = !DILocation(line: 1537, column: 11, scope: !5008)
!5475 = !DILocation(line: 1548, column: 4, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1538, column: 7)
!5477 = !DILocation(line: 1549, column: 8, scope: !5476)
!5478 = !DILocation(line: 1550, column: 30, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1549, column: 8)
!5480 = !DILocation(line: 1551, column: 15, scope: !5479)
!5481 = !DILocation(line: 1551, column: 27, scope: !5479)
!5482 = !DILocation(line: 1551, column: 7, scope: !5479)
!5483 = !DILocation(line: 1550, column: 14, scope: !5479)
!5484 = !DILocation(line: 1550, column: 8, scope: !5479)
!5485 = !DILocation(line: 1557, column: 29, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 1557, column: 12)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1554, column: 4)
!5488 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 1553, column: 13)
!5489 = !DILocation(line: 1557, column: 37, scope: !5486)
!5490 = !DILocation(line: 1557, column: 25, scope: !5486)
!5491 = !DILocation(line: 1558, column: 11, scope: !5486)
!5492 = !DILocation(line: 1559, column: 11, scope: !5486)
!5493 = !DILocation(line: 1559, column: 5, scope: !5486)
!5494 = !DILocation(line: 1562, column: 13, scope: !5486)
!5495 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !5496)
!5496 = distinct !DILocation(line: 1561, column: 22, scope: !5486)
!5497 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !5496)
!5498 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !5496)
!5499 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !5496)
!5500 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !5496)
!5501 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !5496)
!5502 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !5496)
!5503 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !5496)
!5504 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !5496)
!5505 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !5496)
!5506 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !5496)
!5507 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !5496)
!5508 = !DILocation(line: 1561, column: 13, scope: !5486)
!5509 = !DILocation(line: 1561, column: 11, scope: !5486)
!5510 = !DILocation(line: 1564, column: 27, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1564, column: 13)
!5512 = !DILocation(line: 1565, column: 25, scope: !5511)
!5513 = !DILocation(line: 1565, column: 9, scope: !5511)
!5514 = !DILocation(line: 1567, column: 9, scope: !5511)
!5515 = !DILocation(line: 2165, column: 29, scope: !5516, inlinedAt: !5521)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 2164, column: 9)
!5517 = distinct !DISubprogram(name: "string_to_key", scope: !3, file: !3, line: 2162, type: !3912, isLocal: false, isDefinition: true, scopeLine: 2163, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !5518)
!5518 = !{!5519, !5520}
!5519 = !DILocalVariable(name: "arg", arg: 1, scope: !5517, file: !3, line: 2162, type: !1124)
!5520 = !DILocalVariable(name: "multi_byte", arg: 2, scope: !5517, file: !3, line: 2162, type: !1131)
!5521 = distinct !DILocation(line: 1572, column: 16, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1571, column: 4)
!5523 = !DILocation(line: 2167, column: 9, scope: !5524, inlinedAt: !5521)
!5524 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 2166, column: 9)
!5525 = !DILocation(line: 2167, column: 2, scope: !5524, inlinedAt: !5521)
!5526 = !DILocation(line: 1569, column: 11, scope: !5511)
!5527 = !DILocation(line: 1569, column: 18, scope: !5511)
!5528 = !DILocation(line: 1570, column: 10, scope: !5511)
!5529 = !DILocation(line: 1564, column: 13, scope: !5488)
!5530 = !DILocation(line: 2162, column: 23, scope: !5517, inlinedAt: !5521)
!5531 = !DILocation(line: 2162, column: 32, scope: !5517, inlinedAt: !5521)
!5532 = !DILocation(line: 2164, column: 9, scope: !5517, inlinedAt: !5521)
!5533 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !5534)
!5534 = distinct !DILocation(line: 2165, column: 9, scope: !5516, inlinedAt: !5521)
!5535 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !5534)
!5536 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !5534)
!5537 = !DILocation(line: 4361, column: 5, scope: !3911, inlinedAt: !5534)
!5538 = !DILocation(line: 4362, column: 5, scope: !3911, inlinedAt: !5534)
!5539 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !5534)
!5540 = !DILocation(line: 4368, column: 9, scope: !3925, inlinedAt: !5534)
!5541 = !DILocation(line: 4368, column: 16, scope: !3925, inlinedAt: !5534)
!5542 = !DILocation(line: 4368, column: 23, scope: !3925, inlinedAt: !5534)
!5543 = !DILocation(line: 4368, column: 26, scope: !3925, inlinedAt: !5534)
!5544 = !DILocation(line: 4368, column: 33, scope: !3925, inlinedAt: !5534)
!5545 = !DILocation(line: 4368, column: 40, scope: !3925, inlinedAt: !5534)
!5546 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !5534)
!5547 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !5534)
!5548 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !5534)
!5549 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !5534)
!5550 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !5534)
!5551 = !DILocation(line: 4369, column: 2, scope: !3925, inlinedAt: !5534)
!5552 = !DILocation(line: 4372, column: 2, scope: !5161, inlinedAt: !5534)
!5553 = !DILocation(line: 4361, column: 10, scope: !3911, inlinedAt: !5534)
!5554 = !DILocation(line: 4373, column: 12, scope: !5161, inlinedAt: !5534)
!5555 = !DILocation(line: 4374, column: 8, scope: !5161, inlinedAt: !5534)
!5556 = !DILocation(line: 4376, column: 6, scope: !5167, inlinedAt: !5534)
!5557 = !DILocation(line: 4376, column: 6, scope: !5161, inlinedAt: !5534)
!5558 = !DILocation(line: 4378, column: 5, scope: !5161, inlinedAt: !5534)
!5559 = !DILocation(line: 4380, column: 1, scope: !3911, inlinedAt: !5534)
!5560 = !DILocation(line: 2165, column: 2, scope: !5516, inlinedAt: !5521)
!5561 = !DILocation(line: 1572, column: 16, scope: !5522)
!5562 = !DILocation(line: 1572, column: 14, scope: !5522)
!5563 = !DILocation(line: 1573, column: 23, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 1573, column: 12)
!5565 = !DILocation(line: 1573, column: 18, scope: !5564)
!5566 = !DILocation(line: 1579, column: 18, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1579, column: 13)
!5568 = !DILocation(line: 1579, column: 25, scope: !5567)
!5569 = !DILocation(line: 1579, column: 13, scope: !5567)
!5570 = !DILocation(line: 1579, column: 28, scope: !5567)
!5571 = !DILocation(line: 1579, column: 13, scope: !5511)
!5572 = !DILocation(line: 1167, column: 10, scope: !4966)
!5573 = !DILocation(line: 1583, column: 8, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 1580, column: 4)
!5575 = !DILocation(line: 1585, column: 12, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1585, column: 12)
!5577 = !DILocation(line: 1585, column: 14, scope: !5576)
!5578 = !DILocation(line: 1585, column: 19, scope: !5576)
!5579 = !DILocation(line: 1585, column: 23, scope: !5576)
!5580 = !DILocation(line: 1586, column: 13, scope: !5576)
!5581 = !DILocation(line: 1598, column: 8, scope: !5476)
!5582 = !DILocation(line: 1599, column: 16, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1598, column: 8)
!5584 = !DILocation(line: 1599, column: 32, scope: !5583)
!5585 = !DILocation(line: 1599, column: 30, scope: !5583)
!5586 = !DILocation(line: 1599, column: 14, scope: !5583)
!5587 = !DILocation(line: 1599, column: 8, scope: !5583)
!5588 = !DILocation(line: 1600, column: 8, scope: !5476)
!5589 = !DILocation(line: 1601, column: 16, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1600, column: 8)
!5591 = !DILocation(line: 1601, column: 32, scope: !5590)
!5592 = !DILocation(line: 1601, column: 30, scope: !5590)
!5593 = !DILocation(line: 1601, column: 14, scope: !5590)
!5594 = !DILocation(line: 1601, column: 8, scope: !5590)
!5595 = !DILocation(line: 1602, column: 8, scope: !5476)
!5596 = !DILocation(line: 1604, column: 43, scope: !5476)
!5597 = !DILocation(line: 1603, column: 16, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1602, column: 8)
!5599 = !DILocation(line: 1603, column: 32, scope: !5598)
!5600 = !DILocation(line: 1603, column: 30, scope: !5598)
!5601 = !DILocation(line: 1603, column: 14, scope: !5598)
!5602 = !DILocation(line: 1603, column: 8, scope: !5598)
!5603 = !DILocation(line: 1604, column: 13, scope: !5476)
!5604 = !DILocation(line: 1606, column: 7, scope: !5476)
!5605 = !DILocation(line: 1607, column: 16, scope: !5007)
!5606 = !DILocation(line: 1609, column: 14, scope: !5005)
!5607 = !DILocation(line: 1610, column: 14, scope: !5005)
!5608 = !DILocation(line: 1611, column: 14, scope: !5005)
!5609 = !DILocation(line: 1613, column: 14, scope: !5005)
!5610 = !DILocation(line: 1614, column: 14, scope: !5005)
!5611 = !DILocation(line: 1615, column: 14, scope: !5005)
!5612 = !DILocation(line: 1617, column: 14, scope: !5005)
!5613 = !DILocation(line: 1618, column: 14, scope: !5005)
!5614 = !DILocation(line: 1619, column: 14, scope: !5005)
!5615 = !DILocation(line: 1620, column: 14, scope: !5005)
!5616 = !DILocation(line: 1631, column: 5, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1630, column: 8)
!5618 = !DILocation(line: 1631, column: 14, scope: !5617)
!5619 = !DILocation(line: 1631, column: 31, scope: !5617)
!5620 = !DILocation(line: 1631, column: 37, scope: !5617)
!5621 = !DILocation(line: 1630, column: 8, scope: !5005)
!5622 = !DILocation(line: 1632, column: 32, scope: !5617)
!5623 = !DILocation(line: 1632, column: 8, scope: !5617)
!5624 = !DILocation(line: 1636, column: 13, scope: !5005)
!5625 = !DILocation(line: 1655, column: 14, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1655, column: 8)
!5627 = !DILocation(line: 1655, column: 31, scope: !5626)
!5628 = !DILocation(line: 1655, column: 37, scope: !5626)
!5629 = !DILocation(line: 1641, column: 15, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1639, column: 4)
!5631 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1638, column: 8)
!5632 = !DILocation(line: 1640, column: 32, scope: !5630)
!5633 = !DILocation(line: 1640, column: 20, scope: !5630)
!5634 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !5635)
!5635 = distinct !DILocation(line: 1642, column: 32, scope: !5630)
!5636 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !5635)
!5637 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !5635)
!5638 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !5635)
!5639 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !5635)
!5640 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !5635)
!5641 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !5635)
!5642 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !5635)
!5643 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !5635)
!5644 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !5635)
!5645 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !5635)
!5646 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !5635)
!5647 = !DILocation(line: 1642, column: 20, scope: !5630)
!5648 = !DILocation(line: 1648, column: 35, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1648, column: 12)
!5650 = !DILocation(line: 1648, column: 41, scope: !5649)
!5651 = !DILocation(line: 1649, column: 25, scope: !5649)
!5652 = !DILocation(line: 1649, column: 22, scope: !5649)
!5653 = !DILocation(line: 1649, column: 9, scope: !5649)
!5654 = !DILocation(line: 1656, column: 13, scope: !5626)
!5655 = !DILocation(line: 1657, column: 30, scope: !5626)
!5656 = !DILocation(line: 1657, column: 18, scope: !5626)
!5657 = !DILocation(line: 1657, column: 8, scope: !5626)
!5658 = !DILocation(line: 1662, column: 8, scope: !5005)
!5659 = !DILocation(line: 1665, column: 15, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1663, column: 4)
!5661 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1662, column: 8)
!5662 = !DILocation(line: 1665, column: 27, scope: !5660)
!5663 = !DILocation(line: 1665, column: 7, scope: !5660)
!5664 = !DILocation(line: 1664, column: 17, scope: !5660)
!5665 = !DILocation(line: 1612, column: 14, scope: !5005)
!5666 = !DILocation(line: 1667, column: 28, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1667, column: 12)
!5668 = !DILocation(line: 1667, column: 12, scope: !5660)
!5669 = !DILocation(line: 1671, column: 13, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1671, column: 9)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 1668, column: 8)
!5672 = !{!4828, !3061, i64 4}
!5673 = !DILocation(line: 1671, column: 9, scope: !5670)
!5674 = !DILocation(line: 1671, column: 9, scope: !5671)
!5675 = !DILocation(line: 1672, column: 18, scope: !5670)
!5676 = !DILocation(line: 1672, column: 9, scope: !5670)
!5677 = !DILocation(line: 1675, column: 18, scope: !5670)
!5678 = !DILocation(line: 1682, column: 19, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1682, column: 12)
!5680 = !DILocation(line: 1682, column: 12, scope: !5660)
!5681 = !DILocation(line: 1683, column: 14, scope: !5679)
!5682 = !DILocation(line: 1683, column: 5, scope: !5679)
!5683 = !DILocation(line: 2267, column: 19, scope: !3508, inlinedAt: !5684)
!5684 = distinct !DILocation(line: 1686, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1685, column: 8)
!5686 = !DILocation(line: 2267, column: 36, scope: !3508, inlinedAt: !5684)
!5687 = !DILocation(line: 2270, column: 28, scope: !3517, inlinedAt: !5684)
!5688 = !DILocation(line: 2270, column: 34, scope: !3517, inlinedAt: !5684)
!5689 = !DILocation(line: 2270, column: 46, scope: !3517, inlinedAt: !5684)
!5690 = !DILocation(line: 2270, column: 66, scope: !3517, inlinedAt: !5684)
!5691 = !DILocation(line: 2270, column: 70, scope: !3517, inlinedAt: !5684)
!5692 = !DILocation(line: 2270, column: 9, scope: !3508, inlinedAt: !5684)
!5693 = !DILocation(line: 2275, column: 24, scope: !5694, inlinedAt: !5684)
!5694 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 2275, column: 9)
!5695 = !DILocation(line: 2275, column: 36, scope: !5694, inlinedAt: !5684)
!5696 = !DILocation(line: 2275, column: 9, scope: !3508, inlinedAt: !5684)
!5697 = !DILocation(line: 2287, column: 25, scope: !3508, inlinedAt: !5684)
!5698 = !DILocation(line: 2288, column: 38, scope: !3508, inlinedAt: !5684)
!5699 = !DILocation(line: 2290, column: 38, scope: !3508, inlinedAt: !5684)
!5700 = !DILocation(line: 2290, column: 6, scope: !3508, inlinedAt: !5684)
!5701 = !DILocation(line: 2287, column: 5, scope: !3508, inlinedAt: !5684)
!5702 = !DILocation(line: 2293, column: 9, scope: !3530, inlinedAt: !5684)
!5703 = !DILocation(line: 2293, column: 31, scope: !3530, inlinedAt: !5684)
!5704 = !DILocation(line: 2294, column: 2, scope: !3530, inlinedAt: !5684)
!5705 = !DILocation(line: 1687, column: 11, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1687, column: 9)
!5707 = !DILocation(line: 1687, column: 9, scope: !5685)
!5708 = !DILocation(line: 1689, column: 14, scope: !5685)
!5709 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !5710)
!5710 = distinct !DILocation(line: 1695, column: 41, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 1694, column: 4)
!5712 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1693, column: 13)
!5713 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !5710)
!5714 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !5710)
!5715 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !5710)
!5716 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !5710)
!5717 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !5710)
!5718 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !5710)
!5719 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !5710)
!5720 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !5710)
!5721 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !5710)
!5722 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !5710)
!5723 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !5710)
!5724 = !DILocation(line: 1695, column: 29, scope: !5711)
!5725 = !DILocation(line: 1695, column: 17, scope: !5711)
!5726 = !DILocation(line: 1624, column: 10, scope: !5005)
!5727 = !DILocation(line: 1698, column: 4, scope: !5711)
!5728 = !DILocation(line: 1701, column: 8, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 1700, column: 4)
!5730 = !DILocation(line: 1708, column: 17, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1708, column: 12)
!5732 = !DILocation(line: 1709, column: 12, scope: !5731)
!5733 = !DILocation(line: 1709, column: 16, scope: !5731)
!5734 = !DILocation(line: 1709, column: 28, scope: !5731)
!5735 = !DILocation(line: 1711, column: 5, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1710, column: 8)
!5737 = !DILocation(line: 1713, column: 9, scope: !5736)
!5738 = !DILocation(line: 1714, column: 8, scope: !5736)
!5739 = !DILocation(line: 1719, column: 22, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1719, column: 17)
!5741 = !DILocation(line: 1720, column: 7, scope: !5740)
!5742 = !DILocation(line: 1720, column: 10, scope: !5740)
!5743 = !DILocation(line: 1719, column: 17, scope: !5731)
!5744 = !DILocation(line: 1722, column: 9, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 1721, column: 8)
!5746 = !DILocation(line: 1722, column: 7, scope: !5745)
!5747 = !DILocation(line: 1723, column: 5, scope: !5745)
!5748 = !DILocation(line: 1726, column: 25, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1724, column: 5)
!5750 = !DILocation(line: 1726, column: 23, scope: !5749)
!5751 = !DILocation(line: 1727, column: 6, scope: !5749)
!5752 = !DILocation(line: 1729, column: 25, scope: !5749)
!5753 = !DILocation(line: 1729, column: 23, scope: !5749)
!5754 = !DILocation(line: 1731, column: 6, scope: !5749)
!5755 = !DILocation(line: 1733, column: 25, scope: !5749)
!5756 = !DILocation(line: 1733, column: 23, scope: !5749)
!5757 = !DILocation(line: 1735, column: 6, scope: !5749)
!5758 = !DILocation(line: 1737, column: 25, scope: !5749)
!5759 = !DILocation(line: 1737, column: 23, scope: !5749)
!5760 = !DILocation(line: 1739, column: 6, scope: !5749)
!5761 = !DILocation(line: 1741, column: 5, scope: !5745)
!5762 = !DILocation(line: 1742, column: 17, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1742, column: 9)
!5764 = !DILocation(line: 1742, column: 9, scope: !5745)
!5765 = !DILocation(line: 1743, column: 19, scope: !5763)
!5766 = !DILocation(line: 1743, column: 9, scope: !5763)
!5767 = !DILocation(line: 1744, column: 19, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1744, column: 9)
!5769 = !DILocation(line: 1744, column: 9, scope: !5745)
!5770 = !DILocation(line: 1745, column: 21, scope: !5768)
!5771 = !DILocation(line: 1745, column: 9, scope: !5768)
!5772 = !DILocation(line: 1746, column: 19, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1746, column: 9)
!5774 = !DILocation(line: 1747, column: 9, scope: !5773)
!5775 = !DILocation(line: 1792, column: 27, scope: !5729)
!5776 = !DILocation(line: 1749, column: 8, scope: !5745)
!5777 = !DILocation(line: 1755, column: 22, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 1755, column: 17)
!5779 = !DILocation(line: 1756, column: 9, scope: !5778)
!5780 = !DILocation(line: 1756, column: 12, scope: !5778)
!5781 = !DILocation(line: 1755, column: 17, scope: !5740)
!5782 = !DILocation(line: 1758, column: 13, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1757, column: 8)
!5784 = !DILocation(line: 1759, column: 9, scope: !5783)
!5785 = !DILocation(line: 1759, column: 7, scope: !5783)
!5786 = !DILocation(line: 1760, column: 11, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1760, column: 9)
!5788 = !DILocation(line: 1760, column: 9, scope: !5783)
!5789 = !DILocation(line: 1761, column: 9, scope: !5787)
!5790 = !DILocation(line: 1762, column: 11, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1762, column: 9)
!5792 = !DILocation(line: 1762, column: 9, scope: !5783)
!5793 = !DILocation(line: 1763, column: 9, scope: !5791)
!5794 = !DILocation(line: 1764, column: 11, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1764, column: 9)
!5796 = !DILocation(line: 1764, column: 9, scope: !5783)
!5797 = !DILocation(line: 1765, column: 9, scope: !5795)
!5798 = !DILocation(line: 1766, column: 11, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1766, column: 9)
!5800 = !DILocation(line: 1766, column: 9, scope: !5783)
!5801 = !DILocation(line: 1767, column: 9, scope: !5799)
!5802 = !DILocation(line: 1768, column: 11, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1768, column: 9)
!5804 = !DILocation(line: 1768, column: 9, scope: !5783)
!5805 = !DILocation(line: 1769, column: 9, scope: !5803)
!5806 = !DILocation(line: 1770, column: 9, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1770, column: 9)
!5808 = !DILocation(line: 1770, column: 17, scope: !5807)
!5809 = !DILocation(line: 1770, column: 9, scope: !5783)
!5810 = !DILocation(line: 1771, column: 16, scope: !5807)
!5811 = !DILocation(line: 1771, column: 31, scope: !5807)
!5812 = !DILocation(line: 1771, column: 9, scope: !5807)
!5813 = !DILocation(line: 1771, column: 36, scope: !5807)
!5814 = !DILocation(line: 1772, column: 16, scope: !5783)
!5815 = !DILocation(line: 1773, column: 9, scope: !5783)
!5816 = !DILocation(line: 1774, column: 8, scope: !5783)
!5817 = !DILocation(line: 1779, column: 19, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1779, column: 19)
!5819 = !DILocation(line: 1779, column: 24, scope: !5818)
!5820 = !DILocation(line: 1780, column: 9, scope: !5818)
!5821 = !DILocation(line: 1780, column: 18, scope: !5818)
!5822 = !DILocation(line: 1781, column: 18, scope: !5818)
!5823 = !DILocation(line: 1781, column: 10, scope: !5818)
!5824 = !DILocation(line: 1783, column: 5, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1782, column: 8)
!5826 = !DILocation(line: 1784, column: 8, scope: !5825)
!5827 = !DILocation(line: 1792, column: 39, scope: !5729)
!5828 = !DILocation(line: 1793, column: 36, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1793, column: 12)
!5830 = !DILocation(line: 1793, column: 19, scope: !5829)
!5831 = !DILocation(line: 1794, column: 25, scope: !5829)
!5832 = !DILocation(line: 1794, column: 41, scope: !5829)
!5833 = !DILocation(line: 1794, column: 12, scope: !5829)
!5834 = !DILocation(line: 1794, column: 5, scope: !5829)
!5835 = !DILocation(line: 1795, column: 23, scope: !5729)
!5836 = !DILocation(line: 1795, column: 17, scope: !5729)
!5837 = !DILocation(line: 1796, column: 19, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1796, column: 12)
!5839 = !DILocation(line: 1796, column: 12, scope: !5729)
!5840 = !DILocation(line: 1808, column: 16, scope: !5729)
!5841 = !DILocation(line: 1808, column: 15, scope: !5729)
!5842 = !DILocation(line: 1808, column: 20, scope: !5729)
!5843 = !DILocation(line: 1810, column: 25, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1810, column: 9)
!5845 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1809, column: 8)
!5846 = !DILocation(line: 1810, column: 32, scope: !5844)
!5847 = !DILocation(line: 1810, column: 9, scope: !5845)
!5848 = !DILocation(line: 1820, column: 9, scope: !5844)
!5849 = !DILocation(line: 1821, column: 9, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1821, column: 9)
!5851 = !DILocation(line: 1822, column: 6, scope: !5850)
!5852 = !DILocation(line: 1822, column: 16, scope: !5850)
!5853 = !DILocation(line: 1822, column: 14, scope: !5850)
!5854 = !DILocation(line: 1822, column: 12, scope: !5850)
!5855 = !DILocation(line: 1822, column: 34, scope: !5850)
!5856 = !DILocation(line: 1821, column: 9, scope: !5845)
!5857 = !DILocation(line: 1825, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1823, column: 5)
!5859 = !DILocation(line: 1826, column: 16, scope: !5858)
!5860 = !DILocation(line: 1826, column: 13, scope: !5858)
!5861 = !DILocation(line: 1827, column: 11, scope: !5858)
!5862 = !DILocation(line: 1828, column: 5, scope: !5858)
!5863 = !DILocation(line: 1830, column: 20, scope: !5850)
!5864 = !DILocation(line: 1830, column: 16, scope: !5850)
!5865 = !DILocation(line: 1830, column: 11, scope: !5850)
!5866 = !DILocation(line: 1830, column: 14, scope: !5850)
!5867 = distinct !{!5867, !5868, !5869}
!5868 = !DILocation(line: 1808, column: 8, scope: !5729)
!5869 = !DILocation(line: 1831, column: 8, scope: !5729)
!5870 = !DILocation(line: 1832, column: 11, scope: !5729)
!5871 = !DILocation(line: 1839, column: 21, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1839, column: 12)
!5873 = !DILocation(line: 1840, column: 19, scope: !5872)
!5874 = !DILocation(line: 2267, column: 19, scope: !3508, inlinedAt: !5875)
!5875 = distinct !DILocation(line: 1842, column: 9, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1841, column: 8)
!5877 = !DILocation(line: 2267, column: 36, scope: !3508, inlinedAt: !5875)
!5878 = !DILocation(line: 2270, column: 28, scope: !3517, inlinedAt: !5875)
!5879 = !DILocation(line: 2270, column: 34, scope: !3517, inlinedAt: !5875)
!5880 = !DILocation(line: 2270, column: 46, scope: !3517, inlinedAt: !5875)
!5881 = !DILocation(line: 2270, column: 66, scope: !3517, inlinedAt: !5875)
!5882 = !DILocation(line: 2270, column: 70, scope: !3517, inlinedAt: !5875)
!5883 = !DILocation(line: 2270, column: 9, scope: !3508, inlinedAt: !5875)
!5884 = !DILocation(line: 2275, column: 24, scope: !5694, inlinedAt: !5875)
!5885 = !DILocation(line: 2275, column: 36, scope: !5694, inlinedAt: !5875)
!5886 = !DILocation(line: 2275, column: 9, scope: !3508, inlinedAt: !5875)
!5887 = !DILocation(line: 2287, column: 25, scope: !3508, inlinedAt: !5875)
!5888 = !DILocation(line: 2288, column: 38, scope: !3508, inlinedAt: !5875)
!5889 = !DILocation(line: 2290, column: 38, scope: !3508, inlinedAt: !5875)
!5890 = !DILocation(line: 2290, column: 6, scope: !3508, inlinedAt: !5875)
!5891 = !DILocation(line: 2287, column: 5, scope: !3508, inlinedAt: !5875)
!5892 = !DILocation(line: 2293, column: 9, scope: !3530, inlinedAt: !5875)
!5893 = !DILocation(line: 2293, column: 31, scope: !3530, inlinedAt: !5875)
!5894 = !DILocation(line: 1843, column: 11, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 1843, column: 9)
!5896 = !DILocation(line: 1845, column: 9, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1844, column: 5)
!5898 = !DILocation(line: 1846, column: 28, scope: !5897)
!5899 = !DILocation(line: 1846, column: 38, scope: !5897)
!5900 = !DILocation(line: 1847, column: 20, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1847, column: 13)
!5902 = !DILocation(line: 1848, column: 26, scope: !5901)
!5903 = !DILocation(line: 1848, column: 42, scope: !5901)
!5904 = !DILocation(line: 1848, column: 13, scope: !5901)
!5905 = !DILocation(line: 1848, column: 6, scope: !5901)
!5906 = !DILocation(line: 1849, column: 24, scope: !5897)
!5907 = !DILocation(line: 1849, column: 18, scope: !5897)
!5908 = !DILocation(line: 1850, column: 20, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1850, column: 13)
!5910 = !DILocation(line: 1850, column: 13, scope: !5897)
!5911 = !DILocation(line: 1852, column: 9, scope: !5897)
!5912 = !DILocation(line: 1853, column: 5, scope: !5897)
!5913 = !DILocation(line: 1858, column: 10, scope: !5729)
!5914 = !DILocation(line: 1859, column: 21, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1859, column: 12)
!5916 = !DILocation(line: 1859, column: 31, scope: !5915)
!5917 = !DILocation(line: 1861, column: 14, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 1860, column: 8)
!5919 = !DILocation(line: 1861, column: 9, scope: !5918)
!5920 = !DILocation(line: 1861, column: 7, scope: !5918)
!5921 = !DILocation(line: 1862, column: 9, scope: !5918)
!5922 = !DILocation(line: 1865, column: 37, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1865, column: 9)
!5924 = !DILocation(line: 1865, column: 17, scope: !5923)
!5925 = !DILocation(line: 1869, column: 9, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 1866, column: 5)
!5927 = !DILocation(line: 1874, column: 9, scope: !5918)
!5928 = !DILocation(line: 1874, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1874, column: 9)
!5930 = !DILocation(line: 1875, column: 28, scope: !5929)
!5931 = !DILocation(line: 1875, column: 21, scope: !5929)
!5932 = !DILocation(line: 1875, column: 9, scope: !5929)
!5933 = !DILocation(line: 1880, column: 12, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1880, column: 12)
!5935 = !DILocation(line: 1880, column: 19, scope: !5934)
!5936 = !DILocation(line: 1882, column: 32, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1881, column: 8)
!5938 = !DILocation(line: 1882, column: 35, scope: !5937)
!5939 = !DILocation(line: 1882, column: 44, scope: !5937)
!5940 = !DILocation(line: 1883, column: 11, scope: !5937)
!5941 = !DILocation(line: 1883, column: 14, scope: !5937)
!5942 = !DILocation(line: 1883, column: 22, scope: !5937)
!5943 = !DILocation(line: 1884, column: 9, scope: !5937)
!5944 = !DILocation(line: 1886, column: 18, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1885, column: 5)
!5946 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1884, column: 9)
!5947 = !DILocation(line: 1886, column: 13, scope: !5945)
!5948 = !DILocation(line: 1886, column: 11, scope: !5945)
!5949 = !DILocation(line: 1888, column: 24, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1888, column: 13)
!5951 = !DILocation(line: 1888, column: 19, scope: !5950)
!5952 = !DILocation(line: 1889, column: 18, scope: !5950)
!5953 = !DILocation(line: 1889, column: 32, scope: !5950)
!5954 = !DILocation(line: 1890, column: 11, scope: !5950)
!5955 = !DILocation(line: 1890, column: 26, scope: !5950)
!5956 = !DILocation(line: 1891, column: 8, scope: !5950)
!5957 = !DILocation(line: 1891, column: 11, scope: !5950)
!5958 = !DILocation(line: 1891, column: 26, scope: !5950)
!5959 = !DILocation(line: 1888, column: 13, scope: !5945)
!5960 = !DILocation(line: 1892, column: 7, scope: !5950)
!5961 = !DILocation(line: 1892, column: 6, scope: !5950)
!5962 = !DILocation(line: 1893, column: 9, scope: !5945)
!5963 = !DILocation(line: 1895, column: 9, scope: !5945)
!5964 = !DILocation(line: 1896, column: 5, scope: !5945)
!5965 = !DILocation(line: 1899, column: 18, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1898, column: 5)
!5967 = !DILocation(line: 1899, column: 13, scope: !5966)
!5968 = !DILocation(line: 1899, column: 11, scope: !5966)
!5969 = !DILocation(line: 1900, column: 9, scope: !5966)
!5970 = !DILocation(line: 1902, column: 9, scope: !5937)
!5971 = !DILocation(line: 1903, column: 16, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1902, column: 9)
!5973 = !DILocation(line: 1903, column: 9, scope: !5972)
!5974 = !DILocation(line: 1903, column: 19, scope: !5972)
!5975 = !DILocation(line: 1908, column: 12, scope: !5729)
!5976 = !DILocation(line: 1910, column: 5, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 1909, column: 8)
!5978 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1908, column: 12)
!5979 = !DILocation(line: 1911, column: 9, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1911, column: 9)
!5981 = !DILocation(line: 1911, column: 9, scope: !5977)
!5982 = !DILocation(line: 1914, column: 13, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1912, column: 5)
!5984 = !DILocation(line: 1929, column: 9, scope: !5983)
!5985 = !DILocation(line: 1916, column: 12, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1916, column: 10)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1915, column: 9)
!5988 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1914, column: 13)
!5989 = !DILocation(line: 1916, column: 10, scope: !5987)
!5990 = !DILocation(line: 1919, column: 16, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 1919, column: 14)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1917, column: 6)
!5993 = !DILocation(line: 1919, column: 14, scope: !5991)
!5994 = !DILocation(line: 1919, column: 19, scope: !5991)
!5995 = !DILocation(line: 1919, column: 14, scope: !5992)
!5996 = !DILocation(line: 1920, column: 7, scope: !5991)
!5997 = !DILocation(line: 1925, column: 10, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1923, column: 6)
!5999 = !DILocation(line: 1926, column: 10, scope: !5998)
!6000 = !DILocation(line: 1930, column: 5, scope: !5983)
!6001 = !DILocation(line: 1933, column: 18, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1933, column: 12)
!6003 = !DILocation(line: 1933, column: 12, scope: !5729)
!6004 = !DILocation(line: 1936, column: 22, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1936, column: 5)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1936, column: 5)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1934, column: 8)
!6008 = !DILocation(line: 1936, column: 5, scope: !6006)
!6009 = !DILocation(line: 1940, column: 13, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 1937, column: 5)
!6011 = !DILocation(line: 1942, column: 10, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1942, column: 10)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1941, column: 9)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 1940, column: 13)
!6015 = !DILocation(line: 1942, column: 13, scope: !6012)
!6016 = !DILocation(line: 1942, column: 20, scope: !6012)
!6017 = !DILocation(line: 1942, column: 23, scope: !6012)
!6018 = !DILocation(line: 1942, column: 32, scope: !6012)
!6019 = !DILocation(line: 1943, column: 12, scope: !6012)
!6020 = !DILocation(line: 1943, column: 15, scope: !6012)
!6021 = !DILocation(line: 1943, column: 37, scope: !6012)
!6022 = !DILocation(line: 1942, column: 10, scope: !6013)
!6023 = !DILocation(line: 1947, column: 10, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1944, column: 6)
!6025 = !DILocation(line: 1948, column: 10, scope: !6024)
!6026 = distinct !{!6026, !6008, !6027}
!6027 = !DILocation(line: 1961, column: 5, scope: !6006)
!6028 = !DILocation(line: 1953, column: 36, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1953, column: 10)
!6030 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1952, column: 9)
!6031 = !DILocation(line: 1953, column: 30, scope: !6029)
!6032 = !DILocation(line: 1954, column: 33, scope: !6029)
!6033 = !DILocation(line: 1954, column: 15, scope: !6029)
!6034 = !DILocation(line: 1954, column: 37, scope: !6029)
!6035 = !DILocation(line: 1953, column: 10, scope: !6030)
!6036 = !DILocation(line: 1956, column: 10, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 1955, column: 6)
!6038 = !DILocation(line: 1957, column: 10, scope: !6037)
!6039 = !DILocation(line: 1964, column: 21, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1964, column: 12)
!6041 = !DILocation(line: 1964, column: 12, scope: !5729)
!6042 = !DILocation(line: 1965, column: 9, scope: !6040)
!6043 = !DILocation(line: 1965, column: 5, scope: !6040)
!6044 = !DILocation(line: 1972, column: 23, scope: !5005)
!6045 = !DILocation(line: 1975, column: 9, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1975, column: 8)
!6047 = !DILocation(line: 1977, column: 5, scope: !6046)
!6048 = !DILocation(line: 1977, column: 25, scope: !6046)
!6049 = !DILocation(line: 1977, column: 31, scope: !6046)
!6050 = !DILocation(line: 1979, column: 19, scope: !6046)
!6051 = !DILocation(line: 1979, column: 8, scope: !6046)
!6052 = !DILocation(line: 1979, column: 37, scope: !6046)
!6053 = !DILocation(line: 1983, column: 24, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 1980, column: 4)
!6055 = !DILocation(line: 1986, column: 23, scope: !6054)
!6056 = !DILocation(line: 1987, column: 22, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1987, column: 12)
!6058 = !DILocation(line: 1987, column: 12, scope: !6054)
!6059 = !DILocation(line: 1988, column: 23, scope: !6057)
!6060 = !DILocation(line: 1988, column: 5, scope: !6057)
!6061 = !DILocation(line: 1989, column: 22, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1989, column: 12)
!6063 = !DILocation(line: 1989, column: 12, scope: !6054)
!6064 = !DILocation(line: 1990, column: 23, scope: !6062)
!6065 = !DILocation(line: 1990, column: 5, scope: !6062)
!6066 = !DILocation(line: 2428, column: 19, scope: !4526, inlinedAt: !6067)
!6067 = distinct !DILocation(line: 1995, column: 20, scope: !5024)
!6068 = !DILocation(line: 2428, column: 32, scope: !4526, inlinedAt: !6067)
!6069 = !DILocation(line: 2430, column: 9, scope: !4526, inlinedAt: !6067)
!6070 = !DILocation(line: 2431, column: 32, scope: !4535, inlinedAt: !6067)
!6071 = !DILocation(line: 2431, column: 2, scope: !4535, inlinedAt: !6067)
!6072 = !DILocation(line: 2434, column: 27, scope: !4540, inlinedAt: !6067)
!6073 = !DILocation(line: 2434, column: 35, scope: !4540, inlinedAt: !6067)
!6074 = !DILocation(line: 2434, column: 19, scope: !4540, inlinedAt: !6067)
!6075 = !DILocation(line: 2438, column: 27, scope: !4540, inlinedAt: !6067)
!6076 = !DILocation(line: 2438, column: 35, scope: !4540, inlinedAt: !6067)
!6077 = !DILocation(line: 2438, column: 19, scope: !4540, inlinedAt: !6067)
!6078 = !DILocation(line: 2439, column: 27, scope: !4540, inlinedAt: !6067)
!6079 = !DILocation(line: 2439, column: 35, scope: !4540, inlinedAt: !6067)
!6080 = !DILocation(line: 2439, column: 19, scope: !4540, inlinedAt: !6067)
!6081 = !DILocation(line: 2442, column: 29, scope: !4540, inlinedAt: !6067)
!6082 = !DILocation(line: 2442, column: 37, scope: !4540, inlinedAt: !6067)
!6083 = !DILocation(line: 2442, column: 21, scope: !4540, inlinedAt: !6067)
!6084 = !DILocation(line: 2445, column: 28, scope: !4540, inlinedAt: !6067)
!6085 = !DILocation(line: 2445, column: 36, scope: !4540, inlinedAt: !6067)
!6086 = !DILocation(line: 2445, column: 20, scope: !4540, inlinedAt: !6067)
!6087 = !DILocation(line: 2447, column: 27, scope: !4540, inlinedAt: !6067)
!6088 = !DILocation(line: 2447, column: 35, scope: !4540, inlinedAt: !6067)
!6089 = !DILocation(line: 2447, column: 19, scope: !4540, inlinedAt: !6067)
!6090 = !DILocation(line: 2449, column: 28, scope: !4540, inlinedAt: !6067)
!6091 = !DILocation(line: 2449, column: 36, scope: !4540, inlinedAt: !6067)
!6092 = !DILocation(line: 2449, column: 20, scope: !4540, inlinedAt: !6067)
!6093 = !DILocation(line: 2455, column: 30, scope: !4526, inlinedAt: !6067)
!6094 = !DILocation(line: 2455, column: 5, scope: !4526, inlinedAt: !6067)
!6095 = !DILocation(line: 1995, column: 16, scope: !5024)
!6096 = !DILocation(line: 1996, column: 31, scope: !5024)
!6097 = !DILocation(line: 1996, column: 16, scope: !5024)
!6098 = !DILocation(line: 2005, column: 10, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 2003, column: 12)
!6100 = !DILocation(line: 2005, column: 7, scope: !6099)
!6101 = !DILocation(line: 2007, column: 30, scope: !6099)
!6102 = !DILocation(line: 2007, column: 34, scope: !6099)
!6103 = !DILocation(line: 2007, column: 37, scope: !6099)
!6104 = !DILocation(line: 2003, column: 12, scope: !5024)
!6105 = !DILocation(line: 2008, column: 12, scope: !6099)
!6106 = !DILocation(line: 2008, column: 5, scope: !6099)
!6107 = !DILocation(line: 2014, column: 17, scope: !5024)
!6108 = !DILocation(line: 2019, column: 15, scope: !5024)
!6109 = !DILocation(line: 2023, column: 15, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 2023, column: 8)
!6111 = !DILocation(line: 2023, column: 8, scope: !5005)
!6112 = !DILocation(line: 2024, column: 8, scope: !6110)
!6113 = !DILocation(line: 2028, column: 4, scope: !5005)
!6114 = !DILocation(line: 2029, column: 4, scope: !5005)
!6115 = !DILocation(line: 2030, column: 4, scope: !5005)
!6116 = !DILocation(line: 2031, column: 4, scope: !5005)
!6117 = !DILocation(line: 2041, column: 17, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 2041, column: 8)
!6119 = !DILocation(line: 2041, column: 8, scope: !5027)
!6120 = !DILocation(line: 2043, column: 12, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 2043, column: 12)
!6122 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2042, column: 4)
!6123 = !DILocation(line: 2043, column: 46, scope: !6121)
!6124 = !DILocation(line: 2043, column: 12, scope: !6122)
!6125 = !DILocation(line: 2048, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2047, column: 4)
!6127 = !DILocation(line: 2039, column: 16, scope: !5027)
!6128 = !DILocation(line: 2049, column: 13, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 2049, column: 8)
!6130 = !DILocation(line: 2049, column: 22, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 2049, column: 8)
!6132 = !DILocation(line: 2049, column: 25, scope: !6131)
!6133 = !DILocation(line: 2050, column: 23, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 2050, column: 9)
!6135 = !DILocation(line: 2050, column: 28, scope: !6134)
!6136 = !DILocation(line: 2050, column: 9, scope: !6131)
!6137 = !DILocation(line: 2049, column: 46, scope: !6131)
!6138 = !DILocation(line: 2049, column: 8, scope: !6131)
!6139 = distinct !{!6139, !6140, !6141}
!6140 = !DILocation(line: 2049, column: 8, scope: !6129)
!6141 = !DILocation(line: 2051, column: 11, scope: !6129)
!6142 = !DILocation(line: 2053, column: 11, scope: !6126)
!6143 = !DILocation(line: 2054, column: 31, scope: !6126)
!6144 = !DILocation(line: 2054, column: 8, scope: !6126)
!6145 = !DILocation(line: 2055, column: 11, scope: !6126)
!6146 = !DILocation(line: 2057, column: 8, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 2057, column: 8)
!6148 = !DILocation(line: 2057, column: 8, scope: !5027)
!6149 = !DILocation(line: 2058, column: 8, scope: !6147)
!6150 = !DILocation(line: 2059, column: 4, scope: !5027)
!6151 = !DILocation(line: 2063, column: 7, scope: !5002)
!6152 = !DILocation(line: 2065, column: 44, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 2063, column: 7)
!6154 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !6155, file: !3, line: 2132, type: !1131)
!6155 = distinct !DISubprogram(name: "did_set_option", scope: !3, file: !3, line: 2131, type: !6156, isLocal: false, isDefinition: true, scopeLine: 2137, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{null, !1131, !1131, !1131, !1131}
!6158 = !{!6154, !6159, !6160, !6161, !6162}
!6159 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !6155, file: !3, line: 2133, type: !1131)
!6160 = !DILocalVariable(name: "new_value", arg: 3, scope: !6155, file: !3, line: 2134, type: !1131)
!6161 = !DILocalVariable(name: "value_checked", arg: 4, scope: !6155, file: !3, line: 2135, type: !1131)
!6162 = !DILocalVariable(name: "p", scope: !6155, file: !3, line: 2138, type: !4415)
!6163 = !DILocation(line: 2132, column: 13, scope: !6155, inlinedAt: !6164)
!6164 = distinct !DILocation(line: 2064, column: 7, scope: !6153)
!6165 = !DILocation(line: 2133, column: 13, scope: !6155, inlinedAt: !6164)
!6166 = !DILocation(line: 2135, column: 13, scope: !6155, inlinedAt: !6164)
!6167 = !DILocation(line: 2140, column: 5, scope: !6155, inlinedAt: !6164)
!6168 = !DILocation(line: 2140, column: 22, scope: !6155, inlinedAt: !6164)
!6169 = !DILocation(line: 2140, column: 28, scope: !6155, inlinedAt: !6164)
!6170 = !DILocation(line: 2428, column: 19, scope: !4526, inlinedAt: !6171)
!6171 = distinct !DILocation(line: 2145, column: 9, scope: !6155, inlinedAt: !6164)
!6172 = !DILocation(line: 2428, column: 32, scope: !4526, inlinedAt: !6171)
!6173 = !DILocation(line: 2430, column: 9, scope: !4526, inlinedAt: !6171)
!6174 = !DILocation(line: 2431, column: 32, scope: !4535, inlinedAt: !6171)
!6175 = !DILocation(line: 2431, column: 2, scope: !4535, inlinedAt: !6171)
!6176 = !DILocation(line: 2434, column: 27, scope: !4540, inlinedAt: !6171)
!6177 = !DILocation(line: 2434, column: 35, scope: !4540, inlinedAt: !6171)
!6178 = !DILocation(line: 2434, column: 19, scope: !4540, inlinedAt: !6171)
!6179 = !DILocation(line: 2438, column: 27, scope: !4540, inlinedAt: !6171)
!6180 = !DILocation(line: 2438, column: 35, scope: !4540, inlinedAt: !6171)
!6181 = !DILocation(line: 2438, column: 19, scope: !4540, inlinedAt: !6171)
!6182 = !DILocation(line: 2439, column: 27, scope: !4540, inlinedAt: !6171)
!6183 = !DILocation(line: 2439, column: 35, scope: !4540, inlinedAt: !6171)
!6184 = !DILocation(line: 2439, column: 19, scope: !4540, inlinedAt: !6171)
!6185 = !DILocation(line: 2442, column: 29, scope: !4540, inlinedAt: !6171)
!6186 = !DILocation(line: 2442, column: 37, scope: !4540, inlinedAt: !6171)
!6187 = !DILocation(line: 2442, column: 21, scope: !4540, inlinedAt: !6171)
!6188 = !DILocation(line: 2445, column: 28, scope: !4540, inlinedAt: !6171)
!6189 = !DILocation(line: 2445, column: 36, scope: !4540, inlinedAt: !6171)
!6190 = !DILocation(line: 2445, column: 20, scope: !4540, inlinedAt: !6171)
!6191 = !DILocation(line: 2447, column: 27, scope: !4540, inlinedAt: !6171)
!6192 = !DILocation(line: 2447, column: 35, scope: !4540, inlinedAt: !6171)
!6193 = !DILocation(line: 2447, column: 19, scope: !4540, inlinedAt: !6171)
!6194 = !DILocation(line: 2449, column: 28, scope: !4540, inlinedAt: !6171)
!6195 = !DILocation(line: 2449, column: 36, scope: !4540, inlinedAt: !6171)
!6196 = !DILocation(line: 2449, column: 20, scope: !4540, inlinedAt: !6171)
!6197 = !DILocation(line: 2138, column: 13, scope: !6155, inlinedAt: !6164)
!6198 = !DILocation(line: 2146, column: 10, scope: !6199, inlinedAt: !6164)
!6199 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2146, column: 9)
!6200 = !DILocation(line: 2146, column: 24, scope: !6199, inlinedAt: !6164)
!6201 = !DILocation(line: 2146, column: 28, scope: !6199, inlinedAt: !6164)
!6202 = !DILocation(line: 2148, column: 9, scope: !6199, inlinedAt: !6164)
!6203 = !DILocation(line: 2148, column: 6, scope: !6199, inlinedAt: !6164)
!6204 = !DILocation(line: 2151, column: 7, scope: !6199, inlinedAt: !6164)
!6205 = !DILocation(line: 2151, column: 10, scope: !6199, inlinedAt: !6164)
!6206 = !DILocation(line: 2151, column: 5, scope: !6199, inlinedAt: !6164)
!6207 = !DILocation(line: 2151, column: 2, scope: !6199, inlinedAt: !6164)
!6208 = !DILocation(line: 2152, column: 14, scope: !6199, inlinedAt: !6164)
!6209 = !DILocation(line: 2153, column: 7, scope: !6210, inlinedAt: !6164)
!6210 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2152, column: 14)
!6211 = !DILocation(line: 2153, column: 10, scope: !6210, inlinedAt: !6164)
!6212 = !DILocation(line: 2153, column: 5, scope: !6210, inlinedAt: !6164)
!6213 = !DILocation(line: 2153, column: 2, scope: !6210, inlinedAt: !6164)
!6214 = !DILocation(line: 2066, column: 6, scope: !4996)
!6215 = !DILocation(line: 2077, column: 11, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2076, column: 6)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 2075, column: 6)
!6218 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 2075, column: 6)
!6219 = !DILocation(line: 2075, column: 6, scope: !6218)
!6220 = !DILocation(line: 2077, column: 10, scope: !6216)
!6221 = !DILocation(line: 2077, column: 22, scope: !6216)
!6222 = !DILocation(line: 2078, column: 15, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 2078, column: 11)
!6224 = !DILocation(line: 2078, column: 11, scope: !6223)
!6225 = !DILocation(line: 2078, column: 18, scope: !6223)
!6226 = !DILocation(line: 2078, column: 26, scope: !6223)
!6227 = !DILocation(line: 2078, column: 29, scope: !6223)
!6228 = !DILocation(line: 2078, column: 34, scope: !6223)
!6229 = !DILocation(line: 2078, column: 11, scope: !6216)
!6230 = !DILocation(line: 2079, column: 4, scope: !6223)
!6231 = !DILocation(line: 2080, column: 9, scope: !6216)
!6232 = !DILocation(line: 2080, column: 7, scope: !6216)
!6233 = !DILocation(line: 2081, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 2081, column: 7)
!6235 = !DILocation(line: 2081, column: 12, scope: !6234)
!6236 = !DILocation(line: 2081, column: 7, scope: !6216)
!6237 = !DILocation(line: 2075, column: 26, scope: !6217)
!6238 = !DILocation(line: 2075, column: 20, scope: !6217)
!6239 = distinct !{!6239, !6240, !6241}
!6240 = !DILocation(line: 2077, column: 3, scope: !6216)
!6241 = !DILocation(line: 2079, column: 6, scope: !6216)
!6242 = !DILocation(line: 2086, column: 13, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2086, column: 6)
!6244 = !DILocation(line: 2086, column: 6, scope: !5000)
!6245 = !DILocation(line: 2088, column: 18, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 2087, column: 2)
!6247 = !DILocation(line: 2088, column: 36, scope: !6246)
!6248 = !DILocation(line: 2088, column: 6, scope: !6246)
!6249 = !DILocation(line: 2089, column: 15, scope: !6246)
!6250 = !DILocation(line: 2089, column: 10, scope: !6246)
!6251 = !DILocation(line: 2089, column: 30, scope: !6246)
!6252 = !DILocation(line: 2089, column: 8, scope: !6246)
!6253 = !DILocation(line: 2090, column: 10, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 2090, column: 10)
!6255 = !DILocation(line: 2090, column: 15, scope: !6254)
!6256 = !DILocation(line: 2090, column: 19, scope: !6254)
!6257 = !DILocation(line: 2090, column: 12, scope: !6254)
!6258 = !DILocation(line: 2090, column: 31, scope: !6254)
!6259 = !DILocation(line: 2090, column: 10, scope: !6246)
!6260 = !DILocation(line: 2093, column: 3, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2091, column: 6)
!6262 = !DILocation(line: 2094, column: 3, scope: !6261)
!6263 = !DILocation(line: 2095, column: 3, scope: !6261)
!6264 = !DILocation(line: 2095, column: 10, scope: !6261)
!6265 = !DILocation(line: 2095, column: 15, scope: !6261)
!6266 = !DILocation(line: 2095, column: 19, scope: !6261)
!6267 = !DILocation(line: 2095, column: 12, scope: !6261)
!6268 = !DILocation(line: 2095, column: 32, scope: !6261)
!6269 = !DILocation(line: 2098, column: 23, scope: !6246)
!6270 = !DILocation(line: 2096, column: 6, scope: !6261)
!6271 = !DILocation(line: 2098, column: 6, scope: !6246)
!6272 = !DILocation(line: 2100, column: 6, scope: !6246)
!6273 = !DILocation(line: 2101, column: 19, scope: !6246)
!6274 = !DILocation(line: 2101, column: 6, scope: !6246)
!6275 = !DILocation(line: 2102, column: 6, scope: !6246)
!6276 = !DILocation(line: 2104, column: 6, scope: !6246)
!6277 = !DILocation(line: 2107, column: 18, scope: !5000)
!6278 = !DILocation(line: 2107, column: 8, scope: !5000)
!6279 = !DILocation(line: 2107, column: 6, scope: !5000)
!6280 = !DILocation(line: 1186, column: 12, scope: !4966)
!6281 = !DILocation(line: 1186, column: 17, scope: !4966)
!6282 = distinct !{!6282, !5046, !6283}
!6283 = !DILocation(line: 2108, column: 5, scope: !4966)
!6284 = !DILocation(line: 2111, column: 9, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 2111, column: 9)
!6286 = !DILocation(line: 2111, column: 24, scope: !6285)
!6287 = !DILocation(line: 2111, column: 21, scope: !6285)
!6288 = !DILocation(line: 2114, column: 14, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2112, column: 5)
!6290 = !DILocation(line: 2115, column: 15, scope: !6289)
!6291 = !DILocation(line: 2116, column: 2, scope: !6289)
!6292 = !DILocation(line: 2117, column: 2, scope: !6289)
!6293 = !DILocation(line: 2118, column: 2, scope: !6289)
!6294 = !DILocation(line: 2119, column: 14, scope: !6289)
!6295 = !DILocation(line: 2120, column: 15, scope: !6289)
!6296 = !DILocation(line: 2121, column: 5, scope: !6289)
!6297 = !DILocation(line: 2124, column: 1, scope: !4966)
!6298 = distinct !DISubprogram(name: "showoptions", scope: !3, file: !3, line: 4388, type: !6299, isLocal: true, isDefinition: true, scopeLine: 4391, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6301)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{null, !1131, !1131}
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315}
!6302 = !DILocalVariable(name: "all", arg: 1, scope: !6298, file: !3, line: 4389, type: !1131)
!6303 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !6298, file: !3, line: 4390, type: !1131)
!6304 = !DILocalVariable(name: "p", scope: !6298, file: !3, line: 4392, type: !2848)
!6305 = !DILocalVariable(name: "col", scope: !6298, file: !3, line: 4393, type: !1131)
!6306 = !DILocalVariable(name: "isterm", scope: !6298, file: !3, line: 4394, type: !1131)
!6307 = !DILocalVariable(name: "varp", scope: !6298, file: !3, line: 4395, type: !1124)
!6308 = !DILocalVariable(name: "items", scope: !6298, file: !3, line: 4396, type: !2847)
!6309 = !DILocalVariable(name: "item_count", scope: !6298, file: !3, line: 4397, type: !1131)
!6310 = !DILocalVariable(name: "run", scope: !6298, file: !3, line: 4398, type: !1131)
!6311 = !DILocalVariable(name: "row", scope: !6298, file: !3, line: 4399, type: !1131)
!6312 = !DILocalVariable(name: "rows", scope: !6298, file: !3, line: 4399, type: !1131)
!6313 = !DILocalVariable(name: "cols", scope: !6298, file: !3, line: 4400, type: !1131)
!6314 = !DILocalVariable(name: "i", scope: !6298, file: !3, line: 4401, type: !1131)
!6315 = !DILocalVariable(name: "len", scope: !6298, file: !3, line: 4402, type: !1131)
!6316 = !DILocation(line: 4389, column: 10, scope: !6298)
!6317 = !DILocation(line: 4390, column: 10, scope: !6298)
!6318 = !DILocation(line: 4407, column: 13, scope: !6298)
!6319 = !DILocation(line: 4396, column: 24, scope: !6298)
!6320 = !DILocation(line: 4408, column: 15, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 4408, column: 9)
!6322 = !DILocation(line: 4408, column: 9, scope: !6298)
!6323 = !DILocation(line: 4412, column: 13, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 4412, column: 9)
!6325 = !DILocation(line: 4412, column: 9, scope: !6298)
!6326 = !DILocation(line: 4413, column: 17, scope: !6324)
!6327 = !DILocation(line: 4413, column: 2, scope: !6324)
!6328 = !DILocation(line: 4414, column: 24, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 4414, column: 14)
!6330 = !DILocation(line: 4414, column: 14, scope: !6324)
!6331 = !DILocation(line: 4415, column: 17, scope: !6329)
!6332 = !DILocation(line: 4415, column: 2, scope: !6329)
!6333 = !DILocation(line: 4416, column: 24, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 4416, column: 14)
!6335 = !DILocation(line: 4416, column: 14, scope: !6329)
!6336 = !DILocation(line: 4417, column: 17, scope: !6334)
!6337 = !DILocation(line: 4417, column: 2, scope: !6334)
!6338 = !DILocation(line: 4419, column: 17, scope: !6334)
!6339 = !DILocation(line: 4419, column: 2, scope: !6334)
!6340 = !DILocation(line: 4398, column: 11, scope: !6298)
!6341 = !DILocation(line: 4427, column: 28, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 4427, column: 5)
!6343 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 4427, column: 5)
!6344 = !DILocation(line: 4427, column: 32, scope: !6342)
!6345 = !DILocation(line: 4427, column: 31, scope: !6342)
!6346 = !DILocation(line: 4427, column: 5, scope: !6343)
!6347 = !DILocation(line: 4397, column: 11, scope: !6298)
!6348 = !DILocation(line: 4392, column: 23, scope: !6298)
!6349 = !DILocation(line: 4433, column: 27, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 4433, column: 2)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 4433, column: 2)
!6352 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 4428, column: 5)
!6353 = !DILocation(line: 4433, column: 36, scope: !6350)
!6354 = !DILocation(line: 4433, column: 2, scope: !6351)
!6355 = !DILocation(line: 4436, column: 10, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 4436, column: 10)
!6357 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 4434, column: 2)
!6358 = !DILocation(line: 4436, column: 10, scope: !6357)
!6359 = !DILocation(line: 4395, column: 14, scope: !6298)
!6360 = !DILocation(line: 4954, column: 32, scope: !3485, inlinedAt: !6361)
!6361 = distinct !DILocation(line: 4440, column: 15, scope: !6357)
!6362 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !6361)
!6363 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !6361)
!6364 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !6361)
!6365 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !6361)
!6366 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !6361)
!6367 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !6361)
!6368 = !DILocation(line: 4394, column: 11, scope: !6298)
!6369 = !DILocation(line: 4441, column: 10, scope: !6357)
!6370 = !DILocation(line: 4443, column: 10, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 4443, column: 7)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 4442, column: 6)
!6373 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 4441, column: 10)
!6374 = !DILocation(line: 4443, column: 16, scope: !6371)
!6375 = !DILocation(line: 4443, column: 31, scope: !6371)
!6376 = !DILocation(line: 4443, column: 27, scope: !6371)
!6377 = !DILocation(line: 4444, column: 14, scope: !6371)
!6378 = !DILocation(line: 4444, column: 7, scope: !6371)
!6379 = !DILocation(line: 4447, column: 10, scope: !6373)
!6380 = !DILocation(line: 4448, column: 15, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 4448, column: 10)
!6382 = !DILocation(line: 4449, column: 7, scope: !6381)
!6383 = !DILocation(line: 4449, column: 24, scope: !6381)
!6384 = !DILocation(line: 4449, column: 21, scope: !6381)
!6385 = !DILocation(line: 4450, column: 17, scope: !6381)
!6386 = !DILocation(line: 4451, column: 17, scope: !6381)
!6387 = !DILocation(line: 4451, column: 45, scope: !6381)
!6388 = !DILocation(line: 4503, column: 34, scope: !4230, inlinedAt: !6389)
!6389 = distinct !DILocation(line: 4451, column: 21, scope: !6381)
!6390 = !DILocation(line: 4503, column: 45, scope: !4230, inlinedAt: !6389)
!6391 = !DILocation(line: 4503, column: 55, scope: !4230, inlinedAt: !6389)
!6392 = !DILocation(line: 4509, column: 16, scope: !4230, inlinedAt: !6389)
!6393 = !DILocation(line: 4509, column: 22, scope: !4230, inlinedAt: !6389)
!6394 = !DILocation(line: 4509, column: 34, scope: !4230, inlinedAt: !6389)
!6395 = !DILocation(line: 4509, column: 11, scope: !4230, inlinedAt: !6389)
!6396 = !DILocation(line: 4510, column: 18, scope: !4245, inlinedAt: !6389)
!6397 = !DILocation(line: 4510, column: 9, scope: !4230, inlinedAt: !6389)
!6398 = !DILocation(line: 4511, column: 10, scope: !4245, inlinedAt: !6389)
!6399 = !DILocation(line: 4511, column: 41, scope: !4245, inlinedAt: !6389)
!6400 = !DILocation(line: 4511, column: 24, scope: !4245, inlinedAt: !6389)
!6401 = !DILocation(line: 4448, column: 10, scope: !6357)
!6402 = !DILocation(line: 4512, column: 18, scope: !4253, inlinedAt: !6389)
!6403 = !DILocation(line: 4512, column: 9, scope: !4230, inlinedAt: !6389)
!6404 = !DILocation(line: 4515, column: 10, scope: !4253, inlinedAt: !6389)
!6405 = !DILocation(line: 4515, column: 45, scope: !4253, inlinedAt: !6389)
!6406 = !DILocation(line: 4515, column: 26, scope: !4253, inlinedAt: !6389)
!6407 = !DILocation(line: 4515, column: 23, scope: !4253, inlinedAt: !6389)
!6408 = !DILocation(line: 4517, column: 13, scope: !4230, inlinedAt: !6389)
!6409 = !DILocation(line: 4517, column: 55, scope: !4230, inlinedAt: !6389)
!6410 = !DILocation(line: 4453, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 4452, column: 6)
!6412 = !DILocation(line: 4454, column: 13, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 4453, column: 7)
!6414 = !DILocation(line: 4402, column: 11, scope: !6298)
!6415 = !DILocation(line: 4454, column: 7, scope: !6413)
!6416 = !DILocation(line: 4455, column: 15, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 4455, column: 12)
!6418 = !DILocation(line: 4455, column: 21, scope: !6417)
!6419 = !DILocation(line: 4455, column: 12, scope: !6413)
!6420 = !DILocation(line: 4459, column: 7, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 4458, column: 3)
!6422 = !DILocation(line: 4460, column: 18, scope: !6421)
!6423 = !DILocation(line: 4460, column: 13, scope: !6421)
!6424 = !DILocation(line: 4460, column: 52, scope: !6421)
!6425 = !DILocation(line: 4460, column: 40, scope: !6421)
!6426 = !DILocation(line: 4460, column: 38, scope: !6421)
!6427 = !DILocation(line: 4460, column: 62, scope: !6421)
!6428 = !DILocation(line: 4462, column: 12, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 4462, column: 7)
!6430 = !DILocation(line: 4462, column: 25, scope: !6429)
!6431 = !DILocation(line: 4463, column: 12, scope: !6429)
!6432 = !DILocation(line: 4463, column: 24, scope: !6429)
!6433 = !DILocation(line: 4464, column: 23, scope: !6429)
!6434 = !DILocation(line: 4464, column: 7, scope: !6429)
!6435 = !DILocation(line: 4464, column: 27, scope: !6429)
!6436 = !DILocation(line: 4433, column: 46, scope: !6350)
!6437 = distinct !{!6437, !6354, !6438}
!6438 = !DILocation(line: 4466, column: 2, scope: !6351)
!6439 = !DILocation(line: 4471, column: 10, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 4471, column: 6)
!6441 = !DILocation(line: 4471, column: 6, scope: !6352)
!6442 = !DILocation(line: 4473, column: 14, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 4472, column: 2)
!6444 = !DILocation(line: 4473, column: 33, scope: !6443)
!6445 = !DILocation(line: 4473, column: 13, scope: !6443)
!6446 = !DILocation(line: 4400, column: 11, scope: !6298)
!6447 = !DILocation(line: 4474, column: 15, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 4474, column: 10)
!6449 = !DILocation(line: 4474, column: 10, scope: !6443)
!6450 = !DILocation(line: 4476, column: 25, scope: !6443)
!6451 = !DILocation(line: 4476, column: 32, scope: !6443)
!6452 = !DILocation(line: 4476, column: 37, scope: !6443)
!6453 = !DILocation(line: 4399, column: 16, scope: !6298)
!6454 = !DILocation(line: 4477, column: 2, scope: !6443)
!6455 = !DILocation(line: 4399, column: 11, scope: !6298)
!6456 = !DILocation(line: 4480, column: 20, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 4480, column: 2)
!6458 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 4480, column: 2)
!6459 = !DILocation(line: 4480, column: 27, scope: !6457)
!6460 = !DILocation(line: 4480, column: 31, scope: !6457)
!6461 = !DILocation(line: 4480, column: 30, scope: !6457)
!6462 = !DILocation(line: 4480, column: 2, scope: !6458)
!6463 = !DILocation(line: 4482, column: 6, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 4481, column: 2)
!6465 = !DILocation(line: 4483, column: 10, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 4483, column: 10)
!6467 = !DILocation(line: 4483, column: 10, scope: !6464)
!6468 = !DILocation(line: 4393, column: 11, scope: !6298)
!6469 = !DILocation(line: 4401, column: 11, scope: !6298)
!6470 = !DILocation(line: 4486, column: 22, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4486, column: 6)
!6472 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 4486, column: 6)
!6473 = !DILocation(line: 4486, column: 6, scope: !6472)
!6474 = !DILocation(line: 4488, column: 11, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 4487, column: 6)
!6476 = !DILocation(line: 4489, column: 14, scope: !6475)
!6477 = !DILocation(line: 4489, column: 3, scope: !6475)
!6478 = !DILocation(line: 4490, column: 7, scope: !6475)
!6479 = !DILocation(line: 4486, column: 38, scope: !6471)
!6480 = distinct !{!6480, !6473, !6481}
!6481 = !DILocation(line: 4491, column: 6, scope: !6472)
!6482 = !DILocation(line: 4492, column: 6, scope: !6464)
!6483 = !DILocation(line: 4493, column: 6, scope: !6464)
!6484 = !DILocation(line: 4480, column: 40, scope: !6457)
!6485 = distinct !{!6485, !6462, !6486}
!6486 = !DILocation(line: 4494, column: 2, scope: !6458)
!6487 = !DILocation(line: 4427, column: 41, scope: !6342)
!6488 = !DILocation(line: 4427, column: 23, scope: !6342)
!6489 = distinct !{!6489, !6346, !6490}
!6490 = !DILocation(line: 4495, column: 5, scope: !6343)
!6491 = !DILocation(line: 4496, column: 5, scope: !6298)
!6492 = !DILocation(line: 4497, column: 1, scope: !6298)
!6493 = distinct !DISubprogram(name: "showoneopt", scope: !3, file: !3, line: 4525, type: !6494, isLocal: true, isDefinition: true, scopeLine: 4528, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6496)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{null, !2848, !1131}
!6496 = !{!6497, !6498, !6499, !6500}
!6497 = !DILocalVariable(name: "p", arg: 1, scope: !6493, file: !3, line: 4526, type: !2848)
!6498 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !6493, file: !3, line: 4527, type: !1131)
!6499 = !DILocalVariable(name: "varp", scope: !6493, file: !3, line: 4529, type: !1124)
!6500 = !DILocalVariable(name: "save_silent", scope: !6493, file: !3, line: 4530, type: !1131)
!6501 = !DILocation(line: 4526, column: 23, scope: !6493)
!6502 = !DILocation(line: 4527, column: 11, scope: !6493)
!6503 = !DILocation(line: 4530, column: 24, scope: !6493)
!6504 = !DILocation(line: 4530, column: 10, scope: !6493)
!6505 = !DILocation(line: 4532, column: 17, scope: !6493)
!6506 = !DILocation(line: 4533, column: 18, scope: !6493)
!6507 = !DILocation(line: 4535, column: 12, scope: !6493)
!6508 = !DILocation(line: 4529, column: 13, scope: !6493)
!6509 = !DILocation(line: 4538, column: 13, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 4538, column: 9)
!6511 = !DILocation(line: 4538, column: 19, scope: !6510)
!6512 = !DILocation(line: 4538, column: 29, scope: !6510)
!6513 = !DILocation(line: 4538, column: 33, scope: !6510)
!6514 = !DILocation(line: 4538, column: 49, scope: !6510)
!6515 = !DILocation(line: 4538, column: 57, scope: !6510)
!6516 = !DILocation(line: 4538, column: 45, scope: !6510)
!6517 = !DILocation(line: 4538, column: 9, scope: !6493)
!6518 = !DILocation(line: 4539, column: 9, scope: !6510)
!6519 = !DILocation(line: 4539, column: 30, scope: !6510)
!6520 = !DILocation(line: 4540, column: 2, scope: !6510)
!6521 = !DILocation(line: 4541, column: 18, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 4541, column: 14)
!6523 = !DILocation(line: 4541, column: 24, scope: !6522)
!6524 = !DILocation(line: 4541, column: 34, scope: !6522)
!6525 = !DILocation(line: 4541, column: 37, scope: !6522)
!6526 = !DILocation(line: 4541, column: 50, scope: !6522)
!6527 = !DILocation(line: 4541, column: 14, scope: !6510)
!6528 = !DILocation(line: 4542, column: 2, scope: !6522)
!6529 = !DILocation(line: 4544, column: 2, scope: !6522)
!6530 = !DILocation(line: 4545, column: 17, scope: !6493)
!6531 = !DILocation(line: 4545, column: 5, scope: !6493)
!6532 = !DILocation(line: 4546, column: 14, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 4546, column: 9)
!6534 = !DILocation(line: 4546, column: 20, scope: !6533)
!6535 = !DILocation(line: 4546, column: 9, scope: !6493)
!6536 = !DILocation(line: 4548, column: 2, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 4547, column: 5)
!6538 = !DILocation(line: 4550, column: 2, scope: !6537)
!6539 = !DILocation(line: 4551, column: 15, scope: !6537)
!6540 = !DILocation(line: 4551, column: 2, scope: !6537)
!6541 = !DILocation(line: 4552, column: 5, scope: !6537)
!6542 = !DILocation(line: 4554, column: 17, scope: !6493)
!6543 = !DILocation(line: 4555, column: 18, scope: !6493)
!6544 = !DILocation(line: 4556, column: 1, scope: !6493)
!6545 = !DILocation(line: 2602, column: 10, scope: !2966)
!6546 = !DILocation(line: 2603, column: 13, scope: !2966)
!6547 = !DILocation(line: 2604, column: 10, scope: !2966)
!6548 = !DILocation(line: 2605, column: 10, scope: !2966)
!6549 = !DILocation(line: 2607, column: 22, scope: !2966)
!6550 = !DILocation(line: 2607, column: 10, scope: !2966)
!6551 = !DILocation(line: 2609, column: 10, scope: !2966)
!6552 = !DILocation(line: 2613, column: 10, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2613, column: 9)
!6554 = !DILocation(line: 2615, column: 6, scope: !6553)
!6555 = !DILocation(line: 2615, column: 3, scope: !6553)
!6556 = !DILocation(line: 2617, column: 9, scope: !6553)
!6557 = !DILocation(line: 2617, column: 26, scope: !6553)
!6558 = !DILocation(line: 2617, column: 32, scope: !6553)
!6559 = !DILocation(line: 2613, column: 9, scope: !2966)
!6560 = !DILocation(line: 2624, column: 20, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2624, column: 9)
!6562 = !DILocation(line: 2624, column: 48, scope: !6561)
!6563 = !DILocation(line: 2624, column: 9, scope: !2966)
!6564 = !DILocation(line: 2494, column: 40, scope: !4567, inlinedAt: !6565)
!6565 = distinct !DILocation(line: 2632, column: 5, scope: !2966)
!6566 = !DILocation(line: 2625, column: 46, scope: !6561)
!6567 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !6568)
!6568 = distinct !DILocation(line: 2625, column: 29, scope: !6561)
!6569 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !6568)
!6570 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !6568)
!6571 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !6568)
!6572 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !6568)
!6573 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !6568)
!6574 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !6568)
!6575 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !6568)
!6576 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !6568)
!6577 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !6568)
!6578 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !6568)
!6579 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !6568)
!6580 = !DILocation(line: 2625, column: 21, scope: !6561)
!6581 = !DILocation(line: 2625, column: 2, scope: !6561)
!6582 = !DILocation(line: 2629, column: 18, scope: !2966)
!6583 = !DILocation(line: 2491, column: 25, scope: !4567, inlinedAt: !6565)
!6584 = !DILocation(line: 2491, column: 56, scope: !4567, inlinedAt: !6565)
!6585 = !DILocation(line: 2491, column: 38, scope: !4567, inlinedAt: !6565)
!6586 = !DILocation(line: 2493, column: 56, scope: !4567, inlinedAt: !6565)
!6587 = !DILocation(line: 2494, column: 10, scope: !4567, inlinedAt: !6565)
!6588 = !DILocation(line: 2495, column: 12, scope: !4567, inlinedAt: !6565)
!6589 = !DILocation(line: 2498, column: 21, scope: !4585, inlinedAt: !6565)
!6590 = !DILocation(line: 2498, column: 9, scope: !4567, inlinedAt: !6565)
!6591 = !DILocation(line: 2499, column: 28, scope: !4585, inlinedAt: !6565)
!6592 = !DILocation(line: 2499, column: 25, scope: !4585, inlinedAt: !6565)
!6593 = !DILocation(line: 2499, column: 2, scope: !4585, inlinedAt: !6565)
!6594 = !DILocation(line: 2503, column: 28, scope: !4593, inlinedAt: !6565)
!6595 = !DILocation(line: 2503, column: 14, scope: !4593, inlinedAt: !6565)
!6596 = !DILocation(line: 2503, column: 52, scope: !4593, inlinedAt: !6565)
!6597 = !DILocation(line: 2503, column: 71, scope: !4593, inlinedAt: !6565)
!6598 = !DILocation(line: 2504, column: 32, scope: !4593, inlinedAt: !6565)
!6599 = !DILocation(line: 2504, column: 2, scope: !4593, inlinedAt: !6565)
!6600 = !DILocation(line: 2505, column: 28, scope: !4600, inlinedAt: !6565)
!6601 = !DILocation(line: 2505, column: 14, scope: !4600, inlinedAt: !6565)
!6602 = !DILocation(line: 2507, column: 12, scope: !4603, inlinedAt: !6565)
!6603 = !DILocation(line: 2507, column: 6, scope: !4604, inlinedAt: !6565)
!6604 = !DILocation(line: 2508, column: 6, scope: !4603, inlinedAt: !6565)
!6605 = !DILocation(line: 2508, column: 35, scope: !4603, inlinedAt: !6565)
!6606 = !DILocation(line: 2508, column: 48, scope: !4603, inlinedAt: !6565)
!6607 = !DILocation(line: 2509, column: 17, scope: !4610, inlinedAt: !6565)
!6608 = !DILocation(line: 2509, column: 11, scope: !4603, inlinedAt: !6565)
!6609 = !DILocation(line: 2510, column: 6, scope: !4610, inlinedAt: !6565)
!6610 = !DILocation(line: 2510, column: 35, scope: !4610, inlinedAt: !6565)
!6611 = !DILocation(line: 2510, column: 48, scope: !4610, inlinedAt: !6565)
!6612 = !DILocation(line: 2636, column: 24, scope: !2966)
!6613 = !DILocation(line: 2640, column: 9, scope: !2966)
!6614 = !DILocation(line: 2641, column: 27, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2640, column: 9)
!6616 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !6617)
!6617 = distinct !DILocation(line: 2641, column: 10, scope: !6615)
!6618 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !6617)
!6619 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !6617)
!6620 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !6617)
!6621 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !6617)
!6622 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !6617)
!6623 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !6617)
!6624 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !6617)
!6625 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !6617)
!6626 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !6617)
!6627 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !6617)
!6628 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !6617)
!6629 = !DILocation(line: 2641, column: 2, scope: !6615)
!6630 = !DILocation(line: 2641, column: 58, scope: !6615)
!6631 = !DILocation(line: 2648, column: 21, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2648, column: 9)
!6633 = !DILocation(line: 2648, column: 9, scope: !2966)
!6634 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !6635)
!6635 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !6636)
!6636 = distinct !DILocation(line: 6848, column: 24, scope: !6637, inlinedAt: !6642)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 6848, column: 5)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 6848, column: 5)
!6639 = distinct !DISubprogram(name: "compatible_set", scope: !3, file: !3, line: 6844, type: !2735, isLocal: true, isDefinition: true, scopeLine: 6845, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !6640)
!6640 = !{!6641}
!6641 = !DILocalVariable(name: "opt_idx", scope: !6639, file: !3, line: 6846, type: !1131)
!6642 = distinct !DILocation(line: 2649, column: 2, scope: !6632)
!6643 = !DILocation(line: 6846, column: 13, scope: !6639, inlinedAt: !6642)
!6644 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !6636)
!6645 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !6635)
!6646 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !6635)
!6647 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !6635)
!6648 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !6635)
!6649 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !6635)
!6650 = !DILocation(line: 6848, column: 5, scope: !6638, inlinedAt: !6642)
!6651 = !DILocation(line: 6849, column: 29, scope: !6652, inlinedAt: !6642)
!6652 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 6849, column: 10)
!6653 = !DILocation(line: 6849, column: 35, scope: !6652, inlinedAt: !6642)
!6654 = !DILocation(line: 6849, column: 47, scope: !6652, inlinedAt: !6642)
!6655 = !DILocation(line: 6849, column: 44, scope: !6652, inlinedAt: !6642)
!6656 = !DILocation(line: 6850, column: 32, scope: !6652, inlinedAt: !6642)
!6657 = !DILocation(line: 6850, column: 44, scope: !6652, inlinedAt: !6642)
!6658 = !DILocation(line: 6851, column: 6, scope: !6652, inlinedAt: !6642)
!6659 = !DILocation(line: 6848, column: 58, scope: !6637, inlinedAt: !6642)
!6660 = !DILocation(line: 6848, column: 5, scope: !6637, inlinedAt: !6642)
!6661 = distinct !{!6661, !6662, !6663}
!6662 = !DILocation(line: 6848, column: 5, scope: !6638)
!6663 = !DILocation(line: 6851, column: 48, scope: !6638)
!6664 = !DILocation(line: 6852, column: 5, scope: !6639, inlinedAt: !6642)
!6665 = !DILocation(line: 6853, column: 5, scope: !6639, inlinedAt: !6642)
!6666 = !DILocation(line: 2649, column: 2, scope: !6632)
!6667 = !DILocation(line: 2652, column: 21, scope: !2983)
!6668 = !DILocation(line: 2652, column: 9, scope: !2966)
!6669 = !DILocation(line: 2654, column: 11, scope: !2983)
!6670 = !DILocation(line: 2654, column: 10, scope: !2983)
!6671 = !DILocation(line: 2654, column: 8, scope: !2983)
!6672 = !DILocation(line: 2654, column: 2, scope: !2983)
!6673 = !DILocation(line: 2655, column: 26, scope: !2982)
!6674 = !DILocation(line: 2655, column: 14, scope: !2983)
!6675 = !DILocation(line: 2657, column: 11, scope: !2982)
!6676 = !DILocation(line: 2657, column: 10, scope: !2982)
!6677 = !DILocation(line: 2657, column: 8, scope: !2982)
!6678 = !DILocation(line: 2657, column: 2, scope: !2982)
!6679 = !DILocation(line: 2661, column: 30, scope: !2981)
!6680 = !DILocation(line: 2661, column: 38, scope: !2981)
!6681 = !DILocation(line: 2661, column: 26, scope: !2981)
!6682 = !DILocation(line: 2661, column: 50, scope: !2981)
!6683 = !DILocation(line: 2661, column: 46, scope: !2981)
!6684 = !DILocation(line: 2661, column: 59, scope: !2981)
!6685 = !DILocation(line: 2662, column: 2, scope: !2981)
!6686 = !DILocation(line: 2667, column: 30, scope: !2980)
!6687 = !DILocation(line: 2667, column: 38, scope: !2980)
!6688 = !DILocation(line: 2667, column: 26, scope: !2980)
!6689 = !DILocation(line: 2667, column: 61, scope: !2980)
!6690 = !DILocation(line: 2667, column: 46, scope: !2980)
!6691 = !DILocation(line: 2672, column: 14, scope: !2978)
!6692 = !{!3411, !3061, i64 7464}
!6693 = !DILocation(line: 2672, column: 25, scope: !2978)
!6694 = !DILocation(line: 2672, column: 22, scope: !2978)
!6695 = !DILocation(line: 2674, column: 6, scope: !2977)
!6696 = !DILocation(line: 2674, column: 13, scope: !2977)
!6697 = !DILocation(line: 2675, column: 13, scope: !2977)
!6698 = !DILocation(line: 2677, column: 6, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 2677, column: 6)
!6700 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 2677, column: 6)
!6701 = !DILocation(line: 2677, column: 6, scope: !6700)
!6702 = !DILocation(line: 2683, column: 15, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 2683, column: 7)
!6704 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 2678, column: 6)
!6705 = !DILocation(line: 2684, column: 5, scope: !6703)
!6706 = !DILocation(line: 2685, column: 8, scope: !6703)
!6707 = !DILocation(line: 2685, column: 26, scope: !6703)
!6708 = !DILocation(line: 2685, column: 29, scope: !6703)
!6709 = !DILocation(line: 2685, column: 42, scope: !6703)
!6710 = !{!3411, !3109, i64 8}
!6711 = !DILocation(line: 2685, column: 49, scope: !6703)
!6712 = !DILocation(line: 2683, column: 7, scope: !6704)
!6713 = !DILocation(line: 2687, column: 7, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2686, column: 3)
!6715 = !DILocation(line: 2688, column: 31, scope: !6714)
!6716 = !DILocation(line: 2688, column: 39, scope: !6714)
!6717 = !{!3411, !3109, i64 152}
!6718 = !DILocation(line: 2688, column: 7, scope: !6714)
!6719 = !DILocation(line: 2689, column: 3, scope: !6714)
!6720 = distinct !{!6720, !6701, !6721}
!6721 = !DILocation(line: 2690, column: 6, scope: !6700)
!6722 = !DILocation(line: 2691, column: 13, scope: !2977)
!6723 = !DILocation(line: 2692, column: 2, scope: !2978)
!6724 = !DILocation(line: 2692, column: 2, scope: !2977)
!6725 = !DILocation(line: 2696, column: 38, scope: !2996)
!6726 = !DILocation(line: 2696, column: 26, scope: !2996)
!6727 = !DILocation(line: 2696, column: 14, scope: !2980)
!6728 = !DILocation(line: 2699, column: 15, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2699, column: 6)
!6730 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 2697, column: 5)
!6731 = !{!3411, !3061, i64 7184}
!6732 = !DILocation(line: 2699, column: 7, scope: !6729)
!6733 = !DILocation(line: 2699, column: 22, scope: !6729)
!6734 = !DILocation(line: 2700, column: 19, scope: !6729)
!6735 = !DILocation(line: 2700, column: 6, scope: !6729)
!6736 = !DILocation(line: 2703, column: 6, scope: !6730)
!6737 = !DILocation(line: 2704, column: 14, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2703, column: 6)
!6739 = !DILocation(line: 2704, column: 25, scope: !6738)
!6740 = !{!3411, !3061, i64 7764}
!6741 = !DILocation(line: 2704, column: 6, scope: !6738)
!6742 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6744)
!6743 = distinct !DISubprogram(name: "redraw_titles", scope: !3, file: !3, line: 2463, type: !2735, isLocal: false, isDefinition: true, scopeLine: 2464, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!6744 = distinct !DILocation(line: 2707, column: 2, scope: !6730)
!6745 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6744)
!6746 = !DILocation(line: 2709, column: 5, scope: !6730)
!6747 = !DILocation(line: 2712, column: 26, scope: !2995)
!6748 = !DILocation(line: 2712, column: 14, scope: !2996)
!6749 = !DILocation(line: 2714, column: 7, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 2714, column: 6)
!6751 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2713, column: 5)
!6752 = !DILocation(line: 2714, column: 6, scope: !6751)
!6753 = !DILocation(line: 2715, column: 6, scope: !6750)
!6754 = !DILocation(line: 2720, column: 38, scope: !2994)
!6755 = !DILocation(line: 2720, column: 26, scope: !2994)
!6756 = !DILocation(line: 2720, column: 14, scope: !2995)
!6757 = !DILocation(line: 2724, column: 14, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2724, column: 6)
!6759 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 2721, column: 5)
!6760 = !{!3411, !3061, i64 7152}
!6761 = !DILocation(line: 2724, column: 6, scope: !6758)
!6762 = !DILocation(line: 2724, column: 21, scope: !6758)
!6763 = !DILocation(line: 2724, column: 25, scope: !6758)
!6764 = !DILocation(line: 2724, column: 47, scope: !6758)
!6765 = !DILocation(line: 2724, column: 63, scope: !6758)
!6766 = !DILocation(line: 2724, column: 51, scope: !6758)
!6767 = !DILocation(line: 2725, column: 9, scope: !6758)
!6768 = !DILocation(line: 2725, column: 12, scope: !6758)
!6769 = !DILocation(line: 2725, column: 20, scope: !6758)
!6770 = !{!3411, !3109, i64 9128}
!6771 = !DILocation(line: 2725, column: 27, scope: !6758)
!6772 = !DILocation(line: 2725, column: 35, scope: !6758)
!6773 = !DILocation(line: 2725, column: 39, scope: !6758)
!6774 = !DILocation(line: 2724, column: 6, scope: !6759)
!6775 = !DILocation(line: 2727, column: 6, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 2726, column: 2)
!6777 = !DILocation(line: 2727, column: 14, scope: !6776)
!6778 = !DILocation(line: 2727, column: 21, scope: !6776)
!6779 = !DILocation(line: 2728, column: 6, scope: !6776)
!6780 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6781)
!6781 = distinct !DILocation(line: 2732, column: 2, scope: !6759)
!6782 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6781)
!6783 = !DILocation(line: 2734, column: 5, scope: !6759)
!6784 = !DILocation(line: 2737, column: 38, scope: !2993)
!6785 = !DILocation(line: 2737, column: 26, scope: !2993)
!6786 = !DILocation(line: 2737, column: 14, scope: !2994)
!6787 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 2739, column: 2, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 2738, column: 5)
!6790 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6788)
!6791 = !DILocation(line: 2740, column: 5, scope: !6789)
!6792 = !DILocation(line: 2742, column: 38, scope: !2992)
!6793 = !DILocation(line: 2742, column: 26, scope: !2992)
!6794 = !DILocation(line: 2742, column: 14, scope: !2993)
!6795 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6796)
!6796 = distinct !DILocation(line: 2744, column: 2, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 2743, column: 5)
!6798 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6796)
!6799 = !DILocation(line: 2745, column: 5, scope: !6797)
!6800 = !DILocation(line: 2747, column: 38, scope: !2991)
!6801 = !DILocation(line: 2747, column: 26, scope: !2991)
!6802 = !DILocation(line: 2747, column: 14, scope: !2992)
!6803 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6804)
!6804 = distinct !DILocation(line: 2749, column: 2, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 2748, column: 5)
!6806 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6804)
!6807 = !DILocation(line: 2750, column: 5, scope: !6805)
!6808 = !DILocation(line: 2754, column: 38, scope: !2990)
!6809 = !DILocation(line: 2754, column: 26, scope: !2990)
!6810 = !DILocation(line: 2754, column: 14, scope: !2991)
!6811 = !DILocation(line: 2756, column: 37, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 2755, column: 5)
!6813 = !{!3411, !3061, i64 6832}
!6814 = !DILocation(line: 2756, column: 2, scope: !6812)
!6815 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !6816)
!6816 = distinct !DILocation(line: 2758, column: 2, scope: !6812)
!6817 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !6816)
!6818 = !DILocation(line: 2760, column: 5, scope: !6812)
!6819 = !DILocation(line: 2763, column: 38, scope: !2989)
!6820 = !DILocation(line: 2763, column: 26, scope: !2989)
!6821 = !DILocation(line: 2763, column: 45, scope: !2989)
!6822 = !DILocation(line: 2763, column: 69, scope: !2989)
!6823 = !{!3411, !3061, i64 6860}
!6824 = !DILocation(line: 2763, column: 58, scope: !2989)
!6825 = !DILocation(line: 2763, column: 14, scope: !2990)
!6826 = !DILocation(line: 2765, column: 17, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 2764, column: 5)
!6828 = !DILocation(line: 2765, column: 2, scope: !6827)
!6829 = !DILocation(line: 2767, column: 5, scope: !6827)
!6830 = !DILocation(line: 2770, column: 38, scope: !2988)
!6831 = !DILocation(line: 2770, column: 26, scope: !2988)
!6832 = !DILocation(line: 2770, column: 14, scope: !2989)
!6833 = !DILocation(line: 2772, column: 14, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 2772, column: 6)
!6835 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 2771, column: 5)
!6836 = !{!3411, !3061, i64 7232}
!6837 = !DILocation(line: 2772, column: 6, scope: !6834)
!6838 = !DILocation(line: 2772, column: 25, scope: !6834)
!6839 = !DILocation(line: 2772, column: 22, scope: !6834)
!6840 = !DILocation(line: 2773, column: 6, scope: !6834)
!6841 = !DILocation(line: 2777, column: 6, scope: !6834)
!6842 = !DILocation(line: 2781, column: 26, scope: !2987)
!6843 = !DILocation(line: 2781, column: 14, scope: !2988)
!6844 = !DILocation(line: 2785, column: 17, scope: !2986)
!6845 = !DILocation(line: 2785, column: 6, scope: !2986)
!6846 = !DILocation(line: 2783, column: 10, scope: !2986)
!6847 = !DILocation(line: 2788, column: 6, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2788, column: 6)
!6849 = !DILocation(line: 2788, column: 19, scope: !6848)
!6850 = !DILocation(line: 2788, column: 14, scope: !6848)
!6851 = !DILocation(line: 2790, column: 6, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 2789, column: 2)
!6853 = !DILocation(line: 2791, column: 6, scope: !6852)
!6854 = !DILocation(line: 2792, column: 52, scope: !6852)
!6855 = !DILocation(line: 2792, column: 6, scope: !6852)
!6856 = !DILocation(line: 2793, column: 2, scope: !6852)
!6857 = !DILocation(line: 2795, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 2795, column: 11)
!6859 = !DILocation(line: 2795, column: 25, scope: !6858)
!6860 = !DILocation(line: 2795, column: 20, scope: !6858)
!6861 = !DILocation(line: 2796, column: 6, scope: !6858)
!6862 = !DILocation(line: 2800, column: 26, scope: !3006)
!6863 = !DILocation(line: 2800, column: 14, scope: !2987)
!6864 = !DILocation(line: 6593, column: 9, scope: !6865, inlinedAt: !6866)
!6865 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 6593, column: 9)
!6866 = distinct !DILocation(line: 2802, column: 2, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 2801, column: 5)
!6868 = !DILocation(line: 6593, column: 9, scope: !3027, inlinedAt: !6866)
!6869 = !DILocation(line: 6599, column: 6, scope: !6870, inlinedAt: !6866)
!6870 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 6594, column: 5)
!6871 = !DILocation(line: 6591, column: 12, scope: !3027, inlinedAt: !6866)
!6872 = !DILocation(line: 6602, column: 6, scope: !6873, inlinedAt: !6866)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 6602, column: 6)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 6600, column: 2)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 6599, column: 6)
!6876 = !DILocation(line: 6602, column: 6, scope: !6877, inlinedAt: !6866)
!6877 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 6602, column: 6)
!6878 = !DILocation(line: 6604, column: 30, scope: !6879, inlinedAt: !6866)
!6879 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 6603, column: 6)
!6880 = !{!3411, !3110, i64 7272}
!6881 = !DILocation(line: 6604, column: 8, scope: !6879, inlinedAt: !6866)
!6882 = !DILocation(line: 6604, column: 23, scope: !6879, inlinedAt: !6866)
!6883 = !{!3411, !3110, i64 7288}
!6884 = !DILocation(line: 6605, column: 30, scope: !6879, inlinedAt: !6866)
!6885 = !{!3411, !3110, i64 7296}
!6886 = !DILocation(line: 6605, column: 8, scope: !6879, inlinedAt: !6866)
!6887 = !DILocation(line: 6605, column: 23, scope: !6879, inlinedAt: !6866)
!6888 = !{!3411, !3110, i64 7312}
!6889 = !DILocation(line: 6606, column: 31, scope: !6879, inlinedAt: !6866)
!6890 = !{!3411, !3110, i64 7208}
!6891 = !DILocation(line: 6606, column: 8, scope: !6879, inlinedAt: !6866)
!6892 = !DILocation(line: 6606, column: 24, scope: !6879, inlinedAt: !6866)
!6893 = !{!3411, !3110, i64 7216}
!6894 = !DILocation(line: 6607, column: 30, scope: !6879, inlinedAt: !6866)
!6895 = !{!3411, !3061, i64 6808}
!6896 = !DILocation(line: 6607, column: 8, scope: !6879, inlinedAt: !6866)
!6897 = !DILocation(line: 6607, column: 23, scope: !6879, inlinedAt: !6866)
!6898 = !{!3411, !3061, i64 6812}
!6899 = !DILocation(line: 6608, column: 30, scope: !6879, inlinedAt: !6866)
!6900 = !{!3411, !3061, i64 6952}
!6901 = !DILocation(line: 6608, column: 8, scope: !6879, inlinedAt: !6866)
!6902 = !DILocation(line: 6608, column: 23, scope: !6879, inlinedAt: !6866)
!6903 = !{!3411, !3061, i64 6960}
!6904 = !DILocation(line: 6610, column: 12, scope: !6905, inlinedAt: !6866)
!6905 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 6610, column: 7)
!6906 = !{!3411, !3109, i64 7336}
!6907 = !DILocation(line: 6610, column: 7, scope: !6905, inlinedAt: !6866)
!6908 = !DILocation(line: 6610, column: 7, scope: !6879, inlinedAt: !6866)
!6909 = !DILocation(line: 6611, column: 7, scope: !6905, inlinedAt: !6866)
!6910 = !DILocation(line: 6612, column: 32, scope: !6879, inlinedAt: !6866)
!6911 = !DILocation(line: 6612, column: 27, scope: !6879, inlinedAt: !6866)
!6912 = !DILocation(line: 6612, column: 61, scope: !6879, inlinedAt: !6866)
!6913 = !DILocation(line: 6612, column: 58, scope: !6879, inlinedAt: !6866)
!6914 = !DILocation(line: 6612, column: 41, scope: !6879, inlinedAt: !6866)
!6915 = !DILocation(line: 6613, column: 12, scope: !6879, inlinedAt: !6866)
!6916 = !DILocation(line: 6612, column: 25, scope: !6879, inlinedAt: !6866)
!6917 = distinct !{!6917, !6918, !6919}
!6918 = !DILocation(line: 6602, column: 6, scope: !6873)
!6919 = !DILocation(line: 6615, column: 6, scope: !6873)
!6920 = !DILocation(line: 6618, column: 16, scope: !6874, inlinedAt: !6866)
!6921 = !DILocation(line: 6618, column: 14, scope: !6874, inlinedAt: !6866)
!6922 = !DILocation(line: 6619, column: 17, scope: !6874, inlinedAt: !6866)
!6923 = !DILocation(line: 6619, column: 15, scope: !6874, inlinedAt: !6866)
!6924 = !DILocation(line: 6621, column: 16, scope: !6874, inlinedAt: !6866)
!6925 = !DILocation(line: 6621, column: 14, scope: !6874, inlinedAt: !6866)
!6926 = !DILocation(line: 6624, column: 16, scope: !6874, inlinedAt: !6866)
!6927 = !DILocation(line: 6624, column: 14, scope: !6874, inlinedAt: !6866)
!6928 = !DILocation(line: 6625, column: 19, scope: !6874, inlinedAt: !6866)
!6929 = !DILocation(line: 6625, column: 17, scope: !6874, inlinedAt: !6866)
!6930 = !DILocation(line: 6628, column: 21, scope: !6874, inlinedAt: !6866)
!6931 = !DILocation(line: 6628, column: 19, scope: !6874, inlinedAt: !6866)
!6932 = !DILocation(line: 6629, column: 21, scope: !6874, inlinedAt: !6866)
!6933 = !DILocation(line: 6629, column: 19, scope: !6874, inlinedAt: !6866)
!6934 = !DILocation(line: 6630, column: 22, scope: !6874, inlinedAt: !6866)
!6935 = !DILocation(line: 6630, column: 20, scope: !6874, inlinedAt: !6866)
!6936 = !DILocation(line: 6631, column: 21, scope: !6874, inlinedAt: !6866)
!6937 = !DILocation(line: 6631, column: 19, scope: !6874, inlinedAt: !6866)
!6938 = !DILocation(line: 6632, column: 21, scope: !6874, inlinedAt: !6866)
!6939 = !DILocation(line: 6632, column: 19, scope: !6874, inlinedAt: !6866)
!6940 = !DILocation(line: 6634, column: 10, scope: !6941, inlinedAt: !6866)
!6941 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 6634, column: 10)
!6942 = !DILocation(line: 6634, column: 10, scope: !6874, inlinedAt: !6866)
!6943 = !DILocation(line: 6635, column: 3, scope: !6941, inlinedAt: !6866)
!6944 = !DILocation(line: 6636, column: 23, scope: !6874, inlinedAt: !6866)
!6945 = !DILocation(line: 6636, column: 43, scope: !6874, inlinedAt: !6866)
!6946 = !DILocation(line: 6636, column: 40, scope: !6874, inlinedAt: !6866)
!6947 = !DILocation(line: 6636, column: 30, scope: !6874, inlinedAt: !6866)
!6948 = !DILocation(line: 6636, column: 58, scope: !6874, inlinedAt: !6866)
!6949 = !DILocation(line: 6636, column: 21, scope: !6874, inlinedAt: !6866)
!6950 = !DILocation(line: 6638, column: 2, scope: !6874, inlinedAt: !6866)
!6951 = !DILocation(line: 6645, column: 2, scope: !6952, inlinedAt: !6866)
!6952 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 6645, column: 2)
!6953 = !DILocation(line: 6645, column: 2, scope: !6954, inlinedAt: !6866)
!6954 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 6645, column: 2)
!6955 = !DILocation(line: 6647, column: 11, scope: !6956, inlinedAt: !6866)
!6956 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 6646, column: 2)
!6957 = !DILocation(line: 6647, column: 18, scope: !6956, inlinedAt: !6866)
!6958 = !DILocation(line: 6648, column: 11, scope: !6956, inlinedAt: !6866)
!6959 = !DILocation(line: 6648, column: 18, scope: !6956, inlinedAt: !6866)
!6960 = !DILocation(line: 6649, column: 11, scope: !6956, inlinedAt: !6866)
!6961 = !DILocation(line: 6649, column: 19, scope: !6956, inlinedAt: !6866)
!6962 = !DILocation(line: 6650, column: 11, scope: !6956, inlinedAt: !6866)
!6963 = !DILocation(line: 6650, column: 18, scope: !6956, inlinedAt: !6866)
!6964 = !DILocation(line: 6651, column: 11, scope: !6956, inlinedAt: !6866)
!6965 = !DILocation(line: 6651, column: 18, scope: !6956, inlinedAt: !6866)
!6966 = !DILocation(line: 6653, column: 15, scope: !6967, inlinedAt: !6866)
!6967 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 6653, column: 10)
!6968 = !DILocation(line: 6653, column: 10, scope: !6967, inlinedAt: !6866)
!6969 = !DILocation(line: 6653, column: 10, scope: !6956, inlinedAt: !6866)
!6970 = !DILocation(line: 6654, column: 3, scope: !6967, inlinedAt: !6866)
!6971 = !DILocation(line: 6655, column: 22, scope: !6956, inlinedAt: !6866)
!6972 = !DILocation(line: 6655, column: 20, scope: !6956, inlinedAt: !6866)
!6973 = !DILocation(line: 6656, column: 15, scope: !6974, inlinedAt: !6866)
!6974 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 6656, column: 10)
!6975 = !DILocation(line: 6656, column: 10, scope: !6974, inlinedAt: !6866)
!6976 = !DILocation(line: 6656, column: 10, scope: !6956, inlinedAt: !6866)
!6977 = !DILocation(line: 6657, column: 12, scope: !6974, inlinedAt: !6866)
!6978 = !DILocation(line: 6657, column: 3, scope: !6974, inlinedAt: !6866)
!6979 = !DILocation(line: 6658, column: 26, scope: !6956, inlinedAt: !6866)
!6980 = distinct !{!6980, !6981, !6982}
!6981 = !DILocation(line: 6645, column: 2, scope: !6952)
!6982 = !DILocation(line: 6660, column: 2, scope: !6952)
!6983 = !DILocation(line: 6663, column: 7, scope: !6870, inlinedAt: !6866)
!6984 = !DILocation(line: 6664, column: 8, scope: !6870, inlinedAt: !6866)
!6985 = !DILocation(line: 6666, column: 6, scope: !6986, inlinedAt: !6866)
!6986 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 6666, column: 6)
!6987 = !DILocation(line: 6666, column: 6, scope: !6870, inlinedAt: !6866)
!6988 = !DILocation(line: 6667, column: 6, scope: !6986, inlinedAt: !6866)
!6989 = !DILocation(line: 6668, column: 7, scope: !6870, inlinedAt: !6866)
!6990 = !DILocation(line: 6671, column: 7, scope: !6870, inlinedAt: !6866)
!6991 = !DILocation(line: 6672, column: 10, scope: !6870, inlinedAt: !6866)
!6992 = !DILocation(line: 6675, column: 7, scope: !6870, inlinedAt: !6866)
!6993 = !DILocation(line: 6676, column: 7, scope: !6870, inlinedAt: !6866)
!6994 = !DILocation(line: 6677, column: 8, scope: !6870, inlinedAt: !6866)
!6995 = !DILocation(line: 6678, column: 7, scope: !6870, inlinedAt: !6866)
!6996 = !DILocation(line: 6680, column: 6, scope: !6997, inlinedAt: !6866)
!6997 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 6680, column: 6)
!6998 = !DILocation(line: 6680, column: 6, scope: !6870, inlinedAt: !6866)
!6999 = !DILocation(line: 6681, column: 6, scope: !6997, inlinedAt: !6866)
!7000 = !DILocation(line: 6682, column: 11, scope: !6870, inlinedAt: !6866)
!7001 = !DILocation(line: 6682, column: 9, scope: !6870, inlinedAt: !6866)
!7002 = !DILocation(line: 6684, column: 5, scope: !6870, inlinedAt: !6866)
!7003 = !DILocation(line: 6689, column: 14, scope: !6865, inlinedAt: !6866)
!7004 = !DILocation(line: 6692, column: 2, scope: !7005, inlinedAt: !6866)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 6692, column: 2)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 6690, column: 5)
!7007 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 6689, column: 14)
!7008 = !DILocation(line: 6692, column: 2, scope: !7009, inlinedAt: !6866)
!7009 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 6692, column: 2)
!7010 = !DILocation(line: 6694, column: 25, scope: !7011, inlinedAt: !6866)
!7011 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 6693, column: 2)
!7012 = !DILocation(line: 6694, column: 11, scope: !7011, inlinedAt: !6866)
!7013 = !DILocation(line: 6694, column: 18, scope: !7011, inlinedAt: !6866)
!7014 = !DILocation(line: 6695, column: 25, scope: !7011, inlinedAt: !6866)
!7015 = !DILocation(line: 6695, column: 11, scope: !7011, inlinedAt: !6866)
!7016 = !DILocation(line: 6695, column: 18, scope: !7011, inlinedAt: !6866)
!7017 = !DILocation(line: 6696, column: 26, scope: !7011, inlinedAt: !6866)
!7018 = !DILocation(line: 6696, column: 11, scope: !7011, inlinedAt: !6866)
!7019 = !DILocation(line: 6696, column: 19, scope: !7011, inlinedAt: !6866)
!7020 = !DILocation(line: 6697, column: 25, scope: !7011, inlinedAt: !6866)
!7021 = !DILocation(line: 6697, column: 11, scope: !7011, inlinedAt: !6866)
!7022 = !DILocation(line: 6697, column: 18, scope: !7011, inlinedAt: !6866)
!7023 = !DILocation(line: 6698, column: 25, scope: !7011, inlinedAt: !6866)
!7024 = !DILocation(line: 6698, column: 11, scope: !7011, inlinedAt: !6866)
!7025 = !DILocation(line: 6698, column: 18, scope: !7011, inlinedAt: !6866)
!7026 = !DILocation(line: 6700, column: 15, scope: !7027, inlinedAt: !6866)
!7027 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 6700, column: 10)
!7028 = !DILocation(line: 6700, column: 10, scope: !7027, inlinedAt: !6866)
!7029 = !DILocation(line: 6700, column: 10, scope: !7011, inlinedAt: !6866)
!7030 = !DILocation(line: 6701, column: 3, scope: !7027, inlinedAt: !6866)
!7031 = !DILocation(line: 6702, column: 27, scope: !7011, inlinedAt: !6866)
!7032 = !DILocation(line: 6702, column: 22, scope: !7011, inlinedAt: !6866)
!7033 = !DILocation(line: 6703, column: 7, scope: !7011, inlinedAt: !6866)
!7034 = !DILocation(line: 6703, column: 44, scope: !7011, inlinedAt: !6866)
!7035 = !DILocation(line: 6702, column: 20, scope: !7011, inlinedAt: !6866)
!7036 = !DILocation(line: 6704, column: 15, scope: !7037, inlinedAt: !6866)
!7037 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 6704, column: 10)
!7038 = !DILocation(line: 6704, column: 10, scope: !7037, inlinedAt: !6866)
!7039 = !DILocation(line: 6704, column: 10, scope: !7011, inlinedAt: !6866)
!7040 = !DILocation(line: 6705, column: 12, scope: !7037, inlinedAt: !6866)
!7041 = !DILocation(line: 6705, column: 3, scope: !7037, inlinedAt: !6866)
!7042 = !DILocation(line: 6706, column: 15, scope: !7043, inlinedAt: !6866)
!7043 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 6706, column: 10)
!7044 = !DILocation(line: 6706, column: 10, scope: !7043, inlinedAt: !6866)
!7045 = !DILocation(line: 6706, column: 44, scope: !7043, inlinedAt: !6866)
!7046 = !DILocation(line: 6706, column: 41, scope: !7043, inlinedAt: !6866)
!7047 = !DILocation(line: 6706, column: 24, scope: !7043, inlinedAt: !6866)
!7048 = !DILocation(line: 6707, column: 3, scope: !7043, inlinedAt: !6866)
!7049 = !DILocation(line: 6709, column: 23, scope: !7043, inlinedAt: !6866)
!7050 = distinct !{!7050, !7051, !7052}
!7051 = !DILocation(line: 6692, column: 2, scope: !7005)
!7052 = !DILocation(line: 6711, column: 2, scope: !7005)
!7053 = !DILocation(line: 6714, column: 9, scope: !7006, inlinedAt: !6866)
!7054 = !DILocation(line: 6714, column: 7, scope: !7006, inlinedAt: !6866)
!7055 = !DILocation(line: 6715, column: 10, scope: !7006, inlinedAt: !6866)
!7056 = !DILocation(line: 6715, column: 8, scope: !7006, inlinedAt: !6866)
!7057 = !DILocation(line: 6717, column: 6, scope: !7058, inlinedAt: !6866)
!7058 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 6717, column: 6)
!7059 = !DILocation(line: 6717, column: 14, scope: !7058, inlinedAt: !6866)
!7060 = !DILocation(line: 6717, column: 11, scope: !7058, inlinedAt: !6866)
!7061 = !DILocation(line: 6717, column: 6, scope: !7006, inlinedAt: !6866)
!7062 = !DILocation(line: 6718, column: 6, scope: !7058, inlinedAt: !6866)
!7063 = !DILocation(line: 6719, column: 9, scope: !7006, inlinedAt: !6866)
!7064 = !DILocation(line: 6719, column: 7, scope: !7006, inlinedAt: !6866)
!7065 = !DILocation(line: 6722, column: 9, scope: !7006, inlinedAt: !6866)
!7066 = !DILocation(line: 6722, column: 7, scope: !7006, inlinedAt: !6866)
!7067 = !DILocation(line: 6723, column: 12, scope: !7006, inlinedAt: !6866)
!7068 = !DILocation(line: 6723, column: 10, scope: !7006, inlinedAt: !6866)
!7069 = !DILocation(line: 6726, column: 9, scope: !7006, inlinedAt: !6866)
!7070 = !DILocation(line: 6726, column: 7, scope: !7006, inlinedAt: !6866)
!7071 = !DILocation(line: 6727, column: 9, scope: !7006, inlinedAt: !6866)
!7072 = !DILocation(line: 6727, column: 7, scope: !7006, inlinedAt: !6866)
!7073 = !DILocation(line: 6728, column: 10, scope: !7006, inlinedAt: !6866)
!7074 = !DILocation(line: 6728, column: 8, scope: !7006, inlinedAt: !6866)
!7075 = !DILocation(line: 6729, column: 9, scope: !7006, inlinedAt: !6866)
!7076 = !DILocation(line: 6729, column: 7, scope: !7006, inlinedAt: !6866)
!7077 = !DILocation(line: 6730, column: 9, scope: !7006, inlinedAt: !6866)
!7078 = !DILocation(line: 6730, column: 7, scope: !7006, inlinedAt: !6866)
!7079 = !DILocation(line: 6732, column: 6, scope: !7080, inlinedAt: !6866)
!7080 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 6732, column: 6)
!7081 = !DILocation(line: 6732, column: 6, scope: !7006, inlinedAt: !6866)
!7082 = !DILocation(line: 6733, column: 6, scope: !7080, inlinedAt: !6866)
!7083 = !DILocation(line: 6734, column: 11, scope: !7006, inlinedAt: !6866)
!7084 = !DILocation(line: 6734, column: 28, scope: !7006, inlinedAt: !6866)
!7085 = !DILocation(line: 6734, column: 58, scope: !7006, inlinedAt: !6866)
!7086 = !DILocation(line: 6734, column: 9, scope: !7006, inlinedAt: !6866)
!7087 = !DILocation(line: 6736, column: 5, scope: !7006, inlinedAt: !6866)
!7088 = !DILocation(line: 6738, column: 19, scope: !3027, inlinedAt: !6866)
!7089 = !DILocation(line: 6738, column: 17, scope: !3027, inlinedAt: !6866)
!7090 = !DILocation(line: 2803, column: 5, scope: !6867)
!7091 = !DILocation(line: 2806, column: 26, scope: !3005)
!7092 = !DILocation(line: 2806, column: 14, scope: !3006)
!7093 = !DILocation(line: 2808, column: 6, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 2808, column: 6)
!7095 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2807, column: 5)
!7096 = !DILocation(line: 2808, column: 6, scope: !7095)
!7097 = !DILocation(line: 2810, column: 11, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2810, column: 10)
!7099 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 2809, column: 2)
!7100 = !DILocation(line: 2810, column: 17, scope: !7098)
!7101 = !DILocation(line: 2810, column: 27, scope: !7098)
!7102 = !DILocation(line: 2810, column: 10, scope: !7099)
!7103 = !DILocation(line: 2811, column: 25, scope: !7098)
!7104 = !DILocation(line: 2811, column: 3, scope: !7098)
!7105 = !DILocation(line: 2812, column: 23, scope: !7099)
!7106 = !DILocation(line: 2813, column: 2, scope: !7099)
!7107 = !DILocation(line: 2815, column: 11, scope: !7094)
!7108 = !DILocation(line: 2817, column: 28, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 2816, column: 2)
!7110 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 2815, column: 11)
!7111 = !DILocation(line: 2818, column: 23, scope: !7109)
!7112 = !DILocation(line: 2819, column: 10, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 2819, column: 10)
!7114 = !DILocation(line: 2819, column: 23, scope: !7113)
!7115 = !DILocation(line: 2819, column: 31, scope: !7113)
!7116 = !DILocation(line: 2819, column: 28, scope: !7113)
!7117 = !DILocation(line: 2820, column: 17, scope: !7113)
!7118 = !DILocation(line: 2820, column: 3, scope: !7113)
!7119 = !DILocation(line: 2821, column: 19, scope: !7109)
!7120 = !DILocation(line: 2822, column: 2, scope: !7109)
!7121 = !DILocation(line: 2826, column: 26, scope: !3004)
!7122 = !DILocation(line: 2826, column: 38, scope: !3004)
!7123 = !DILocation(line: 2826, column: 35, scope: !3004)
!7124 = !DILocation(line: 2828, column: 2, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 2827, column: 5)
!7126 = !DILocation(line: 2829, column: 5, scope: !7125)
!7127 = !DILocation(line: 2833, column: 26, scope: !3003)
!7128 = !DILocation(line: 2833, column: 14, scope: !3004)
!7129 = !DILocation(line: 2835, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 2834, column: 5)
!7131 = !DILocation(line: 2836, column: 5, scope: !7130)
!7132 = !DILocation(line: 2841, column: 38, scope: !3002)
!7133 = !DILocation(line: 2841, column: 26, scope: !3002)
!7134 = !DILocation(line: 2841, column: 14, scope: !3003)
!7135 = !DILocation(line: 2843, column: 14, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 2843, column: 6)
!7137 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 2842, column: 5)
!7138 = !{!4020, !3061, i64 1152}
!7139 = !DILocation(line: 2843, column: 6, scope: !7136)
!7140 = !DILocation(line: 2843, column: 6, scope: !7137)
!7141 = !DILocation(line: 2845, column: 6, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 2844, column: 2)
!7143 = !DILocation(line: 2846, column: 29, scope: !7142)
!7144 = !DILocation(line: 2846, column: 37, scope: !7142)
!7145 = !{!4020, !3110, i64 176}
!7146 = !DILocation(line: 2846, column: 14, scope: !7142)
!7147 = !DILocation(line: 2846, column: 27, scope: !7142)
!7148 = !{!4020, !3110, i64 3728}
!7149 = !DILocation(line: 2847, column: 2, scope: !7142)
!7150 = !DILocation(line: 2852, column: 38, scope: !3001)
!7151 = !DILocation(line: 2852, column: 26, scope: !3001)
!7152 = !DILocation(line: 2852, column: 14, scope: !3002)
!7153 = !DILocation(line: 2854, column: 14, scope: !2999)
!7154 = !{!4020, !3061, i64 1080}
!7155 = !DILocation(line: 2854, column: 6, scope: !2999)
!7156 = !DILocation(line: 2854, column: 6, scope: !3000)
!7157 = !DILocation(line: 2856, column: 13, scope: !2998)
!7158 = !DILocation(line: 2858, column: 6, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 2858, column: 6)
!7160 = !DILocation(line: 2858, column: 6, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 2858, column: 6)
!7162 = !DILocation(line: 2859, column: 12, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 2859, column: 7)
!7164 = distinct !{!7164, !7158, !7165}
!7165 = !DILocation(line: 2863, column: 3, scope: !7159)
!7166 = !DILocation(line: 2859, column: 7, scope: !7163)
!7167 = !DILocation(line: 2859, column: 27, scope: !7163)
!7168 = !DILocation(line: 2859, column: 20, scope: !7163)
!7169 = !DILocation(line: 2861, column: 23, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 2860, column: 3)
!7171 = !DILocation(line: 2869, column: 38, scope: !3024)
!7172 = !DILocation(line: 2869, column: 26, scope: !3024)
!7173 = !DILocation(line: 2869, column: 14, scope: !3001)
!7174 = !DILocation(line: 2871, column: 25, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 2870, column: 5)
!7176 = !{!3411, !3061, i64 7264}
!7177 = !DILocation(line: 2871, column: 17, scope: !7175)
!7178 = !DILocation(line: 2871, column: 2, scope: !7175)
!7179 = !DILocation(line: 2872, column: 5, scope: !7175)
!7180 = !DILocation(line: 2875, column: 26, scope: !3023)
!7181 = !DILocation(line: 2875, column: 14, scope: !3024)
!7182 = !DILocation(line: 2878, column: 6, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2876, column: 5)
!7184 = !DILocation(line: 2879, column: 21, scope: !7183)
!7185 = !DILocation(line: 2877, column: 2, scope: !7183)
!7186 = !DILocation(line: 2880, column: 5, scope: !7183)
!7187 = !DILocation(line: 2887, column: 42, scope: !3022)
!7188 = !DILocation(line: 2887, column: 22, scope: !3022)
!7189 = !DILocation(line: 2887, column: 19, scope: !3022)
!7190 = !DILocation(line: 2887, column: 14, scope: !3023)
!7191 = !DILocation(line: 2889, column: 8, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 2888, column: 5)
!7193 = !DILocation(line: 2890, column: 5, scope: !7192)
!7194 = !DILocation(line: 2895, column: 26, scope: !3021)
!7195 = !DILocation(line: 2895, column: 53, scope: !3021)
!7196 = !DILocation(line: 2895, column: 38, scope: !3021)
!7197 = !DILocation(line: 2183, column: 9, scope: !7198, inlinedAt: !7200)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 2183, column: 9)
!7199 = distinct !DISubprogram(name: "did_set_title", scope: !3, file: !3, line: 2181, type: !2735, isLocal: false, isDefinition: true, scopeLine: 2182, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!7200 = distinct !DILocation(line: 2897, column: 2, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 2896, column: 5)
!7202 = !DILocation(line: 2183, column: 18, scope: !7198, inlinedAt: !7200)
!7203 = !DILocation(line: 2185, column: 14, scope: !7198, inlinedAt: !7200)
!7204 = !DILocation(line: 2185, column: 10, scope: !7198, inlinedAt: !7200)
!7205 = !DILocation(line: 2185, column: 6, scope: !7198, inlinedAt: !7200)
!7206 = !DILocation(line: 2188, column: 2, scope: !7198, inlinedAt: !7200)
!7207 = !DILocation(line: 2901, column: 38, scope: !3020)
!7208 = !DILocation(line: 2901, column: 26, scope: !3020)
!7209 = !DILocation(line: 2901, column: 14, scope: !3021)
!7210 = !DILocation(line: 2903, column: 6, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 2902, column: 5)
!7212 = !DILocation(line: 2904, column: 6, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 2903, column: 6)
!7214 = !DILocation(line: 2465, column: 20, scope: !6743, inlinedAt: !7215)
!7215 = distinct !DILocation(line: 2906, column: 2, scope: !7211)
!7216 = !DILocation(line: 2466, column: 20, scope: !6743, inlinedAt: !7215)
!7217 = !DILocation(line: 2908, column: 19, scope: !7211)
!7218 = !DILocation(line: 2909, column: 5, scope: !7211)
!7219 = !DILocation(line: 2937, column: 38, scope: !3019)
!7220 = !DILocation(line: 2937, column: 26, scope: !3019)
!7221 = !DILocation(line: 2937, column: 14, scope: !3020)
!7222 = !DILocation(line: 2939, column: 14, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2939, column: 6)
!7224 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 2938, column: 5)
!7225 = !{!4020, !3061, i64 1164}
!7226 = !DILocation(line: 2939, column: 6, scope: !7223)
!7227 = !DILocation(line: 2939, column: 6, scope: !7224)
!7228 = !DILocation(line: 2940, column: 14, scope: !7223)
!7229 = !DILocation(line: 2940, column: 24, scope: !7223)
!7230 = !{!4020, !3061, i64 216}
!7231 = !DILocation(line: 2940, column: 6, scope: !7223)
!7232 = !DILocation(line: 2943, column: 26, scope: !3018)
!7233 = !DILocation(line: 2943, column: 14, scope: !3019)
!7234 = !DILocation(line: 2945, column: 6, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 2945, column: 6)
!7236 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 2944, column: 5)
!7237 = !DILocation(line: 2945, column: 11, scope: !7235)
!7238 = !DILocation(line: 2946, column: 6, scope: !7235)
!7239 = !DILocation(line: 2949, column: 26, scope: !3017)
!7240 = !DILocation(line: 2949, column: 14, scope: !3018)
!7241 = !DILocation(line: 2955, column: 6, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 2955, column: 6)
!7243 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 2950, column: 5)
!7244 = !DILocation(line: 2955, column: 12, scope: !7242)
!7245 = !DILocation(line: 2956, column: 11, scope: !7242)
!7246 = !DILocation(line: 2956, column: 6, scope: !7242)
!7247 = !DILocation(line: 2957, column: 18, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 2957, column: 11)
!7249 = !DILocation(line: 2959, column: 12, scope: !7243)
!7250 = !DILocation(line: 2958, column: 13, scope: !7248)
!7251 = !DILocation(line: 2958, column: 11, scope: !7248)
!7252 = !DILocation(line: 2958, column: 6, scope: !7248)
!7253 = !DILocation(line: 2959, column: 11, scope: !7243)
!7254 = !DILocation(line: 2959, column: 17, scope: !7243)
!7255 = !DILocation(line: 2959, column: 8, scope: !7243)
!7256 = !DILocation(line: 2960, column: 5, scope: !7243)
!7257 = !DILocation(line: 2963, column: 26, scope: !3016)
!7258 = !DILocation(line: 2963, column: 14, scope: !3017)
!7259 = !DILocation(line: 2965, column: 7, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2965, column: 6)
!7261 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2964, column: 5)
!7262 = !DILocation(line: 2965, column: 6, scope: !7261)
!7263 = !DILocation(line: 2967, column: 10, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2967, column: 10)
!7265 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 2966, column: 2)
!7266 = !DILocation(line: 2967, column: 18, scope: !7264)
!7267 = !DILocation(line: 2968, column: 29, scope: !7264)
!7268 = !DILocation(line: 2968, column: 3, scope: !7264)
!7269 = !DILocation(line: 2969, column: 24, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 2969, column: 15)
!7271 = !DILocation(line: 2970, column: 30, scope: !7270)
!7272 = !DILocation(line: 2970, column: 3, scope: !7270)
!7273 = !DILocation(line: 2975, column: 26, scope: !3015)
!7274 = !DILocation(line: 2975, column: 14, scope: !3016)
!7275 = !DILocation(line: 2977, column: 2, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 2976, column: 5)
!7277 = !DILocation(line: 2978, column: 5, scope: !7276)
!7278 = !DILocation(line: 2982, column: 26, scope: !3014)
!7279 = !DILocation(line: 2982, column: 14, scope: !3015)
!7280 = !DILocation(line: 2985, column: 2, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2985, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2985, column: 2)
!7283 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2983, column: 5)
!7284 = !DILocation(line: 2985, column: 2, scope: !7282)
!7285 = !DILocation(line: 2991, column: 38, scope: !3013)
!7286 = !DILocation(line: 2991, column: 26, scope: !3013)
!7287 = !DILocation(line: 2991, column: 14, scope: !3014)
!7288 = !DILocation(line: 2994, column: 2, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 2992, column: 5)
!7290 = !DILocation(line: 2996, column: 23, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2996, column: 6)
!7292 = !DILocation(line: 2996, column: 6, scope: !7291)
!7293 = !DILocation(line: 2996, column: 6, scope: !7289)
!7294 = !DILocation(line: 2997, column: 20, scope: !7291)
!7295 = !DILocation(line: 2997, column: 6, scope: !7291)
!7296 = !DILocation(line: 3004, column: 26, scope: !3012)
!7297 = !DILocation(line: 3004, column: 14, scope: !3013)
!7298 = !DILocation(line: 3007, column: 6, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 3007, column: 6)
!7300 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 3005, column: 5)
!7301 = !DILocation(line: 3007, column: 6, scope: !7300)
!7302 = !DILocation(line: 3008, column: 6, scope: !7299)
!7303 = !DILocation(line: 3009, column: 11, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3009, column: 11)
!7305 = !DILocation(line: 3009, column: 17, scope: !7304)
!7306 = !DILocation(line: 3009, column: 11, scope: !7299)
!7307 = !DILocation(line: 3012, column: 28, scope: !7304)
!7308 = !{!3411, !3110, i64 4736}
!7309 = !DILocation(line: 3012, column: 41, scope: !7304)
!7310 = !DILocation(line: 3012, column: 6, scope: !7304)
!7311 = !DILocation(line: 3018, column: 38, scope: !3011)
!7312 = !DILocation(line: 3018, column: 26, scope: !3011)
!7313 = !DILocation(line: 3018, column: 14, scope: !3012)
!7314 = !DILocation(line: 3020, column: 14, scope: !3009)
!7315 = !{!4020, !3061, i64 1104}
!7316 = !DILocation(line: 3020, column: 6, scope: !3009)
!7317 = !DILocation(line: 3020, column: 6, scope: !3010)
!7318 = !DILocation(line: 3022, column: 21, scope: !3008)
!7319 = !DILocation(line: 3022, column: 12, scope: !3008)
!7320 = !DILocation(line: 3024, column: 17, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 3024, column: 10)
!7322 = !DILocation(line: 3024, column: 10, scope: !3008)
!7323 = !DILocation(line: 3025, column: 8, scope: !7321)
!7324 = !DILocation(line: 3025, column: 3, scope: !7321)
!7325 = !DILocation(line: 3031, column: 25, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 3031, column: 9)
!7327 = !DILocation(line: 3031, column: 33, scope: !7326)
!7328 = !DILocation(line: 3031, column: 21, scope: !7326)
!7329 = !DILocation(line: 3031, column: 9, scope: !2966)
!7330 = !DILocation(line: 3033, column: 14, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3033, column: 6)
!7332 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 3032, column: 5)
!7333 = !{!4020, !3061, i64 904}
!7334 = !DILocation(line: 3033, column: 6, scope: !7331)
!7335 = !DILocation(line: 3033, column: 6, scope: !7332)
!7336 = !DILocation(line: 3038, column: 10, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 3034, column: 2)
!7338 = !DILocation(line: 3041, column: 16, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3041, column: 7)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 3039, column: 6)
!7341 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3038, column: 10)
!7342 = !{!4020, !3061, i64 1084}
!7343 = !DILocation(line: 3041, column: 8, scope: !7339)
!7344 = !DILocation(line: 3041, column: 7, scope: !7340)
!7345 = !DILocation(line: 3043, column: 22, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 3042, column: 3)
!7347 = !DILocation(line: 3044, column: 7, scope: !7346)
!7348 = !DILocation(line: 3045, column: 3, scope: !7346)
!7349 = !DILocation(line: 3048, column: 8, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 3048, column: 7)
!7351 = !DILocation(line: 3048, column: 7, scope: !7340)
!7352 = !DILocation(line: 3050, column: 17, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3049, column: 3)
!7354 = !DILocation(line: 3051, column: 7, scope: !7353)
!7355 = !DILocation(line: 3052, column: 3, scope: !7353)
!7356 = !DILocation(line: 3057, column: 10, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3057, column: 10)
!7358 = !DILocation(line: 3057, column: 33, scope: !7357)
!7359 = !DILocation(line: 3057, column: 10, scope: !7337)
!7360 = !DILocation(line: 3061, column: 14, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 3058, column: 6)
!7362 = !DILocation(line: 3061, column: 3, scope: !7361)
!7363 = !DILocation(line: 3062, column: 12, scope: !7361)
!7364 = !DILocation(line: 3062, column: 25, scope: !7361)
!7365 = !DILocation(line: 3062, column: 3, scope: !7361)
!7366 = !DILocation(line: 3064, column: 47, scope: !7361)
!7367 = !DILocation(line: 3064, column: 3, scope: !7361)
!7368 = !DILocation(line: 3066, column: 6, scope: !7361)
!7369 = !DILocation(line: 3069, column: 13, scope: !7337)
!7370 = !DILocation(line: 3073, column: 6, scope: !7337)
!7371 = !DILocation(line: 3076, column: 2, scope: !7337)
!7372 = !DILocation(line: 3082, column: 10, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 3078, column: 2)
!7374 = !DILocation(line: 3085, column: 15, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 3085, column: 7)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 3083, column: 6)
!7377 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 3082, column: 10)
!7378 = !DILocation(line: 3085, column: 7, scope: !7375)
!7379 = !DILocation(line: 3085, column: 7, scope: !7376)
!7380 = !DILocation(line: 3087, column: 22, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 3086, column: 3)
!7382 = !DILocation(line: 3088, column: 7, scope: !7381)
!7383 = !DILocation(line: 3089, column: 3, scope: !7381)
!7384 = !DILocation(line: 3100, column: 6, scope: !7373)
!7385 = !DILocation(line: 3100, column: 14, scope: !7373)
!7386 = !DILocation(line: 3100, column: 27, scope: !7373)
!7387 = !DILocation(line: 3109, column: 39, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 3109, column: 14)
!7389 = !DILocation(line: 3109, column: 27, scope: !7388)
!7390 = !DILocation(line: 3110, column: 3, scope: !7388)
!7391 = !DILocation(line: 3110, column: 30, scope: !7388)
!7392 = !DILocation(line: 3110, column: 18, scope: !7388)
!7393 = !DILocation(line: 3111, column: 13, scope: !7388)
!7394 = !DILocation(line: 3111, column: 9, scope: !7388)
!7395 = !DILocation(line: 3111, column: 6, scope: !7388)
!7396 = !DILocation(line: 3112, column: 6, scope: !7388)
!7397 = !DILocation(line: 3112, column: 19, scope: !7388)
!7398 = !{!4020, !3109, i64 1200}
!7399 = !DILocation(line: 3112, column: 10, scope: !7388)
!7400 = !DILocation(line: 3112, column: 27, scope: !7388)
!7401 = !DILocation(line: 3112, column: 34, scope: !7388)
!7402 = !DILocation(line: 3112, column: 55, scope: !7388)
!7403 = !DILocation(line: 3112, column: 37, scope: !7388)
!7404 = !DILocation(line: 3112, column: 60, scope: !7388)
!7405 = !DILocation(line: 3113, column: 6, scope: !7388)
!7406 = !DILocation(line: 3113, column: 9, scope: !7388)
!7407 = !DILocation(line: 3113, column: 17, scope: !7388)
!7408 = !{!3411, !3109, i64 9088}
!7409 = !DILocation(line: 3113, column: 28, scope: !7388)
!7410 = !DILocation(line: 3109, column: 14, scope: !7326)
!7411 = !DILocation(line: 3121, column: 16, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 3121, column: 6)
!7413 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3114, column: 5)
!7414 = !{!4020, !3061, i64 1056}
!7415 = !DILocation(line: 3121, column: 8, scope: !7412)
!7416 = !DILocation(line: 3121, column: 51, scope: !7412)
!7417 = !DILocation(line: 3121, column: 39, scope: !7412)
!7418 = !DILocation(line: 3121, column: 23, scope: !7412)
!7419 = !DILocation(line: 3122, column: 6, scope: !7412)
!7420 = !DILocation(line: 3128, column: 26, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3128, column: 14)
!7422 = !DILocation(line: 3128, column: 14, scope: !7388)
!7423 = !DILocation(line: 3145, column: 26, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 3145, column: 6)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 3129, column: 5)
!7426 = !DILocation(line: 3145, column: 18, scope: !7424)
!7427 = !DILocation(line: 3147, column: 6, scope: !7424)
!7428 = !DILocation(line: 3166, column: 22, scope: !2966)
!7429 = !DILocation(line: 3166, column: 28, scope: !2966)
!7430 = !DILocation(line: 3169, column: 38, scope: !2966)
!7431 = !DILocation(line: 3170, column: 12, scope: !2966)
!7432 = !DILocation(line: 3170, column: 5, scope: !2966)
!7433 = !DILocation(line: 3171, column: 12, scope: !2966)
!7434 = !DILocation(line: 3171, column: 5, scope: !2966)
!7435 = !DILocation(line: 3172, column: 12, scope: !2966)
!7436 = !DILocation(line: 3172, column: 5, scope: !2966)
!7437 = !DILocation(line: 3169, column: 5, scope: !2966)
!7438 = !DILocation(line: 3175, column: 5, scope: !2966)
!7439 = !DILocation(line: 3176, column: 9, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 3176, column: 9)
!7441 = !DILocation(line: 3176, column: 17, scope: !7440)
!7442 = !{!4020, !3061, i64 72}
!7443 = !DILocation(line: 3176, column: 28, scope: !7440)
!7444 = !DILocation(line: 3177, column: 8, scope: !7440)
!7445 = !DILocation(line: 3177, column: 29, scope: !7440)
!7446 = !DILocation(line: 3177, column: 35, scope: !7440)
!7447 = !DILocation(line: 3177, column: 60, scope: !7440)
!7448 = !DILocation(line: 3176, column: 9, scope: !2966)
!7449 = !DILocation(line: 3178, column: 10, scope: !7440)
!7450 = !DILocation(line: 3178, column: 25, scope: !7440)
!7451 = !{!4020, !3061, i64 76}
!7452 = !DILocation(line: 3178, column: 2, scope: !7440)
!7453 = !DILocation(line: 3180, column: 37, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 3180, column: 9)
!7455 = !DILocation(line: 3180, column: 9, scope: !2966)
!7456 = !DILocation(line: 3181, column: 32, scope: !7454)
!7457 = !DILocation(line: 3181, column: 2, scope: !7454)
!7458 = !DILocation(line: 3184, column: 1, scope: !2966)
!7459 = !DILocation(line: 2162, column: 23, scope: !5517)
!7460 = !DILocation(line: 2162, column: 32, scope: !5517)
!7461 = !DILocation(line: 2164, column: 9, scope: !5516)
!7462 = !DILocation(line: 2164, column: 9, scope: !5517)
!7463 = !DILocation(line: 2165, column: 29, scope: !5516)
!7464 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !7465)
!7465 = distinct !DILocation(line: 2165, column: 9, scope: !5516)
!7466 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !7465)
!7467 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !7465)
!7468 = !DILocation(line: 4361, column: 5, scope: !3911, inlinedAt: !7465)
!7469 = !DILocation(line: 4362, column: 5, scope: !3911, inlinedAt: !7465)
!7470 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !7465)
!7471 = !DILocation(line: 4368, column: 9, scope: !3925, inlinedAt: !7465)
!7472 = !DILocation(line: 4368, column: 16, scope: !3925, inlinedAt: !7465)
!7473 = !DILocation(line: 4368, column: 23, scope: !3925, inlinedAt: !7465)
!7474 = !DILocation(line: 4368, column: 26, scope: !3925, inlinedAt: !7465)
!7475 = !DILocation(line: 4368, column: 33, scope: !3925, inlinedAt: !7465)
!7476 = !DILocation(line: 4368, column: 40, scope: !3925, inlinedAt: !7465)
!7477 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !7465)
!7478 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !7465)
!7479 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !7465)
!7480 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !7465)
!7481 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !7465)
!7482 = !DILocation(line: 4369, column: 2, scope: !3925, inlinedAt: !7465)
!7483 = !DILocation(line: 4372, column: 2, scope: !5161, inlinedAt: !7465)
!7484 = !DILocation(line: 4361, column: 10, scope: !3911, inlinedAt: !7465)
!7485 = !DILocation(line: 4373, column: 12, scope: !5161, inlinedAt: !7465)
!7486 = !DILocation(line: 4374, column: 8, scope: !5161, inlinedAt: !7465)
!7487 = !DILocation(line: 4376, column: 6, scope: !5167, inlinedAt: !7465)
!7488 = !DILocation(line: 4376, column: 6, scope: !5161, inlinedAt: !7465)
!7489 = !DILocation(line: 4378, column: 5, scope: !5161, inlinedAt: !7465)
!7490 = !DILocation(line: 4380, column: 1, scope: !3911, inlinedAt: !7465)
!7491 = !DILocation(line: 2165, column: 2, scope: !5516)
!7492 = !DILocation(line: 2167, column: 9, scope: !5524)
!7493 = !DILocation(line: 2167, column: 2, scope: !5524)
!7494 = !DILocation(line: 2168, column: 9, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 2168, column: 9)
!7496 = !DILocation(line: 2169, column: 9, scope: !7495)
!7497 = !DILocation(line: 2168, column: 9, scope: !5517)
!7498 = !DILocation(line: 2171, column: 1, scope: !5517)
!7499 = distinct !DISubprogram(name: "set_num_option", scope: !3, file: !3, line: 3191, type: !7500, isLocal: true, isDefinition: true, scopeLine: 3199, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !7502)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{!1127, !1131, !1124, !1130, !1127, !1136, !1131}
!7502 = !{!7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7543}
!7503 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !7499, file: !3, line: 3192, type: !1131)
!7504 = !DILocalVariable(name: "varp", arg: 2, scope: !7499, file: !3, line: 3193, type: !1124)
!7505 = !DILocalVariable(name: "value", arg: 3, scope: !7499, file: !3, line: 3194, type: !1130)
!7506 = !DILocalVariable(name: "errbuf", arg: 4, scope: !7499, file: !3, line: 3195, type: !1127)
!7507 = !DILocalVariable(name: "errbuflen", arg: 5, scope: !7499, file: !3, line: 3196, type: !1136)
!7508 = !DILocalVariable(name: "opt_flags", arg: 6, scope: !7499, file: !3, line: 3197, type: !1131)
!7509 = !DILocalVariable(name: "errmsg", scope: !7499, file: !3, line: 3200, type: !1127)
!7510 = !DILocalVariable(name: "old_value", scope: !7499, file: !3, line: 3201, type: !1130)
!7511 = !DILocalVariable(name: "old_global_value", scope: !7499, file: !3, line: 3203, type: !1130)
!7512 = !DILocalVariable(name: "old_Rows", scope: !7499, file: !3, line: 3206, type: !1130)
!7513 = !DILocalVariable(name: "old_Columns", scope: !7499, file: !3, line: 3207, type: !1130)
!7514 = !DILocalVariable(name: "pp", scope: !7499, file: !3, line: 3208, type: !1143)
!7515 = !DILocalVariable(name: "wp", scope: !7516, file: !3, line: 3577, type: !1504)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 3576, column: 2)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3569, column: 5)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3568, column: 14)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 3552, column: 14)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 3542, column: 14)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 3535, column: 14)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 3506, column: 14)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 3495, column: 14)
!7524 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3474, column: 14)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 3461, column: 14)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 3449, column: 14)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 3441, column: 14)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 3434, column: 14)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 3416, column: 14)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 3407, column: 14)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 3391, column: 14)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3374, column: 14)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 3367, column: 14)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3361, column: 14)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 3353, column: 14)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3342, column: 14)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3336, column: 14)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 3330, column: 14)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 3313, column: 14)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 3295, column: 14)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 3280, column: 14)
!7542 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3252, column: 9)
!7543 = !DILocalVariable(name: "tp", scope: !7516, file: !3, line: 3578, type: !3781)
!7544 = !DILocation(line: 3192, column: 10, scope: !7499)
!7545 = !DILocation(line: 3193, column: 13, scope: !7499)
!7546 = !DILocation(line: 3194, column: 10, scope: !7499)
!7547 = !DILocation(line: 3195, column: 11, scope: !7499)
!7548 = !DILocation(line: 3196, column: 12, scope: !7499)
!7549 = !DILocation(line: 3197, column: 10, scope: !7499)
!7550 = !DILocation(line: 3200, column: 11, scope: !7499)
!7551 = !DILocation(line: 3201, column: 22, scope: !7499)
!7552 = !DILocation(line: 3201, column: 10, scope: !7499)
!7553 = !DILocation(line: 3203, column: 10, scope: !7499)
!7554 = !DILocation(line: 3206, column: 21, scope: !7499)
!7555 = !DILocation(line: 3206, column: 10, scope: !7499)
!7556 = !DILocation(line: 3207, column: 24, scope: !7499)
!7557 = !DILocation(line: 3207, column: 10, scope: !7499)
!7558 = !DILocation(line: 3208, column: 11, scope: !7499)
!7559 = !DILocation(line: 3211, column: 10, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3211, column: 9)
!7561 = !DILocation(line: 3213, column: 6, scope: !7560)
!7562 = !DILocation(line: 3213, column: 3, scope: !7560)
!7563 = !DILocation(line: 3215, column: 9, scope: !7560)
!7564 = !DILocation(line: 3215, column: 26, scope: !7560)
!7565 = !DILocation(line: 3215, column: 32, scope: !7560)
!7566 = !DILocation(line: 3211, column: 9, scope: !7499)
!7567 = !DILocation(line: 3222, column: 20, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3222, column: 9)
!7569 = !DILocation(line: 3222, column: 48, scope: !7568)
!7570 = !DILocation(line: 3222, column: 9, scope: !7499)
!7571 = !DILocation(line: 2494, column: 40, scope: !4567, inlinedAt: !7572)
!7572 = distinct !DILocation(line: 3230, column: 5, scope: !7499)
!7573 = !DILocation(line: 3223, column: 47, scope: !7568)
!7574 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !7575)
!7575 = distinct !DILocation(line: 3223, column: 30, scope: !7568)
!7576 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !7575)
!7577 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !7575)
!7578 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !7575)
!7579 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !7575)
!7580 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !7575)
!7581 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !7575)
!7582 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !7575)
!7583 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !7575)
!7584 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !7575)
!7585 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !7575)
!7586 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !7575)
!7587 = !DILocation(line: 3223, column: 21, scope: !7568)
!7588 = !DILocation(line: 3223, column: 2, scope: !7568)
!7589 = !DILocation(line: 3227, column: 9, scope: !7499)
!7590 = !DILocation(line: 2491, column: 25, scope: !4567, inlinedAt: !7572)
!7591 = !DILocation(line: 2491, column: 56, scope: !4567, inlinedAt: !7572)
!7592 = !DILocation(line: 2491, column: 38, scope: !4567, inlinedAt: !7572)
!7593 = !DILocation(line: 2493, column: 56, scope: !4567, inlinedAt: !7572)
!7594 = !DILocation(line: 2494, column: 10, scope: !4567, inlinedAt: !7572)
!7595 = !DILocation(line: 2495, column: 12, scope: !4567, inlinedAt: !7572)
!7596 = !DILocation(line: 2498, column: 21, scope: !4585, inlinedAt: !7572)
!7597 = !DILocation(line: 2498, column: 9, scope: !4567, inlinedAt: !7572)
!7598 = !DILocation(line: 2499, column: 28, scope: !4585, inlinedAt: !7572)
!7599 = !DILocation(line: 2499, column: 25, scope: !4585, inlinedAt: !7572)
!7600 = !DILocation(line: 2499, column: 2, scope: !4585, inlinedAt: !7572)
!7601 = !DILocation(line: 2503, column: 28, scope: !4593, inlinedAt: !7572)
!7602 = !DILocation(line: 2503, column: 14, scope: !4593, inlinedAt: !7572)
!7603 = !DILocation(line: 2503, column: 52, scope: !4593, inlinedAt: !7572)
!7604 = !DILocation(line: 2503, column: 71, scope: !4593, inlinedAt: !7572)
!7605 = !DILocation(line: 2504, column: 32, scope: !4593, inlinedAt: !7572)
!7606 = !DILocation(line: 2504, column: 2, scope: !4593, inlinedAt: !7572)
!7607 = !DILocation(line: 2505, column: 28, scope: !4600, inlinedAt: !7572)
!7608 = !DILocation(line: 2505, column: 14, scope: !4600, inlinedAt: !7572)
!7609 = !DILocation(line: 2507, column: 12, scope: !4603, inlinedAt: !7572)
!7610 = !DILocation(line: 2507, column: 6, scope: !4604, inlinedAt: !7572)
!7611 = !DILocation(line: 2508, column: 6, scope: !4603, inlinedAt: !7572)
!7612 = !DILocation(line: 2508, column: 35, scope: !4603, inlinedAt: !7572)
!7613 = !DILocation(line: 2508, column: 48, scope: !4603, inlinedAt: !7572)
!7614 = !DILocation(line: 2509, column: 17, scope: !4610, inlinedAt: !7572)
!7615 = !DILocation(line: 2509, column: 11, scope: !4603, inlinedAt: !7572)
!7616 = !DILocation(line: 2510, column: 6, scope: !4610, inlinedAt: !7572)
!7617 = !DILocation(line: 2510, column: 35, scope: !4610, inlinedAt: !7572)
!7618 = !DILocation(line: 2510, column: 48, scope: !4610, inlinedAt: !7572)
!7619 = !DILocation(line: 3233, column: 24, scope: !7499)
!7620 = !DILocation(line: 3236, column: 9, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3236, column: 9)
!7622 = !DILocation(line: 3236, column: 17, scope: !7621)
!7623 = !{!3411, !3110, i64 7192}
!7624 = !DILocation(line: 3236, column: 24, scope: !7621)
!7625 = !DILocation(line: 3236, column: 9, scope: !7499)
!7626 = !DILocation(line: 3241, column: 41, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 3237, column: 5)
!7628 = !DILocation(line: 3241, column: 19, scope: !7627)
!7629 = !DILocation(line: 3241, column: 56, scope: !7627)
!7630 = !DILocation(line: 3242, column: 41, scope: !7627)
!7631 = !DILocation(line: 3242, column: 19, scope: !7627)
!7632 = !DILocation(line: 3241, column: 2, scope: !7627)
!7633 = !DILocation(line: 3243, column: 20, scope: !7627)
!7634 = !{!3411, !3110, i64 7256}
!7635 = !DILocation(line: 3241, column: 10, scope: !7627)
!7636 = !DILocation(line: 3241, column: 17, scope: !7627)
!7637 = !DILocation(line: 3247, column: 5, scope: !7627)
!7638 = !DILocation(line: 3252, column: 12, scope: !7542)
!7639 = !DILocation(line: 3252, column: 27, scope: !7542)
!7640 = !DILocation(line: 3252, column: 21, scope: !7542)
!7641 = !DILocation(line: 3255, column: 6, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 3255, column: 6)
!7643 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 3253, column: 5)
!7644 = !DILocation(line: 3255, column: 11, scope: !7642)
!7645 = !DILocation(line: 3255, column: 6, scope: !7643)
!7646 = !DILocation(line: 3258, column: 11, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 3256, column: 2)
!7648 = !DILocation(line: 3259, column: 2, scope: !7647)
!7649 = !DILocation(line: 3260, column: 14, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 3260, column: 6)
!7651 = !DILocation(line: 3260, column: 6, scope: !7650)
!7652 = !DILocation(line: 3260, column: 12, scope: !7650)
!7653 = !DILocation(line: 3260, column: 6, scope: !7643)
!7654 = !DILocation(line: 3263, column: 11, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 3261, column: 2)
!7656 = !DILocation(line: 3264, column: 2, scope: !7655)
!7657 = !DILocation(line: 3265, column: 6, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 3265, column: 6)
!7659 = !DILocation(line: 3265, column: 11, scope: !7658)
!7660 = !DILocation(line: 3265, column: 6, scope: !7643)
!7661 = !DILocation(line: 3268, column: 11, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 3266, column: 2)
!7663 = !DILocation(line: 3269, column: 2, scope: !7662)
!7664 = !DILocation(line: 3272, column: 7, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 3272, column: 6)
!7666 = !DILocation(line: 3272, column: 6, scope: !7643)
!7667 = !DILocation(line: 3274, column: 22, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 3274, column: 10)
!7669 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 3273, column: 2)
!7670 = !DILocation(line: 3274, column: 25, scope: !7668)
!7671 = !DILocation(line: 3274, column: 33, scope: !7668)
!7672 = !{!4020, !3061, i64 236}
!7673 = !DILocation(line: 3274, column: 42, scope: !7668)
!7674 = !DILocation(line: 3274, column: 10, scope: !7669)
!7675 = !DILocation(line: 3275, column: 17, scope: !7668)
!7676 = !DILocation(line: 3275, column: 3, scope: !7668)
!7677 = !DILocation(line: 3276, column: 22, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 3276, column: 10)
!7679 = !DILocation(line: 3276, column: 25, scope: !7678)
!7680 = !DILocation(line: 3276, column: 33, scope: !7678)
!7681 = !{!3411, !3061, i64 7768}
!7682 = !DILocation(line: 3276, column: 40, scope: !7678)
!7683 = !DILocation(line: 3276, column: 43, scope: !7678)
!7684 = !DILocation(line: 3276, column: 51, scope: !7678)
!7685 = !DILocation(line: 3276, column: 62, scope: !7678)
!7686 = !DILocation(line: 3276, column: 60, scope: !7678)
!7687 = !DILocation(line: 3276, column: 10, scope: !7669)
!7688 = !DILocation(line: 3277, column: 17, scope: !7678)
!7689 = !DILocation(line: 3277, column: 3, scope: !7678)
!7690 = !DILocation(line: 3280, column: 17, scope: !7541)
!7691 = !DILocation(line: 3280, column: 14, scope: !7542)
!7692 = !DILocation(line: 3283, column: 6, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3283, column: 6)
!7694 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 3281, column: 5)
!7695 = !DILocation(line: 3283, column: 12, scope: !7693)
!7696 = !DILocation(line: 3283, column: 6, scope: !7694)
!7697 = !DILocation(line: 3286, column: 12, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 3284, column: 2)
!7699 = !DILocation(line: 3287, column: 2, scope: !7698)
!7700 = !DILocation(line: 3288, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 3288, column: 6)
!7702 = !DILocation(line: 3288, column: 14, scope: !7701)
!7703 = !DILocation(line: 3288, column: 12, scope: !7701)
!7704 = !DILocation(line: 3288, column: 6, scope: !7694)
!7705 = !DILocation(line: 3291, column: 12, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 3289, column: 2)
!7707 = !DILocation(line: 3292, column: 2, scope: !7706)
!7708 = !DILocation(line: 3293, column: 2, scope: !7694)
!7709 = !DILocation(line: 3294, column: 5, scope: !7694)
!7710 = !DILocation(line: 3295, column: 17, scope: !7540)
!7711 = !DILocation(line: 3295, column: 14, scope: !7541)
!7712 = !DILocation(line: 3298, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 3298, column: 6)
!7714 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 3296, column: 5)
!7715 = !DILocation(line: 3298, column: 12, scope: !7713)
!7716 = !DILocation(line: 3298, column: 6, scope: !7714)
!7717 = !DILocation(line: 3301, column: 12, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 3299, column: 2)
!7719 = !DILocation(line: 3302, column: 2, scope: !7718)
!7720 = !DILocation(line: 3303, column: 14, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 3303, column: 6)
!7722 = !DILocation(line: 3303, column: 6, scope: !7721)
!7723 = !DILocation(line: 3303, column: 12, scope: !7721)
!7724 = !DILocation(line: 3303, column: 6, scope: !7714)
!7725 = !DILocation(line: 3306, column: 12, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 3304, column: 2)
!7727 = !DILocation(line: 3307, column: 2, scope: !7726)
!7728 = !DILocation(line: 3310, column: 7, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 3310, column: 6)
!7730 = !DILocation(line: 3310, column: 18, scope: !7729)
!7731 = !DILocation(line: 3310, column: 21, scope: !7729)
!7732 = !DILocation(line: 3310, column: 29, scope: !7729)
!7733 = !{!4020, !3061, i64 248}
!7734 = !DILocation(line: 3310, column: 37, scope: !7729)
!7735 = !DILocation(line: 3310, column: 6, scope: !7714)
!7736 = !DILocation(line: 3311, column: 19, scope: !7729)
!7737 = !DILocation(line: 3311, column: 6, scope: !7729)
!7738 = !DILocation(line: 3313, column: 17, scope: !7539)
!7739 = !DILocation(line: 3313, column: 14, scope: !7540)
!7740 = !DILocation(line: 3316, column: 6, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 3316, column: 6)
!7742 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 3314, column: 5)
!7743 = !DILocation(line: 3316, column: 12, scope: !7741)
!7744 = !DILocation(line: 3316, column: 6, scope: !7742)
!7745 = !DILocation(line: 3319, column: 12, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 3317, column: 2)
!7747 = !DILocation(line: 3320, column: 2, scope: !7746)
!7748 = !DILocation(line: 3321, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 3321, column: 6)
!7750 = !DILocation(line: 3321, column: 14, scope: !7749)
!7751 = !DILocation(line: 3321, column: 12, scope: !7749)
!7752 = !DILocation(line: 3321, column: 6, scope: !7742)
!7753 = !DILocation(line: 3324, column: 12, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 3322, column: 2)
!7755 = !DILocation(line: 3325, column: 2, scope: !7754)
!7756 = !DILocation(line: 3326, column: 2, scope: !7742)
!7757 = !DILocation(line: 3327, column: 5, scope: !7742)
!7758 = !DILocation(line: 3330, column: 17, scope: !7538)
!7759 = !DILocation(line: 3330, column: 14, scope: !7539)
!7760 = !DILocation(line: 3332, column: 2, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3331, column: 5)
!7762 = !DILocation(line: 3333, column: 5, scope: !7761)
!7763 = !DILocation(line: 3336, column: 17, scope: !7537)
!7764 = !DILocation(line: 3336, column: 14, scope: !7538)
!7765 = !DILocation(line: 3338, column: 2, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3337, column: 5)
!7767 = !DILocation(line: 3339, column: 5, scope: !7766)
!7768 = !DILocation(line: 3342, column: 17, scope: !7536)
!7769 = !DILocation(line: 3342, column: 14, scope: !7537)
!7770 = !DILocation(line: 3346, column: 10, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 3346, column: 6)
!7772 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 3343, column: 5)
!7773 = !DILocation(line: 3346, column: 6, scope: !7771)
!7774 = !DILocation(line: 3346, column: 17, scope: !7771)
!7775 = !DILocation(line: 3346, column: 20, scope: !7771)
!7776 = !DILocation(line: 3346, column: 48, scope: !7771)
!7777 = !DILocation(line: 3346, column: 6, scope: !7772)
!7778 = !DILocation(line: 3347, column: 6, scope: !7771)
!7779 = !DILocation(line: 3353, column: 21, scope: !7535)
!7780 = !DILocation(line: 3353, column: 29, scope: !7535)
!7781 = !DILocation(line: 3353, column: 17, scope: !7535)
!7782 = !DILocation(line: 3353, column: 14, scope: !7536)
!7783 = !DILocation(line: 3355, column: 14, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 3355, column: 6)
!7785 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3354, column: 5)
!7786 = !{!4020, !3110, i64 968}
!7787 = !DILocation(line: 3355, column: 22, scope: !7784)
!7788 = !DILocation(line: 3355, column: 6, scope: !7785)
!7789 = !DILocation(line: 3356, column: 22, scope: !7784)
!7790 = !DILocation(line: 3356, column: 6, scope: !7784)
!7791 = !DILocation(line: 3357, column: 2, scope: !7785)
!7792 = !DILocation(line: 3358, column: 5, scope: !7785)
!7793 = !DILocation(line: 3361, column: 29, scope: !7534)
!7794 = !DILocation(line: 3361, column: 17, scope: !7534)
!7795 = !DILocation(line: 3361, column: 14, scope: !7535)
!7796 = !DILocation(line: 3363, column: 2, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 3362, column: 5)
!7798 = !DILocation(line: 3364, column: 5, scope: !7797)
!7799 = !DILocation(line: 3367, column: 29, scope: !7533)
!7800 = !DILocation(line: 3367, column: 17, scope: !7533)
!7801 = !DILocation(line: 3367, column: 14, scope: !7534)
!7802 = !DILocation(line: 3369, column: 6, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 3369, column: 6)
!7804 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3368, column: 5)
!7805 = !DILocation(line: 3369, column: 33, scope: !7803)
!7806 = !DILocation(line: 3369, column: 55, scope: !7803)
!7807 = !DILocation(line: 3369, column: 36, scope: !7803)
!7808 = !DILocation(line: 3369, column: 6, scope: !7804)
!7809 = !DILocation(line: 3370, column: 20, scope: !7803)
!7810 = !DILocation(line: 3370, column: 6, scope: !7803)
!7811 = !DILocation(line: 3374, column: 29, scope: !7532)
!7812 = !DILocation(line: 3374, column: 17, scope: !7532)
!7813 = !DILocation(line: 3374, column: 14, scope: !7533)
!7814 = !DILocation(line: 3376, column: 14, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 3376, column: 6)
!7816 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 3375, column: 5)
!7817 = !{!4020, !3110, i64 936}
!7818 = !DILocation(line: 3376, column: 22, scope: !7815)
!7819 = !DILocation(line: 3376, column: 6, scope: !7816)
!7820 = !DILocation(line: 3379, column: 22, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 3377, column: 2)
!7822 = !DILocation(line: 3380, column: 2, scope: !7821)
!7823 = !DILocation(line: 3381, column: 27, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 3381, column: 11)
!7825 = !DILocation(line: 3381, column: 11, scope: !7815)
!7826 = !DILocation(line: 3384, column: 22, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 3382, column: 2)
!7828 = !DILocation(line: 3385, column: 2, scope: !7827)
!7829 = !DILocation(line: 3391, column: 29, scope: !7531)
!7830 = !DILocation(line: 3391, column: 17, scope: !7531)
!7831 = !DILocation(line: 3391, column: 54, scope: !7531)
!7832 = !DILocation(line: 3391, column: 42, scope: !7531)
!7833 = !DILocation(line: 3391, column: 36, scope: !7531)
!7834 = !DILocation(line: 3394, column: 6, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 3394, column: 6)
!7836 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 3392, column: 5)
!7837 = !DILocation(line: 3394, column: 6, scope: !7836)
!7838 = !DILocation(line: 3395, column: 20, scope: !7835)
!7839 = !DILocation(line: 3395, column: 6, scope: !7835)
!7840 = !DILocation(line: 3400, column: 13, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 3400, column: 6)
!7842 = !DILocation(line: 3400, column: 21, scope: !7841)
!7843 = !DILocation(line: 3400, column: 9, scope: !7841)
!7844 = !DILocation(line: 3400, column: 28, scope: !7841)
!7845 = !DILocation(line: 3400, column: 39, scope: !7841)
!7846 = !DILocation(line: 3400, column: 46, scope: !7841)
!7847 = !DILocation(line: 3400, column: 6, scope: !7836)
!7848 = !DILocation(line: 3401, column: 6, scope: !7841)
!7849 = !DILocation(line: 3407, column: 17, scope: !7530)
!7850 = !DILocation(line: 3407, column: 14, scope: !7531)
!7851 = !DILocation(line: 3409, column: 6, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 3409, column: 6)
!7853 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 3408, column: 5)
!7854 = !DILocation(line: 3409, column: 12, scope: !7852)
!7855 = !DILocation(line: 3409, column: 6, scope: !7853)
!7856 = !DILocation(line: 3411, column: 17, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3411, column: 11)
!7858 = !DILocation(line: 3411, column: 11, scope: !7852)
!7859 = !DILocation(line: 3413, column: 2, scope: !7853)
!7860 = !DILocation(line: 3414, column: 5, scope: !7853)
!7861 = !DILocation(line: 3416, column: 29, scope: !7529)
!7862 = !DILocation(line: 3416, column: 17, scope: !7529)
!7863 = !DILocation(line: 3416, column: 14, scope: !7530)
!7864 = !DILocation(line: 3418, column: 14, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3418, column: 6)
!7866 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 3417, column: 5)
!7867 = !DILocation(line: 3418, column: 31, scope: !7865)
!7868 = !DILocation(line: 3421, column: 27, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 3419, column: 2)
!7870 = !DILocation(line: 3422, column: 2, scope: !7869)
!7871 = !DILocation(line: 3423, column: 23, scope: !7866)
!7872 = !DILocation(line: 3423, column: 13, scope: !7866)
!7873 = !DILocation(line: 3424, column: 6, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3424, column: 6)
!7875 = !DILocation(line: 3424, column: 6, scope: !7866)
!7876 = !DILocation(line: 3425, column: 6, scope: !7874)
!7877 = !DILocation(line: 3428, column: 2, scope: !7866)
!7878 = !DILocation(line: 3430, column: 5, scope: !7866)
!7879 = !DILocation(line: 3434, column: 17, scope: !7528)
!7880 = !DILocation(line: 3434, column: 14, scope: !7529)
!7881 = !DILocation(line: 3436, column: 6, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 3436, column: 6)
!7883 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 3435, column: 5)
!7884 = !DILocation(line: 3436, column: 31, scope: !7882)
!7885 = !DILocation(line: 3441, column: 17, scope: !7527)
!7886 = !DILocation(line: 3441, column: 14, scope: !7528)
!7887 = !DILocation(line: 3443, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 3443, column: 6)
!7889 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 3442, column: 5)
!7890 = !DILocation(line: 3443, column: 15, scope: !7888)
!7891 = !DILocation(line: 3443, column: 6, scope: !7889)
!7892 = !DILocation(line: 3444, column: 15, scope: !7888)
!7893 = !DILocation(line: 3444, column: 6, scope: !7888)
!7894 = !DILocation(line: 3445, column: 23, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 3445, column: 11)
!7896 = !DILocation(line: 3445, column: 20, scope: !7895)
!7897 = !DILocation(line: 3445, column: 11, scope: !7888)
!7898 = !DILocation(line: 3446, column: 22, scope: !7895)
!7899 = !DILocation(line: 3446, column: 15, scope: !7895)
!7900 = !DILocation(line: 3446, column: 6, scope: !7895)
!7901 = !DILocation(line: 3449, column: 29, scope: !7526)
!7902 = !DILocation(line: 3449, column: 17, scope: !7526)
!7903 = !DILocation(line: 3449, column: 14, scope: !7527)
!7904 = !DILocation(line: 3451, column: 14, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 3451, column: 6)
!7906 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 3450, column: 5)
!7907 = !{!3411, !3110, i64 4744}
!7908 = !DILocation(line: 3451, column: 32, scope: !7905)
!7909 = !DILocation(line: 3454, column: 27, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 3452, column: 2)
!7911 = !DILocation(line: 3455, column: 2, scope: !7910)
!7912 = !DILocation(line: 3456, column: 23, scope: !7906)
!7913 = !DILocation(line: 3456, column: 13, scope: !7906)
!7914 = !DILocation(line: 3457, column: 5, scope: !7906)
!7915 = !DILocation(line: 3461, column: 17, scope: !7525)
!7916 = !DILocation(line: 3461, column: 14, scope: !7526)
!7917 = !DILocation(line: 3463, column: 6, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 3463, column: 6)
!7919 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3462, column: 5)
!7920 = !DILocation(line: 3463, column: 17, scope: !7918)
!7921 = !DILocation(line: 3463, column: 6, scope: !7919)
!7922 = !DILocation(line: 3466, column: 17, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 3464, column: 2)
!7924 = !DILocation(line: 3467, column: 2, scope: !7923)
!7925 = !DILocation(line: 3468, column: 44, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 3468, column: 6)
!7927 = !DILocation(line: 3468, column: 6, scope: !7926)
!7928 = !DILocation(line: 3468, column: 15, scope: !7926)
!7929 = !DILocation(line: 3468, column: 41, scope: !7926)
!7930 = !DILocation(line: 3468, column: 28, scope: !7926)
!7931 = !DILocation(line: 3469, column: 21, scope: !7926)
!7932 = !DILocation(line: 3469, column: 6, scope: !7926)
!7933 = !DILocation(line: 3474, column: 17, scope: !7524)
!7934 = !DILocation(line: 3474, column: 14, scope: !7525)
!7935 = !DILocation(line: 3476, column: 6, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3476, column: 6)
!7937 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 3475, column: 5)
!7938 = !DILocation(line: 3476, column: 11, scope: !7936)
!7939 = !DILocation(line: 3476, column: 6, scope: !7937)
!7940 = !DILocation(line: 3479, column: 11, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 3477, column: 2)
!7942 = !DILocation(line: 3480, column: 2, scope: !7941)
!7943 = !DILocation(line: 3481, column: 6, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3481, column: 6)
!7945 = !DILocation(line: 3481, column: 13, scope: !7944)
!7946 = !DILocation(line: 3481, column: 20, scope: !7944)
!7947 = !DILocation(line: 3481, column: 18, scope: !7944)
!7948 = !DILocation(line: 3481, column: 31, scope: !7944)
!7949 = !DILocation(line: 3481, column: 11, scope: !7944)
!7950 = !DILocation(line: 3481, column: 6, scope: !7937)
!7951 = !DILocation(line: 3486, column: 6, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3486, column: 6)
!7953 = !DILocation(line: 3482, column: 13, scope: !7944)
!7954 = !DILocation(line: 3482, column: 20, scope: !7944)
!7955 = !DILocation(line: 3482, column: 18, scope: !7944)
!7956 = !DILocation(line: 3482, column: 31, scope: !7944)
!7957 = !DILocation(line: 3482, column: 11, scope: !7944)
!7958 = !DILocation(line: 3482, column: 6, scope: !7944)
!7959 = !DILocation(line: 3486, column: 11, scope: !7952)
!7960 = !DILocation(line: 3486, column: 24, scope: !7952)
!7961 = !DILocation(line: 3486, column: 27, scope: !7952)
!7962 = !DILocation(line: 3488, column: 11, scope: !7952)
!7963 = !DILocation(line: 3488, column: 7, scope: !7952)
!7964 = !DILocation(line: 3488, column: 3, scope: !7952)
!7965 = !DILocation(line: 3491, column: 6, scope: !7952)
!7966 = !DILocation(line: 3495, column: 17, scope: !7523)
!7967 = !DILocation(line: 3495, column: 14, scope: !7524)
!7968 = !DILocation(line: 3497, column: 6, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 3497, column: 6)
!7970 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 3496, column: 5)
!7971 = !DILocation(line: 3497, column: 11, scope: !7969)
!7972 = !DILocation(line: 3497, column: 6, scope: !7970)
!7973 = !DILocation(line: 3500, column: 11, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 3498, column: 2)
!7975 = !DILocation(line: 3501, column: 2, scope: !7974)
!7976 = !DILocation(line: 3502, column: 6, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 3502, column: 6)
!7978 = !DILocation(line: 3502, column: 15, scope: !7977)
!7979 = !DILocation(line: 3502, column: 11, scope: !7977)
!7980 = !DILocation(line: 3503, column: 6, scope: !7977)
!7981 = !DILocation(line: 3506, column: 29, scope: !7522)
!7982 = !DILocation(line: 3506, column: 17, scope: !7522)
!7983 = !DILocation(line: 3506, column: 14, scope: !7523)
!7984 = !DILocation(line: 3508, column: 14, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 3508, column: 6)
!7986 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 3507, column: 5)
!7987 = !{!4020, !3110, i64 1184}
!7988 = !DILocation(line: 3508, column: 23, scope: !7985)
!7989 = !DILocation(line: 3508, column: 6, scope: !7986)
!7990 = !DILocation(line: 3511, column: 23, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 3509, column: 2)
!7992 = !DILocation(line: 3512, column: 2, scope: !7991)
!7993 = !DILocation(line: 3513, column: 28, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 3513, column: 11)
!7995 = !DILocation(line: 3513, column: 11, scope: !7985)
!7996 = !DILocation(line: 3516, column: 23, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 3514, column: 2)
!7998 = !DILocation(line: 3517, column: 2, scope: !7997)
!7999 = !DILocation(line: 3535, column: 17, scope: !7521)
!8000 = !DILocation(line: 3535, column: 14, scope: !7522)
!8001 = !DILocation(line: 3538, column: 7, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 3536, column: 5)
!8003 = !DILocation(line: 3539, column: 2, scope: !8002)
!8004 = !DILocation(line: 3540, column: 7, scope: !8002)
!8005 = !DILocation(line: 3541, column: 5, scope: !8002)
!8006 = !DILocation(line: 3542, column: 29, scope: !7520)
!8007 = !DILocation(line: 3542, column: 17, scope: !7520)
!8008 = !DILocation(line: 3542, column: 14, scope: !7521)
!8009 = !DILocation(line: 3545, column: 17, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 3543, column: 5)
!8011 = !DILocation(line: 3546, column: 2, scope: !8010)
!8012 = !DILocation(line: 3547, column: 2, scope: !8010)
!8013 = !DILocation(line: 3547, column: 10, scope: !8010)
!8014 = !DILocation(line: 3547, column: 17, scope: !8010)
!8015 = !DILocation(line: 3548, column: 5, scope: !8010)
!8016 = !DILocation(line: 3552, column: 29, scope: !7519)
!8017 = !DILocation(line: 3552, column: 17, scope: !7519)
!8018 = !DILocation(line: 3552, column: 14, scope: !7520)
!8019 = !DILocation(line: 3554, column: 14, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 3554, column: 6)
!8021 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3553, column: 5)
!8022 = !{!4020, !3110, i64 1064}
!8023 = !DILocation(line: 3554, column: 22, scope: !8020)
!8024 = !DILocation(line: 3554, column: 6, scope: !8021)
!8025 = !DILocation(line: 3559, column: 22, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 3559, column: 6)
!8027 = !DILocation(line: 3559, column: 6, scope: !8021)
!8028 = !DILocation(line: 3564, column: 10, scope: !8021)
!8029 = !DILocation(line: 3564, column: 31, scope: !8021)
!8030 = !{!4020, !3110, i64 8968}
!8031 = !DILocation(line: 3565, column: 5, scope: !8021)
!8032 = !DILocation(line: 3568, column: 29, scope: !7518)
!8033 = !DILocation(line: 3568, column: 17, scope: !7518)
!8034 = !DILocation(line: 3568, column: 14, scope: !7519)
!8035 = !DILocation(line: 3570, column: 14, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 3570, column: 6)
!8037 = !DILocation(line: 3570, column: 21, scope: !8036)
!8038 = !DILocation(line: 3570, column: 6, scope: !7517)
!8039 = !DILocation(line: 3573, column: 21, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 3571, column: 2)
!8041 = !DILocation(line: 3574, column: 2, scope: !8040)
!8042 = !DILocation(line: 3578, column: 17, scope: !7516)
!8043 = !DILocation(line: 3580, column: 6, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 3580, column: 6)
!8045 = !DILocation(line: 3580, column: 6, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 3580, column: 6)
!8047 = !DILocation(line: 3580, column: 6, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 3580, column: 6)
!8049 = !DILocation(line: 3577, column: 13, scope: !7516)
!8050 = !DILocation(line: 3581, column: 3, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 3580, column: 6)
!8052 = !DILocation(line: 3580, column: 6, scope: !8051)
!8053 = distinct !{!8053, !8047, !8054}
!8054 = !DILocation(line: 3581, column: 23, scope: !8048)
!8055 = distinct !{!8055, !8043, !8056}
!8056 = !DILocation(line: 3581, column: 23, scope: !8044)
!8057 = !DILocation(line: 3589, column: 9, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3589, column: 9)
!8059 = !DILocation(line: 3589, column: 16, scope: !8058)
!8060 = !DILocation(line: 3589, column: 14, scope: !8058)
!8061 = !DILocation(line: 3589, column: 27, scope: !8058)
!8062 = !DILocation(line: 3589, column: 30, scope: !8058)
!8063 = !DILocation(line: 3589, column: 9, scope: !7499)
!8064 = !DILocation(line: 3591, column: 13, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3591, column: 6)
!8066 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 3590, column: 5)
!8067 = !DILocation(line: 3591, column: 6, scope: !8066)
!8068 = !DILocation(line: 3594, column: 11, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 3592, column: 2)
!8070 = !DILocation(line: 3594, column: 46, scope: !8069)
!8071 = !DILocation(line: 3593, column: 6, scope: !8069)
!8072 = !DILocation(line: 3596, column: 2, scope: !8069)
!8073 = !DILocation(line: 3597, column: 9, scope: !8066)
!8074 = !DILocation(line: 3597, column: 7, scope: !8066)
!8075 = !DILocation(line: 3598, column: 5, scope: !8066)
!8076 = !DILocation(line: 3599, column: 9, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3599, column: 9)
!8078 = !DILocation(line: 3599, column: 17, scope: !8077)
!8079 = !DILocation(line: 3599, column: 31, scope: !8077)
!8080 = !DILocation(line: 3599, column: 34, scope: !8077)
!8081 = !DILocation(line: 3599, column: 9, scope: !7499)
!8082 = !DILocation(line: 3601, column: 13, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3601, column: 6)
!8084 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 3600, column: 5)
!8085 = !DILocation(line: 3601, column: 6, scope: !8084)
!8086 = !DILocation(line: 3604, column: 8, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 3602, column: 2)
!8088 = !DILocation(line: 3603, column: 6, scope: !8087)
!8089 = !DILocation(line: 3606, column: 2, scope: !8087)
!8090 = !DILocation(line: 3607, column: 10, scope: !8084)
!8091 = !DILocation(line: 3608, column: 5, scope: !8084)
!8092 = !DILocation(line: 3609, column: 5, scope: !7499)
!8093 = !DILocation(line: 3615, column: 21, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3615, column: 9)
!8095 = !DILocation(line: 3615, column: 18, scope: !8094)
!8096 = !DILocation(line: 3615, column: 44, scope: !8094)
!8097 = !DILocation(line: 3615, column: 41, scope: !8094)
!8098 = !DILocation(line: 3615, column: 26, scope: !8094)
!8099 = !DILocation(line: 3618, column: 6, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 3618, column: 6)
!8101 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3616, column: 5)
!8102 = !DILocation(line: 3618, column: 6, scope: !8101)
!8103 = !DILocation(line: 3619, column: 10, scope: !8100)
!8104 = !DILocation(line: 3619, column: 6, scope: !8100)
!8105 = !DILocation(line: 3620, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3620, column: 11)
!8107 = !DILocation(line: 3622, column: 11, scope: !8106)
!8108 = !DILocation(line: 3622, column: 7, scope: !8106)
!8109 = !DILocation(line: 3622, column: 3, scope: !8106)
!8110 = !DILocation(line: 3625, column: 20, scope: !8106)
!8111 = !DILocation(line: 3625, column: 34, scope: !8106)
!8112 = !DILocation(line: 3625, column: 6, scope: !8106)
!8113 = !DILocation(line: 3630, column: 6, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 3627, column: 2)
!8115 = !DILocation(line: 3631, column: 10, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 3631, column: 10)
!8117 = !DILocation(line: 3631, column: 24, scope: !8116)
!8118 = !DILocation(line: 3631, column: 31, scope: !8116)
!8119 = !DILocation(line: 3631, column: 29, scope: !8116)
!8120 = !DILocation(line: 3631, column: 22, scope: !8116)
!8121 = !DILocation(line: 3631, column: 44, scope: !8116)
!8122 = !DILocation(line: 3631, column: 36, scope: !8116)
!8123 = !DILocation(line: 3632, column: 17, scope: !8116)
!8124 = !DILocation(line: 3632, column: 15, scope: !8116)
!8125 = !DILocation(line: 3632, column: 3, scope: !8116)
!8126 = !DILocation(line: 3634, column: 6, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 3634, column: 6)
!8128 = !DILocation(line: 3634, column: 18, scope: !8127)
!8129 = !DILocation(line: 3634, column: 15, scope: !8127)
!8130 = !DILocation(line: 3634, column: 23, scope: !8127)
!8131 = !DILocation(line: 6807, column: 24, scope: !4632, inlinedAt: !8132)
!8132 = distinct !DILocation(line: 3634, column: 27, scope: !8127)
!8133 = !DILocation(line: 6811, column: 11, scope: !4632, inlinedAt: !8132)
!8134 = !DILocation(line: 6809, column: 9, scope: !4632, inlinedAt: !8132)
!8135 = !DILocation(line: 6812, column: 13, scope: !4641, inlinedAt: !8132)
!8136 = !DILocation(line: 6812, column: 9, scope: !4632, inlinedAt: !8132)
!8137 = !DILocation(line: 6814, column: 9, scope: !4644, inlinedAt: !8132)
!8138 = !DILocation(line: 6814, column: 22, scope: !4644, inlinedAt: !8132)
!8139 = !DILocation(line: 3634, column: 27, scope: !8127)
!8140 = !DILocation(line: 3634, column: 6, scope: !8101)
!8141 = !DILocation(line: 3635, column: 17, scope: !8127)
!8142 = !DILocation(line: 3635, column: 22, scope: !8127)
!8143 = !DILocation(line: 3635, column: 15, scope: !8127)
!8144 = !DILocation(line: 3635, column: 6, scope: !8127)
!8145 = !DILocation(line: 3638, column: 9, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3638, column: 9)
!8147 = !DILocation(line: 3638, column: 17, scope: !8146)
!8148 = !DILocation(line: 3638, column: 24, scope: !8146)
!8149 = !DILocation(line: 3638, column: 9, scope: !7499)
!8150 = !DILocation(line: 3641, column: 17, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 3639, column: 5)
!8152 = !DILocation(line: 3642, column: 5, scope: !8151)
!8153 = !DILocation(line: 3643, column: 9, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3643, column: 9)
!8155 = !DILocation(line: 3643, column: 14, scope: !8154)
!8156 = !DILocation(line: 3643, column: 9, scope: !7499)
!8157 = !DILocation(line: 3646, column: 7, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 3644, column: 5)
!8159 = !DILocation(line: 3647, column: 5, scope: !8158)
!8160 = !DILocation(line: 3648, column: 10, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3648, column: 9)
!8162 = !DILocation(line: 3648, column: 18, scope: !8161)
!8163 = !{!4020, !3110, i64 1096}
!8164 = !DILocation(line: 3648, column: 26, scope: !8161)
!8165 = !DILocation(line: 3649, column: 3, scope: !8161)
!8166 = !DILocation(line: 3649, column: 33, scope: !8161)
!8167 = !DILocation(line: 3649, column: 25, scope: !8161)
!8168 = !DILocation(line: 3649, column: 23, scope: !8161)
!8169 = !DILocation(line: 3650, column: 27, scope: !8161)
!8170 = !DILocation(line: 3650, column: 7, scope: !8161)
!8171 = !DILocation(line: 3651, column: 9, scope: !8161)
!8172 = !DILocation(line: 3648, column: 9, scope: !7499)
!8173 = !DILocation(line: 3653, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3653, column: 6)
!8175 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 3652, column: 5)
!8176 = !DILocation(line: 3653, column: 6, scope: !8175)
!8177 = !DILocation(line: 3655, column: 26, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 3655, column: 10)
!8179 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3654, column: 2)
!8180 = !DILocation(line: 3655, column: 10, scope: !8179)
!8181 = !DILocation(line: 3657, column: 6, scope: !8179)
!8182 = !DILocation(line: 3658, column: 2, scope: !8179)
!8183 = !DILocation(line: 3661, column: 11, scope: !8174)
!8184 = !DILocation(line: 3662, column: 22, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3661, column: 11)
!8186 = !DILocation(line: 3662, column: 6, scope: !8185)
!8187 = !DILocation(line: 3664, column: 32, scope: !8185)
!8188 = !DILocation(line: 3664, column: 24, scope: !8185)
!8189 = !DILocation(line: 3664, column: 22, scope: !8185)
!8190 = !DILocation(line: 3666, column: 9, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3666, column: 9)
!8192 = !DILocation(line: 3666, column: 14, scope: !8191)
!8193 = !DILocation(line: 3666, column: 9, scope: !7499)
!8194 = !DILocation(line: 3671, column: 19, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 3671, column: 14)
!8196 = !DILocation(line: 3671, column: 14, scope: !8191)
!8197 = !DILocation(line: 3676, column: 9, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3676, column: 9)
!8199 = !DILocation(line: 3676, column: 18, scope: !8198)
!8200 = !DILocation(line: 3679, column: 7, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 3677, column: 5)
!8202 = !DILocation(line: 3680, column: 5, scope: !8201)
!8203 = !DILocation(line: 3681, column: 9, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3681, column: 9)
!8205 = !DILocation(line: 3681, column: 18, scope: !8204)
!8206 = !DILocation(line: 3681, column: 9, scope: !7499)
!8207 = !DILocation(line: 3684, column: 11, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 3682, column: 5)
!8209 = !DILocation(line: 3685, column: 5, scope: !8208)
!8210 = !DILocation(line: 3686, column: 10, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3686, column: 9)
!8212 = !DILocation(line: 3686, column: 15, scope: !8211)
!8213 = !DILocation(line: 3686, column: 33, scope: !8211)
!8214 = !DILocation(line: 3686, column: 30, scope: !8211)
!8215 = !DILocation(line: 3686, column: 22, scope: !8211)
!8216 = !DILocation(line: 3686, column: 42, scope: !8211)
!8217 = !DILocation(line: 3686, column: 9, scope: !7499)
!8218 = !DILocation(line: 3688, column: 11, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3688, column: 6)
!8220 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 3687, column: 5)
!8221 = !DILocation(line: 3688, column: 6, scope: !8220)
!8222 = !DILocation(line: 3689, column: 18, scope: !8219)
!8223 = !DILocation(line: 3689, column: 11, scope: !8219)
!8224 = !DILocation(line: 3689, column: 6, scope: !8219)
!8225 = !DILocation(line: 3693, column: 11, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 3691, column: 2)
!8227 = !DILocation(line: 3696, column: 9, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3696, column: 9)
!8229 = !DILocation(line: 3696, column: 14, scope: !8228)
!8230 = !DILocation(line: 3696, column: 18, scope: !8228)
!8231 = !DILocation(line: 3696, column: 21, scope: !8228)
!8232 = !DILocation(line: 3696, column: 9, scope: !7499)
!8233 = !DILocation(line: 3699, column: 7, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 3697, column: 5)
!8235 = !DILocation(line: 3700, column: 5, scope: !8234)
!8236 = !DILocation(line: 3701, column: 9, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3701, column: 9)
!8238 = !DILocation(line: 3701, column: 16, scope: !8237)
!8239 = !DILocation(line: 3701, column: 20, scope: !8237)
!8240 = !DILocation(line: 3701, column: 23, scope: !8237)
!8241 = !DILocation(line: 3701, column: 9, scope: !7499)
!8242 = !DILocation(line: 3704, column: 9, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3702, column: 5)
!8244 = !DILocation(line: 3705, column: 5, scope: !8243)
!8245 = !DILocation(line: 3707, column: 9, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3707, column: 9)
!8247 = !DILocation(line: 3707, column: 15, scope: !8246)
!8248 = !DILocation(line: 3707, column: 9, scope: !7499)
!8249 = !DILocation(line: 3710, column: 8, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3708, column: 5)
!8251 = !DILocation(line: 3711, column: 5, scope: !8250)
!8252 = !DILocation(line: 3713, column: 9, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3713, column: 9)
!8254 = !DILocation(line: 3713, column: 14, scope: !8253)
!8255 = !DILocation(line: 3713, column: 9, scope: !7499)
!8256 = !DILocation(line: 3716, column: 7, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3714, column: 5)
!8258 = !DILocation(line: 3717, column: 5, scope: !8257)
!8259 = !DILocation(line: 3718, column: 9, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3718, column: 9)
!8261 = !DILocation(line: 3718, column: 14, scope: !8260)
!8262 = !DILocation(line: 3718, column: 9, scope: !7499)
!8263 = !DILocation(line: 3721, column: 7, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 3719, column: 5)
!8265 = !DILocation(line: 3722, column: 5, scope: !8264)
!8266 = !DILocation(line: 3725, column: 9, scope: !7499)
!8267 = !DILocation(line: 3726, column: 61, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3725, column: 9)
!8269 = !DILocation(line: 3726, column: 28, scope: !8268)
!8270 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !8271)
!8271 = distinct !DILocation(line: 3726, column: 11, scope: !8268)
!8272 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !8271)
!8273 = !DILocation(line: 5090, column: 40, scope: !4280, inlinedAt: !8271)
!8274 = !DILocation(line: 5090, column: 46, scope: !4280, inlinedAt: !8271)
!8275 = !DILocation(line: 5090, column: 9, scope: !4271, inlinedAt: !8271)
!8276 = !DILocation(line: 5092, column: 9, scope: !4286, inlinedAt: !8271)
!8277 = !DILocation(line: 5092, column: 13, scope: !4286, inlinedAt: !8271)
!8278 = !DILocation(line: 5092, column: 6, scope: !4287, inlinedAt: !8271)
!8279 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !8271)
!8280 = !DILocation(line: 5093, column: 6, scope: !4286, inlinedAt: !8271)
!8281 = !DILocation(line: 5143, column: 12, scope: !4271, inlinedAt: !8271)
!8282 = !DILocation(line: 5143, column: 5, scope: !4271, inlinedAt: !8271)
!8283 = !DILocation(line: 3726, column: 2, scope: !8268)
!8284 = !DILocation(line: 3726, column: 59, scope: !8268)
!8285 = !DILocation(line: 3728, column: 22, scope: !7499)
!8286 = !DILocation(line: 3728, column: 28, scope: !7499)
!8287 = !DILocation(line: 3731, column: 38, scope: !7499)
!8288 = !DILocation(line: 3731, column: 5, scope: !7499)
!8289 = !DILocation(line: 3735, column: 5, scope: !7499)
!8290 = !DILocation(line: 3736, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3736, column: 9)
!8292 = !DILocation(line: 3736, column: 17, scope: !8291)
!8293 = !DILocation(line: 3736, column: 28, scope: !8291)
!8294 = !DILocation(line: 3737, column: 8, scope: !8291)
!8295 = !DILocation(line: 3737, column: 29, scope: !8291)
!8296 = !DILocation(line: 3737, column: 35, scope: !8291)
!8297 = !DILocation(line: 3737, column: 60, scope: !8291)
!8298 = !DILocation(line: 3736, column: 9, scope: !7499)
!8299 = !DILocation(line: 3738, column: 10, scope: !8291)
!8300 = !DILocation(line: 3738, column: 25, scope: !8291)
!8301 = !DILocation(line: 3738, column: 2, scope: !8291)
!8302 = !DILocation(line: 3739, column: 37, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3739, column: 9)
!8304 = !DILocation(line: 3739, column: 9, scope: !7499)
!8305 = !DILocation(line: 3740, column: 32, scope: !8303)
!8306 = !DILocation(line: 3740, column: 2, scope: !8303)
!8307 = !DILocation(line: 3743, column: 1, scope: !7499)
!8308 = distinct !DISubprogram(name: "get_varp", scope: !3, file: !3, line: 5160, type: !8309, isLocal: true, isDefinition: true, scopeLine: 5161, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8311)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!1124, !2848}
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "p", arg: 1, scope: !8308, file: !3, line: 5160, type: !2848)
!8313 = !DILocation(line: 5160, column: 28, scope: !8308)
!8314 = !DILocation(line: 5163, column: 12, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 5163, column: 9)
!8316 = !DILocation(line: 5163, column: 16, scope: !8315)
!8317 = !DILocation(line: 5163, column: 9, scope: !8308)
!8318 = !DILocation(line: 5166, column: 21, scope: !8308)
!8319 = !DILocation(line: 5166, column: 5, scope: !8308)
!8320 = !DILocation(line: 5171, column: 22, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 5167, column: 5)
!8322 = !DILocation(line: 5171, column: 30, scope: !8321)
!8323 = !{!3411, !3109, i64 7392}
!8324 = !DILocation(line: 5171, column: 21, scope: !8321)
!8325 = !DILocation(line: 5171, column: 37, scope: !8321)
!8326 = !DILocation(line: 5172, column: 11, scope: !8321)
!8327 = !DILocation(line: 5173, column: 22, scope: !8321)
!8328 = !DILocation(line: 5173, column: 30, scope: !8321)
!8329 = !{!3411, !3109, i64 7112}
!8330 = !DILocation(line: 5173, column: 21, scope: !8321)
!8331 = !DILocation(line: 5173, column: 37, scope: !8321)
!8332 = !DILocation(line: 5174, column: 11, scope: !8321)
!8333 = !DILocation(line: 5175, column: 24, scope: !8321)
!8334 = !DILocation(line: 5175, column: 32, scope: !8321)
!8335 = !{!3411, !3109, i64 7400}
!8336 = !DILocation(line: 5175, column: 23, scope: !8321)
!8337 = !DILocation(line: 5175, column: 41, scope: !8321)
!8338 = !DILocation(line: 5176, column: 11, scope: !8321)
!8339 = !DILocation(line: 5177, column: 21, scope: !8321)
!8340 = !DILocation(line: 5177, column: 29, scope: !8321)
!8341 = !DILocation(line: 5177, column: 36, scope: !8321)
!8342 = !DILocation(line: 5178, column: 11, scope: !8321)
!8343 = !DILocation(line: 5179, column: 24, scope: !8321)
!8344 = !DILocation(line: 5179, column: 32, scope: !8321)
!8345 = !{!3411, !3109, i64 7416}
!8346 = !DILocation(line: 5179, column: 23, scope: !8321)
!8347 = !DILocation(line: 5179, column: 41, scope: !8321)
!8348 = !DILocation(line: 5180, column: 11, scope: !8321)
!8349 = !DILocation(line: 5181, column: 22, scope: !8321)
!8350 = !DILocation(line: 5181, column: 30, scope: !8321)
!8351 = !{!3411, !3109, i64 7424}
!8352 = !DILocation(line: 5181, column: 21, scope: !8321)
!8353 = !DILocation(line: 5181, column: 37, scope: !8321)
!8354 = !DILocation(line: 5182, column: 11, scope: !8321)
!8355 = !DILocation(line: 5183, column: 23, scope: !8321)
!8356 = !DILocation(line: 5183, column: 31, scope: !8321)
!8357 = !{!3411, !3109, i64 6816}
!8358 = !DILocation(line: 5183, column: 22, scope: !8321)
!8359 = !DILocation(line: 5183, column: 39, scope: !8321)
!8360 = !DILocation(line: 5184, column: 11, scope: !8321)
!8361 = !DILocation(line: 5185, column: 23, scope: !8321)
!8362 = !DILocation(line: 5185, column: 31, scope: !8321)
!8363 = !{!4020, !3110, i64 3696}
!8364 = !DILocation(line: 5185, column: 40, scope: !8321)
!8365 = !DILocation(line: 5186, column: 11, scope: !8321)
!8366 = !DILocation(line: 5187, column: 21, scope: !8321)
!8367 = !DILocation(line: 5187, column: 29, scope: !8321)
!8368 = !{!4020, !3110, i64 3704}
!8369 = !DILocation(line: 5187, column: 36, scope: !8321)
!8370 = !DILocation(line: 5188, column: 11, scope: !8321)
!8371 = !DILocation(line: 5190, column: 23, scope: !8321)
!8372 = !DILocation(line: 5190, column: 31, scope: !8321)
!8373 = !{!3411, !3109, i64 7024}
!8374 = !DILocation(line: 5190, column: 22, scope: !8321)
!8375 = !DILocation(line: 5190, column: 39, scope: !8321)
!8376 = !DILocation(line: 5191, column: 11, scope: !8321)
!8377 = !DILocation(line: 5192, column: 23, scope: !8321)
!8378 = !DILocation(line: 5192, column: 31, scope: !8321)
!8379 = !{!3411, !3109, i64 7032}
!8380 = !DILocation(line: 5192, column: 22, scope: !8321)
!8381 = !DILocation(line: 5192, column: 39, scope: !8321)
!8382 = !DILocation(line: 5193, column: 11, scope: !8321)
!8383 = !DILocation(line: 5195, column: 24, scope: !8321)
!8384 = !DILocation(line: 5195, column: 32, scope: !8321)
!8385 = !{!3411, !3109, i64 7440}
!8386 = !DILocation(line: 5195, column: 23, scope: !8321)
!8387 = !DILocation(line: 5195, column: 41, scope: !8321)
!8388 = !DILocation(line: 5196, column: 11, scope: !8321)
!8389 = !DILocation(line: 5197, column: 23, scope: !8321)
!8390 = !DILocation(line: 5197, column: 31, scope: !8321)
!8391 = !{!3411, !3109, i64 7448}
!8392 = !DILocation(line: 5197, column: 22, scope: !8321)
!8393 = !DILocation(line: 5197, column: 39, scope: !8321)
!8394 = !DILocation(line: 5198, column: 11, scope: !8321)
!8395 = !DILocation(line: 5199, column: 22, scope: !8321)
!8396 = !DILocation(line: 5199, column: 30, scope: !8321)
!8397 = !{!3411, !3109, i64 7080}
!8398 = !DILocation(line: 5199, column: 21, scope: !8321)
!8399 = !DILocation(line: 5199, column: 37, scope: !8321)
!8400 = !DILocation(line: 5200, column: 11, scope: !8321)
!8401 = !DILocation(line: 5202, column: 23, scope: !8321)
!8402 = !DILocation(line: 5202, column: 31, scope: !8321)
!8403 = !{!3411, !3109, i64 7384}
!8404 = !DILocation(line: 5202, column: 22, scope: !8321)
!8405 = !DILocation(line: 5202, column: 39, scope: !8321)
!8406 = !DILocation(line: 5203, column: 11, scope: !8321)
!8407 = !DILocation(line: 5204, column: 22, scope: !8321)
!8408 = !DILocation(line: 5204, column: 30, scope: !8321)
!8409 = !{!3411, !3109, i64 7368}
!8410 = !DILocation(line: 5204, column: 21, scope: !8321)
!8411 = !DILocation(line: 5204, column: 37, scope: !8321)
!8412 = !DILocation(line: 5205, column: 11, scope: !8321)
!8413 = !DILocation(line: 5206, column: 22, scope: !8321)
!8414 = !DILocation(line: 5206, column: 30, scope: !8321)
!8415 = !{!3411, !3109, i64 7376}
!8416 = !DILocation(line: 5206, column: 21, scope: !8321)
!8417 = !DILocation(line: 5206, column: 37, scope: !8321)
!8418 = !DILocation(line: 5207, column: 11, scope: !8321)
!8419 = !DILocation(line: 5210, column: 25, scope: !8321)
!8420 = !DILocation(line: 5210, column: 33, scope: !8321)
!8421 = !{!3411, !3109, i64 7736}
!8422 = !DILocation(line: 5210, column: 24, scope: !8321)
!8423 = !DILocation(line: 5210, column: 43, scope: !8321)
!8424 = !DILocation(line: 5211, column: 11, scope: !8321)
!8425 = !DILocation(line: 5214, column: 22, scope: !8321)
!8426 = !DILocation(line: 5214, column: 30, scope: !8321)
!8427 = !{!3411, !3109, i64 7752}
!8428 = !DILocation(line: 5214, column: 21, scope: !8321)
!8429 = !DILocation(line: 5214, column: 37, scope: !8321)
!8430 = !DILocation(line: 5215, column: 11, scope: !8321)
!8431 = !DILocation(line: 5218, column: 23, scope: !8321)
!8432 = !DILocation(line: 5218, column: 31, scope: !8321)
!8433 = !{!4020, !3109, i64 1136}
!8434 = !DILocation(line: 5218, column: 22, scope: !8321)
!8435 = !DILocation(line: 5218, column: 39, scope: !8321)
!8436 = !DILocation(line: 5219, column: 11, scope: !8321)
!8437 = !DILocation(line: 5222, column: 23, scope: !8321)
!8438 = !DILocation(line: 5222, column: 31, scope: !8321)
!8439 = !{!4020, !3109, i64 1144}
!8440 = !DILocation(line: 5222, column: 22, scope: !8321)
!8441 = !DILocation(line: 5222, column: 39, scope: !8321)
!8442 = !DILocation(line: 5223, column: 11, scope: !8321)
!8443 = !DILocation(line: 5225, column: 21, scope: !8321)
!8444 = !DILocation(line: 5225, column: 29, scope: !8321)
!8445 = !DILocation(line: 5225, column: 36, scope: !8321)
!8446 = !DILocation(line: 5226, column: 11, scope: !8321)
!8447 = !DILocation(line: 5228, column: 22, scope: !8321)
!8448 = !DILocation(line: 5228, column: 30, scope: !8321)
!8449 = !{!3411, !3109, i64 7472}
!8450 = !DILocation(line: 5228, column: 21, scope: !8321)
!8451 = !DILocation(line: 5228, column: 37, scope: !8321)
!8452 = !DILocation(line: 5229, column: 11, scope: !8321)
!8453 = !DILocation(line: 5231, column: 24, scope: !8321)
!8454 = !DILocation(line: 5231, column: 32, scope: !8321)
!8455 = !{!3411, !3109, i64 7128}
!8456 = !DILocation(line: 5231, column: 23, scope: !8321)
!8457 = !DILocation(line: 5231, column: 41, scope: !8321)
!8458 = !DILocation(line: 5232, column: 11, scope: !8321)
!8459 = !DILocation(line: 5234, column: 35, scope: !8321)
!8460 = !DILocation(line: 5234, column: 43, scope: !8321)
!8461 = !DILocation(line: 5234, column: 23, scope: !8321)
!8462 = !DILocation(line: 5234, column: 16, scope: !8321)
!8463 = !DILocation(line: 5236, column: 35, scope: !8321)
!8464 = !DILocation(line: 5236, column: 43, scope: !8321)
!8465 = !DILocation(line: 5236, column: 23, scope: !8321)
!8466 = !DILocation(line: 5236, column: 16, scope: !8321)
!8467 = !DILocation(line: 5237, column: 23, scope: !8321)
!8468 = !DILocation(line: 5237, column: 31, scope: !8321)
!8469 = !{!4020, !3109, i64 1048}
!8470 = !DILocation(line: 5237, column: 22, scope: !8321)
!8471 = !DILocation(line: 5237, column: 39, scope: !8321)
!8472 = !DILocation(line: 5238, column: 11, scope: !8321)
!8473 = !DILocation(line: 5240, column: 36, scope: !8321)
!8474 = !DILocation(line: 5240, column: 44, scope: !8321)
!8475 = !DILocation(line: 5240, column: 24, scope: !8321)
!8476 = !DILocation(line: 5240, column: 17, scope: !8321)
!8477 = !DILocation(line: 5243, column: 34, scope: !8321)
!8478 = !DILocation(line: 5243, column: 42, scope: !8321)
!8479 = !DILocation(line: 5243, column: 22, scope: !8321)
!8480 = !DILocation(line: 5243, column: 15, scope: !8321)
!8481 = !DILocation(line: 5244, column: 34, scope: !8321)
!8482 = !DILocation(line: 5244, column: 42, scope: !8321)
!8483 = !DILocation(line: 5244, column: 22, scope: !8321)
!8484 = !DILocation(line: 5244, column: 15, scope: !8321)
!8485 = !DILocation(line: 5245, column: 37, scope: !8321)
!8486 = !DILocation(line: 5245, column: 45, scope: !8321)
!8487 = !DILocation(line: 5245, column: 25, scope: !8321)
!8488 = !DILocation(line: 5245, column: 18, scope: !8321)
!8489 = !DILocation(line: 5246, column: 33, scope: !8321)
!8490 = !DILocation(line: 5246, column: 41, scope: !8321)
!8491 = !DILocation(line: 5246, column: 21, scope: !8321)
!8492 = !DILocation(line: 5246, column: 14, scope: !8321)
!8493 = !DILocation(line: 5249, column: 35, scope: !8321)
!8494 = !DILocation(line: 5249, column: 43, scope: !8321)
!8495 = !DILocation(line: 5249, column: 23, scope: !8321)
!8496 = !DILocation(line: 5249, column: 16, scope: !8321)
!8497 = !DILocation(line: 5252, column: 34, scope: !8321)
!8498 = !DILocation(line: 5252, column: 42, scope: !8321)
!8499 = !DILocation(line: 5252, column: 22, scope: !8321)
!8500 = !DILocation(line: 5252, column: 15, scope: !8321)
!8501 = !DILocation(line: 5253, column: 34, scope: !8321)
!8502 = !DILocation(line: 5253, column: 42, scope: !8321)
!8503 = !DILocation(line: 5253, column: 22, scope: !8321)
!8504 = !DILocation(line: 5253, column: 15, scope: !8321)
!8505 = !DILocation(line: 5254, column: 34, scope: !8321)
!8506 = !DILocation(line: 5254, column: 42, scope: !8321)
!8507 = !DILocation(line: 5254, column: 22, scope: !8321)
!8508 = !DILocation(line: 5254, column: 15, scope: !8321)
!8509 = !DILocation(line: 5255, column: 34, scope: !8321)
!8510 = !DILocation(line: 5255, column: 42, scope: !8321)
!8511 = !DILocation(line: 5255, column: 22, scope: !8321)
!8512 = !DILocation(line: 5255, column: 15, scope: !8321)
!8513 = !DILocation(line: 5256, column: 34, scope: !8321)
!8514 = !DILocation(line: 5256, column: 42, scope: !8321)
!8515 = !DILocation(line: 5256, column: 22, scope: !8321)
!8516 = !DILocation(line: 5256, column: 15, scope: !8321)
!8517 = !DILocation(line: 5257, column: 34, scope: !8321)
!8518 = !DILocation(line: 5257, column: 42, scope: !8321)
!8519 = !DILocation(line: 5257, column: 22, scope: !8321)
!8520 = !DILocation(line: 5257, column: 15, scope: !8321)
!8521 = !DILocation(line: 5258, column: 34, scope: !8321)
!8522 = !DILocation(line: 5258, column: 42, scope: !8321)
!8523 = !DILocation(line: 5258, column: 22, scope: !8321)
!8524 = !DILocation(line: 5258, column: 15, scope: !8321)
!8525 = !DILocation(line: 5260, column: 34, scope: !8321)
!8526 = !DILocation(line: 5260, column: 42, scope: !8321)
!8527 = !DILocation(line: 5260, column: 22, scope: !8321)
!8528 = !DILocation(line: 5260, column: 15, scope: !8321)
!8529 = !DILocation(line: 5261, column: 34, scope: !8321)
!8530 = !DILocation(line: 5261, column: 42, scope: !8321)
!8531 = !DILocation(line: 5261, column: 22, scope: !8321)
!8532 = !DILocation(line: 5261, column: 15, scope: !8321)
!8533 = !DILocation(line: 5263, column: 34, scope: !8321)
!8534 = !DILocation(line: 5263, column: 42, scope: !8321)
!8535 = !DILocation(line: 5263, column: 22, scope: !8321)
!8536 = !DILocation(line: 5263, column: 15, scope: !8321)
!8537 = !DILocation(line: 5265, column: 33, scope: !8321)
!8538 = !DILocation(line: 5265, column: 41, scope: !8321)
!8539 = !DILocation(line: 5265, column: 21, scope: !8321)
!8540 = !DILocation(line: 5265, column: 14, scope: !8321)
!8541 = !DILocation(line: 5266, column: 34, scope: !8321)
!8542 = !DILocation(line: 5266, column: 42, scope: !8321)
!8543 = !DILocation(line: 5266, column: 22, scope: !8321)
!8544 = !DILocation(line: 5266, column: 15, scope: !8321)
!8545 = !DILocation(line: 5268, column: 34, scope: !8321)
!8546 = !DILocation(line: 5268, column: 42, scope: !8321)
!8547 = !DILocation(line: 5268, column: 22, scope: !8321)
!8548 = !DILocation(line: 5268, column: 15, scope: !8321)
!8549 = !DILocation(line: 5270, column: 34, scope: !8321)
!8550 = !DILocation(line: 5270, column: 42, scope: !8321)
!8551 = !DILocation(line: 5270, column: 22, scope: !8321)
!8552 = !DILocation(line: 5270, column: 15, scope: !8321)
!8553 = !DILocation(line: 5271, column: 34, scope: !8321)
!8554 = !DILocation(line: 5271, column: 42, scope: !8321)
!8555 = !DILocation(line: 5271, column: 22, scope: !8321)
!8556 = !DILocation(line: 5271, column: 15, scope: !8321)
!8557 = !DILocation(line: 5273, column: 34, scope: !8321)
!8558 = !DILocation(line: 5273, column: 42, scope: !8321)
!8559 = !DILocation(line: 5273, column: 22, scope: !8321)
!8560 = !DILocation(line: 5273, column: 15, scope: !8321)
!8561 = !DILocation(line: 5276, column: 33, scope: !8321)
!8562 = !DILocation(line: 5276, column: 41, scope: !8321)
!8563 = !DILocation(line: 5276, column: 21, scope: !8321)
!8564 = !DILocation(line: 5276, column: 14, scope: !8321)
!8565 = !DILocation(line: 5277, column: 34, scope: !8321)
!8566 = !DILocation(line: 5277, column: 42, scope: !8321)
!8567 = !DILocation(line: 5277, column: 22, scope: !8321)
!8568 = !DILocation(line: 5277, column: 15, scope: !8321)
!8569 = !DILocation(line: 5279, column: 37, scope: !8321)
!8570 = !DILocation(line: 5279, column: 45, scope: !8321)
!8571 = !DILocation(line: 5279, column: 25, scope: !8321)
!8572 = !DILocation(line: 5279, column: 18, scope: !8321)
!8573 = !DILocation(line: 5280, column: 35, scope: !8321)
!8574 = !DILocation(line: 5280, column: 43, scope: !8321)
!8575 = !DILocation(line: 5280, column: 23, scope: !8321)
!8576 = !DILocation(line: 5280, column: 16, scope: !8321)
!8577 = !DILocation(line: 5282, column: 34, scope: !8321)
!8578 = !DILocation(line: 5282, column: 42, scope: !8321)
!8579 = !DILocation(line: 5282, column: 22, scope: !8321)
!8580 = !DILocation(line: 5282, column: 15, scope: !8321)
!8581 = !DILocation(line: 5283, column: 34, scope: !8321)
!8582 = !DILocation(line: 5283, column: 42, scope: !8321)
!8583 = !DILocation(line: 5283, column: 22, scope: !8321)
!8584 = !DILocation(line: 5283, column: 15, scope: !8321)
!8585 = !DILocation(line: 5284, column: 37, scope: !8321)
!8586 = !DILocation(line: 5284, column: 45, scope: !8321)
!8587 = !DILocation(line: 5284, column: 25, scope: !8321)
!8588 = !DILocation(line: 5284, column: 18, scope: !8321)
!8589 = !DILocation(line: 5286, column: 34, scope: !8321)
!8590 = !DILocation(line: 5286, column: 42, scope: !8321)
!8591 = !DILocation(line: 5286, column: 22, scope: !8321)
!8592 = !DILocation(line: 5286, column: 15, scope: !8321)
!8593 = !DILocation(line: 5287, column: 37, scope: !8321)
!8594 = !DILocation(line: 5287, column: 45, scope: !8321)
!8595 = !DILocation(line: 5287, column: 25, scope: !8321)
!8596 = !DILocation(line: 5287, column: 18, scope: !8321)
!8597 = !DILocation(line: 5288, column: 37, scope: !8321)
!8598 = !DILocation(line: 5288, column: 45, scope: !8321)
!8599 = !DILocation(line: 5288, column: 25, scope: !8321)
!8600 = !DILocation(line: 5288, column: 18, scope: !8321)
!8601 = !DILocation(line: 5290, column: 37, scope: !8321)
!8602 = !DILocation(line: 5290, column: 45, scope: !8321)
!8603 = !DILocation(line: 5290, column: 25, scope: !8321)
!8604 = !DILocation(line: 5290, column: 18, scope: !8321)
!8605 = !DILocation(line: 5291, column: 37, scope: !8321)
!8606 = !DILocation(line: 5291, column: 45, scope: !8321)
!8607 = !DILocation(line: 5291, column: 25, scope: !8321)
!8608 = !DILocation(line: 5291, column: 18, scope: !8321)
!8609 = !DILocation(line: 5294, column: 37, scope: !8321)
!8610 = !DILocation(line: 5294, column: 45, scope: !8321)
!8611 = !DILocation(line: 5294, column: 25, scope: !8321)
!8612 = !DILocation(line: 5294, column: 18, scope: !8321)
!8613 = !DILocation(line: 5295, column: 37, scope: !8321)
!8614 = !DILocation(line: 5295, column: 45, scope: !8321)
!8615 = !DILocation(line: 5295, column: 25, scope: !8321)
!8616 = !DILocation(line: 5295, column: 18, scope: !8321)
!8617 = !DILocation(line: 5296, column: 35, scope: !8321)
!8618 = !DILocation(line: 5296, column: 43, scope: !8321)
!8619 = !DILocation(line: 5296, column: 23, scope: !8321)
!8620 = !DILocation(line: 5296, column: 16, scope: !8321)
!8621 = !DILocation(line: 5299, column: 33, scope: !8321)
!8622 = !DILocation(line: 5299, column: 41, scope: !8321)
!8623 = !DILocation(line: 5299, column: 21, scope: !8321)
!8624 = !DILocation(line: 5299, column: 14, scope: !8321)
!8625 = !DILocation(line: 5300, column: 34, scope: !8321)
!8626 = !DILocation(line: 5300, column: 42, scope: !8321)
!8627 = !DILocation(line: 5300, column: 22, scope: !8321)
!8628 = !DILocation(line: 5300, column: 15, scope: !8321)
!8629 = !DILocation(line: 5301, column: 35, scope: !8321)
!8630 = !DILocation(line: 5301, column: 43, scope: !8321)
!8631 = !DILocation(line: 5301, column: 23, scope: !8321)
!8632 = !DILocation(line: 5301, column: 16, scope: !8321)
!8633 = !DILocation(line: 5302, column: 33, scope: !8321)
!8634 = !DILocation(line: 5302, column: 41, scope: !8321)
!8635 = !DILocation(line: 5302, column: 21, scope: !8321)
!8636 = !DILocation(line: 5302, column: 14, scope: !8321)
!8637 = !DILocation(line: 5303, column: 33, scope: !8321)
!8638 = !DILocation(line: 5303, column: 41, scope: !8321)
!8639 = !DILocation(line: 5303, column: 21, scope: !8321)
!8640 = !DILocation(line: 5303, column: 14, scope: !8321)
!8641 = !DILocation(line: 5304, column: 33, scope: !8321)
!8642 = !DILocation(line: 5304, column: 41, scope: !8321)
!8643 = !DILocation(line: 5304, column: 21, scope: !8321)
!8644 = !DILocation(line: 5304, column: 14, scope: !8321)
!8645 = !DILocation(line: 5305, column: 33, scope: !8321)
!8646 = !DILocation(line: 5305, column: 41, scope: !8321)
!8647 = !DILocation(line: 5305, column: 21, scope: !8321)
!8648 = !DILocation(line: 5305, column: 14, scope: !8321)
!8649 = !DILocation(line: 5307, column: 34, scope: !8321)
!8650 = !DILocation(line: 5307, column: 42, scope: !8321)
!8651 = !DILocation(line: 5307, column: 22, scope: !8321)
!8652 = !DILocation(line: 5307, column: 15, scope: !8321)
!8653 = !DILocation(line: 5308, column: 35, scope: !8321)
!8654 = !DILocation(line: 5308, column: 43, scope: !8321)
!8655 = !DILocation(line: 5308, column: 23, scope: !8321)
!8656 = !DILocation(line: 5308, column: 16, scope: !8321)
!8657 = !DILocation(line: 5309, column: 35, scope: !8321)
!8658 = !DILocation(line: 5309, column: 43, scope: !8321)
!8659 = !DILocation(line: 5309, column: 23, scope: !8321)
!8660 = !DILocation(line: 5309, column: 16, scope: !8321)
!8661 = !DILocation(line: 5312, column: 35, scope: !8321)
!8662 = !DILocation(line: 5312, column: 43, scope: !8321)
!8663 = !DILocation(line: 5312, column: 23, scope: !8321)
!8664 = !DILocation(line: 5312, column: 16, scope: !8321)
!8665 = !DILocation(line: 5314, column: 34, scope: !8321)
!8666 = !DILocation(line: 5314, column: 42, scope: !8321)
!8667 = !DILocation(line: 5314, column: 22, scope: !8321)
!8668 = !DILocation(line: 5314, column: 15, scope: !8321)
!8669 = !DILocation(line: 5316, column: 34, scope: !8321)
!8670 = !DILocation(line: 5316, column: 42, scope: !8321)
!8671 = !DILocation(line: 5316, column: 22, scope: !8321)
!8672 = !DILocation(line: 5316, column: 15, scope: !8321)
!8673 = !DILocation(line: 5318, column: 34, scope: !8321)
!8674 = !DILocation(line: 5318, column: 42, scope: !8321)
!8675 = !DILocation(line: 5318, column: 22, scope: !8321)
!8676 = !DILocation(line: 5318, column: 15, scope: !8321)
!8677 = !DILocation(line: 5323, column: 34, scope: !8321)
!8678 = !DILocation(line: 5323, column: 42, scope: !8321)
!8679 = !DILocation(line: 5323, column: 22, scope: !8321)
!8680 = !DILocation(line: 5323, column: 15, scope: !8321)
!8681 = !DILocation(line: 5324, column: 34, scope: !8321)
!8682 = !DILocation(line: 5324, column: 42, scope: !8321)
!8683 = !DILocation(line: 5324, column: 22, scope: !8321)
!8684 = !DILocation(line: 5324, column: 15, scope: !8321)
!8685 = !DILocation(line: 5327, column: 34, scope: !8321)
!8686 = !DILocation(line: 5327, column: 42, scope: !8321)
!8687 = !DILocation(line: 5327, column: 22, scope: !8321)
!8688 = !DILocation(line: 5327, column: 15, scope: !8321)
!8689 = !DILocation(line: 5329, column: 34, scope: !8321)
!8690 = !DILocation(line: 5329, column: 42, scope: !8321)
!8691 = !DILocation(line: 5329, column: 22, scope: !8321)
!8692 = !DILocation(line: 5329, column: 15, scope: !8321)
!8693 = !DILocation(line: 5330, column: 37, scope: !8321)
!8694 = !DILocation(line: 5330, column: 45, scope: !8321)
!8695 = !DILocation(line: 5330, column: 25, scope: !8321)
!8696 = !DILocation(line: 5330, column: 18, scope: !8321)
!8697 = !DILocation(line: 5331, column: 33, scope: !8321)
!8698 = !DILocation(line: 5331, column: 41, scope: !8321)
!8699 = !DILocation(line: 5331, column: 21, scope: !8321)
!8700 = !DILocation(line: 5331, column: 14, scope: !8321)
!8701 = !DILocation(line: 5332, column: 35, scope: !8321)
!8702 = !DILocation(line: 5332, column: 43, scope: !8321)
!8703 = !DILocation(line: 5332, column: 23, scope: !8321)
!8704 = !DILocation(line: 5332, column: 16, scope: !8321)
!8705 = !DILocation(line: 5333, column: 33, scope: !8321)
!8706 = !DILocation(line: 5333, column: 41, scope: !8321)
!8707 = !DILocation(line: 5333, column: 21, scope: !8321)
!8708 = !DILocation(line: 5333, column: 14, scope: !8321)
!8709 = !DILocation(line: 5334, column: 33, scope: !8321)
!8710 = !DILocation(line: 5334, column: 41, scope: !8321)
!8711 = !DILocation(line: 5334, column: 21, scope: !8321)
!8712 = !DILocation(line: 5334, column: 14, scope: !8321)
!8713 = !DILocation(line: 5335, column: 33, scope: !8321)
!8714 = !DILocation(line: 5335, column: 41, scope: !8321)
!8715 = !DILocation(line: 5335, column: 21, scope: !8321)
!8716 = !DILocation(line: 5335, column: 14, scope: !8321)
!8717 = !DILocation(line: 5336, column: 34, scope: !8321)
!8718 = !DILocation(line: 5336, column: 42, scope: !8321)
!8719 = !DILocation(line: 5336, column: 22, scope: !8321)
!8720 = !DILocation(line: 5336, column: 15, scope: !8321)
!8721 = !DILocation(line: 5337, column: 34, scope: !8321)
!8722 = !DILocation(line: 5337, column: 42, scope: !8321)
!8723 = !DILocation(line: 5337, column: 22, scope: !8321)
!8724 = !DILocation(line: 5337, column: 15, scope: !8321)
!8725 = !DILocation(line: 5338, column: 34, scope: !8321)
!8726 = !DILocation(line: 5338, column: 42, scope: !8321)
!8727 = !DILocation(line: 5338, column: 22, scope: !8321)
!8728 = !DILocation(line: 5338, column: 15, scope: !8321)
!8729 = !DILocation(line: 5339, column: 34, scope: !8321)
!8730 = !DILocation(line: 5339, column: 42, scope: !8321)
!8731 = !DILocation(line: 5339, column: 22, scope: !8321)
!8732 = !DILocation(line: 5339, column: 15, scope: !8321)
!8733 = !DILocation(line: 5340, column: 34, scope: !8321)
!8734 = !DILocation(line: 5340, column: 42, scope: !8321)
!8735 = !DILocation(line: 5340, column: 22, scope: !8321)
!8736 = !DILocation(line: 5340, column: 15, scope: !8321)
!8737 = !DILocation(line: 5343, column: 35, scope: !8321)
!8738 = !DILocation(line: 5343, column: 43, scope: !8321)
!8739 = !DILocation(line: 5343, column: 23, scope: !8321)
!8740 = !DILocation(line: 5343, column: 16, scope: !8321)
!8741 = !DILocation(line: 5347, column: 35, scope: !8321)
!8742 = !DILocation(line: 5347, column: 43, scope: !8321)
!8743 = !DILocation(line: 5347, column: 23, scope: !8321)
!8744 = !DILocation(line: 5347, column: 16, scope: !8321)
!8745 = !DILocation(line: 5348, column: 35, scope: !8321)
!8746 = !DILocation(line: 5348, column: 43, scope: !8321)
!8747 = !DILocation(line: 5348, column: 23, scope: !8321)
!8748 = !DILocation(line: 5348, column: 16, scope: !8321)
!8749 = !DILocation(line: 5351, column: 34, scope: !8321)
!8750 = !DILocation(line: 5351, column: 42, scope: !8321)
!8751 = !DILocation(line: 5351, column: 22, scope: !8321)
!8752 = !DILocation(line: 5351, column: 15, scope: !8321)
!8753 = !DILocation(line: 5354, column: 34, scope: !8321)
!8754 = !DILocation(line: 5354, column: 42, scope: !8321)
!8755 = !DILocation(line: 5354, column: 22, scope: !8321)
!8756 = !DILocation(line: 5354, column: 15, scope: !8321)
!8757 = !DILocation(line: 5357, column: 35, scope: !8321)
!8758 = !DILocation(line: 5357, column: 43, scope: !8321)
!8759 = !DILocation(line: 5357, column: 23, scope: !8321)
!8760 = !DILocation(line: 5357, column: 16, scope: !8321)
!8761 = !DILocation(line: 5359, column: 33, scope: !8321)
!8762 = !DILocation(line: 5359, column: 41, scope: !8321)
!8763 = !DILocation(line: 5359, column: 21, scope: !8321)
!8764 = !DILocation(line: 5359, column: 14, scope: !8321)
!8765 = !DILocation(line: 5360, column: 34, scope: !8321)
!8766 = !DILocation(line: 5360, column: 42, scope: !8321)
!8767 = !DILocation(line: 5360, column: 22, scope: !8321)
!8768 = !DILocation(line: 5360, column: 15, scope: !8321)
!8769 = !DILocation(line: 5361, column: 33, scope: !8321)
!8770 = !DILocation(line: 5361, column: 41, scope: !8321)
!8771 = !DILocation(line: 5361, column: 21, scope: !8321)
!8772 = !DILocation(line: 5361, column: 14, scope: !8321)
!8773 = !DILocation(line: 5362, column: 34, scope: !8321)
!8774 = !DILocation(line: 5362, column: 42, scope: !8321)
!8775 = !DILocation(line: 5362, column: 22, scope: !8321)
!8776 = !DILocation(line: 5362, column: 15, scope: !8321)
!8777 = !DILocation(line: 5363, column: 33, scope: !8321)
!8778 = !DILocation(line: 5363, column: 41, scope: !8321)
!8779 = !DILocation(line: 5363, column: 21, scope: !8321)
!8780 = !DILocation(line: 5363, column: 14, scope: !8321)
!8781 = !DILocation(line: 5364, column: 33, scope: !8321)
!8782 = !DILocation(line: 5364, column: 41, scope: !8321)
!8783 = !DILocation(line: 5364, column: 21, scope: !8321)
!8784 = !DILocation(line: 5364, column: 14, scope: !8321)
!8785 = !DILocation(line: 5366, column: 33, scope: !8321)
!8786 = !DILocation(line: 5366, column: 41, scope: !8321)
!8787 = !DILocation(line: 5366, column: 21, scope: !8321)
!8788 = !DILocation(line: 5366, column: 14, scope: !8321)
!8789 = !DILocation(line: 5368, column: 33, scope: !8321)
!8790 = !DILocation(line: 5368, column: 41, scope: !8321)
!8791 = !DILocation(line: 5368, column: 21, scope: !8321)
!8792 = !DILocation(line: 5368, column: 14, scope: !8321)
!8793 = !DILocation(line: 5370, column: 33, scope: !8321)
!8794 = !DILocation(line: 5370, column: 41, scope: !8321)
!8795 = !DILocation(line: 5370, column: 21, scope: !8321)
!8796 = !DILocation(line: 5370, column: 14, scope: !8321)
!8797 = !DILocation(line: 5372, column: 33, scope: !8321)
!8798 = !DILocation(line: 5372, column: 41, scope: !8321)
!8799 = !DILocation(line: 5372, column: 21, scope: !8321)
!8800 = !DILocation(line: 5372, column: 14, scope: !8321)
!8801 = !DILocation(line: 5373, column: 34, scope: !8321)
!8802 = !DILocation(line: 5373, column: 42, scope: !8321)
!8803 = !DILocation(line: 5373, column: 22, scope: !8321)
!8804 = !DILocation(line: 5373, column: 15, scope: !8321)
!8805 = !DILocation(line: 5375, column: 34, scope: !8321)
!8806 = !DILocation(line: 5375, column: 42, scope: !8321)
!8807 = !DILocation(line: 5375, column: 22, scope: !8321)
!8808 = !DILocation(line: 5375, column: 15, scope: !8321)
!8809 = !DILocation(line: 5377, column: 34, scope: !8321)
!8810 = !DILocation(line: 5377, column: 42, scope: !8321)
!8811 = !DILocation(line: 5377, column: 22, scope: !8321)
!8812 = !DILocation(line: 5377, column: 15, scope: !8321)
!8813 = !DILocation(line: 5379, column: 34, scope: !8321)
!8814 = !DILocation(line: 5379, column: 42, scope: !8321)
!8815 = !DILocation(line: 5379, column: 22, scope: !8321)
!8816 = !DILocation(line: 5379, column: 15, scope: !8321)
!8817 = !DILocation(line: 5380, column: 34, scope: !8321)
!8818 = !DILocation(line: 5380, column: 42, scope: !8321)
!8819 = !DILocation(line: 5380, column: 22, scope: !8321)
!8820 = !DILocation(line: 5380, column: 15, scope: !8321)
!8821 = !DILocation(line: 5383, column: 34, scope: !8321)
!8822 = !DILocation(line: 5383, column: 42, scope: !8321)
!8823 = !DILocation(line: 5383, column: 47, scope: !8321)
!8824 = !DILocation(line: 5383, column: 22, scope: !8321)
!8825 = !DILocation(line: 5383, column: 15, scope: !8321)
!8826 = !DILocation(line: 5384, column: 34, scope: !8321)
!8827 = !DILocation(line: 5384, column: 42, scope: !8321)
!8828 = !DILocation(line: 5384, column: 47, scope: !8321)
!8829 = !DILocation(line: 5384, column: 22, scope: !8321)
!8830 = !DILocation(line: 5384, column: 15, scope: !8321)
!8831 = !DILocation(line: 5385, column: 34, scope: !8321)
!8832 = !DILocation(line: 5385, column: 42, scope: !8321)
!8833 = !DILocation(line: 5385, column: 47, scope: !8321)
!8834 = !DILocation(line: 5385, column: 22, scope: !8321)
!8835 = !DILocation(line: 5385, column: 15, scope: !8321)
!8836 = !DILocation(line: 5386, column: 34, scope: !8321)
!8837 = !DILocation(line: 5386, column: 42, scope: !8321)
!8838 = !DILocation(line: 5386, column: 47, scope: !8321)
!8839 = !DILocation(line: 5386, column: 22, scope: !8321)
!8840 = !DILocation(line: 5386, column: 15, scope: !8321)
!8841 = !DILocation(line: 5388, column: 33, scope: !8321)
!8842 = !DILocation(line: 5388, column: 41, scope: !8321)
!8843 = !DILocation(line: 5388, column: 21, scope: !8321)
!8844 = !DILocation(line: 5388, column: 14, scope: !8321)
!8845 = !DILocation(line: 5389, column: 33, scope: !8321)
!8846 = !DILocation(line: 5389, column: 41, scope: !8321)
!8847 = !DILocation(line: 5389, column: 21, scope: !8321)
!8848 = !DILocation(line: 5389, column: 14, scope: !8321)
!8849 = !DILocation(line: 5390, column: 33, scope: !8321)
!8850 = !DILocation(line: 5390, column: 41, scope: !8321)
!8851 = !DILocation(line: 5390, column: 21, scope: !8321)
!8852 = !DILocation(line: 5390, column: 14, scope: !8321)
!8853 = !DILocation(line: 5391, column: 33, scope: !8321)
!8854 = !DILocation(line: 5391, column: 41, scope: !8321)
!8855 = !DILocation(line: 5391, column: 21, scope: !8321)
!8856 = !DILocation(line: 5391, column: 14, scope: !8321)
!8857 = !DILocation(line: 5393, column: 34, scope: !8321)
!8858 = !DILocation(line: 5393, column: 42, scope: !8321)
!8859 = !DILocation(line: 5393, column: 22, scope: !8321)
!8860 = !DILocation(line: 5393, column: 15, scope: !8321)
!8861 = !DILocation(line: 5395, column: 33, scope: !8321)
!8862 = !DILocation(line: 5395, column: 41, scope: !8321)
!8863 = !DILocation(line: 5395, column: 21, scope: !8321)
!8864 = !DILocation(line: 5395, column: 14, scope: !8321)
!8865 = !DILocation(line: 5397, column: 35, scope: !8321)
!8866 = !DILocation(line: 5397, column: 43, scope: !8321)
!8867 = !DILocation(line: 5397, column: 23, scope: !8321)
!8868 = !DILocation(line: 5397, column: 16, scope: !8321)
!8869 = !DILocation(line: 5400, column: 34, scope: !8321)
!8870 = !DILocation(line: 5400, column: 42, scope: !8321)
!8871 = !DILocation(line: 5400, column: 22, scope: !8321)
!8872 = !DILocation(line: 5400, column: 15, scope: !8321)
!8873 = !DILocation(line: 5403, column: 35, scope: !8321)
!8874 = !DILocation(line: 5403, column: 43, scope: !8321)
!8875 = !DILocation(line: 5403, column: 23, scope: !8321)
!8876 = !DILocation(line: 5403, column: 16, scope: !8321)
!8877 = !DILocation(line: 5404, column: 34, scope: !8321)
!8878 = !DILocation(line: 5404, column: 42, scope: !8321)
!8879 = !DILocation(line: 5404, column: 22, scope: !8321)
!8880 = !DILocation(line: 5404, column: 15, scope: !8321)
!8881 = !DILocation(line: 5406, column: 17, scope: !8321)
!8882 = !DILocation(line: 5406, column: 11, scope: !8321)
!8883 = !DILocation(line: 5409, column: 24, scope: !8308)
!8884 = !DILocation(line: 5409, column: 32, scope: !8308)
!8885 = !DILocation(line: 5409, column: 12, scope: !8308)
!8886 = !DILocation(line: 5409, column: 5, scope: !8308)
!8887 = !DILocation(line: 5410, column: 1, scope: !8308)
!8888 = !DILocation(line: 2132, column: 13, scope: !6155)
!8889 = !DILocation(line: 2133, column: 13, scope: !6155)
!8890 = !DILocation(line: 2134, column: 13, scope: !6155)
!8891 = !DILocation(line: 2135, column: 13, scope: !6155)
!8892 = !DILocation(line: 2140, column: 5, scope: !6155)
!8893 = !DILocation(line: 2140, column: 22, scope: !6155)
!8894 = !DILocation(line: 2140, column: 28, scope: !6155)
!8895 = !DILocation(line: 2428, column: 19, scope: !4526, inlinedAt: !8896)
!8896 = distinct !DILocation(line: 2145, column: 9, scope: !6155)
!8897 = !DILocation(line: 2428, column: 32, scope: !4526, inlinedAt: !8896)
!8898 = !DILocation(line: 2430, column: 19, scope: !4535, inlinedAt: !8896)
!8899 = !DILocation(line: 2430, column: 9, scope: !4526, inlinedAt: !8896)
!8900 = !DILocation(line: 2431, column: 32, scope: !4535, inlinedAt: !8896)
!8901 = !DILocation(line: 2431, column: 2, scope: !4535, inlinedAt: !8896)
!8902 = !DILocation(line: 2434, column: 27, scope: !4540, inlinedAt: !8896)
!8903 = !DILocation(line: 2434, column: 35, scope: !4540, inlinedAt: !8896)
!8904 = !DILocation(line: 2434, column: 19, scope: !4540, inlinedAt: !8896)
!8905 = !DILocation(line: 2438, column: 27, scope: !4540, inlinedAt: !8896)
!8906 = !DILocation(line: 2438, column: 35, scope: !4540, inlinedAt: !8896)
!8907 = !DILocation(line: 2438, column: 19, scope: !4540, inlinedAt: !8896)
!8908 = !DILocation(line: 2439, column: 27, scope: !4540, inlinedAt: !8896)
!8909 = !DILocation(line: 2439, column: 35, scope: !4540, inlinedAt: !8896)
!8910 = !DILocation(line: 2439, column: 19, scope: !4540, inlinedAt: !8896)
!8911 = !DILocation(line: 2442, column: 29, scope: !4540, inlinedAt: !8896)
!8912 = !DILocation(line: 2442, column: 37, scope: !4540, inlinedAt: !8896)
!8913 = !DILocation(line: 2442, column: 21, scope: !4540, inlinedAt: !8896)
!8914 = !DILocation(line: 2445, column: 28, scope: !4540, inlinedAt: !8896)
!8915 = !DILocation(line: 2445, column: 36, scope: !4540, inlinedAt: !8896)
!8916 = !DILocation(line: 2445, column: 20, scope: !4540, inlinedAt: !8896)
!8917 = !DILocation(line: 2447, column: 27, scope: !4540, inlinedAt: !8896)
!8918 = !DILocation(line: 2447, column: 35, scope: !4540, inlinedAt: !8896)
!8919 = !DILocation(line: 2447, column: 19, scope: !4540, inlinedAt: !8896)
!8920 = !DILocation(line: 2449, column: 28, scope: !4540, inlinedAt: !8896)
!8921 = !DILocation(line: 2449, column: 36, scope: !4540, inlinedAt: !8896)
!8922 = !DILocation(line: 2449, column: 20, scope: !4540, inlinedAt: !8896)
!8923 = !DILocation(line: 2138, column: 13, scope: !6155)
!8924 = !DILocation(line: 2146, column: 10, scope: !6199)
!8925 = !DILocation(line: 2146, column: 24, scope: !6199)
!8926 = !DILocation(line: 2146, column: 28, scope: !6199)
!8927 = !DILocation(line: 2148, column: 9, scope: !6199)
!8928 = !DILocation(line: 2150, column: 20, scope: !6199)
!8929 = !DILocation(line: 2148, column: 6, scope: !6199)
!8930 = !DILocation(line: 2151, column: 7, scope: !6199)
!8931 = !DILocation(line: 2151, column: 10, scope: !6199)
!8932 = !DILocation(line: 2151, column: 2, scope: !6199)
!8933 = !DILocation(line: 2152, column: 14, scope: !6210)
!8934 = !DILocation(line: 2152, column: 14, scope: !6199)
!8935 = !DILocation(line: 2153, column: 7, scope: !6210)
!8936 = !DILocation(line: 2153, column: 10, scope: !6210)
!8937 = !DILocation(line: 2153, column: 2, scope: !6210)
!8938 = !DILocation(line: 2154, column: 1, scope: !6155)
!8939 = !DILocation(line: 2183, column: 9, scope: !7198)
!8940 = !DILocation(line: 2183, column: 18, scope: !7198)
!8941 = !DILocation(line: 2185, column: 14, scope: !7198)
!8942 = !DILocation(line: 2185, column: 10, scope: !7198)
!8943 = !DILocation(line: 2185, column: 6, scope: !7198)
!8944 = !DILocation(line: 2188, column: 2, scope: !7198)
!8945 = !DILocation(line: 2189, column: 1, scope: !7199)
!8946 = distinct !DISubprogram(name: "set_options_bin", scope: !3, file: !3, line: 2196, type: !4405, isLocal: false, isDefinition: true, scopeLine: 2200, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !8947)
!8947 = !{!8948, !8949, !8950}
!8948 = !DILocalVariable(name: "oldval", arg: 1, scope: !8946, file: !3, line: 2197, type: !1131)
!8949 = !DILocalVariable(name: "newval", arg: 2, scope: !8946, file: !3, line: 2198, type: !1131)
!8950 = !DILocalVariable(name: "opt_flags", arg: 3, scope: !8946, file: !3, line: 2199, type: !1131)
!8951 = !DILocation(line: 2197, column: 10, scope: !8946)
!8952 = !DILocation(line: 2198, column: 10, scope: !8946)
!8953 = !DILocation(line: 2199, column: 10, scope: !8946)
!8954 = !DILocation(line: 2205, column: 9, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2205, column: 9)
!8956 = !DILocation(line: 2205, column: 9, scope: !8946)
!8957 = !DILocation(line: 2207, column: 6, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 2206, column: 5)
!8959 = !DILocation(line: 2209, column: 22, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2209, column: 10)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 2208, column: 2)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2207, column: 6)
!8963 = !DILocation(line: 2209, column: 10, scope: !8961)
!8964 = !DILocation(line: 2211, column: 26, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 2210, column: 6)
!8966 = !DILocation(line: 2211, column: 34, scope: !8965)
!8967 = !DILocation(line: 2211, column: 11, scope: !8965)
!8968 = !DILocation(line: 2211, column: 24, scope: !8965)
!8969 = !{!3411, !3110, i64 7280}
!8970 = !DILocation(line: 2212, column: 34, scope: !8965)
!8971 = !DILocation(line: 2212, column: 11, scope: !8965)
!8972 = !DILocation(line: 2212, column: 24, scope: !8965)
!8973 = !{!3411, !3110, i64 7304}
!8974 = !DILocation(line: 2213, column: 34, scope: !8965)
!8975 = !{!3411, !3061, i64 7144}
!8976 = !DILocation(line: 2213, column: 11, scope: !8965)
!8977 = !DILocation(line: 2213, column: 24, scope: !8965)
!8978 = !{!3411, !3061, i64 7148}
!8979 = !DILocation(line: 2214, column: 34, scope: !8965)
!8980 = !DILocation(line: 2214, column: 11, scope: !8965)
!8981 = !DILocation(line: 2214, column: 24, scope: !8965)
!8982 = !{!3411, !3061, i64 6956}
!8983 = !DILocation(line: 2215, column: 6, scope: !8965)
!8984 = !DILocation(line: 2216, column: 22, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2216, column: 10)
!8986 = !DILocation(line: 2216, column: 10, scope: !8961)
!8987 = !DILocation(line: 2218, column: 16, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 2217, column: 6)
!8989 = !DILocation(line: 2218, column: 14, scope: !8988)
!8990 = !DILocation(line: 2219, column: 16, scope: !8988)
!8991 = !DILocation(line: 2219, column: 14, scope: !8988)
!8992 = !DILocation(line: 2220, column: 16, scope: !8988)
!8993 = !DILocation(line: 2220, column: 14, scope: !8988)
!8994 = !DILocation(line: 2221, column: 16, scope: !8988)
!8995 = !DILocation(line: 2221, column: 14, scope: !8988)
!8996 = !DILocation(line: 2222, column: 6, scope: !8988)
!8997 = !DILocation(line: 2225, column: 18, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2225, column: 6)
!8999 = !DILocation(line: 2225, column: 6, scope: !8958)
!9000 = !DILocation(line: 2227, column: 6, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2226, column: 2)
!9002 = !DILocation(line: 2227, column: 14, scope: !9001)
!9003 = !DILocation(line: 2227, column: 21, scope: !9001)
!9004 = !DILocation(line: 2228, column: 14, scope: !9001)
!9005 = !DILocation(line: 2228, column: 21, scope: !9001)
!9006 = !DILocation(line: 2229, column: 14, scope: !9001)
!9007 = !DILocation(line: 2229, column: 21, scope: !9001)
!9008 = !DILocation(line: 2230, column: 14, scope: !9001)
!9009 = !DILocation(line: 2230, column: 21, scope: !9001)
!9010 = !DILocation(line: 2231, column: 2, scope: !9001)
!9011 = !DILocation(line: 2232, column: 18, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2232, column: 6)
!9013 = !DILocation(line: 2232, column: 6, scope: !8958)
!9014 = !DILocation(line: 2234, column: 11, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 2233, column: 2)
!9016 = !DILocation(line: 2235, column: 11, scope: !9015)
!9017 = !DILocation(line: 2236, column: 11, scope: !9015)
!9018 = !DILocation(line: 2237, column: 11, scope: !9015)
!9019 = !DILocation(line: 2238, column: 12, scope: !9015)
!9020 = !DILocation(line: 2239, column: 2, scope: !9015)
!9021 = !DILocation(line: 2241, column: 14, scope: !8955)
!9022 = !DILocation(line: 2243, column: 18, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 2243, column: 6)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 2242, column: 5)
!9025 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 2241, column: 14)
!9026 = !DILocation(line: 2243, column: 6, scope: !9024)
!9027 = !DILocation(line: 2245, column: 23, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 2244, column: 2)
!9029 = !DILocation(line: 2245, column: 31, scope: !9028)
!9030 = !DILocation(line: 2245, column: 14, scope: !9028)
!9031 = !DILocation(line: 2245, column: 21, scope: !9028)
!9032 = !DILocation(line: 2246, column: 31, scope: !9028)
!9033 = !DILocation(line: 2246, column: 14, scope: !9028)
!9034 = !DILocation(line: 2246, column: 21, scope: !9028)
!9035 = !DILocation(line: 2247, column: 31, scope: !9028)
!9036 = !DILocation(line: 2247, column: 14, scope: !9028)
!9037 = !DILocation(line: 2247, column: 21, scope: !9028)
!9038 = !DILocation(line: 2248, column: 31, scope: !9028)
!9039 = !DILocation(line: 2248, column: 14, scope: !9028)
!9040 = !DILocation(line: 2248, column: 21, scope: !9028)
!9041 = !DILocation(line: 2249, column: 2, scope: !9028)
!9042 = !DILocation(line: 2250, column: 18, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 2250, column: 6)
!9044 = !DILocation(line: 2250, column: 6, scope: !9024)
!9045 = !DILocation(line: 2252, column: 13, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2251, column: 2)
!9047 = !DILocation(line: 2252, column: 11, scope: !9046)
!9048 = !DILocation(line: 2253, column: 13, scope: !9046)
!9049 = !DILocation(line: 2253, column: 11, scope: !9046)
!9050 = !DILocation(line: 2254, column: 13, scope: !9046)
!9051 = !DILocation(line: 2254, column: 11, scope: !9046)
!9052 = !DILocation(line: 2255, column: 13, scope: !9046)
!9053 = !DILocation(line: 2255, column: 11, scope: !9046)
!9054 = !DILocation(line: 2256, column: 2, scope: !9046)
!9055 = !DILocation(line: 2258, column: 1, scope: !8946)
!9056 = distinct !DISubprogram(name: "get_term_opt_idx", scope: !3, file: !3, line: 2376, type: !9057, isLocal: false, isDefinition: true, scopeLine: 2377, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{!1131, !1133}
!9059 = !{!9060, !9061}
!9060 = !DILocalVariable(name: "p", arg: 1, scope: !9056, file: !3, line: 2376, type: !1133)
!9061 = !DILocalVariable(name: "opt_idx", scope: !9056, file: !3, line: 2378, type: !1131)
!9062 = !DILocation(line: 2376, column: 27, scope: !9056)
!9063 = !DILocation(line: 2378, column: 9, scope: !9056)
!9064 = !DILocation(line: 2380, column: 40, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 2380, column: 5)
!9066 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2380, column: 5)
!9067 = !DILocation(line: 2380, column: 49, scope: !9065)
!9068 = !DILocation(line: 2380, column: 5, scope: !9066)
!9069 = !DILocation(line: 2381, column: 23, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 2381, column: 6)
!9071 = !DILocation(line: 2381, column: 27, scope: !9070)
!9072 = !DILocation(line: 2381, column: 6, scope: !9065)
!9073 = !DILocation(line: 2380, column: 65, scope: !9065)
!9074 = distinct !{!9074, !9068, !9075}
!9075 = !DILocation(line: 2382, column: 13, scope: !9066)
!9076 = !DILocation(line: 2384, column: 1, scope: !9056)
!9077 = distinct !DISubprogram(name: "set_term_option_alloced", scope: !3, file: !3, line: 2391, type: !9057, isLocal: false, isDefinition: true, scopeLine: 2392, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9078)
!9078 = !{!9079, !9080}
!9079 = !DILocalVariable(name: "p", arg: 1, scope: !9077, file: !3, line: 2391, type: !1133)
!9080 = !DILocalVariable(name: "opt_idx", scope: !9077, file: !3, line: 2393, type: !1131)
!9081 = !DILocation(line: 2391, column: 34, scope: !9077)
!9082 = !DILocation(line: 2376, column: 27, scope: !9056, inlinedAt: !9083)
!9083 = distinct !DILocation(line: 2393, column: 20, scope: !9077)
!9084 = !DILocation(line: 2378, column: 9, scope: !9056, inlinedAt: !9083)
!9085 = !DILocation(line: 2380, column: 40, scope: !9065, inlinedAt: !9083)
!9086 = !DILocation(line: 2380, column: 49, scope: !9065, inlinedAt: !9083)
!9087 = !DILocation(line: 2380, column: 5, scope: !9066, inlinedAt: !9083)
!9088 = !DILocation(line: 2381, column: 23, scope: !9070, inlinedAt: !9083)
!9089 = !DILocation(line: 2381, column: 27, scope: !9070, inlinedAt: !9083)
!9090 = !DILocation(line: 2381, column: 6, scope: !9065, inlinedAt: !9083)
!9091 = !DILocation(line: 2380, column: 65, scope: !9065, inlinedAt: !9083)
!9092 = !DILocation(line: 2393, column: 10, scope: !9077)
!9093 = !DILocation(line: 2395, column: 17, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2395, column: 9)
!9095 = !DILocation(line: 2395, column: 9, scope: !9077)
!9096 = !DILocation(line: 2396, column: 2, scope: !9094)
!9097 = !DILocation(line: 2396, column: 19, scope: !9094)
!9098 = !DILocation(line: 2396, column: 25, scope: !9094)
!9099 = !DILocation(line: 2397, column: 5, scope: !9077)
!9100 = distinct !DISubprogram(name: "was_set_insecurely", scope: !3, file: !3, line: 2407, type: !3912, isLocal: false, isDefinition: true, scopeLine: 2408, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9101)
!9101 = !{!9102, !9103, !9104, !9105}
!9102 = !DILocalVariable(name: "opt", arg: 1, scope: !9100, file: !3, line: 2407, type: !1124)
!9103 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !9100, file: !3, line: 2407, type: !1131)
!9104 = !DILocalVariable(name: "idx", scope: !9100, file: !3, line: 2409, type: !1131)
!9105 = !DILocalVariable(name: "flagp", scope: !9100, file: !3, line: 2410, type: !4415)
!9106 = !DILocation(line: 2407, column: 28, scope: !9100)
!9107 = !DILocation(line: 2407, column: 37, scope: !9100)
!9108 = !DILocation(line: 2409, column: 19, scope: !9100)
!9109 = !DILocation(line: 2409, column: 13, scope: !9100)
!9110 = !DILocation(line: 2412, column: 13, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 2412, column: 9)
!9112 = !DILocation(line: 2412, column: 9, scope: !9100)
!9113 = !DILocation(line: 2428, column: 19, scope: !4526, inlinedAt: !9114)
!9114 = distinct !DILocation(line: 2414, column: 10, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 2413, column: 5)
!9116 = !DILocation(line: 2428, column: 32, scope: !4526, inlinedAt: !9114)
!9117 = !DILocation(line: 2430, column: 19, scope: !4535, inlinedAt: !9114)
!9118 = !DILocation(line: 2430, column: 9, scope: !4526, inlinedAt: !9114)
!9119 = !DILocation(line: 2431, column: 32, scope: !4535, inlinedAt: !9114)
!9120 = !DILocation(line: 2431, column: 2, scope: !4535, inlinedAt: !9114)
!9121 = !DILocation(line: 2434, column: 27, scope: !4540, inlinedAt: !9114)
!9122 = !DILocation(line: 2434, column: 35, scope: !4540, inlinedAt: !9114)
!9123 = !DILocation(line: 2434, column: 19, scope: !4540, inlinedAt: !9114)
!9124 = !DILocation(line: 2438, column: 27, scope: !4540, inlinedAt: !9114)
!9125 = !DILocation(line: 2438, column: 35, scope: !4540, inlinedAt: !9114)
!9126 = !DILocation(line: 2438, column: 19, scope: !4540, inlinedAt: !9114)
!9127 = !DILocation(line: 2439, column: 27, scope: !4540, inlinedAt: !9114)
!9128 = !DILocation(line: 2439, column: 35, scope: !4540, inlinedAt: !9114)
!9129 = !DILocation(line: 2439, column: 19, scope: !4540, inlinedAt: !9114)
!9130 = !DILocation(line: 2442, column: 29, scope: !4540, inlinedAt: !9114)
!9131 = !DILocation(line: 2442, column: 37, scope: !4540, inlinedAt: !9114)
!9132 = !DILocation(line: 2442, column: 21, scope: !4540, inlinedAt: !9114)
!9133 = !DILocation(line: 2445, column: 28, scope: !4540, inlinedAt: !9114)
!9134 = !DILocation(line: 2445, column: 36, scope: !4540, inlinedAt: !9114)
!9135 = !DILocation(line: 2445, column: 20, scope: !4540, inlinedAt: !9114)
!9136 = !DILocation(line: 2447, column: 27, scope: !4540, inlinedAt: !9114)
!9137 = !DILocation(line: 2447, column: 35, scope: !4540, inlinedAt: !9114)
!9138 = !DILocation(line: 2447, column: 19, scope: !4540, inlinedAt: !9114)
!9139 = !DILocation(line: 2449, column: 28, scope: !4540, inlinedAt: !9114)
!9140 = !DILocation(line: 2449, column: 36, scope: !4540, inlinedAt: !9114)
!9141 = !DILocation(line: 2449, column: 20, scope: !4540, inlinedAt: !9114)
!9142 = !DILocation(line: 2455, column: 30, scope: !4526, inlinedAt: !9114)
!9143 = !DILocation(line: 2455, column: 5, scope: !4526, inlinedAt: !9114)
!9144 = !DILocation(line: 2410, column: 14, scope: !9100)
!9145 = !DILocation(line: 2415, column: 10, scope: !9115)
!9146 = !DILocation(line: 2415, column: 31, scope: !9115)
!9147 = !DILocation(line: 2415, column: 2, scope: !9115)
!9148 = !DILocation(line: 2417, column: 5, scope: !9100)
!9149 = !DILocation(line: 2418, column: 5, scope: !9100)
!9150 = !DILocation(line: 2419, column: 1, scope: !9100)
!9151 = !DILocation(line: 2465, column: 20, scope: !6743)
!9152 = !DILocation(line: 2466, column: 20, scope: !6743)
!9153 = !DILocation(line: 2467, column: 1, scope: !6743)
!9154 = distinct !DISubprogram(name: "valid_name", scope: !3, file: !3, line: 2475, type: !9155, isLocal: false, isDefinition: true, scopeLine: 2476, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{!1131, !1124, !1127}
!9157 = !{!9158, !9159, !9160}
!9158 = !DILocalVariable(name: "val", arg: 1, scope: !9154, file: !3, line: 2475, type: !1124)
!9159 = !DILocalVariable(name: "allowed", arg: 2, scope: !9154, file: !3, line: 2475, type: !1127)
!9160 = !DILocalVariable(name: "s", scope: !9154, file: !3, line: 2477, type: !1124)
!9161 = !DILocation(line: 2475, column: 20, scope: !9154)
!9162 = !DILocation(line: 2475, column: 31, scope: !9154)
!9163 = !DILocation(line: 2477, column: 13, scope: !9154)
!9164 = !DILocation(line: 2479, column: 19, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 2479, column: 5)
!9166 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 2479, column: 5)
!9167 = !DILocation(line: 2479, column: 22, scope: !9165)
!9168 = !DILocation(line: 2479, column: 5, scope: !9166)
!9169 = !DILocation(line: 2480, column: 7, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 2480, column: 6)
!9171 = !DILocation(line: 2480, column: 28, scope: !9170)
!9172 = !DILocation(line: 2480, column: 62, scope: !9170)
!9173 = !DILocation(line: 2480, column: 6, scope: !9165)
!9174 = !DILocation(line: 2479, column: 30, scope: !9165)
!9175 = distinct !{!9175, !9168, !9176}
!9176 = !DILocation(line: 2481, column: 13, scope: !9166)
!9177 = !DILocation(line: 2483, column: 1, scope: !9154)
!9178 = !DILocation(line: 2491, column: 25, scope: !4567)
!9179 = !DILocation(line: 2491, column: 38, scope: !4567)
!9180 = !DILocation(line: 2491, column: 56, scope: !4567)
!9181 = !DILocation(line: 2493, column: 28, scope: !4567)
!9182 = !DILocation(line: 2493, column: 56, scope: !4567)
!9183 = !DILocation(line: 2494, column: 23, scope: !4567)
!9184 = !DILocation(line: 2494, column: 40, scope: !4567)
!9185 = !DILocation(line: 2494, column: 10, scope: !4567)
!9186 = !DILocation(line: 2495, column: 29, scope: !4567)
!9187 = !DILocation(line: 2495, column: 12, scope: !4567)
!9188 = !DILocation(line: 2498, column: 21, scope: !4585)
!9189 = !DILocation(line: 2498, column: 9, scope: !4567)
!9190 = !DILocation(line: 2499, column: 28, scope: !4585)
!9191 = !DILocation(line: 2499, column: 25, scope: !4585)
!9192 = !DILocation(line: 2499, column: 2, scope: !4585)
!9193 = !DILocation(line: 2503, column: 28, scope: !4593)
!9194 = !DILocation(line: 2503, column: 14, scope: !4593)
!9195 = !DILocation(line: 2503, column: 52, scope: !4593)
!9196 = !DILocation(line: 2503, column: 71, scope: !4593)
!9197 = !DILocation(line: 2504, column: 32, scope: !4593)
!9198 = !DILocation(line: 2504, column: 2, scope: !4593)
!9199 = !DILocation(line: 2505, column: 28, scope: !4600)
!9200 = !DILocation(line: 2505, column: 14, scope: !4600)
!9201 = !DILocation(line: 2507, column: 12, scope: !4603)
!9202 = !DILocation(line: 2507, column: 6, scope: !4604)
!9203 = !DILocation(line: 2508, column: 6, scope: !4603)
!9204 = !DILocation(line: 2508, column: 35, scope: !4603)
!9205 = !DILocation(line: 2508, column: 48, scope: !4603)
!9206 = !DILocation(line: 2509, column: 17, scope: !4610)
!9207 = !DILocation(line: 2509, column: 11, scope: !4603)
!9208 = !DILocation(line: 2510, column: 6, scope: !4610)
!9209 = !DILocation(line: 2510, column: 35, scope: !4610)
!9210 = !DILocation(line: 2510, column: 48, scope: !4610)
!9211 = !DILocation(line: 2512, column: 1, scope: !4567)
!9212 = distinct !DISubprogram(name: "set_term_option_sctx_idx", scope: !3, file: !3, line: 2520, type: !9213, isLocal: false, isDefinition: true, scopeLine: 2521, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9215)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{null, !1127, !1131}
!9215 = !{!9216, !9217, !9218, !9219}
!9216 = !DILocalVariable(name: "name", arg: 1, scope: !9212, file: !3, line: 2520, type: !1127)
!9217 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !9212, file: !3, line: 2520, type: !1131)
!9218 = !DILocalVariable(name: "buf", scope: !9212, file: !3, line: 2522, type: !3049)
!9219 = !DILocalVariable(name: "idx", scope: !9212, file: !3, line: 2523, type: !1131)
!9220 = !DILocation(line: 2520, column: 32, scope: !9212)
!9221 = !DILocation(line: 2520, column: 42, scope: !9212)
!9222 = !DILocation(line: 2522, column: 5, scope: !9212)
!9223 = !DILocation(line: 2522, column: 13, scope: !9212)
!9224 = !DILocation(line: 2525, column: 14, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 2525, column: 9)
!9226 = !DILocation(line: 2525, column: 9, scope: !9212)
!9227 = !DILocation(line: 2529, column: 9, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 2528, column: 5)
!9229 = !DILocation(line: 2530, column: 2, scope: !9228)
!9230 = !DILocation(line: 2530, column: 9, scope: !9228)
!9231 = !DILocation(line: 2531, column: 11, scope: !9228)
!9232 = !DILocation(line: 2531, column: 2, scope: !9228)
!9233 = !DILocation(line: 2531, column: 9, scope: !9228)
!9234 = !DILocation(line: 2532, column: 11, scope: !9228)
!9235 = !DILocation(line: 2532, column: 2, scope: !9228)
!9236 = !DILocation(line: 2532, column: 9, scope: !9228)
!9237 = !DILocation(line: 2533, column: 2, scope: !9228)
!9238 = !DILocation(line: 2533, column: 9, scope: !9228)
!9239 = !DILocation(line: 2534, column: 8, scope: !9228)
!9240 = !DILocation(line: 2523, column: 13, scope: !9212)
!9241 = !DILocation(line: 2536, column: 13, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 2536, column: 9)
!9243 = !DILocation(line: 2536, column: 9, scope: !9212)
!9244 = !DILocation(line: 2491, column: 25, scope: !4567, inlinedAt: !9245)
!9245 = distinct !DILocation(line: 2537, column: 2, scope: !9242)
!9246 = !DILocation(line: 2491, column: 56, scope: !4567, inlinedAt: !9245)
!9247 = !DILocation(line: 2491, column: 38, scope: !4567, inlinedAt: !9245)
!9248 = !DILocation(line: 2494, column: 23, scope: !4567, inlinedAt: !9245)
!9249 = !DILocation(line: 2495, column: 12, scope: !4567, inlinedAt: !9245)
!9250 = !DILocation(line: 2499, column: 28, scope: !4585, inlinedAt: !9245)
!9251 = !DILocation(line: 2499, column: 25, scope: !4585, inlinedAt: !9245)
!9252 = !DILocation(line: 2504, column: 32, scope: !4593, inlinedAt: !9245)
!9253 = !DILocation(line: 2537, column: 2, scope: !9242)
!9254 = !DILocation(line: 2538, column: 1, scope: !9212)
!9255 = distinct !DISubprogram(name: "check_redraw", scope: !3, file: !3, line: 3749, type: !9256, isLocal: false, isDefinition: true, scopeLine: 3750, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9258)
!9256 = !DISubroutineType(types: !9257)
!9257 = !{null, !1309}
!9258 = !{!9259, !9260, !9261}
!9259 = !DILocalVariable(name: "flags", arg: 1, scope: !9255, file: !3, line: 3749, type: !1309)
!9260 = !DILocalVariable(name: "doclear", scope: !9255, file: !3, line: 3752, type: !1131)
!9261 = !DILocalVariable(name: "all", scope: !9255, file: !3, line: 3753, type: !1131)
!9262 = !DILocation(line: 3749, column: 21, scope: !9255)
!9263 = !DILocation(line: 3752, column: 27, scope: !9255)
!9264 = !DILocation(line: 3752, column: 37, scope: !9255)
!9265 = !DILocation(line: 3753, column: 24, scope: !9255)
!9266 = !DILocation(line: 3753, column: 34, scope: !9255)
!9267 = !DILocation(line: 3755, column: 16, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3755, column: 9)
!9269 = !DILocation(line: 3755, column: 27, scope: !9268)
!9270 = !DILocation(line: 3756, column: 2, scope: !9268)
!9271 = !DILocation(line: 3758, column: 16, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3758, column: 9)
!9273 = !DILocation(line: 3758, column: 26, scope: !9272)
!9274 = !DILocation(line: 3758, column: 36, scope: !9272)
!9275 = !DILocation(line: 3759, column: 2, scope: !9272)
!9276 = !DILocation(line: 3760, column: 9, scope: !9255)
!9277 = !DILocation(line: 3761, column: 2, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3760, column: 9)
!9279 = !DILocation(line: 3762, column: 15, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3762, column: 9)
!9281 = !DILocation(line: 3762, column: 9, scope: !9255)
!9282 = !DILocation(line: 3763, column: 2, scope: !9280)
!9283 = !DILocation(line: 3764, column: 9, scope: !9255)
!9284 = !DILocation(line: 3765, column: 2, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3764, column: 9)
!9286 = !DILocation(line: 3766, column: 14, scope: !9285)
!9287 = !DILocation(line: 3767, column: 2, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 3766, column: 14)
!9289 = !DILocation(line: 3768, column: 1, scope: !9255)
!9290 = distinct !DISubprogram(name: "get_option_value", scope: !3, file: !3, line: 3853, type: !9291, isLocal: false, isDefinition: true, scopeLine: 3858, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9294)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!9293, !1124, !1143, !1133, !1131}
!9293 = !DIDerivedType(tag: DW_TAG_typedef, name: "getoption_T", file: !711, line: 72, baseType: !862)
!9294 = !{!9295, !9296, !9297, !9298, !9299, !9300, !9301, !9304, !9307}
!9295 = !DILocalVariable(name: "name", arg: 1, scope: !9290, file: !3, line: 3854, type: !1124)
!9296 = !DILocalVariable(name: "numval", arg: 2, scope: !9290, file: !3, line: 3855, type: !1143)
!9297 = !DILocalVariable(name: "stringval", arg: 3, scope: !9290, file: !3, line: 3856, type: !1133)
!9298 = !DILocalVariable(name: "opt_flags", arg: 4, scope: !9290, file: !3, line: 3857, type: !1131)
!9299 = !DILocalVariable(name: "opt_idx", scope: !9290, file: !3, line: 3859, type: !1131)
!9300 = !DILocalVariable(name: "varp", scope: !9290, file: !3, line: 3860, type: !1124)
!9301 = !DILocalVariable(name: "key", scope: !9302, file: !3, line: 3865, type: !1131)
!9302 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 3864, column: 5)
!9303 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3863, column: 9)
!9304 = !DILocalVariable(name: "key_name", scope: !9305, file: !3, line: 3870, type: !3884)
!9305 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 3869, column: 2)
!9306 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3867, column: 6)
!9307 = !DILocalVariable(name: "p", scope: !9305, file: !3, line: 3871, type: !1124)
!9308 = !DILocation(line: 3854, column: 13, scope: !9290)
!9309 = !DILocation(line: 3855, column: 11, scope: !9290)
!9310 = !DILocation(line: 3856, column: 14, scope: !9290)
!9311 = !DILocation(line: 3857, column: 10, scope: !9290)
!9312 = !DILocation(line: 3862, column: 15, scope: !9290)
!9313 = !DILocation(line: 3859, column: 10, scope: !9290)
!9314 = !DILocation(line: 3863, column: 17, scope: !9303)
!9315 = !DILocation(line: 3863, column: 9, scope: !9290)
!9316 = !DILocation(line: 3867, column: 6, scope: !9306)
!9317 = !DILocation(line: 3867, column: 19, scope: !9306)
!9318 = !DILocation(line: 3867, column: 24, scope: !9306)
!9319 = !DILocation(line: 3867, column: 27, scope: !9306)
!9320 = !DILocation(line: 3867, column: 35, scope: !9306)
!9321 = !DILocation(line: 3867, column: 42, scope: !9306)
!9322 = !DILocation(line: 3867, column: 45, scope: !9306)
!9323 = !DILocation(line: 3867, column: 53, scope: !9306)
!9324 = !DILocation(line: 3868, column: 7, scope: !9306)
!9325 = !DILocation(line: 4358, column: 25, scope: !3911, inlinedAt: !9326)
!9326 = distinct !DILocation(line: 3868, column: 17, scope: !9306)
!9327 = !DILocation(line: 4358, column: 38, scope: !3911, inlinedAt: !9326)
!9328 = !DILocation(line: 4360, column: 10, scope: !3911, inlinedAt: !9326)
!9329 = !DILocation(line: 4362, column: 13, scope: !3911, inlinedAt: !9326)
!9330 = !DILocation(line: 4368, column: 43, scope: !3925, inlinedAt: !9326)
!9331 = !DILocation(line: 4368, column: 50, scope: !3925, inlinedAt: !9326)
!9332 = !DILocation(line: 4368, column: 53, scope: !3925, inlinedAt: !9326)
!9333 = !DILocation(line: 4368, column: 9, scope: !3911, inlinedAt: !9326)
!9334 = !DILocation(line: 4369, column: 8, scope: !3925, inlinedAt: !9326)
!9335 = !DILocation(line: 3868, column: 47, scope: !9306)
!9336 = !DILocation(line: 3867, column: 6, scope: !9302)
!9337 = !DILocation(line: 3870, column: 6, scope: !9305)
!9338 = !DILocation(line: 3870, column: 13, scope: !9305)
!9339 = !DILocation(line: 3876, column: 15, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 3875, column: 6)
!9341 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 3874, column: 10)
!9342 = !DILocation(line: 3877, column: 3, scope: !9340)
!9343 = !DILocation(line: 3877, column: 15, scope: !9340)
!9344 = !DILocation(line: 3884, column: 10, scope: !9305)
!9345 = !DILocation(line: 3871, column: 14, scope: !9305)
!9346 = !DILocation(line: 3885, column: 12, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 3885, column: 10)
!9348 = !DILocation(line: 3885, column: 10, scope: !9305)
!9349 = !DILocation(line: 3887, column: 17, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 3887, column: 7)
!9351 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 3886, column: 6)
!9352 = !DILocation(line: 3887, column: 7, scope: !9351)
!9353 = !DILocation(line: 3888, column: 20, scope: !9350)
!9354 = !DILocation(line: 3888, column: 18, scope: !9350)
!9355 = !DILocation(line: 3891, column: 2, scope: !9306)
!9356 = !DILocation(line: 3895, column: 29, scope: !9290)
!9357 = !DILocation(line: 3895, column: 12, scope: !9290)
!9358 = !DILocation(line: 3860, column: 13, scope: !9290)
!9359 = !DILocation(line: 3897, column: 26, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3897, column: 9)
!9361 = !DILocation(line: 3897, column: 32, scope: !9360)
!9362 = !DILocation(line: 3897, column: 9, scope: !9290)
!9363 = !DILocation(line: 3899, column: 6, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 3898, column: 5)
!9365 = !DILocation(line: 3901, column: 16, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 3901, column: 6)
!9367 = !DILocation(line: 3901, column: 6, scope: !9364)
!9368 = !DILocation(line: 3905, column: 10, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 3905, column: 10)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 3902, column: 2)
!9371 = !DILocation(line: 3905, column: 30, scope: !9369)
!9372 = !DILocation(line: 3905, column: 38, scope: !9369)
!9373 = !DILocation(line: 3905, column: 26, scope: !9369)
!9374 = !DILocation(line: 3906, column: 7, scope: !9369)
!9375 = !DILocation(line: 3906, column: 10, scope: !9369)
!9376 = !DILocation(line: 3906, column: 30, scope: !9369)
!9377 = !DILocation(line: 3905, column: 10, scope: !9370)
!9378 = !DILocation(line: 3907, column: 16, scope: !9369)
!9379 = !DILocation(line: 3907, column: 14, scope: !9369)
!9380 = !DILocation(line: 3907, column: 3, scope: !9369)
!9381 = !DILocation(line: 3910, column: 16, scope: !9369)
!9382 = !DILocation(line: 3910, column: 14, scope: !9369)
!9383 = !DILocation(line: 3915, column: 9, scope: !9290)
!9384 = !DILocation(line: 3916, column: 9, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3915, column: 9)
!9386 = !DILocation(line: 3916, column: 2, scope: !9385)
!9387 = !DILocation(line: 3918, column: 9, scope: !9290)
!9388 = !DILocation(line: 3919, column: 12, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3918, column: 9)
!9390 = !DILocation(line: 3919, column: 2, scope: !9389)
!9391 = !DILocation(line: 3924, column: 6, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 3924, column: 6)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3921, column: 5)
!9394 = !DILocation(line: 3924, column: 22, scope: !9392)
!9395 = !DILocation(line: 3924, column: 30, scope: !9392)
!9396 = !DILocation(line: 3924, column: 18, scope: !9392)
!9397 = !DILocation(line: 3924, column: 6, scope: !9393)
!9398 = !DILocation(line: 3925, column: 16, scope: !9392)
!9399 = !DILocation(line: 3925, column: 6, scope: !9392)
!9400 = !DILocation(line: 3927, column: 23, scope: !9392)
!9401 = !DILocation(line: 3927, column: 16, scope: !9392)
!9402 = !DILocation(line: 3929, column: 30, scope: !9290)
!9403 = !DILocation(line: 3929, column: 12, scope: !9290)
!9404 = !DILocation(line: 3929, column: 5, scope: !9290)
!9405 = !DILocation(line: 3930, column: 1, scope: !9290)
!9406 = distinct !DISubprogram(name: "get_option_flags", scope: !3, file: !3, line: 4141, type: !9407, isLocal: false, isDefinition: true, scopeLine: 4142, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9409)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{!1309, !1131}
!9409 = !{!9410}
!9410 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9406, file: !3, line: 4141, type: !1131)
!9411 = !DILocation(line: 4141, column: 22, scope: !9406)
!9412 = !DILocation(line: 4143, column: 12, scope: !9406)
!9413 = !DILocation(line: 4143, column: 29, scope: !9406)
!9414 = !DILocation(line: 4143, column: 5, scope: !9406)
!9415 = distinct !DISubprogram(name: "set_option_flag", scope: !3, file: !3, line: 4150, type: !9416, isLocal: false, isDefinition: true, scopeLine: 4151, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9418)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{null, !1131, !1309}
!9418 = !{!9419, !9420}
!9419 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9415, file: !3, line: 4150, type: !1131)
!9420 = !DILocalVariable(name: "flag", arg: 2, scope: !9415, file: !3, line: 4150, type: !1309)
!9421 = !DILocation(line: 4150, column: 21, scope: !9415)
!9422 = !DILocation(line: 4150, column: 37, scope: !9415)
!9423 = !DILocation(line: 4152, column: 5, scope: !9415)
!9424 = !DILocation(line: 4152, column: 22, scope: !9415)
!9425 = !DILocation(line: 4152, column: 28, scope: !9415)
!9426 = !DILocation(line: 4153, column: 1, scope: !9415)
!9427 = distinct !DISubprogram(name: "clear_option_flag", scope: !3, file: !3, line: 4159, type: !9416, isLocal: false, isDefinition: true, scopeLine: 4160, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9428)
!9428 = !{!9429, !9430}
!9429 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9427, file: !3, line: 4159, type: !1131)
!9430 = !DILocalVariable(name: "flag", arg: 2, scope: !9427, file: !3, line: 4159, type: !1309)
!9431 = !DILocation(line: 4159, column: 23, scope: !9427)
!9432 = !DILocation(line: 4159, column: 39, scope: !9427)
!9433 = !DILocation(line: 4161, column: 31, scope: !9427)
!9434 = !DILocation(line: 4161, column: 5, scope: !9427)
!9435 = !DILocation(line: 4161, column: 22, scope: !9427)
!9436 = !DILocation(line: 4161, column: 28, scope: !9427)
!9437 = !DILocation(line: 4162, column: 1, scope: !9427)
!9438 = distinct !DISubprogram(name: "is_global_option", scope: !3, file: !3, line: 4168, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4169, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9439)
!9439 = !{!9440}
!9440 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9438, file: !3, line: 4168, type: !1131)
!9441 = !DILocation(line: 4168, column: 22, scope: !9438)
!9442 = !DILocation(line: 4170, column: 12, scope: !9438)
!9443 = !DILocation(line: 4170, column: 29, scope: !9438)
!9444 = !DILocation(line: 4170, column: 35, scope: !9438)
!9445 = !DILocation(line: 4170, column: 5, scope: !9438)
!9446 = distinct !DISubprogram(name: "is_global_local_option", scope: !3, file: !3, line: 4178, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4179, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9447)
!9447 = !{!9448}
!9448 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9446, file: !3, line: 4178, type: !1131)
!9449 = !DILocation(line: 4178, column: 28, scope: !9446)
!9450 = !DILocation(line: 4180, column: 12, scope: !9446)
!9451 = !DILocation(line: 4180, column: 29, scope: !9446)
!9452 = !DILocation(line: 4180, column: 35, scope: !9446)
!9453 = !DILocation(line: 4180, column: 5, scope: !9446)
!9454 = distinct !DISubprogram(name: "is_window_local_option", scope: !3, file: !3, line: 4187, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4188, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9455)
!9455 = !{!9456}
!9456 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9454, file: !3, line: 4187, type: !1131)
!9457 = !DILocation(line: 4187, column: 28, scope: !9454)
!9458 = !DILocation(line: 4189, column: 12, scope: !9454)
!9459 = !DILocation(line: 4189, column: 29, scope: !9454)
!9460 = !DILocation(line: 4189, column: 33, scope: !9454)
!9461 = !DILocation(line: 4189, column: 5, scope: !9454)
!9462 = distinct !DISubprogram(name: "is_hidden_option", scope: !3, file: !3, line: 4196, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4197, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9463)
!9463 = !{!9464}
!9464 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9462, file: !3, line: 4196, type: !1131)
!9465 = !DILocation(line: 4196, column: 22, scope: !9462)
!9466 = !DILocation(line: 4198, column: 12, scope: !9462)
!9467 = !DILocation(line: 4198, column: 29, scope: !9462)
!9468 = !DILocation(line: 4198, column: 33, scope: !9462)
!9469 = !DILocation(line: 4198, column: 5, scope: !9462)
!9470 = distinct !DISubprogram(name: "is_crypt_key_option", scope: !3, file: !3, line: 4206, type: !3478, isLocal: false, isDefinition: true, scopeLine: 4207, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9471)
!9471 = !{!9472}
!9472 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !9470, file: !3, line: 4206, type: !1131)
!9473 = !DILocation(line: 4206, column: 25, scope: !9470)
!9474 = !DILocation(line: 4208, column: 12, scope: !9470)
!9475 = !DILocation(line: 4208, column: 29, scope: !9470)
!9476 = !DILocation(line: 4208, column: 35, scope: !9470)
!9477 = !DILocation(line: 4208, column: 5, scope: !9470)
!9478 = distinct !DISubprogram(name: "get_term_code", scope: !3, file: !3, line: 4312, type: !9479, isLocal: false, isDefinition: true, scopeLine: 4313, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9481)
!9479 = !DISubroutineType(types: !9480)
!9480 = !{!1124, !1124}
!9481 = !{!9482, !9483, !9484}
!9482 = !DILocalVariable(name: "tname", arg: 1, scope: !9478, file: !3, line: 4312, type: !1124)
!9483 = !DILocalVariable(name: "opt_idx", scope: !9478, file: !3, line: 4314, type: !1131)
!9484 = !DILocalVariable(name: "varp", scope: !9478, file: !3, line: 4315, type: !1124)
!9485 = !DILocation(line: 4312, column: 23, scope: !9478)
!9486 = !DILocation(line: 4317, column: 9, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 4317, column: 9)
!9488 = !DILocation(line: 4317, column: 18, scope: !9487)
!9489 = !DILocation(line: 4317, column: 25, scope: !9487)
!9490 = !DILocation(line: 4317, column: 28, scope: !9487)
!9491 = !DILocation(line: 4317, column: 37, scope: !9487)
!9492 = !DILocation(line: 4317, column: 44, scope: !9487)
!9493 = !DILocation(line: 4318, column: 6, scope: !9487)
!9494 = !DILocation(line: 4318, column: 15, scope: !9487)
!9495 = !DILocation(line: 4318, column: 22, scope: !9487)
!9496 = !DILocation(line: 4318, column: 25, scope: !9487)
!9497 = !DILocation(line: 4318, column: 34, scope: !9487)
!9498 = !DILocation(line: 4317, column: 9, scope: !9478)
!9499 = !DILocation(line: 4320, column: 20, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 4320, column: 9)
!9501 = !DILocation(line: 4314, column: 13, scope: !9478)
!9502 = !DILocation(line: 4320, column: 39, scope: !9500)
!9503 = !DILocation(line: 4320, column: 9, scope: !9478)
!9504 = !DILocation(line: 4322, column: 20, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 4321, column: 5)
!9506 = !DILocation(line: 4322, column: 9, scope: !9505)
!9507 = !DILocation(line: 4315, column: 14, scope: !9478)
!9508 = !DILocation(line: 4323, column: 11, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 4323, column: 6)
!9510 = !DILocation(line: 4323, column: 6, scope: !9505)
!9511 = !DILocation(line: 4324, column: 13, scope: !9509)
!9512 = !DILocation(line: 4324, column: 6, scope: !9509)
!9513 = !DILocation(line: 4327, column: 12, scope: !9478)
!9514 = !DILocation(line: 4327, column: 5, scope: !9478)
!9515 = !DILocation(line: 4328, column: 1, scope: !9478)
!9516 = distinct !DISubprogram(name: "get_highlight_default", scope: !3, file: !3, line: 4331, type: !9517, isLocal: false, isDefinition: true, scopeLine: 4332, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9519)
!9517 = !DISubroutineType(types: !9518)
!9518 = !{!1124}
!9519 = !{!9520}
!9520 = !DILocalVariable(name: "i", scope: !9516, file: !3, line: 4333, type: !1131)
!9521 = !DILocation(line: 4335, column: 9, scope: !9516)
!9522 = !DILocation(line: 4333, column: 9, scope: !9516)
!9523 = !DILocation(line: 4336, column: 11, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 4336, column: 9)
!9525 = !DILocation(line: 4336, column: 9, scope: !9516)
!9526 = !DILocation(line: 4337, column: 9, scope: !9524)
!9527 = !DILocation(line: 4337, column: 2, scope: !9524)
!9528 = !DILocation(line: 4339, column: 1, scope: !9516)
!9529 = distinct !DISubprogram(name: "get_encoding_default", scope: !3, file: !3, line: 4342, type: !9517, isLocal: false, isDefinition: true, scopeLine: 4343, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9530)
!9530 = !{!9531}
!9531 = !DILocalVariable(name: "i", scope: !9529, file: !3, line: 4344, type: !1131)
!9532 = !DILocation(line: 4346, column: 9, scope: !9529)
!9533 = !DILocation(line: 4344, column: 9, scope: !9529)
!9534 = !DILocation(line: 4347, column: 11, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 4347, column: 9)
!9536 = !DILocation(line: 4347, column: 9, scope: !9529)
!9537 = !DILocation(line: 4348, column: 9, scope: !9535)
!9538 = !DILocation(line: 4348, column: 2, scope: !9535)
!9539 = !DILocation(line: 4350, column: 1, scope: !9529)
!9540 = distinct !DISubprogram(name: "makeset", scope: !3, file: !3, line: 4581, type: !9541, isLocal: false, isDefinition: true, scopeLine: 4582, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9590)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!1131, !9543, !1131, !1131}
!9543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9544, size: 64)
!9544 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !9545, line: 7, baseType: !9546)
!9545 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/sahil/vim/src")
!9546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !9547, line: 49, size: 1728, elements: !9548)
!9547 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "/home/sahil/vim/src")
!9548 = !{!9549, !9550, !9551, !9552, !9553, !9554, !9555, !9556, !9557, !9558, !9559, !9560, !9561, !9564, !9566, !9567, !9568, !9569, !9570, !9571, !9573, !9576, !9578, !9581, !9584, !9585, !9586, !9587, !9588}
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !9546, file: !9547, line: 51, baseType: !1131, size: 32)
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !9546, file: !9547, line: 54, baseType: !1127, size: 64, offset: 64)
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !9546, file: !9547, line: 55, baseType: !1127, size: 64, offset: 128)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !9546, file: !9547, line: 56, baseType: !1127, size: 64, offset: 192)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !9546, file: !9547, line: 57, baseType: !1127, size: 64, offset: 256)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !9546, file: !9547, line: 58, baseType: !1127, size: 64, offset: 320)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !9546, file: !9547, line: 59, baseType: !1127, size: 64, offset: 384)
!9556 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !9546, file: !9547, line: 60, baseType: !1127, size: 64, offset: 448)
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !9546, file: !9547, line: 61, baseType: !1127, size: 64, offset: 512)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !9546, file: !9547, line: 64, baseType: !1127, size: 64, offset: 576)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !9546, file: !9547, line: 65, baseType: !1127, size: 64, offset: 640)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !9546, file: !9547, line: 66, baseType: !1127, size: 64, offset: 704)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !9546, file: !9547, line: 68, baseType: !9562, size: 64, offset: 768)
!9562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9563, size: 64)
!9563 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !9547, line: 36, flags: DIFlagFwdDecl)
!9564 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !9546, file: !9547, line: 70, baseType: !9565, size: 64, offset: 832)
!9565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9546, size: 64)
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !9546, file: !9547, line: 72, baseType: !1131, size: 32, offset: 896)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !9546, file: !9547, line: 73, baseType: !1131, size: 32, offset: 928)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !9546, file: !9547, line: 74, baseType: !2329, size: 64, offset: 960)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !9546, file: !9547, line: 77, baseType: !1139, size: 16, offset: 1024)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !9546, file: !9547, line: 78, baseType: !1197, size: 8, offset: 1040)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !9546, file: !9547, line: 79, baseType: !9572, size: 8, offset: 1048)
!9572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 8, elements: !2206)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !9546, file: !9547, line: 81, baseType: !9574, size: 64, offset: 1088)
!9574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9575, size: 64)
!9575 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !9547, line: 43, baseType: null)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !9546, file: !9547, line: 89, baseType: !9577, size: 64, offset: 1152)
!9577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1342, line: 153, baseType: !1130)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !9546, file: !9547, line: 91, baseType: !9579, size: 64, offset: 1216)
!9579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9580, size: 64)
!9580 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !9547, line: 37, flags: DIFlagFwdDecl)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !9546, file: !9547, line: 92, baseType: !9582, size: 64, offset: 1280)
!9582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9583, size: 64)
!9583 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !9547, line: 38, flags: DIFlagFwdDecl)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !9546, file: !9547, line: 93, baseType: !9565, size: 64, offset: 1344)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !9546, file: !9547, line: 94, baseType: !1129, size: 64, offset: 1408)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !9546, file: !9547, line: 95, baseType: !1136, size: 64, offset: 1472)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !9546, file: !9547, line: 96, baseType: !1131, size: 32, offset: 1536)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !9546, file: !9547, line: 98, baseType: !9589, size: 160, offset: 1568)
!9589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 160, elements: !2284)
!9590 = !{!9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601}
!9591 = !DILocalVariable(name: "fd", arg: 1, scope: !9540, file: !3, line: 4581, type: !9543)
!9592 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !9540, file: !3, line: 4581, type: !1131)
!9593 = !DILocalVariable(name: "local_only", arg: 3, scope: !9540, file: !3, line: 4581, type: !1131)
!9594 = !DILocalVariable(name: "p", scope: !9540, file: !3, line: 4583, type: !2848)
!9595 = !DILocalVariable(name: "varp", scope: !9540, file: !3, line: 4584, type: !1124)
!9596 = !DILocalVariable(name: "varp_fresh", scope: !9540, file: !3, line: 4585, type: !1124)
!9597 = !DILocalVariable(name: "varp_local", scope: !9540, file: !3, line: 4586, type: !1124)
!9598 = !DILocalVariable(name: "cmd", scope: !9540, file: !3, line: 4587, type: !1127)
!9599 = !DILocalVariable(name: "round", scope: !9540, file: !3, line: 4588, type: !1131)
!9600 = !DILocalVariable(name: "pri", scope: !9540, file: !3, line: 4589, type: !1131)
!9601 = !DILocalVariable(name: "do_endif", scope: !9602, file: !3, line: 4666, type: !1131)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4665, column: 3)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 4659, column: 12)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 4654, column: 7)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 4648, column: 6)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 4647, column: 6)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4647, column: 6)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 4603, column: 2)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 4600, column: 6)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 4599, column: 7)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 4599, column: 7)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 4598, column: 5)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 4597, column: 5)
!9614 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 4597, column: 5)
!9615 = !DILocation(line: 4581, column: 15, scope: !9540)
!9616 = !DILocation(line: 4581, column: 23, scope: !9540)
!9617 = !DILocation(line: 4581, column: 38, scope: !9540)
!9618 = !DILocation(line: 4586, column: 14, scope: !9540)
!9619 = !DILocation(line: 4589, column: 11, scope: !9540)
!9620 = !DILocation(line: 4597, column: 5, scope: !9614)
!9621 = !DILocation(line: 4583, column: 23, scope: !9540)
!9622 = !DILocation(line: 4599, column: 12, scope: !9611)
!9623 = !DILocation(line: 4954, column: 32, scope: !3485, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 4599, column: 30, scope: !9610)
!9625 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !9624)
!9626 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !9624)
!9627 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !9624)
!9628 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !9624)
!9629 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !9624)
!9630 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !9624)
!9631 = !DILocation(line: 4599, column: 7, scope: !9611)
!9632 = !DILocation(line: 4600, column: 11, scope: !9609)
!9633 = !DILocation(line: 4600, column: 17, scope: !9609)
!9634 = !DILocation(line: 4601, column: 3, scope: !9609)
!9635 = !DILocation(line: 4954, column: 32, scope: !3485, inlinedAt: !9636)
!9636 = distinct !DILocation(line: 4601, column: 7, scope: !9609)
!9637 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !9636)
!9638 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !9636)
!9639 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !9636)
!9640 = !DILocation(line: 4602, column: 3, scope: !9609)
!9641 = !DILocation(line: 4602, column: 18, scope: !9609)
!9642 = !DILocation(line: 4600, column: 6, scope: !9610)
!9643 = !DILocation(line: 4605, column: 13, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4605, column: 10)
!9645 = !DILocation(line: 4605, column: 30, scope: !9644)
!9646 = !DILocation(line: 4610, column: 35, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4610, column: 10)
!9648 = !DILocation(line: 4610, column: 48, scope: !9647)
!9649 = !DILocation(line: 4610, column: 10, scope: !9608)
!9650 = !DILocation(line: 4614, column: 13, scope: !9608)
!9651 = !DILocation(line: 4584, column: 14, scope: !9540)
!9652 = !DILocation(line: 4503, column: 34, scope: !4230, inlinedAt: !9653)
!9653 = distinct !DILocation(line: 4615, column: 38, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4615, column: 10)
!9655 = !DILocation(line: 4503, column: 45, scope: !4230, inlinedAt: !9653)
!9656 = !DILocation(line: 4503, column: 55, scope: !4230, inlinedAt: !9653)
!9657 = !DILocation(line: 4507, column: 14, scope: !4229, inlinedAt: !9653)
!9658 = !DILocation(line: 4507, column: 9, scope: !4230, inlinedAt: !9653)
!9659 = !DILocation(line: 4615, column: 62, scope: !9654)
!9660 = !DILocation(line: 4509, column: 16, scope: !4230, inlinedAt: !9653)
!9661 = !DILocation(line: 4509, column: 22, scope: !4230, inlinedAt: !9653)
!9662 = !DILocation(line: 4509, column: 34, scope: !4230, inlinedAt: !9653)
!9663 = !DILocation(line: 4509, column: 11, scope: !4230, inlinedAt: !9653)
!9664 = !DILocation(line: 4510, column: 18, scope: !4245, inlinedAt: !9653)
!9665 = !DILocation(line: 4510, column: 9, scope: !4230, inlinedAt: !9653)
!9666 = !DILocation(line: 4511, column: 10, scope: !4245, inlinedAt: !9653)
!9667 = !DILocation(line: 4511, column: 41, scope: !4245, inlinedAt: !9653)
!9668 = !DILocation(line: 4511, column: 24, scope: !4245, inlinedAt: !9653)
!9669 = !DILocation(line: 4615, column: 10, scope: !9608)
!9670 = !DILocation(line: 4512, column: 18, scope: !4253, inlinedAt: !9653)
!9671 = !DILocation(line: 4512, column: 9, scope: !4230, inlinedAt: !9653)
!9672 = !DILocation(line: 4515, column: 10, scope: !4253, inlinedAt: !9653)
!9673 = !DILocation(line: 4515, column: 45, scope: !4253, inlinedAt: !9653)
!9674 = !DILocation(line: 4515, column: 26, scope: !4253, inlinedAt: !9653)
!9675 = !DILocation(line: 4515, column: 23, scope: !4253, inlinedAt: !9653)
!9676 = !DILocation(line: 4517, column: 13, scope: !4230, inlinedAt: !9653)
!9677 = !DILocation(line: 4517, column: 55, scope: !4230, inlinedAt: !9653)
!9678 = !DILocation(line: 4618, column: 36, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4618, column: 10)
!9680 = !DILocation(line: 4618, column: 43, scope: !9679)
!9681 = !DILocation(line: 4618, column: 47, scope: !9679)
!9682 = !DILocation(line: 4619, column: 18, scope: !9679)
!9683 = !DILocation(line: 4619, column: 8, scope: !9679)
!9684 = !DILocation(line: 4588, column: 11, scope: !9540)
!9685 = !DILocation(line: 4623, column: 13, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 4623, column: 10)
!9687 = !DILocation(line: 4623, column: 19, scope: !9686)
!9688 = !DILocation(line: 4623, column: 10, scope: !9608)
!9689 = !DILocation(line: 4625, column: 10, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 4625, column: 7)
!9691 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 4624, column: 6)
!9692 = !DILocation(line: 4625, column: 14, scope: !9690)
!9693 = !DILocation(line: 4625, column: 7, scope: !9691)
!9694 = !DILocation(line: 4628, column: 11, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 4626, column: 3)
!9696 = !DILocation(line: 4632, column: 37, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 4632, column: 11)
!9698 = !DILocation(line: 5088, column: 34, scope: !4271, inlinedAt: !9699)
!9699 = distinct !DILocation(line: 4634, column: 17, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 4633, column: 7)
!9701 = !DILocation(line: 5088, column: 41, scope: !4271, inlinedAt: !9699)
!9702 = !DILocation(line: 5093, column: 23, scope: !4286, inlinedAt: !9699)
!9703 = !DILocation(line: 4585, column: 14, scope: !9540)
!9704 = !DILocation(line: 4635, column: 39, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 4635, column: 8)
!9706 = !DILocation(line: 4503, column: 34, scope: !4230, inlinedAt: !9707)
!9707 = distinct !DILocation(line: 4635, column: 9, scope: !9705)
!9708 = !DILocation(line: 4503, column: 45, scope: !4230, inlinedAt: !9707)
!9709 = !DILocation(line: 4503, column: 55, scope: !4230, inlinedAt: !9707)
!9710 = !DILocation(line: 4509, column: 16, scope: !4230, inlinedAt: !9707)
!9711 = !DILocation(line: 4509, column: 22, scope: !4230, inlinedAt: !9707)
!9712 = !DILocation(line: 4509, column: 34, scope: !4230, inlinedAt: !9707)
!9713 = !DILocation(line: 4509, column: 11, scope: !4230, inlinedAt: !9707)
!9714 = !DILocation(line: 4510, column: 18, scope: !4245, inlinedAt: !9707)
!9715 = !DILocation(line: 4510, column: 9, scope: !4230, inlinedAt: !9707)
!9716 = !DILocation(line: 4511, column: 10, scope: !4245, inlinedAt: !9707)
!9717 = !DILocation(line: 4511, column: 41, scope: !4245, inlinedAt: !9707)
!9718 = !DILocation(line: 4511, column: 24, scope: !4245, inlinedAt: !9707)
!9719 = !DILocation(line: 4511, column: 2, scope: !4245, inlinedAt: !9707)
!9720 = !DILocation(line: 4512, column: 18, scope: !4253, inlinedAt: !9707)
!9721 = !DILocation(line: 4512, column: 9, scope: !4230, inlinedAt: !9707)
!9722 = !DILocation(line: 4515, column: 10, scope: !4253, inlinedAt: !9707)
!9723 = !DILocation(line: 4515, column: 45, scope: !4253, inlinedAt: !9707)
!9724 = !DILocation(line: 4515, column: 26, scope: !4253, inlinedAt: !9707)
!9725 = !DILocation(line: 4515, column: 23, scope: !4253, inlinedAt: !9707)
!9726 = !DILocation(line: 4515, column: 2, scope: !4253, inlinedAt: !9707)
!9727 = !DILocation(line: 4517, column: 13, scope: !4230, inlinedAt: !9707)
!9728 = !DILocation(line: 4517, column: 55, scope: !4230, inlinedAt: !9707)
!9729 = !DILocation(line: 4517, column: 5, scope: !4230, inlinedAt: !9707)
!9730 = !DILocation(line: 4635, column: 8, scope: !9700)
!9731 = !DILocation(line: 4647, column: 6, scope: !9607)
!9732 = !DILocation(line: 4649, column: 13, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 4649, column: 7)
!9734 = !DILocation(line: 4649, column: 18, scope: !9733)
!9735 = !DILocation(line: 4587, column: 12, scope: !9540)
!9736 = !DILocation(line: 4654, column: 10, scope: !9604)
!9737 = !DILocation(line: 4654, column: 16, scope: !9604)
!9738 = !DILocation(line: 4654, column: 7, scope: !9605)
!9739 = !DILocation(line: 4656, column: 45, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 4656, column: 11)
!9741 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 4655, column: 3)
!9742 = !DILocalVariable(name: "fd", arg: 1, scope: !9743, file: !3, line: 4837, type: !9543)
!9743 = distinct !DISubprogram(name: "put_setbool", scope: !3, file: !3, line: 4836, type: !9744, isLocal: true, isDefinition: true, scopeLine: 4841, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9746)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!1131, !9543, !1127, !1127, !1131}
!9746 = !{!9742, !9747, !9748, !9749}
!9747 = !DILocalVariable(name: "cmd", arg: 2, scope: !9743, file: !3, line: 4838, type: !1127)
!9748 = !DILocalVariable(name: "name", arg: 3, scope: !9743, file: !3, line: 4839, type: !1127)
!9749 = !DILocalVariable(name: "value", arg: 4, scope: !9743, file: !3, line: 4840, type: !1131)
!9750 = !DILocation(line: 4837, column: 11, scope: !9743, inlinedAt: !9751)
!9751 = distinct !DILocation(line: 4656, column: 11, scope: !9740)
!9752 = !DILocation(line: 4838, column: 11, scope: !9743, inlinedAt: !9751)
!9753 = !DILocation(line: 4839, column: 11, scope: !9743, inlinedAt: !9751)
!9754 = !DILocation(line: 4840, column: 10, scope: !9743, inlinedAt: !9751)
!9755 = !DILocation(line: 4842, column: 15, scope: !9756, inlinedAt: !9751)
!9756 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 4842, column: 9)
!9757 = !DILocation(line: 4842, column: 9, scope: !9743, inlinedAt: !9751)
!9758 = !DILocation(line: 4656, column: 35, scope: !9740)
!9759 = !DILocation(line: 4844, column: 37, scope: !9760, inlinedAt: !9751)
!9760 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 4844, column: 9)
!9761 = !DILocation(line: 4844, column: 9, scope: !9760, inlinedAt: !9751)
!9762 = !DILocation(line: 4844, column: 62, scope: !9760, inlinedAt: !9751)
!9763 = !DILocation(line: 4845, column: 6, scope: !9760, inlinedAt: !9751)
!9764 = !DILocation(line: 4845, column: 9, scope: !9760, inlinedAt: !9751)
!9765 = !DILocation(line: 4656, column: 59, scope: !9740)
!9766 = !DILocation(line: 4656, column: 11, scope: !9741)
!9767 = !DILocation(line: 4659, column: 21, scope: !9603)
!9768 = !DILocation(line: 4659, column: 12, scope: !9604)
!9769 = !DILocation(line: 4661, column: 34, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 4661, column: 11)
!9771 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4660, column: 3)
!9772 = !DILocation(line: 4661, column: 44, scope: !9770)
!9773 = !DILocation(line: 4661, column: 11, scope: !9770)
!9774 = !DILocation(line: 4661, column: 58, scope: !9770)
!9775 = !DILocation(line: 4661, column: 11, scope: !9771)
!9776 = !DILocation(line: 4666, column: 12, scope: !9602)
!9777 = !DILocation(line: 4672, column: 11, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 4672, column: 8)
!9779 = !DILocation(line: 4672, column: 27, scope: !9778)
!9780 = !DILocation(line: 4682, column: 47, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 4682, column: 11)
!9782 = !DILocation(line: 4676, column: 41, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 4676, column: 8)
!9784 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 4675, column: 7)
!9785 = !DILocation(line: 4677, column: 14, scope: !9783)
!9786 = !DILocation(line: 4676, column: 8, scope: !9783)
!9787 = !DILocation(line: 4677, column: 34, scope: !9783)
!9788 = !DILocation(line: 4678, column: 5, scope: !9783)
!9789 = !DILocation(line: 4678, column: 8, scope: !9783)
!9790 = !DILocation(line: 4678, column: 20, scope: !9783)
!9791 = !DILocation(line: 4676, column: 8, scope: !9784)
!9792 = !DILocation(line: 4683, column: 16, scope: !9781)
!9793 = !DILocation(line: 4682, column: 37, scope: !9781)
!9794 = !DILocation(line: 4682, column: 11, scope: !9781)
!9795 = !DILocation(line: 4683, column: 23, scope: !9781)
!9796 = !DILocation(line: 4682, column: 11, scope: !9602)
!9797 = !DILocation(line: 4685, column: 11, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 4685, column: 11)
!9799 = !DILocation(line: 4685, column: 11, scope: !9602)
!9800 = !DILocation(line: 4687, column: 8, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 4687, column: 8)
!9802 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 4686, column: 7)
!9803 = !DILocation(line: 4687, column: 30, scope: !9801)
!9804 = !DILocation(line: 4687, column: 8, scope: !9802)
!9805 = !DILocation(line: 4647, column: 45, scope: !9606)
!9806 = !DILocation(line: 4647, column: 20, scope: !9606)
!9807 = distinct !{!9807, !9731, !9808}
!9808 = !DILocation(line: 4691, column: 6, scope: !9607)
!9809 = !DILocation(line: 4599, column: 48, scope: !9610)
!9810 = !DILocation(line: 4599, column: 7, scope: !9610)
!9811 = distinct !{!9811, !9631, !9812}
!9812 = !DILocation(line: 4692, column: 2, scope: !9611)
!9813 = !DILocation(line: 4597, column: 29, scope: !9613)
!9814 = !DILocation(line: 4597, column: 23, scope: !9613)
!9815 = distinct !{!9815, !9620, !9816}
!9816 = !DILocation(line: 4693, column: 5, scope: !9614)
!9817 = !DILocation(line: 4695, column: 1, scope: !9540)
!9818 = distinct !DISubprogram(name: "put_setnum", scope: !3, file: !3, line: 4812, type: !9819, isLocal: true, isDefinition: true, scopeLine: 4817, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9821)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!1131, !9543, !1127, !1127, !1143}
!9821 = !{!9822, !9823, !9824, !9825, !9826}
!9822 = !DILocalVariable(name: "fd", arg: 1, scope: !9818, file: !3, line: 4813, type: !9543)
!9823 = !DILocalVariable(name: "cmd", arg: 2, scope: !9818, file: !3, line: 4814, type: !1127)
!9824 = !DILocalVariable(name: "name", arg: 3, scope: !9818, file: !3, line: 4815, type: !1127)
!9825 = !DILocalVariable(name: "valuep", arg: 4, scope: !9818, file: !3, line: 4816, type: !1143)
!9826 = !DILocalVariable(name: "wc", scope: !9818, file: !3, line: 4818, type: !1130)
!9827 = !DILocation(line: 4813, column: 11, scope: !9818)
!9828 = !DILocation(line: 4814, column: 11, scope: !9818)
!9829 = !DILocation(line: 4815, column: 11, scope: !9818)
!9830 = !DILocation(line: 4816, column: 11, scope: !9818)
!9831 = !DILocation(line: 4820, column: 9, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 4820, column: 9)
!9833 = !DILocation(line: 4820, column: 42, scope: !9832)
!9834 = !DILocation(line: 4820, column: 9, scope: !9818)
!9835 = !DILocalVariable(name: "varp", arg: 1, scope: !9836, file: !3, line: 6551, type: !1124)
!9836 = distinct !DISubprogram(name: "wc_use_keyname", scope: !3, file: !3, line: 6551, type: !9837, isLocal: true, isDefinition: true, scopeLine: 6552, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9839)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!1131, !1124, !1143}
!9839 = !{!9835, !9840}
!9840 = !DILocalVariable(name: "wcp", arg: 2, scope: !9836, file: !3, line: 6551, type: !1143)
!9841 = !DILocation(line: 6551, column: 24, scope: !9836, inlinedAt: !9842)
!9842 = distinct !DILocation(line: 4822, column: 9, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 4822, column: 9)
!9844 = !DILocation(line: 6553, column: 23, scope: !9845, inlinedAt: !9842)
!9845 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 6553, column: 9)
!9846 = !DILocation(line: 6553, column: 50, scope: !9845, inlinedAt: !9842)
!9847 = !DILocation(line: 6553, column: 33, scope: !9845, inlinedAt: !9842)
!9848 = !DILocation(line: 6555, column: 9, scope: !9849, inlinedAt: !9842)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 6554, column: 5)
!9850 = !DILocation(line: 6556, column: 6, scope: !9851, inlinedAt: !9842)
!9851 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 6556, column: 6)
!9852 = !DILocation(line: 6556, column: 23, scope: !9851, inlinedAt: !9842)
!9853 = !DILocation(line: 6556, column: 26, scope: !9851, inlinedAt: !9842)
!9854 = !DILocation(line: 6556, column: 63, scope: !9851, inlinedAt: !9842)
!9855 = !DILocation(line: 6556, column: 6, scope: !9849, inlinedAt: !9842)
!9856 = !DILocation(line: 4825, column: 20, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 4825, column: 6)
!9858 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 4823, column: 5)
!9859 = !DILocation(line: 4825, column: 6, scope: !9857)
!9860 = !DILocation(line: 4825, column: 58, scope: !9857)
!9861 = !DILocation(line: 4825, column: 6, scope: !9858)
!9862 = !DILocation(line: 4828, column: 33, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 4828, column: 14)
!9864 = !DILocation(line: 4828, column: 14, scope: !9863)
!9865 = !DILocation(line: 4828, column: 42, scope: !9863)
!9866 = !DILocation(line: 4828, column: 14, scope: !9843)
!9867 = !DILocation(line: 4830, column: 9, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 4830, column: 9)
!9869 = !DILocation(line: 4831, column: 2, scope: !9868)
!9870 = !DILocation(line: 4833, column: 1, scope: !9818)
!9871 = distinct !DISubprogram(name: "put_setstring", scope: !3, file: !3, line: 4726, type: !9872, isLocal: true, isDefinition: true, scopeLine: 4732, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9874)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{!1131, !9543, !1127, !1127, !1133, !1309}
!9874 = !{!9875, !9876, !9877, !9878, !9879, !9880, !9881, !9882, !9883, !9884}
!9875 = !DILocalVariable(name: "fd", arg: 1, scope: !9871, file: !3, line: 4727, type: !9543)
!9876 = !DILocalVariable(name: "cmd", arg: 2, scope: !9871, file: !3, line: 4728, type: !1127)
!9877 = !DILocalVariable(name: "name", arg: 3, scope: !9871, file: !3, line: 4729, type: !1127)
!9878 = !DILocalVariable(name: "valuep", arg: 4, scope: !9871, file: !3, line: 4730, type: !1133)
!9879 = !DILocalVariable(name: "flags", arg: 5, scope: !9871, file: !3, line: 4731, type: !1309)
!9880 = !DILocalVariable(name: "s", scope: !9871, file: !3, line: 4733, type: !1124)
!9881 = !DILocalVariable(name: "buf", scope: !9871, file: !3, line: 4734, type: !1124)
!9882 = !DILocalVariable(name: "part", scope: !9871, file: !3, line: 4735, type: !1124)
!9883 = !DILocalVariable(name: "p", scope: !9871, file: !3, line: 4736, type: !1124)
!9884 = !DILocalVariable(name: "size", scope: !9885, file: !3, line: 4755, type: !1131)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 4754, column: 2)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 4753, column: 11)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 4745, column: 6)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 4741, column: 5)
!9889 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4740, column: 9)
!9890 = !DILocation(line: 4727, column: 11, scope: !9871)
!9891 = !DILocation(line: 4728, column: 11, scope: !9871)
!9892 = !DILocation(line: 4729, column: 11, scope: !9871)
!9893 = !DILocation(line: 4730, column: 14, scope: !9871)
!9894 = !DILocation(line: 4731, column: 12, scope: !9871)
!9895 = !DILocation(line: 4733, column: 5, scope: !9871)
!9896 = !DILocation(line: 4734, column: 13, scope: !9871)
!9897 = !DILocation(line: 4735, column: 13, scope: !9871)
!9898 = !DILocation(line: 4736, column: 5, scope: !9871)
!9899 = !DILocation(line: 4738, column: 9, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4738, column: 9)
!9901 = !DILocation(line: 4738, column: 42, scope: !9900)
!9902 = !DILocation(line: 4738, column: 9, scope: !9871)
!9903 = !DILocation(line: 4740, column: 9, scope: !9889)
!9904 = !DILocation(line: 4740, column: 17, scope: !9889)
!9905 = !DILocation(line: 4740, column: 9, scope: !9871)
!9906 = !DILocation(line: 4745, column: 13, scope: !9887)
!9907 = !DILocation(line: 4745, column: 6, scope: !9888)
!9908 = !DILocation(line: 4733, column: 13, scope: !9871)
!9909 = !DILocation(line: 4747, column: 8, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 4746, column: 2)
!9911 = !DILocation(line: 4748, column: 13, scope: !9910)
!9912 = !DILocation(line: 4748, column: 16, scope: !9910)
!9913 = !DILocation(line: 4748, column: 6, scope: !9910)
!9914 = !DILocation(line: 4749, column: 22, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4749, column: 7)
!9916 = !DILocation(line: 4748, column: 14, scope: !9910)
!9917 = distinct !{!9917, !9913, !9918}
!9918 = !DILocation(line: 4750, column: 14, scope: !9910)
!9919 = !DILocation(line: 4749, column: 7, scope: !9915)
!9920 = !DILocation(line: 4749, column: 49, scope: !9915)
!9921 = !DILocation(line: 4749, column: 7, scope: !9910)
!9922 = !DILocation(line: 4753, column: 18, scope: !9886)
!9923 = !DILocation(line: 4753, column: 30, scope: !9886)
!9924 = !DILocation(line: 4753, column: 11, scope: !9887)
!9925 = !DILocation(line: 4755, column: 23, scope: !9885)
!9926 = !DILocation(line: 4755, column: 18, scope: !9885)
!9927 = !DILocation(line: 4755, column: 39, scope: !9885)
!9928 = !DILocation(line: 4755, column: 11, scope: !9885)
!9929 = !DILocation(line: 4758, column: 18, scope: !9885)
!9930 = !DILocation(line: 4758, column: 12, scope: !9885)
!9931 = !DILocation(line: 4759, column: 14, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 4759, column: 10)
!9933 = !DILocation(line: 4759, column: 10, scope: !9885)
!9934 = !DILocation(line: 4761, column: 25, scope: !9885)
!9935 = !DILocation(line: 4761, column: 6, scope: !9885)
!9936 = !DILocation(line: 4766, column: 15, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 4766, column: 10)
!9938 = !DILocation(line: 4766, column: 48, scope: !9937)
!9939 = !DILocation(line: 4766, column: 27, scope: !9937)
!9940 = !DILocation(line: 4767, column: 23, scope: !9937)
!9941 = !DILocation(line: 4767, column: 12, scope: !9937)
!9942 = !DILocation(line: 4767, column: 37, scope: !9937)
!9943 = !DILocation(line: 4766, column: 10, scope: !9885)
!9944 = !DILocation(line: 4769, column: 10, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 4768, column: 6)
!9946 = !DILocation(line: 4770, column: 12, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 4770, column: 7)
!9948 = !DILocation(line: 4770, column: 7, scope: !9945)
!9949 = !DILocation(line: 4774, column: 7, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 4774, column: 7)
!9951 = !DILocation(line: 4774, column: 19, scope: !9950)
!9952 = !DILocation(line: 4774, column: 7, scope: !9945)
!9953 = !DILocation(line: 4736, column: 13, scope: !9871)
!9954 = !DILocation(line: 4777, column: 5, scope: !9945)
!9955 = !DILocation(line: 4778, column: 10, scope: !9945)
!9956 = !DILocation(line: 4778, column: 13, scope: !9945)
!9957 = !DILocation(line: 4778, column: 3, scope: !9945)
!9958 = !DILocation(line: 4782, column: 11, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 4782, column: 11)
!9960 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 4779, column: 3)
!9961 = !DILocation(line: 4778, column: 11, scope: !9945)
!9962 = distinct !{!9962, !9957, !9963}
!9963 = !DILocation(line: 4787, column: 3, scope: !9945)
!9964 = !DILocation(line: 4782, column: 45, scope: !9959)
!9965 = !DILocation(line: 4782, column: 11, scope: !9960)
!9966 = !DILocation(line: 4784, column: 13, scope: !9960)
!9967 = !DILocation(line: 4785, column: 11, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 4785, column: 11)
!9969 = !DILocation(line: 4785, column: 35, scope: !9968)
!9970 = !DILocation(line: 4785, column: 43, scope: !9968)
!9971 = !DILocation(line: 4785, column: 46, scope: !9968)
!9972 = !DILocation(line: 4785, column: 58, scope: !9968)
!9973 = !DILocation(line: 4785, column: 11, scope: !9960)
!9974 = !DILocation(line: 4788, column: 3, scope: !9945)
!9975 = !DILocation(line: 4789, column: 3, scope: !9945)
!9976 = !DILocation(line: 4792, column: 10, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 4792, column: 10)
!9978 = !DILocation(line: 4792, column: 33, scope: !9977)
!9979 = !DILocation(line: 0, scope: !9885)
!9980 = !DILocation(line: 4799, column: 11, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 4799, column: 11)
!9982 = !DILocation(line: 4799, column: 38, scope: !9981)
!9983 = !DILocation(line: 4799, column: 11, scope: !9886)
!9984 = !DILocation(line: 4802, column: 9, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4802, column: 9)
!9986 = !DILocation(line: 4803, column: 2, scope: !9985)
!9987 = !DILocation(line: 4806, column: 5, scope: !9871)
!9988 = !DILocation(line: 4807, column: 5, scope: !9871)
!9989 = !DILocation(line: 4808, column: 5, scope: !9871)
!9990 = !DILocation(line: 4809, column: 1, scope: !9871)
!9991 = distinct !DISubprogram(name: "makefoldset", scope: !3, file: !3, line: 4703, type: !9992, isLocal: false, isDefinition: true, scopeLine: 4704, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !9994)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!1131, !9543}
!9994 = !{!9995}
!9995 = !DILocalVariable(name: "fd", arg: 1, scope: !9991, file: !3, line: 4703, type: !9543)
!9996 = !DILocation(line: 4703, column: 19, scope: !9991)
!9997 = !DILocation(line: 4705, column: 47, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 4705, column: 9)
!9999 = !DILocation(line: 4705, column: 55, scope: !9998)
!10000 = !DILocation(line: 4705, column: 9, scope: !9998)
!10001 = !DILocation(line: 4705, column: 67, scope: !9998)
!10002 = !DILocation(line: 4707, column: 6, scope: !9998)
!10003 = !DILocation(line: 4707, column: 47, scope: !9998)
!10004 = !DILocation(line: 4707, column: 55, scope: !9998)
!10005 = !DILocation(line: 4707, column: 9, scope: !9998)
!10006 = !DILocation(line: 4708, column: 16, scope: !9998)
!10007 = !DILocation(line: 4710, column: 6, scope: !9998)
!10008 = !DILocation(line: 4710, column: 47, scope: !9998)
!10009 = !DILocation(line: 4710, column: 55, scope: !9998)
!10010 = !DILocation(line: 4710, column: 9, scope: !9998)
!10011 = !DILocation(line: 4711, column: 16, scope: !9998)
!10012 = !DILocation(line: 4712, column: 6, scope: !9998)
!10013 = !DILocation(line: 4712, column: 47, scope: !9998)
!10014 = !DILocation(line: 4712, column: 55, scope: !9998)
!10015 = !DILocation(line: 4712, column: 9, scope: !9998)
!10016 = !DILocation(line: 4713, column: 16, scope: !9998)
!10017 = !DILocation(line: 4714, column: 6, scope: !9998)
!10018 = !DILocation(line: 4714, column: 44, scope: !9998)
!10019 = !DILocation(line: 4714, column: 52, scope: !9998)
!10020 = !DILocation(line: 4714, column: 9, scope: !9998)
!10021 = !DILocation(line: 4714, column: 61, scope: !9998)
!10022 = !DILocation(line: 4715, column: 6, scope: !9998)
!10023 = !DILocation(line: 4715, column: 44, scope: !9998)
!10024 = !DILocation(line: 4715, column: 52, scope: !9998)
!10025 = !DILocation(line: 4715, column: 9, scope: !9998)
!10026 = !DILocation(line: 4715, column: 61, scope: !9998)
!10027 = !DILocation(line: 4716, column: 6, scope: !9998)
!10028 = !DILocation(line: 4716, column: 44, scope: !9998)
!10029 = !DILocation(line: 4716, column: 52, scope: !9998)
!10030 = !DILocation(line: 4716, column: 9, scope: !9998)
!10031 = !DILocation(line: 4716, column: 61, scope: !9998)
!10032 = !DILocation(line: 4717, column: 6, scope: !9998)
!10033 = !DILocation(line: 4717, column: 44, scope: !9998)
!10034 = !DILocation(line: 4717, column: 52, scope: !9998)
!10035 = !{!4020, !3061, i64 948}
!10036 = !DILocation(line: 4837, column: 11, scope: !9743, inlinedAt: !10037)
!10037 = distinct !DILocation(line: 4717, column: 9, scope: !9998)
!10038 = !DILocation(line: 4838, column: 11, scope: !9743, inlinedAt: !10037)
!10039 = !DILocation(line: 4839, column: 11, scope: !9743, inlinedAt: !10037)
!10040 = !DILocation(line: 4840, column: 10, scope: !9743, inlinedAt: !10037)
!10041 = !DILocation(line: 4842, column: 15, scope: !9756, inlinedAt: !10037)
!10042 = !DILocation(line: 4842, column: 9, scope: !9743, inlinedAt: !10037)
!10043 = !DILocation(line: 4844, column: 37, scope: !9760, inlinedAt: !10037)
!10044 = !DILocation(line: 4844, column: 9, scope: !9760, inlinedAt: !10037)
!10045 = !DILocation(line: 4844, column: 62, scope: !9760, inlinedAt: !10037)
!10046 = !DILocation(line: 4845, column: 6, scope: !9760, inlinedAt: !10037)
!10047 = !DILocation(line: 4845, column: 9, scope: !9760, inlinedAt: !10037)
!10048 = !DILocation(line: 4717, column: 61, scope: !9998)
!10049 = !DILocation(line: 4705, column: 9, scope: !9991)
!10050 = distinct !DISubprogram(name: "clear_termoptions", scope: !3, file: !3, line: 4856, type: !2735, isLocal: false, isDefinition: true, scopeLine: 4857, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!10051 = !DILocation(line: 4863, column: 5, scope: !10050)
!10052 = !DILocation(line: 4865, column: 5, scope: !10050)
!10053 = !DILocation(line: 4870, column: 13, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 4870, column: 9)
!10055 = !DILocation(line: 4870, column: 9, scope: !10054)
!10056 = !DILocation(line: 4870, column: 9, scope: !10050)
!10057 = !DILocation(line: 4871, column: 2, scope: !10054)
!10058 = !DILocation(line: 4873, column: 5, scope: !10050)
!10059 = !DILocation(line: 4875, column: 5, scope: !10050)
!10060 = !DILocation(line: 4876, column: 1, scope: !10050)
!10061 = distinct !DISubprogram(name: "free_termoptions", scope: !3, file: !3, line: 4879, type: !2735, isLocal: false, isDefinition: true, scopeLine: 4880, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10062)
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "p", scope: !10061, file: !3, line: 4881, type: !2848)
!10064 = !DILocation(line: 4881, column: 25, scope: !10061)
!10065 = !DILocation(line: 4883, column: 26, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 4883, column: 5)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4883, column: 5)
!10068 = !DILocation(line: 4883, column: 35, scope: !10066)
!10069 = !DILocation(line: 4883, column: 5, scope: !10067)
!10070 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !10071)
!10071 = distinct !DILocation(line: 4884, column: 6, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 4884, column: 6)
!10073 = !DILocation(line: 4954, column: 32, scope: !3485, inlinedAt: !10071)
!10074 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !10071)
!10075 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !10071)
!10076 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !10071)
!10077 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !10071)
!10078 = !DILocation(line: 4884, column: 6, scope: !10066)
!10079 = !DILocation(line: 4886, column: 13, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 4886, column: 10)
!10081 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 4885, column: 2)
!10082 = !DILocation(line: 4886, column: 19, scope: !10080)
!10083 = !DILocation(line: 4886, column: 10, scope: !10081)
!10084 = !DILocation(line: 4887, column: 38, scope: !10080)
!10085 = !DILocation(line: 4887, column: 22, scope: !10080)
!10086 = !DILocation(line: 4887, column: 3, scope: !10080)
!10087 = !DILocation(line: 4888, column: 13, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 4888, column: 10)
!10089 = !DILocation(line: 4888, column: 19, scope: !10088)
!10090 = !DILocation(line: 4888, column: 10, scope: !10081)
!10091 = !DILocation(line: 4889, column: 22, scope: !10088)
!10092 = !DILocation(line: 4889, column: 3, scope: !10088)
!10093 = !DILocation(line: 4892, column: 15, scope: !10081)
!10094 = !DILocation(line: 4890, column: 29, scope: !10081)
!10095 = !DILocation(line: 4890, column: 22, scope: !10081)
!10096 = !DILocation(line: 4890, column: 27, scope: !10081)
!10097 = !DILocation(line: 4891, column: 31, scope: !10081)
!10098 = !DILocation(line: 4891, column: 9, scope: !10081)
!10099 = !DILocation(line: 4891, column: 29, scope: !10081)
!10100 = !DILocation(line: 4895, column: 34, scope: !10081)
!10101 = !DILocation(line: 2491, column: 25, scope: !4567, inlinedAt: !10102)
!10102 = distinct !DILocation(line: 4895, column: 6, scope: !10081)
!10103 = !DILocation(line: 2491, column: 56, scope: !4567, inlinedAt: !10102)
!10104 = !DILocation(line: 2491, column: 38, scope: !4567, inlinedAt: !10102)
!10105 = !DILocation(line: 2494, column: 23, scope: !4567, inlinedAt: !10102)
!10106 = !DILocation(line: 2495, column: 12, scope: !4567, inlinedAt: !10102)
!10107 = !DILocation(line: 2499, column: 28, scope: !4585, inlinedAt: !10102)
!10108 = !DILocation(line: 2499, column: 25, scope: !4585, inlinedAt: !10102)
!10109 = !DILocation(line: 2504, column: 32, scope: !4593, inlinedAt: !10102)
!10110 = !DILocation(line: 4897, column: 2, scope: !10081)
!10111 = !DILocation(line: 4883, column: 45, scope: !10066)
!10112 = distinct !{!10112, !10069, !10113}
!10113 = !DILocation(line: 4897, column: 2, scope: !10067)
!10114 = !DILocation(line: 4898, column: 5, scope: !10061)
!10115 = !DILocation(line: 4899, column: 1, scope: !10061)
!10116 = distinct !DISubprogram(name: "free_one_termoption", scope: !3, file: !3, line: 4907, type: !4102, isLocal: false, isDefinition: true, scopeLine: 4908, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "var", arg: 1, scope: !10116, file: !3, line: 4907, type: !1124)
!10119 = !DILocalVariable(name: "p", scope: !10116, file: !3, line: 4909, type: !2848)
!10120 = !DILocation(line: 4907, column: 29, scope: !10116)
!10121 = !DILocation(line: 4909, column: 25, scope: !10116)
!10122 = !DILocation(line: 4911, column: 30, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 4911, column: 5)
!10124 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 4911, column: 5)
!10125 = !DILocation(line: 4911, column: 39, scope: !10123)
!10126 = !DILocation(line: 4911, column: 5, scope: !10124)
!10127 = !DILocation(line: 4912, column: 9, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 4912, column: 6)
!10129 = !DILocation(line: 4912, column: 13, scope: !10128)
!10130 = !DILocation(line: 4912, column: 6, scope: !10123)
!10131 = !DILocation(line: 4914, column: 13, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 4914, column: 10)
!10133 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 4913, column: 2)
!10134 = !DILocation(line: 4914, column: 19, scope: !10132)
!10135 = !DILocation(line: 4914, column: 10, scope: !10133)
!10136 = !DILocation(line: 4915, column: 22, scope: !10132)
!10137 = !DILocation(line: 4915, column: 3, scope: !10132)
!10138 = !DILocation(line: 4916, column: 22, scope: !10133)
!10139 = !DILocation(line: 4917, column: 15, scope: !10133)
!10140 = !DILocation(line: 4916, column: 29, scope: !10133)
!10141 = !DILocation(line: 4916, column: 27, scope: !10133)
!10142 = !DILocation(line: 4918, column: 6, scope: !10133)
!10143 = !DILocation(line: 4911, column: 49, scope: !10123)
!10144 = distinct !{!10144, !10126, !10145}
!10145 = !DILocation(line: 4919, column: 2, scope: !10124)
!10146 = !DILocation(line: 4920, column: 1, scope: !10116)
!10147 = distinct !DISubprogram(name: "set_term_defaults", scope: !3, file: !3, line: 4927, type: !2735, isLocal: false, isDefinition: true, scopeLine: 4928, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10148)
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "p", scope: !10147, file: !3, line: 4929, type: !2848)
!10150 = !DILocation(line: 4929, column: 25, scope: !10147)
!10151 = !DILocation(line: 4931, column: 30, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 4931, column: 5)
!10153 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 4931, column: 5)
!10154 = !DILocation(line: 4931, column: 39, scope: !10152)
!10155 = !DILocation(line: 4931, column: 5, scope: !10153)
!10156 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !10157)
!10157 = distinct !DILocation(line: 4933, column: 6, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 4933, column: 6)
!10159 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 4932, column: 5)
!10160 = !DILocation(line: 4954, column: 32, scope: !3485, inlinedAt: !10157)
!10161 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !10157)
!10162 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !10157)
!10163 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !10157)
!10164 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !10157)
!10165 = !DILocation(line: 4933, column: 22, scope: !10158)
!10166 = !DILocation(line: 4933, column: 25, scope: !10158)
!10167 = !DILocation(line: 4933, column: 67, scope: !10158)
!10168 = !DILocation(line: 4933, column: 51, scope: !10158)
!10169 = !DILocation(line: 4933, column: 48, scope: !10158)
!10170 = !DILocation(line: 4933, column: 6, scope: !10159)
!10171 = !DILocation(line: 4935, column: 13, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 4935, column: 10)
!10173 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 4934, column: 2)
!10174 = !DILocation(line: 4935, column: 19, scope: !10172)
!10175 = !DILocation(line: 4935, column: 10, scope: !10173)
!10176 = !DILocation(line: 4937, column: 3, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 4936, column: 6)
!10178 = !DILocation(line: 4938, column: 12, scope: !10177)
!10179 = !DILocation(line: 4940, column: 47, scope: !10173)
!10180 = !DILocation(line: 4940, column: 31, scope: !10173)
!10181 = !DILocation(line: 4939, column: 6, scope: !10177)
!10182 = !DILocation(line: 4941, column: 13, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 4941, column: 10)
!10184 = !DILocation(line: 4940, column: 29, scope: !10173)
!10185 = !DILocation(line: 4941, column: 19, scope: !10183)
!10186 = !DILocation(line: 4941, column: 10, scope: !10173)
!10187 = !DILocation(line: 4944, column: 12, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 4942, column: 6)
!10189 = !DILocation(line: 4945, column: 6, scope: !10188)
!10190 = !DILocation(line: 4931, column: 49, scope: !10152)
!10191 = distinct !{!10191, !10155, !10192}
!10192 = !DILocation(line: 4947, column: 5, scope: !10153)
!10193 = !DILocation(line: 4948, column: 1, scope: !10147)
!10194 = distinct !DISubprogram(name: "get_option_varp_scope", scope: !3, file: !3, line: 5151, type: !10195, isLocal: false, isDefinition: true, scopeLine: 5152, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!1124, !1131, !1131}
!10197 = !{!10198, !10199}
!10198 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !10194, file: !3, line: 5151, type: !1131)
!10199 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !10194, file: !3, line: 5151, type: !1131)
!10200 = !DILocation(line: 5151, column: 27, scope: !10194)
!10201 = !DILocation(line: 5151, column: 40, scope: !10194)
!10202 = !DILocation(line: 5153, column: 29, scope: !10194)
!10203 = !DILocation(line: 5153, column: 12, scope: !10194)
!10204 = !DILocation(line: 5153, column: 5, scope: !10194)
!10205 = distinct !DISubprogram(name: "get_option_var", scope: !3, file: !3, line: 5416, type: !10206, isLocal: false, isDefinition: true, scopeLine: 5417, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10208)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{!1124, !1131}
!10208 = !{!10209}
!10209 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !10205, file: !3, line: 5416, type: !1131)
!10210 = !DILocation(line: 5416, column: 20, scope: !10205)
!10211 = !DILocation(line: 5418, column: 12, scope: !10205)
!10212 = !DILocation(line: 5418, column: 29, scope: !10205)
!10213 = !DILocation(line: 5418, column: 5, scope: !10205)
!10214 = distinct !DISubprogram(name: "get_option_fullname", scope: !3, file: !3, line: 5425, type: !10206, isLocal: false, isDefinition: true, scopeLine: 5426, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10215)
!10215 = !{!10216}
!10216 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !10214, file: !3, line: 5425, type: !1131)
!10217 = !DILocation(line: 5425, column: 25, scope: !10214)
!10218 = !DILocation(line: 5427, column: 22, scope: !10214)
!10219 = !DILocation(line: 5427, column: 39, scope: !10214)
!10220 = !DILocation(line: 5427, column: 5, scope: !10214)
!10221 = distinct !DISubprogram(name: "get_equalprg", scope: !3, file: !3, line: 5434, type: !9517, isLocal: false, isDefinition: true, scopeLine: 5435, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!10222 = !DILocation(line: 5436, column: 10, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 5436, column: 9)
!10224 = !DILocation(line: 5436, column: 18, scope: !10223)
!10225 = !DILocation(line: 5436, column: 9, scope: !10223)
!10226 = !DILocation(line: 5436, column: 25, scope: !10223)
!10227 = !DILocation(line: 5437, column: 9, scope: !10223)
!10228 = !DILocation(line: 5436, column: 9, scope: !10221)
!10229 = !DILocation(line: 5439, column: 1, scope: !10221)
!10230 = distinct !DISubprogram(name: "win_copy_options", scope: !3, file: !3, line: 5446, type: !10231, isLocal: false, isDefinition: true, scopeLine: 5447, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !1504, !1504}
!10233 = !{!10234, !10235}
!10234 = !DILocalVariable(name: "wp_from", arg: 1, scope: !10230, file: !3, line: 5446, type: !1504)
!10235 = !DILocalVariable(name: "wp_to", arg: 2, scope: !10230, file: !3, line: 5446, type: !1504)
!10236 = !DILocation(line: 5446, column: 25, scope: !10230)
!10237 = !DILocation(line: 5446, column: 41, scope: !10230)
!10238 = !DILocation(line: 5448, column: 27, scope: !10230)
!10239 = !DILocation(line: 5448, column: 49, scope: !10230)
!10240 = !DILocation(line: 5448, column: 5, scope: !10230)
!10241 = !DILocation(line: 5449, column: 27, scope: !10230)
!10242 = !DILocation(line: 5449, column: 49, scope: !10230)
!10243 = !DILocation(line: 5449, column: 5, scope: !10230)
!10244 = !DILocation(line: 5457, column: 26, scope: !4053, inlinedAt: !10245)
!10245 = distinct !DILocation(line: 5450, column: 5, scope: !10230)
!10246 = !DILocation(line: 5460, column: 5, scope: !4053, inlinedAt: !10245)
!10247 = !DILocation(line: 5463, column: 5, scope: !4053, inlinedAt: !10245)
!10248 = !DILocation(line: 5464, column: 5, scope: !4053, inlinedAt: !10245)
!10249 = !DILocation(line: 5466, column: 31, scope: !4053, inlinedAt: !10245)
!10250 = !DILocation(line: 5466, column: 5, scope: !4053, inlinedAt: !10245)
!10251 = !DILocation(line: 5451, column: 1, scope: !10230)
!10252 = distinct !DISubprogram(name: "copy_winopt", scope: !3, file: !3, line: 5476, type: !10253, isLocal: false, isDefinition: true, scopeLine: 5477, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10256)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !10255, !10255}
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!10256 = !{!10257, !10258}
!10257 = !DILocalVariable(name: "from", arg: 1, scope: !10252, file: !3, line: 5476, type: !10255)
!10258 = !DILocalVariable(name: "to", arg: 2, scope: !10252, file: !3, line: 5476, type: !10255)
!10259 = !DILocation(line: 5476, column: 23, scope: !10252)
!10260 = !DILocation(line: 5476, column: 39, scope: !10252)
!10261 = !DILocation(line: 5479, column: 25, scope: !10252)
!10262 = !{!4023, !3061, i64 0}
!10263 = !DILocation(line: 5479, column: 9, scope: !10252)
!10264 = !DILocation(line: 5479, column: 17, scope: !10252)
!10265 = !DILocation(line: 5481, column: 25, scope: !10252)
!10266 = !{!4023, !3061, i64 140}
!10267 = !DILocation(line: 5481, column: 9, scope: !10252)
!10268 = !DILocation(line: 5481, column: 17, scope: !10252)
!10269 = !DILocation(line: 5482, column: 36, scope: !10252)
!10270 = !{!4023, !3109, i64 144}
!10271 = !DILocation(line: 5482, column: 18, scope: !10252)
!10272 = !DILocation(line: 5482, column: 9, scope: !10252)
!10273 = !DILocation(line: 5482, column: 16, scope: !10252)
!10274 = !DILocation(line: 5483, column: 23, scope: !10252)
!10275 = !{!4023, !3061, i64 152}
!10276 = !DILocation(line: 5483, column: 9, scope: !10252)
!10277 = !DILocation(line: 5483, column: 15, scope: !10252)
!10278 = !DILocation(line: 5484, column: 24, scope: !10252)
!10279 = !{!4023, !3061, i64 156}
!10280 = !DILocation(line: 5484, column: 9, scope: !10252)
!10281 = !DILocation(line: 5484, column: 16, scope: !10252)
!10282 = !DILocation(line: 5486, column: 24, scope: !10252)
!10283 = !{!4023, !3110, i64 160}
!10284 = !DILocation(line: 5486, column: 9, scope: !10252)
!10285 = !DILocation(line: 5486, column: 16, scope: !10252)
!10286 = !DILocation(line: 5489, column: 24, scope: !10252)
!10287 = !{!4023, !3061, i64 180}
!10288 = !DILocation(line: 5489, column: 9, scope: !10252)
!10289 = !DILocation(line: 5489, column: 16, scope: !10252)
!10290 = !DILocation(line: 5490, column: 36, scope: !10252)
!10291 = !{!4023, !3109, i64 184}
!10292 = !DILocation(line: 5490, column: 18, scope: !10252)
!10293 = !DILocation(line: 5490, column: 9, scope: !10252)
!10294 = !DILocation(line: 5490, column: 16, scope: !10252)
!10295 = !DILocation(line: 5493, column: 36, scope: !10252)
!10296 = !{!4023, !3109, i64 232}
!10297 = !DILocation(line: 5493, column: 18, scope: !10252)
!10298 = !DILocation(line: 5493, column: 9, scope: !10252)
!10299 = !DILocation(line: 5493, column: 16, scope: !10252)
!10300 = !DILocation(line: 5496, column: 36, scope: !10252)
!10301 = !{!4023, !3109, i64 240}
!10302 = !DILocation(line: 5496, column: 18, scope: !10252)
!10303 = !DILocation(line: 5496, column: 9, scope: !10252)
!10304 = !DILocation(line: 5496, column: 16, scope: !10252)
!10305 = !DILocation(line: 5498, column: 25, scope: !10252)
!10306 = !{!4023, !3061, i64 260}
!10307 = !DILocation(line: 5498, column: 9, scope: !10252)
!10308 = !DILocation(line: 5498, column: 17, scope: !10252)
!10309 = !DILocation(line: 5500, column: 30, scope: !10252)
!10310 = !{!4023, !3061, i64 264}
!10311 = !DILocation(line: 5500, column: 9, scope: !10252)
!10312 = !DILocation(line: 5500, column: 22, scope: !10252)
!10313 = !DILocation(line: 5503, column: 24, scope: !10252)
!10314 = !{!4023, !3061, i64 136}
!10315 = !DILocation(line: 5503, column: 9, scope: !10252)
!10316 = !DILocation(line: 5503, column: 16, scope: !10252)
!10317 = !DILocation(line: 5504, column: 24, scope: !10252)
!10318 = !{!4023, !3061, i64 4}
!10319 = !DILocation(line: 5504, column: 9, scope: !10252)
!10320 = !DILocation(line: 5504, column: 16, scope: !10252)
!10321 = !DILocation(line: 5505, column: 39, scope: !10252)
!10322 = !{!4023, !3109, i64 8}
!10323 = !DILocation(line: 5505, column: 21, scope: !10252)
!10324 = !DILocation(line: 5505, column: 9, scope: !10252)
!10325 = !DILocation(line: 5505, column: 19, scope: !10252)
!10326 = !DILocation(line: 5507, column: 36, scope: !10252)
!10327 = !{!4023, !3109, i64 16}
!10328 = !DILocation(line: 5507, column: 18, scope: !10252)
!10329 = !DILocation(line: 5507, column: 9, scope: !10252)
!10330 = !DILocation(line: 5507, column: 16, scope: !10252)
!10331 = !DILocation(line: 5508, column: 24, scope: !10252)
!10332 = !{!4023, !3061, i64 248}
!10333 = !DILocation(line: 5508, column: 9, scope: !10252)
!10334 = !DILocation(line: 5508, column: 16, scope: !10252)
!10335 = !DILocation(line: 5509, column: 29, scope: !10252)
!10336 = !{!4023, !3061, i64 256}
!10337 = !DILocation(line: 5509, column: 9, scope: !10252)
!10338 = !DILocation(line: 5509, column: 21, scope: !10252)
!10339 = !DILocation(line: 5510, column: 24, scope: !10252)
!10340 = !{!4023, !3061, i64 288}
!10341 = !DILocation(line: 5510, column: 9, scope: !10252)
!10342 = !DILocation(line: 5510, column: 16, scope: !10252)
!10343 = !DILocation(line: 5511, column: 29, scope: !10252)
!10344 = !{!4023, !3061, i64 292}
!10345 = !DILocation(line: 5511, column: 9, scope: !10252)
!10346 = !DILocation(line: 5511, column: 21, scope: !10252)
!10347 = !DILocation(line: 5513, column: 26, scope: !10252)
!10348 = !{!4023, !3061, i64 200}
!10349 = !DILocation(line: 5513, column: 9, scope: !10252)
!10350 = !DILocation(line: 5513, column: 18, scope: !10252)
!10351 = !DILocation(line: 5516, column: 24, scope: !10252)
!10352 = !{!4023, !3061, i64 204}
!10353 = !DILocation(line: 5516, column: 9, scope: !10252)
!10354 = !DILocation(line: 5516, column: 16, scope: !10252)
!10355 = !DILocation(line: 5517, column: 24, scope: !10252)
!10356 = !{!4023, !3061, i64 208}
!10357 = !DILocation(line: 5517, column: 9, scope: !10252)
!10358 = !DILocation(line: 5517, column: 16, scope: !10252)
!10359 = !DILocation(line: 5518, column: 39, scope: !10252)
!10360 = !{!4023, !3109, i64 216}
!10361 = !DILocation(line: 5518, column: 21, scope: !10252)
!10362 = !DILocation(line: 5518, column: 9, scope: !10252)
!10363 = !DILocation(line: 5518, column: 19, scope: !10252)
!10364 = !DILocation(line: 5519, column: 35, scope: !10252)
!10365 = !{!4023, !3109, i64 224}
!10366 = !DILocation(line: 5519, column: 17, scope: !10252)
!10367 = !DILocation(line: 5519, column: 9, scope: !10252)
!10368 = !DILocation(line: 5519, column: 15, scope: !10252)
!10369 = !DILocation(line: 5522, column: 25, scope: !10252)
!10370 = !{!4023, !3061, i64 24}
!10371 = !DILocation(line: 5522, column: 9, scope: !10252)
!10372 = !DILocation(line: 5522, column: 17, scope: !10252)
!10373 = !DILocation(line: 5523, column: 31, scope: !10252)
!10374 = !{!4023, !3061, i64 252}
!10375 = !DILocation(line: 5523, column: 9, scope: !10252)
!10376 = !DILocation(line: 5523, column: 23, scope: !10252)
!10377 = !DILocation(line: 5526, column: 37, scope: !10252)
!10378 = !{!4023, !3109, i64 272}
!10379 = !DILocation(line: 5526, column: 19, scope: !10252)
!10380 = !DILocation(line: 5526, column: 9, scope: !10252)
!10381 = !DILocation(line: 5526, column: 17, scope: !10252)
!10382 = !DILocation(line: 5527, column: 25, scope: !10252)
!10383 = !{!4023, !3110, i64 280}
!10384 = !DILocation(line: 5527, column: 9, scope: !10252)
!10385 = !DILocation(line: 5527, column: 17, scope: !10252)
!10386 = !DILocation(line: 5530, column: 36, scope: !10252)
!10387 = !{!4023, !3109, i64 304}
!10388 = !DILocation(line: 5530, column: 18, scope: !10252)
!10389 = !DILocation(line: 5530, column: 9, scope: !10252)
!10390 = !DILocation(line: 5530, column: 16, scope: !10252)
!10391 = !DILocation(line: 5531, column: 36, scope: !10252)
!10392 = !{!4023, !3109, i64 312}
!10393 = !DILocation(line: 5531, column: 18, scope: !10252)
!10394 = !DILocation(line: 5531, column: 9, scope: !10252)
!10395 = !DILocation(line: 5531, column: 16, scope: !10252)
!10396 = !DILocation(line: 5534, column: 24, scope: !10252)
!10397 = !{!4023, !3110, i64 32}
!10398 = !DILocation(line: 5534, column: 9, scope: !10252)
!10399 = !DILocation(line: 5534, column: 16, scope: !10252)
!10400 = !DILocation(line: 5535, column: 29, scope: !10252)
!10401 = !{!4023, !3061, i64 40}
!10402 = !DILocation(line: 5535, column: 9, scope: !10252)
!10403 = !DILocation(line: 5535, column: 21, scope: !10252)
!10404 = !DILocation(line: 5536, column: 24, scope: !10252)
!10405 = !{!4023, !3061, i64 44}
!10406 = !DILocation(line: 5536, column: 9, scope: !10252)
!10407 = !DILocation(line: 5536, column: 16, scope: !10252)
!10408 = !DILocation(line: 5537, column: 29, scope: !10252)
!10409 = !{!4023, !3061, i64 48}
!10410 = !DILocation(line: 5537, column: 9, scope: !10252)
!10411 = !DILocation(line: 5537, column: 21, scope: !10252)
!10412 = !DILocation(line: 5538, column: 36, scope: !10252)
!10413 = !{!4023, !3109, i64 56}
!10414 = !DILocation(line: 5538, column: 18, scope: !10252)
!10415 = !DILocation(line: 5538, column: 9, scope: !10252)
!10416 = !DILocation(line: 5538, column: 16, scope: !10252)
!10417 = !DILocation(line: 5539, column: 24, scope: !10252)
!10418 = !{!4023, !3110, i64 96}
!10419 = !DILocation(line: 5539, column: 9, scope: !10252)
!10420 = !DILocation(line: 5539, column: 16, scope: !10252)
!10421 = !DILocation(line: 5540, column: 24, scope: !10252)
!10422 = !{!4023, !3110, i64 64}
!10423 = !DILocation(line: 5540, column: 9, scope: !10252)
!10424 = !DILocation(line: 5540, column: 16, scope: !10252)
!10425 = !DILocation(line: 5541, column: 29, scope: !10252)
!10426 = !{!4023, !3061, i64 72}
!10427 = !DILocation(line: 5541, column: 9, scope: !10252)
!10428 = !DILocation(line: 5541, column: 21, scope: !10252)
!10429 = !DILocation(line: 5542, column: 36, scope: !10252)
!10430 = !{!4023, !3109, i64 80}
!10431 = !DILocation(line: 5542, column: 18, scope: !10252)
!10432 = !DILocation(line: 5542, column: 9, scope: !10252)
!10433 = !DILocation(line: 5542, column: 16, scope: !10252)
!10434 = !DILocation(line: 5543, column: 29, scope: !10252)
!10435 = !DILocation(line: 5543, column: 23, scope: !10252)
!10436 = !DILocation(line: 5544, column: 30, scope: !10252)
!10437 = !{!4023, !3109, i64 88}
!10438 = !DILocation(line: 5544, column: 12, scope: !10252)
!10439 = !DILocation(line: 5544, column: 45, scope: !10252)
!10440 = !DILocation(line: 5543, column: 9, scope: !10252)
!10441 = !DILocation(line: 5543, column: 21, scope: !10252)
!10442 = !DILocation(line: 5545, column: 24, scope: !10252)
!10443 = !{!4023, !3110, i64 104}
!10444 = !DILocation(line: 5545, column: 9, scope: !10252)
!10445 = !DILocation(line: 5545, column: 16, scope: !10252)
!10446 = !DILocation(line: 5547, column: 36, scope: !10252)
!10447 = !{!4023, !3109, i64 112}
!10448 = !DILocation(line: 5547, column: 18, scope: !10252)
!10449 = !DILocation(line: 5547, column: 9, scope: !10252)
!10450 = !DILocation(line: 5547, column: 16, scope: !10252)
!10451 = !DILocation(line: 5548, column: 36, scope: !10252)
!10452 = !{!4023, !3109, i64 120}
!10453 = !DILocation(line: 5548, column: 18, scope: !10252)
!10454 = !DILocation(line: 5548, column: 9, scope: !10252)
!10455 = !DILocation(line: 5548, column: 16, scope: !10252)
!10456 = !DILocation(line: 5550, column: 36, scope: !10252)
!10457 = !{!4023, !3109, i64 128}
!10458 = !DILocation(line: 5550, column: 18, scope: !10252)
!10459 = !DILocation(line: 5550, column: 9, scope: !10252)
!10460 = !DILocation(line: 5550, column: 16, scope: !10252)
!10461 = !DILocation(line: 5553, column: 36, scope: !10252)
!10462 = !{!4023, !3109, i64 296}
!10463 = !DILocation(line: 5553, column: 18, scope: !10252)
!10464 = !DILocation(line: 5553, column: 9, scope: !10252)
!10465 = !DILocation(line: 5553, column: 16, scope: !10252)
!10466 = !DILocation(line: 5558, column: 5, scope: !10252)
!10467 = !DILocation(line: 5561, column: 5, scope: !10252)
!10468 = !DILocation(line: 5562, column: 1, scope: !10252)
!10469 = !DILocation(line: 5457, column: 26, scope: !4053)
!10470 = !DILocation(line: 5460, column: 5, scope: !4053)
!10471 = !DILocation(line: 5463, column: 5, scope: !4053)
!10472 = !DILocation(line: 5464, column: 5, scope: !4053)
!10473 = !DILocation(line: 5466, column: 31, scope: !4053)
!10474 = !DILocation(line: 5466, column: 5, scope: !4053)
!10475 = !DILocation(line: 5467, column: 1, scope: !4053)
!10476 = distinct !DISubprogram(name: "fill_culopt_flags", scope: !3, file: !3, line: 6985, type: !10477, isLocal: false, isDefinition: true, scopeLine: 6986, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10479)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!1131, !1124, !1504}
!10479 = !{!10480, !10481, !10482, !10483}
!10480 = !DILocalVariable(name: "val", arg: 1, scope: !10476, file: !3, line: 6985, type: !1124)
!10481 = !DILocalVariable(name: "wp", arg: 2, scope: !10476, file: !3, line: 6985, type: !1504)
!10482 = !DILocalVariable(name: "p", scope: !10476, file: !3, line: 6987, type: !1124)
!10483 = !DILocalVariable(name: "culopt_flags_new", scope: !10476, file: !3, line: 6988, type: !1125)
!10484 = !DILocation(line: 6985, column: 27, scope: !10476)
!10485 = !DILocation(line: 6985, column: 39, scope: !10476)
!10486 = !DILocation(line: 6988, column: 12, scope: !10476)
!10487 = !DILocation(line: 6990, column: 13, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 6990, column: 9)
!10489 = !DILocation(line: 6990, column: 9, scope: !10476)
!10490 = !DILocation(line: 6991, column: 10, scope: !10488)
!10491 = !{!4020, !3109, i64 1120}
!10492 = !DILocation(line: 6987, column: 13, scope: !10476)
!10493 = !DILocation(line: 6991, column: 2, scope: !10488)
!10494 = !DILocation(line: 6994, column: 12, scope: !10476)
!10495 = !DILocation(line: 6994, column: 15, scope: !10476)
!10496 = !DILocation(line: 6994, column: 5, scope: !10476)
!10497 = !DILocation(line: 6996, column: 6, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 6996, column: 6)
!10499 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 6995, column: 5)
!10500 = !DILocation(line: 6996, column: 28, scope: !10498)
!10501 = !DILocation(line: 6996, column: 6, scope: !10499)
!10502 = !DILocation(line: 6998, column: 8, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 6997, column: 2)
!10504 = !DILocation(line: 6999, column: 23, scope: !10503)
!10505 = !DILocation(line: 7000, column: 2, scope: !10503)
!10506 = !DILocation(line: 7001, column: 11, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 7001, column: 11)
!10508 = !DILocation(line: 7001, column: 33, scope: !10507)
!10509 = !DILocation(line: 7001, column: 11, scope: !10498)
!10510 = !DILocation(line: 7003, column: 8, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 7002, column: 2)
!10512 = !DILocation(line: 7004, column: 23, scope: !10511)
!10513 = !DILocation(line: 7005, column: 2, scope: !10511)
!10514 = !DILocation(line: 7006, column: 11, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 7006, column: 11)
!10516 = !DILocation(line: 7006, column: 35, scope: !10515)
!10517 = !DILocation(line: 7006, column: 11, scope: !10507)
!10518 = !DILocation(line: 7008, column: 8, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 7007, column: 2)
!10520 = !DILocation(line: 7009, column: 23, scope: !10519)
!10521 = !DILocation(line: 7010, column: 2, scope: !10519)
!10522 = !DILocation(line: 7011, column: 11, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 7011, column: 11)
!10524 = !DILocation(line: 7011, column: 40, scope: !10523)
!10525 = !DILocation(line: 7011, column: 11, scope: !10515)
!10526 = !DILocation(line: 7013, column: 8, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 7012, column: 2)
!10528 = !DILocation(line: 7014, column: 23, scope: !10527)
!10529 = !DILocation(line: 7015, column: 2, scope: !10527)
!10530 = !DILocation(line: 7017, column: 6, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 7017, column: 6)
!10532 = !DILocation(line: 7017, column: 16, scope: !10531)
!10533 = !DILocation(line: 7019, column: 9, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 7019, column: 6)
!10535 = !DILocation(line: 7020, column: 6, scope: !10534)
!10536 = !DILocation(line: 7019, column: 6, scope: !10499)
!10537 = distinct !{!10537, !10496, !10538}
!10538 = !DILocation(line: 7021, column: 5, scope: !10476)
!10539 = !DILocation(line: 7024, column: 42, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 7024, column: 9)
!10541 = !DILocation(line: 7026, column: 9, scope: !10476)
!10542 = !DILocation(line: 7026, column: 26, scope: !10476)
!10543 = !{!4020, !3062, i64 3688}
!10544 = !DILocation(line: 7028, column: 5, scope: !10476)
!10545 = !DILocation(line: 7029, column: 1, scope: !10476)
!10546 = distinct !DISubprogram(name: "check_winopt", scope: !3, file: !3, line: 5578, type: !10547, isLocal: true, isDefinition: true, scopeLine: 5579, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10549)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{null, !10255}
!10549 = !{!10550}
!10550 = !DILocalVariable(name: "wop", arg: 1, scope: !10546, file: !3, line: 5578, type: !10255)
!10551 = !DILocation(line: 5578, column: 24, scope: !10546)
!10552 = !DILocation(line: 5581, column: 31, scope: !10546)
!10553 = !DILocation(line: 5581, column: 5, scope: !10546)
!10554 = !DILocation(line: 5582, column: 31, scope: !10546)
!10555 = !DILocation(line: 5582, column: 5, scope: !10546)
!10556 = !DILocation(line: 5583, column: 31, scope: !10546)
!10557 = !DILocation(line: 5583, column: 5, scope: !10546)
!10558 = !DILocation(line: 5585, column: 31, scope: !10546)
!10559 = !DILocation(line: 5585, column: 5, scope: !10546)
!10560 = !DILocation(line: 5586, column: 31, scope: !10546)
!10561 = !DILocation(line: 5586, column: 5, scope: !10546)
!10562 = !DILocation(line: 5588, column: 31, scope: !10546)
!10563 = !DILocation(line: 5588, column: 5, scope: !10546)
!10564 = !DILocation(line: 5591, column: 31, scope: !10546)
!10565 = !DILocation(line: 5591, column: 5, scope: !10546)
!10566 = !DILocation(line: 5594, column: 31, scope: !10546)
!10567 = !DILocation(line: 5594, column: 5, scope: !10546)
!10568 = !DILocation(line: 5597, column: 31, scope: !10546)
!10569 = !DILocation(line: 5597, column: 5, scope: !10546)
!10570 = !DILocation(line: 5600, column: 31, scope: !10546)
!10571 = !DILocation(line: 5600, column: 5, scope: !10546)
!10572 = !DILocation(line: 5603, column: 31, scope: !10546)
!10573 = !DILocation(line: 5603, column: 5, scope: !10546)
!10574 = !DILocation(line: 5604, column: 31, scope: !10546)
!10575 = !DILocation(line: 5604, column: 5, scope: !10546)
!10576 = !DILocation(line: 5607, column: 31, scope: !10546)
!10577 = !DILocation(line: 5607, column: 5, scope: !10546)
!10578 = !DILocation(line: 5610, column: 31, scope: !10546)
!10579 = !DILocation(line: 5610, column: 5, scope: !10546)
!10580 = !DILocation(line: 5611, column: 31, scope: !10546)
!10581 = !DILocation(line: 5611, column: 5, scope: !10546)
!10582 = !DILocation(line: 5614, column: 31, scope: !10546)
!10583 = !DILocation(line: 5614, column: 5, scope: !10546)
!10584 = !DILocation(line: 5616, column: 31, scope: !10546)
!10585 = !DILocation(line: 5616, column: 5, scope: !10546)
!10586 = !DILocation(line: 5617, column: 31, scope: !10546)
!10587 = !DILocation(line: 5617, column: 5, scope: !10546)
!10588 = !DILocation(line: 5618, column: 1, scope: !10546)
!10589 = distinct !DISubprogram(name: "clear_winopt", scope: !3, file: !3, line: 5624, type: !10547, isLocal: false, isDefinition: true, scopeLine: 5625, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10590)
!10590 = !{!10591}
!10591 = !DILocalVariable(name: "wop", arg: 1, scope: !10589, file: !3, line: 5624, type: !10255)
!10592 = !DILocation(line: 5624, column: 24, scope: !10589)
!10593 = !DILocation(line: 5627, column: 31, scope: !10589)
!10594 = !DILocation(line: 5627, column: 5, scope: !10589)
!10595 = !DILocation(line: 5628, column: 31, scope: !10589)
!10596 = !DILocation(line: 5628, column: 5, scope: !10589)
!10597 = !DILocation(line: 5629, column: 31, scope: !10589)
!10598 = !DILocation(line: 5629, column: 5, scope: !10589)
!10599 = !DILocation(line: 5631, column: 31, scope: !10589)
!10600 = !DILocation(line: 5631, column: 5, scope: !10589)
!10601 = !DILocation(line: 5632, column: 31, scope: !10589)
!10602 = !DILocation(line: 5632, column: 5, scope: !10589)
!10603 = !DILocation(line: 5634, column: 31, scope: !10589)
!10604 = !DILocation(line: 5634, column: 5, scope: !10589)
!10605 = !DILocation(line: 5637, column: 31, scope: !10589)
!10606 = !DILocation(line: 5637, column: 5, scope: !10589)
!10607 = !DILocation(line: 5640, column: 31, scope: !10589)
!10608 = !DILocation(line: 5640, column: 5, scope: !10589)
!10609 = !DILocation(line: 5642, column: 31, scope: !10589)
!10610 = !DILocation(line: 5642, column: 5, scope: !10589)
!10611 = !DILocation(line: 5644, column: 31, scope: !10589)
!10612 = !DILocation(line: 5644, column: 5, scope: !10589)
!10613 = !DILocation(line: 5647, column: 31, scope: !10589)
!10614 = !DILocation(line: 5647, column: 5, scope: !10589)
!10615 = !DILocation(line: 5650, column: 31, scope: !10589)
!10616 = !DILocation(line: 5650, column: 5, scope: !10589)
!10617 = !DILocation(line: 5653, column: 31, scope: !10589)
!10618 = !DILocation(line: 5653, column: 5, scope: !10589)
!10619 = !DILocation(line: 5654, column: 31, scope: !10589)
!10620 = !DILocation(line: 5654, column: 5, scope: !10589)
!10621 = !DILocation(line: 5657, column: 31, scope: !10589)
!10622 = !DILocation(line: 5657, column: 5, scope: !10589)
!10623 = !DILocation(line: 5660, column: 31, scope: !10589)
!10624 = !DILocation(line: 5660, column: 5, scope: !10589)
!10625 = !DILocation(line: 5661, column: 31, scope: !10589)
!10626 = !DILocation(line: 5661, column: 5, scope: !10589)
!10627 = !DILocation(line: 5663, column: 31, scope: !10589)
!10628 = !DILocation(line: 5663, column: 5, scope: !10589)
!10629 = !DILocation(line: 5664, column: 1, scope: !10589)
!10630 = distinct !DISubprogram(name: "buf_copy_options", scope: !3, file: !3, line: 5701, type: !10631, isLocal: false, isDefinition: true, scopeLine: 5702, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{null, !1358, !1131}
!10633 = !{!10634, !10635, !10636, !10637, !10638, !10639}
!10634 = !DILocalVariable(name: "buf", arg: 1, scope: !10630, file: !3, line: 5701, type: !1358)
!10635 = !DILocalVariable(name: "flags", arg: 2, scope: !10630, file: !3, line: 5701, type: !1131)
!10636 = !DILocalVariable(name: "should_copy", scope: !10630, file: !3, line: 5703, type: !1131)
!10637 = !DILocalVariable(name: "save_p_isk", scope: !10630, file: !3, line: 5704, type: !1124)
!10638 = !DILocalVariable(name: "dont_do_help", scope: !10630, file: !3, line: 5705, type: !1131)
!10639 = !DILocalVariable(name: "did_isk", scope: !10630, file: !3, line: 5706, type: !1131)
!10640 = !DILocation(line: 5701, column: 25, scope: !10630)
!10641 = !DILocation(line: 5701, column: 34, scope: !10630)
!10642 = !DILocation(line: 5703, column: 10, scope: !10630)
!10643 = !DILocation(line: 5704, column: 13, scope: !10630)
!10644 = !DILocation(line: 5706, column: 10, scope: !10630)
!10645 = !DILocation(line: 5712, column: 9, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 5712, column: 9)
!10647 = !DILocation(line: 5712, column: 15, scope: !10646)
!10648 = !DILocation(line: 5712, column: 9, scope: !10630)
!10649 = !DILocation(line: 5726, column: 7, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 5726, column: 6)
!10651 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5713, column: 5)
!10652 = !DILocation(line: 5726, column: 41, scope: !10650)
!10653 = !DILocation(line: 5726, column: 60, scope: !10650)
!10654 = !DILocation(line: 5726, column: 49, scope: !10650)
!10655 = !DILocation(line: 5727, column: 12, scope: !10650)
!10656 = !DILocation(line: 5727, column: 7, scope: !10650)
!10657 = !DILocation(line: 5728, column: 7, scope: !10650)
!10658 = !DILocation(line: 5729, column: 4, scope: !10650)
!10659 = !DILocation(line: 5729, column: 18, scope: !10650)
!10660 = !DILocation(line: 5729, column: 7, scope: !10650)
!10661 = !DILocation(line: 5729, column: 37, scope: !10650)
!10662 = !DILocation(line: 5726, column: 6, scope: !10651)
!10663 = !DILocation(line: 5732, column: 28, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 5732, column: 6)
!10665 = !DILocation(line: 5732, column: 18, scope: !10664)
!10666 = !DILocation(line: 5735, column: 6, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 5733, column: 2)
!10668 = !DILocation(line: 5680, column: 9, scope: !3042, inlinedAt: !10669)
!10669 = distinct !DILocation(line: 5736, column: 6, scope: !10667)
!10670 = !DILocation(line: 5678, column: 9, scope: !3042, inlinedAt: !10669)
!10671 = !DILocation(line: 5683, column: 10, scope: !10672, inlinedAt: !10669)
!10672 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 5683, column: 5)
!10673 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 5683, column: 18, scope: !10675, inlinedAt: !10669)
!10675 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 5683, column: 5)
!10676 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !10677)
!10677 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !10674)
!10678 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !10677)
!10679 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !10677)
!10680 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !10677)
!10681 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !10677)
!10682 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !10677)
!10683 = !DILocation(line: 5683, column: 5, scope: !10672, inlinedAt: !10669)
!10684 = !DILocation(line: 5684, column: 17, scope: !10685, inlinedAt: !10669)
!10685 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 5684, column: 6)
!10686 = !DILocation(line: 5684, column: 23, scope: !10685, inlinedAt: !10669)
!10687 = !DILocation(line: 5684, column: 6, scope: !10675, inlinedAt: !10669)
!10688 = !DILocation(line: 5685, column: 35, scope: !10685, inlinedAt: !10669)
!10689 = !DILocation(line: 5685, column: 6, scope: !10685, inlinedAt: !10669)
!10690 = !DILocation(line: 5685, column: 46, scope: !10685, inlinedAt: !10669)
!10691 = !DILocation(line: 5683, column: 40, scope: !10675, inlinedAt: !10669)
!10692 = !DILocation(line: 5683, column: 5, scope: !10675, inlinedAt: !10669)
!10693 = distinct !{!10693, !10694, !10695}
!10694 = !DILocation(line: 5683, column: 5, scope: !10672)
!10695 = !DILocation(line: 5685, column: 48, scope: !10672)
!10696 = !DILocation(line: 5741, column: 29, scope: !10667)
!10697 = !DILocation(line: 5741, column: 43, scope: !10667)
!10698 = !DILocation(line: 5741, column: 51, scope: !10667)
!10699 = !DILocation(line: 5741, column: 46, scope: !10667)
!10700 = !DILocation(line: 5742, column: 14, scope: !10667)
!10701 = !DILocation(line: 5742, column: 22, scope: !10667)
!10702 = !DILocation(line: 5743, column: 10, scope: !10667)
!10703 = !DILocation(line: 5745, column: 21, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 5744, column: 6)
!10705 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5743, column: 10)
!10706 = !{!3411, !3109, i64 7016}
!10707 = !DILocation(line: 5746, column: 16, scope: !10704)
!10708 = !DILocation(line: 5752, column: 10, scope: !10667)
!10709 = !DILocation(line: 5752, column: 16, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5752, column: 10)
!10711 = !DILocation(line: 5752, column: 11, scope: !10710)
!10712 = !DILocation(line: 5754, column: 3, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 5753, column: 6)
!10714 = !DILocation(line: 5755, column: 8, scope: !10713)
!10715 = !DILocation(line: 5755, column: 15, scope: !10713)
!10716 = !DILocation(line: 5756, column: 17, scope: !10713)
!10717 = !DILocation(line: 5756, column: 8, scope: !10713)
!10718 = !DILocation(line: 5756, column: 15, scope: !10713)
!10719 = !DILocation(line: 5757, column: 31, scope: !10713)
!10720 = !DILocation(line: 5757, column: 19, scope: !10713)
!10721 = !DILocation(line: 5757, column: 8, scope: !10713)
!10722 = !DILocation(line: 5757, column: 17, scope: !10713)
!10723 = !{!3411, !3109, i64 6968}
!10724 = !DILocation(line: 5758, column: 12, scope: !10713)
!10725 = !DILocation(line: 5758, column: 11, scope: !10713)
!10726 = !DILocation(line: 5758, column: 3, scope: !10713)
!10727 = !DILocation(line: 5763, column: 49, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 5759, column: 3)
!10729 = !DILocation(line: 5765, column: 50, scope: !10728)
!10730 = !DILocation(line: 5767, column: 30, scope: !10728)
!10731 = !DILocation(line: 5768, column: 3, scope: !10728)
!10732 = !DILocation(line: 0, scope: !10728)
!10733 = !{!3411, !3109, i64 6976}
!10734 = !DILocation(line: 5769, column: 19, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 5769, column: 7)
!10736 = !DILocation(line: 5769, column: 7, scope: !10713)
!10737 = !DILocation(line: 5770, column: 26, scope: !10735)
!10738 = !DILocation(line: 5770, column: 12, scope: !10735)
!10739 = !DILocation(line: 5770, column: 24, scope: !10735)
!10740 = !{!3411, !3061, i64 7652}
!10741 = !DILocation(line: 5770, column: 7, scope: !10735)
!10742 = !DILocation(line: 5771, column: 17, scope: !10713)
!10743 = !DILocation(line: 5771, column: 8, scope: !10713)
!10744 = !DILocation(line: 5771, column: 15, scope: !10713)
!10745 = !{!3411, !3109, i64 6840}
!10746 = !DILocation(line: 5772, column: 8, scope: !10713)
!10747 = !DILocation(line: 5772, column: 15, scope: !10713)
!10748 = !{!3411, !3109, i64 6848}
!10749 = !DILocation(line: 5773, column: 6, scope: !10713)
!10750 = !DILocation(line: 5775, column: 3, scope: !10710)
!10751 = !DILocation(line: 5777, column: 20, scope: !10667)
!10752 = !DILocation(line: 5777, column: 11, scope: !10667)
!10753 = !DILocation(line: 5777, column: 18, scope: !10667)
!10754 = !DILocation(line: 5778, column: 6, scope: !10667)
!10755 = !{i64 0, i64 4, !3060, i64 4, i64 4, !3060, i64 8, i64 8, !4248, i64 16, i64 4, !3060}
!10756 = !DILocation(line: 5779, column: 28, scope: !10667)
!10757 = !DILocation(line: 5779, column: 11, scope: !10667)
!10758 = !DILocation(line: 5779, column: 26, scope: !10667)
!10759 = !DILocation(line: 5780, column: 20, scope: !10667)
!10760 = !DILocation(line: 5780, column: 11, scope: !10667)
!10761 = !DILocation(line: 5780, column: 18, scope: !10667)
!10762 = !DILocation(line: 5781, column: 6, scope: !10667)
!10763 = !DILocation(line: 5782, column: 20, scope: !10667)
!10764 = !DILocation(line: 5782, column: 11, scope: !10667)
!10765 = !DILocation(line: 5782, column: 18, scope: !10667)
!10766 = !DILocation(line: 5783, column: 6, scope: !10667)
!10767 = !DILocation(line: 5784, column: 28, scope: !10667)
!10768 = !DILocation(line: 5784, column: 11, scope: !10667)
!10769 = !DILocation(line: 5784, column: 26, scope: !10667)
!10770 = !DILocation(line: 5785, column: 26, scope: !10667)
!10771 = !DILocation(line: 5785, column: 11, scope: !10667)
!10772 = !DILocation(line: 5785, column: 24, scope: !10667)
!10773 = !DILocation(line: 5786, column: 20, scope: !10667)
!10774 = !DILocation(line: 5786, column: 11, scope: !10667)
!10775 = !DILocation(line: 5786, column: 18, scope: !10667)
!10776 = !DILocation(line: 5787, column: 6, scope: !10667)
!10777 = !DILocation(line: 5788, column: 28, scope: !10667)
!10778 = !DILocation(line: 5788, column: 11, scope: !10667)
!10779 = !DILocation(line: 5788, column: 26, scope: !10667)
!10780 = !DILocation(line: 5789, column: 26, scope: !10667)
!10781 = !DILocation(line: 5789, column: 11, scope: !10667)
!10782 = !DILocation(line: 5789, column: 24, scope: !10667)
!10783 = !DILocation(line: 5790, column: 21, scope: !10667)
!10784 = !DILocation(line: 5790, column: 11, scope: !10667)
!10785 = !DILocation(line: 5790, column: 19, scope: !10667)
!10786 = !DILocation(line: 5791, column: 6, scope: !10667)
!10787 = !DILocation(line: 5792, column: 22, scope: !10667)
!10788 = !DILocation(line: 5792, column: 11, scope: !10667)
!10789 = !DILocation(line: 5792, column: 20, scope: !10667)
!10790 = !{!3411, !3061, i64 6836}
!10791 = !DILocation(line: 5793, column: 6, scope: !10667)
!10792 = !DILocation(line: 5794, column: 24, scope: !10667)
!10793 = !DILocation(line: 5794, column: 11, scope: !10667)
!10794 = !DILocation(line: 5794, column: 22, scope: !10667)
!10795 = !{!3411, !3061, i64 6948}
!10796 = !DILocation(line: 5795, column: 6, scope: !10667)
!10797 = !DILocation(line: 5796, column: 20, scope: !10667)
!10798 = !DILocation(line: 5796, column: 11, scope: !10667)
!10799 = !DILocation(line: 5796, column: 18, scope: !10667)
!10800 = !DILocation(line: 5797, column: 6, scope: !10667)
!10801 = !DILocation(line: 5798, column: 26, scope: !10667)
!10802 = !DILocation(line: 5798, column: 11, scope: !10667)
!10803 = !DILocation(line: 5798, column: 24, scope: !10667)
!10804 = !DILocation(line: 5799, column: 28, scope: !10667)
!10805 = !DILocation(line: 5799, column: 11, scope: !10667)
!10806 = !DILocation(line: 5799, column: 26, scope: !10667)
!10807 = !DILocation(line: 5800, column: 20, scope: !10667)
!10808 = !DILocation(line: 5800, column: 11, scope: !10667)
!10809 = !DILocation(line: 5800, column: 18, scope: !10667)
!10810 = !DILocation(line: 5801, column: 6, scope: !10667)
!10811 = !DILocation(line: 5802, column: 26, scope: !10667)
!10812 = !DILocation(line: 5802, column: 11, scope: !10667)
!10813 = !DILocation(line: 5802, column: 24, scope: !10667)
!10814 = !DILocation(line: 5803, column: 21, scope: !10667)
!10815 = !DILocation(line: 5803, column: 11, scope: !10667)
!10816 = !DILocation(line: 5803, column: 19, scope: !10667)
!10817 = !{!3411, !3061, i64 7008}
!10818 = !DILocation(line: 5804, column: 6, scope: !10667)
!10819 = !DILocation(line: 5805, column: 17, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5805, column: 10)
!10821 = !DILocation(line: 5805, column: 28, scope: !10820)
!10822 = !DILocation(line: 5805, column: 10, scope: !10667)
!10823 = !DILocation(line: 5806, column: 8, scope: !10820)
!10824 = !DILocation(line: 5806, column: 16, scope: !10820)
!10825 = !DILocation(line: 5806, column: 3, scope: !10820)
!10826 = !DILocation(line: 5809, column: 18, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 5808, column: 6)
!10828 = !DILocation(line: 5809, column: 8, scope: !10827)
!10829 = !DILocation(line: 5809, column: 16, scope: !10827)
!10830 = !DILocation(line: 5810, column: 3, scope: !10827)
!10831 = !DILocation(line: 5812, column: 33, scope: !10667)
!10832 = !DILocation(line: 5812, column: 21, scope: !10667)
!10833 = !DILocation(line: 5812, column: 11, scope: !10667)
!10834 = !DILocation(line: 5812, column: 19, scope: !10667)
!10835 = !{!3411, !3109, i64 6912}
!10836 = !DILocation(line: 5813, column: 6, scope: !10667)
!10837 = !DILocation(line: 5819, column: 33, scope: !10667)
!10838 = !DILocation(line: 5819, column: 21, scope: !10667)
!10839 = !DILocation(line: 5819, column: 11, scope: !10667)
!10840 = !DILocation(line: 5819, column: 19, scope: !10667)
!10841 = !{!3411, !3109, i64 6920}
!10842 = !DILocation(line: 5820, column: 6, scope: !10667)
!10843 = !DILocation(line: 5821, column: 33, scope: !10667)
!10844 = !DILocation(line: 5821, column: 21, scope: !10667)
!10845 = !DILocation(line: 5821, column: 11, scope: !10667)
!10846 = !DILocation(line: 5821, column: 19, scope: !10667)
!10847 = !{!3411, !3109, i64 6928}
!10848 = !DILocation(line: 5822, column: 6, scope: !10667)
!10849 = !DILocation(line: 5825, column: 33, scope: !10667)
!10850 = !DILocation(line: 5825, column: 21, scope: !10667)
!10851 = !DILocation(line: 5825, column: 11, scope: !10667)
!10852 = !DILocation(line: 5825, column: 19, scope: !10667)
!10853 = !{!3411, !3109, i64 6936}
!10854 = !DILocation(line: 5826, column: 6, scope: !10667)
!10855 = !DILocation(line: 5828, column: 21, scope: !10667)
!10856 = !DILocation(line: 5828, column: 11, scope: !10667)
!10857 = !DILocation(line: 5828, column: 19, scope: !10667)
!10858 = !DILocation(line: 5829, column: 6, scope: !10667)
!10859 = !DILocation(line: 5830, column: 29, scope: !10667)
!10860 = !DILocation(line: 5830, column: 11, scope: !10667)
!10861 = !DILocation(line: 5830, column: 27, scope: !10667)
!10862 = !DILocation(line: 5832, column: 34, scope: !10667)
!10863 = !DILocation(line: 5832, column: 22, scope: !10667)
!10864 = !DILocation(line: 5832, column: 11, scope: !10667)
!10865 = !DILocation(line: 5832, column: 20, scope: !10667)
!10866 = !DILocation(line: 5833, column: 6, scope: !10667)
!10867 = !DILocation(line: 5834, column: 10, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5834, column: 10)
!10869 = !DILocation(line: 5834, column: 30, scope: !10868)
!10870 = !DILocation(line: 5834, column: 27, scope: !10868)
!10871 = !DILocation(line: 5834, column: 17, scope: !10868)
!10872 = !DILocation(line: 5835, column: 3, scope: !10868)
!10873 = !DILocation(line: 5837, column: 23, scope: !10868)
!10874 = !DILocation(line: 5838, column: 30, scope: !10667)
!10875 = !DILocation(line: 5839, column: 8, scope: !10667)
!10876 = !DILocation(line: 5838, column: 11, scope: !10667)
!10877 = !DILocation(line: 5838, column: 28, scope: !10667)
!10878 = !DILocation(line: 5841, column: 20, scope: !10667)
!10879 = !DILocation(line: 5841, column: 11, scope: !10667)
!10880 = !DILocation(line: 5841, column: 18, scope: !10667)
!10881 = !{!3411, !3061, i64 7200}
!10882 = !DILocation(line: 5842, column: 6, scope: !10667)
!10883 = !DILocation(line: 5843, column: 33, scope: !10667)
!10884 = !DILocation(line: 5843, column: 21, scope: !10667)
!10885 = !DILocation(line: 5843, column: 11, scope: !10667)
!10886 = !DILocation(line: 5843, column: 19, scope: !10667)
!10887 = !{!3411, !3109, i64 6896}
!10888 = !DILocation(line: 5844, column: 6, scope: !10667)
!10889 = !DILocation(line: 5846, column: 33, scope: !10667)
!10890 = !DILocation(line: 5846, column: 21, scope: !10667)
!10891 = !DILocation(line: 5846, column: 11, scope: !10667)
!10892 = !DILocation(line: 5846, column: 19, scope: !10667)
!10893 = !{!3411, !3109, i64 6904}
!10894 = !DILocation(line: 5847, column: 6, scope: !10667)
!10895 = !DILocation(line: 5849, column: 32, scope: !10667)
!10896 = !DILocation(line: 5849, column: 20, scope: !10667)
!10897 = !DILocation(line: 5849, column: 11, scope: !10667)
!10898 = !DILocation(line: 5849, column: 18, scope: !10667)
!10899 = !{!3411, !3109, i64 6992}
!10900 = !DILocation(line: 5850, column: 6, scope: !10667)
!10901 = !DILocation(line: 5851, column: 33, scope: !10667)
!10902 = !DILocation(line: 5851, column: 21, scope: !10667)
!10903 = !DILocation(line: 5851, column: 11, scope: !10667)
!10904 = !DILocation(line: 5851, column: 19, scope: !10667)
!10905 = !{!3411, !3109, i64 7000}
!10906 = !DILocation(line: 5852, column: 6, scope: !10667)
!10907 = !DILocation(line: 5855, column: 32, scope: !10667)
!10908 = !DILocation(line: 5855, column: 20, scope: !10667)
!10909 = !DILocation(line: 5855, column: 11, scope: !10667)
!10910 = !DILocation(line: 5855, column: 18, scope: !10667)
!10911 = !{!3411, !3109, i64 7160}
!10912 = !DILocation(line: 5856, column: 6, scope: !10667)
!10913 = !DILocation(line: 5857, column: 33, scope: !10667)
!10914 = !DILocation(line: 5857, column: 21, scope: !10667)
!10915 = !DILocation(line: 5857, column: 11, scope: !10667)
!10916 = !DILocation(line: 5857, column: 19, scope: !10667)
!10917 = !{!3411, !3109, i64 7136}
!10918 = !DILocation(line: 5858, column: 6, scope: !10667)
!10919 = !DILocation(line: 5860, column: 20, scope: !10667)
!10920 = !DILocation(line: 5860, column: 11, scope: !10667)
!10921 = !DILocation(line: 5860, column: 18, scope: !10667)
!10922 = !{!3411, !3061, i64 7204}
!10923 = !DILocation(line: 5861, column: 6, scope: !10667)
!10924 = !DILocation(line: 5863, column: 20, scope: !10667)
!10925 = !DILocation(line: 5863, column: 11, scope: !10667)
!10926 = !DILocation(line: 5863, column: 18, scope: !10667)
!10927 = !{!3411, !3061, i64 6828}
!10928 = !DILocation(line: 5864, column: 6, scope: !10667)
!10929 = !DILocation(line: 5866, column: 21, scope: !10667)
!10930 = !DILocation(line: 5866, column: 11, scope: !10667)
!10931 = !DILocation(line: 5866, column: 19, scope: !10667)
!10932 = !{!3411, !3061, i64 6864}
!10933 = !DILocation(line: 5867, column: 6, scope: !10667)
!10934 = !DILocation(line: 5868, column: 34, scope: !10667)
!10935 = !DILocation(line: 5868, column: 22, scope: !10667)
!10936 = !DILocation(line: 5868, column: 11, scope: !10667)
!10937 = !DILocation(line: 5868, column: 20, scope: !10667)
!10938 = !{!3411, !3109, i64 6880}
!10939 = !DILocation(line: 5869, column: 6, scope: !10667)
!10940 = !DILocation(line: 5870, column: 34, scope: !10667)
!10941 = !DILocation(line: 5870, column: 22, scope: !10667)
!10942 = !DILocation(line: 5870, column: 11, scope: !10667)
!10943 = !DILocation(line: 5870, column: 20, scope: !10667)
!10944 = !{!3411, !3109, i64 6872}
!10945 = !DILocation(line: 5871, column: 6, scope: !10667)
!10946 = !DILocation(line: 5874, column: 20, scope: !10667)
!10947 = !DILocation(line: 5874, column: 11, scope: !10667)
!10948 = !DILocation(line: 5874, column: 18, scope: !10667)
!10949 = !{!3411, !3109, i64 6984}
!10950 = !DILocation(line: 5875, column: 20, scope: !10667)
!10951 = !DILocation(line: 5875, column: 11, scope: !10667)
!10952 = !DILocation(line: 5875, column: 18, scope: !10667)
!10953 = !{!3411, !3061, i64 7168}
!10954 = !DILocation(line: 5876, column: 6, scope: !10667)
!10955 = !DILocation(line: 5878, column: 34, scope: !10667)
!10956 = !DILocation(line: 5878, column: 22, scope: !10667)
!10957 = !DILocation(line: 5878, column: 11, scope: !10667)
!10958 = !DILocation(line: 5878, column: 20, scope: !10667)
!10959 = !{!3411, !3109, i64 6888}
!10960 = !DILocation(line: 5879, column: 6, scope: !10667)
!10961 = !DILocation(line: 5882, column: 22, scope: !10667)
!10962 = !DILocation(line: 5882, column: 11, scope: !10667)
!10963 = !DILocation(line: 5882, column: 20, scope: !10667)
!10964 = !{!3411, !3061, i64 7120}
!10965 = !DILocation(line: 5883, column: 6, scope: !10667)
!10966 = !DILocation(line: 5887, column: 21, scope: !10667)
!10967 = !DILocation(line: 5887, column: 11, scope: !10667)
!10968 = !DILocation(line: 5887, column: 19, scope: !10667)
!10969 = !{!3411, !3109, i64 7248}
!10970 = !DILocation(line: 5888, column: 21, scope: !10667)
!10971 = !DILocation(line: 5888, column: 11, scope: !10667)
!10972 = !DILocation(line: 5888, column: 19, scope: !10667)
!10973 = !{!3411, !3110, i64 7240}
!10974 = !DILocation(line: 5889, column: 6, scope: !10667)
!10975 = !DILocation(line: 5890, column: 11, scope: !10667)
!10976 = !DILocation(line: 5890, column: 15, scope: !10667)
!10977 = !DILocation(line: 5890, column: 25, scope: !10667)
!10978 = !{!3411, !3109, i64 9080}
!10979 = !DILocation(line: 5893, column: 37, scope: !10667)
!10980 = !DILocation(line: 5893, column: 25, scope: !10667)
!10981 = !DILocation(line: 5893, column: 15, scope: !10667)
!10982 = !DILocation(line: 5893, column: 23, scope: !10667)
!10983 = !{!3411, !3109, i64 9000}
!10984 = !DILocation(line: 5894, column: 6, scope: !10667)
!10985 = !DILocation(line: 5895, column: 12, scope: !10667)
!10986 = !DILocation(line: 5896, column: 37, scope: !10667)
!10987 = !DILocation(line: 5896, column: 25, scope: !10667)
!10988 = !DILocation(line: 5896, column: 15, scope: !10667)
!10989 = !DILocation(line: 5896, column: 23, scope: !10667)
!10990 = !{!3411, !3109, i64 9016}
!10991 = !DILocation(line: 5897, column: 6, scope: !10667)
!10992 = !DILocation(line: 5898, column: 37, scope: !10667)
!10993 = !DILocation(line: 5898, column: 25, scope: !10667)
!10994 = !DILocation(line: 5898, column: 15, scope: !10667)
!10995 = !DILocation(line: 5898, column: 23, scope: !10667)
!10996 = !{!3411, !3109, i64 9024}
!10997 = !DILocation(line: 5899, column: 6, scope: !10667)
!10998 = !DILocation(line: 5900, column: 37, scope: !10667)
!10999 = !DILocation(line: 5900, column: 25, scope: !10667)
!11000 = !DILocation(line: 5900, column: 15, scope: !10667)
!11001 = !DILocation(line: 5900, column: 23, scope: !10667)
!11002 = !{!3411, !3109, i64 9032}
!11003 = !DILocation(line: 5901, column: 6, scope: !10667)
!11004 = !DILocation(line: 5904, column: 34, scope: !10667)
!11005 = !DILocation(line: 5904, column: 22, scope: !10667)
!11006 = !DILocation(line: 5904, column: 11, scope: !10667)
!11007 = !DILocation(line: 5904, column: 20, scope: !10667)
!11008 = !{!3411, !3109, i64 7056}
!11009 = !DILocation(line: 5905, column: 6, scope: !10667)
!11010 = !DILocation(line: 5906, column: 34, scope: !10667)
!11011 = !DILocation(line: 5906, column: 22, scope: !10667)
!11012 = !DILocation(line: 5906, column: 11, scope: !10667)
!11013 = !DILocation(line: 5906, column: 20, scope: !10667)
!11014 = !{!3411, !3109, i64 7072}
!11015 = !DILocation(line: 5907, column: 6, scope: !10667)
!11016 = !DILocation(line: 5909, column: 20, scope: !10667)
!11017 = !DILocation(line: 5909, column: 11, scope: !10667)
!11018 = !DILocation(line: 5909, column: 18, scope: !10667)
!11019 = !DILocation(line: 5911, column: 33, scope: !10667)
!11020 = !DILocation(line: 5911, column: 21, scope: !10667)
!11021 = !DILocation(line: 5911, column: 11, scope: !10667)
!11022 = !DILocation(line: 5911, column: 19, scope: !10667)
!11023 = !{!3411, !3109, i64 7088}
!11024 = !DILocation(line: 5912, column: 6, scope: !10667)
!11025 = !DILocation(line: 5915, column: 33, scope: !10667)
!11026 = !DILocation(line: 5915, column: 21, scope: !10667)
!11027 = !DILocation(line: 5915, column: 11, scope: !10667)
!11028 = !DILocation(line: 5915, column: 19, scope: !10667)
!11029 = !{!3411, !3109, i64 7104}
!11030 = !DILocation(line: 5916, column: 6, scope: !10667)
!11031 = !DILocation(line: 5919, column: 33, scope: !10667)
!11032 = !DILocation(line: 5919, column: 21, scope: !10667)
!11033 = !DILocation(line: 5919, column: 11, scope: !10667)
!11034 = !DILocation(line: 5919, column: 19, scope: !10667)
!11035 = !{!3411, !3109, i64 7224}
!11036 = !DILocation(line: 5920, column: 6, scope: !10667)
!11037 = !DILocation(line: 5923, column: 36, scope: !10667)
!11038 = !DILocation(line: 5923, column: 24, scope: !10667)
!11039 = !DILocation(line: 5923, column: 11, scope: !10667)
!11040 = !DILocation(line: 5923, column: 22, scope: !10667)
!11041 = !{!3411, !3109, i64 7360}
!11042 = !DILocation(line: 5924, column: 6, scope: !10667)
!11043 = !DILocation(line: 5925, column: 11, scope: !10667)
!11044 = !DILocation(line: 5925, column: 24, scope: !10667)
!11045 = !{!3411, !3419, i64 4752}
!11046 = !DILocation(line: 5928, column: 22, scope: !10667)
!11047 = !DILocation(line: 5928, column: 11, scope: !10667)
!11048 = !DILocation(line: 5928, column: 20, scope: !10667)
!11049 = !{!3411, !3110, i64 7480}
!11050 = !DILocation(line: 5929, column: 6, scope: !10667)
!11051 = !DILocation(line: 5933, column: 26, scope: !10667)
!11052 = !DILocation(line: 5933, column: 11, scope: !10667)
!11053 = !DILocation(line: 5933, column: 24, scope: !10667)
!11054 = !DILocation(line: 5934, column: 6, scope: !10667)
!11055 = !DILocation(line: 5935, column: 26, scope: !10667)
!11056 = !DILocation(line: 5935, column: 11, scope: !10667)
!11057 = !DILocation(line: 5935, column: 24, scope: !10667)
!11058 = !DILocation(line: 5936, column: 6, scope: !10667)
!11059 = !DILocation(line: 5940, column: 11, scope: !10667)
!11060 = !DILocation(line: 5940, column: 18, scope: !10667)
!11061 = !DILocation(line: 5941, column: 11, scope: !10667)
!11062 = !DILocation(line: 5941, column: 18, scope: !10667)
!11063 = !DILocation(line: 5942, column: 21, scope: !10667)
!11064 = !DILocation(line: 5942, column: 11, scope: !10667)
!11065 = !DILocation(line: 5942, column: 19, scope: !10667)
!11066 = !DILocation(line: 5943, column: 11, scope: !10667)
!11067 = !DILocation(line: 5943, column: 23, scope: !10667)
!11068 = !{!3411, !3061, i64 6824}
!11069 = !DILocation(line: 5945, column: 11, scope: !10667)
!11070 = !DILocation(line: 5945, column: 18, scope: !10667)
!11071 = !DILocation(line: 5946, column: 11, scope: !10667)
!11072 = !DILocation(line: 5946, column: 18, scope: !10667)
!11073 = !DILocation(line: 5947, column: 11, scope: !10667)
!11074 = !DILocation(line: 5947, column: 19, scope: !10667)
!11075 = !DILocation(line: 5949, column: 11, scope: !10667)
!11076 = !DILocation(line: 5949, column: 18, scope: !10667)
!11077 = !DILocation(line: 5950, column: 11, scope: !10667)
!11078 = !DILocation(line: 5950, column: 18, scope: !10667)
!11079 = !DILocation(line: 5951, column: 11, scope: !10667)
!11080 = !DILocation(line: 5951, column: 20, scope: !10667)
!11081 = !DILocation(line: 5952, column: 11, scope: !10667)
!11082 = !DILocation(line: 5952, column: 20, scope: !10667)
!11083 = !DILocation(line: 5953, column: 11, scope: !10667)
!11084 = !DILocation(line: 5953, column: 18, scope: !10667)
!11085 = !DILocation(line: 5954, column: 11, scope: !10667)
!11086 = !DILocation(line: 5954, column: 22, scope: !10667)
!11087 = !{!3411, !3061, i64 7432}
!11088 = !DILocation(line: 5956, column: 11, scope: !10667)
!11089 = !DILocation(line: 5956, column: 19, scope: !10667)
!11090 = !DILocation(line: 5957, column: 11, scope: !10667)
!11091 = !DILocation(line: 5957, column: 19, scope: !10667)
!11092 = !DILocation(line: 5959, column: 34, scope: !10667)
!11093 = !DILocation(line: 5959, column: 22, scope: !10667)
!11094 = !DILocation(line: 5959, column: 11, scope: !10667)
!11095 = !DILocation(line: 5959, column: 20, scope: !10667)
!11096 = !{!3411, !3109, i64 7040}
!11097 = !DILocation(line: 5960, column: 6, scope: !10667)
!11098 = !DILocation(line: 5963, column: 22, scope: !10667)
!11099 = !DILocation(line: 5963, column: 11, scope: !10667)
!11100 = !DILocation(line: 5963, column: 20, scope: !10667)
!11101 = !DILocation(line: 5964, column: 11, scope: !10667)
!11102 = !DILocation(line: 5964, column: 19, scope: !10667)
!11103 = !DILocation(line: 5966, column: 32, scope: !10667)
!11104 = !DILocation(line: 5966, column: 20, scope: !10667)
!11105 = !DILocation(line: 5966, column: 11, scope: !10667)
!11106 = !DILocation(line: 5966, column: 18, scope: !10667)
!11107 = !{!3411, !3109, i64 7176}
!11108 = !DILocation(line: 5967, column: 6, scope: !10667)
!11109 = !DILocation(line: 5970, column: 23, scope: !10667)
!11110 = !DILocation(line: 5970, column: 11, scope: !10667)
!11111 = !DILocation(line: 5970, column: 21, scope: !10667)
!11112 = !DILocation(line: 5973, column: 11, scope: !10667)
!11113 = !DILocation(line: 5973, column: 18, scope: !10667)
!11114 = !DILocation(line: 5976, column: 21, scope: !10667)
!11115 = !DILocation(line: 5976, column: 11, scope: !10667)
!11116 = !DILocation(line: 5976, column: 19, scope: !10667)
!11117 = !DILocation(line: 5977, column: 6, scope: !10667)
!11118 = !DILocation(line: 5980, column: 11, scope: !10667)
!11119 = !DILocation(line: 5980, column: 18, scope: !10667)
!11120 = !DILocation(line: 5982, column: 11, scope: !10667)
!11121 = !DILocation(line: 5982, column: 20, scope: !10667)
!11122 = !DILocation(line: 5990, column: 10, scope: !10667)
!11123 = !DILocation(line: 5992, column: 8, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 5991, column: 6)
!11125 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5990, column: 10)
!11126 = !DILocation(line: 5992, column: 16, scope: !11124)
!11127 = !DILocation(line: 5994, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 5994, column: 7)
!11129 = !DILocation(line: 5994, column: 22, scope: !11128)
!11130 = !DILocation(line: 5994, column: 13, scope: !11128)
!11131 = !DILocation(line: 5994, column: 47, scope: !11128)
!11132 = !DILocation(line: 5994, column: 42, scope: !11128)
!11133 = !DILocation(line: 5994, column: 7, scope: !11124)
!11134 = !DILocation(line: 5995, column: 7, scope: !11128)
!11135 = !DILocation(line: 6026, column: 6, scope: !10651)
!11136 = !DILocation(line: 5997, column: 26, scope: !11128)
!11137 = !DILocation(line: 6002, column: 30, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 6001, column: 6)
!11139 = !DILocation(line: 6002, column: 18, scope: !11138)
!11140 = !DILocation(line: 6002, column: 8, scope: !11138)
!11141 = !DILocation(line: 6002, column: 16, scope: !11138)
!11142 = !DILocation(line: 6003, column: 3, scope: !11138)
!11143 = !DILocation(line: 6005, column: 17, scope: !11138)
!11144 = !DILocation(line: 6005, column: 8, scope: !11138)
!11145 = !DILocation(line: 6005, column: 15, scope: !11138)
!11146 = !DILocation(line: 6007, column: 30, scope: !11138)
!11147 = !DILocation(line: 6007, column: 18, scope: !11138)
!11148 = !DILocation(line: 6007, column: 8, scope: !11138)
!11149 = !DILocation(line: 6007, column: 16, scope: !11138)
!11150 = !DILocation(line: 6008, column: 3, scope: !11138)
!11151 = !DILocation(line: 6009, column: 7, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 6009, column: 7)
!11153 = !DILocation(line: 6009, column: 25, scope: !11152)
!11154 = !DILocation(line: 6009, column: 22, scope: !11152)
!11155 = !DILocation(line: 6009, column: 13, scope: !11152)
!11156 = !DILocation(line: 6009, column: 47, scope: !11152)
!11157 = !DILocation(line: 6009, column: 42, scope: !11152)
!11158 = !DILocation(line: 6009, column: 7, scope: !11138)
!11159 = !DILocation(line: 6010, column: 7, scope: !11152)
!11160 = !DILocation(line: 6012, column: 26, scope: !11152)
!11161 = !DILocation(line: 6014, column: 8, scope: !11138)
!11162 = !DILocation(line: 6014, column: 15, scope: !11138)
!11163 = !DILocation(line: 6015, column: 12, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 6015, column: 7)
!11165 = !DILocation(line: 6015, column: 7, scope: !11164)
!11166 = !DILocation(line: 6015, column: 22, scope: !11164)
!11167 = !DILocation(line: 6015, column: 7, scope: !11138)
!11168 = !DILocation(line: 6016, column: 7, scope: !11164)
!11169 = !DILocation(line: 6017, column: 17, scope: !11138)
!11170 = !DILocation(line: 6017, column: 8, scope: !11138)
!11171 = !DILocation(line: 6017, column: 15, scope: !11138)
!11172 = !DILocation(line: 6018, column: 3, scope: !11138)
!11173 = !DILocation(line: 6030, column: 5, scope: !10630)
!11174 = !DILocation(line: 6031, column: 9, scope: !10630)
!11175 = !DILocation(line: 6027, column: 27, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 6026, column: 6)
!11177 = !DILocation(line: 6032, column: 8, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 6031, column: 9)
!11179 = !DILocation(line: 6032, column: 2, scope: !11178)
!11180 = !DILocation(line: 6033, column: 1, scope: !10630)
!11181 = distinct !DISubprogram(name: "reset_modifiable", scope: !3, file: !3, line: 6039, type: !2735, isLocal: false, isDefinition: true, scopeLine: 6040, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11182)
!11182 = !{!11183}
!11183 = !DILocalVariable(name: "opt_idx", scope: !11181, file: !3, line: 6041, type: !1131)
!11184 = !DILocation(line: 6043, column: 5, scope: !11181)
!11185 = !DILocation(line: 6043, column: 13, scope: !11181)
!11186 = !DILocation(line: 6043, column: 20, scope: !11181)
!11187 = !DILocation(line: 6044, column: 10, scope: !11181)
!11188 = !DILocation(line: 6045, column: 15, scope: !11181)
!11189 = !DILocation(line: 6041, column: 10, scope: !11181)
!11190 = !DILocation(line: 6046, column: 17, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 6046, column: 9)
!11192 = !DILocation(line: 6046, column: 9, scope: !11181)
!11193 = !DILocation(line: 6047, column: 2, scope: !11191)
!11194 = !DILocation(line: 6047, column: 39, scope: !11191)
!11195 = !DILocation(line: 6048, column: 1, scope: !11181)
!11196 = distinct !DISubprogram(name: "set_iminsert_global", scope: !3, file: !3, line: 6054, type: !2735, isLocal: false, isDefinition: true, scopeLine: 6055, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!11197 = !DILocation(line: 6056, column: 18, scope: !11196)
!11198 = !DILocation(line: 6056, column: 26, scope: !11196)
!11199 = !DILocation(line: 6056, column: 16, scope: !11196)
!11200 = !DILocation(line: 6057, column: 1, scope: !11196)
!11201 = distinct !DISubprogram(name: "set_imsearch_global", scope: !3, file: !3, line: 6063, type: !2735, isLocal: false, isDefinition: true, scopeLine: 6064, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!11202 = !DILocation(line: 6065, column: 18, scope: !11201)
!11203 = !DILocation(line: 6065, column: 26, scope: !11201)
!11204 = !DILocation(line: 6065, column: 16, scope: !11201)
!11205 = !DILocation(line: 6066, column: 1, scope: !11201)
!11206 = distinct !DISubprogram(name: "set_context_in_set_cmd", scope: !3, file: !3, line: 6073, type: !11207, isLocal: false, isDefinition: true, scopeLine: 6077, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11209)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{null, !2904, !1124, !1131}
!11209 = !{!11210, !11211, !11212, !11213, !11214, !11215, !11216, !11217, !11218, !11219}
!11210 = !DILocalVariable(name: "xp", arg: 1, scope: !11206, file: !3, line: 6074, type: !2904)
!11211 = !DILocalVariable(name: "arg", arg: 2, scope: !11206, file: !3, line: 6075, type: !1124)
!11212 = !DILocalVariable(name: "opt_flags", arg: 3, scope: !11206, file: !3, line: 6076, type: !1131)
!11213 = !DILocalVariable(name: "nextchar", scope: !11206, file: !3, line: 6078, type: !1131)
!11214 = !DILocalVariable(name: "flags", scope: !11206, file: !3, line: 6079, type: !1309)
!11215 = !DILocalVariable(name: "opt_idx", scope: !11206, file: !3, line: 6080, type: !1131)
!11216 = !DILocalVariable(name: "p", scope: !11206, file: !3, line: 6081, type: !1124)
!11217 = !DILocalVariable(name: "s", scope: !11206, file: !3, line: 6082, type: !1124)
!11218 = !DILocalVariable(name: "is_term_option", scope: !11206, file: !3, line: 6083, type: !1131)
!11219 = !DILocalVariable(name: "key", scope: !11206, file: !3, line: 6084, type: !1131)
!11220 = !DILocation(line: 6074, column: 15, scope: !11206)
!11221 = !DILocation(line: 6075, column: 13, scope: !11206)
!11222 = !DILocation(line: 6076, column: 10, scope: !11206)
!11223 = !DILocation(line: 6079, column: 12, scope: !11206)
!11224 = !DILocation(line: 6080, column: 10, scope: !11206)
!11225 = !DILocation(line: 6083, column: 10, scope: !11206)
!11226 = !DILocation(line: 6086, column: 25, scope: !11206)
!11227 = !DILocation(line: 6088, column: 9, scope: !11206)
!11228 = !DILocation(line: 6088, column: 20, scope: !11206)
!11229 = !{!11230, !3061, i64 8}
!11230 = !{!"expand", !3109, i64 0, !3061, i64 8, !3061, i64 12, !3109, i64 16, !3111, i64 24, !3061, i64 48, !3061, i64 52, !3061, i64 56, !3061, i64 60, !3109, i64 64, !3109, i64 72}
!11231 = !DILocation(line: 6089, column: 9, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6089, column: 9)
!11233 = !DILocation(line: 6089, column: 14, scope: !11232)
!11234 = !DILocation(line: 6089, column: 9, scope: !11206)
!11235 = !DILocation(line: 6091, column: 6, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 6090, column: 5)
!11237 = !DILocation(line: 6091, column: 17, scope: !11236)
!11238 = !{!11230, !3109, i64 0}
!11239 = !DILocation(line: 6092, column: 2, scope: !11236)
!11240 = !DILocation(line: 6094, column: 15, scope: !11206)
!11241 = !DILocation(line: 6094, column: 13, scope: !11206)
!11242 = !DILocation(line: 6094, column: 27, scope: !11206)
!11243 = !DILocation(line: 6081, column: 13, scope: !11206)
!11244 = !DILocation(line: 6095, column: 9, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6095, column: 9)
!11246 = !DILocation(line: 6095, column: 12, scope: !11245)
!11247 = !DILocation(line: 6095, column: 19, scope: !11245)
!11248 = !DILocation(line: 6095, column: 26, scope: !11245)
!11249 = !DILocation(line: 6095, column: 22, scope: !11245)
!11250 = !DILocation(line: 6095, column: 31, scope: !11245)
!11251 = !DILocation(line: 6095, column: 9, scope: !11206)
!11252 = !DILocation(line: 6097, column: 21, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 6096, column: 5)
!11254 = !DILocation(line: 6097, column: 6, scope: !11253)
!11255 = !DILocation(line: 6097, column: 17, scope: !11253)
!11256 = !DILocation(line: 6098, column: 2, scope: !11253)
!11257 = !DILocation(line: 6100, column: 14, scope: !11206)
!11258 = !DILocation(line: 6100, column: 5, scope: !11206)
!11259 = !DILocation(line: 6104, column: 16, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 6104, column: 6)
!11261 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6101, column: 5)
!11262 = !DILocation(line: 6104, column: 6, scope: !11260)
!11263 = !DILocation(line: 6082, column: 13, scope: !11206)
!11264 = !DILocation(line: 6106, column: 28, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 6105, column: 2)
!11266 = !DILocation(line: 6106, column: 15, scope: !11265)
!11267 = !DILocation(line: 6106, column: 21, scope: !11265)
!11268 = distinct !{!11268, !11269, !11270}
!11269 = !DILocation(line: 6106, column: 6, scope: !11265)
!11270 = !DILocation(line: 6107, column: 5, scope: !11265)
!11271 = !DILocation(line: 6106, column: 24, scope: !11265)
!11272 = !DILocation(line: 6106, column: 33, scope: !11265)
!11273 = !DILocation(line: 6110, column: 9, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 6110, column: 6)
!11275 = !DILocation(line: 6110, column: 16, scope: !11274)
!11276 = !DILocation(line: 6110, column: 23, scope: !11274)
!11277 = !DILocation(line: 6110, column: 28, scope: !11274)
!11278 = !DILocation(line: 6110, column: 33, scope: !11274)
!11279 = !DILocation(line: 6110, column: 6, scope: !11261)
!11280 = !DILocation(line: 6112, column: 6, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11274, file: !3, line: 6111, column: 2)
!11282 = !DILocation(line: 6113, column: 6, scope: !11281)
!11283 = !DILocation(line: 6115, column: 2, scope: !11261)
!11284 = distinct !{!11284, !11258, !11285}
!11285 = !DILocation(line: 6116, column: 5, scope: !11206)
!11286 = !DILocation(line: 6117, column: 9, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6117, column: 9)
!11288 = !DILocation(line: 6117, column: 29, scope: !11287)
!11289 = !DILocation(line: 6117, column: 34, scope: !11287)
!11290 = !DILocation(line: 6117, column: 37, scope: !11287)
!11291 = !DILocation(line: 6117, column: 61, scope: !11287)
!11292 = !DILocation(line: 6117, column: 9, scope: !11206)
!11293 = !DILocation(line: 6119, column: 17, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 6118, column: 5)
!11295 = !DILocation(line: 6120, column: 4, scope: !11294)
!11296 = !DILocation(line: 6121, column: 5, scope: !11294)
!11297 = !DILocation(line: 6122, column: 9, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6122, column: 9)
!11299 = !DILocation(line: 6122, column: 30, scope: !11298)
!11300 = !DILocation(line: 6122, column: 9, scope: !11206)
!11301 = !DILocation(line: 6124, column: 17, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 6123, column: 5)
!11303 = !DILocation(line: 6125, column: 4, scope: !11302)
!11304 = !DILocation(line: 6126, column: 5, scope: !11302)
!11305 = !DILocation(line: 6127, column: 9, scope: !11206)
!11306 = !DILocation(line: 6127, column: 20, scope: !11206)
!11307 = !DILocation(line: 6128, column: 9, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6128, column: 9)
!11309 = !DILocation(line: 6128, column: 9, scope: !11206)
!11310 = !DILocation(line: 6130, column: 2, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 6129, column: 5)
!11312 = !DILocation(line: 6130, column: 9, scope: !11311)
!11313 = !DILocation(line: 6131, column: 12, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 6131, column: 10)
!11315 = distinct !{!11315, !11310, !11316}
!11316 = !DILocation(line: 6132, column: 3, scope: !11311)
!11317 = !DILocation(line: 6133, column: 33, scope: !11311)
!11318 = !DILocation(line: 6133, column: 8, scope: !11311)
!11319 = !DILocation(line: 6084, column: 10, scope: !11206)
!11320 = !DILocation(line: 6134, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 6134, column: 6)
!11322 = !DILocation(line: 6134, column: 6, scope: !11311)
!11323 = !DILocation(line: 6136, column: 21, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 6135, column: 2)
!11325 = !DILocation(line: 6137, column: 6, scope: !11324)
!11326 = !DILocation(line: 6139, column: 14, scope: !11311)
!11327 = !DILocation(line: 6139, column: 13, scope: !11311)
!11328 = !DILocation(line: 6141, column: 26, scope: !11311)
!11329 = !DILocation(line: 6141, column: 24, scope: !11311)
!11330 = !DILocation(line: 6142, column: 26, scope: !11311)
!11331 = !DILocation(line: 6143, column: 5, scope: !11311)
!11332 = !DILocation(line: 6146, column: 21, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 6146, column: 6)
!11334 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 6145, column: 5)
!11335 = !DILocation(line: 6146, column: 26, scope: !11333)
!11336 = !DILocation(line: 6146, column: 6, scope: !11334)
!11337 = !DILocation(line: 6148, column: 8, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 6147, column: 2)
!11339 = !DILocation(line: 6149, column: 10, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 6149, column: 10)
!11341 = !DILocation(line: 6149, column: 13, scope: !11340)
!11342 = !DILocation(line: 6150, column: 3, scope: !11340)
!11343 = !DILocation(line: 6149, column: 10, scope: !11338)
!11344 = !DILocation(line: 6151, column: 10, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 6151, column: 10)
!11346 = !DILocation(line: 6151, column: 13, scope: !11345)
!11347 = !DILocation(line: 6151, column: 10, scope: !11338)
!11348 = !DILocation(line: 6153, column: 18, scope: !11338)
!11349 = !DILocation(line: 6153, column: 17, scope: !11338)
!11350 = !DILocation(line: 6155, column: 30, scope: !11338)
!11351 = !DILocation(line: 6155, column: 28, scope: !11338)
!11352 = !DILocation(line: 6156, column: 30, scope: !11338)
!11353 = !DILocation(line: 6157, column: 2, scope: !11338)
!11354 = !DILocation(line: 6161, column: 13, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 6159, column: 2)
!11356 = !DILocation(line: 6161, column: 37, scope: !11355)
!11357 = !DILocation(line: 6161, column: 50, scope: !11355)
!11358 = distinct !{!11358, !11359, !11360}
!11359 = !DILocation(line: 6161, column: 6, scope: !11355)
!11360 = !DILocation(line: 6162, column: 4, scope: !11355)
!11361 = !DILocation(line: 6163, column: 13, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 6163, column: 10)
!11363 = !DILocation(line: 6163, column: 10, scope: !11355)
!11364 = !DILocation(line: 6166, column: 9, scope: !11355)
!11365 = !DILocation(line: 6167, column: 16, scope: !11355)
!11366 = !DILocation(line: 6168, column: 9, scope: !11355)
!11367 = !DILocation(line: 6169, column: 18, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 6169, column: 10)
!11369 = !DILocation(line: 6169, column: 24, scope: !11368)
!11370 = !DILocation(line: 6169, column: 27, scope: !11368)
!11371 = !DILocation(line: 6169, column: 44, scope: !11368)
!11372 = !DILocation(line: 6169, column: 48, scope: !11368)
!11373 = !DILocation(line: 6169, column: 10, scope: !11355)
!11374 = !DILocation(line: 6171, column: 18, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 6170, column: 6)
!11376 = !DILocation(line: 6172, column: 3, scope: !11375)
!11377 = !DILocation(line: 6174, column: 31, scope: !11355)
!11378 = !DILocation(line: 6175, column: 16, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 6175, column: 10)
!11380 = !DILocation(line: 6175, column: 10, scope: !11355)
!11381 = !DILocation(line: 6177, column: 18, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 6176, column: 6)
!11383 = !DILocation(line: 6178, column: 3, scope: !11382)
!11384 = !DILocation(line: 6078, column: 10, scope: !11206)
!11385 = !DILocation(line: 6183, column: 26, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6183, column: 9)
!11387 = !DILocation(line: 6183, column: 68, scope: !11386)
!11388 = !DILocation(line: 6183, column: 73, scope: !11386)
!11389 = !DILocation(line: 6183, column: 9, scope: !11206)
!11390 = !DILocation(line: 6188, column: 26, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6188, column: 9)
!11392 = !DILocation(line: 6189, column: 16, scope: !11391)
!11393 = !DILocation(line: 6189, column: 27, scope: !11391)
!11394 = !DILocation(line: 6188, column: 9, scope: !11206)
!11395 = !DILocation(line: 6191, column: 17, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 6190, column: 5)
!11397 = !DILocation(line: 6192, column: 2, scope: !11396)
!11398 = !DILocation(line: 6194, column: 51, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6194, column: 9)
!11400 = !DILocation(line: 6194, column: 56, scope: !11399)
!11401 = !DILocation(line: 6194, column: 9, scope: !11206)
!11402 = !DILocation(line: 6196, column: 17, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 6195, column: 5)
!11404 = !DILocation(line: 6197, column: 6, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 6197, column: 6)
!11406 = !DILocation(line: 6201, column: 17, scope: !11403)
!11407 = !DILocation(line: 6202, column: 2, scope: !11403)
!11408 = !DILocation(line: 6204, column: 20, scope: !11206)
!11409 = !DILocation(line: 6205, column: 9, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6205, column: 9)
!11411 = !DILocation(line: 6205, column: 34, scope: !11410)
!11412 = !DILocation(line: 6205, column: 24, scope: !11410)
!11413 = !DILocation(line: 6208, column: 20, scope: !11206)
!11414 = !DILocation(line: 6210, column: 15, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6210, column: 9)
!11416 = !DILocation(line: 6210, column: 9, scope: !11206)
!11417 = !DILocation(line: 6212, column: 6, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 6211, column: 5)
!11419 = !DILocation(line: 6212, column: 23, scope: !11418)
!11420 = !DILocation(line: 6213, column: 8, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 6213, column: 6)
!11422 = !DILocation(line: 6214, column: 8, scope: !11421)
!11423 = !DILocation(line: 6214, column: 3, scope: !11421)
!11424 = !DILocation(line: 6215, column: 8, scope: !11421)
!11425 = !DILocation(line: 6216, column: 8, scope: !11421)
!11426 = !DILocation(line: 6217, column: 8, scope: !11421)
!11427 = !DILocation(line: 6219, column: 8, scope: !11421)
!11428 = !DILocation(line: 6222, column: 8, scope: !11421)
!11429 = !DILocation(line: 6226, column: 21, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 6225, column: 2)
!11431 = !DILocation(line: 6229, column: 7, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 6227, column: 10)
!11433 = !DILocation(line: 6232, column: 20, scope: !11432)
!11434 = !{!11230, !3061, i64 48}
!11435 = !DILocation(line: 6232, column: 3, scope: !11432)
!11436 = !DILocation(line: 6234, column: 20, scope: !11432)
!11437 = !DILocation(line: 6236, column: 13, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 6236, column: 11)
!11439 = !DILocation(line: 6236, column: 11, scope: !11421)
!11440 = !DILocation(line: 6238, column: 21, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 6237, column: 2)
!11442 = !DILocation(line: 6239, column: 2, scope: !11441)
!11443 = !DILocation(line: 6242, column: 21, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 6241, column: 2)
!11445 = !DILocation(line: 6244, column: 12, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 6244, column: 10)
!11447 = !DILocation(line: 6244, column: 10, scope: !11444)
!11448 = !DILocation(line: 6245, column: 20, scope: !11446)
!11449 = !DILocation(line: 6245, column: 3, scope: !11446)
!11450 = !DILocation(line: 6247, column: 20, scope: !11446)
!11451 = !DILocation(line: 6253, column: 20, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 6253, column: 5)
!11453 = !DILocation(line: 6253, column: 18, scope: !11452)
!11454 = !DILocation(line: 6253, column: 39, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 6253, column: 5)
!11456 = !DILocation(line: 6253, column: 5, scope: !11452)
!11457 = !DILocation(line: 6256, column: 6, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 6256, column: 6)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 6254, column: 5)
!11460 = !DILocation(line: 6256, column: 16, scope: !11458)
!11461 = !DILocation(line: 6259, column: 39, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 6257, column: 2)
!11463 = !DILocation(line: 6259, column: 15, scope: !11462)
!11464 = !DILocation(line: 6259, column: 32, scope: !11462)
!11465 = distinct !{!11465, !11466, !11467}
!11466 = !DILocation(line: 6259, column: 6, scope: !11462)
!11467 = !DILocation(line: 6260, column: 5, scope: !11462)
!11468 = !DILocation(line: 6259, column: 35, scope: !11462)
!11469 = !DILocation(line: 6259, column: 44, scope: !11462)
!11470 = !DILocation(line: 6261, column: 14, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 6261, column: 10)
!11472 = !DILocation(line: 6261, column: 21, scope: !11471)
!11473 = !DILocation(line: 6261, column: 29, scope: !11471)
!11474 = !DILocation(line: 6261, column: 42, scope: !11471)
!11475 = !DILocation(line: 6261, column: 57, scope: !11471)
!11476 = !DILocation(line: 6261, column: 63, scope: !11471)
!11477 = !DILocation(line: 6261, column: 68, scope: !11471)
!11478 = !DILocation(line: 6262, column: 7, scope: !11471)
!11479 = !DILocation(line: 6262, column: 14, scope: !11471)
!11480 = !DILocation(line: 6262, column: 21, scope: !11471)
!11481 = !DILocation(line: 6262, column: 49, scope: !11471)
!11482 = !DILocation(line: 6262, column: 54, scope: !11471)
!11483 = !DILocation(line: 6262, column: 59, scope: !11471)
!11484 = !DILocation(line: 6261, column: 10, scope: !11462)
!11485 = !DILocation(line: 6264, column: 18, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 6263, column: 6)
!11487 = !DILocation(line: 6265, column: 3, scope: !11486)
!11488 = !DILocation(line: 6271, column: 23, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 6271, column: 6)
!11490 = !DILocation(line: 6271, column: 27, scope: !11489)
!11491 = !DILocation(line: 6272, column: 13, scope: !11489)
!11492 = !DILocation(line: 6272, column: 16, scope: !11489)
!11493 = !DILocation(line: 6272, column: 39, scope: !11489)
!11494 = !DILocation(line: 6271, column: 6, scope: !11459)
!11495 = !DILocation(line: 6274, column: 25, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 6273, column: 2)
!11497 = !DILocation(line: 6274, column: 21, scope: !11496)
!11498 = !DILocation(line: 6275, column: 6, scope: !11496)
!11499 = distinct !{!11499, !11456, !11500}
!11500 = !DILocation(line: 6278, column: 5, scope: !11452)
!11501 = !DILocation(line: 6281, column: 1, scope: !11206)
!11502 = !DILocation(line: 6285, column: 15, scope: !2901)
!11503 = !DILocation(line: 6286, column: 17, scope: !2901)
!11504 = !DILocation(line: 6287, column: 11, scope: !2901)
!11505 = !DILocation(line: 6288, column: 15, scope: !2901)
!11506 = !DILocation(line: 6290, column: 10, scope: !2901)
!11507 = !DILocation(line: 6291, column: 10, scope: !2901)
!11508 = !DILocation(line: 6294, column: 10, scope: !2901)
!11509 = !DILocation(line: 6298, column: 5, scope: !2901)
!11510 = !DILocation(line: 6298, column: 12, scope: !2901)
!11511 = !DILocation(line: 6300, column: 25, scope: !2901)
!11512 = !{!4950, !3061, i64 168}
!11513 = !DILocation(line: 6300, column: 10, scope: !2901)
!11514 = !DILocation(line: 6296, column: 10, scope: !2901)
!11515 = !DILocation(line: 6305, column: 5, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 6305, column: 5)
!11517 = !DILocation(line: 6307, column: 18, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 6306, column: 5)
!11519 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 6305, column: 5)
!11520 = !DILocation(line: 6308, column: 10, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 6308, column: 6)
!11522 = !DILocation(line: 6308, column: 21, scope: !11521)
!11523 = !DILocation(line: 6308, column: 6, scope: !11518)
!11524 = !DILocation(line: 6293, column: 10, scope: !2901)
!11525 = !DILocation(line: 6312, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 6312, column: 7)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 6310, column: 6)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 6310, column: 6)
!11529 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 6309, column: 2)
!11530 = !DILocation(line: 6312, column: 7, scope: !11527)
!11531 = !DILocation(line: 6314, column: 11, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 6313, column: 3)
!11533 = !DILocation(line: 6315, column: 14, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 6314, column: 11)
!11535 = !DILocation(line: 6315, column: 4, scope: !11534)
!11536 = !DILocation(line: 6317, column: 23, scope: !11534)
!11537 = !DILocation(line: 6317, column: 5, scope: !11534)
!11538 = !DILocation(line: 6317, column: 17, scope: !11534)
!11539 = !DILocation(line: 6317, column: 4, scope: !11534)
!11540 = !DILocation(line: 6317, column: 21, scope: !11534)
!11541 = !DILocation(line: 6292, column: 10, scope: !2901)
!11542 = !DILocation(line: 6320, column: 54, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 6320, column: 2)
!11544 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 6320, column: 2)
!11545 = !DILocation(line: 6295, column: 13, scope: !2901)
!11546 = !DILocation(line: 6320, column: 64, scope: !11543)
!11547 = !DILocation(line: 6320, column: 2, scope: !11544)
!11548 = !DILocation(line: 6323, column: 27, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 6323, column: 10)
!11550 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 6322, column: 2)
!11551 = !DILocation(line: 6323, column: 31, scope: !11549)
!11552 = !DILocation(line: 6323, column: 10, scope: !11550)
!11553 = !DILocation(line: 6325, column: 14, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 6325, column: 10)
!11555 = !DILocation(line: 6325, column: 25, scope: !11554)
!11556 = !DILocation(line: 6326, column: 8, scope: !11554)
!11557 = !DILocation(line: 6326, column: 30, scope: !11554)
!11558 = !DILocation(line: 6326, column: 36, scope: !11554)
!11559 = !DILocation(line: 6325, column: 10, scope: !11550)
!11560 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !11561)
!11561 = distinct !DILocation(line: 6328, column: 20, scope: !11550)
!11562 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !11563)
!11563 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !11561)
!11564 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !11563)
!11565 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !11563)
!11566 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !11563)
!11567 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !11563)
!11568 = !DILocation(line: 6329, column: 36, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 6329, column: 10)
!11570 = !DILocation(line: 6329, column: 22, scope: !11569)
!11571 = !DILocation(line: 6332, column: 10, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 6332, column: 10)
!11573 = !DILocation(line: 6333, column: 7, scope: !11572)
!11574 = !DILocation(line: 6333, column: 28, scope: !11572)
!11575 = !DILocation(line: 6333, column: 38, scope: !11572)
!11576 = !DILocation(line: 6334, column: 4, scope: !11572)
!11577 = !DILocation(line: 6334, column: 7, scope: !11572)
!11578 = !DILocation(line: 6332, column: 10, scope: !11550)
!11579 = !DILocation(line: 6337, column: 15, scope: !11572)
!11580 = !DILocation(line: 6339, column: 15, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 6338, column: 6)
!11582 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 6337, column: 15)
!11583 = !DILocation(line: 6340, column: 15, scope: !11581)
!11584 = !DILocation(line: 6341, column: 15, scope: !11581)
!11585 = !DILocation(line: 6342, column: 17, scope: !11581)
!11586 = !DILocation(line: 6342, column: 15, scope: !11581)
!11587 = !DILocation(line: 6343, column: 17, scope: !11581)
!11588 = !DILocation(line: 6343, column: 15, scope: !11581)
!11589 = !DILocation(line: 6344, column: 15, scope: !11581)
!11590 = !DILocation(line: 6345, column: 15, scope: !11581)
!11591 = !DILocation(line: 6346, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 6346, column: 7)
!11593 = !DILocation(line: 6352, column: 10, scope: !11550)
!11594 = !DILocation(line: 6354, column: 7, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 6353, column: 6)
!11596 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 6352, column: 10)
!11597 = !DILocation(line: 6356, column: 11, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 6355, column: 3)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 6354, column: 7)
!11600 = !DILocation(line: 6357, column: 12, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 6356, column: 11)
!11602 = !DILocation(line: 6357, column: 4, scope: !11601)
!11603 = !DILocation(line: 6359, column: 14, scope: !11601)
!11604 = !DILocation(line: 6362, column: 26, scope: !11599)
!11605 = !DILocation(line: 6362, column: 8, scope: !11599)
!11606 = !DILocation(line: 6362, column: 20, scope: !11599)
!11607 = !DILocation(line: 6362, column: 7, scope: !11599)
!11608 = !DILocation(line: 6362, column: 24, scope: !11599)
!11609 = !DILocation(line: 6321, column: 20, scope: !11543)
!11610 = distinct !{!11610, !11547, !11611}
!11611 = !DILocation(line: 6364, column: 2, scope: !11544)
!11612 = !DILocation(line: 6368, column: 10, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 6368, column: 6)
!11614 = !DILocation(line: 6368, column: 21, scope: !11613)
!11615 = !DILocation(line: 6368, column: 60, scope: !11613)
!11616 = !DILocation(line: 6368, column: 46, scope: !11613)
!11617 = !DILocation(line: 6370, column: 31, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 6370, column: 6)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 6370, column: 6)
!11620 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 6369, column: 2)
!11621 = !DILocation(line: 6370, column: 54, scope: !11618)
!11622 = !DILocation(line: 6370, column: 6, scope: !11619)
!11623 = !DILocation(line: 6372, column: 8, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 6372, column: 7)
!11625 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 6371, column: 6)
!11626 = !DILocation(line: 6372, column: 24, scope: !11624)
!11627 = !DILocation(line: 6372, column: 28, scope: !11624)
!11628 = !DILocation(line: 6372, column: 7, scope: !11625)
!11629 = !DILocation(line: 6375, column: 15, scope: !11625)
!11630 = !DILocation(line: 6376, column: 15, scope: !11625)
!11631 = !DILocation(line: 6377, column: 17, scope: !11625)
!11632 = !DILocation(line: 6377, column: 15, scope: !11625)
!11633 = !DILocation(line: 6378, column: 17, scope: !11625)
!11634 = !DILocation(line: 6378, column: 15, scope: !11625)
!11635 = !DILocation(line: 6379, column: 15, scope: !11625)
!11636 = !DILocation(line: 6382, column: 7, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 6382, column: 7)
!11638 = !DILocation(line: 6382, column: 7, scope: !11625)
!11639 = !DILocation(line: 6386, column: 19, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 6385, column: 3)
!11641 = !DILocation(line: 6387, column: 19, scope: !11640)
!11642 = !DILocation(line: 6388, column: 19, scope: !11640)
!11643 = !DILocation(line: 6389, column: 21, scope: !11640)
!11644 = !DILocation(line: 6389, column: 19, scope: !11640)
!11645 = !DILocation(line: 6390, column: 21, scope: !11640)
!11646 = !DILocation(line: 6390, column: 19, scope: !11640)
!11647 = !DILocation(line: 6391, column: 19, scope: !11640)
!11648 = !DILocation(line: 6392, column: 19, scope: !11640)
!11649 = !DILocation(line: 6394, column: 11, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 6394, column: 11)
!11651 = !DILocation(line: 6397, column: 7, scope: !11625)
!11652 = !DILocation(line: 6399, column: 11, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 6398, column: 3)
!11654 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 6397, column: 7)
!11655 = !DILocation(line: 6400, column: 12, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 6399, column: 11)
!11657 = !DILocation(line: 6400, column: 4, scope: !11656)
!11658 = !DILocation(line: 6402, column: 23, scope: !11656)
!11659 = !DILocation(line: 6402, column: 5, scope: !11656)
!11660 = !DILocation(line: 6402, column: 17, scope: !11656)
!11661 = !DILocation(line: 6402, column: 4, scope: !11656)
!11662 = !DILocation(line: 6402, column: 21, scope: !11656)
!11663 = !DILocation(line: 6370, column: 70, scope: !11618)
!11664 = distinct !{!11664, !11622, !11665}
!11665 = !DILocation(line: 6404, column: 6, scope: !11619)
!11666 = !DILocation(line: 6409, column: 22, scope: !11620)
!11667 = !DILocation(line: 6410, column: 31, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 6410, column: 6)
!11669 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 6410, column: 6)
!11670 = !DILocation(line: 6410, column: 54, scope: !11668)
!11671 = !DILocation(line: 6410, column: 6, scope: !11669)
!11672 = !DILocation(line: 6412, column: 15, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 6411, column: 6)
!11674 = !DILocation(line: 6413, column: 3, scope: !11673)
!11675 = !DILocation(line: 6414, column: 3, scope: !11673)
!11676 = !DILocation(line: 6416, column: 7, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 6416, column: 7)
!11678 = !DILocation(line: 6416, column: 7, scope: !11673)
!11679 = !DILocation(line: 6418, column: 11, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 6417, column: 3)
!11681 = !DILocation(line: 6419, column: 12, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 6418, column: 11)
!11683 = !DILocation(line: 6419, column: 4, scope: !11682)
!11684 = !DILocation(line: 6421, column: 23, scope: !11682)
!11685 = !DILocation(line: 6421, column: 5, scope: !11682)
!11686 = !DILocation(line: 6421, column: 17, scope: !11682)
!11687 = !DILocation(line: 6421, column: 4, scope: !11682)
!11688 = !DILocation(line: 6421, column: 21, scope: !11682)
!11689 = !DILocation(line: 6410, column: 70, scope: !11668)
!11690 = distinct !{!11690, !11671, !11691}
!11691 = !DILocation(line: 6423, column: 6, scope: !11669)
!11692 = !DILocation(line: 6425, column: 11, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 6425, column: 6)
!11694 = !DILocation(line: 6425, column: 6, scope: !11518)
!11695 = !DILocation(line: 6427, column: 21, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 6427, column: 10)
!11697 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 6426, column: 2)
!11698 = !DILocation(line: 6427, column: 10, scope: !11697)
!11699 = !DILocation(line: 6429, column: 24, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 6429, column: 15)
!11701 = !DILocation(line: 6429, column: 15, scope: !11696)
!11702 = !DILocation(line: 6433, column: 14, scope: !11697)
!11703 = !DILocation(line: 6433, column: 12, scope: !11697)
!11704 = !DILocation(line: 6434, column: 16, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 6434, column: 10)
!11706 = !DILocation(line: 6434, column: 10, scope: !11697)
!11707 = !DILocation(line: 6436, column: 9, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 6435, column: 6)
!11709 = !DILocation(line: 6437, column: 3, scope: !11708)
!11710 = !DILocation(line: 6305, column: 31, scope: !11519)
!11711 = !DILocation(line: 6305, column: 25, scope: !11519)
!11712 = distinct !{!11712, !11515, !11713}
!11713 = !DILocation(line: 6440, column: 5, scope: !11516)
!11714 = !DILocation(line: 6442, column: 1, scope: !2901)
!11715 = distinct !DISubprogram(name: "ExpandOldSetting", scope: !3, file: !3, line: 6445, type: !11716, isLocal: false, isDefinition: true, scopeLine: 6446, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11718)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!1131, !1142, !2919}
!11718 = !{!11719, !11720, !11721, !11722}
!11719 = !DILocalVariable(name: "num_file", arg: 1, scope: !11715, file: !3, line: 6445, type: !1142)
!11720 = !DILocalVariable(name: "file", arg: 2, scope: !11715, file: !3, line: 6445, type: !2919)
!11721 = !DILocalVariable(name: "var", scope: !11715, file: !3, line: 6447, type: !1124)
!11722 = !DILocalVariable(name: "buf", scope: !11715, file: !3, line: 6448, type: !1124)
!11723 = !DILocation(line: 6445, column: 23, scope: !11715)
!11724 = !DILocation(line: 6445, column: 43, scope: !11715)
!11725 = !DILocation(line: 6447, column: 14, scope: !11715)
!11726 = !DILocation(line: 6450, column: 15, scope: !11715)
!11727 = !DILocation(line: 6451, column: 13, scope: !11715)
!11728 = !DILocation(line: 6451, column: 11, scope: !11715)
!11729 = !DILocation(line: 6452, column: 15, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 6452, column: 9)
!11731 = !DILocation(line: 6452, column: 9, scope: !11715)
!11732 = !DILocation(line: 6458, column: 9, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 6458, column: 9)
!11734 = !DILocation(line: 6458, column: 27, scope: !11733)
!11735 = !DILocation(line: 6458, column: 9, scope: !11715)
!11736 = !DILocation(line: 6460, column: 8, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 6459, column: 5)
!11738 = !DILocation(line: 6461, column: 10, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 6461, column: 6)
!11740 = !DILocation(line: 6461, column: 6, scope: !11737)
!11741 = !DILocation(line: 6462, column: 26, scope: !11739)
!11742 = !DILocation(line: 6462, column: 24, scope: !11739)
!11743 = !DILocation(line: 6462, column: 6, scope: !11739)
!11744 = !DILocation(line: 6465, column: 9, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 6465, column: 9)
!11746 = !DILocation(line: 6465, column: 27, scope: !11745)
!11747 = !DILocation(line: 6465, column: 9, scope: !11715)
!11748 = !DILocation(line: 6468, column: 23, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 6466, column: 5)
!11750 = !DILocation(line: 6468, column: 51, scope: !11749)
!11751 = !DILocation(line: 6468, column: 2, scope: !11749)
!11752 = !DILocation(line: 6469, column: 8, scope: !11749)
!11753 = !DILocation(line: 6470, column: 5, scope: !11749)
!11754 = !DILocation(line: 6471, column: 18, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 6471, column: 14)
!11756 = !DILocation(line: 6471, column: 14, scope: !11745)
!11757 = !DILocation(line: 6476, column: 36, scope: !11715)
!11758 = !DILocation(line: 6476, column: 11, scope: !11715)
!11759 = !DILocation(line: 6448, column: 14, scope: !11715)
!11760 = !DILocation(line: 6478, column: 13, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 6478, column: 9)
!11762 = !DILocation(line: 6478, column: 9, scope: !11715)
!11763 = !DILocation(line: 6480, column: 2, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 6480, column: 2)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 6480, column: 2)
!11766 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 6479, column: 5)
!11767 = !DILocation(line: 6480, column: 2, scope: !11765)
!11768 = !DILocation(line: 6480, column: 2, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 6480, column: 2)
!11770 = !DILocation(line: 6496, column: 14, scope: !11715)
!11771 = !DILocation(line: 6497, column: 15, scope: !11715)
!11772 = !DILocation(line: 6498, column: 5, scope: !11715)
!11773 = !DILocation(line: 6499, column: 1, scope: !11715)
!11774 = distinct !DISubprogram(name: "option_value2string", scope: !3, file: !3, line: 6506, type: !6494, isLocal: true, isDefinition: true, scopeLine: 6509, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11775)
!11775 = !{!11776, !11777, !11778, !11779}
!11776 = !DILocalVariable(name: "opp", arg: 1, scope: !11774, file: !3, line: 6507, type: !2848)
!11777 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !11774, file: !3, line: 6508, type: !1131)
!11778 = !DILocalVariable(name: "varp", scope: !11774, file: !3, line: 6510, type: !1124)
!11779 = !DILocalVariable(name: "wc", scope: !11780, file: !3, line: 6516, type: !1130)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 6515, column: 5)
!11781 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 6514, column: 9)
!11782 = !DILocation(line: 6507, column: 23, scope: !11774)
!11783 = !DILocation(line: 6508, column: 11, scope: !11774)
!11784 = !DILocation(line: 6512, column: 12, scope: !11774)
!11785 = !DILocation(line: 6510, column: 13, scope: !11774)
!11786 = !DILocation(line: 6514, column: 14, scope: !11781)
!11787 = !DILocation(line: 6514, column: 20, scope: !11781)
!11788 = !DILocation(line: 6514, column: 9, scope: !11774)
!11789 = !DILocation(line: 6516, column: 7, scope: !11780)
!11790 = !DILocation(line: 6551, column: 24, scope: !9836, inlinedAt: !11791)
!11791 = distinct !DILocation(line: 6518, column: 6, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 6518, column: 6)
!11793 = !DILocation(line: 6553, column: 23, scope: !9845, inlinedAt: !11791)
!11794 = !DILocation(line: 6553, column: 50, scope: !9845, inlinedAt: !11791)
!11795 = !DILocation(line: 6553, column: 33, scope: !9845, inlinedAt: !11791)
!11796 = !DILocation(line: 6523, column: 39, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 6520, column: 11)
!11798 = !DILocation(line: 6520, column: 11, scope: !11792)
!11799 = !DILocation(line: 6553, column: 10, scope: !9845, inlinedAt: !11791)
!11800 = !DILocation(line: 6555, column: 9, scope: !9849, inlinedAt: !11791)
!11801 = !DILocation(line: 6556, column: 6, scope: !9851, inlinedAt: !11791)
!11802 = !DILocation(line: 6556, column: 23, scope: !9851, inlinedAt: !11791)
!11803 = !DILocation(line: 6556, column: 26, scope: !9851, inlinedAt: !11791)
!11804 = !DILocation(line: 6556, column: 63, scope: !9851, inlinedAt: !11791)
!11805 = !DILocation(line: 6556, column: 6, scope: !9849, inlinedAt: !11791)
!11806 = !DILocation(line: 6519, column: 6, scope: !11792)
!11807 = !DILocation(line: 6520, column: 14, scope: !11797)
!11808 = !DILocation(line: 6521, column: 6, scope: !11797)
!11809 = !DILocation(line: 6523, column: 6, scope: !11797)
!11810 = !DILocation(line: 6527, column: 9, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 6526, column: 5)
!11812 = !DILocation(line: 6528, column: 11, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 6528, column: 6)
!11814 = !DILocation(line: 6528, column: 6, scope: !11811)
!11815 = !DILocation(line: 6529, column: 6, scope: !11813)
!11816 = !DILocation(line: 6529, column: 18, scope: !11813)
!11817 = !DILocation(line: 6532, column: 16, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 6532, column: 11)
!11819 = !DILocation(line: 6532, column: 20, scope: !11818)
!11820 = !DILocation(line: 6532, column: 40, scope: !11818)
!11821 = !DILocation(line: 6532, column: 43, scope: !11818)
!11822 = !DILocation(line: 6532, column: 11, scope: !11813)
!11823 = !DILocation(line: 6533, column: 6, scope: !11818)
!11824 = !DILocation(line: 6535, column: 22, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 6535, column: 11)
!11826 = !DILocation(line: 6535, column: 11, scope: !11818)
!11827 = !DILocation(line: 6536, column: 31, scope: !11825)
!11828 = !DILocation(line: 6536, column: 6, scope: !11825)
!11829 = !DILocation(line: 6538, column: 31, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 6538, column: 11)
!11831 = !DILocation(line: 6538, column: 11, scope: !11825)
!11832 = !DILocation(line: 6539, column: 21, scope: !11830)
!11833 = !DILocation(line: 6539, column: 27, scope: !11830)
!11834 = !DILocation(line: 6539, column: 6, scope: !11830)
!11835 = !DILocation(line: 6541, column: 18, scope: !11830)
!11836 = !DILocation(line: 6541, column: 6, scope: !11830)
!11837 = !DILocation(line: 6543, column: 1, scope: !11774)
!11838 = distinct !DISubprogram(name: "shortmess", scope: !3, file: !3, line: 6567, type: !3478, isLocal: false, isDefinition: true, scopeLine: 6568, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11839)
!11839 = !{!11840}
!11840 = !DILocalVariable(name: "x", arg: 1, scope: !11838, file: !3, line: 6567, type: !1131)
!11841 = !DILocation(line: 6567, column: 15, scope: !11838)
!11842 = !DILocation(line: 6569, column: 12, scope: !11838)
!11843 = !DILocation(line: 6569, column: 18, scope: !11838)
!11844 = !DILocation(line: 6569, column: 26, scope: !11838)
!11845 = !DILocation(line: 6570, column: 10, scope: !11838)
!11846 = !DILocation(line: 6570, column: 31, scope: !11838)
!11847 = !DILocation(line: 6571, column: 6, scope: !11838)
!11848 = !DILocation(line: 6571, column: 21, scope: !11838)
!11849 = !DILocation(line: 6571, column: 10, scope: !11838)
!11850 = !DILocation(line: 6571, column: 33, scope: !11838)
!11851 = !DILocation(line: 6572, column: 3, scope: !11838)
!11852 = !DILocation(line: 6572, column: 6, scope: !11838)
!11853 = !DILocation(line: 6572, column: 37, scope: !11838)
!11854 = !DILocation(line: 6569, column: 5, scope: !11838)
!11855 = distinct !DISubprogram(name: "vimrc_found", scope: !3, file: !3, line: 6750, type: !11856, isLocal: false, isDefinition: true, scopeLine: 6751, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11858)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{null, !1124, !1124}
!11858 = !{!11859, !11860, !11861, !11862, !11863}
!11859 = !DILocalVariable(name: "fname", arg: 1, scope: !11855, file: !3, line: 6750, type: !1124)
!11860 = !DILocalVariable(name: "envname", arg: 2, scope: !11855, file: !3, line: 6750, type: !1124)
!11861 = !DILocalVariable(name: "opt_idx", scope: !11855, file: !3, line: 6752, type: !1131)
!11862 = !DILocalVariable(name: "dofree", scope: !11855, file: !3, line: 6753, type: !1131)
!11863 = !DILocalVariable(name: "p", scope: !11855, file: !3, line: 6754, type: !1124)
!11864 = !DILocation(line: 6750, column: 21, scope: !11855)
!11865 = !DILocation(line: 6750, column: 36, scope: !11855)
!11866 = !DILocation(line: 6753, column: 5, scope: !11855)
!11867 = !DILocation(line: 6753, column: 10, scope: !11855)
!11868 = !DILocation(line: 6807, column: 24, scope: !4632, inlinedAt: !11869)
!11869 = distinct !DILocation(line: 6756, column: 10, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 6756, column: 9)
!11871 = !DILocation(line: 6811, column: 11, scope: !4632, inlinedAt: !11869)
!11872 = !DILocation(line: 6809, column: 9, scope: !4632, inlinedAt: !11869)
!11873 = !DILocation(line: 6812, column: 13, scope: !4641, inlinedAt: !11869)
!11874 = !DILocation(line: 6812, column: 9, scope: !4632, inlinedAt: !11869)
!11875 = !DILocation(line: 6814, column: 9, scope: !4644, inlinedAt: !11869)
!11876 = !DILocation(line: 6814, column: 22, scope: !4644, inlinedAt: !11869)
!11877 = !DILocation(line: 6756, column: 10, scope: !11870)
!11878 = !DILocation(line: 6756, column: 9, scope: !11855)
!11879 = !DILocation(line: 6758, column: 7, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 6757, column: 5)
!11881 = !DILocation(line: 6752, column: 10, scope: !11855)
!11882 = !DILocation(line: 6759, column: 7, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 6759, column: 2)
!11884 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !11885)
!11885 = distinct !DILocation(line: 6759, column: 21, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 6759, column: 2)
!11887 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !11885)
!11889 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !11888)
!11890 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !11888)
!11891 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !11888)
!11892 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !11888)
!11893 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !11888)
!11894 = !DILocation(line: 6759, column: 2, scope: !11883)
!11895 = !DILocation(line: 6760, column: 29, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 6760, column: 10)
!11897 = !DILocation(line: 6760, column: 35, scope: !11896)
!11898 = !DILocation(line: 6760, column: 10, scope: !11886)
!11899 = !DILocation(line: 6761, column: 3, scope: !11896)
!11900 = !DILocation(line: 6759, column: 55, scope: !11886)
!11901 = !DILocation(line: 6759, column: 2, scope: !11886)
!11902 = distinct !{!11902, !11894, !11903}
!11903 = !DILocation(line: 6761, column: 46, scope: !11883)
!11904 = !DILocation(line: 6762, column: 2, scope: !11880)
!11905 = !DILocation(line: 6763, column: 2, scope: !11880)
!11906 = !DILocation(line: 6764, column: 5, scope: !11880)
!11907 = !DILocation(line: 6766, column: 15, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 6766, column: 9)
!11909 = !DILocation(line: 6766, column: 9, scope: !11855)
!11910 = !DILocation(line: 6768, column: 6, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 6767, column: 5)
!11912 = !DILocation(line: 6754, column: 13, scope: !11855)
!11913 = !DILocation(line: 6769, column: 8, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 6769, column: 6)
!11915 = !DILocation(line: 6769, column: 6, scope: !11911)
!11916 = !DILocation(line: 6772, column: 10, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 6770, column: 2)
!11918 = !DILocation(line: 6773, column: 12, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11917, file: !3, line: 6773, column: 10)
!11920 = !DILocation(line: 6773, column: 10, scope: !11917)
!11921 = !DILocation(line: 6775, column: 3, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 6774, column: 6)
!11923 = !DILocation(line: 6776, column: 3, scope: !11922)
!11924 = !DILocation(line: 6777, column: 6, scope: !11922)
!11925 = !DILocation(line: 6779, column: 11, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 6779, column: 11)
!11927 = !DILocation(line: 6779, column: 11, scope: !11914)
!11928 = !DILocation(line: 6780, column: 6, scope: !11926)
!11929 = !DILocation(line: 6782, column: 1, scope: !11855)
!11930 = distinct !DISubprogram(name: "change_compatible", scope: !3, file: !3, line: 6788, type: !2863, isLocal: false, isDefinition: true, scopeLine: 6789, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11931)
!11931 = !{!11932, !11933}
!11932 = !DILocalVariable(name: "on", arg: 1, scope: !11930, file: !3, line: 6788, type: !1131)
!11933 = !DILocalVariable(name: "opt_idx", scope: !11930, file: !3, line: 6790, type: !1131)
!11934 = !DILocation(line: 6788, column: 23, scope: !11930)
!11935 = !DILocation(line: 6792, column: 9, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 6792, column: 9)
!11937 = !DILocation(line: 6792, column: 14, scope: !11936)
!11938 = !DILocation(line: 6792, column: 9, scope: !11930)
!11939 = !DILocation(line: 6794, column: 7, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 6793, column: 5)
!11941 = !DILocation(line: 6846, column: 13, scope: !6639, inlinedAt: !11942)
!11942 = distinct !DILocation(line: 6795, column: 2, scope: !11940)
!11943 = !DILocation(line: 6848, column: 10, scope: !6638, inlinedAt: !11942)
!11944 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !11945)
!11945 = distinct !DILocation(line: 6848, column: 24, scope: !6637, inlinedAt: !11942)
!11946 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !11945)
!11948 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !11947)
!11949 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !11947)
!11950 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !11947)
!11951 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !11947)
!11952 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !11947)
!11953 = !DILocation(line: 6848, column: 5, scope: !6638, inlinedAt: !11942)
!11954 = !DILocation(line: 6849, column: 29, scope: !6652, inlinedAt: !11942)
!11955 = !DILocation(line: 6849, column: 35, scope: !6652, inlinedAt: !11942)
!11956 = !DILocation(line: 6849, column: 47, scope: !6652, inlinedAt: !11942)
!11957 = !DILocation(line: 6849, column: 44, scope: !6652, inlinedAt: !11942)
!11958 = !DILocation(line: 6850, column: 32, scope: !6652, inlinedAt: !11942)
!11959 = !DILocation(line: 6850, column: 44, scope: !6652, inlinedAt: !11942)
!11960 = !DILocation(line: 6851, column: 6, scope: !6652, inlinedAt: !11942)
!11961 = !DILocation(line: 6848, column: 58, scope: !6637, inlinedAt: !11942)
!11962 = !DILocation(line: 6848, column: 5, scope: !6637, inlinedAt: !11942)
!11963 = !DILocation(line: 6852, column: 5, scope: !6639, inlinedAt: !11942)
!11964 = !DILocation(line: 6853, column: 5, scope: !6639, inlinedAt: !11942)
!11965 = !DILocation(line: 6796, column: 5, scope: !11940)
!11966 = !DILocation(line: 6797, column: 15, scope: !11930)
!11967 = !DILocation(line: 6790, column: 13, scope: !11930)
!11968 = !DILocation(line: 6798, column: 17, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 6798, column: 9)
!11970 = !DILocation(line: 6798, column: 9, scope: !11930)
!11971 = !DILocation(line: 6799, column: 2, scope: !11969)
!11972 = !DILocation(line: 6799, column: 19, scope: !11969)
!11973 = !DILocation(line: 6799, column: 25, scope: !11969)
!11974 = !DILocation(line: 6800, column: 1, scope: !11930)
!11975 = distinct !DISubprogram(name: "reset_option_was_set", scope: !3, file: !3, line: 6823, type: !2888, isLocal: false, isDefinition: true, scopeLine: 6824, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !11976)
!11976 = !{!11977, !11978}
!11977 = !DILocalVariable(name: "name", arg: 1, scope: !11975, file: !3, line: 6823, type: !1124)
!11978 = !DILocalVariable(name: "idx", scope: !11975, file: !3, line: 6825, type: !1131)
!11979 = !DILocation(line: 6823, column: 30, scope: !11975)
!11980 = !DILocation(line: 6825, column: 15, scope: !11975)
!11981 = !DILocation(line: 6825, column: 9, scope: !11975)
!11982 = !DILocation(line: 6827, column: 13, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 6827, column: 9)
!11984 = !DILocation(line: 6827, column: 9, scope: !11975)
!11985 = !DILocation(line: 6829, column: 2, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 6828, column: 5)
!11987 = !DILocation(line: 6829, column: 15, scope: !11986)
!11988 = !DILocation(line: 6829, column: 21, scope: !11986)
!11989 = !DILocation(line: 6830, column: 2, scope: !11986)
!11990 = !DILocation(line: 6833, column: 1, scope: !11975)
!11991 = !DILocation(line: 6865, column: 10, scope: !4028)
!11992 = !DILocation(line: 6868, column: 19, scope: !4034)
!11993 = !DILocation(line: 6870, column: 9, scope: !4037)
!11994 = !DILocation(line: 6870, column: 19, scope: !4037)
!11995 = !DILocation(line: 6870, column: 9, scope: !4028)
!11996 = !DILocation(line: 6864, column: 13, scope: !4028)
!11997 = !DILocation(line: 6871, column: 22, scope: !4042)
!11998 = !DILocation(line: 6872, column: 6, scope: !4042)
!11999 = !DILocation(line: 6872, column: 24, scope: !4042)
!12000 = !DILocation(line: 6871, column: 27, scope: !4042)
!12001 = !DILocation(line: 6873, column: 1, scope: !4028)
!12002 = distinct !DISubprogram(name: "can_bs", scope: !3, file: !3, line: 6880, type: !3478, isLocal: false, isDefinition: true, scopeLine: 6882, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12003)
!12003 = !{!12004}
!12004 = !DILocalVariable(name: "what", arg: 1, scope: !12002, file: !3, line: 6881, type: !1131)
!12005 = !DILocation(line: 6881, column: 10, scope: !12002)
!12006 = !DILocation(line: 6884, column: 14, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 6884, column: 9)
!12008 = !DILocation(line: 6884, column: 26, scope: !12007)
!12009 = !DILocation(line: 6884, column: 39, scope: !12007)
!12010 = !DILocation(line: 6884, column: 29, scope: !12007)
!12011 = !DILocation(line: 6884, column: 9, scope: !12002)
!12012 = !DILocation(line: 6887, column: 14, scope: !12002)
!12013 = !DILocation(line: 6887, column: 13, scope: !12002)
!12014 = !DILocation(line: 6887, column: 5, scope: !12002)
!12015 = !DILocation(line: 6890, column: 25, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 6888, column: 5)
!12017 = !DILocation(line: 6890, column: 12, scope: !12016)
!12018 = !DILocation(line: 6891, column: 25, scope: !12016)
!12019 = !DILocation(line: 6891, column: 12, scope: !12016)
!12020 = !DILocation(line: 6892, column: 12, scope: !12016)
!12021 = !DILocation(line: 6894, column: 12, scope: !12002)
!12022 = !DILocation(line: 6894, column: 35, scope: !12002)
!12023 = !DILocation(line: 6894, column: 5, scope: !12002)
!12024 = !DILocation(line: 6895, column: 1, scope: !12002)
!12025 = distinct !DISubprogram(name: "get_scrolloff_value", scope: !3, file: !3, line: 6902, type: !12026, isLocal: false, isDefinition: true, scopeLine: 6903, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!12026 = !DISubroutineType(types: !12027)
!12027 = !{!1130}
!12028 = !DILocation(line: 6904, column: 12, scope: !12025)
!12029 = !DILocation(line: 6904, column: 20, scope: !12025)
!12030 = !DILocation(line: 6904, column: 27, scope: !12025)
!12031 = !DILocation(line: 6904, column: 33, scope: !12025)
!12032 = !DILocation(line: 6904, column: 5, scope: !12025)
!12033 = distinct !DISubprogram(name: "get_sidescrolloff_value", scope: !3, file: !3, line: 6912, type: !12026, isLocal: false, isDefinition: true, scopeLine: 6913, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!12034 = !DILocation(line: 6914, column: 12, scope: !12033)
!12035 = !DILocation(line: 6914, column: 20, scope: !12033)
!12036 = !DILocation(line: 6914, column: 29, scope: !12033)
!12037 = !DILocation(line: 6914, column: 35, scope: !12033)
!12038 = !DILocation(line: 6914, column: 5, scope: !12033)
!12039 = distinct !DISubprogram(name: "get_bkc_value", scope: !3, file: !3, line: 6921, type: !12040, isLocal: false, isDefinition: true, scopeLine: 6922, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12042)
!12040 = !DISubroutineType(types: !12041)
!12041 = !{!1140, !1358}
!12042 = !{!12043}
!12043 = !DILocalVariable(name: "buf", arg: 1, scope: !12039, file: !3, line: 6921, type: !1358)
!12044 = !DILocation(line: 6921, column: 22, scope: !12039)
!12045 = !DILocation(line: 6923, column: 17, scope: !12039)
!12046 = !DILocation(line: 6923, column: 12, scope: !12039)
!12047 = !DILocation(line: 6923, column: 50, scope: !12039)
!12048 = !DILocation(line: 6923, column: 5, scope: !12039)
!12049 = distinct !DISubprogram(name: "get_showbreak_value", scope: !3, file: !3, line: 6931, type: !12050, isLocal: false, isDefinition: true, scopeLine: 6932, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12052)
!12050 = !DISubroutineType(types: !12051)
!12051 = !{!1124, !1504}
!12052 = !{!12053}
!12053 = !DILocalVariable(name: "win", arg: 1, scope: !12049, file: !3, line: 6931, type: !1504)
!12054 = !DILocation(line: 6931, column: 28, scope: !12049)
!12055 = !DILocation(line: 6933, column: 14, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 6933, column: 9)
!12057 = !DILocation(line: 6933, column: 22, scope: !12056)
!12058 = !DILocation(line: 6933, column: 30, scope: !12056)
!12059 = !DILocation(line: 6933, column: 33, scope: !12056)
!12060 = !DILocation(line: 6933, column: 47, scope: !12056)
!12061 = !DILocation(line: 6933, column: 9, scope: !12049)
!12062 = !DILocation(line: 6934, column: 9, scope: !12056)
!12063 = !DILocation(line: 6938, column: 1, scope: !12049)
!12064 = !DILocation(line: 6935, column: 9, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 6935, column: 9)
!12066 = !DILocation(line: 6935, column: 38, scope: !12065)
!12067 = !DILocation(line: 6936, column: 9, scope: !12065)
!12068 = !DILocation(line: 6935, column: 9, scope: !12049)
!12069 = distinct !DISubprogram(name: "get_winbuf_options", scope: !3, file: !3, line: 6946, type: !12070, isLocal: false, isDefinition: true, scopeLine: 6947, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12072)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!1296, !1131}
!12072 = !{!12073, !12074, !12075, !12076, !12080}
!12073 = !DILocalVariable(name: "bufopt", arg: 1, scope: !12069, file: !3, line: 6946, type: !1131)
!12074 = !DILocalVariable(name: "d", scope: !12069, file: !3, line: 6948, type: !1296)
!12075 = !DILocalVariable(name: "opt_idx", scope: !12069, file: !3, line: 6949, type: !1131)
!12076 = !DILocalVariable(name: "opt", scope: !12077, file: !3, line: 6957, type: !2848)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 6956, column: 5)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 6955, column: 5)
!12079 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6955, column: 5)
!12080 = !DILocalVariable(name: "varp", scope: !12081, file: !3, line: 6962, type: !1124)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !3, line: 6961, column: 2)
!12082 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 6959, column: 6)
!12083 = !DILocation(line: 6946, column: 24, scope: !12069)
!12084 = !DILocation(line: 6951, column: 9, scope: !12069)
!12085 = !DILocation(line: 6948, column: 13, scope: !12069)
!12086 = !DILocation(line: 6952, column: 11, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6952, column: 9)
!12088 = !DILocation(line: 6952, column: 9, scope: !12069)
!12089 = !DILocation(line: 6949, column: 10, scope: !12069)
!12090 = !DILocation(line: 6955, column: 10, scope: !12079)
!12091 = !DILocation(line: 4963, column: 22, scope: !3477, inlinedAt: !12092)
!12092 = distinct !DILocation(line: 6955, column: 24, scope: !12078)
!12093 = !DILocation(line: 4956, column: 16, scope: !3485, inlinedAt: !12094)
!12094 = distinct !DILocation(line: 4965, column: 12, scope: !3477, inlinedAt: !12092)
!12095 = !DILocation(line: 4956, column: 13, scope: !3485, inlinedAt: !12094)
!12096 = !DILocation(line: 4956, column: 28, scope: !3485, inlinedAt: !12094)
!12097 = !DILocation(line: 4956, column: 35, scope: !3485, inlinedAt: !12094)
!12098 = !DILocation(line: 4956, column: 38, scope: !3485, inlinedAt: !12094)
!12099 = !DILocation(line: 4956, column: 53, scope: !3485, inlinedAt: !12094)
!12100 = !DILocation(line: 6955, column: 5, scope: !12079)
!12101 = !DILocation(line: 6957, column: 27, scope: !12077)
!12102 = !DILocation(line: 6957, column: 20, scope: !12077)
!12103 = !DILocation(line: 6959, column: 14, scope: !12082)
!12104 = !DILocation(line: 6959, column: 29, scope: !12082)
!12105 = !DILocation(line: 6960, column: 7, scope: !12082)
!12106 = !DILocation(line: 6960, column: 34, scope: !12082)
!12107 = !DILocation(line: 6959, column: 6, scope: !12077)
!12108 = !DILocation(line: 6962, column: 21, scope: !12081)
!12109 = !DILocation(line: 6962, column: 14, scope: !12081)
!12110 = !DILocation(line: 6964, column: 15, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 6964, column: 10)
!12112 = !DILocation(line: 6964, column: 10, scope: !12081)
!12113 = !DILocation(line: 6966, column: 12, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 6966, column: 7)
!12115 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 6965, column: 6)
!12116 = !DILocation(line: 6966, column: 18, scope: !12114)
!12117 = !DILocation(line: 6966, column: 7, scope: !12115)
!12118 = !DILocation(line: 6967, column: 31, scope: !12114)
!12119 = !DILocation(line: 6967, column: 41, scope: !12114)
!12120 = !DILocation(line: 6967, column: 7, scope: !12114)
!12121 = !DILocation(line: 6968, column: 23, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 6968, column: 12)
!12123 = !DILocation(line: 6968, column: 12, scope: !12114)
!12124 = !DILocation(line: 6969, column: 41, scope: !12122)
!12125 = !DILocation(line: 6969, column: 7, scope: !12122)
!12126 = !DILocation(line: 6971, column: 41, scope: !12122)
!12127 = !DILocation(line: 6971, column: 7, scope: !12122)
!12128 = !DILocation(line: 6955, column: 58, scope: !12078)
!12129 = !DILocation(line: 6955, column: 5, scope: !12078)
!12130 = distinct !{!12130, !12100, !12131}
!12131 = !DILocation(line: 6974, column: 5, scope: !12079)
!12132 = !DILocation(line: 6977, column: 1, scope: !12069)
!12133 = distinct !DISubprogram(name: "magic_isset", scope: !3, file: !3, line: 7036, type: !12134, isLocal: false, isDefinition: true, scopeLine: 7037, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !4012)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!1131}
!12136 = !DILocation(line: 7038, column: 13, scope: !12133)
!12137 = !DILocation(line: 7038, column: 5, scope: !12133)
!12138 = !DILocation(line: 7041, column: 29, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 7039, column: 5)
!12140 = !DILocation(line: 7045, column: 9, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 7045, column: 9)
!12142 = !DILocation(line: 7048, column: 12, scope: !12133)
!12143 = !DILocation(line: 7045, column: 9, scope: !12133)
!12144 = !DILocation(line: 7049, column: 1, scope: !12133)
!12145 = distinct !DISubprogram(name: "apply_optionset_autocmd", scope: !3, file: !3, line: 2546, type: !12146, isLocal: true, isDefinition: true, scopeLine: 2553, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !12148)
!12146 = !DISubroutineType(types: !12147)
!12147 = !{null, !1131, !1130, !1130, !1130, !1130, !1127}
!12148 = !{!12149, !12150, !12151, !12152, !12153, !12154, !12155, !12157, !12158, !12159}
!12149 = !DILocalVariable(name: "opt_idx", arg: 1, scope: !12145, file: !3, line: 2547, type: !1131)
!12150 = !DILocalVariable(name: "opt_flags", arg: 2, scope: !12145, file: !3, line: 2548, type: !1130)
!12151 = !DILocalVariable(name: "oldval", arg: 3, scope: !12145, file: !3, line: 2549, type: !1130)
!12152 = !DILocalVariable(name: "oldval_g", arg: 4, scope: !12145, file: !3, line: 2550, type: !1130)
!12153 = !DILocalVariable(name: "newval", arg: 5, scope: !12145, file: !3, line: 2551, type: !1130)
!12154 = !DILocalVariable(name: "errmsg", arg: 6, scope: !12145, file: !3, line: 2552, type: !1127)
!12155 = !DILocalVariable(name: "buf_old", scope: !12145, file: !3, line: 2554, type: !12156)
!12156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 96, elements: !2798)
!12157 = !DILocalVariable(name: "buf_old_global", scope: !12145, file: !3, line: 2554, type: !12156)
!12158 = !DILocalVariable(name: "buf_new", scope: !12145, file: !3, line: 2554, type: !12156)
!12159 = !DILocalVariable(name: "buf_type", scope: !12145, file: !3, line: 2554, type: !12156)
!12160 = !DILocation(line: 2547, column: 6, scope: !12145)
!12161 = !DILocation(line: 2548, column: 7, scope: !12145)
!12162 = !DILocation(line: 2549, column: 7, scope: !12145)
!12163 = !DILocation(line: 2550, column: 7, scope: !12145)
!12164 = !DILocation(line: 2551, column: 7, scope: !12145)
!12165 = !DILocation(line: 2552, column: 8, scope: !12145)
!12166 = !DILocation(line: 2554, column: 5, scope: !12145)
!12167 = !DILocation(line: 2554, column: 12, scope: !12145)
!12168 = !DILocation(line: 2554, column: 25, scope: !12145)
!12169 = !DILocation(line: 2554, column: 45, scope: !12145)
!12170 = !DILocation(line: 2554, column: 58, scope: !12145)
!12171 = !DILocation(line: 2557, column: 9, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2557, column: 9)
!12173 = !DILocation(line: 2557, column: 28, scope: !12172)
!12174 = !DILocation(line: 2557, column: 18, scope: !12172)
!12175 = !DILocation(line: 2557, column: 40, scope: !12172)
!12176 = !DILocation(line: 2557, column: 39, scope: !12172)
!12177 = !DILocation(line: 2557, column: 72, scope: !12172)
!12178 = !DILocation(line: 2557, column: 9, scope: !12145)
!12179 = !DILocation(line: 2560, column: 5, scope: !12145)
!12180 = !DILocation(line: 2561, column: 5, scope: !12145)
!12181 = !DILocation(line: 2563, column: 5, scope: !12145)
!12182 = !DILocation(line: 2565, column: 16, scope: !12145)
!12183 = !DILocation(line: 2565, column: 5, scope: !12145)
!12184 = !DILocation(line: 2564, column: 5, scope: !12145)
!12185 = !DILocation(line: 2566, column: 5, scope: !12145)
!12186 = !DILocation(line: 2567, column: 5, scope: !12145)
!12187 = !DILocation(line: 2568, column: 5, scope: !12145)
!12188 = !DILocation(line: 2569, column: 9, scope: !12145)
!12189 = !DILocation(line: 2571, column: 2, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 2570, column: 5)
!12191 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2569, column: 9)
!12192 = !DILocation(line: 2572, column: 2, scope: !12190)
!12193 = !DILocation(line: 2573, column: 5, scope: !12190)
!12194 = !DILocation(line: 2574, column: 19, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2574, column: 9)
!12196 = !DILocation(line: 2574, column: 9, scope: !12145)
!12197 = !DILocation(line: 2576, column: 2, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 2575, column: 5)
!12199 = !DILocation(line: 2577, column: 2, scope: !12198)
!12200 = !DILocation(line: 2578, column: 5, scope: !12198)
!12201 = !DILocation(line: 2579, column: 20, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2579, column: 9)
!12203 = !DILocation(line: 2579, column: 48, scope: !12202)
!12204 = !DILocation(line: 2579, column: 9, scope: !12145)
!12205 = !DILocation(line: 2581, column: 2, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 2580, column: 5)
!12207 = !DILocation(line: 2582, column: 2, scope: !12206)
!12208 = !DILocation(line: 2583, column: 2, scope: !12206)
!12209 = !DILocation(line: 2584, column: 5, scope: !12206)
!12210 = !DILocation(line: 2585, column: 19, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2585, column: 9)
!12212 = !DILocation(line: 2585, column: 9, scope: !12145)
!12213 = !DILocation(line: 2587, column: 2, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12211, file: !3, line: 2586, column: 5)
!12215 = !DILocation(line: 2588, column: 2, scope: !12214)
!12216 = !DILocation(line: 2589, column: 5, scope: !12214)
!12217 = !DILocation(line: 2590, column: 47, scope: !12145)
!12218 = !DILocation(line: 2590, column: 64, scope: !12145)
!12219 = !DILocation(line: 2590, column: 5, scope: !12145)
!12220 = !DILocation(line: 2592, column: 5, scope: !12145)
!12221 = !DILocation(line: 2593, column: 1, scope: !12145)
